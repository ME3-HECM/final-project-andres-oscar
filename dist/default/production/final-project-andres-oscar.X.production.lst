

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Mar 11 15:55:11 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Generated 21/07/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   001C7E                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _dataFlag
    95   001C7E  01                 	db	1
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _TRISFbits	set	3974
   100   000000                     _TRISEbits	set	3973
   101   000000                     _TRISGbits	set	3975
   102   000000                     _CCPR2H	set	4006
   103   000000                     _CCPR1H	set	4010
   104   000000                     _SSP2CON2bits	set	3802
   105   000000                     _RX4PPS	set	3605
   106   000000                     _SSP2CLKPPS	set	3612
   107   000000                     _SSP2DATPPS	set	3613
   108   000000                     _ANSELDbits	set	3751
   109   000000                     _SSP2ADD	set	3798
   110   000000                     _SSP2CON1bits	set	3801
   111   000000                     _LATAbits	set	3961
   112   000000                     _LATEbits	set	3965
   113   000000                     _LATGbits	set	3967
   114   000000                     _TRISAbits	set	3969
   115   000000                     _TRISDbits	set	3972
   116   000000                     _LATCbits	set	3963
   117   000000                     _LATDbits	set	3964
   118   000000                     _RC4REG	set	3811
   119   000000                     _SP4BRGL	set	3813
   120   000000                     _TX4STAbits	set	3816
   121   000000                     _BAUD4CONbits	set	3817
   122   000000                     _SSP2CON2	set	3802
   123   000000                     _CCPR4H	set	3873
   124   000000                     _CCPR3H	set	3877
   125   000000                     _SSP2STAT	set	3800
   126   000000                     _ANSELFbits	set	3764
   127   000000                     _SSP2BUF	set	3797
   128   000000                     _PIE4bits	set	3629
   129   000000                     _PIR4bits	set	3639
   130   000000                     _RC0PPS	set	3682
   131   000000                     _RC7PPS	set	3689
   132   000000                     _RD5PPS	set	3695
   133   000000                     _RE2PPS	set	3700
   134   000000                     _RD6PPS	set	3696
   135   000000                     _CCP1CONbits	set	4011
   136   000000                     _CCPTMRS0bits	set	4013
   137   000000                     _T2PR	set	4028
   138   000000                     _T2CONbits	set	4029
   139   000000                     _CCP2CONbits	set	4007
   140   000000                     _CCP3CONbits	set	3878
   141   000000                     _ADREFbits	set	3928
   142   000000                     _CCP4CONbits	set	3874
   143   000000                     _TRISCbits	set	3971
   144   000000                     _ADPCH	set	3935
   145   000000                     _ADRESH	set	3940
   146   000000                     _ADCON0bits	set	3936
   147   000000                     _RE4PPS	set	3702
   148   000000                     _RG6PPS	set	3720
   149   000000                     _T2CLKCONbits	set	4031
   150   000000                     _T2HLTbits	set	4030
   151                           
   152                           	psect	smallconst
   153   000E00                     __psmallconst:
   154                           	callstack 0
   155   000E00  00                 	db	0
   156   000E01                     STR_2:
   157                           
   158                           ; BSR set to: 15
   159   000E01  56                 	db	86	;'V'
   160   000E02  6F                 	db	111	;'o'
   161   000E03  6C                 	db	108	;'l'
   162   000E04  74                 	db	116	;'t'
   163   000E05  61                 	db	97	;'a'
   164   000E06  67                 	db	103	;'g'
   165   000E07  65                 	db	101	;'e'
   166   000E08  20                 	db	32
   167   000E09  3D                 	db	61	;'='
   168   000E0A  20                 	db	32
   169   000E0B  25                 	db	37
   170   000E0C  64                 	db	100	;'d'
   171   000E0D  2E                 	db	46
   172   000E0E  25                 	db	37
   173   000E0F  30                 	db	48	;'0'
   174   000E10  32                 	db	50	;'2'
   175   000E11  64                 	db	100	;'d'
   176   000E12  2C                 	db	44
   177   000E13  20                 	db	32
   178   000E14  20                 	db	32
   179   000E15  00                 	db	0
   180   000E16                     STR_6:
   181                           
   182                           ; BSR set to: 15
   183   000E16  43                 	db	67	;'C'
   184   000E17  6C                 	db	108	;'l'
   185   000E18  65                 	db	101	;'e'
   186   000E19  61                 	db	97	;'a'
   187   000E1A  72                 	db	114	;'r'
   188   000E1B  3D                 	db	61	;'='
   189   000E1C  25                 	db	37
   190   000E1D  30                 	db	48	;'0'
   191   000E1E  35                 	db	53	;'5'
   192   000E1F  64                 	db	100	;'d'
   193   000E20  2C                 	db	44
   194   000E21  20                 	db	32
   195   000E22  20                 	db	32
   196   000E23  0A                 	db	10
   197   000E24  0A                 	db	10
   198   000E25  0D                 	db	13
   199   000E26  00                 	db	0
   200   000E27                     STR_1:
   201                           
   202                           ; BSR set to: 15
   203   000E27  41                 	db	65	;'A'
   204   000E28  6C                 	db	108	;'l'
   205   000E29  6C                 	db	108	;'l'
   206   000E2A  5F                 	db	95	;'_'
   207   000E2B  6C                 	db	108	;'l'
   208   000E2C  69                 	db	105	;'i'
   209   000E2D  67                 	db	103	;'g'
   210   000E2E  68                 	db	104	;'h'
   211   000E2F  74                 	db	116	;'t'
   212   000E30  73                 	db	115	;'s'
   213   000E31  3D                 	db	61	;'='
   214   000E32  25                 	db	37
   215   000E33  64                 	db	100	;'d'
   216   000E34  20                 	db	32
   217   000E35  0A                 	db	10
   218   000E36  0D                 	db	13
   219   000E37  00                 	db	0
   220   000E38                     STR_5:
   221                           
   222                           ; BSR set to: 15
   223   000E38  47                 	db	71	;'G'
   224   000E39  72                 	db	114	;'r'
   225   000E3A  65                 	db	101	;'e'
   226   000E3B  65                 	db	101	;'e'
   227   000E3C  6E                 	db	110	;'n'
   228   000E3D  3D                 	db	61	;'='
   229   000E3E  25                 	db	37
   230   000E3F  30                 	db	48	;'0'
   231   000E40  35                 	db	53	;'5'
   232   000E41  64                 	db	100	;'d'
   233   000E42  2C                 	db	44
   234   000E43  20                 	db	32
   235   000E44  20                 	db	32
   236   000E45  00                 	db	0
   237   000E46                     STR_4:
   238                           
   239                           ; BSR set to: 15
   240   000E46  42                 	db	66	;'B'
   241   000E47  6C                 	db	108	;'l'
   242   000E48  75                 	db	117	;'u'
   243   000E49  65                 	db	101	;'e'
   244   000E4A  3D                 	db	61	;'='
   245   000E4B  25                 	db	37
   246   000E4C  30                 	db	48	;'0'
   247   000E4D  35                 	db	53	;'5'
   248   000E4E  64                 	db	100	;'d'
   249   000E4F  2C                 	db	44
   250   000E50  20                 	db	32
   251   000E51  20                 	db	32
   252   000E52  00                 	db	0
   253   000E53                     STR_3:
   254                           
   255                           ; BSR set to: 15
   256   000E53  52                 	db	82	;'R'
   257   000E54  65                 	db	101	;'e'
   258   000E55  64                 	db	100	;'d'
   259   000E56  3D                 	db	61	;'='
   260   000E57  25                 	db	37
   261   000E58  30                 	db	48	;'0'
   262   000E59  35                 	db	53	;'5'
   263   000E5A  64                 	db	100	;'d'
   264   000E5B  2C                 	db	44
   265   000E5C  20                 	db	32
   266   000E5D  20                 	db	32
   267   000E5E  00                 	db	0
   268   000E5F  00                 	db	0	; dummy byte at the end
   269   000000                     
   270                           ; #config settings
   271                           
   272                           	psect	cinit
   273   001A90                     __pcinit:
   274                           	callstack 0
   275   001A90                     start_initialization:
   276                           	callstack 0
   277   001A90                     __initialization:
   278                           	callstack 0
   279                           
   280                           ; Initialize objects allocated to BANK0 (1 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   001A90  0E7E               	movlw	low __pidataBANK0
   283   001A92  6EF6               	movwf	tblptrl,c
   284   001A94  0E1C               	movlw	high __pidataBANK0
   285   001A96  6EF7               	movwf	tblptrh,c
   286   001A98  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   001A9A  6EF8               	movwf	tblptru,c
   288   001A9C  0009               	tblrd		*+	;fetch initializer
   289   001A9E  CFF5 F0FB          	movff	tablat,__pdataBANK0
   290                           
   291                           ; Clear objects allocated to BANK2 (60 bytes)
   292   001AA2  EE02  F000         	lfsr	0,__pbssBANK2
   293   001AA6  0E3C               	movlw	60
   294   001AA8                     clear_0:
   295   001AA8  6AEE               	clrf	postinc0,c
   296   001AAA  06E8               	decf	wreg,f,c
   297   001AAC  E1FD               	bnz	clear_0
   298                           
   299                           ; Clear objects allocated to BANK0 (95 bytes)
   300   001AAE  EE00  F060         	lfsr	0,__pbssBANK0
   301   001AB2  0E5F               	movlw	95
   302   001AB4                     clear_1:
   303   001AB4  6AEE               	clrf	postinc0,c
   304   001AB6  06E8               	decf	wreg,f,c
   305   001AB8  E1FD               	bnz	clear_1
   306                           
   307                           ; Clear objects allocated to COMRAM (5 bytes)
   308   001ABA  6A5F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   309   001ABC  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   310   001ABE  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   311   001AC0  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   312   001AC2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   313   001AC4                     end_of_initialization:
   314                           	callstack 0
   315   001AC4                     __end_of__initialization:
   316                           	callstack 0
   317   001AC4  0100               	movlb	0
   318   001AC6  EFAD  F00B         	goto	_main	;jump to C main() function
   319                           
   320                           	psect	bssCOMRAM
   321   00005B                     __pbssCOMRAM:
   322                           	callstack 0
   323   00005B                     _flags:
   324                           	callstack 0
   325   00005B                     	ds	1
   326   00005C                     _TxBufReadCnt:
   327                           	callstack 0
   328   00005C                     	ds	1
   329   00005D                     _TxBufWriteCnt:
   330                           	callstack 0
   331   00005D                     	ds	1
   332   00005E                     _RxBufReadCnt:
   333                           	callstack 0
   334   00005E                     	ds	1
   335   00005F                     _RxBufWriteCnt:
   336                           	callstack 0
   337   00005F                     	ds	1
   338                           
   339                           	psect	bssBANK0
   340   000060                     __pbssBANK0:
   341                           	callstack 0
   342   000060                     _ldrReadings:
   343                           	callstack 0
   344   000060                     	ds	20
   345   000074                     _EUSART4RXbuf:
   346                           	callstack 0
   347   000074                     	ds	20
   348   000088                     _width:
   349                           	callstack 0
   350   000088                     	ds	2
   351   00008A                     _prec:
   352                           	callstack 0
   353   00008A                     	ds	2
   354   00008C                     _readingIndex:
   355                           	callstack 0
   356   00008C                     	ds	1
   357   00008D                     _dbuf:
   358                           	callstack 0
   359   00008D                     	ds	32
   360   0000AD                     _motorR:
   361                           	callstack 0
   362   0000AD                     	ds	9
   363   0000B6                     _motorL:
   364                           	callstack 0
   365   0000B6                     	ds	9
   366                           
   367                           	psect	dataBANK0
   368   0000FB                     __pdataBANK0:
   369                           	callstack 0
   370   0000FB                     _dataFlag:
   371                           	callstack 0
   372   0000FB                     	ds	1
   373                           
   374                           	psect	bssBANK2
   375   000200                     __pbssBANK2:
   376                           	callstack 0
   377   000200                     _EUSART4TXbuf:
   378                           	callstack 0
   379   000200                     	ds	60
   380                           
   381                           	psect	cstackBANK1
   382   000100                     __pcstackBANK1:
   383                           	callstack 0
   384   000100                     send2USART@buf:
   385                           	callstack 0
   386                           
   387                           ; 50 bytes @ 0x0
   388   000100                     	ds	50
   389   000132                     send2USART@red_char:
   390                           	callstack 0
   391                           
   392                           ; 50 bytes @ 0x32
   393   000132                     	ds	50
   394   000164                     send2USART@blue_char:
   395                           	callstack 0
   396                           
   397                           ; 50 bytes @ 0x64
   398   000164                     	ds	50
   399   000196                     send2USART@green_char:
   400                           	callstack 0
   401                           
   402                           ; 50 bytes @ 0x96
   403   000196                     	ds	50
   404   0001C8                     send2USART@clear_char:
   405                           	callstack 0
   406                           
   407                           ; 50 bytes @ 0xC8
   408   0001C8                     	ds	50
   409                           
   410                           	psect	cstackBANK0
   411   0000BF                     __pcstackBANK0:
   412                           	callstack 0
   413   0000BF                     test@led_state:
   414                           	callstack 0
   415                           
   416                           ; 50 bytes @ 0x0
   417   0000BF                     	ds	50
   418   0000F1                     test@red:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x32
   422   0000F1                     	ds	2
   423   0000F3                     test@blue:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x34
   427   0000F3                     	ds	2
   428   0000F5                     test@green:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x36
   432   0000F5                     	ds	2
   433   0000F7                     test@clear:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x38
   437   0000F7                     	ds	2
   438   0000F9                     test@combo:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x3A
   442   0000F9                     	ds	2
   443                           
   444                           	psect	cstackCOMRAM
   445   000001                     __pcstackCOMRAM:
   446                           	callstack 0
   447   000001                     ??_I2C_2_Master_Idle:
   448   000001                     ?___wmul:
   449                           	callstack 0
   450   000001                     ?___awdiv:
   451                           	callstack 0
   452   000001                     ?___awmod:
   453                           	callstack 0
   454   000001                     sendCharSerial4@charToSend:
   455                           	callstack 0
   456   000001                     initDCmotorsPWM@PWMperiod:
   457                           	callstack 0
   458   000001                     ___wmul@multiplier:
   459                           	callstack 0
   460   000001                     ___awdiv@dividend:
   461                           	callstack 0
   462   000001                     ___awmod@dividend:
   463                           	callstack 0
   464   000001                     fputc@c:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x0
   468   000001                     	ds	1
   469   000002                     ??_I2C_2_Master_Read:
   470   000002                     I2C_2_Master_Write@data_byte:
   471                           	callstack 0
   472   000002                     sendStringSerial4@string:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1
   476   000002                     	ds	1
   477   000003                     color_writetoaddr@value:
   478                           	callstack 0
   479   000003                     I2C_2_Master_Read@ack:
   480                           	callstack 0
   481   000003                     fputc@fp:
   482                           	callstack 0
   483   000003                     ___wmul@multiplicand:
   484                           	callstack 0
   485   000003                     ___awdiv@divisor:
   486                           	callstack 0
   487   000003                     ___awmod@divisor:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491   000003                     	ds	1
   492   000004                     ??_fputc:
   493   000004                     color_writetoaddr@address:
   494                           	callstack 0
   495   000004                     I2C_2_Master_Read@tmp:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x3
   499   000004                     	ds	1
   500   000005                     ??_color_click_init:
   501   000005                     ?_color_read_Red:
   502                           	callstack 0
   503   000005                     ?_color_read_Green:
   504                           	callstack 0
   505   000005                     ?_color_read_Blue:
   506                           	callstack 0
   507   000005                     ?_color_read_Clear:
   508                           	callstack 0
   509   000005                     ___awdiv@counter:
   510                           	callstack 0
   511   000005                     ___awmod@counter:
   512                           	callstack 0
   513   000005                     ___wmul@product:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x4
   517   000005                     	ds	1
   518   000006                     ___awdiv@sign:
   519                           	callstack 0
   520   000006                     ___awmod@sign:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x5
   524   000006                     	ds	1
   525   000007                     ??_color_read_Red:
   526   000007                     ??_color_read_Green:
   527   000007                     ??_color_read_Blue:
   528   000007                     ??_color_read_Clear:
   529   000007                     ?_abs:
   530                           	callstack 0
   531   000007                     ?___lwdiv:
   532                           	callstack 0
   533   000007                     ?_read_prec_or_width:
   534                           	callstack 0
   535   000007                     read_prec_or_width@fmt:
   536                           	callstack 0
   537   000007                     ___awdiv@quotient:
   538                           	callstack 0
   539   000007                     ___lwdiv@dividend:
   540                           	callstack 0
   541   000007                     abs@a:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x6
   545   000007                     	ds	1
   546   000008                     read_prec_or_width@ap:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x7
   550   000008                     	ds	1
   551   000009                     ??_abs:
   552   000009                     read_prec_or_width@c:
   553                           	callstack 0
   554   000009                     fputs@s:
   555                           	callstack 0
   556   000009                     ___lwdiv@divisor:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x8
   560   000009                     	ds	1
   561   00000A                     fputs@fp:
   562                           	callstack 0
   563   00000A                     color_read_Red@tmp:
   564                           	callstack 0
   565   00000A                     color_read_Green@tmp:
   566                           	callstack 0
   567   00000A                     color_read_Blue@tmp:
   568                           	callstack 0
   569   00000A                     color_read_Clear@tmp:
   570                           	callstack 0
   571   00000A                     read_prec_or_width@n:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x9
   575   00000A                     	ds	1
   576   00000B                     fputs@c:
   577                           	callstack 0
   578   00000B                     ___lwdiv@quotient:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0xA
   582   00000B                     	ds	1
   583   00000C                     fputs@i:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xB
   587   00000C                     	ds	1
   588   00000D                     ___lwdiv@counter:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0xC
   592   00000D                     	ds	1
   593   00000E                     pad@fp:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0xD
   597   00000E                     	ds	1
   598   00000F                     pad@buf:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0xE
   602   00000F                     	ds	1
   603   000010                     pad@p:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xF
   607   000010                     	ds	2
   608   000012                     ??_pad:
   609                           
   610                           ; 1 bytes @ 0x11
   611   000012                     	ds	1
   612   000013                     pad@i:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x12
   616   000013                     	ds	2
   617   000015                     dtoa@fp:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x14
   621   000015                     	ds	1
   622   000016                     dtoa@d:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x15
   626   000016                     	ds	2
   627   000018                     _dtoa$2280:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x17
   631   000018                     	ds	2
   632   00001A                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x19
   636   00001A                     	ds	1
   637   00001B                     dtoa@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x1A
   641   00001B                     	ds	2
   642   00001D                     dtoa@s:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x1C
   646   00001D                     	ds	1
   647   00001E                     dtoa@i:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x1D
   651   00001E                     	ds	2
   652   000020                     vfpfcnvrt@fp:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0x1F
   656   000020                     	ds	1
   657   000021                     vfpfcnvrt@fmt:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x20
   661   000021                     	ds	1
   662   000022                     vfpfcnvrt@ap:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x21
   666   000022                     	ds	1
   667   000023                     ??_vfpfcnvrt:
   668                           
   669                           ; 1 bytes @ 0x22
   670   000023                     	ds	2
   671   000025                     vfpfcnvrt@convarg:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x24
   675   000025                     	ds	4
   676   000029                     vfpfcnvrt@done:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x28
   680   000029                     	ds	1
   681   00002A                     vfpfcnvrt@cp:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x29
   685   00002A                     	ds	1
   686   00002B                     ?_vfprintf:
   687                           	callstack 0
   688   00002B                     vfprintf@fp:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x2A
   692   00002B                     	ds	1
   693   00002C                     vfprintf@fmt:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x2B
   697   00002C                     	ds	1
   698   00002D                     vfprintf@ap:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x2C
   702   00002D                     	ds	1
   703   00002E                     vfprintf@cfmt:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x2D
   707   00002E                     	ds	1
   708   00002F                     ?_sprintf:
   709                           	callstack 0
   710   00002F                     sprintf@s:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x2E
   714   00002F                     	ds	2
   715   000031                     sprintf@fmt:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x30
   719   000031                     	ds	5
   720   000036                     sprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x35
   724   000036                     	ds	1
   725   000037                     sprintf@f:
   726                           	callstack 0
   727                           
   728                           ; 12 bytes @ 0x36
   729   000037                     	ds	12
   730   000043                     ADC2String@buf:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x42
   734   000043                     	ds	2
   735   000045                     ADC2String@ADC_val:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x44
   739   000045                     	ds	2
   740   000047                     ??_ADC2String:
   741                           
   742                           ; 1 bytes @ 0x46
   743   000047                     	ds	2
   744   000049                     ADC2String@frac_part:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x48
   748   000049                     	ds	2
   749   00004B                     ADC2String@int_part:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x4A
   753   00004B                     	ds	2
   754   00004D                     send2USART@battery_level:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x4C
   758   00004D                     	ds	2
   759   00004F                     send2USART@red:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x4E
   763   00004F                     	ds	2
   764   000051                     send2USART@green:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x50
   768   000051                     	ds	2
   769   000053                     send2USART@blue:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x52
   773   000053                     	ds	2
   774   000055                     send2USART@clear:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x54
   778   000055                     	ds	2
   779   000057                     test@battery_level:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x56
   783   000057                     	ds	2
   784   000059                     main@battery_level:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x58
   788   000059                     	ds	2
   789                           
   790 ;;
   791 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   792 ;;
   793 ;; *************** function _main *****************
   794 ;; Defined at:
   795 ;;		line 28 in file "main.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  PWMcycle        2    0        unsigned int 
   800 ;;  battery_leve    2   88[COMRAM] unsigned int 
   801 ;;  clear           2    0        unsigned int 
   802 ;;  green           2    0        unsigned int 
   803 ;;  blue            2    0        unsigned int 
   804 ;;  red             2    0        unsigned int 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;Total ram usage:        2 bytes
   819 ;; Hardware stack levels required when called: 11
   820 ;; This function calls:
   821 ;;		_ADC_init
   822 ;;		_color_click_init
   823 ;;		_initDCmotorsPWM
   824 ;;		_initUSART4
   825 ;;		_test
   826 ;; This function is called by:
   827 ;;		Startup code after reset
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text0
   832   00175A                     __ptext0:
   833                           	callstack 0
   834   00175A                     _main:
   835                           	callstack 20
   836   00175A                     
   837                           ;main.c: 30:     ADC_init();
   838   00175A  EC10  F00E         	call	_ADC_init	;wreg free
   839   00175E                     
   840                           ;main.c: 31:     color_click_init();
   841   00175E  EC9B  F00D         	call	_color_click_init	;wreg free
   842   001762                     
   843                           ;main.c: 32:     initUSART4();
   844   001762  EC01  F00E         	call	_initUSART4	;wreg free
   845   001766                     
   846                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
   847   001766  0E00               	movlw	0
   848   001768  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   849   00176A  0E63               	movlw	99
   850   00176C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   851   00176E  EC20  F00B         	call	_initDCmotorsPWM	;wreg free
   852   001772                     
   853                           ;main.c: 39:     motorL.power = 0;
   854   001772  0E00               	movlw	0
   855   001774  0100               	movlb	0	; () banked
   856   001776  6FB6               	movwf	_motorL& (0+255),b
   857   001778                     
   858                           ; BSR set to: 0
   859                           ;main.c: 40:     motorL.direction = 1;
   860   001778  0E01               	movlw	1
   861   00177A  6FB7               	movwf	(_motorL+1)& (0+255),b
   862   00177C                     
   863                           ; BSR set to: 0
   864                           ;main.c: 41:     motorL.brakemode = 1;
   865   00177C  0E01               	movlw	1
   866   00177E  6FB8               	movwf	(_motorL+2)& (0+255),b
   867   001780                     
   868                           ; BSR set to: 0
   869                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
   870   001780  0E00               	movlw	0
   871   001782  6FBA               	movwf	(_motorL+4)& (0+255),b
   872   001784  0E63               	movlw	99
   873   001786  6FB9               	movwf	(_motorL+3)& (0+255),b
   874   001788                     
   875                           ; BSR set to: 0
   876                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   877   001788  0EAA               	movlw	170
   878   00178A  6FBB               	movwf	(_motorL+5)& (0+255),b
   879   00178C  0E0F               	movlw	15
   880   00178E  6FBC               	movwf	(_motorL+6)& (0+255),b
   881   001790                     
   882                           ; BSR set to: 0
   883                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   884   001790  0EA6               	movlw	166
   885   001792  6FBD               	movwf	(_motorL+7)& (0+255),b
   886   001794  0E0F               	movlw	15
   887   001796  6FBE               	movwf	(_motorL+8)& (0+255),b
   888   001798                     
   889                           ; BSR set to: 0
   890                           ;main.c: 46:     motorR.power = 0;
   891   001798  0E00               	movlw	0
   892   00179A  6FAD               	movwf	_motorR& (0+255),b
   893   00179C                     
   894                           ; BSR set to: 0
   895                           ;main.c: 47:     motorR.direction = 1;
   896   00179C  0E01               	movlw	1
   897   00179E  6FAE               	movwf	(_motorR+1)& (0+255),b
   898   0017A0                     
   899                           ; BSR set to: 0
   900                           ;main.c: 48:     motorR.brakemode = 1;
   901   0017A0  0E01               	movlw	1
   902   0017A2  6FAF               	movwf	(_motorR+2)& (0+255),b
   903   0017A4                     
   904                           ; BSR set to: 0
   905                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
   906   0017A4  0E00               	movlw	0
   907   0017A6  6FB1               	movwf	(_motorR+4)& (0+255),b
   908   0017A8  0E63               	movlw	99
   909   0017AA  6FB0               	movwf	(_motorR+3)& (0+255),b
   910                           
   911                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   912   0017AC  0E25               	movlw	37
   913   0017AE  6FB2               	movwf	(_motorR+5)& (0+255),b
   914   0017B0  0E0F               	movlw	15
   915   0017B2  6FB3               	movwf	(_motorR+6)& (0+255),b
   916                           
   917                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   918   0017B4  0E21               	movlw	33
   919   0017B6  6FB4               	movwf	(_motorR+7)& (0+255),b
   920   0017B8  0E0F               	movlw	15
   921   0017BA  6FB5               	movwf	(_motorR+8)& (0+255),b
   922   0017BC                     
   923                           ; BSR set to: 0
   924                           ;main.c: 54:     LATDbits.LATD7=0;
   925   0017BC  9E7C               	bcf	124,7,c	;volatile
   926   0017BE                     
   927                           ; BSR set to: 0
   928                           ;main.c: 55:     TRISDbits.TRISD7=0;
   929   0017BE  9E84               	bcf	132,7,c	;volatile
   930   0017C0                     
   931                           ; BSR set to: 0
   932                           ;main.c: 59:     TRISGbits.TRISG0 = 0;
   933   0017C0  9087               	bcf	135,0,c	;volatile
   934   0017C2                     
   935                           ; BSR set to: 0
   936                           ;main.c: 60:     LATGbits.LATG0 = 0;
   937   0017C2  907F               	bcf	127,0,c	;volatile
   938   0017C4                     
   939                           ; BSR set to: 0
   940                           ;main.c: 61:     TRISEbits.TRISE7 = 0;
   941   0017C4  9E85               	bcf	133,7,c	;volatile
   942   0017C6                     
   943                           ; BSR set to: 0
   944                           ;main.c: 62:     LATEbits.LATE7 = 0;
   945   0017C6  9E7D               	bcf	125,7,c	;volatile
   946   0017C8                     
   947                           ; BSR set to: 0
   948                           ;main.c: 63:     TRISAbits.TRISA3 = 0;
   949   0017C8  9681               	bcf	129,3,c	;volatile
   950   0017CA                     
   951                           ; BSR set to: 0
   952                           ;main.c: 64:     LATAbits.LATA3 = 0;
   953   0017CA  9679               	bcf	121,3,c	;volatile
   954   0017CC                     l2622:
   955                           
   956                           ;main.c: 87:         test(battery_level);
   957   0017CC  C059  F057         	movff	main@battery_level,test@battery_level
   958   0017D0  C05A  F058         	movff	main@battery_level+1,test@battery_level+1
   959   0017D4  EC09  F009         	call	_test	;wreg free
   960   0017D8  EFE6  F00B         	goto	l2622
   961   0017DC  EF00  F000         	goto	start
   962   0017E0                     __end_of_main:
   963                           	callstack 0
   964                           
   965 ;; *************** function _test *****************
   966 ;; Defined at:
   967 ;;		line 98 in file "color.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  battery_leve    2   86[COMRAM] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  clear           2   56[BANK0 ] unsigned int 
   972 ;;  green           2   54[BANK0 ] unsigned int 
   973 ;;  blue            2   52[BANK0 ] unsigned int 
   974 ;;  red             2   50[BANK0 ] unsigned int 
   975 ;;  combo           2   58[BANK0 ] unsigned int 
   976 ;;  led_state      50    0[BANK0 ] unsigned char [50]
   977 ;; Return value:  Size  Location     Type
   978 ;;                  1    wreg      void 
   979 ;; Registers used:
   980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   986 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   987 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   989 ;;      Totals:         2      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   990 ;;Total ram usage:       62 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 10
   993 ;; This function calls:
   994 ;;		_color_read_Blue
   995 ;;		_color_read_Clear
   996 ;;		_color_read_Green
   997 ;;		_color_read_Red
   998 ;;		_send2USART
   999 ;;		_sendStringSerial4
  1000 ;;		_sprintf
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text1
  1007   001212                     __ptext1:
  1008                           	callstack 0
  1009   001212                     _test:
  1010                           	callstack 20
  1011   001212                     
  1012                           ;color.c: 101:     char led_state[50];;color.c: 104:     for (unsigned int combo = 0; co
      +                          mbo < 4; ++combo) {
  1013   001212  0E00               	movlw	0
  1014   001214  0100               	movlb	0	; () banked
  1015   001216  6FFA               	movwf	(test@combo+1)& (0+255),b
  1016   001218  0E00               	movlw	0
  1017   00121A  6FF9               	movwf	test@combo& (0+255),b
  1018   00121C                     l2446:
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;color.c: 135:         if (combo == 3) {
  1022   00121C  0E03               	movlw	3
  1023   00121E  19F9               	xorwf	test@combo& (0+255),w,b
  1024   001220  11FA               	iorwf	(test@combo+1)& (0+255),w,b
  1025   001222  A4D8               	btfss	status,2,c
  1026   001224  EF16  F009         	goto	u1291
  1027   001228  EF18  F009         	goto	u1290
  1028   00122C                     u1291:
  1029   00122C  EF26  F009         	goto	l2452
  1030   001230                     u1290:
  1031   001230                     
  1032                           ; BSR set to: 0
  1033                           ;color.c: 136:             LATGbits.LATG0 = 1;
  1034   001230  807F               	bsf	127,0,c	;volatile
  1035                           
  1036                           ;color.c: 137:             LATEbits.LATE7 = 1;
  1037   001232  8E7D               	bsf	125,7,c	;volatile
  1038                           
  1039                           ;color.c: 138:             LATAbits.LATA3 = 1;
  1040   001234  8679               	bsf	121,3,c	;volatile
  1041   001236                     
  1042                           ; BSR set to: 0
  1043                           ;color.c: 139:             sprintf(led_state,"All_lights=%d \n\r", 1);
  1044   001236  0EBF               	movlw	low test@led_state
  1045   001238  6E2F               	movwf	sprintf@s^0,c
  1046   00123A  6A30               	clrf	(sprintf@s+1)^0,c
  1047   00123C  0E27               	movlw	low STR_1
  1048   00123E  6E31               	movwf	sprintf@fmt^0,c
  1049   001240  0E00               	movlw	0
  1050   001242  6E33               	movwf	(?_sprintf+4)^0,c
  1051   001244  0E01               	movlw	1
  1052   001246  6E32               	movwf	(?_sprintf+3)^0,c
  1053   001248  EC0C  F00D         	call	_sprintf	;wreg free
  1054   00124C                     l2452:
  1055                           
  1056                           ;color.c: 144:         sendStringSerial4(led_state);
  1057   00124C  0EBF               	movlw	low test@led_state
  1058   00124E  6E02               	movwf	sendStringSerial4@string^0,c
  1059   001250  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1060   001252  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1061   001256                     
  1062                           ;color.c: 147:         unsigned int red = color_read_Red();
  1063   001256  EC2A  F00C         	call	_color_read_Red	;wreg free
  1064   00125A  C005  F0F1         	movff	?_color_read_Red,test@red
  1065   00125E  C006  F0F2         	movff	?_color_read_Red+1,test@red+1
  1066   001262                     
  1067                           ;color.c: 148:         unsigned int blue = color_read_Blue();
  1068   001262  ECA2  F00C         	call	_color_read_Blue	;wreg free
  1069   001266  C005  F0F3         	movff	?_color_read_Blue,test@blue
  1070   00126A  C006  F0F4         	movff	?_color_read_Blue+1,test@blue+1
  1071   00126E                     
  1072                           ;color.c: 149:         unsigned int green = color_read_Green();
  1073   00126E  EC52  F00C         	call	_color_read_Green	;wreg free
  1074   001272  C005  F0F5         	movff	?_color_read_Green,test@green
  1075   001276  C006  F0F6         	movff	?_color_read_Green+1,test@green+1
  1076   00127A                     
  1077                           ;color.c: 150:         unsigned int clear = color_read_Clear();
  1078   00127A  EC7A  F00C         	call	_color_read_Clear	;wreg free
  1079   00127E  C005  F0F7         	movff	?_color_read_Clear,test@clear
  1080   001282  C006  F0F8         	movff	?_color_read_Clear+1,test@clear+1
  1081   001286                     
  1082                           ;color.c: 158:         send2USART(battery_level, red, green, blue, clear);
  1083   001286  C057  F04D         	movff	test@battery_level,send2USART@battery_level
  1084   00128A  C058  F04E         	movff	test@battery_level+1,send2USART@battery_level+1
  1085   00128E  C0F1  F04F         	movff	test@red,send2USART@red
  1086   001292  C0F2  F050         	movff	test@red+1,send2USART@red+1
  1087   001296  C0F5  F051         	movff	test@green,send2USART@green
  1088   00129A  C0F6  F052         	movff	test@green+1,send2USART@green+1
  1089   00129E  C0F3  F053         	movff	test@blue,send2USART@blue
  1090   0012A2  C0F4  F054         	movff	test@blue+1,send2USART@blue+1
  1091   0012A6  C0F7  F055         	movff	test@clear,send2USART@clear
  1092   0012AA  C0F8  F056         	movff	test@clear+1,send2USART@clear+1
  1093   0012AE  ECC5  F009         	call	_send2USART	;wreg free
  1094   0012B2                     
  1095                           ;color.c: 159:     }
  1096   0012B2  0100               	movlb	0	; () banked
  1097   0012B4  4BF9               	infsnz	test@combo& (0+255),f,b
  1098   0012B6  2BFA               	incf	(test@combo+1)& (0+255),f,b
  1099   0012B8                     
  1100                           ; BSR set to: 0
  1101   0012B8  51FA               	movf	(test@combo+1)& (0+255),w,b
  1102   0012BA  E109               	bnz	u1300
  1103   0012BC  0E04               	movlw	4
  1104   0012BE  5DF9               	subwf	test@combo& (0+255),w,b
  1105   0012C0  A0D8               	btfss	status,0,c
  1106   0012C2  EF65  F009         	goto	u1301
  1107   0012C6  EF67  F009         	goto	u1300
  1108   0012CA                     u1301:
  1109   0012CA  EF0E  F009         	goto	l2446
  1110   0012CE                     u1300:
  1111   0012CE                     
  1112                           ; BSR set to: 0
  1113   0012CE  0012               	return		;funcret
  1114   0012D0                     __end_of_test:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _send2USART *****************
  1118 ;; Defined at:
  1119 ;;		line 146 in file "serial.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  battery_leve    2   76[COMRAM] unsigned int 
  1122 ;;  red             2   78[COMRAM] unsigned int 
  1123 ;;  green           2   80[COMRAM] unsigned int 
  1124 ;;  blue            2   82[COMRAM] unsigned int 
  1125 ;;  clear           2   84[COMRAM] unsigned int 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  clear_char     50  200[BANK1 ] unsigned char [50]
  1128 ;;  green_char     50  150[BANK1 ] unsigned char [50]
  1129 ;;  blue_char      50  100[BANK1 ] unsigned char [50]
  1130 ;;  red_char       50   50[BANK1 ] unsigned char [50]
  1131 ;;  buf            50    0[BANK1 ] unsigned char [50]
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1141 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1142 ;;      Locals:         0       0     250       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Totals:        10       0     250       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;Total ram usage:      260 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 9
  1148 ;; This function calls:
  1149 ;;		_ADC2String
  1150 ;;		_sendStringSerial4
  1151 ;;		_sprintf
  1152 ;; This function is called by:
  1153 ;;		_test
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text2
  1158   00138A                     __ptext2:
  1159                           	callstack 0
  1160   00138A                     _send2USART:
  1161                           	callstack 20
  1162   00138A                     
  1163                           ;serial.c: 147:         char buf[50];;serial.c: 148:         char red_char[50];;serial.c
      +                          : 149:         char blue_char[50];;serial.c: 150:         char green_char[50];;serial.c:
      +                           151:         char clear_char[50];;serial.c: 155:         ADC2String(buf, battery_level)
      +                          ;
  1164   00138A  0E00               	movlw	low send2USART@buf
  1165   00138C  6E43               	movwf	ADC2String@buf^0,c
  1166   00138E  0E01               	movlw	high send2USART@buf
  1167   001390  6E44               	movwf	(ADC2String@buf+1)^0,c
  1168   001392  C04D  F045         	movff	send2USART@battery_level,ADC2String@ADC_val
  1169   001396  C04E  F046         	movff	send2USART@battery_level+1,ADC2String@ADC_val+1
  1170   00139A  ECCD  F00A         	call	_ADC2String	;wreg free
  1171                           
  1172                           ;serial.c: 156:         sprintf(red_char,"Red=%05d,  ",red);
  1173   00139E  0E32               	movlw	low send2USART@red_char
  1174   0013A0  6E2F               	movwf	sprintf@s^0,c
  1175   0013A2  0E01               	movlw	high send2USART@red_char
  1176   0013A4  6E30               	movwf	(sprintf@s+1)^0,c
  1177   0013A6  0E53               	movlw	low STR_3
  1178   0013A8  6E31               	movwf	sprintf@fmt^0,c
  1179   0013AA  C04F  F032         	movff	send2USART@red,?_sprintf+3
  1180   0013AE  C050  F033         	movff	send2USART@red+1,?_sprintf+4
  1181   0013B2  EC0C  F00D         	call	_sprintf	;wreg free
  1182                           
  1183                           ;serial.c: 157:         sprintf(blue_char,"Blue=%05d,  ",blue);
  1184   0013B6  0E64               	movlw	low send2USART@blue_char
  1185   0013B8  6E2F               	movwf	sprintf@s^0,c
  1186   0013BA  0E01               	movlw	high send2USART@blue_char
  1187   0013BC  6E30               	movwf	(sprintf@s+1)^0,c
  1188   0013BE  0E46               	movlw	low STR_4
  1189   0013C0  6E31               	movwf	sprintf@fmt^0,c
  1190   0013C2  C053  F032         	movff	send2USART@blue,?_sprintf+3
  1191   0013C6  C054  F033         	movff	send2USART@blue+1,?_sprintf+4
  1192   0013CA  EC0C  F00D         	call	_sprintf	;wreg free
  1193                           
  1194                           ;serial.c: 158:         sprintf(green_char,"Green=%05d,  ",green);
  1195   0013CE  0E96               	movlw	low send2USART@green_char
  1196   0013D0  6E2F               	movwf	sprintf@s^0,c
  1197   0013D2  0E01               	movlw	high send2USART@green_char
  1198   0013D4  6E30               	movwf	(sprintf@s+1)^0,c
  1199   0013D6  0E38               	movlw	low STR_5
  1200   0013D8  6E31               	movwf	sprintf@fmt^0,c
  1201   0013DA  C051  F032         	movff	send2USART@green,?_sprintf+3
  1202   0013DE  C052  F033         	movff	send2USART@green+1,?_sprintf+4
  1203   0013E2  EC0C  F00D         	call	_sprintf	;wreg free
  1204                           
  1205                           ;serial.c: 159:         sprintf(clear_char,"Clear=%05d,  \n\n\r",clear);
  1206   0013E6  0EC8               	movlw	low send2USART@clear_char
  1207   0013E8  6E2F               	movwf	sprintf@s^0,c
  1208   0013EA  0E01               	movlw	high send2USART@clear_char
  1209   0013EC  6E30               	movwf	(sprintf@s+1)^0,c
  1210   0013EE  0E16               	movlw	low STR_6
  1211   0013F0  6E31               	movwf	sprintf@fmt^0,c
  1212   0013F2  C055  F032         	movff	send2USART@clear,?_sprintf+3
  1213   0013F6  C056  F033         	movff	send2USART@clear+1,?_sprintf+4
  1214   0013FA  EC0C  F00D         	call	_sprintf	;wreg free
  1215   0013FE                     
  1216                           ;serial.c: 163:         sendStringSerial4(buf);
  1217   0013FE  0E00               	movlw	low send2USART@buf
  1218   001400  6E02               	movwf	sendStringSerial4@string^0,c
  1219   001402  0E01               	movlw	high send2USART@buf
  1220   001404  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1221   001406  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1222   00140A                     
  1223                           ;serial.c: 164:         sendStringSerial4(red_char);
  1224   00140A  0E32               	movlw	low send2USART@red_char
  1225   00140C  6E02               	movwf	sendStringSerial4@string^0,c
  1226   00140E  0E01               	movlw	high send2USART@red_char
  1227   001410  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1228   001412  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1229   001416                     
  1230                           ;serial.c: 165:         sendStringSerial4(blue_char);
  1231   001416  0E64               	movlw	low send2USART@blue_char
  1232   001418  6E02               	movwf	sendStringSerial4@string^0,c
  1233   00141A  0E01               	movlw	high send2USART@blue_char
  1234   00141C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1235   00141E  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1236   001422                     
  1237                           ;serial.c: 166:         sendStringSerial4(green_char);
  1238   001422  0E96               	movlw	low send2USART@green_char
  1239   001424  6E02               	movwf	sendStringSerial4@string^0,c
  1240   001426  0E01               	movlw	high send2USART@green_char
  1241   001428  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1242   00142A  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1243   00142E                     
  1244                           ;serial.c: 167:         sendStringSerial4(clear_char);
  1245   00142E  0EC8               	movlw	low send2USART@clear_char
  1246   001430  6E02               	movwf	sendStringSerial4@string^0,c
  1247   001432  0E01               	movlw	high send2USART@clear_char
  1248   001434  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1249   001436  EC65  F00D         	call	_sendStringSerial4	;wreg free
  1250   00143A  0012               	return		;funcret
  1251   00143C                     __end_of_send2USART:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _sendStringSerial4 *****************
  1255 ;; Defined at:
  1256 ;;		line 41 in file "serial.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  string          2    1[COMRAM] PTR unsigned char 
  1259 ;;		 -> send2USART@clear_char(50), send2USART@green_char(50), send2USART@blue_char(50), send2USART@red_char(50), 
  1260 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), test@led_state(50), 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 1
  1279 ;; This function calls:
  1280 ;;		_sendCharSerial4
  1281 ;; This function is called by:
  1282 ;;		_test
  1283 ;;		_send2USART
  1284 ;;		_sendAllReadings
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text3
  1289   001ACA                     __ptext3:
  1290                           	callstack 0
  1291   001ACA                     _sendStringSerial4:
  1292                           	callstack 28
  1293   001ACA                     
  1294                           ;serial.c: 44:     while(*string != 0){
  1295   001ACA  EF74  F00D         	goto	l2310
  1296   001ACE                     l2304:
  1297                           
  1298                           ;serial.c: 46:   sendCharSerial4(*string++);
  1299   001ACE  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1300   001AD2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1301   001AD6  50DF               	movf	indf2,w,c
  1302   001AD8  EC1D  F00E         	call	_sendCharSerial4
  1303   001ADC  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1304   001ADE  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1305   001AE0                     
  1306                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  1307   001AE0  0E6A               	movlw	106
  1308   001AE2                     u1437:
  1309   001AE2  2EE8               	decfsz	wreg,f,c
  1310   001AE4  D7FE               	bra	u1437
  1311   001AE6  D000               	nop2	
  1312   001AE8                     l2310:
  1313                           
  1314                           ;serial.c: 44:     while(*string != 0){
  1315   001AE8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1316   001AEC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1317   001AF0  50DF               	movf	indf2,w,c
  1318   001AF2  A4D8               	btfss	status,2,c
  1319   001AF4  EF7E  F00D         	goto	u1211
  1320   001AF8  EF80  F00D         	goto	u1210
  1321   001AFC                     u1211:
  1322   001AFC  EF67  F00D         	goto	l2304
  1323   001B00                     u1210:
  1324   001B00  0012               	return		;funcret
  1325   001B02                     __end_of_sendStringSerial4:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _sendCharSerial4 *****************
  1329 ;; Defined at:
  1330 ;;		line 35 in file "serial.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  charToSend      1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  charToSend      1    0[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_sendStringSerial4
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text4
  1358   001C3A                     __ptext4:
  1359                           	callstack 0
  1360   001C3A                     _sendCharSerial4:
  1361                           	callstack 28
  1362                           
  1363                           ;incstack = 0
  1364                           ;sendCharSerial4@charToSend stored from wreg
  1365   001C3A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1366   001C3C                     l351:
  1367   001C3C  010E               	movlb	14	; () banked
  1368   001C3E  A537               	btfss	55,2,b	;volatile
  1369   001C40  EF24  F00E         	goto	u1151
  1370   001C44  EF26  F00E         	goto	u1150
  1371   001C48                     u1151:
  1372   001C48  EF1E  F00E         	goto	l351
  1373   001C4C                     u1150:
  1374   001C4C                     
  1375                           ; BSR set to: 14
  1376                           ;serial.c: 37:     TX4REG = charToSend;
  1377   001C4C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1378   001C50                     
  1379                           ; BSR set to: 14
  1380   001C50  0012               	return		;funcret
  1381   001C52                     __end_of_sendCharSerial4:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _ADC2String *****************
  1385 ;; Defined at:
  1386 ;;		line 135 in file "serial.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  buf             2   66[COMRAM] PTR unsigned char 
  1389 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), 
  1390 ;;  ADC_val         2   68[COMRAM] unsigned int 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  int_part        2   74[COMRAM] unsigned int 
  1393 ;;  frac_part       2   72[COMRAM] unsigned int 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;Total ram usage:       10 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 8
  1410 ;; This function calls:
  1411 ;;		___lwdiv
  1412 ;;		___wmul
  1413 ;;		_sprintf
  1414 ;; This function is called by:
  1415 ;;		_send2USART
  1416 ;;		_sendAllReadings
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text5
  1421   00159A                     __ptext5:
  1422                           	callstack 0
  1423   00159A                     _ADC2String:
  1424                           	callstack 20
  1425   00159A                     
  1426                           ;serial.c: 137:     unsigned int int_part=ADC_val/77;
  1427   00159A  C045  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  1428   00159E  C046  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  1429   0015A2  0E00               	movlw	0
  1430   0015A4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1431   0015A6  0E4D               	movlw	77
  1432   0015A8  6E09               	movwf	___lwdiv@divisor^0,c
  1433   0015AA  ECF0  F00B         	call	___lwdiv	;wreg free
  1434   0015AE  C007  F04B         	movff	?___lwdiv,ADC2String@int_part
  1435   0015B2  C008  F04C         	movff	?___lwdiv+1,ADC2String@int_part+1
  1436   0015B6                     
  1437                           ;serial.c: 139:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  1438   0015B6  C045  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  1439   0015BA  C046  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  1440   0015BE  0E00               	movlw	0
  1441   0015C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1442   0015C2  0E64               	movlw	100
  1443   0015C4  6E03               	movwf	___wmul@multiplicand^0,c
  1444   0015C6  ECDE  F00D         	call	___wmul	;wreg free
  1445   0015CA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1446   0015CE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1447   0015D2  0E00               	movlw	0
  1448   0015D4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1449   0015D6  0E4D               	movlw	77
  1450   0015D8  6E09               	movwf	___lwdiv@divisor^0,c
  1451   0015DA  ECF0  F00B         	call	___lwdiv	;wreg free
  1452   0015DE  C007  F047         	movff	?___lwdiv,??_ADC2String
  1453   0015E2  C008  F048         	movff	?___lwdiv+1,??_ADC2String+1
  1454   0015E6  C04B  F001         	movff	ADC2String@int_part,___wmul@multiplier
  1455   0015EA  C04C  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  1456   0015EE  0EFF               	movlw	255
  1457   0015F0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1458   0015F2  0E9C               	movlw	156
  1459   0015F4  6E03               	movwf	___wmul@multiplicand^0,c
  1460   0015F6  ECDE  F00D         	call	___wmul	;wreg free
  1461   0015FA  5001               	movf	?___wmul^0,w,c
  1462   0015FC  2447               	addwf	??_ADC2String^0,w,c
  1463   0015FE  6E49               	movwf	ADC2String@frac_part^0,c
  1464   001600  5002               	movf	(?___wmul+1)^0,w,c
  1465   001602  2048               	addwfc	(??_ADC2String+1)^0,w,c
  1466   001604  6E4A               	movwf	(ADC2String@frac_part+1)^0,c
  1467   001606                     
  1468                           ;serial.c: 141:     sprintf(buf,"Voltage = %d.%02d,  ",int_part,frac_part);
  1469   001606  C043  F02F         	movff	ADC2String@buf,sprintf@s
  1470   00160A  C044  F030         	movff	ADC2String@buf+1,sprintf@s+1
  1471   00160E  0E01               	movlw	low STR_2
  1472   001610  6E31               	movwf	sprintf@fmt^0,c
  1473   001612  C04B  F032         	movff	ADC2String@int_part,?_sprintf+3
  1474   001616  C04C  F033         	movff	ADC2String@int_part+1,?_sprintf+4
  1475   00161A  C049  F034         	movff	ADC2String@frac_part,?_sprintf+5
  1476   00161E  C04A  F035         	movff	ADC2String@frac_part+1,?_sprintf+6
  1477   001622  EC0C  F00D         	call	_sprintf	;wreg free
  1478   001626                     
  1479                           ;serial.c: 143:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1480   001626  0E52               	movlw	82
  1481   001628  6E48               	movwf	(??_ADC2String+1)^0,c
  1482   00162A  0E2B               	movlw	43
  1483   00162C  6E47               	movwf	??_ADC2String^0,c
  1484   00162E  0E00               	movlw	0
  1485   001630                     u1447:
  1486   001630  2EE8               	decfsz	wreg,f,c
  1487   001632  D7FE               	bra	u1447
  1488   001634  2E47               	decfsz	??_ADC2String^0,f,c
  1489   001636  D7FC               	bra	u1447
  1490   001638  2E48               	decfsz	(??_ADC2String+1)^0,f,c
  1491   00163A  D7FA               	bra	u1447
  1492   00163C  D000               	nop2	
  1493   00163E  0012               	return		;funcret
  1494   001640                     __end_of_ADC2String:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _sprintf *****************
  1498 ;; Defined at:
  1499 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  s               2   46[COMRAM] PTR unsigned char 
  1502 ;;		 -> send2USART@clear_char(50), send2USART@green_char(50), send2USART@blue_char(50), send2USART@red_char(50), 
  1503 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), test@led_state(50), 
  1504 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  1505 ;;		 -> STR_6(17), STR_5(14), STR_4(13), STR_3(12), 
  1506 ;;		 -> STR_2(21), STR_1(17), 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  f              12   54[COMRAM] struct _IO_FILE
  1509 ;;  ret             2    0        int 
  1510 ;;  ap              1   53[COMRAM] PTR void [1]
  1511 ;;		 -> ?_sprintf(2), 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  2   46[COMRAM] int 
  1514 ;; Registers used:
  1515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1521 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1522 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;Total ram usage:       20 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 7
  1528 ;; This function calls:
  1529 ;;		_vfprintf
  1530 ;; This function is called by:
  1531 ;;		_test
  1532 ;;		_ADC2String
  1533 ;;		_send2USART
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text6
  1538   001A18                     __ptext6:
  1539                           	callstack 0
  1540   001A18                     _sprintf:
  1541                           	callstack 22
  1542   001A18  0E32               	movlw	low (?_sprintf+3)
  1543   001A1A  6E36               	movwf	sprintf@ap^0,c
  1544   001A1C  C02F  F037         	movff	sprintf@s,sprintf@f
  1545   001A20  C030  F038         	movff	sprintf@s+1,sprintf@f+1
  1546   001A24  0E00               	movlw	0
  1547   001A26  6E3B               	movwf	(sprintf@f+4)^0,c
  1548   001A28  0E00               	movlw	0
  1549   001A2A  6E3A               	movwf	(sprintf@f+3)^0,c
  1550   001A2C  0E00               	movlw	0
  1551   001A2E  6E42               	movwf	(sprintf@f+11)^0,c
  1552   001A30  0E00               	movlw	0
  1553   001A32  6E41               	movwf	(sprintf@f+10)^0,c
  1554   001A34  0E37               	movlw	low sprintf@f
  1555   001A36  6E2B               	movwf	vfprintf@fp^0,c
  1556   001A38  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  1557   001A3C  0E36               	movlw	low sprintf@ap
  1558   001A3E  6E2D               	movwf	vfprintf@ap^0,c
  1559   001A40  ECCA  F00C         	call	_vfprintf	;wreg free
  1560   001A44  503A               	movf	(sprintf@f+3)^0,w,c
  1561   001A46  242F               	addwf	sprintf@s^0,w,c
  1562   001A48  6ED9               	movwf	fsr2l,c
  1563   001A4A  503B               	movf	(sprintf@f+4)^0,w,c
  1564   001A4C  2030               	addwfc	(sprintf@s+1)^0,w,c
  1565   001A4E  6EDA               	movwf	fsr2h,c
  1566   001A50  6ADF               	clrf	indf2,c
  1567   001A52  0012               	return		;funcret
  1568   001A54                     __end_of_sprintf:
  1569                           	callstack 0
  1570                           
  1571 ;; *************** function _vfprintf *****************
  1572 ;; Defined at:
  1573 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  1576 ;;		 -> sprintf@f(12), 
  1577 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  1578 ;;		 -> STR_6(17), STR_5(14), STR_4(13), STR_3(12), 
  1579 ;;		 -> STR_2(21), STR_1(17), 
  1580 ;;  ap              1   44[COMRAM] PTR PTR void 
  1581 ;;		 -> sprintf@ap(1), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  1584 ;;		 -> STR_6(17), STR_5(14), STR_4(13), STR_3(12), 
  1585 ;;		 -> STR_2(21), STR_1(17), 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  2   42[COMRAM] int 
  1588 ;; Registers used:
  1589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;Total ram usage:        4 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 6
  1602 ;; This function calls:
  1603 ;;		_vfpfcnvrt
  1604 ;; This function is called by:
  1605 ;;		_sprintf
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text7
  1610   001994                     __ptext7:
  1611                           	callstack 0
  1612   001994                     _vfprintf:
  1613                           	callstack 22
  1614   001994                     
  1615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1616   001994  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1619   001998  EFD6  F00C         	goto	l2224
  1620   00199C                     l2222:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1623   00199C  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  1624   0019A0  0E2E               	movlw	low vfprintf@cfmt
  1625   0019A2  6E21               	movwf	vfpfcnvrt@fmt^0,c
  1626   0019A4  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  1627   0019A8  EC30  F007         	call	_vfpfcnvrt	;wreg free
  1628   0019AC                     l2224:
  1629                           
  1630                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1631   0019AC  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1632   0019B0                     	if	1	;There is more than 1 active tblptr byte
  1633   0019B0  0E0E               	movlw	high __smallconst
  1634   0019B2  6EF7               	movwf	tblptrh,c
  1635   0019B4                     	endif
  1636   0019B4                     	if	0	;tblptru may be non-zero
  1637   0019B4                     	endif
  1638   0019B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1639   0019B4  0E00               	movlw	low (__smallconst shr (0+16))
  1640   0019B6  6EF8               	movwf	tblptru,c
  1641   0019B8                     	endif
  1642   0019B8  0008               	tblrd		*
  1643   0019BA  50F5               	movf	tablat,w,c
  1644   0019BC  0900               	iorlw	0
  1645   0019BE  A4D8               	btfss	status,2,c
  1646   0019C0  EFE4  F00C         	goto	u1121
  1647   0019C4  EFE6  F00C         	goto	u1120
  1648   0019C8                     u1121:
  1649   0019C8  EFCE  F00C         	goto	l2222
  1650   0019CC                     u1120:
  1651   0019CC                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1653   0019CC  0E00               	movlw	0
  1654   0019CE  6E2C               	movwf	(?_vfprintf+1)^0,c
  1655   0019D0  0E00               	movlw	0
  1656   0019D2  6E2B               	movwf	?_vfprintf^0,c
  1657   0019D4  0012               	return		;funcret
  1658   0019D6                     __end_of_vfprintf:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _vfpfcnvrt *****************
  1662 ;; Defined at:
  1663 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  1666 ;;		 -> sprintf@f(12), 
  1667 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  1668 ;;		 -> vfprintf@cfmt(1), 
  1669 ;;  ap              1   33[COMRAM] PTR PTR void 
  1670 ;;		 -> sprintf@ap(1), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  convarg         4   36[COMRAM] struct .
  1673 ;;  cp              1   41[COMRAM] PTR unsigned char 
  1674 ;;		 -> STR_6(17), STR_5(14), STR_4(13), STR_3(12), 
  1675 ;;		 -> STR_2(21), STR_1(17), 
  1676 ;;  done            1   40[COMRAM] _Bool 
  1677 ;;  c               1    0        unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:       11 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 5
  1694 ;; This function calls:
  1695 ;;		_dtoa
  1696 ;;		_fputc
  1697 ;;		_read_prec_or_width
  1698 ;; This function is called by:
  1699 ;;		_vfprintf
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text8
  1704   000E60                     __ptext8:
  1705                           	callstack 0
  1706   000E60                     _vfpfcnvrt:
  1707                           	callstack 22
  1708   000E60                     
  1709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1710   000E60  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1711   000E62  6ED9               	movwf	fsr2l,c
  1712   000E64  6ADA               	clrf	fsr2h,c
  1713   000E66  CFDF FFF6          	movff	indf2,tblptrl
  1714   000E6A                     	if	1	;There is more than 1 active tblptr byte
  1715   000E6A  0E0E               	movlw	high __smallconst
  1716   000E6C  6EF7               	movwf	tblptrh,c
  1717   000E6E                     	endif
  1718   000E6E                     	if	0	;tblptru may be non-zero
  1719   000E6E                     	endif
  1720   000E6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1721   000E6E  0E00               	movlw	low (__smallconst shr (0+16))
  1722   000E70  6EF8               	movwf	tblptru,c
  1723   000E72                     	endif
  1724   000E72  0008               	tblrd		*
  1725   000E74  50F5               	movf	tablat,w,c
  1726   000E76  0A25               	xorlw	37
  1727   000E78  A4D8               	btfss	status,2,c
  1728   000E7A  EF41  F007         	goto	u1071
  1729   000E7E  EF43  F007         	goto	u1070
  1730   000E82                     u1071:
  1731   000E82  EFDF  F007         	goto	l2210
  1732   000E86                     u1070:
  1733   000E86                     
  1734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1735   000E86  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1736   000E88  6ED9               	movwf	fsr2l,c
  1737   000E8A  6ADA               	clrf	fsr2h,c
  1738   000E8C  2ADF               	incf	indf2,f,c
  1739   000E8E                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1741   000E8E  0E00               	movlw	0
  1742   000E90  0100               	movlb	0	; () banked
  1743   000E92  6F89               	movwf	(_width+1)& (0+255),b
  1744   000E94  0E00               	movlw	0
  1745   000E96  6F88               	movwf	_width& (0+255),b
  1746   000E98  C088  F05B         	movff	_width,_flags
  1747   000E9C                     
  1748                           ; BSR set to: 0
  1749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1750   000E9C  698A               	setf	_prec& (0+255),b
  1751   000E9E  698B               	setf	(_prec+1)& (0+255),b
  1752   000EA0                     
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1755   000EA0  0E00               	movlw	0
  1756   000EA2  6E29               	movwf	vfpfcnvrt@done^0,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1759   000EA4  EF7A  F007         	goto	l2184
  1760   000EA8                     l2174:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1763   000EA8  825B               	bsf	_flags^0,1,c
  1764   000EAA                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1766   000EAA  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1767   000EAC  6ED9               	movwf	fsr2l,c
  1768   000EAE  6ADA               	clrf	fsr2h,c
  1769   000EB0  2ADF               	incf	indf2,f,c
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1772   000EB2  EF7A  F007         	goto	l2184
  1773   000EB6                     l2178:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1776   000EB6  0E01               	movlw	1
  1777   000EB8  6E29               	movwf	vfpfcnvrt@done^0,c
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1780   000EBA  EF7A  F007         	goto	l2184
  1781   000EBE                     l2182:
  1782   000EBE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1783   000EC0  6ED9               	movwf	fsr2l,c
  1784   000EC2  6ADA               	clrf	fsr2h,c
  1785   000EC4  CFDF FFF6          	movff	indf2,tblptrl
  1786   000EC8                     	if	1	;There is more than 1 active tblptr byte
  1787   000EC8  0E0E               	movlw	high __smallconst
  1788   000ECA  6EF7               	movwf	tblptrh,c
  1789   000ECC                     	endif
  1790   000ECC                     	if	0	;tblptru may be non-zero
  1791   000ECC                     	endif
  1792   000ECC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1793   000ECC  0E00               	movlw	low (__smallconst shr (0+16))
  1794   000ECE  6EF8               	movwf	tblptru,c
  1795   000ED0                     	endif
  1796   000ED0  0008               	tblrd		*
  1797   000ED2  50F5               	movf	tablat,w,c
  1798   000ED4  6E23               	movwf	??_vfpfcnvrt^0,c
  1799   000ED6  6A24               	clrf	(??_vfpfcnvrt+1)^0,c
  1800                           
  1801                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1802                           ; Switch size 1, requested type "simple"
  1803                           ; Number of cases is 1, Range of values is 0 to 0
  1804                           ; switch strategies available:
  1805                           ; Name         Instructions Cycles
  1806                           ; simple_byte            4     3 (average)
  1807                           ;	Chosen strategy is simple_byte
  1808   000ED8  5024               	movf	(??_vfpfcnvrt+1)^0,w,c
  1809   000EDA  0A00               	xorlw	0	; case 0
  1810   000EDC  B4D8               	btfsc	status,2,c
  1811   000EDE  EF73  F007         	goto	l2742
  1812   000EE2  EF5B  F007         	goto	l2178
  1813   000EE6                     l2742:
  1814                           
  1815                           ; Switch size 1, requested type "simple"
  1816                           ; Number of cases is 1, Range of values is 48 to 48
  1817                           ; switch strategies available:
  1818                           ; Name         Instructions Cycles
  1819                           ; simple_byte            4     3 (average)
  1820                           ;	Chosen strategy is simple_byte
  1821   000EE6  5023               	movf	??_vfpfcnvrt^0,w,c
  1822   000EE8  0A30               	xorlw	48	; case 48
  1823   000EEA  B4D8               	btfsc	status,2,c
  1824   000EEC  EF54  F007         	goto	l2174
  1825   000EF0  EF5B  F007         	goto	l2178
  1826   000EF4                     l2184:
  1827                           
  1828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1829   000EF4  5029               	movf	vfpfcnvrt@done^0,w,c
  1830   000EF6  B4D8               	btfsc	status,2,c
  1831   000EF8  EF80  F007         	goto	u1081
  1832   000EFC  EF82  F007         	goto	u1080
  1833   000F00                     u1081:
  1834   000F00  EF5F  F007         	goto	l2182
  1835   000F04                     u1080:
  1836   000F04                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1838   000F04  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1839   000F08  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1840   000F0C  EC76  F00A         	call	_read_prec_or_width	;wreg free
  1841   000F10  C007  F088         	movff	?_read_prec_or_width,_width
  1842   000F14  C008  F089         	movff	?_read_prec_or_width+1,_width+1
  1843   000F18                     
  1844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1845   000F18  0100               	movlb	0	; () banked
  1846   000F1A  BF89               	btfsc	(_width+1)& (0+255),7,b
  1847   000F1C  EF94  F007         	goto	u1090
  1848   000F20  EF92  F007         	goto	u1091
  1849   000F24                     u1091:
  1850   000F24  EF99  F007         	goto	l2192
  1851   000F28                     u1090:
  1852   000F28                     
  1853                           ; BSR set to: 0
  1854                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1855   000F28  805B               	bsf	_flags^0,0,c
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1858   000F2A  6D88               	negf	_width& (0+255),b
  1859   000F2C  1F89               	comf	(_width+1)& (0+255),f,b
  1860   000F2E  B0D8               	btfsc	status,0,c
  1861   000F30  2B89               	incf	(_width+1)& (0+255),f,b
  1862   000F32                     l2192:
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1866   000F32  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1867   000F34  6ED9               	movwf	fsr2l,c
  1868   000F36  6ADA               	clrf	fsr2h,c
  1869   000F38  50DF               	movf	indf2,w,c
  1870   000F3A  6E2A               	movwf	vfpfcnvrt@cp^0,c
  1871   000F3C                     
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1874   000F3C  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1875   000F40                     	if	1	;There is more than 1 active tblptr byte
  1876   000F40  0E0E               	movlw	high __smallconst
  1877   000F42  6EF7               	movwf	tblptrh,c
  1878   000F44                     	endif
  1879   000F44                     	if	0	;tblptru may be non-zero
  1880   000F44                     	endif
  1881   000F44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1882   000F44  0E00               	movlw	low (__smallconst shr (0+16))
  1883   000F46  6EF8               	movwf	tblptru,c
  1884   000F48                     	endif
  1885   000F48  0008               	tblrd		*
  1886   000F4A  50F5               	movf	tablat,w,c
  1887   000F4C  0A64               	xorlw	100
  1888   000F4E  B4D8               	btfsc	status,2,c
  1889   000F50  EFAC  F007         	goto	u1101
  1890   000F54  EFAE  F007         	goto	u1100
  1891   000F58                     u1101:
  1892   000F58  EFBE  F007         	goto	l2198
  1893   000F5C                     u1100:
  1894   000F5C                     
  1895                           ; BSR set to: 0
  1896   000F5C  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1897   000F60                     	if	1	;There is more than 1 active tblptr byte
  1898   000F60  0E0E               	movlw	high __smallconst
  1899   000F62  6EF7               	movwf	tblptrh,c
  1900   000F64                     	endif
  1901   000F64                     	if	0	;tblptru may be non-zero
  1902   000F64                     	endif
  1903   000F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1904   000F64  0E00               	movlw	low (__smallconst shr (0+16))
  1905   000F66  6EF8               	movwf	tblptru,c
  1906   000F68                     	endif
  1907   000F68  0008               	tblrd		*
  1908   000F6A  50F5               	movf	tablat,w,c
  1909   000F6C  0A69               	xorlw	105
  1910   000F6E  A4D8               	btfss	status,2,c
  1911   000F70  EFBC  F007         	goto	u1111
  1912   000F74  EFBE  F007         	goto	u1110
  1913   000F78                     u1111:
  1914   000F78  EFD9  F007         	goto	l2206
  1915   000F7C                     u1110:
  1916   000F7C                     l2198:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1920   000F7C  5022               	movf	vfpfcnvrt@ap^0,w,c
  1921   000F7E  6ED9               	movwf	fsr2l,c
  1922   000F80  6ADA               	clrf	fsr2h,c
  1923   000F82  0E02               	movlw	2
  1924   000F84  26DF               	addwf	indf2,f,c
  1925   000F86  5CDF               	subwf	indf2,w,c
  1926   000F88  6ED9               	movwf	fsr2l,c
  1927   000F8A  6ADA               	clrf	fsr2h,c
  1928   000F8C  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  1929   000F90  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  1930   000F94                     
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1933   000F94  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1934   000F96  6ED9               	movwf	fsr2l,c
  1935   000F98  6ADA               	clrf	fsr2h,c
  1936   000F9A  282A               	incf	vfpfcnvrt@cp^0,w,c
  1937   000F9C  6EDF               	movwf	indf2,c
  1938   000F9E                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1941   000F9E  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  1942   000FA2  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  1943   000FA6  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1944   000FAA  ECF3  F007         	call	_dtoa	;wreg free
  1945   000FAE  EFF2  F007         	goto	l1150
  1946   000FB2                     l2206:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1949   000FB2  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1950   000FB4  6ED9               	movwf	fsr2l,c
  1951   000FB6  6ADA               	clrf	fsr2h,c
  1952   000FB8  2ADF               	incf	indf2,f,c
  1953   000FBA  EFF2  F007         	goto	l1150
  1954   000FBE                     l2210:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1957   000FBE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1958   000FC0  6ED9               	movwf	fsr2l,c
  1959   000FC2  6ADA               	clrf	fsr2h,c
  1960   000FC4  CFDF FFF6          	movff	indf2,tblptrl
  1961   000FC8                     	if	1	;There is more than 1 active tblptr byte
  1962   000FC8  0E0E               	movlw	high __smallconst
  1963   000FCA  6EF7               	movwf	tblptrh,c
  1964   000FCC                     	endif
  1965   000FCC                     	if	0	;tblptru may be non-zero
  1966   000FCC                     	endif
  1967   000FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1968   000FCC  0E00               	movlw	low (__smallconst shr (0+16))
  1969   000FCE  6EF8               	movwf	tblptru,c
  1970   000FD0                     	endif
  1971   000FD0  0008               	tblrd		*
  1972   000FD2  50F5               	movf	tablat,w,c
  1973   000FD4  6E01               	movwf	fputc@c^0,c
  1974   000FD6  6A02               	clrf	(fputc@c+1)^0,c
  1975   000FD8  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1976   000FDC  EC68  F009         	call	_fputc	;wreg free
  1977   000FE0  EFD9  F007         	goto	l2206
  1978   000FE4                     l1150:
  1979   000FE4  0012               	return		;funcret
  1980   000FE6                     __end_of_vfpfcnvrt:
  1981                           	callstack 0
  1982                           
  1983 ;; *************** function _read_prec_or_width *****************
  1984 ;; Defined at:
  1985 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  1988 ;;		 -> vfprintf@cfmt(1), 
  1989 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  1990 ;;		 -> sprintf@ap(1), 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  c               1    8[COMRAM] unsigned char 
  1993 ;;  n               2    9[COMRAM] int 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  2    6[COMRAM] int 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2004 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;Total ram usage:        5 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 1
  2010 ;; This function calls:
  2011 ;;		___wmul
  2012 ;; This function is called by:
  2013 ;;		_vfpfcnvrt
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text9
  2018   0014EC                     __ptext9:
  2019                           	callstack 0
  2020   0014EC                     _read_prec_or_width:
  2021                           	callstack 25
  2022   0014EC                     
  2023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2024   0014EC  0E00               	movlw	0
  2025   0014EE  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2026   0014F0  0E00               	movlw	0
  2027   0014F2  6E0A               	movwf	read_prec_or_width@n^0,c
  2028   0014F4                     
  2029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2030   0014F4  5007               	movf	read_prec_or_width@fmt^0,w,c
  2031   0014F6  6ED9               	movwf	fsr2l,c
  2032   0014F8  6ADA               	clrf	fsr2h,c
  2033   0014FA  CFDF FFF6          	movff	indf2,tblptrl
  2034   0014FE                     	if	1	;There is more than 1 active tblptr byte
  2035   0014FE  0E0E               	movlw	high __smallconst
  2036   001500  6EF7               	movwf	tblptrh,c
  2037   001502                     	endif
  2038   001502                     	if	0	;tblptru may be non-zero
  2039   001502                     	endif
  2040   001502                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2041   001502  0E00               	movlw	low (__smallconst shr (0+16))
  2042   001504  6EF8               	movwf	tblptru,c
  2043   001506                     	endif
  2044   001506  0008               	tblrd		*
  2045   001508  50F5               	movf	tablat,w,c
  2046   00150A  0A2A               	xorlw	42
  2047   00150C  A4D8               	btfss	status,2,c
  2048   00150E  EF8B  F00A         	goto	u1051
  2049   001512  EF8D  F00A         	goto	u1050
  2050   001516                     u1051:
  2051   001516  EFB3  F00A         	goto	l2162
  2052   00151A                     u1050:
  2053   00151A                     
  2054                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2055   00151A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2056   00151C  6ED9               	movwf	fsr2l,c
  2057   00151E  6ADA               	clrf	fsr2h,c
  2058   001520  2ADF               	incf	indf2,f,c
  2059   001522                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2061   001522  5008               	movf	read_prec_or_width@ap^0,w,c
  2062   001524  6ED9               	movwf	fsr2l,c
  2063   001526  6ADA               	clrf	fsr2h,c
  2064   001528  0E02               	movlw	2
  2065   00152A  26DF               	addwf	indf2,f,c
  2066   00152C  5CDF               	subwf	indf2,w,c
  2067   00152E  6ED9               	movwf	fsr2l,c
  2068   001530  6ADA               	clrf	fsr2h,c
  2069   001532  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2070   001536  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2071                           
  2072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2073   00153A  EFC8  F00A         	goto	l1131
  2074   00153E                     l2158:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2077   00153E  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2078   001542  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2079   001546  0E00               	movlw	0
  2080   001548  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2081   00154A  0E0A               	movlw	10
  2082   00154C  6E03               	movwf	___wmul@multiplicand^0,c
  2083   00154E  ECDE  F00D         	call	___wmul	;wreg free
  2084   001552  5009               	movf	read_prec_or_width@c^0,w,c
  2085   001554  2401               	addwf	?___wmul^0,w,c
  2086   001556  6E0A               	movwf	read_prec_or_width@n^0,c
  2087   001558  0E00               	movlw	0
  2088   00155A  2002               	addwfc	(?___wmul+1)^0,w,c
  2089   00155C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2090   00155E                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2092   00155E  5007               	movf	read_prec_or_width@fmt^0,w,c
  2093   001560  6ED9               	movwf	fsr2l,c
  2094   001562  6ADA               	clrf	fsr2h,c
  2095   001564  2ADF               	incf	indf2,f,c
  2096   001566                     l2162:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2099   001566  5007               	movf	read_prec_or_width@fmt^0,w,c
  2100   001568  6ED9               	movwf	fsr2l,c
  2101   00156A  6ADA               	clrf	fsr2h,c
  2102   00156C  CFDF FFF6          	movff	indf2,tblptrl
  2103   001570                     	if	1	;There is more than 1 active tblptr byte
  2104   001570  0E0E               	movlw	high __smallconst
  2105   001572  6EF7               	movwf	tblptrh,c
  2106   001574                     	endif
  2107   001574                     	if	0	;tblptru may be non-zero
  2108   001574                     	endif
  2109   001574                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2110   001574  0E00               	movlw	low (__smallconst shr (0+16))
  2111   001576  6EF8               	movwf	tblptru,c
  2112   001578                     	endif
  2113   001578  0008               	tblrd		*
  2114   00157A  50F5               	movf	tablat,w,c
  2115   00157C  0FD0               	addlw	208
  2116   00157E  6E09               	movwf	read_prec_or_width@c^0,c
  2117   001580  0E09               	movlw	9
  2118   001582  6409               	cpfsgt	read_prec_or_width@c^0,c
  2119   001584  EFC6  F00A         	goto	u1061
  2120   001588  EFC8  F00A         	goto	u1060
  2121   00158C                     u1061:
  2122   00158C  EF9F  F00A         	goto	l2158
  2123   001590                     u1060:
  2124   001590                     l1131:
  2125                           
  2126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2127   001590  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2128   001594  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2129   001598  0012               	return		;funcret
  2130   00159A                     __end_of_read_prec_or_width:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function ___wmul *****************
  2134 ;; Defined at:
  2135 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  multiplier      2    0[COMRAM] unsigned int 
  2138 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  product         2    4[COMRAM] unsigned int 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2    0[COMRAM] unsigned int 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, prodl, prodh
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2153 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2154 ;;Total ram usage:        6 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_ADC2String
  2160 ;;		_read_prec_or_width
  2161 ;;		_setMotorPWM
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text10
  2166   001BBC                     __ptext10:
  2167                           	callstack 0
  2168   001BBC                     ___wmul:
  2169                           	callstack 25
  2170   001BBC  5001               	movf	___wmul@multiplier^0,w,c
  2171   001BBE  0203               	mulwf	___wmul@multiplicand^0,c
  2172   001BC0  CFF3 F005          	movff	prodl,___wmul@product
  2173   001BC4  CFF4 F006          	movff	prodh,___wmul@product+1
  2174   001BC8  5001               	movf	___wmul@multiplier^0,w,c
  2175   001BCA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2176   001BCC  50F3               	movf	243,w,c
  2177   001BCE  2606               	addwf	(___wmul@product+1)^0,f,c
  2178   001BD0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2179   001BD2  0203               	mulwf	___wmul@multiplicand^0,c
  2180   001BD4  50F3               	movf	243,w,c
  2181   001BD6  2606               	addwf	(___wmul@product+1)^0,f,c
  2182   001BD8  C005  F001         	movff	___wmul@product,?___wmul
  2183   001BDC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2184   001BE0  0012               	return		;funcret
  2185   001BE2                     __end_of___wmul:
  2186                           	callstack 0
  2187                           
  2188 ;; *************** function _dtoa *****************
  2189 ;; Defined at:
  2190 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2193 ;;		 -> sprintf@f(12), 
  2194 ;;  d               2   21[COMRAM] int 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  i               2   29[COMRAM] int 
  2197 ;;  w               2   26[COMRAM] int 
  2198 ;;  s               1   28[COMRAM] unsigned char 
  2199 ;;  p               1   25[COMRAM] _Bool 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;Total ram usage:       11 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 4
  2216 ;; This function calls:
  2217 ;;		___awdiv
  2218 ;;		___awmod
  2219 ;;		_abs
  2220 ;;		_pad
  2221 ;; This function is called by:
  2222 ;;		_vfpfcnvrt
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text11
  2227   000FE6                     __ptext11:
  2228                           	callstack 0
  2229   000FE6                     _dtoa:
  2230                           	callstack 22
  2231   000FE6                     
  2232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2233   000FE6  0E01               	movlw	1
  2234   000FE8  6E1A               	movwf	dtoa@p^0,c
  2235   000FEA                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2237   000FEA  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2238   000FEC  EFFA  F007         	goto	u951
  2239   000FF0  EFFD  F007         	goto	u950
  2240   000FF4                     u951:
  2241   000FF4  0E01               	movlw	1
  2242   000FF6  EFFE  F007         	goto	u960
  2243   000FFA                     u950:
  2244   000FFA  0E00               	movlw	0
  2245   000FFC                     u960:
  2246   000FFC  6E1D               	movwf	dtoa@s^0,c
  2247   000FFE                     
  2248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2249   000FFE  C088  F01B         	movff	_width,dtoa@w
  2250   001002  C089  F01C         	movff	_width+1,dtoa@w+1
  2251   001006                     
  2252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2253   001006  501D               	movf	dtoa@s^0,w,c
  2254   001008  B4D8               	btfsc	status,2,c
  2255   00100A  EF09  F008         	goto	u971
  2256   00100E  EF0B  F008         	goto	u970
  2257   001012                     u971:
  2258   001012  EF22  F008         	goto	l1114
  2259   001016                     u970:
  2260   001016                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2262   001016  061B               	decf	dtoa@w^0,f,c
  2263   001018  A0D8               	btfss	status,0,c
  2264   00101A  061C               	decf	(dtoa@w+1)^0,f,c
  2265   00101C                     
  2266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2267   00101C  501D               	movf	dtoa@s^0,w,c
  2268   00101E  A4D8               	btfss	status,2,c
  2269   001020  EF14  F008         	goto	u981
  2270   001024  EF16  F008         	goto	u980
  2271   001028                     u981:
  2272   001028  EF1C  F008         	goto	l2114
  2273   00102C                     u980:
  2274   00102C  0E00               	movlw	0
  2275   00102E  6E19               	movwf	(_dtoa$2280+1)^0,c
  2276   001030  0E2B               	movlw	43
  2277   001032  6E18               	movwf	_dtoa$2280^0,c
  2278   001034  EF20  F008         	goto	l2116
  2279   001038                     l2114:
  2280   001038  0E00               	movlw	0
  2281   00103A  6E19               	movwf	(_dtoa$2280+1)^0,c
  2282   00103C  0E2D               	movlw	45
  2283   00103E  6E18               	movwf	_dtoa$2280^0,c
  2284   001040                     l2116:
  2285   001040  C018  F01D         	movff	_dtoa$2280,dtoa@s
  2286   001044                     l1114:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2289   001044  0E00               	movlw	0
  2290   001046  6E1F               	movwf	(dtoa@i+1)^0,c
  2291   001048  0E1F               	movlw	31
  2292   00104A  6E1E               	movwf	dtoa@i^0,c
  2293   00104C                     
  2294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2295   00104C  0E00               	movlw	0
  2296   00104E  0100               	movlb	0	; () banked
  2297   001050  6FAC               	movwf	(_dbuf+31)& (0+255),b
  2298                           
  2299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2300   001052  EF58  F008         	goto	l2130
  2301   001056                     l2120:
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2304   001056  061E               	decf	dtoa@i^0,f,c
  2305   001058  A0D8               	btfss	status,0,c
  2306   00105A  061F               	decf	(dtoa@i+1)^0,f,c
  2307   00105C                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2309   00105C  501E               	movf	dtoa@i^0,w,c
  2310   00105E  0F8D               	addlw	low _dbuf
  2311   001060  6ED9               	movwf	fsr2l,c
  2312   001062  6ADA               	clrf	fsr2h,c
  2313   001064  C016  F001         	movff	dtoa@d,___awmod@dividend
  2314   001068  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2315   00106C  0E00               	movlw	0
  2316   00106E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2317   001070  0E0A               	movlw	10
  2318   001072  6E03               	movwf	___awmod@divisor^0,c
  2319   001074  EC1E  F00A         	call	___awmod	;wreg free
  2320   001078  C001  F007         	movff	?___awmod,abs@a
  2321   00107C  C002  F008         	movff	?___awmod+1,abs@a+1
  2322   001080  EC81  F00D         	call	_abs	;wreg free
  2323   001084  5007               	movf	?_abs^0,w,c
  2324   001086  0F30               	addlw	48
  2325   001088  6EDF               	movwf	indf2,c
  2326   00108A                     
  2327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2328   00108A  0E00               	movlw	0
  2329   00108C  6E1A               	movwf	dtoa@p^0,c
  2330   00108E                     
  2331                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2332   00108E  061B               	decf	dtoa@w^0,f,c
  2333   001090  A0D8               	btfss	status,0,c
  2334   001092  061C               	decf	(dtoa@w+1)^0,f,c
  2335   001094                     
  2336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2337   001094  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2338   001098  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2339   00109C  0E00               	movlw	0
  2340   00109E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2341   0010A0  0E0A               	movlw	10
  2342   0010A2  6E03               	movwf	___awdiv@divisor^0,c
  2343   0010A4  ECA7  F008         	call	___awdiv	;wreg free
  2344   0010A8  C001  F016         	movff	?___awdiv,dtoa@d
  2345   0010AC  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2346   0010B0                     l2130:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2349   0010B0  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2350   0010B2  EF63  F008         	goto	u991
  2351   0010B6  501F               	movf	(dtoa@i+1)^0,w,c
  2352   0010B8  E108               	bnz	u990
  2353   0010BA  041E               	decf	dtoa@i^0,w,c
  2354   0010BC  A0D8               	btfss	status,0,c
  2355   0010BE  EF63  F008         	goto	u991
  2356   0010C2  EF65  F008         	goto	u990
  2357   0010C6                     u991:
  2358   0010C6  EF8A  F008         	goto	l2140
  2359   0010CA                     u990:
  2360   0010CA  5016               	movf	dtoa@d^0,w,c
  2361   0010CC  1017               	iorwf	(dtoa@d+1)^0,w,c
  2362   0010CE  A4D8               	btfss	status,2,c
  2363   0010D0  EF6C  F008         	goto	u1001
  2364   0010D4  EF6E  F008         	goto	u1000
  2365   0010D8                     u1001:
  2366   0010D8  EF2B  F008         	goto	l2120
  2367   0010DC                     u1000:
  2368   0010DC  501A               	movf	dtoa@p^0,w,c
  2369   0010DE  A4D8               	btfss	status,2,c
  2370   0010E0  EF74  F008         	goto	u1011
  2371   0010E4  EF76  F008         	goto	u1010
  2372   0010E8                     u1011:
  2373   0010E8  EF2B  F008         	goto	l2120
  2374   0010EC                     u1010:
  2375   0010EC  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2376   0010EE  EF81  F008         	goto	u1021
  2377   0010F2  501C               	movf	(dtoa@w+1)^0,w,c
  2378   0010F4  E108               	bnz	u1020
  2379   0010F6  041B               	decf	dtoa@w^0,w,c
  2380   0010F8  A0D8               	btfss	status,0,c
  2381   0010FA  EF81  F008         	goto	u1021
  2382   0010FE  EF83  F008         	goto	u1020
  2383   001102                     u1021:
  2384   001102  EF8A  F008         	goto	l2140
  2385   001106                     u1020:
  2386   001106  B25B               	btfsc	_flags^0,1,c
  2387   001108  EF88  F008         	goto	u1031
  2388   00110C  EF8A  F008         	goto	u1030
  2389   001110                     u1031:
  2390   001110  EF2B  F008         	goto	l2120
  2391   001114                     u1030:
  2392   001114                     l2140:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2395   001114  501D               	movf	dtoa@s^0,w,c
  2396   001116  B4D8               	btfsc	status,2,c
  2397   001118  EF90  F008         	goto	u1041
  2398   00111C  EF92  F008         	goto	u1040
  2399   001120                     u1041:
  2400   001120  EF9B  F008         	goto	l2146
  2401   001124                     u1040:
  2402   001124                     
  2403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2404   001124  061E               	decf	dtoa@i^0,f,c
  2405   001126  A0D8               	btfss	status,0,c
  2406   001128  061F               	decf	(dtoa@i+1)^0,f,c
  2407   00112A                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2409   00112A  501E               	movf	dtoa@i^0,w,c
  2410   00112C  0F8D               	addlw	low _dbuf
  2411   00112E  6ED9               	movwf	fsr2l,c
  2412   001130  6ADA               	clrf	fsr2h,c
  2413   001132  C01D  FFDF         	movff	dtoa@s,indf2
  2414   001136                     l2146:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2417   001136  C015  F00E         	movff	dtoa@fp,pad@fp
  2418   00113A  501E               	movf	dtoa@i^0,w,c
  2419   00113C  0F8D               	addlw	low _dbuf
  2420   00113E  6E0F               	movwf	pad@buf^0,c
  2421   001140  C01B  F010         	movff	dtoa@w,pad@p
  2422   001144  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2423   001148  EC68  F00B         	call	_pad	;wreg free
  2424   00114C  0012               	return		;funcret
  2425   00114E                     __end_of_dtoa:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _pad *****************
  2429 ;; Defined at:
  2430 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2433 ;;		 -> sprintf@f(12), 
  2434 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2435 ;;		 -> dbuf(32), 
  2436 ;;  p               2   15[COMRAM] int 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  i               2   18[COMRAM] int 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;Total ram usage:        7 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 3
  2455 ;; This function calls:
  2456 ;;		_fputc
  2457 ;;		_fputs
  2458 ;; This function is called by:
  2459 ;;		_dtoa
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text12
  2464   0016D0                     __ptext12:
  2465                           	callstack 0
  2466   0016D0                     _pad:
  2467                           	callstack 22
  2468   0016D0                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2470   0016D0  A05B               	btfss	_flags^0,0,c
  2471   0016D2  EF6D  F00B         	goto	u901
  2472   0016D6  EF6F  F00B         	goto	u900
  2473   0016DA                     u901:
  2474   0016DA  EF75  F00B         	goto	l2084
  2475   0016DE                     u900:
  2476   0016DE                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2478   0016DE  C00F  F009         	movff	pad@buf,fputs@s
  2479   0016E2  C00E  F00A         	movff	pad@fp,fputs@fp
  2480   0016E6  EC2A  F00D         	call	_fputs	;wreg free
  2481   0016EA                     l2084:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2484   0016EA  BE11               	btfsc	(pad@p+1)^0,7,c
  2485   0016EC  EF7C  F00B         	goto	u910
  2486   0016F0  EF7A  F00B         	goto	u911
  2487   0016F4                     u911:
  2488   0016F4  EF80  F00B         	goto	l1106
  2489   0016F8                     u910:
  2490   0016F8                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2492   0016F8  0E00               	movlw	0
  2493   0016FA  6E11               	movwf	(pad@p+1)^0,c
  2494   0016FC  0E00               	movlw	0
  2495   0016FE  6E10               	movwf	pad@p^0,c
  2496   001700                     l1106:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2499   001700  0E00               	movlw	0
  2500   001702  6E14               	movwf	(pad@i+1)^0,c
  2501   001704  0E00               	movlw	0
  2502   001706  6E13               	movwf	pad@i^0,c
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2505   001708  EF90  F00B         	goto	l2092
  2506   00170C                     l2088:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2509   00170C  0E00               	movlw	0
  2510   00170E  6E02               	movwf	(fputc@c+1)^0,c
  2511   001710  0E20               	movlw	32
  2512   001712  6E01               	movwf	fputc@c^0,c
  2513   001714  C00E  F003         	movff	pad@fp,fputc@fp
  2514   001718  EC68  F009         	call	_fputc	;wreg free
  2515   00171C                     
  2516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2517   00171C  4A13               	infsnz	pad@i^0,f,c
  2518   00171E  2A14               	incf	(pad@i+1)^0,f,c
  2519   001720                     l2092:
  2520                           
  2521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2522   001720  5010               	movf	pad@p^0,w,c
  2523   001722  5C13               	subwf	pad@i^0,w,c
  2524   001724  5014               	movf	(pad@i+1)^0,w,c
  2525   001726  0A80               	xorlw	128
  2526   001728  6E12               	movwf	??_pad^0,c
  2527   00172A  5011               	movf	(pad@p+1)^0,w,c
  2528   00172C  0A80               	xorlw	128
  2529   00172E  5812               	subwfb	??_pad^0,w,c
  2530   001730  A0D8               	btfss	status,0,c
  2531   001732  EF9D  F00B         	goto	u921
  2532   001736  EF9F  F00B         	goto	u920
  2533   00173A                     u921:
  2534   00173A  EF86  F00B         	goto	l2088
  2535   00173E                     u920:
  2536   00173E                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2538   00173E  B05B               	btfsc	_flags^0,0,c
  2539   001740  EFA4  F00B         	goto	u931
  2540   001744  EFA6  F00B         	goto	u930
  2541   001748                     u931:
  2542   001748  EFAC  F00B         	goto	l1111
  2543   00174C                     u930:
  2544   00174C                     
  2545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2546   00174C  C00F  F009         	movff	pad@buf,fputs@s
  2547   001750  C00E  F00A         	movff	pad@fp,fputs@fp
  2548   001754  EC2A  F00D         	call	_fputs	;wreg free
  2549   001758                     l1111:
  2550   001758  0012               	return		;funcret
  2551   00175A                     __end_of_pad:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _fputs *****************
  2555 ;; Defined at:
  2556 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2559 ;;		 -> dbuf(32), 
  2560 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2561 ;;		 -> sprintf@f(12), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  i               2   11[COMRAM] int 
  2564 ;;  c               1   10[COMRAM] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    8[COMRAM] int 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;Total ram usage:        5 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 2
  2581 ;; This function calls:
  2582 ;;		_fputc
  2583 ;; This function is called by:
  2584 ;;		_pad
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text13
  2589   001A54                     __ptext13:
  2590                           	callstack 0
  2591   001A54                     _fputs:
  2592                           	callstack 22
  2593   001A54  0E00               	movlw	0
  2594   001A56  6E0D               	movwf	(fputs@i+1)^0,c
  2595   001A58  0E00               	movlw	0
  2596   001A5A  6E0C               	movwf	fputs@i^0,c
  2597   001A5C  EF39  F00D         	goto	l1992
  2598   001A60                     l1988:
  2599   001A60  C00B  F001         	movff	fputs@c,fputc@c
  2600   001A64  6A02               	clrf	(fputc@c+1)^0,c
  2601   001A66  C00A  F003         	movff	fputs@fp,fputc@fp
  2602   001A6A  EC68  F009         	call	_fputc	;wreg free
  2603   001A6E  4A0C               	infsnz	fputs@i^0,f,c
  2604   001A70  2A0D               	incf	(fputs@i+1)^0,f,c
  2605   001A72                     l1992:
  2606   001A72  5009               	movf	fputs@s^0,w,c
  2607   001A74  240C               	addwf	fputs@i^0,w,c
  2608   001A76  6ED9               	movwf	fsr2l,c
  2609   001A78  6ADA               	clrf	fsr2h,c
  2610   001A7A  50DF               	movf	indf2,w,c
  2611   001A7C  6E0B               	movwf	fputs@c^0,c
  2612   001A7E  500B               	movf	fputs@c^0,w,c
  2613   001A80  A4D8               	btfss	status,2,c
  2614   001A82  EF45  F00D         	goto	u771
  2615   001A86  EF47  F00D         	goto	u770
  2616   001A8A                     u771:
  2617   001A8A  EF30  F00D         	goto	l1988
  2618   001A8E                     u770:
  2619   001A8E  0012               	return		;funcret
  2620   001A90                     __end_of_fputs:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _fputc *****************
  2624 ;; Defined at:
  2625 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  c               2    0[COMRAM] int 
  2628 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2629 ;;		 -> sprintf@f(12), 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2    0[COMRAM] int 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;Total ram usage:        8 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 1
  2648 ;; This function calls:
  2649 ;;		_putch
  2650 ;; This function is called by:
  2651 ;;		_pad
  2652 ;;		_vfpfcnvrt
  2653 ;;		_fputs
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text14
  2658   0012D0                     __ptext14:
  2659                           	callstack 0
  2660   0012D0                     _fputc:
  2661                           	callstack 25
  2662   0012D0  5003               	movf	fputc@fp^0,w,c
  2663   0012D2  B4D8               	btfsc	status,2,c
  2664   0012D4  EF6E  F009         	goto	u731
  2665   0012D8  EF70  F009         	goto	u730
  2666   0012DC                     u731:
  2667   0012DC  EF78  F009         	goto	l1976
  2668   0012E0                     u730:
  2669   0012E0  5003               	movf	fputc@fp^0,w,c
  2670   0012E2  A4D8               	btfss	status,2,c
  2671   0012E4  EF76  F009         	goto	u741
  2672   0012E8  EF78  F009         	goto	u740
  2673   0012EC                     u741:
  2674   0012EC  EF7D  F009         	goto	l1978
  2675   0012F0                     u740:
  2676   0012F0                     l1976:
  2677   0012F0  5001               	movf	fputc@c^0,w,c
  2678   0012F2  EC3E  F00E         	call	_putch
  2679   0012F6  EFC4  F009         	goto	l1175
  2680   0012FA                     l1978:
  2681   0012FA  5003               	movf	fputc@fp^0,w,c
  2682   0012FC  6ED9               	movwf	fsr2l,c
  2683   0012FE  6ADA               	clrf	fsr2h,c
  2684   001300  0E0A               	movlw	10
  2685   001302  26D9               	addwf	fsr2l,f,c
  2686   001304  50DE               	movf	postinc2,w,c
  2687   001306  10DE               	iorwf	postinc2,w,c
  2688   001308  B4D8               	btfsc	status,2,c
  2689   00130A  EF89  F009         	goto	u751
  2690   00130E  EF8B  F009         	goto	u750
  2691   001312                     u751:
  2692   001312  EFA4  F009         	goto	l1982
  2693   001316                     u750:
  2694   001316  5003               	movf	fputc@fp^0,w,c
  2695   001318  6ED9               	movwf	fsr2l,c
  2696   00131A  6ADA               	clrf	fsr2h,c
  2697   00131C  0E0A               	movlw	10
  2698   00131E  26D9               	addwf	fsr2l,f,c
  2699   001320  5003               	movf	fputc@fp^0,w,c
  2700   001322  6EE1               	movwf	fsr1l,c
  2701   001324  6AE2               	clrf	fsr1h,c
  2702   001326  0E03               	movlw	3
  2703   001328  26E1               	addwf	fsr1l,f,c
  2704   00132A  50DE               	movf	postinc2,w,c
  2705   00132C  5CE6               	subwf	postinc1,w,c
  2706   00132E  50E6               	movf	postinc1,w,c
  2707   001330  0A80               	xorlw	128
  2708   001332  6E08               	movwf	(??_fputc+4)^0,c
  2709   001334  50DE               	movf	postinc2,w,c
  2710   001336  0A80               	xorlw	128
  2711   001338  5808               	subwfb	(??_fputc+4)^0,w,c
  2712   00133A  B0D8               	btfsc	status,0,c
  2713   00133C  EFA2  F009         	goto	u761
  2714   001340  EFA4  F009         	goto	u760
  2715   001344                     u761:
  2716   001344  EFC4  F009         	goto	l1175
  2717   001348                     u760:
  2718   001348                     l1982:
  2719   001348  5003               	movf	fputc@fp^0,w,c
  2720   00134A  6ED9               	movwf	fsr2l,c
  2721   00134C  6ADA               	clrf	fsr2h,c
  2722   00134E  0E03               	movlw	3
  2723   001350  26D9               	addwf	fsr2l,f,c
  2724   001352  CFDE F004          	movff	postinc2,??_fputc
  2725   001356  CFDD F005          	movff	postdec2,??_fputc+1
  2726   00135A  5003               	movf	fputc@fp^0,w,c
  2727   00135C  6ED9               	movwf	fsr2l,c
  2728   00135E  6ADA               	clrf	fsr2h,c
  2729   001360  CFDE F006          	movff	postinc2,??_fputc+2
  2730   001364  CFDD F007          	movff	postdec2,??_fputc+3
  2731   001368  5004               	movf	??_fputc^0,w,c
  2732   00136A  2406               	addwf	(??_fputc+2)^0,w,c
  2733   00136C  6ED9               	movwf	fsr2l,c
  2734   00136E  5005               	movf	(??_fputc+1)^0,w,c
  2735   001370  2007               	addwfc	(??_fputc+3)^0,w,c
  2736   001372  6EDA               	movwf	fsr2h,c
  2737   001374  C001  FFDF         	movff	fputc@c,indf2
  2738   001378  5003               	movf	fputc@fp^0,w,c
  2739   00137A  6ED9               	movwf	fsr2l,c
  2740   00137C  6ADA               	clrf	fsr2h,c
  2741   00137E  0E03               	movlw	3
  2742   001380  26D9               	addwf	fsr2l,f,c
  2743   001382  2ADE               	incf	postinc2,f,c
  2744   001384  0E00               	movlw	0
  2745   001386  22DD               	addwfc	postdec2,f,c
  2746   001388                     l1175:
  2747   001388  0012               	return		;funcret
  2748   00138A                     __end_of_fputc:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _putch *****************
  2752 ;; Defined at:
  2753 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  c               1    wreg     unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  c               1    0[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;Total ram usage:        0 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_fputc
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text15
  2781   001C7C                     __ptext15:
  2782                           	callstack 0
  2783   001C7C                     _putch:
  2784                           	callstack 25
  2785   001C7C  0012               	return		;funcret
  2786   001C7E                     __end_of_putch:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function _abs *****************
  2790 ;; Defined at:
  2791 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  a               2    6[COMRAM] int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2    6[COMRAM] int 
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;Total ram usage:        4 bytes
  2810 ;; Hardware stack levels used: 1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_dtoa
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text16
  2819   001B02                     __ptext16:
  2820                           	callstack 0
  2821   001B02                     _abs:
  2822                           	callstack 25
  2823   001B02  BE08               	btfsc	(abs@a+1)^0,7,c
  2824   001B04  EF86  F00D         	goto	u941
  2825   001B08  EF88  F00D         	goto	u940
  2826   001B0C                     u941:
  2827   001B0C  EF8E  F00D         	goto	l1160
  2828   001B10                     u940:
  2829   001B10  C007  F007         	movff	abs@a,?_abs
  2830   001B14  C008  F008         	movff	abs@a+1,?_abs+1
  2831   001B18  EF9A  F00D         	goto	l1163
  2832   001B1C                     l1160:
  2833   001B1C  C007  F009         	movff	abs@a,??_abs
  2834   001B20  C008  F00A         	movff	abs@a+1,??_abs+1
  2835   001B24  1E09               	comf	??_abs^0,f,c
  2836   001B26  1E0A               	comf	(??_abs+1)^0,f,c
  2837   001B28  4A09               	infsnz	??_abs^0,f,c
  2838   001B2A  2A0A               	incf	(??_abs+1)^0,f,c
  2839   001B2C  C009  F007         	movff	??_abs,?_abs
  2840   001B30  C00A  F008         	movff	??_abs+1,?_abs+1
  2841   001B34                     l1163:
  2842   001B34  0012               	return		;funcret
  2843   001B36                     __end_of_abs:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function ___awmod *****************
  2847 ;; Defined at:
  2848 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  dividend        2    0[COMRAM] int 
  2851 ;;  divisor         2    2[COMRAM] int 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  sign            1    5[COMRAM] unsigned char 
  2854 ;;  counter         1    4[COMRAM] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  2    0[COMRAM] int 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;Total ram usage:        6 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_dtoa
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text17
  2878   00143C                     __ptext17:
  2879                           	callstack 0
  2880   00143C                     ___awmod:
  2881                           	callstack 25
  2882   00143C  0E00               	movlw	0
  2883   00143E  6E06               	movwf	___awmod@sign^0,c
  2884   001440  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2885   001442  EF27  F00A         	goto	u840
  2886   001446  EF25  F00A         	goto	u841
  2887   00144A                     u841:
  2888   00144A  EF2D  F00A         	goto	l2052
  2889   00144E                     u840:
  2890   00144E  6C01               	negf	___awmod@dividend^0,c
  2891   001450  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2892   001452  B0D8               	btfsc	status,0,c
  2893   001454  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2894   001456  0E01               	movlw	1
  2895   001458  6E06               	movwf	___awmod@sign^0,c
  2896   00145A                     l2052:
  2897   00145A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2898   00145C  EF34  F00A         	goto	u850
  2899   001460  EF32  F00A         	goto	u851
  2900   001464                     u851:
  2901   001464  EF38  F00A         	goto	l2056
  2902   001468                     u850:
  2903   001468  6C03               	negf	___awmod@divisor^0,c
  2904   00146A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2905   00146C  B0D8               	btfsc	status,0,c
  2906   00146E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2907   001470                     l2056:
  2908   001470  5003               	movf	___awmod@divisor^0,w,c
  2909   001472  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2910   001474  B4D8               	btfsc	status,2,c
  2911   001476  EF3F  F00A         	goto	u861
  2912   00147A  EF41  F00A         	goto	u860
  2913   00147E                     u861:
  2914   00147E  EF65  F00A         	goto	l2072
  2915   001482                     u860:
  2916   001482  0E01               	movlw	1
  2917   001484  6E05               	movwf	___awmod@counter^0,c
  2918   001486  EF49  F00A         	goto	l2062
  2919   00148A                     l2060:
  2920   00148A  90D8               	bcf	status,0,c
  2921   00148C  3603               	rlcf	___awmod@divisor^0,f,c
  2922   00148E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2923   001490  2A05               	incf	___awmod@counter^0,f,c
  2924   001492                     l2062:
  2925   001492  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2926   001494  EF4E  F00A         	goto	u871
  2927   001498  EF50  F00A         	goto	u870
  2928   00149C                     u871:
  2929   00149C  EF45  F00A         	goto	l2060
  2930   0014A0                     u870:
  2931   0014A0                     l2064:
  2932   0014A0  5003               	movf	___awmod@divisor^0,w,c
  2933   0014A2  5C01               	subwf	___awmod@dividend^0,w,c
  2934   0014A4  5004               	movf	(___awmod@divisor+1)^0,w,c
  2935   0014A6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2936   0014A8  A0D8               	btfss	status,0,c
  2937   0014AA  EF59  F00A         	goto	u881
  2938   0014AE  EF5B  F00A         	goto	u880
  2939   0014B2                     u881:
  2940   0014B2  EF5F  F00A         	goto	l2068
  2941   0014B6                     u880:
  2942   0014B6  5003               	movf	___awmod@divisor^0,w,c
  2943   0014B8  5E01               	subwf	___awmod@dividend^0,f,c
  2944   0014BA  5004               	movf	(___awmod@divisor+1)^0,w,c
  2945   0014BC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2946   0014BE                     l2068:
  2947   0014BE  90D8               	bcf	status,0,c
  2948   0014C0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2949   0014C2  3203               	rrcf	___awmod@divisor^0,f,c
  2950   0014C4  2E05               	decfsz	___awmod@counter^0,f,c
  2951   0014C6  EF50  F00A         	goto	l2064
  2952   0014CA                     l2072:
  2953   0014CA  5006               	movf	___awmod@sign^0,w,c
  2954   0014CC  B4D8               	btfsc	status,2,c
  2955   0014CE  EF6B  F00A         	goto	u891
  2956   0014D2  EF6D  F00A         	goto	u890
  2957   0014D6                     u891:
  2958   0014D6  EF71  F00A         	goto	l2076
  2959   0014DA                     u890:
  2960   0014DA  6C01               	negf	___awmod@dividend^0,c
  2961   0014DC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2962   0014DE  B0D8               	btfsc	status,0,c
  2963   0014E0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2964   0014E2                     l2076:
  2965   0014E2  C001  F001         	movff	___awmod@dividend,?___awmod
  2966   0014E6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2967   0014EA  0012               	return		;funcret
  2968   0014EC                     __end_of___awmod:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function ___awdiv *****************
  2972 ;; Defined at:
  2973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  dividend        2    0[COMRAM] int 
  2976 ;;  divisor         2    2[COMRAM] int 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  quotient        2    6[COMRAM] int 
  2979 ;;  sign            1    5[COMRAM] unsigned char 
  2980 ;;  counter         1    4[COMRAM] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  2    0[COMRAM] int 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2994 ;;Total ram usage:        8 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_dtoa
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text18
  3004   00114E                     __ptext18:
  3005                           	callstack 0
  3006   00114E                     ___awdiv:
  3007                           	callstack 25
  3008   00114E  0E00               	movlw	0
  3009   001150  6E06               	movwf	___awdiv@sign^0,c
  3010   001152  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3011   001154  EFB0  F008         	goto	u780
  3012   001158  EFAE  F008         	goto	u781
  3013   00115C                     u781:
  3014   00115C  EFB6  F008         	goto	l2008
  3015   001160                     u780:
  3016   001160  6C03               	negf	___awdiv@divisor^0,c
  3017   001162  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3018   001164  B0D8               	btfsc	status,0,c
  3019   001166  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3020   001168  0E01               	movlw	1
  3021   00116A  6E06               	movwf	___awdiv@sign^0,c
  3022   00116C                     l2008:
  3023   00116C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3024   00116E  EFBD  F008         	goto	u790
  3025   001172  EFBB  F008         	goto	u791
  3026   001176                     u791:
  3027   001176  EFC3  F008         	goto	l2014
  3028   00117A                     u790:
  3029   00117A  6C01               	negf	___awdiv@dividend^0,c
  3030   00117C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3031   00117E  B0D8               	btfsc	status,0,c
  3032   001180  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3033   001182  0E01               	movlw	1
  3034   001184  1A06               	xorwf	___awdiv@sign^0,f,c
  3035   001186                     l2014:
  3036   001186  0E00               	movlw	0
  3037   001188  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3038   00118A  0E00               	movlw	0
  3039   00118C  6E07               	movwf	___awdiv@quotient^0,c
  3040   00118E  5003               	movf	___awdiv@divisor^0,w,c
  3041   001190  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3042   001192  B4D8               	btfsc	status,2,c
  3043   001194  EFCE  F008         	goto	u801
  3044   001198  EFD0  F008         	goto	u800
  3045   00119C                     u801:
  3046   00119C  EFF8  F008         	goto	l2036
  3047   0011A0                     u800:
  3048   0011A0  0E01               	movlw	1
  3049   0011A2  6E05               	movwf	___awdiv@counter^0,c
  3050   0011A4  EFD8  F008         	goto	l2022
  3051   0011A8                     l2020:
  3052   0011A8  90D8               	bcf	status,0,c
  3053   0011AA  3603               	rlcf	___awdiv@divisor^0,f,c
  3054   0011AC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3055   0011AE  2A05               	incf	___awdiv@counter^0,f,c
  3056   0011B0                     l2022:
  3057   0011B0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3058   0011B2  EFDD  F008         	goto	u811
  3059   0011B6  EFDF  F008         	goto	u810
  3060   0011BA                     u811:
  3061   0011BA  EFD4  F008         	goto	l2020
  3062   0011BE                     u810:
  3063   0011BE                     l2024:
  3064   0011BE  90D8               	bcf	status,0,c
  3065   0011C0  3607               	rlcf	___awdiv@quotient^0,f,c
  3066   0011C2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3067   0011C4  5003               	movf	___awdiv@divisor^0,w,c
  3068   0011C6  5C01               	subwf	___awdiv@dividend^0,w,c
  3069   0011C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3070   0011CA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3071   0011CC  A0D8               	btfss	status,0,c
  3072   0011CE  EFEB  F008         	goto	u821
  3073   0011D2  EFED  F008         	goto	u820
  3074   0011D6                     u821:
  3075   0011D6  EFF2  F008         	goto	l2032
  3076   0011DA                     u820:
  3077   0011DA  5003               	movf	___awdiv@divisor^0,w,c
  3078   0011DC  5E01               	subwf	___awdiv@dividend^0,f,c
  3079   0011DE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3080   0011E0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3081   0011E2  8007               	bsf	___awdiv@quotient^0,0,c
  3082   0011E4                     l2032:
  3083   0011E4  90D8               	bcf	status,0,c
  3084   0011E6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3085   0011E8  3203               	rrcf	___awdiv@divisor^0,f,c
  3086   0011EA  2E05               	decfsz	___awdiv@counter^0,f,c
  3087   0011EC  EFDF  F008         	goto	l2024
  3088   0011F0                     l2036:
  3089   0011F0  5006               	movf	___awdiv@sign^0,w,c
  3090   0011F2  B4D8               	btfsc	status,2,c
  3091   0011F4  EFFE  F008         	goto	u831
  3092   0011F8  EF00  F009         	goto	u830
  3093   0011FC                     u831:
  3094   0011FC  EF04  F009         	goto	l2040
  3095   001200                     u830:
  3096   001200  6C07               	negf	___awdiv@quotient^0,c
  3097   001202  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3098   001204  B0D8               	btfsc	status,0,c
  3099   001206  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3100   001208                     l2040:
  3101   001208  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3102   00120C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3103   001210  0012               	return		;funcret
  3104   001212                     __end_of___awdiv:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function ___lwdiv *****************
  3108 ;; Defined at:
  3109 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  dividend        2    6[COMRAM] unsigned int 
  3112 ;;  divisor         2    8[COMRAM] unsigned int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  quotient        2   10[COMRAM] unsigned int 
  3115 ;;  counter         1   12[COMRAM] unsigned char 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  2    6[COMRAM] unsigned int 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;Total ram usage:        7 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_ADC2String
  3135 ;;		_setMotorPWM
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text19
  3140   0017E0                     __ptext19:
  3141                           	callstack 0
  3142   0017E0                     ___lwdiv:
  3143                           	callstack 27
  3144   0017E0  0E00               	movlw	0
  3145   0017E2  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3146   0017E4  0E00               	movlw	0
  3147   0017E6  6E0B               	movwf	___lwdiv@quotient^0,c
  3148   0017E8  5009               	movf	___lwdiv@divisor^0,w,c
  3149   0017EA  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3150   0017EC  B4D8               	btfsc	status,2,c
  3151   0017EE  EFFB  F00B         	goto	u1161
  3152   0017F2  EFFD  F00B         	goto	u1160
  3153   0017F6                     u1161:
  3154   0017F6  EF25  F00C         	goto	l899
  3155   0017FA                     u1160:
  3156   0017FA  0E01               	movlw	1
  3157   0017FC  6E0D               	movwf	___lwdiv@counter^0,c
  3158   0017FE  EF05  F00C         	goto	l2258
  3159   001802                     l2256:
  3160   001802  90D8               	bcf	status,0,c
  3161   001804  3609               	rlcf	___lwdiv@divisor^0,f,c
  3162   001806  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3163   001808  2A0D               	incf	___lwdiv@counter^0,f,c
  3164   00180A                     l2258:
  3165   00180A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3166   00180C  EF0A  F00C         	goto	u1171
  3167   001810  EF0C  F00C         	goto	u1170
  3168   001814                     u1171:
  3169   001814  EF01  F00C         	goto	l2256
  3170   001818                     u1170:
  3171   001818                     l2260:
  3172   001818  90D8               	bcf	status,0,c
  3173   00181A  360B               	rlcf	___lwdiv@quotient^0,f,c
  3174   00181C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3175   00181E  5009               	movf	___lwdiv@divisor^0,w,c
  3176   001820  5C07               	subwf	___lwdiv@dividend^0,w,c
  3177   001822  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3178   001824  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3179   001826  A0D8               	btfss	status,0,c
  3180   001828  EF18  F00C         	goto	u1181
  3181   00182C  EF1A  F00C         	goto	u1180
  3182   001830                     u1181:
  3183   001830  EF1F  F00C         	goto	l2268
  3184   001834                     u1180:
  3185   001834  5009               	movf	___lwdiv@divisor^0,w,c
  3186   001836  5E07               	subwf	___lwdiv@dividend^0,f,c
  3187   001838  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3188   00183A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3189   00183C  800B               	bsf	___lwdiv@quotient^0,0,c
  3190   00183E                     l2268:
  3191   00183E  90D8               	bcf	status,0,c
  3192   001840  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3193   001842  3209               	rrcf	___lwdiv@divisor^0,f,c
  3194   001844  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3195   001846  EF0C  F00C         	goto	l2260
  3196   00184A                     l899:
  3197   00184A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3198   00184E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3199   001852  0012               	return		;funcret
  3200   001854                     __end_of___lwdiv:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function _color_read_Red *****************
  3204 ;; Defined at:
  3205 ;;		line 30 in file "color.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  tmp             2    9[COMRAM] unsigned int 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2    4[COMRAM] unsigned int 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;Total ram usage:        7 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 2
  3226 ;; This function calls:
  3227 ;;		_I2C_2_Master_Read
  3228 ;;		_I2C_2_Master_RepStart
  3229 ;;		_I2C_2_Master_Start
  3230 ;;		_I2C_2_Master_Stop
  3231 ;;		_I2C_2_Master_Write
  3232 ;; This function is called by:
  3233 ;;		_test
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text20
  3238   001854                     __ptext20:
  3239                           	callstack 0
  3240   001854                     _color_read_Red:
  3241                           	callstack 27
  3242   001854                     
  3243                           ;color.c: 32:  unsigned int tmp;;color.c: 33:  I2C_2_Master_Start();
  3244   001854  EC39  F00E         	call	_I2C_2_Master_Start	;wreg free
  3245                           
  3246                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  3247   001858  0E52               	movlw	82
  3248   00185A  EC29  F00E         	call	_I2C_2_Master_Write
  3249                           
  3250                           ;color.c: 35:  I2C_2_Master_Write(0xA0 | 0x16);
  3251   00185E  0EB6               	movlw	182
  3252   001860  EC29  F00E         	call	_I2C_2_Master_Write
  3253                           
  3254                           ;color.c: 36:  I2C_2_Master_RepStart();
  3255   001864  EC2F  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3256                           
  3257                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x01);
  3258   001868  0E53               	movlw	83
  3259   00186A  EC29  F00E         	call	_I2C_2_Master_Write
  3260                           
  3261                           ;color.c: 38:  tmp=I2C_2_Master_Read(1);
  3262   00186E  0E01               	movlw	1
  3263   001870  ECEB  F00C         	call	_I2C_2_Master_Read
  3264   001874  6E07               	movwf	??_color_read_Red^0,c
  3265   001876  5007               	movf	??_color_read_Red^0,w,c
  3266   001878  6E0A               	movwf	color_read_Red@tmp^0,c
  3267   00187A  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3268                           
  3269                           ;color.c: 39:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3270   00187C  0E00               	movlw	0
  3271   00187E  ECEB  F00C         	call	_I2C_2_Master_Read
  3272   001882  6E07               	movwf	??_color_read_Red^0,c
  3273   001884  5007               	movf	??_color_read_Red^0,w,c
  3274   001886  6E09               	movwf	(??_color_read_Red+2)^0,c
  3275   001888  6A08               	clrf	(??_color_read_Red+1)^0,c
  3276   00188A  500A               	movf	color_read_Red@tmp^0,w,c
  3277   00188C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3278   00188E  6E0A               	movwf	color_read_Red@tmp^0,c
  3279   001890  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3280   001892  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3281   001894  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3282                           
  3283                           ;color.c: 40:  I2C_2_Master_Stop();
  3284   001896  EC34  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3285   00189A                     
  3286                           ;color.c: 41:  return tmp;
  3287   00189A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3288   00189E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3289   0018A2  0012               	return		;funcret
  3290   0018A4                     __end_of_color_read_Red:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _color_read_Green *****************
  3294 ;; Defined at:
  3295 ;;		line 44 in file "color.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  tmp             2    9[COMRAM] unsigned int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2    4[COMRAM] unsigned int 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;Total ram usage:        7 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 2
  3316 ;; This function calls:
  3317 ;;		_I2C_2_Master_Read
  3318 ;;		_I2C_2_Master_RepStart
  3319 ;;		_I2C_2_Master_Start
  3320 ;;		_I2C_2_Master_Stop
  3321 ;;		_I2C_2_Master_Write
  3322 ;; This function is called by:
  3323 ;;		_test
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text21
  3328   0018A4                     __ptext21:
  3329                           	callstack 0
  3330   0018A4                     _color_read_Green:
  3331                           	callstack 27
  3332   0018A4                     
  3333                           ;color.c: 46:  unsigned int tmp;;color.c: 47:  I2C_2_Master_Start();
  3334   0018A4  EC39  F00E         	call	_I2C_2_Master_Start	;wreg free
  3335                           
  3336                           ;color.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  3337   0018A8  0E52               	movlw	82
  3338   0018AA  EC29  F00E         	call	_I2C_2_Master_Write
  3339                           
  3340                           ;color.c: 49:  I2C_2_Master_Write(0xA0 | 0x18);
  3341   0018AE  0EB8               	movlw	184
  3342   0018B0  EC29  F00E         	call	_I2C_2_Master_Write
  3343                           
  3344                           ;color.c: 50:  I2C_2_Master_RepStart();
  3345   0018B4  EC2F  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3346                           
  3347                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3348   0018B8  0E53               	movlw	83
  3349   0018BA  EC29  F00E         	call	_I2C_2_Master_Write
  3350                           
  3351                           ;color.c: 52:  tmp=I2C_2_Master_Read(1);
  3352   0018BE  0E01               	movlw	1
  3353   0018C0  ECEB  F00C         	call	_I2C_2_Master_Read
  3354   0018C4  6E07               	movwf	??_color_read_Green^0,c
  3355   0018C6  5007               	movf	??_color_read_Green^0,w,c
  3356   0018C8  6E0A               	movwf	color_read_Green@tmp^0,c
  3357   0018CA  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3358                           
  3359                           ;color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3360   0018CC  0E00               	movlw	0
  3361   0018CE  ECEB  F00C         	call	_I2C_2_Master_Read
  3362   0018D2  6E07               	movwf	??_color_read_Green^0,c
  3363   0018D4  5007               	movf	??_color_read_Green^0,w,c
  3364   0018D6  6E09               	movwf	(??_color_read_Green+2)^0,c
  3365   0018D8  6A08               	clrf	(??_color_read_Green+1)^0,c
  3366   0018DA  500A               	movf	color_read_Green@tmp^0,w,c
  3367   0018DC  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3368   0018DE  6E0A               	movwf	color_read_Green@tmp^0,c
  3369   0018E0  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3370   0018E2  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3371   0018E4  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3372                           
  3373                           ;color.c: 54:  I2C_2_Master_Stop();
  3374   0018E6  EC34  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3375   0018EA                     
  3376                           ;color.c: 55:  return tmp;
  3377   0018EA  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3378   0018EE  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3379   0018F2  0012               	return		;funcret
  3380   0018F4                     __end_of_color_read_Green:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _color_read_Clear *****************
  3384 ;; Defined at:
  3385 ;;		line 73 in file "color.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  tmp             2    9[COMRAM] unsigned int 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  2    4[COMRAM] unsigned int 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;Total ram usage:        7 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 2
  3406 ;; This function calls:
  3407 ;;		_I2C_2_Master_Read
  3408 ;;		_I2C_2_Master_RepStart
  3409 ;;		_I2C_2_Master_Start
  3410 ;;		_I2C_2_Master_Stop
  3411 ;;		_I2C_2_Master_Write
  3412 ;; This function is called by:
  3413 ;;		_test
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text22
  3418   0018F4                     __ptext22:
  3419                           	callstack 0
  3420   0018F4                     _color_read_Clear:
  3421                           	callstack 27
  3422   0018F4                     
  3423                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  3424   0018F4  EC39  F00E         	call	_I2C_2_Master_Start	;wreg free
  3425                           
  3426                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  3427   0018F8  0E52               	movlw	82
  3428   0018FA  EC29  F00E         	call	_I2C_2_Master_Write
  3429                           
  3430                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  3431   0018FE  0EB4               	movlw	180
  3432   001900  EC29  F00E         	call	_I2C_2_Master_Write
  3433                           
  3434                           ;color.c: 79:  I2C_2_Master_RepStart();
  3435   001904  EC2F  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3436                           
  3437                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  3438   001908  0E53               	movlw	83
  3439   00190A  EC29  F00E         	call	_I2C_2_Master_Write
  3440                           
  3441                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  3442   00190E  0E01               	movlw	1
  3443   001910  ECEB  F00C         	call	_I2C_2_Master_Read
  3444   001914  6E07               	movwf	??_color_read_Clear^0,c
  3445   001916  5007               	movf	??_color_read_Clear^0,w,c
  3446   001918  6E0A               	movwf	color_read_Clear@tmp^0,c
  3447   00191A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3448                           
  3449                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3450   00191C  0E00               	movlw	0
  3451   00191E  ECEB  F00C         	call	_I2C_2_Master_Read
  3452   001922  6E07               	movwf	??_color_read_Clear^0,c
  3453   001924  5007               	movf	??_color_read_Clear^0,w,c
  3454   001926  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3455   001928  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3456   00192A  500A               	movf	color_read_Clear@tmp^0,w,c
  3457   00192C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3458   00192E  6E0A               	movwf	color_read_Clear@tmp^0,c
  3459   001930  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3460   001932  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3461   001934  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3462                           
  3463                           ;color.c: 83:  I2C_2_Master_Stop();
  3464   001936  EC34  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3465   00193A                     
  3466                           ;color.c: 84:  return tmp;
  3467   00193A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3468   00193E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3469   001942  0012               	return		;funcret
  3470   001944                     __end_of_color_read_Clear:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _color_read_Blue *****************
  3474 ;; Defined at:
  3475 ;;		line 58 in file "color.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  tmp             2    9[COMRAM] unsigned int 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  2    4[COMRAM] unsigned int 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3492 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3493 ;;Total ram usage:        7 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 2
  3496 ;; This function calls:
  3497 ;;		_I2C_2_Master_Read
  3498 ;;		_I2C_2_Master_RepStart
  3499 ;;		_I2C_2_Master_Start
  3500 ;;		_I2C_2_Master_Stop
  3501 ;;		_I2C_2_Master_Write
  3502 ;; This function is called by:
  3503 ;;		_test
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text23
  3508   001944                     __ptext23:
  3509                           	callstack 0
  3510   001944                     _color_read_Blue:
  3511                           	callstack 27
  3512   001944                     
  3513                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  3514   001944  EC39  F00E         	call	_I2C_2_Master_Start	;wreg free
  3515                           
  3516                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  3517   001948  0E52               	movlw	82
  3518   00194A  EC29  F00E         	call	_I2C_2_Master_Write
  3519                           
  3520                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x1A);
  3521   00194E  0EBA               	movlw	186
  3522   001950  EC29  F00E         	call	_I2C_2_Master_Write
  3523                           
  3524                           ;color.c: 64:  I2C_2_Master_RepStart();
  3525   001954  EC2F  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  3526                           
  3527                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  3528   001958  0E53               	movlw	83
  3529   00195A  EC29  F00E         	call	_I2C_2_Master_Write
  3530                           
  3531                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  3532   00195E  0E01               	movlw	1
  3533   001960  ECEB  F00C         	call	_I2C_2_Master_Read
  3534   001964  6E07               	movwf	??_color_read_Blue^0,c
  3535   001966  5007               	movf	??_color_read_Blue^0,w,c
  3536   001968  6E0A               	movwf	color_read_Blue@tmp^0,c
  3537   00196A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3538                           
  3539                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3540   00196C  0E00               	movlw	0
  3541   00196E  ECEB  F00C         	call	_I2C_2_Master_Read
  3542   001972  6E07               	movwf	??_color_read_Blue^0,c
  3543   001974  5007               	movf	??_color_read_Blue^0,w,c
  3544   001976  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3545   001978  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3546   00197A  500A               	movf	color_read_Blue@tmp^0,w,c
  3547   00197C  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3548   00197E  6E0A               	movwf	color_read_Blue@tmp^0,c
  3549   001980  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3550   001982  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3551   001984  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3552                           
  3553                           ;color.c: 68:  I2C_2_Master_Stop();
  3554   001986  EC34  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3555   00198A                     
  3556                           ;color.c: 69:  return tmp;
  3557   00198A  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3558   00198E  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3559   001992  0012               	return		;funcret
  3560   001994                     __end_of_color_read_Blue:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _I2C_2_Master_RepStart *****************
  3564 ;; Defined at:
  3565 ;;		line 33 in file "i2c.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 1
  3586 ;; This function calls:
  3587 ;;		_I2C_2_Master_Idle
  3588 ;; This function is called by:
  3589 ;;		_color_read_Red
  3590 ;;		_color_read_Green
  3591 ;;		_color_read_Blue
  3592 ;;		_color_read_Clear
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text24
  3597   001C5E                     __ptext24:
  3598                           	callstack 0
  3599   001C5E                     _I2C_2_Master_RepStart:
  3600                           	callstack 27
  3601   001C5E                     
  3602                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3603   001C5E  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3604   001C62                     
  3605                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3606   001C62  010E               	movlb	14	; () banked
  3607   001C64  83DA               	bsf	218,1,b	;volatile
  3608   001C66                     
  3609                           ; BSR set to: 14
  3610   001C66  0012               	return		;funcret
  3611   001C68                     __end_of_I2C_2_Master_RepStart:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _I2C_2_Master_Read *****************
  3615 ;; Defined at:
  3616 ;;		line 51 in file "i2c.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  ack             1    wreg     unsigned char 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  ack             1    2[COMRAM] unsigned char 
  3621 ;;  tmp             1    3[COMRAM] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      unsigned char 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;Total ram usage:        3 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 1
  3638 ;; This function calls:
  3639 ;;		_I2C_2_Master_Idle
  3640 ;; This function is called by:
  3641 ;;		_color_read_Red
  3642 ;;		_color_read_Green
  3643 ;;		_color_read_Blue
  3644 ;;		_color_read_Clear
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text25
  3649   0019D6                     __ptext25:
  3650                           	callstack 0
  3651   0019D6                     _I2C_2_Master_Read:
  3652                           	callstack 27
  3653                           
  3654                           ; BSR set to: 14
  3655                           ;incstack = 0
  3656                           ;I2C_2_Master_Read@ack stored from wreg
  3657   0019D6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3658   0019D8                     
  3659                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3660   0019D8  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3661   0019DC                     
  3662                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3663   0019DC  010E               	movlb	14	; () banked
  3664   0019DE  87DA               	bsf	218,3,b	;volatile
  3665                           
  3666                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3667   0019E0  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3668   0019E4                     
  3669                           ;i2c.c: 57:   tmp = SSP2BUF;
  3670   0019E4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3671                           
  3672                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3673   0019E8  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3674   0019EC                     
  3675                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3676   0019EC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3677   0019EE  B4D8               	btfsc	status,2,c
  3678   0019F0  EFFC  F00C         	goto	u1191
  3679   0019F4  EF00  F00D         	goto	u1190
  3680   0019F8                     u1191:
  3681   0019F8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3682   0019FA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3683   0019FC  EF01  F00D         	goto	u1208
  3684   001A00                     u1190:
  3685   001A00  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3686   001A02                     u1208:
  3687   001A02  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3688   001A04  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3689   001A06  010E               	movlb	14	; () banked
  3690   001A08  51DA               	movf	218,w,b	;volatile
  3691   001A0A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3692   001A0C  0BDF               	andlw	-33
  3693   001A0E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3694   001A10  6FDA               	movwf	218,b	;volatile
  3695   001A12                     
  3696                           ; BSR set to: 14
  3697                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3698   001A12  89DA               	bsf	218,4,b	;volatile
  3699   001A14                     
  3700                           ; BSR set to: 14
  3701                           ;i2c.c: 61:   return tmp;
  3702   001A14  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3703   001A16                     
  3704                           ; BSR set to: 14
  3705   001A16  0012               	return		;funcret
  3706   001A18                     __end_of_I2C_2_Master_Read:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _initUSART4 *****************
  3710 ;; Defined at:
  3711 ;;		line 14 in file "serial.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text26
  3739   001C02                     __ptext26:
  3740                           	callstack 0
  3741   001C02                     _initUSART4:
  3742                           	callstack 30
  3743   001C02                     
  3744                           ;serial.c: 15:     RC0PPS = 0x12;
  3745   001C02  0E12               	movlw	18
  3746   001C04  010E               	movlb	14	; () banked
  3747   001C06  6F62               	movwf	98,b	;volatile
  3748                           
  3749                           ;serial.c: 16:     RX4PPS = 0x11;
  3750   001C08  0E11               	movlw	17
  3751   001C0A  6F15               	movwf	21,b	;volatile
  3752   001C0C                     
  3753                           ; BSR set to: 14
  3754                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  3755   001C0C  97E9               	bcf	233,3,b	;volatile
  3756   001C0E                     
  3757                           ; BSR set to: 14
  3758                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  3759   001C0E  95E8               	bcf	232,2,b	;volatile
  3760                           
  3761                           ;serial.c: 19:     SP4BRGL = 51;
  3762   001C10  0E33               	movlw	51
  3763   001C12  6FE5               	movwf	229,b	;volatile
  3764                           
  3765                           ;serial.c: 20:     SP4BRGH = 0;
  3766   001C14  0E00               	movlw	0
  3767   001C16  6FE6               	movwf	230,b	;volatile
  3768   001C18                     
  3769                           ; BSR set to: 14
  3770                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  3771   001C18  89E7               	bsf	231,4,b	;volatile
  3772   001C1A                     
  3773                           ; BSR set to: 14
  3774                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  3775   001C1A  8BE8               	bsf	232,5,b	;volatile
  3776   001C1C                     
  3777                           ; BSR set to: 14
  3778                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  3779   001C1C  8FE7               	bsf	231,7,b	;volatile
  3780   001C1E                     
  3781                           ; BSR set to: 14
  3782   001C1E  0012               	return		;funcret
  3783   001C20                     __end_of_initUSART4:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function _initDCmotorsPWM *****************
  3787 ;; Defined at:
  3788 ;;		line 5 in file "dc_motor.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; This function calls:
  3809 ;;		Nothing
  3810 ;; This function is called by:
  3811 ;;		_main
  3812 ;; This function uses a non-reentrant model
  3813 ;;
  3814                           
  3815                           	psect	text27
  3816   001640                     __ptext27:
  3817                           	callstack 0
  3818   001640                     _initDCmotorsPWM:
  3819                           	callstack 30
  3820   001640                     
  3821                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  3822   001640  9485               	bcf	133,2,c	;volatile
  3823                           
  3824                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  3825   001642  9E83               	bcf	131,7,c	;volatile
  3826                           
  3827                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  3828   001644  9885               	bcf	133,4,c	;volatile
  3829                           
  3830                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  3831   001646  9C87               	bcf	135,6,c	;volatile
  3832                           
  3833                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  3834   001648  947D               	bcf	125,2,c	;volatile
  3835                           
  3836                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  3837   00164A  9E7B               	bcf	123,7,c	;volatile
  3838                           
  3839                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  3840   00164C  987D               	bcf	125,4,c	;volatile
  3841                           
  3842                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  3843   00164E  9C7F               	bcf	127,6,c	;volatile
  3844   001650                     
  3845                           ;dc_motor.c: 18:     RE2PPS=0x05;
  3846   001650  0E05               	movlw	5
  3847   001652  010E               	movlb	14	; () banked
  3848   001654  6F74               	movwf	116,b	;volatile
  3849                           
  3850                           ;dc_motor.c: 19:     RE4PPS=0x06;
  3851   001656  0E06               	movlw	6
  3852   001658  6F76               	movwf	118,b	;volatile
  3853                           
  3854                           ;dc_motor.c: 20:     RC7PPS=0x07;
  3855   00165A  0E07               	movlw	7
  3856   00165C  6F69               	movwf	105,b	;volatile
  3857                           
  3858                           ;dc_motor.c: 21:     RG6PPS=0x08;
  3859   00165E  0E08               	movlw	8
  3860   001660  6F88               	movwf	136,b	;volatile
  3861                           
  3862                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  3863   001662  50BD               	movf	189,w,c	;volatile
  3864   001664  0B8F               	andlw	-113
  3865   001666  0940               	iorlw	64
  3866   001668  6EBD               	movwf	189,c	;volatile
  3867                           
  3868                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  3869   00166A  0EE0               	movlw	-32
  3870   00166C  16BE               	andwf	190,f,c	;volatile
  3871                           
  3872                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  3873   00166E  50BF               	movf	191,w,c	;volatile
  3874   001670  0BF0               	andlw	-16
  3875   001672  0901               	iorlw	1
  3876   001674  6EBF               	movwf	191,c	;volatile
  3877   001676                     
  3878                           ; BSR set to: 14
  3879                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  3880   001676  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  3881   00167A                     
  3882                           ; BSR set to: 14
  3883                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  3884   00167A  8EBD               	bsf	189,7,c	;volatile
  3885                           
  3886                           ;dc_motor.c: 35:     CCPR1H=0;
  3887   00167C  0E00               	movlw	0
  3888   00167E  6EAA               	movwf	170,c	;volatile
  3889                           
  3890                           ;dc_motor.c: 36:     CCPR2H=0;
  3891   001680  0E00               	movlw	0
  3892   001682  6EA6               	movwf	166,c	;volatile
  3893                           
  3894                           ;dc_motor.c: 37:     CCPR3H=0;
  3895   001684  0E00               	movlw	0
  3896   001686  010F               	movlb	15	; () banked
  3897   001688  6F25               	movwf	37,b	;volatile
  3898                           
  3899                           ;dc_motor.c: 38:     CCPR4H=0;
  3900   00168A  0E00               	movlw	0
  3901   00168C  6F21               	movwf	33,b	;volatile
  3902                           
  3903                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  3904   00168E  0EFC               	movlw	-4
  3905   001690  16AD               	andwf	173,f,c	;volatile
  3906                           
  3907                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  3908   001692  0EF3               	movlw	-13
  3909   001694  16AD               	andwf	173,f,c	;volatile
  3910                           
  3911                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  3912   001696  0ECF               	movlw	-49
  3913   001698  16AD               	andwf	173,f,c	;volatile
  3914                           
  3915                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  3916   00169A  0E3F               	movlw	-193
  3917   00169C  16AD               	andwf	173,f,c	;volatile
  3918   00169E                     
  3919                           ; BSR set to: 15
  3920                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  3921   00169E  88AB               	bsf	171,4,c	;volatile
  3922                           
  3923                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  3924   0016A0  50AB               	movf	171,w,c	;volatile
  3925   0016A2  0BF0               	andlw	-16
  3926   0016A4  090C               	iorlw	12
  3927   0016A6  6EAB               	movwf	171,c	;volatile
  3928   0016A8                     
  3929                           ; BSR set to: 15
  3930                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  3931   0016A8  8EAB               	bsf	171,7,c	;volatile
  3932   0016AA                     
  3933                           ; BSR set to: 15
  3934                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  3935   0016AA  88A7               	bsf	167,4,c	;volatile
  3936                           
  3937                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  3938   0016AC  50A7               	movf	167,w,c	;volatile
  3939   0016AE  0BF0               	andlw	-16
  3940   0016B0  090C               	iorlw	12
  3941   0016B2  6EA7               	movwf	167,c	;volatile
  3942   0016B4                     
  3943                           ; BSR set to: 15
  3944                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  3945   0016B4  8EA7               	bsf	167,7,c	;volatile
  3946   0016B6                     
  3947                           ; BSR set to: 15
  3948                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  3949   0016B6  8926               	bsf	38,4,b	;volatile
  3950                           
  3951                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  3952   0016B8  5126               	movf	38,w,b	;volatile
  3953   0016BA  0BF0               	andlw	-16
  3954   0016BC  090C               	iorlw	12
  3955   0016BE  6F26               	movwf	38,b	;volatile
  3956   0016C0                     
  3957                           ; BSR set to: 15
  3958                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  3959   0016C0  8F26               	bsf	38,7,b	;volatile
  3960   0016C2                     
  3961                           ; BSR set to: 15
  3962                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  3963   0016C2  8922               	bsf	34,4,b	;volatile
  3964                           
  3965                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  3966   0016C4  5122               	movf	34,w,b	;volatile
  3967   0016C6  0BF0               	andlw	-16
  3968   0016C8  090C               	iorlw	12
  3969   0016CA  6F22               	movwf	34,b	;volatile
  3970   0016CC                     
  3971                           ; BSR set to: 15
  3972                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  3973   0016CC  8F22               	bsf	34,7,b	;volatile
  3974   0016CE                     
  3975                           ; BSR set to: 15
  3976   0016CE  0012               	return		;funcret
  3977   0016D0                     __end_of_initDCmotorsPWM:
  3978                           	callstack 0
  3979                           
  3980 ;; *************** function _color_click_init *****************
  3981 ;; Defined at:
  3982 ;;		line 6 in file "color.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;Total ram usage:        1 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; Hardware stack levels required when called: 3
  4003 ;; This function calls:
  4004 ;;		_I2C_2_Master_Init
  4005 ;;		_color_writetoaddr
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text28
  4012   001B36                     __ptext28:
  4013                           	callstack 0
  4014   001B36                     _color_click_init:
  4015                           	callstack 27
  4016   001B36                     
  4017                           ;color.c: 9:     I2C_2_Master_Init();
  4018   001B36  ECB5  F00D         	call	_I2C_2_Master_Init	;wreg free
  4019   001B3A                     
  4020                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4021   001B3A  0E01               	movlw	1
  4022   001B3C  6E03               	movwf	color_writetoaddr@value^0,c
  4023   001B3E  0E00               	movlw	0
  4024   001B40  ECF1  F00D         	call	_color_writetoaddr
  4025   001B44                     
  4026                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4027   001B44  0E3F               	movlw	63
  4028   001B46  6E05               	movwf	??_color_click_init^0,c
  4029   001B48  0E55               	movlw	85
  4030   001B4A                     u1457:
  4031   001B4A  2EE8               	decfsz	wreg,f,c
  4032   001B4C  D7FE               	bra	u1457
  4033   001B4E  2E05               	decfsz	??_color_click_init^0,f,c
  4034   001B50  D7FC               	bra	u1457
  4035   001B52  0000               	nop	
  4036   001B54                     
  4037                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  4038   001B54  0E03               	movlw	3
  4039   001B56  6E03               	movwf	color_writetoaddr@value^0,c
  4040   001B58  0E00               	movlw	0
  4041   001B5A  ECF1  F00D         	call	_color_writetoaddr
  4042   001B5E                     
  4043                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  4044   001B5E  0ED5               	movlw	213
  4045   001B60  6E03               	movwf	color_writetoaddr@value^0,c
  4046   001B62  0E01               	movlw	1
  4047   001B64  ECF1  F00D         	call	_color_writetoaddr
  4048   001B68  0012               	return		;funcret
  4049   001B6A                     __end_of_color_click_init:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _color_writetoaddr *****************
  4053 ;; Defined at:
  4054 ;;		line 22 in file "color.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  address         1    wreg     unsigned char 
  4057 ;;  value           1    2[COMRAM] unsigned char 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  address         1    3[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4069 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 2
  4076 ;; This function calls:
  4077 ;;		_I2C_2_Master_Start
  4078 ;;		_I2C_2_Master_Stop
  4079 ;;		_I2C_2_Master_Write
  4080 ;; This function is called by:
  4081 ;;		_color_click_init
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text29
  4086   001BE2                     __ptext29:
  4087                           	callstack 0
  4088   001BE2                     _color_writetoaddr:
  4089                           	callstack 27
  4090                           
  4091                           ;incstack = 0
  4092                           ;color_writetoaddr@address stored from wreg
  4093   001BE2  6E04               	movwf	color_writetoaddr@address^0,c
  4094   001BE4                     
  4095                           ;color.c: 23:     I2C_2_Master_Start();
  4096   001BE4  EC39  F00E         	call	_I2C_2_Master_Start	;wreg free
  4097                           
  4098                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  4099   001BE8  0E52               	movlw	82
  4100   001BEA  EC29  F00E         	call	_I2C_2_Master_Write
  4101                           
  4102                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  4103   001BEE  5004               	movf	color_writetoaddr@address^0,w,c
  4104   001BF0  0980               	iorlw	128
  4105   001BF2  EC29  F00E         	call	_I2C_2_Master_Write
  4106                           
  4107                           ;color.c: 26:     I2C_2_Master_Write(value);
  4108   001BF6  5003               	movf	color_writetoaddr@value^0,w,c
  4109   001BF8  EC29  F00E         	call	_I2C_2_Master_Write
  4110                           
  4111                           ;color.c: 27:     I2C_2_Master_Stop();
  4112   001BFC  EC34  F00E         	call	_I2C_2_Master_Stop	;wreg free
  4113   001C00  0012               	return		;funcret
  4114   001C02                     __end_of_color_writetoaddr:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _I2C_2_Master_Write *****************
  4118 ;; Defined at:
  4119 ;;		line 45 in file "i2c.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  data_byte       1    wreg     unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  data_byte       1    1[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;Total ram usage:        1 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 1
  4140 ;; This function calls:
  4141 ;;		_I2C_2_Master_Idle
  4142 ;; This function is called by:
  4143 ;;		_color_writetoaddr
  4144 ;;		_color_read_Red
  4145 ;;		_color_read_Green
  4146 ;;		_color_read_Blue
  4147 ;;		_color_read_Clear
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text30
  4152   001C52                     __ptext30:
  4153                           	callstack 0
  4154   001C52                     _I2C_2_Master_Write:
  4155                           	callstack 27
  4156                           
  4157                           ;incstack = 0
  4158                           ;I2C_2_Master_Write@data_byte stored from wreg
  4159   001C52  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4160   001C54                     
  4161                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4162   001C54  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4163   001C58                     
  4164                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4165   001C58  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4166   001C5C  0012               	return		;funcret
  4167   001C5E                     __end_of_I2C_2_Master_Write:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function _I2C_2_Master_Stop *****************
  4171 ;; Defined at:
  4172 ;;		line 39 in file "i2c.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  1    wreg      void 
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;Total ram usage:        0 bytes
  4191 ;; Hardware stack levels used: 1
  4192 ;; Hardware stack levels required when called: 1
  4193 ;; This function calls:
  4194 ;;		_I2C_2_Master_Idle
  4195 ;; This function is called by:
  4196 ;;		_color_writetoaddr
  4197 ;;		_color_read_Red
  4198 ;;		_color_read_Green
  4199 ;;		_color_read_Blue
  4200 ;;		_color_read_Clear
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text31
  4205   001C68                     __ptext31:
  4206                           	callstack 0
  4207   001C68                     _I2C_2_Master_Stop:
  4208                           	callstack 27
  4209   001C68                     
  4210                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4211   001C68  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4212   001C6C                     
  4213                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4214   001C6C  010E               	movlb	14	; () banked
  4215   001C6E  85DA               	bsf	218,2,b	;volatile
  4216   001C70                     
  4217                           ; BSR set to: 14
  4218   001C70  0012               	return		;funcret
  4219   001C72                     __end_of_I2C_2_Master_Stop:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function _I2C_2_Master_Start *****************
  4223 ;; Defined at:
  4224 ;;		line 27 in file "i2c.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;		None
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;Total ram usage:        0 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 1
  4245 ;; This function calls:
  4246 ;;		_I2C_2_Master_Idle
  4247 ;; This function is called by:
  4248 ;;		_color_writetoaddr
  4249 ;;		_color_read_Red
  4250 ;;		_color_read_Green
  4251 ;;		_color_read_Blue
  4252 ;;		_color_read_Clear
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text32
  4257   001C72                     __ptext32:
  4258                           	callstack 0
  4259   001C72                     _I2C_2_Master_Start:
  4260                           	callstack 27
  4261   001C72                     
  4262                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4263   001C72  ECCA  F00D         	call	_I2C_2_Master_Idle	;wreg free
  4264   001C76                     
  4265                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4266   001C76  010E               	movlb	14	; () banked
  4267   001C78  81DA               	bsf	218,0,b	;volatile
  4268   001C7A                     
  4269                           ; BSR set to: 14
  4270   001C7A  0012               	return		;funcret
  4271   001C7C                     __end_of_I2C_2_Master_Start:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function _I2C_2_Master_Idle *****************
  4275 ;; Defined at:
  4276 ;;		line 22 in file "i2c.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;Total ram usage:        1 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_I2C_2_Master_Start
  4300 ;;		_I2C_2_Master_RepStart
  4301 ;;		_I2C_2_Master_Stop
  4302 ;;		_I2C_2_Master_Write
  4303 ;;		_I2C_2_Master_Read
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text33
  4308   001B94                     __ptext33:
  4309                           	callstack 0
  4310   001B94                     _I2C_2_Master_Idle:
  4311                           	callstack 27
  4312   001B94                     l96:
  4313   001B94  010E               	movlb	14	; () banked
  4314   001B96  B5D8               	btfsc	216,2,b	;volatile
  4315   001B98  EFD0  F00D         	goto	u1131
  4316   001B9C  EFD2  F00D         	goto	u1130
  4317   001BA0                     u1131:
  4318   001BA0  EFCA  F00D         	goto	l96
  4319   001BA4                     u1130:
  4320   001BA4                     
  4321                           ; BSR set to: 14
  4322   001BA4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4323   001BA8  0E1F               	movlw	31
  4324   001BAA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4325   001BAC  A4D8               	btfss	status,2,c
  4326   001BAE  EFDB  F00D         	goto	u1141
  4327   001BB2  EFDD  F00D         	goto	u1140
  4328   001BB6                     u1141:
  4329   001BB6  EFCA  F00D         	goto	l96
  4330   001BBA                     u1140:
  4331   001BBA                     
  4332                           ; BSR set to: 14
  4333   001BBA  0012               	return		;funcret
  4334   001BBC                     __end_of_I2C_2_Master_Idle:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _I2C_2_Master_Init *****************
  4338 ;; Defined at:
  4339 ;;		line 4 in file "i2c.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_color_click_init
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text34
  4367   001B6A                     __ptext34:
  4368                           	callstack 0
  4369   001B6A                     _I2C_2_Master_Init:
  4370                           	callstack 29
  4371   001B6A                     
  4372                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4373   001B6A  010E               	movlb	14	; () banked
  4374   001B6C  51D9               	movf	217,w,b	;volatile
  4375   001B6E  0BF0               	andlw	-16
  4376   001B70  0908               	iorlw	8
  4377   001B72  6FD9               	movwf	217,b	;volatile
  4378   001B74                     
  4379                           ; BSR set to: 14
  4380                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4381   001B74  8BD9               	bsf	217,5,b	;volatile
  4382                           
  4383                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4384   001B76  0E9F               	movlw	159
  4385   001B78  6FD6               	movwf	214,b	;volatile
  4386   001B7A                     
  4387                           ; BSR set to: 14
  4388                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4389   001B7A  8A84               	bsf	132,5,c	;volatile
  4390   001B7C                     
  4391                           ; BSR set to: 14
  4392                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4393   001B7C  8C84               	bsf	132,6,c	;volatile
  4394   001B7E                     
  4395                           ; BSR set to: 14
  4396                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4397   001B7E  9BA7               	bcf	167,5,b	;volatile
  4398   001B80                     
  4399                           ; BSR set to: 14
  4400                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4401   001B80  9DA7               	bcf	167,6,b	;volatile
  4402                           
  4403                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4404   001B82  0E1D               	movlw	29
  4405   001B84  6F1D               	movwf	29,b	;volatile
  4406                           
  4407                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4408   001B86  0E1E               	movlw	30
  4409   001B88  6F1C               	movwf	28,b	;volatile
  4410                           
  4411                           ;i2c.c: 18:   RD5PPS=0x1C;
  4412   001B8A  0E1C               	movlw	28
  4413   001B8C  6F6F               	movwf	111,b	;volatile
  4414                           
  4415                           ;i2c.c: 19:   RD6PPS=0x1B;
  4416   001B8E  0E1B               	movlw	27
  4417   001B90  6F70               	movwf	112,b	;volatile
  4418   001B92                     
  4419                           ; BSR set to: 14
  4420   001B92  0012               	return		;funcret
  4421   001B94                     __end_of_I2C_2_Master_Init:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _ADC_init *****************
  4425 ;; Defined at:
  4426 ;;		line 9 in file "ADC.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;		None
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;Total ram usage:        0 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           	psect	text35
  4454   001C20                     __ptext35:
  4455                           	callstack 0
  4456   001C20                     _ADC_init:
  4457                           	callstack 30
  4458   001C20                     
  4459                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  4460   001C20  8C86               	bsf	134,6,c	;volatile
  4461                           
  4462                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  4463   001C22  010E               	movlb	14	; () banked
  4464   001C24  8DB4               	bsf	180,6,b	;volatile
  4465                           
  4466                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  4467   001C26  010F               	movlb	15	; () banked
  4468   001C28  9958               	bcf	88,4,b	;volatile
  4469   001C2A                     
  4470                           ; BSR set to: 15
  4471                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  4472   001C2A  0EFC               	movlw	-4
  4473   001C2C  1758               	andwf	88,f,b	;volatile
  4474                           
  4475                           ;ADC.c: 17:     ADPCH=0b101110;
  4476   001C2E  0E2E               	movlw	46
  4477   001C30  6F5F               	movwf	95,b	;volatile
  4478   001C32                     
  4479                           ; BSR set to: 15
  4480                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  4481   001C32  9460               	bcf	96,2,c	;volatile
  4482   001C34                     
  4483                           ; BSR set to: 15
  4484                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  4485   001C34  8860               	bsf	96,4,c	;volatile
  4486   001C36                     
  4487                           ; BSR set to: 15
  4488                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  4489   001C36  8E60               	bsf	96,7,c	;volatile
  4490   001C38                     
  4491                           ; BSR set to: 15
  4492   001C38  0012               	return		;funcret
  4493   001C3A                     __end_of_ADC_init:
  4494                           	callstack 0
  4495                           
  4496                           	psect	rparam
  4497   000000                     
  4498                           	psect	config
  4499                           
  4500                           ;Config register CONFIG1L @ 0x300000
  4501                           ;	External Oscillator mode Selection bits
  4502                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4503                           ;	Power-up default value for COSC bits
  4504                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4505   300000                     	org	3145728
  4506   300000  AA                 	db	170
  4507                           
  4508                           ;Config register CONFIG1H @ 0x300001
  4509                           ;	unspecified, using default values
  4510                           ;	Clock Out Enable bit
  4511                           ;	CLKOUTEN = 0x1, unprogrammed default
  4512                           ;	Clock Switch Enable bit
  4513                           ;	CSWEN = 0x1, unprogrammed default
  4514                           ;	Fail-Safe Clock Monitor Enable bit
  4515                           ;	FCMEN = 0x1, unprogrammed default
  4516   300001                     	org	3145729
  4517   300001  FF                 	db	255
  4518                           
  4519                           ;Config register CONFIG3L @ 0x300004
  4520                           ;	WDT Period Select bits
  4521                           ;	WDTCPS = 0x1F, unprogrammed default
  4522                           ;	WDT operating mode
  4523                           ;	WDTE = OFF, WDT Disabled
  4524   300004                     	org	3145732
  4525   300004  9F                 	db	159
  4526                           
  4527                           ;Config register CONFIG3H @ 0x300005
  4528                           ;	unspecified, using default values
  4529                           ;	WDT Window Select bits
  4530                           ;	WDTCWS = 0x7, unprogrammed default
  4531                           ;	WDT input clock selector
  4532                           ;	WDTCCS = 0x7, unprogrammed default
  4533   300005                     	org	3145733
  4534   300005  FF                 	db	255
  4535                           tosu	equ	0xFFF
  4536                           tosh	equ	0xFFE
  4537                           tosl	equ	0xFFD
  4538                           stkptr	equ	0xFFC
  4539                           pclatu	equ	0xFFB
  4540                           pclath	equ	0xFFA
  4541                           pcl	equ	0xFF9
  4542                           tblptru	equ	0xFF8
  4543                           tblptrh	equ	0xFF7
  4544                           tblptrl	equ	0xFF6
  4545                           tablat	equ	0xFF5
  4546                           prodh	equ	0xFF4
  4547                           prodl	equ	0xFF3
  4548                           indf0	equ	0xFEF
  4549                           postinc0	equ	0xFEE
  4550                           postdec0	equ	0xFED
  4551                           preinc0	equ	0xFEC
  4552                           plusw0	equ	0xFEB
  4553                           fsr0h	equ	0xFEA
  4554                           fsr0l	equ	0xFE9
  4555                           wreg	equ	0xFE8
  4556                           indf1	equ	0xFE7
  4557                           postinc1	equ	0xFE6
  4558                           postdec1	equ	0xFE5
  4559                           preinc1	equ	0xFE4
  4560                           plusw1	equ	0xFE3
  4561                           fsr1h	equ	0xFE2
  4562                           fsr1l	equ	0xFE1
  4563                           bsr	equ	0xFE0
  4564                           indf2	equ	0xFDF
  4565                           postinc2	equ	0xFDE
  4566                           postdec2	equ	0xFDD
  4567                           preinc2	equ	0xFDC
  4568                           plusw2	equ	0xFDB
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8

Data Sizes:
    Strings     94
    Constant    0
    Data        1
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     60     156
    BANK1           256    250     250
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@buf(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S2201$buffer	PTR unsigned char  size(2) Largest target is 0

    S2201$source	PTR const unsigned char  size(2) Largest target is 0

    S462DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S462DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@blue_char(BANK1[50]), send2USART@buf(BANK1[50]), send2USART@clear_char(BANK1[50]), send2USART@green_char(BANK1[50]), 
		 -> send2USART@red_char(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK0[50]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[17]), STR_2(CODE[21]), STR_3(CODE[12]), STR_4(CODE[13]), 
		 -> STR_5(CODE[14]), STR_6(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@blue_char(BANK1[50]), send2USART@buf(BANK1[50]), send2USART@clear_char(BANK1[50]), send2USART@green_char(BANK1[50]), 
		 -> send2USART@red_char(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK0[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[17]), STR_2(CODE[21]), STR_3(CODE[12]), STR_4(CODE[13]), 
		 -> STR_5(CODE[14]), STR_6(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[17]), STR_2(CODE[21]), STR_3(CODE[12]), STR_4(CODE[13]), 
		 -> STR_5(CODE[14]), STR_6(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[17]), STR_2(CODE[21]), STR_3(CODE[12]), STR_4(CODE[13]), 
		 -> STR_5(CODE[14]), STR_6(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_test
    _test->_send2USART
    _send2USART->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_test

Critical Paths under _main in BANK1

    _test->_send2USART

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   28256
                                             88 COMRAM     2     2      0
                           _ADC_init
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                               _test
 ---------------------------------------------------------------------------------
 (1) _test                                                62    60      2   27775
                                             86 COMRAM     2     0      2
                                              0 BANK0     60    60      0
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                         _send2USART
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send2USART                                         260   250     10   18694
                                             76 COMRAM    10     0     10
                                              0 BANK1    250   250      0
                         _ADC2String
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     599
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC2String                                          10     6      4    9633
                                             66 COMRAM    10     6      4
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7    7722
                                             46 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6609
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6250
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    3775
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     662
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _initDCmotorsPWM
   _initUSART4
   _test
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _send2USART
       _ADC2String
         ___lwdiv
           ___wmul (ARG)
         ___wmul
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
               _read_prec_or_width
                 ___wmul
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FA       7       97.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3C      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      46        0.0%
BITBIGSFRlllhhl     31      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      57        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllllh     20      0       0      49        0.0%
BITBIGSFRllllll     1E      0       0      51        0.0%
BITBIGSFRhhllh      1E      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      41        0.0%
BITBIGSFRllllll     11      0       0      52        0.0%
BITBIGSFRllllll      F      0       0      59        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      50        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRlllhll      8      0       0      47        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllhhh      6      0       0      43        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRlllhhh      3      0       0      42        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRlllhlh      2      0       0      45        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      48        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     231      62        0.0%
DATA                 0      0     231       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Mar 11 15:55:11 2024

               _color_read_Red 1854                _color_read_Blue 1944                             l51 18A2  
                           l60 1942                             l45 1B68                             l54 18F2  
                           l48 1C00                             l57 1992                             l66 12CE  
                           l93 1B92                             l96 1B94                             l99 1BBA  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Clear 18F4  
             _color_read_Green 18A4                            l102 1C7A                            l111 1C5C  
                          l105 1C66                            l114 1A16                            l108 1C70  
                          l250 16CE                            l402 163E                            l405 143A  
                          l342 1C1E                            l351 1C3C                            l408 1BE0  
                          l360 1B00                            l354 1C50                            l189 1C38  
                          l652 14EA                            l639 1210                            l906 1852  
                          l899 184A                            u800 11A0                            u801 119C  
                          u810 11BE                            u730 12E0                            u811 11BA  
                          u731 12DC                            u820 11DA                            u740 12F0  
                          u900 16DE                            u821 11D6                            u741 12EC  
                          u901 16DA                            u830 1200                            u750 1316  
                          u910 16F8                            u831 11FC                            u751 1312  
                          u911 16F4                            u840 144E                            u760 1348  
                          u920 173E                            u841 144A                            u761 1344  
                          u921 173A                            u850 1468                            u770 1A8E  
                          u930 174C                            u851 1464                            u771 1A8A  
                          u931 1748                            u780 1160                            u860 1482  
                          u940 1B10                            u781 115C                            u861 147E  
                          u941 1B0C                            u790 117A                            u870 14A0  
                          u950 0FFA                            u791 1176                            u871 149C  
                          u951 0FF4                            u880 14B6                            u960 0FFC  
                          u881 14B2                            u890 14DA                            u970 1016  
                          u891 14D6                            u971 1012                            u980 102C  
                          u981 1028                            u990 10CA                            u991 10C6  
                          _abs 1B02                            _pad 16D0                   ___awmod@sign 0006  
                          wreg 0FE8                           l1111 1758                           l2000 114E  
                         l2010 117A                           l2002 1152                           l1106 1700  
                         l1114 1044                           l1131 1590                           ?_abs 0007  
                         l2020 11A8                           l2012 1182                           l2004 1160  
                         l2100 0FE6                           l1109 173E                           l2030 11E2  
                         l2022 11B0                           l2014 1186                           l2006 1168  
                         l2110 101C                           l2102 0FEA                           l1150 0FE4  
                         l1127 114C                           l1135 1598                           l2040 1208  
                         l2032 11E4                           l2024 11BE                           l2016 118E  
                         l2008 116C                           l1160 1B1C                           l2120 1056  
                         l2112 102C                           l2104 0FFE                           l2200 0F94  
                         l2034 11EA                           l2026 11C4                           l2018 11A0  
                         l2050 1456                           l2122 105C                           l2130 10B0  
                         l2114 1038                           l2106 1006                           l2202 0F9E  
                         l2210 0FBE                           l1163 1B34                           l2028 11DA  
                         l2036 11F0                           l2060 148A                           l2052 145A  
                         l2044 143C                           l2132 10CA                           l2140 1114  
                         l2124 108A                           l2116 1040                           l2108 1016  
                         l1156 19D4                           l2220 1994                           l2038 1200  
                         l2070 14C4                           l2062 1492                           l2054 1468  
                         l2046 1440                           l2142 1124                           l2134 10DC  
                         l2126 108E                           l2118 104C                           l2150 14EC  
                         l2206 0FB2                           l2222 199C                           l1086 1A52  
                         l2230 1A18                           l2310 1AE8                           l2302 1ACA  
                         l1175 1388                           l1183 1A8E                           l2064 14A0  
                         l2072 14CA                           l2056 1470                           l2048 144E  
                         l2080 16D0                           l2144 112A                           l2136 10EC  
                         l2128 1094                           l2160 155E                           l2152 14F4  
                         l2224 19AC                           l2232 1A24                           l2304 1ACE  
                         l2242 1B94                           l2250 17E0                           l2074 14DA  
                         l2066 14B6                           l2058 1482                           l1186 1C7C  
                         l2090 171C                           l2082 16DE                           l2146 1136  
                         l2138 1106                           l2154 151A                           l2162 1566  
                         l2170 0E9C                           l2226 19CC                           l2234 1A2C  
                         l2330 15B6                           l2306 1ADC                           l2340 1B7A  
                         l2244 1BA4                           l2500 16A8                           l2260 1818  
                         l2252 17E8                           l2076 14E2                           l2068 14BE  
                         l2092 1720                           l2084 16EA                           l2156 1522  
                         l2172 0EA0                           l2164 0E60                           l2236 1A34  
                         l2332 1606                           l2308 1AE0                           l2342 1B7C  
                         l2430 1B36                           l2510 16C2                           l2502 16AA  
                         l2350 1854                           l2270 1844                           l2262 181E  
                         l2254 17FA                           l2094 174C                           l2086 16F8  
                         l2158 153E                           l2190 0F28                           l2182 0EBE  
                         l2174 0EA8                           l2166 0E86                           l2238 1A44  
                         l2334 1626                           l2246 1C3C                           l2344 1B7E  
                         l2336 1B6A                           l2272 1C72                           l2280 1C68  
                         l2432 1B3A                           l2512 16CC                           l2504 16B4  
                         l2352 189A                           l2264 1834                           l2256 1802  
                         l2096 1B02                           l2088 170C                           l2192 0F32  
                         l2176 0EAA                           l2184 0EF4                           l2168 0E8E  
                         l2328 159A                           l2248 1C4C                           l2440 1212  
                         l2600 179C                           l2346 1B80                           l2338 1B74  
                         l2274 1C76                           l2282 1C6C                           l2434 1B44  
                         l2506 16B6                           l2290 19DC                           l2362 1944  
                         l2370 193A                           l2266 183C                           l2258 180A  
                         l2098 1B10                           l2194 0F3C                           l2186 0F04  
                         l2178 0EB6                           l2450 1236                           l2610 17C0  
                         l2602 17A0                           l2276 1C54                           l2348 1BE4  
                         l2436 1B54                           l2508 16C0                           l2292 19E4  
                         l2284 1C5E                           l2364 198A                           l2356 18A4  
                         l2268 183E                           l2196 0F5C                           l2188 0F18  
                         l2380 1416                           l2460 127A                           l2452 124C  
                         l2620 17CA                           l2612 17C2                           l2604 17A4  
                         l2470 1C2A                           l2278 1C58                           l2438 1B5E  
                         l2294 19EC                           l2286 1C62                           l2358 18EA  
                         l2198 0F7C                           l2382 1422                           l2374 138A  
                         l2462 1286                           l2454 1256                           l2446 121C  
                         l2622 17CC                           l2614 17C4                           l2606 17BC  
                         l2472 1C32                           l2480 1C0C                           l2296 1A12  
                         l2288 19D8                           l2368 18F4                           l2384 142E  
                         l2376 13FE                           l2464 12B2                           l2456 1262  
                         l2448 1230                           l2616 17C6                           l2608 17BE  
                         l2474 1C34                           l2490 1640                           l2482 1C0E  
                         l2298 1A14                           l2378 140A                           l2466 12B8  
                         l2458 126E                           l2618 17C8                           l2476 1C36  
                         l2468 1C20                           l2492 1650                           l2484 1C18  
                         l2580 1762                           l2494 1676                           l2486 1C1A  
                         l2478 1C02                           l2742 0EE6                           l2590 177C  
                         l2582 1766                           l2496 167A                           l2488 1C1C  
                         l2592 1780                           l2584 1766                           l2576 175A  
                         l2498 169E                           l2594 1788                           l2586 1772  
                         l2578 175E                           l1980 1316                           l1972 12D0  
                         l2596 1790                           l2588 1778                           l1982 1348  
                         l1974 12E0                           l1990 1A6E                           l2598 1798  
                         ?_pad 000E                           l1976 12F0                           l1992 1A72  
                         l1978 12FA                           l1986 1A54                           l1994 1BBC  
                         l1988 1A60                           l1996 1BD8                           STR_1 0E27  
                         STR_2 0E01                           STR_3 0E53                           STR_4 0E46  
                         STR_5 0E38                           STR_6 0E16                           u1000 10DC  
                         u1001 10D8                           u1010 10EC                           u1011 10E8  
                         u1020 1106                           u1100 0F5C                           u1021 1102  
                         u1101 0F58                           u1030 1114                           u1110 0F7C  
                         u1031 1110                           u1111 0F78                           u1040 1124  
                         u1120 19CC                           u1041 1120                           u1121 19C8  
                         u1130 1BA4                           u1050 151A                           u1210 1B00  
                         u1131 1BA0                           u1051 1516                           u1211 1AFC  
                         u1140 1BBA                           u1060 1590                           u1300 12CE  
                         u1141 1BB6                           u1061 158C                           u1301 12CA  
                         u1070 0E86                           u1150 1C4C                           u1071 0E82  
                         u1151 1C48                           u1208 1A02                           u1160 17FA  
                         u1080 0F04                           u1161 17F6                           u1081 0F00  
                         u1170 1818                           u1090 0F28                           u1171 1814  
                         u1091 0F24                           u1180 1834                           u1181 1830  
                         u1190 1A00                           u1191 19F8                   _BAUD4CONbits 0EE9  
                         u1290 1230                           u1291 122C                           u1437 1AE2  
                         u1447 1630                           u1457 1B4A                           _T2PR 0FBC  
                         abs@a 0007                           _dbuf 008D                           _main 175A  
                         _dtoa 0FE6                           _prec 008A                           _test 1212  
                         pad@i 0013                           pad@p 0010                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           prodh 0FF4                           prodl 0FF3  
                         start 0000               __end_of_ADC_init 1C3A         __end_of_color_read_Red 18A4  
                 ___param_bank 0000                          ??_abs 0009                          ??_pad 0012  
                        ?_main 0001                          ?_dtoa 0015                          _ADPCH 0F5F  
              __end_of___awdiv 1212                __end_of___awmod 14EC                          ?_test 0057  
              ___awdiv@divisor 0003                __end_of___lwdiv 1854                ___awdiv@counter 0005  
                 vfpfcnvrt@fmt 0021        __end_of_sendCharSerial4 1C52     __end_of_I2C_2_Master_Start 1C7C  
   __end_of_I2C_2_Master_Write 1C5E                          _flags 005B            read_prec_or_width@c 0009  
          read_prec_or_width@n 000A                          _fputc 12D0                          _fputs 1A54  
                        pad@fp 000E                          _width 0088                          _putch 1C7C  
                        dtoa@d 0016                          dtoa@i 001E                          dtoa@p 001A  
                        dtoa@s 001D                          dtoa@w 001B                          tablat 0FF5  
                        status 0FD8                __end_of_sprintf 1A54        __end_of_color_read_Blue 1994  
        _I2C_2_Master_RepStart 1C5E                ?_color_read_Red 0005                __initialization 1A90  
                 __end_of_main 17E0                   __end_of_dtoa 114E                   __end_of_test 12D0  
                 ??_ADC2String 0047                         ??_main 0059                         ??_dtoa 0018  
                       ??_test 0059                  __activetblptr 0003     __end_of_read_prec_or_width 159A  
                       ?_fputc 0001                         ?_fputs 0009                         _ADRESH 0F64  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21                  ADC2String@buf 0043               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
          ADC2String@frac_part 0049                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       _RG6PPS 0E88                  vfpfcnvrt@done 0029       __end_of_color_click_init 1B6A  
                       _RX4PPS 0E15             __end_of_ADC2String 1640                         _TX4REG 0EE4  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 002E                         ___wmul 1BBC  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___lwdiv 000B  
         read_prec_or_width@ap 0008                         clear_0 1AA8                         clear_1 1AB4  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         _motorL 00B6  
                       _motorR 00AD                         isa$std 0001                ___awmod@counter 0005  
                       pad@buf 000F                         dtoa@fp 0015             send2USART@red_char 0132  
                       fputc@c 0001                         fputs@c 000B                         fputs@i 000C  
                       fputs@s 0009                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 19D6  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0036                     __accesstop 0060  
      __end_of__initialization 1AC4       __end_of_color_read_Clear 1944       __end_of_color_read_Green 18F4  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 1C7E                  __end_of_fputc 138A  
                __end_of_fputs 1A90                  __end_of_putch 1C7E                     ??_ADC_init 0001  
                      ??_fputc 0004                        ??_fputs 000B                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK2 0200              _color_writetoaddr 1BE2  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
            main@battery_level 0059                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007        send2USART@battery_level 004D  
    __end_of_color_writetoaddr 1C02                      _ADREFbits 0F58             _I2C_2_Master_Start 1C72  
                   _initUSART4 1C02             _I2C_2_Master_Write 1C52                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___awdiv 114E                        ___awmod 143C            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 17E0            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002B  
          send2USART@blue_char 0164                   __psmallconst 0E00                        __pcinit 1A90  
                      __ramtop 0E00                     _send2USART 138A                        __ptext0 175A  
                      __ptext1 1212                        __ptext2 138A                        __ptext3 1ACA  
                      __ptext4 1C3A                        __ptext5 159A                        __ptext6 1A18  
                      __ptext7 1994                        __ptext8 0E60                        __ptext9 14EC  
                    _T2CONbits 0FBD          read_prec_or_width@fmt 0007               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005F                        _sprintf 1A18  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1AC4  
                      fputc@fp 0003                        fputs@fp 000A              ?_color_click_init 0001  
           _read_prec_or_width 14EC             ??_color_click_init 0005                        test@red 00F1  
            __end_of_vfpfcnvrt 0FE6                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0025                     ??_vfprintf 002E                _initDCmotorsPWM 1640  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
         ??_read_prec_or_width 0009       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0074  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0022                    vfpfcnvrt@cp 002A                    vfpfcnvrt@fp 0020  
               __end_of___wmul 1BE2                    ?_send2USART 004D            color_read_Clear@tmp 000A  
          start_initialization 1A90                    __end_of_abs 1B36                    __end_of_pad 175A  
                _TxBufWriteCnt 005D            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 16D0  
                  vfprintf@fmt 002C             ADC2String@int_part 004B                       ??___wmul 0005  
                  __pdataBANK0 00FB                    __pbssCOMRAM 005B                  __pcstackBANK0 00BF  
                __pcstackBANK1 0100               ___lwdiv@dividend 0007                      _dtoa$2280 0018  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___lwdiv 0007  
                 _readingIndex 008C           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 1B94              _I2C_2_Master_Init 1B6A  
            _I2C_2_Master_Read 19D6              _I2C_2_Master_Stop 1C68                   _RxBufReadCnt 005E  
                     _ADC_init 1C20             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 002F              _sendStringSerial4 1ACA  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATGbits 0F7F              ADC2String@ADC_val 0045             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                     _ADC2String 159A                      _vfpfcnvrt 0E60  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 1BBC      __end_of_I2C_2_Master_Init 1B94  
    __end_of_I2C_2_Master_Read 1A18              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1C72  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 0060              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005C                send2USART@clear 0055      __end_of_sendStringSerial4 1B02  
              send2USART@green 0051  __end_of_I2C_2_Master_RepStart 1C68             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 002D  
                     __Lrparam 0000           send2USART@clear_char 01C8                     vfprintf@fp 002B  
                   ?_vfpfcnvrt 0020                   ??_send2USART 0057                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 00FB                     sprintf@fmt 0031  
                test@led_state 00BF                ___lwdiv@divisor 0009             __end_of_initUSART4 1C20  
              ___lwdiv@counter 000D                       __ptext10 1BBC                       __ptext11 0FE6  
                     __ptext20 1854                       __ptext12 16D0                       __ptext21 18A4  
                     __ptext13 1A54                       __ptext30 1C52                       __ptext22 18F4  
                     __ptext14 12D0                       __ptext31 1C68                       __ptext23 1944  
                     __ptext15 1C7C                       __ptext32 1C72                       __ptext24 1C5E  
                     __ptext16 1B02                       __ptext33 1B94                       __ptext25 19D6  
                     __ptext17 143C                       __ptext34 1B6A                       __ptext26 1C02  
                     __ptext18 114E                       __ptext35 1C20                       __ptext27 1640  
                     __ptext19 17E0                       __ptext28 1B36                       __ptext29 1BE2  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA             __end_of_send2USART 143C  
         send2USART@green_char 0196                      test@clear 00F7                      test@combo 00F9  
                    test@green 00F5                       isa$xinst 0000                     _RC4STAbits 0EE7  
                  ?_ADC2String 0043                       _vfprintf 1994                 send2USART@blue 0053  
            test@battery_level 0057                      sprintf@ap 0036                       test@blue 00F3  
                send2USART@buf 0100                  send2USART@red 004F                    ??_vfpfcnvrt 0023  
             _color_click_init 1B36                       sprintf@f 0037                       sprintf@s 002F  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                     _TX4STAbits 0EE8  
              _sendCharSerial4 1C3A  
