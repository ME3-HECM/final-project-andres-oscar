

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Mar 09 18:07:12 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 21/07/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataBANK1
    93   001E22                     __pidataBANK1:
    94                           	callstack 0
    95                           
    96                           ;initializer for _dataFlag
    97   001E22  01                 	db	1
    98   000000                     _TX4REG	set	3812
    99   000000                     _RC4STAbits	set	3815
   100   000000                     _SP4BRGH	set	3814
   101   000000                     _TRISFbits	set	3974
   102   000000                     _TRISEbits	set	3973
   103   000000                     _TRISGbits	set	3975
   104   000000                     _CCPR2H	set	4006
   105   000000                     _CCPR1H	set	4010
   106   000000                     _SSP2CON2bits	set	3802
   107   000000                     _RX4PPS	set	3605
   108   000000                     _SSP2CLKPPS	set	3612
   109   000000                     _SSP2DATPPS	set	3613
   110   000000                     _ANSELDbits	set	3751
   111   000000                     _SSP2ADD	set	3798
   112   000000                     _SSP2CON1bits	set	3801
   113   000000                     _LATAbits	set	3961
   114   000000                     _LATEbits	set	3965
   115   000000                     _LATGbits	set	3967
   116   000000                     _TRISAbits	set	3969
   117   000000                     _TRISDbits	set	3972
   118   000000                     _LATCbits	set	3963
   119   000000                     _LATDbits	set	3964
   120   000000                     _RC4REG	set	3811
   121   000000                     _SP4BRGL	set	3813
   122   000000                     _TX4STAbits	set	3816
   123   000000                     _BAUD4CONbits	set	3817
   124   000000                     _SSP2CON2	set	3802
   125   000000                     _CCPR4H	set	3873
   126   000000                     _CCPR3H	set	3877
   127   000000                     _SSP2STAT	set	3800
   128   000000                     _ANSELFbits	set	3764
   129   000000                     _SSP2BUF	set	3797
   130   000000                     _PIE4bits	set	3629
   131   000000                     _PIR4bits	set	3639
   132   000000                     _RC0PPS	set	3682
   133   000000                     _RC7PPS	set	3689
   134   000000                     _RD5PPS	set	3695
   135   000000                     _RE2PPS	set	3700
   136   000000                     _RD6PPS	set	3696
   137   000000                     _CCP1CONbits	set	4011
   138   000000                     _CCPTMRS0bits	set	4013
   139   000000                     _T2PR	set	4028
   140   000000                     _T2CONbits	set	4029
   141   000000                     _CCP2CONbits	set	4007
   142   000000                     _CCP3CONbits	set	3878
   143   000000                     _ADREFbits	set	3928
   144   000000                     _CCP4CONbits	set	3874
   145   000000                     _TRISCbits	set	3971
   146   000000                     _ADPCH	set	3935
   147   000000                     _ADRESH	set	3940
   148   000000                     _ADCON0bits	set	3936
   149   000000                     _RE4PPS	set	3702
   150   000000                     _RG6PPS	set	3720
   151   000000                     _T2CLKCONbits	set	4031
   152   000000                     _T2HLTbits	set	4030
   153                           
   154                           	psect	smallconst
   155   000E00                     __psmallconst:
   156                           	callstack 0
   157   000E00  00                 	db	0
   158   000E01                     STR_4:
   159   000E01  56                 	db	86	;'V'
   160   000E02  6F                 	db	111	;'o'
   161   000E03  6C                 	db	108	;'l'
   162   000E04  74                 	db	116	;'t'
   163   000E05  61                 	db	97	;'a'
   164   000E06  67                 	db	103	;'g'
   165   000E07  65                 	db	101	;'e'
   166   000E08  20                 	db	32
   167   000E09  3D                 	db	61	;'='
   168   000E0A  20                 	db	32
   169   000E0B  25                 	db	37
   170   000E0C  64                 	db	100	;'d'
   171   000E0D  2E                 	db	46
   172   000E0E  25                 	db	37
   173   000E0F  30                 	db	48	;'0'
   174   000E10  32                 	db	50	;'2'
   175   000E11  64                 	db	100	;'d'
   176   000E12  2C                 	db	44
   177   000E13  20                 	db	32
   178   000E14  20                 	db	32
   179   000E15  00                 	db	0
   180   000E16                     STR_2:
   181   000E16  47                 	db	71	;'G'
   182   000E17  72                 	db	114	;'r'
   183   000E18  65                 	db	101	;'e'
   184   000E19  65                 	db	101	;'e'
   185   000E1A  6E                 	db	110	;'n'
   186   000E1B  5F                 	db	95	;'_'
   187   000E1C  6C                 	db	108	;'l'
   188   000E1D  69                 	db	105	;'i'
   189   000E1E  67                 	db	103	;'g'
   190   000E1F  68                 	db	104	;'h'
   191   000E20  74                 	db	116	;'t'
   192   000E21  3D                 	db	61	;'='
   193   000E22  25                 	db	37
   194   000E23  64                 	db	100	;'d'
   195   000E24  2C                 	db	44
   196   000E25  20                 	db	32
   197   000E26  20                 	db	32
   198   000E27  00                 	db	0
   199   000E28                     STR_3:
   200   000E28  42                 	db	66	;'B'
   201   000E29  6C                 	db	108	;'l'
   202   000E2A  75                 	db	117	;'u'
   203   000E2B  65                 	db	101	;'e'
   204   000E2C  5F                 	db	95	;'_'
   205   000E2D  6C                 	db	108	;'l'
   206   000E2E  69                 	db	105	;'i'
   207   000E2F  67                 	db	103	;'g'
   208   000E30  68                 	db	104	;'h'
   209   000E31  74                 	db	116	;'t'
   210   000E32  3D                 	db	61	;'='
   211   000E33  25                 	db	37
   212   000E34  64                 	db	100	;'d'
   213   000E35  20                 	db	32
   214   000E36  0A                 	db	10
   215   000E37  0D                 	db	13
   216   000E38  00                 	db	0
   217   000E39                     STR_8:
   218   000E39  43                 	db	67	;'C'
   219   000E3A  6C                 	db	108	;'l'
   220   000E3B  65                 	db	101	;'e'
   221   000E3C  61                 	db	97	;'a'
   222   000E3D  72                 	db	114	;'r'
   223   000E3E  3D                 	db	61	;'='
   224   000E3F  25                 	db	37
   225   000E40  30                 	db	48	;'0'
   226   000E41  35                 	db	53	;'5'
   227   000E42  64                 	db	100	;'d'
   228   000E43  2C                 	db	44
   229   000E44  20                 	db	32
   230   000E45  20                 	db	32
   231   000E46  0A                 	db	10
   232   000E47  0D                 	db	13
   233   000E48  00                 	db	0
   234   000E49                     STR_1:
   235   000E49  52                 	db	82	;'R'
   236   000E4A  65                 	db	101	;'e'
   237   000E4B  64                 	db	100	;'d'
   238   000E4C  5F                 	db	95	;'_'
   239   000E4D  6C                 	db	108	;'l'
   240   000E4E  69                 	db	105	;'i'
   241   000E4F  67                 	db	103	;'g'
   242   000E50  68                 	db	104	;'h'
   243   000E51  74                 	db	116	;'t'
   244   000E52  3D                 	db	61	;'='
   245   000E53  25                 	db	37
   246   000E54  64                 	db	100	;'d'
   247   000E55  2C                 	db	44
   248   000E56  20                 	db	32
   249   000E57  20                 	db	32
   250   000E58  00                 	db	0
   251   000E59                     STR_7:
   252   000E59  47                 	db	71	;'G'
   253   000E5A  72                 	db	114	;'r'
   254   000E5B  65                 	db	101	;'e'
   255   000E5C  65                 	db	101	;'e'
   256   000E5D  6E                 	db	110	;'n'
   257   000E5E  3D                 	db	61	;'='
   258   000E5F  25                 	db	37
   259   000E60  30                 	db	48	;'0'
   260   000E61  35                 	db	53	;'5'
   261   000E62  64                 	db	100	;'d'
   262   000E63  2C                 	db	44
   263   000E64  20                 	db	32
   264   000E65  20                 	db	32
   265   000E66  00                 	db	0
   266   000E67                     STR_6:
   267   000E67  42                 	db	66	;'B'
   268   000E68  6C                 	db	108	;'l'
   269   000E69  75                 	db	117	;'u'
   270   000E6A  65                 	db	101	;'e'
   271   000E6B  3D                 	db	61	;'='
   272   000E6C  25                 	db	37
   273   000E6D  30                 	db	48	;'0'
   274   000E6E  35                 	db	53	;'5'
   275   000E6F  64                 	db	100	;'d'
   276   000E70  2C                 	db	44
   277   000E71  20                 	db	32
   278   000E72  20                 	db	32
   279   000E73  00                 	db	0
   280   000E74                     STR_5:
   281   000E74  52                 	db	82	;'R'
   282   000E75  65                 	db	101	;'e'
   283   000E76  64                 	db	100	;'d'
   284   000E77  3D                 	db	61	;'='
   285   000E78  25                 	db	37
   286   000E79  30                 	db	48	;'0'
   287   000E7A  35                 	db	53	;'5'
   288   000E7B  64                 	db	100	;'d'
   289   000E7C  2C                 	db	44
   290   000E7D  20                 	db	32
   291   000E7E  20                 	db	32
   292   000E7F  00                 	db	0
   293   000E80  00                 	db	0	; dummy byte at the end
   294   000000                     
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298   001C04                     __pcinit:
   299                           	callstack 0
   300   001C04                     start_initialization:
   301                           	callstack 0
   302   001C04                     __initialization:
   303                           	callstack 0
   304                           
   305                           ; Initialize objects allocated to BANK1 (1 bytes)
   306                           ; load TBLPTR registers with __pidataBANK1
   307   001C04  0E22               	movlw	low __pidataBANK1
   308   001C06  6EF6               	movwf	tblptrl,c
   309   001C08  0E1E               	movlw	high __pidataBANK1
   310   001C0A  6EF7               	movwf	tblptrh,c
   311   001C0C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   312   001C0E  6EF8               	movwf	tblptru,c
   313   001C10  0009               	tblrd		*+	;fetch initializer
   314   001C12  CFF5 F1FE          	movff	tablat,__pdataBANK1
   315                           
   316                           ; Clear objects allocated to BANK2 (150 bytes)
   317   001C16  EE02  F000         	lfsr	0,__pbssBANK2
   318   001C1A  0E96               	movlw	150
   319   001C1C                     clear_0:
   320   001C1C  6AEE               	clrf	postinc0,c
   321   001C1E  06E8               	decf	wreg,f,c
   322   001C20  E1FD               	bnz	clear_0
   323                           
   324                           ; Clear objects allocated to BANK1 (4 bytes)
   325   001C22  0101               	movlb	1
   326   001C24  6BFD               	clrf	(__pbssBANK1+3)& (0+255),b
   327   001C26  6BFC               	clrf	(__pbssBANK1+2)& (0+255),b
   328   001C28  6BFB               	clrf	(__pbssBANK1+1)& (0+255),b
   329   001C2A  6BFA               	clrf	__pbssBANK1& (0+255),b
   330                           
   331                           ; Clear objects allocated to COMRAM (6 bytes)
   332   001C2C  6A5F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   333   001C2E  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   334   001C30  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   335   001C32  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   336   001C34  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   337   001C36  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   338   001C38                     end_of_initialization:
   339                           	callstack 0
   340   001C38                     __end_of__initialization:
   341                           	callstack 0
   342   001C38  0100               	movlb	0
   343   001C3A  EF86  F009         	goto	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMRAM
   346   00005A                     __pbssCOMRAM:
   347                           	callstack 0
   348   00005A                     _flags:
   349                           	callstack 0
   350   00005A                     	ds	1
   351   00005B                     _readingIndex:
   352                           	callstack 0
   353   00005B                     	ds	1
   354   00005C                     _TxBufReadCnt:
   355                           	callstack 0
   356   00005C                     	ds	1
   357   00005D                     _TxBufWriteCnt:
   358                           	callstack 0
   359   00005D                     	ds	1
   360   00005E                     _RxBufReadCnt:
   361                           	callstack 0
   362   00005E                     	ds	1
   363   00005F                     _RxBufWriteCnt:
   364                           	callstack 0
   365   00005F                     	ds	1
   366                           
   367                           	psect	bssBANK1
   368   0001FA                     __pbssBANK1:
   369                           	callstack 0
   370   0001FA                     _width:
   371                           	callstack 0
   372   0001FA                     	ds	2
   373   0001FC                     _prec:
   374                           	callstack 0
   375   0001FC                     	ds	2
   376                           
   377                           	psect	dataBANK1
   378   0001FE                     __pdataBANK1:
   379                           	callstack 0
   380   0001FE                     _dataFlag:
   381                           	callstack 0
   382   0001FE                     	ds	1
   383                           
   384                           	psect	bssBANK2
   385   000200                     __pbssBANK2:
   386                           	callstack 0
   387   000200                     _EUSART4TXbuf:
   388                           	callstack 0
   389   000200                     	ds	60
   390   00023C                     _ldrReadings:
   391                           	callstack 0
   392   00023C                     	ds	20
   393   000250                     _EUSART4RXbuf:
   394                           	callstack 0
   395   000250                     	ds	20
   396   000264                     _dbuf:
   397                           	callstack 0
   398   000264                     	ds	32
   399   000284                     _motorR:
   400                           	callstack 0
   401   000284                     	ds	9
   402   00028D                     _motorL:
   403                           	callstack 0
   404   00028D                     	ds	9
   405                           
   406                           	psect	cstackBANK3
   407   000300                     __pcstackBANK3:
   408                           	callstack 0
   409   000300                     test@red_bit:
   410                           	callstack 0
   411                           
   412                           ; 50 bytes @ 0x0
   413   000300                     	ds	50
   414   000332                     test@green_bit:
   415                           	callstack 0
   416                           
   417                           ; 50 bytes @ 0x32
   418   000332                     	ds	50
   419   000364                     test@blue_bit:
   420                           	callstack 0
   421                           
   422                           ; 50 bytes @ 0x64
   423   000364                     	ds	50
   424   000396                     test@red:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x96
   428   000396                     	ds	2
   429   000398                     test@blue:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x98
   433   000398                     	ds	2
   434   00039A                     test@green:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x9A
   438   00039A                     	ds	2
   439   00039C                     test@clear:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x9C
   443   00039C                     	ds	2
   444   00039E                     test@combo:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x9E
   448   00039E                     	ds	2
   449                           
   450                           	psect	cstackBANK1
   451   000100                     __pcstackBANK1:
   452                           	callstack 0
   453   000100                     send2USART@buf:
   454                           	callstack 0
   455                           
   456                           ; 50 bytes @ 0x0
   457   000100                     	ds	50
   458   000132                     send2USART@red_char:
   459                           	callstack 0
   460                           
   461                           ; 50 bytes @ 0x32
   462   000132                     	ds	50
   463   000164                     send2USART@blue_char:
   464                           	callstack 0
   465                           
   466                           ; 50 bytes @ 0x64
   467   000164                     	ds	50
   468   000196                     send2USART@green_char:
   469                           	callstack 0
   470                           
   471                           ; 50 bytes @ 0x96
   472   000196                     	ds	50
   473   0001C8                     send2USART@clear_char:
   474                           	callstack 0
   475                           
   476                           ; 50 bytes @ 0xC8
   477   0001C8                     	ds	50
   478                           
   479                           	psect	cstackBANK0
   480   000060                     __pcstackBANK0:
   481                           	callstack 0
   482   000060                     test@battery_level:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x0
   486   000060                     	ds	2
   487   000062                     main@red:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x2
   491   000062                     	ds	2
   492   000064                     main@blue:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x4
   496   000064                     	ds	2
   497   000066                     main@green:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x6
   501   000066                     	ds	2
   502   000068                     main@clear:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x8
   506   000068                     	ds	2
   507   00006A                     main@battery_level:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xA
   511   00006A                     	ds	2
   512                           
   513                           	psect	cstackCOMRAM
   514   000001                     __pcstackCOMRAM:
   515                           	callstack 0
   516   000001                     ??_I2C_2_Master_Idle:
   517   000001                     ?_ADC_getval:
   518                           	callstack 0
   519   000001                     ?___wmul:
   520                           	callstack 0
   521   000001                     ?___awdiv:
   522                           	callstack 0
   523   000001                     ?___awmod:
   524                           	callstack 0
   525   000001                     sendCharSerial4@charToSend:
   526                           	callstack 0
   527   000001                     initDCmotorsPWM@PWMperiod:
   528                           	callstack 0
   529   000001                     ___wmul@multiplier:
   530                           	callstack 0
   531   000001                     ___awdiv@dividend:
   532                           	callstack 0
   533   000001                     ___awmod@dividend:
   534                           	callstack 0
   535   000001                     fputc@c:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x0
   539   000001                     	ds	1
   540   000002                     ??_I2C_2_Master_Read:
   541   000002                     I2C_2_Master_Write@data_byte:
   542                           	callstack 0
   543   000002                     sendStringSerial4@string:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1
   547   000002                     	ds	1
   548   000003                     color_writetoaddr@value:
   549                           	callstack 0
   550   000003                     I2C_2_Master_Read@ack:
   551                           	callstack 0
   552   000003                     fputc@fp:
   553                           	callstack 0
   554   000003                     ADC_getval@tmpval:
   555                           	callstack 0
   556   000003                     ___wmul@multiplicand:
   557                           	callstack 0
   558   000003                     ___awdiv@divisor:
   559                           	callstack 0
   560   000003                     ___awmod@divisor:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x2
   564   000003                     	ds	1
   565   000004                     ??_fputc:
   566   000004                     color_writetoaddr@address:
   567                           	callstack 0
   568   000004                     I2C_2_Master_Read@tmp:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x3
   572   000004                     	ds	1
   573   000005                     ??_color_click_init:
   574   000005                     ?_color_read_Red:
   575                           	callstack 0
   576   000005                     ?_color_read_Green:
   577                           	callstack 0
   578   000005                     ?_color_read_Blue:
   579                           	callstack 0
   580   000005                     ?_color_read_Clear:
   581                           	callstack 0
   582   000005                     ___awdiv@counter:
   583                           	callstack 0
   584   000005                     ___awmod@counter:
   585                           	callstack 0
   586   000005                     ___wmul@product:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x4
   590   000005                     	ds	1
   591   000006                     ___awdiv@sign:
   592                           	callstack 0
   593   000006                     ___awmod@sign:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x5
   597   000006                     	ds	1
   598   000007                     ??_color_read_Red:
   599   000007                     ??_color_read_Green:
   600   000007                     ??_color_read_Blue:
   601   000007                     ??_color_read_Clear:
   602   000007                     ?_abs:
   603                           	callstack 0
   604   000007                     ?___lwdiv:
   605                           	callstack 0
   606   000007                     ?_read_prec_or_width:
   607                           	callstack 0
   608   000007                     read_prec_or_width@fmt:
   609                           	callstack 0
   610   000007                     ___awdiv@quotient:
   611                           	callstack 0
   612   000007                     ___lwdiv@dividend:
   613                           	callstack 0
   614   000007                     abs@a:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x6
   618   000007                     	ds	1
   619   000008                     read_prec_or_width@ap:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x7
   623   000008                     	ds	1
   624   000009                     ??_abs:
   625   000009                     read_prec_or_width@c:
   626                           	callstack 0
   627   000009                     ___lwdiv@divisor:
   628                           	callstack 0
   629   000009                     fputs@s:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x8
   633   000009                     	ds	1
   634   00000A                     color_read_Red@tmp:
   635                           	callstack 0
   636   00000A                     color_read_Green@tmp:
   637                           	callstack 0
   638   00000A                     color_read_Blue@tmp:
   639                           	callstack 0
   640   00000A                     color_read_Clear@tmp:
   641                           	callstack 0
   642   00000A                     read_prec_or_width@n:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x9
   646   00000A                     	ds	1
   647   00000B                     ___lwdiv@counter:
   648                           	callstack 0
   649   00000B                     fputs@fp:
   650                           	callstack 0
   651                           
   652                           ; 1 bytes @ 0xA
   653   00000B                     	ds	1
   654   00000C                     fputs@c:
   655                           	callstack 0
   656   00000C                     ___lwdiv@quotient:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0xB
   660   00000C                     	ds	1
   661   00000D                     fputs@i:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0xC
   665   00000D                     	ds	2
   666   00000F                     pad@fp:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0xE
   670   00000F                     	ds	1
   671   000010                     pad@buf:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0xF
   675   000010                     	ds	2
   676   000012                     pad@p:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x11
   680   000012                     	ds	2
   681   000014                     ??_pad:
   682                           
   683                           ; 1 bytes @ 0x13
   684   000014                     	ds	1
   685   000015                     pad@i:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x14
   689   000015                     	ds	2
   690   000017                     dtoa@fp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x16
   694   000017                     	ds	1
   695   000018                     dtoa@d:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x17
   699   000018                     	ds	2
   700   00001A                     _dtoa$2293:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x19
   704   00001A                     	ds	2
   705   00001C                     dtoa@p:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x1B
   709   00001C                     	ds	1
   710   00001D                     dtoa@w:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1C
   714   00001D                     	ds	2
   715   00001F                     dtoa@s:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x1E
   719   00001F                     	ds	1
   720   000020                     dtoa@i:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1F
   724   000020                     	ds	2
   725   000022                     vfpfcnvrt@fp:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x21
   729   000022                     	ds	1
   730   000023                     vfpfcnvrt@fmt:
   731                           	callstack 0
   732                           
   733                           ; 1 bytes @ 0x22
   734   000023                     	ds	1
   735   000024                     vfpfcnvrt@ap:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x23
   739   000024                     	ds	1
   740   000025                     ??_vfpfcnvrt:
   741                           
   742                           ; 1 bytes @ 0x24
   743   000025                     	ds	2
   744   000027                     vfpfcnvrt@convarg:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x26
   748   000027                     	ds	4
   749   00002B                     vfpfcnvrt@done:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x2A
   753   00002B                     	ds	1
   754   00002C                     vfpfcnvrt@cp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x2B
   758   00002C                     	ds	1
   759   00002D                     ?_vfprintf:
   760                           	callstack 0
   761   00002D                     vfprintf@fp:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x2C
   765   00002D                     	ds	1
   766   00002E                     vfprintf@fmt:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x2D
   770   00002E                     	ds	1
   771   00002F                     vfprintf@ap:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x2E
   775   00002F                     	ds	1
   776   000030                     vfprintf@cfmt:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x2F
   780   000030                     	ds	1
   781   000031                     ?_sprintf:
   782                           	callstack 0
   783   000031                     sprintf@s:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x30
   787   000031                     	ds	2
   788   000033                     sprintf@fmt:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x32
   792   000033                     	ds	5
   793   000038                     sprintf@ap:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x37
   797   000038                     	ds	1
   798   000039                     sprintf@f:
   799                           	callstack 0
   800                           
   801                           ; 12 bytes @ 0x38
   802   000039                     	ds	12
   803   000045                     ADC2String@buf:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x44
   807   000045                     	ds	2
   808   000047                     ADC2String@ADC_val:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x46
   812   000047                     	ds	2
   813   000049                     ??_ADC2String:
   814                           
   815                           ; 1 bytes @ 0x48
   816   000049                     	ds	2
   817   00004B                     ADC2String@frac_part:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x4A
   821   00004B                     	ds	2
   822   00004D                     ADC2String@int_part:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x4C
   826   00004D                     	ds	2
   827   00004F                     send2USART@battery_level:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x4E
   831   00004F                     	ds	2
   832   000051                     send2USART@red:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x50
   836   000051                     	ds	2
   837   000053                     send2USART@green:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x52
   841   000053                     	ds	2
   842   000055                     send2USART@blue:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x54
   846   000055                     	ds	2
   847   000057                     send2USART@clear:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x56
   851   000057                     	ds	2
   852   000059                     ??_test:
   853                           
   854                           ; 1 bytes @ 0x58
   855   000059                     	ds	1
   856   00005A                     
   857                           ; 1 bytes @ 0x59
   858 ;;
   859 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   860 ;;
   861 ;; *************** function _main *****************
   862 ;; Defined at:
   863 ;;		line 28 in file "main.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  PWMcycle        2    0        unsigned int 
   868 ;;  battery_leve    2   10[BANK0 ] unsigned int 
   869 ;;  clear           2    8[BANK0 ] unsigned int 
   870 ;;  green           2    6[BANK0 ] unsigned int 
   871 ;;  blue            2    4[BANK0 ] unsigned int 
   872 ;;  red             2    2[BANK0 ] unsigned int 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   883 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;Total ram usage:       10 bytes
   887 ;; Hardware stack levels required when called: 11
   888 ;; This function calls:
   889 ;;		_ADC_getval
   890 ;;		_ADC_init
   891 ;;		_color_click_init
   892 ;;		_color_read_Blue
   893 ;;		_color_read_Clear
   894 ;;		_color_read_Green
   895 ;;		_color_read_Red
   896 ;;		_initDCmotorsPWM
   897 ;;		_initUSART4
   898 ;;		_send2USART
   899 ;;		_test
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906   00130C                     __ptext0:
   907                           	callstack 0
   908   00130C                     _main:
   909                           	callstack 20
   910   00130C                     
   911                           ;main.c: 30:     ADC_init();
   912   00130C  ECE2  F00E         	call	_ADC_init	;wreg free
   913   001310                     
   914                           ;main.c: 31:     color_click_init();
   915   001310  EC55  F00E         	call	_color_click_init	;wreg free
   916   001314                     
   917                           ;main.c: 32:     initUSART4();
   918   001314  ECD3  F00E         	call	_initUSART4	;wreg free
   919   001318                     
   920                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
   921   001318  0E00               	movlw	0
   922   00131A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   923   00131C  0E63               	movlw	99
   924   00131E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   925   001320  EC60  F00C         	call	_initDCmotorsPWM	;wreg free
   926   001324                     
   927                           ;main.c: 39:     motorL.power = 0;
   928   001324  0E00               	movlw	0
   929   001326  0102               	movlb	2	; () banked
   930   001328  6F8D               	movwf	_motorL& (0+255),b
   931   00132A                     
   932                           ; BSR set to: 2
   933                           ;main.c: 40:     motorL.direction = 1;
   934   00132A  0E01               	movlw	1
   935   00132C  6F8E               	movwf	(_motorL+1)& (0+255),b
   936   00132E                     
   937                           ; BSR set to: 2
   938                           ;main.c: 41:     motorL.brakemode = 1;
   939   00132E  0E01               	movlw	1
   940   001330  6F8F               	movwf	(_motorL+2)& (0+255),b
   941   001332                     
   942                           ; BSR set to: 2
   943                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
   944   001332  0E00               	movlw	0
   945   001334  6F91               	movwf	(_motorL+4)& (0+255),b
   946   001336  0E63               	movlw	99
   947   001338  6F90               	movwf	(_motorL+3)& (0+255),b
   948   00133A                     
   949                           ; BSR set to: 2
   950                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   951   00133A  0EAA               	movlw	170
   952   00133C  6F92               	movwf	(_motorL+5)& (0+255),b
   953   00133E  0E0F               	movlw	15
   954   001340  6F93               	movwf	(_motorL+6)& (0+255),b
   955   001342                     
   956                           ; BSR set to: 2
   957                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   958   001342  0EA6               	movlw	166
   959   001344  6F94               	movwf	(_motorL+7)& (0+255),b
   960   001346  0E0F               	movlw	15
   961   001348  6F95               	movwf	(_motorL+8)& (0+255),b
   962   00134A                     
   963                           ; BSR set to: 2
   964                           ;main.c: 46:     motorR.power = 0;
   965   00134A  0E00               	movlw	0
   966   00134C  6F84               	movwf	_motorR& (0+255),b
   967   00134E                     
   968                           ; BSR set to: 2
   969                           ;main.c: 47:     motorR.direction = 1;
   970   00134E  0E01               	movlw	1
   971   001350  6F85               	movwf	(_motorR+1)& (0+255),b
   972   001352                     
   973                           ; BSR set to: 2
   974                           ;main.c: 48:     motorR.brakemode = 1;
   975   001352  0E01               	movlw	1
   976   001354  6F86               	movwf	(_motorR+2)& (0+255),b
   977   001356                     
   978                           ; BSR set to: 2
   979                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
   980   001356  0E00               	movlw	0
   981   001358  6F88               	movwf	(_motorR+4)& (0+255),b
   982   00135A  0E63               	movlw	99
   983   00135C  6F87               	movwf	(_motorR+3)& (0+255),b
   984                           
   985                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   986   00135E  0E25               	movlw	37
   987   001360  6F89               	movwf	(_motorR+5)& (0+255),b
   988   001362  0E0F               	movlw	15
   989   001364  6F8A               	movwf	(_motorR+6)& (0+255),b
   990                           
   991                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   992   001366  0E21               	movlw	33
   993   001368  6F8B               	movwf	(_motorR+7)& (0+255),b
   994   00136A  0E0F               	movlw	15
   995   00136C  6F8C               	movwf	(_motorR+8)& (0+255),b
   996   00136E                     
   997                           ; BSR set to: 2
   998                           ;main.c: 54:     LATDbits.LATD7=0;
   999   00136E  9E7C               	bcf	124,7,c	;volatile
  1000   001370                     
  1001                           ; BSR set to: 2
  1002                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1003   001370  9E84               	bcf	132,7,c	;volatile
  1004   001372                     
  1005                           ; BSR set to: 2
  1006                           ;main.c: 59:     TRISGbits.TRISG0 = 0;
  1007   001372  9087               	bcf	135,0,c	;volatile
  1008   001374                     
  1009                           ; BSR set to: 2
  1010                           ;main.c: 60:     LATGbits.LATG0 = 0;
  1011   001374  907F               	bcf	127,0,c	;volatile
  1012   001376                     
  1013                           ; BSR set to: 2
  1014                           ;main.c: 61:     TRISEbits.TRISE7 = 0;
  1015   001376  9E85               	bcf	133,7,c	;volatile
  1016   001378                     
  1017                           ; BSR set to: 2
  1018                           ;main.c: 62:     LATEbits.LATE7 = 0;
  1019   001378  9E7D               	bcf	125,7,c	;volatile
  1020   00137A                     
  1021                           ; BSR set to: 2
  1022                           ;main.c: 63:     TRISAbits.TRISA3 = 0;
  1023   00137A  9681               	bcf	129,3,c	;volatile
  1024   00137C                     
  1025                           ; BSR set to: 2
  1026                           ;main.c: 64:     LATAbits.LATA3 = 0;
  1027   00137C  9679               	bcf	121,3,c	;volatile
  1028   00137E                     l3479:
  1029                           
  1030                           ;main.c: 77:         battery_level = ADC_getval();
  1031   00137E  EC6F  F00E         	call	_ADC_getval	;wreg free
  1032   001382  C001  F06A         	movff	?_ADC_getval,main@battery_level
  1033   001386  C002  F06B         	movff	?_ADC_getval+1,main@battery_level+1
  1034   00138A                     
  1035                           ;main.c: 79:         red = color_read_Red();
  1036   00138A  ECE2  F00C         	call	_color_read_Red	;wreg free
  1037   00138E  C005  F062         	movff	?_color_read_Red,main@red
  1038   001392  C006  F063         	movff	?_color_read_Red+1,main@red+1
  1039   001396                     
  1040                           ;main.c: 80:         blue = color_read_Blue();
  1041   001396  EC5A  F00D         	call	_color_read_Blue	;wreg free
  1042   00139A  C005  F064         	movff	?_color_read_Blue,main@blue
  1043   00139E  C006  F065         	movff	?_color_read_Blue+1,main@blue+1
  1044   0013A2                     
  1045                           ;main.c: 81:         green = color_read_Green();
  1046   0013A2  EC0A  F00D         	call	_color_read_Green	;wreg free
  1047   0013A6  C005  F066         	movff	?_color_read_Green,main@green
  1048   0013AA  C006  F067         	movff	?_color_read_Green+1,main@green+1
  1049   0013AE                     
  1050                           ;main.c: 82:         clear = color_read_Clear();
  1051   0013AE  EC32  F00D         	call	_color_read_Clear	;wreg free
  1052   0013B2  C005  F068         	movff	?_color_read_Clear,main@clear
  1053   0013B6  C006  F069         	movff	?_color_read_Clear+1,main@clear+1
  1054   0013BA                     
  1055                           ;main.c: 85:         send2USART(battery_level, red, green, blue, clear);
  1056   0013BA  C06A  F04F         	movff	main@battery_level,send2USART@battery_level
  1057   0013BE  C06B  F050         	movff	main@battery_level+1,send2USART@battery_level+1
  1058   0013C2  C062  F051         	movff	main@red,send2USART@red
  1059   0013C6  C063  F052         	movff	main@red+1,send2USART@red+1
  1060   0013CA  C066  F053         	movff	main@green,send2USART@green
  1061   0013CE  C067  F054         	movff	main@green+1,send2USART@green+1
  1062   0013D2  C064  F055         	movff	main@blue,send2USART@blue
  1063   0013D6  C065  F056         	movff	main@blue+1,send2USART@blue+1
  1064   0013DA  C068  F057         	movff	main@clear,send2USART@clear
  1065   0013DE  C069  F058         	movff	main@clear+1,send2USART@clear+1
  1066   0013E2  ECBC  F00A         	call	_send2USART	;wreg free
  1067   0013E6                     
  1068                           ;main.c: 87:         test(battery_level);
  1069   0013E6  C06A  F060         	movff	main@battery_level,test@battery_level
  1070   0013EA  C06B  F061         	movff	main@battery_level+1,test@battery_level+1
  1071   0013EE  EC41  F007         	call	_test	;wreg free
  1072   0013F2  EFBF  F009         	goto	l3479
  1073   0013F6  EF00  F000         	goto	start
  1074   0013FA                     __end_of_main:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _test *****************
  1078 ;; Defined at:
  1079 ;;		line 98 in file "color.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  battery_leve    2    0[BANK0 ] unsigned int 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  blue_bit       50  100[BANK3 ] unsigned char [50]
  1084 ;;  green_bit      50   50[BANK3 ] unsigned char [50]
  1085 ;;  red_bit        50    0[BANK3 ] unsigned char [50]
  1086 ;;  clear           2  156[BANK3 ] unsigned int 
  1087 ;;  green           2  154[BANK3 ] unsigned int 
  1088 ;;  blue            2  152[BANK3 ] unsigned int 
  1089 ;;  red             2  150[BANK3 ] unsigned int 
  1090 ;;  combo           2  158[BANK3 ] unsigned int 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1101 ;;      Locals:         0       0       0       0     160       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Totals:         1       2       0       0     160       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;Total ram usage:      163 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; Hardware stack levels required when called: 10
  1107 ;; This function calls:
  1108 ;;		_color_read_Blue
  1109 ;;		_color_read_Clear
  1110 ;;		_color_read_Green
  1111 ;;		_color_read_Red
  1112 ;;		_send2USART
  1113 ;;		_sendStringSerial4
  1114 ;;		_sprintf
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text1
  1121   000E82                     __ptext1:
  1122                           	callstack 0
  1123   000E82                     _test:
  1124                           	callstack 20
  1125   000E82                     
  1126                           ;color.c: 101:     for (unsigned int combo = 0; combo < 8; ++combo) {
  1127   000E82  0E00               	movlw	0
  1128   000E84  0103               	movlb	3	; () banked
  1129   000E86  6F9F               	movwf	(test@combo+1)& (0+255),b
  1130   000E88  0E00               	movlw	0
  1131   000E8A  6F9E               	movwf	test@combo& (0+255),b
  1132   000E8C                     l3301:
  1133                           
  1134                           ; BSR set to: 3
  1135                           ;color.c: 103:         LATGbits.LATG0 = (combo & 0x1) ? 1 : 0;
  1136   000E8C  B19E               	btfsc	test@combo& (0+255),0,b
  1137   000E8E  EF4B  F007         	goto	u2161
  1138   000E92  EF4F  F007         	goto	u2160
  1139   000E96                     u2161:
  1140   000E96  6A59               	clrf	??_test^0,c
  1141   000E98  2A59               	incf	??_test^0,f,c
  1142   000E9A  EF50  F007         	goto	u2178
  1143   000E9E                     u2160:
  1144   000E9E  6A59               	clrf	??_test^0,c
  1145   000EA0                     u2178:
  1146   000EA0  507F               	movf	127,w,c	;volatile
  1147   000EA2  1859               	xorwf	??_test^0,w,c
  1148   000EA4  0BFE               	andlw	-2
  1149   000EA6  1859               	xorwf	??_test^0,w,c
  1150   000EA8  6E7F               	movwf	127,c	;volatile
  1151                           
  1152                           ;color.c: 104:         LATEbits.LATE7 = (combo & 0x2) ? 1 : 0;
  1153   000EAA  0103               	movlb	3	; () banked
  1154   000EAC  B39E               	btfsc	test@combo& (0+255),1,b
  1155   000EAE  EF5B  F007         	goto	u2181
  1156   000EB2  EF5F  F007         	goto	u2180
  1157   000EB6                     u2181:
  1158   000EB6  6A59               	clrf	??_test^0,c
  1159   000EB8  2A59               	incf	??_test^0,f,c
  1160   000EBA  EF60  F007         	goto	u2198
  1161   000EBE                     u2180:
  1162   000EBE  6A59               	clrf	??_test^0,c
  1163   000EC0                     u2198:
  1164   000EC0  3259               	rrcf	??_test^0,f,c
  1165   000EC2  3259               	rrcf	??_test^0,f,c
  1166   000EC4  507D               	movf	125,w,c	;volatile
  1167   000EC6  1859               	xorwf	??_test^0,w,c
  1168   000EC8  0B7F               	andlw	-129
  1169   000ECA  1859               	xorwf	??_test^0,w,c
  1170   000ECC  6E7D               	movwf	125,c	;volatile
  1171                           
  1172                           ;color.c: 105:         LATAbits.LATA3 = (combo & 0x4) ? 1 : 0;
  1173   000ECE  0103               	movlb	3	; () banked
  1174   000ED0  B59E               	btfsc	test@combo& (0+255),2,b
  1175   000ED2  EF6D  F007         	goto	u2201
  1176   000ED6  EF71  F007         	goto	u2200
  1177   000EDA                     u2201:
  1178   000EDA  6A59               	clrf	??_test^0,c
  1179   000EDC  2A59               	incf	??_test^0,f,c
  1180   000EDE  EF72  F007         	goto	u2218
  1181   000EE2                     u2200:
  1182   000EE2  6A59               	clrf	??_test^0,c
  1183   000EE4                     u2218:
  1184   000EE4  4659               	rlncf	??_test^0,f,c
  1185   000EE6  4659               	rlncf	??_test^0,f,c
  1186   000EE8  4659               	rlncf	??_test^0,f,c
  1187   000EEA  5079               	movf	121,w,c	;volatile
  1188   000EEC  1859               	xorwf	??_test^0,w,c
  1189   000EEE  0BF7               	andlw	-9
  1190   000EF0  1859               	xorwf	??_test^0,w,c
  1191   000EF2  6E79               	movwf	121,c	;volatile
  1192   000EF4                     
  1193                           ;color.c: 108:         unsigned int red = color_read_Red();
  1194   000EF4  ECE2  F00C         	call	_color_read_Red	;wreg free
  1195   000EF8  C005  F396         	movff	?_color_read_Red,test@red
  1196   000EFC  C006  F397         	movff	?_color_read_Red+1,test@red+1
  1197   000F00                     
  1198                           ;color.c: 109:         unsigned int blue = color_read_Blue();
  1199   000F00  EC5A  F00D         	call	_color_read_Blue	;wreg free
  1200   000F04  C005  F398         	movff	?_color_read_Blue,test@blue
  1201   000F08  C006  F399         	movff	?_color_read_Blue+1,test@blue+1
  1202   000F0C                     
  1203                           ;color.c: 110:         unsigned int green = color_read_Green();
  1204   000F0C  EC0A  F00D         	call	_color_read_Green	;wreg free
  1205   000F10  C005  F39A         	movff	?_color_read_Green,test@green
  1206   000F14  C006  F39B         	movff	?_color_read_Green+1,test@green+1
  1207   000F18                     
  1208                           ;color.c: 111:         unsigned int clear = color_read_Clear();
  1209   000F18  EC32  F00D         	call	_color_read_Clear	;wreg free
  1210   000F1C  C005  F39C         	movff	?_color_read_Clear,test@clear
  1211   000F20  C006  F39D         	movff	?_color_read_Clear+1,test@clear+1
  1212   000F24                     
  1213                           ;color.c: 114:         char red_bit[50];;color.c: 115:         char green_bit[50];;color
      +                          .c: 116:         char blue_bit[50];;color.c: 118:         sprintf(red_bit,"Red_light=%d,
      +                            ", LATGbits.LATG0);
  1214   000F24  0E00               	movlw	low test@red_bit
  1215   000F26  6E31               	movwf	sprintf@s^0,c
  1216   000F28  0E03               	movlw	high test@red_bit
  1217   000F2A  6E32               	movwf	(sprintf@s+1)^0,c
  1218   000F2C  0E49               	movlw	low STR_1
  1219   000F2E  6E33               	movwf	sprintf@fmt^0,c
  1220   000F30  B07F               	btfsc	127,0,c	;volatile
  1221   000F32  EF9D  F007         	goto	u2221
  1222   000F36  EFA1  F007         	goto	u2220
  1223   000F3A                     u2221:
  1224   000F3A  6A59               	clrf	??_test^0,c
  1225   000F3C  2A59               	incf	??_test^0,f,c
  1226   000F3E  EFA2  F007         	goto	u2228
  1227   000F42                     u2220:
  1228   000F42  6A59               	clrf	??_test^0,c
  1229   000F44                     u2228:
  1230   000F44  5059               	movf	??_test^0,w,c
  1231   000F46  6E34               	movwf	(?_sprintf+3)^0,c
  1232   000F48  6A35               	clrf	(?_sprintf+4)^0,c
  1233   000F4A  ECE4  F00D         	call	_sprintf	;wreg free
  1234   000F4E                     
  1235                           ;color.c: 119:         sprintf(green_bit,"Green_light=%d,  ", LATEbits.LATE7);
  1236   000F4E  0E32               	movlw	low test@green_bit
  1237   000F50  6E31               	movwf	sprintf@s^0,c
  1238   000F52  0E03               	movlw	high test@green_bit
  1239   000F54  6E32               	movwf	(sprintf@s+1)^0,c
  1240   000F56  0E16               	movlw	low STR_2
  1241   000F58  6E33               	movwf	sprintf@fmt^0,c
  1242   000F5A  BE7D               	btfsc	125,7,c	;volatile
  1243   000F5C  EFB2  F007         	goto	u2231
  1244   000F60  EFB6  F007         	goto	u2230
  1245   000F64                     u2231:
  1246   000F64  6A59               	clrf	??_test^0,c
  1247   000F66  2A59               	incf	??_test^0,f,c
  1248   000F68  EFB7  F007         	goto	u2238
  1249   000F6C                     u2230:
  1250   000F6C  6A59               	clrf	??_test^0,c
  1251   000F6E                     u2238:
  1252   000F6E  5059               	movf	??_test^0,w,c
  1253   000F70  6E34               	movwf	(?_sprintf+3)^0,c
  1254   000F72  6A35               	clrf	(?_sprintf+4)^0,c
  1255   000F74  ECE4  F00D         	call	_sprintf	;wreg free
  1256   000F78                     
  1257                           ;color.c: 120:         sprintf(blue_bit,"Blue_light=%d \n\r", LATAbits.LATA3);
  1258   000F78  0E64               	movlw	low test@blue_bit
  1259   000F7A  6E31               	movwf	sprintf@s^0,c
  1260   000F7C  0E03               	movlw	high test@blue_bit
  1261   000F7E  6E32               	movwf	(sprintf@s+1)^0,c
  1262   000F80  0E28               	movlw	low STR_3
  1263   000F82  6E33               	movwf	sprintf@fmt^0,c
  1264   000F84  B679               	btfsc	121,3,c	;volatile
  1265   000F86  EFC7  F007         	goto	u2241
  1266   000F8A  EFCB  F007         	goto	u2240
  1267   000F8E                     u2241:
  1268   000F8E  6A59               	clrf	??_test^0,c
  1269   000F90  2A59               	incf	??_test^0,f,c
  1270   000F92  EFCC  F007         	goto	u2248
  1271   000F96                     u2240:
  1272   000F96  6A59               	clrf	??_test^0,c
  1273   000F98                     u2248:
  1274   000F98  5059               	movf	??_test^0,w,c
  1275   000F9A  6E34               	movwf	(?_sprintf+3)^0,c
  1276   000F9C  6A35               	clrf	(?_sprintf+4)^0,c
  1277   000F9E  ECE4  F00D         	call	_sprintf	;wreg free
  1278   000FA2                     
  1279                           ;color.c: 123:         sendStringSerial4(red_bit);
  1280   000FA2  0E00               	movlw	low test@red_bit
  1281   000FA4  6E02               	movwf	sendStringSerial4@string^0,c
  1282   000FA6  0E03               	movlw	high test@red_bit
  1283   000FA8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1284   000FAA  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1285   000FAE                     
  1286                           ;color.c: 124:         sendStringSerial4(green_bit);
  1287   000FAE  0E32               	movlw	low test@green_bit
  1288   000FB0  6E02               	movwf	sendStringSerial4@string^0,c
  1289   000FB2  0E03               	movlw	high test@green_bit
  1290   000FB4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1291   000FB6  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1292   000FBA                     
  1293                           ;color.c: 125:         sendStringSerial4(blue_bit);
  1294   000FBA  0E64               	movlw	low test@blue_bit
  1295   000FBC  6E02               	movwf	sendStringSerial4@string^0,c
  1296   000FBE  0E03               	movlw	high test@blue_bit
  1297   000FC0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1298   000FC2  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1299   000FC6                     
  1300                           ;color.c: 127:         send2USART(battery_level, red, green, blue, clear);
  1301   000FC6  C060  F04F         	movff	test@battery_level,send2USART@battery_level
  1302   000FCA  C061  F050         	movff	test@battery_level+1,send2USART@battery_level+1
  1303   000FCE  C396  F051         	movff	test@red,send2USART@red
  1304   000FD2  C397  F052         	movff	test@red+1,send2USART@red+1
  1305   000FD6  C39A  F053         	movff	test@green,send2USART@green
  1306   000FDA  C39B  F054         	movff	test@green+1,send2USART@green+1
  1307   000FDE  C398  F055         	movff	test@blue,send2USART@blue
  1308   000FE2  C399  F056         	movff	test@blue+1,send2USART@blue+1
  1309   000FE6  C39C  F057         	movff	test@clear,send2USART@clear
  1310   000FEA  C39D  F058         	movff	test@clear+1,send2USART@clear+1
  1311   000FEE  ECBC  F00A         	call	_send2USART	;wreg free
  1312   000FF2                     
  1313                           ;color.c: 128:     }
  1314   000FF2  0103               	movlb	3	; () banked
  1315   000FF4  4B9E               	infsnz	test@combo& (0+255),f,b
  1316   000FF6  2B9F               	incf	(test@combo+1)& (0+255),f,b
  1317   000FF8                     
  1318                           ; BSR set to: 3
  1319   000FF8  519F               	movf	(test@combo+1)& (0+255),w,b
  1320   000FFA  E109               	bnz	u2250
  1321   000FFC  0E08               	movlw	8
  1322   000FFE  5D9E               	subwf	test@combo& (0+255),w,b
  1323   001000  A0D8               	btfss	status,0,c
  1324   001002  EF05  F008         	goto	u2251
  1325   001006  EF07  F008         	goto	u2250
  1326   00100A                     u2251:
  1327   00100A  EF46  F007         	goto	l3301
  1328   00100E                     u2250:
  1329   00100E                     
  1330                           ; BSR set to: 3
  1331   00100E  0012               	return		;funcret
  1332   001010                     __end_of_test:
  1333                           	callstack 0
  1334                           
  1335 ;; *************** function _send2USART *****************
  1336 ;; Defined at:
  1337 ;;		line 146 in file "serial.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  battery_leve    2   78[COMRAM] unsigned int 
  1340 ;;  red             2   80[COMRAM] unsigned int 
  1341 ;;  green           2   82[COMRAM] unsigned int 
  1342 ;;  blue            2   84[COMRAM] unsigned int 
  1343 ;;  clear           2   86[COMRAM] unsigned int 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  clear_char     50  200[BANK1 ] unsigned char [50]
  1346 ;;  green_char     50  150[BANK1 ] unsigned char [50]
  1347 ;;  blue_char      50  100[BANK1 ] unsigned char [50]
  1348 ;;  red_char       50   50[BANK1 ] unsigned char [50]
  1349 ;;  buf            50    0[BANK1 ] unsigned char [50]
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1359 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Locals:         0       0     250       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1362 ;;      Totals:        10       0     250       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;Total ram usage:      260 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 9
  1366 ;; This function calls:
  1367 ;;		_ADC2String
  1368 ;;		_sendStringSerial4
  1369 ;;		_sprintf
  1370 ;; This function is called by:
  1371 ;;		_test
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text2
  1377   001578                     __ptext2:
  1378                           	callstack 0
  1379   001578                     _send2USART:
  1380                           	callstack 20
  1381   001578                     
  1382                           ;serial.c: 147:         char buf[50];;serial.c: 148:         char red_char[50];;serial.c
      +                          : 149:         char blue_char[50];;serial.c: 150:         char green_char[50];;serial.c:
      +                           151:         char clear_char[50];;serial.c: 155:         ADC2String(buf, battery_level)
      +                          ;
  1383   001578  0E00               	movlw	low send2USART@buf
  1384   00157A  6E45               	movwf	ADC2String@buf^0,c
  1385   00157C  0E01               	movlw	high send2USART@buf
  1386   00157E  6E46               	movwf	(ADC2String@buf+1)^0,c
  1387   001580  C04F  F047         	movff	send2USART@battery_level,ADC2String@ADC_val
  1388   001584  C050  F048         	movff	send2USART@battery_level+1,ADC2String@ADC_val+1
  1389   001588  ECC4  F00B         	call	_ADC2String	;wreg free
  1390                           
  1391                           ;serial.c: 156:         sprintf(red_char,"Red=%05d,  ",red);
  1392   00158C  0E32               	movlw	low send2USART@red_char
  1393   00158E  6E31               	movwf	sprintf@s^0,c
  1394   001590  0E01               	movlw	high send2USART@red_char
  1395   001592  6E32               	movwf	(sprintf@s+1)^0,c
  1396   001594  0E74               	movlw	low STR_5
  1397   001596  6E33               	movwf	sprintf@fmt^0,c
  1398   001598  C051  F034         	movff	send2USART@red,?_sprintf+3
  1399   00159C  C052  F035         	movff	send2USART@red+1,?_sprintf+4
  1400   0015A0  ECE4  F00D         	call	_sprintf	;wreg free
  1401                           
  1402                           ;serial.c: 157:         sprintf(blue_char,"Blue=%05d,  ",blue);
  1403   0015A4  0E64               	movlw	low send2USART@blue_char
  1404   0015A6  6E31               	movwf	sprintf@s^0,c
  1405   0015A8  0E01               	movlw	high send2USART@blue_char
  1406   0015AA  6E32               	movwf	(sprintf@s+1)^0,c
  1407   0015AC  0E67               	movlw	low STR_6
  1408   0015AE  6E33               	movwf	sprintf@fmt^0,c
  1409   0015B0  C055  F034         	movff	send2USART@blue,?_sprintf+3
  1410   0015B4  C056  F035         	movff	send2USART@blue+1,?_sprintf+4
  1411   0015B8  ECE4  F00D         	call	_sprintf	;wreg free
  1412                           
  1413                           ;serial.c: 158:         sprintf(green_char,"Green=%05d,  ",green);
  1414   0015BC  0E96               	movlw	low send2USART@green_char
  1415   0015BE  6E31               	movwf	sprintf@s^0,c
  1416   0015C0  0E01               	movlw	high send2USART@green_char
  1417   0015C2  6E32               	movwf	(sprintf@s+1)^0,c
  1418   0015C4  0E59               	movlw	low STR_7
  1419   0015C6  6E33               	movwf	sprintf@fmt^0,c
  1420   0015C8  C053  F034         	movff	send2USART@green,?_sprintf+3
  1421   0015CC  C054  F035         	movff	send2USART@green+1,?_sprintf+4
  1422   0015D0  ECE4  F00D         	call	_sprintf	;wreg free
  1423                           
  1424                           ;serial.c: 159:         sprintf(clear_char,"Clear=%05d,  \n\r",clear);
  1425   0015D4  0EC8               	movlw	low send2USART@clear_char
  1426   0015D6  6E31               	movwf	sprintf@s^0,c
  1427   0015D8  0E01               	movlw	high send2USART@clear_char
  1428   0015DA  6E32               	movwf	(sprintf@s+1)^0,c
  1429   0015DC  0E39               	movlw	low STR_8
  1430   0015DE  6E33               	movwf	sprintf@fmt^0,c
  1431   0015E0  C057  F034         	movff	send2USART@clear,?_sprintf+3
  1432   0015E4  C058  F035         	movff	send2USART@clear+1,?_sprintf+4
  1433   0015E8  ECE4  F00D         	call	_sprintf	;wreg free
  1434   0015EC                     
  1435                           ;serial.c: 163:         sendStringSerial4(buf);
  1436   0015EC  0E00               	movlw	low send2USART@buf
  1437   0015EE  6E02               	movwf	sendStringSerial4@string^0,c
  1438   0015F0  0E01               	movlw	high send2USART@buf
  1439   0015F2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1440   0015F4  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1441   0015F8                     
  1442                           ;serial.c: 164:         sendStringSerial4(red_char);
  1443   0015F8  0E32               	movlw	low send2USART@red_char
  1444   0015FA  6E02               	movwf	sendStringSerial4@string^0,c
  1445   0015FC  0E01               	movlw	high send2USART@red_char
  1446   0015FE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1447   001600  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1448   001604                     
  1449                           ;serial.c: 165:         sendStringSerial4(blue_char);
  1450   001604  0E64               	movlw	low send2USART@blue_char
  1451   001606  6E02               	movwf	sendStringSerial4@string^0,c
  1452   001608  0E01               	movlw	high send2USART@blue_char
  1453   00160A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1454   00160C  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1455   001610                     
  1456                           ;serial.c: 166:         sendStringSerial4(green_char);
  1457   001610  0E96               	movlw	low send2USART@green_char
  1458   001612  6E02               	movwf	sendStringSerial4@string^0,c
  1459   001614  0E01               	movlw	high send2USART@green_char
  1460   001616  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1461   001618  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1462   00161C                     
  1463                           ;serial.c: 167:         sendStringSerial4(clear_char);
  1464   00161C  0EC8               	movlw	low send2USART@clear_char
  1465   00161E  6E02               	movwf	sendStringSerial4@string^0,c
  1466   001620  0E01               	movlw	high send2USART@clear_char
  1467   001622  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1468   001624  EC1F  F00E         	call	_sendStringSerial4	;wreg free
  1469   001628  0012               	return		;funcret
  1470   00162A                     __end_of_send2USART:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _sendStringSerial4 *****************
  1474 ;; Defined at:
  1475 ;;		line 41 in file "serial.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  string          2    1[COMRAM] PTR unsigned char 
  1478 ;;		 -> send2USART@clear_char(50), send2USART@green_char(50), send2USART@blue_char(50), send2USART@red_char(50), 
  1479 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), test@blue_bit(50), test@green_bit(50), 
  1480 ;;		 -> test@red_bit(50), 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;Total ram usage:        2 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 1
  1499 ;; This function calls:
  1500 ;;		_sendCharSerial4
  1501 ;; This function is called by:
  1502 ;;		_test
  1503 ;;		_send2USART
  1504 ;;		_sendAllReadings
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text3
  1509   001C3E                     __ptext3:
  1510                           	callstack 0
  1511   001C3E                     _sendStringSerial4:
  1512                           	callstack 28
  1513   001C3E                     
  1514                           ;serial.c: 44:     while(*string != 0){
  1515   001C3E  EF2E  F00E         	goto	l3165
  1516   001C42                     l3159:
  1517                           
  1518                           ;serial.c: 46:   sendCharSerial4(*string++);
  1519   001C42  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1520   001C46  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1521   001C4A  50DF               	movf	indf2,w,c
  1522   001C4C  ECEF  F00E         	call	_sendCharSerial4
  1523   001C50  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1524   001C52  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1525   001C54                     
  1526                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  1527   001C54  0E6A               	movlw	106
  1528   001C56                     u2317:
  1529   001C56  2EE8               	decfsz	wreg,f,c
  1530   001C58  D7FE               	bra	u2317
  1531   001C5A  D000               	nop2	
  1532   001C5C                     l3165:
  1533                           
  1534                           ;serial.c: 44:     while(*string != 0){
  1535   001C5C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1536   001C60  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1537   001C64  50DF               	movf	indf2,w,c
  1538   001C66  A4D8               	btfss	status,2,c
  1539   001C68  EF38  F00E         	goto	u2081
  1540   001C6C  EF3A  F00E         	goto	u2080
  1541   001C70                     u2081:
  1542   001C70  EF21  F00E         	goto	l3159
  1543   001C74                     u2080:
  1544   001C74  0012               	return		;funcret
  1545   001C76                     __end_of_sendStringSerial4:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _sendCharSerial4 *****************
  1549 ;; Defined at:
  1550 ;;		line 35 in file "serial.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  charToSend      1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  charToSend      1    0[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;Total ram usage:        1 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_sendStringSerial4
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text4
  1578   001DDE                     __ptext4:
  1579                           	callstack 0
  1580   001DDE                     _sendCharSerial4:
  1581                           	callstack 28
  1582                           
  1583                           ;incstack = 0
  1584                           ;sendCharSerial4@charToSend stored from wreg
  1585   001DDE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1586   001DE0                     l362:
  1587   001DE0  010E               	movlb	14	; () banked
  1588   001DE2  A537               	btfss	55,2,b	;volatile
  1589   001DE4  EFF6  F00E         	goto	u2021
  1590   001DE8  EFF8  F00E         	goto	u2020
  1591   001DEC                     u2021:
  1592   001DEC  EFF0  F00E         	goto	l362
  1593   001DF0                     u2020:
  1594   001DF0                     
  1595                           ; BSR set to: 14
  1596                           ;serial.c: 37:     TX4REG = charToSend;
  1597   001DF0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1598   001DF4                     
  1599                           ; BSR set to: 14
  1600   001DF4  0012               	return		;funcret
  1601   001DF6                     __end_of_sendCharSerial4:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _ADC2String *****************
  1605 ;; Defined at:
  1606 ;;		line 135 in file "serial.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  buf             2   68[COMRAM] PTR unsigned char 
  1609 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), 
  1610 ;;  ADC_val         2   70[COMRAM] unsigned int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  int_part        2   76[COMRAM] unsigned int 
  1613 ;;  frac_part       2   74[COMRAM] unsigned int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;Total ram usage:       10 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 8
  1630 ;; This function calls:
  1631 ;;		___lwdiv
  1632 ;;		___wmul
  1633 ;;		_sprintf
  1634 ;; This function is called by:
  1635 ;;		_send2USART
  1636 ;;		_sendAllReadings
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text5
  1641   001788                     __ptext5:
  1642                           	callstack 0
  1643   001788                     _ADC2String:
  1644                           	callstack 20
  1645   001788                     
  1646                           ;serial.c: 137:     unsigned int int_part=ADC_val/77;
  1647   001788  C047  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  1648   00178C  C048  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  1649   001790  0E00               	movlw	0
  1650   001792  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1651   001794  0E4D               	movlw	77
  1652   001796  6E09               	movwf	___lwdiv@divisor^0,c
  1653   001798  ECA8  F00C         	call	___lwdiv	;wreg free
  1654   00179C  C007  F04D         	movff	?___lwdiv,ADC2String@int_part
  1655   0017A0  C008  F04E         	movff	?___lwdiv+1,ADC2String@int_part+1
  1656   0017A4                     
  1657                           ;serial.c: 139:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  1658   0017A4  C047  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  1659   0017A8  C048  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  1660   0017AC  0E00               	movlw	0
  1661   0017AE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1662   0017B0  0E64               	movlw	100
  1663   0017B2  6E03               	movwf	___wmul@multiplicand^0,c
  1664   0017B4  ECB0  F00E         	call	___wmul	;wreg free
  1665   0017B8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1666   0017BC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1667   0017C0  0E00               	movlw	0
  1668   0017C2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1669   0017C4  0E4D               	movlw	77
  1670   0017C6  6E09               	movwf	___lwdiv@divisor^0,c
  1671   0017C8  ECA8  F00C         	call	___lwdiv	;wreg free
  1672   0017CC  C007  F049         	movff	?___lwdiv,??_ADC2String
  1673   0017D0  C008  F04A         	movff	?___lwdiv+1,??_ADC2String+1
  1674   0017D4  C04D  F001         	movff	ADC2String@int_part,___wmul@multiplier
  1675   0017D8  C04E  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  1676   0017DC  0EFF               	movlw	255
  1677   0017DE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1678   0017E0  0E9C               	movlw	156
  1679   0017E2  6E03               	movwf	___wmul@multiplicand^0,c
  1680   0017E4  ECB0  F00E         	call	___wmul	;wreg free
  1681   0017E8  5001               	movf	?___wmul^0,w,c
  1682   0017EA  2449               	addwf	??_ADC2String^0,w,c
  1683   0017EC  6E4B               	movwf	ADC2String@frac_part^0,c
  1684   0017EE  5002               	movf	(?___wmul+1)^0,w,c
  1685   0017F0  204A               	addwfc	(??_ADC2String+1)^0,w,c
  1686   0017F2  6E4C               	movwf	(ADC2String@frac_part+1)^0,c
  1687   0017F4                     
  1688                           ;serial.c: 141:     sprintf(buf,"Voltage = %d.%02d,  ",int_part,frac_part);
  1689   0017F4  C045  F031         	movff	ADC2String@buf,sprintf@s
  1690   0017F8  C046  F032         	movff	ADC2String@buf+1,sprintf@s+1
  1691   0017FC  0E01               	movlw	low STR_4
  1692   0017FE  6E33               	movwf	sprintf@fmt^0,c
  1693   001800  C04D  F034         	movff	ADC2String@int_part,?_sprintf+3
  1694   001804  C04E  F035         	movff	ADC2String@int_part+1,?_sprintf+4
  1695   001808  C04B  F036         	movff	ADC2String@frac_part,?_sprintf+5
  1696   00180C  C04C  F037         	movff	ADC2String@frac_part+1,?_sprintf+6
  1697   001810  ECE4  F00D         	call	_sprintf	;wreg free
  1698   001814                     
  1699                           ;serial.c: 143:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1700   001814  0E52               	movlw	82
  1701   001816  6E4A               	movwf	(??_ADC2String+1)^0,c
  1702   001818  0E2B               	movlw	43
  1703   00181A  6E49               	movwf	??_ADC2String^0,c
  1704   00181C  0E00               	movlw	0
  1705   00181E                     u2327:
  1706   00181E  2EE8               	decfsz	wreg,f,c
  1707   001820  D7FE               	bra	u2327
  1708   001822  2E49               	decfsz	??_ADC2String^0,f,c
  1709   001824  D7FC               	bra	u2327
  1710   001826  2E4A               	decfsz	(??_ADC2String+1)^0,f,c
  1711   001828  D7FA               	bra	u2327
  1712   00182A  D000               	nop2	
  1713   00182C  0012               	return		;funcret
  1714   00182E                     __end_of_ADC2String:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _sprintf *****************
  1718 ;; Defined at:
  1719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  s               2   48[COMRAM] PTR unsigned char 
  1722 ;;		 -> send2USART@clear_char(50), send2USART@green_char(50), send2USART@blue_char(50), send2USART@red_char(50), 
  1723 ;;		 -> send2USART@buf(50), sendAllReadings@buffer(10), test@blue_bit(50), test@green_bit(50), 
  1724 ;;		 -> test@red_bit(50), 
  1725 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
  1726 ;;		 -> STR_8(16), STR_7(14), STR_6(13), STR_5(12), 
  1727 ;;		 -> STR_4(21), STR_3(17), STR_2(18), STR_1(16), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  f              12   56[COMRAM] struct _IO_FILE
  1730 ;;  ret             2    0        int 
  1731 ;;  ap              1   55[COMRAM] PTR void [1]
  1732 ;;		 -> ?_sprintf(2), 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  2   48[COMRAM] int 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1742 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1745 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;Total ram usage:       20 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 7
  1749 ;; This function calls:
  1750 ;;		_vfprintf
  1751 ;; This function is called by:
  1752 ;;		_test
  1753 ;;		_ADC2String
  1754 ;;		_send2USART
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text6
  1759   001BC8                     __ptext6:
  1760                           	callstack 0
  1761   001BC8                     _sprintf:
  1762                           	callstack 22
  1763   001BC8  0E34               	movlw	low (?_sprintf+3)
  1764   001BCA  6E38               	movwf	sprintf@ap^0,c
  1765   001BCC  C031  F039         	movff	sprintf@s,sprintf@f
  1766   001BD0  C032  F03A         	movff	sprintf@s+1,sprintf@f+1
  1767   001BD4  0E00               	movlw	0
  1768   001BD6  6E3D               	movwf	(sprintf@f+4)^0,c
  1769   001BD8  0E00               	movlw	0
  1770   001BDA  6E3C               	movwf	(sprintf@f+3)^0,c
  1771   001BDC  0E00               	movlw	0
  1772   001BDE  6E44               	movwf	(sprintf@f+11)^0,c
  1773   001BE0  0E00               	movlw	0
  1774   001BE2  6E43               	movwf	(sprintf@f+10)^0,c
  1775   001BE4  0E39               	movlw	low sprintf@f
  1776   001BE6  6E2D               	movwf	vfprintf@fp^0,c
  1777   001BE8  C033  F02E         	movff	sprintf@fmt,vfprintf@fmt
  1778   001BEC  0E38               	movlw	low sprintf@ap
  1779   001BEE  6E2F               	movwf	vfprintf@ap^0,c
  1780   001BF0  EC82  F00D         	call	_vfprintf	;wreg free
  1781   001BF4  503C               	movf	(sprintf@f+3)^0,w,c
  1782   001BF6  2431               	addwf	sprintf@s^0,w,c
  1783   001BF8  6ED9               	movwf	fsr2l,c
  1784   001BFA  503D               	movf	(sprintf@f+4)^0,w,c
  1785   001BFC  2032               	addwfc	(sprintf@s+1)^0,w,c
  1786   001BFE  6EDA               	movwf	fsr2h,c
  1787   001C00  6ADF               	clrf	indf2,c
  1788   001C02  0012               	return		;funcret
  1789   001C04                     __end_of_sprintf:
  1790                           	callstack 0
  1791                           
  1792 ;; *************** function _vfprintf *****************
  1793 ;; Defined at:
  1794 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  1797 ;;		 -> sprintf@f(12), 
  1798 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1799 ;;		 -> STR_8(16), STR_7(14), STR_6(13), STR_5(12), 
  1800 ;;		 -> STR_4(21), STR_3(17), STR_2(18), STR_1(16), 
  1801 ;;  ap              1   46[COMRAM] PTR PTR void 
  1802 ;;		 -> sprintf@ap(1), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  1805 ;;		 -> STR_8(16), STR_7(14), STR_6(13), STR_5(12), 
  1806 ;;		 -> STR_4(21), STR_3(17), STR_2(18), STR_1(16), 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2   44[COMRAM] int 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1816 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 6
  1823 ;; This function calls:
  1824 ;;		_vfpfcnvrt
  1825 ;; This function is called by:
  1826 ;;		_sprintf
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text7
  1831   001B04                     __ptext7:
  1832                           	callstack 0
  1833   001B04                     _vfprintf:
  1834                           	callstack 22
  1835   001B04                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1837   001B04  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  1838                           
  1839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1840   001B08  EF8E  F00D         	goto	l3079
  1841   001B0C                     l3077:
  1842                           
  1843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1844   001B0C  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  1845   001B10  0E30               	movlw	low vfprintf@cfmt
  1846   001B12  6E23               	movwf	vfpfcnvrt@fmt^0,c
  1847   001B14  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  1848   001B18  EC08  F008         	call	_vfpfcnvrt	;wreg free
  1849   001B1C                     l3079:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1852   001B1C  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  1853   001B20                     	if	1	;There is more than 1 active tblptr byte
  1854   001B20  0E0E               	movlw	high __smallconst
  1855   001B22  6EF7               	movwf	tblptrh,c
  1856   001B24                     	endif
  1857   001B24                     	if	0	;tblptru may be non-zero
  1858   001B24                     	endif
  1859   001B24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1860   001B24  0E00               	movlw	low (__smallconst shr (0+16))
  1861   001B26  6EF8               	movwf	tblptru,c
  1862   001B28                     	endif
  1863   001B28  0008               	tblrd		*
  1864   001B2A  50F5               	movf	tablat,w,c
  1865   001B2C  0900               	iorlw	0
  1866   001B2E  A4D8               	btfss	status,2,c
  1867   001B30  EF9C  F00D         	goto	u1991
  1868   001B34  EF9E  F00D         	goto	u1990
  1869   001B38                     u1991:
  1870   001B38  EF86  F00D         	goto	l3077
  1871   001B3C                     u1990:
  1872   001B3C                     
  1873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1874   001B3C  0E00               	movlw	0
  1875   001B3E  6E2E               	movwf	(?_vfprintf+1)^0,c
  1876   001B40  0E00               	movlw	0
  1877   001B42  6E2D               	movwf	?_vfprintf^0,c
  1878   001B44  0012               	return		;funcret
  1879   001B46                     __end_of_vfprintf:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _vfpfcnvrt *****************
  1883 ;; Defined at:
  1884 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  1887 ;;		 -> sprintf@f(12), 
  1888 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  1889 ;;		 -> vfprintf@cfmt(1), 
  1890 ;;  ap              1   35[COMRAM] PTR PTR void 
  1891 ;;		 -> sprintf@ap(1), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  convarg         4   38[COMRAM] struct .
  1894 ;;  cp              1   43[COMRAM] PTR unsigned char 
  1895 ;;		 -> STR_8(16), STR_7(14), STR_6(13), STR_5(12), 
  1896 ;;		 -> STR_4(21), STR_3(17), STR_2(18), STR_1(16), 
  1897 ;;  done            1   42[COMRAM] _Bool 
  1898 ;;  c               1    0        unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1908 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1909 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1912 ;;Total ram usage:       11 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 5
  1915 ;; This function calls:
  1916 ;;		_dtoa
  1917 ;;		_fputc
  1918 ;;		_read_prec_or_width
  1919 ;; This function is called by:
  1920 ;;		_vfprintf
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text8
  1925   001010                     __ptext8:
  1926                           	callstack 0
  1927   001010                     _vfpfcnvrt:
  1928                           	callstack 22
  1929   001010                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1931   001010  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1932   001012  6ED9               	movwf	fsr2l,c
  1933   001014  6ADA               	clrf	fsr2h,c
  1934   001016  CFDF FFF6          	movff	indf2,tblptrl
  1935   00101A                     	if	1	;There is more than 1 active tblptr byte
  1936   00101A  0E0E               	movlw	high __smallconst
  1937   00101C  6EF7               	movwf	tblptrh,c
  1938   00101E                     	endif
  1939   00101E                     	if	0	;tblptru may be non-zero
  1940   00101E                     	endif
  1941   00101E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1942   00101E  0E00               	movlw	low (__smallconst shr (0+16))
  1943   001020  6EF8               	movwf	tblptru,c
  1944   001022                     	endif
  1945   001022  0008               	tblrd		*
  1946   001024  50F5               	movf	tablat,w,c
  1947   001026  0A25               	xorlw	37
  1948   001028  A4D8               	btfss	status,2,c
  1949   00102A  EF19  F008         	goto	u1941
  1950   00102E  EF1B  F008         	goto	u1940
  1951   001032                     u1941:
  1952   001032  EFB7  F008         	goto	l3061
  1953   001036                     u1940:
  1954   001036                     
  1955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1956   001036  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1957   001038  6ED9               	movwf	fsr2l,c
  1958   00103A  6ADA               	clrf	fsr2h,c
  1959   00103C  2ADF               	incf	indf2,f,c
  1960   00103E                     
  1961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1962   00103E  0E00               	movlw	0
  1963   001040  0101               	movlb	1	; () banked
  1964   001042  6FFB               	movwf	(_width+1)& (0+255),b
  1965   001044  0E00               	movlw	0
  1966   001046  6FFA               	movwf	_width& (0+255),b
  1967   001048  C1FA  F05A         	movff	_width,_flags
  1968   00104C                     
  1969                           ; BSR set to: 1
  1970                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1971   00104C  69FC               	setf	_prec& (0+255),b
  1972   00104E  69FD               	setf	(_prec+1)& (0+255),b
  1973   001050                     
  1974                           ; BSR set to: 1
  1975                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1976   001050  0E00               	movlw	0
  1977   001052  6E2B               	movwf	vfpfcnvrt@done^0,c
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1980   001054  EF52  F008         	goto	l3035
  1981   001058                     l3025:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1984   001058  825A               	bsf	_flags^0,1,c
  1985   00105A                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1987   00105A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  1988   00105C  6ED9               	movwf	fsr2l,c
  1989   00105E  6ADA               	clrf	fsr2h,c
  1990   001060  2ADF               	incf	indf2,f,c
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1993   001062  EF52  F008         	goto	l3035
  1994   001066                     l3029:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1997   001066  0E01               	movlw	1
  1998   001068  6E2B               	movwf	vfpfcnvrt@done^0,c
  1999                           
  2000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2001   00106A  EF52  F008         	goto	l3035
  2002   00106E                     l3033:
  2003   00106E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2004   001070  6ED9               	movwf	fsr2l,c
  2005   001072  6ADA               	clrf	fsr2h,c
  2006   001074  CFDF FFF6          	movff	indf2,tblptrl
  2007   001078                     	if	1	;There is more than 1 active tblptr byte
  2008   001078  0E0E               	movlw	high __smallconst
  2009   00107A  6EF7               	movwf	tblptrh,c
  2010   00107C                     	endif
  2011   00107C                     	if	0	;tblptru may be non-zero
  2012   00107C                     	endif
  2013   00107C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2014   00107C  0E00               	movlw	low (__smallconst shr (0+16))
  2015   00107E  6EF8               	movwf	tblptru,c
  2016   001080                     	endif
  2017   001080  0008               	tblrd		*
  2018   001082  50F5               	movf	tablat,w,c
  2019   001084  6E25               	movwf	??_vfpfcnvrt^0,c
  2020   001086  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  2021                           
  2022                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2023                           ; Switch size 1, requested type "simple"
  2024                           ; Number of cases is 1, Range of values is 0 to 0
  2025                           ; switch strategies available:
  2026                           ; Name         Instructions Cycles
  2027                           ; simple_byte            4     3 (average)
  2028                           ;	Chosen strategy is simple_byte
  2029   001088  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  2030   00108A  0A00               	xorlw	0	; case 0
  2031   00108C  B4D8               	btfsc	status,2,c
  2032   00108E  EF4B  F008         	goto	l3587
  2033   001092  EF33  F008         	goto	l3029
  2034   001096                     l3587:
  2035                           
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 1, Range of values is 48 to 48
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            4     3 (average)
  2041                           ;	Chosen strategy is simple_byte
  2042   001096  5025               	movf	??_vfpfcnvrt^0,w,c
  2043   001098  0A30               	xorlw	48	; case 48
  2044   00109A  B4D8               	btfsc	status,2,c
  2045   00109C  EF2C  F008         	goto	l3025
  2046   0010A0  EF33  F008         	goto	l3029
  2047   0010A4                     l3035:
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2050   0010A4  502B               	movf	vfpfcnvrt@done^0,w,c
  2051   0010A6  B4D8               	btfsc	status,2,c
  2052   0010A8  EF58  F008         	goto	u1951
  2053   0010AC  EF5A  F008         	goto	u1950
  2054   0010B0                     u1951:
  2055   0010B0  EF37  F008         	goto	l3033
  2056   0010B4                     u1950:
  2057   0010B4                     
  2058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2059   0010B4  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2060   0010B8  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2061   0010BC  EC6D  F00B         	call	_read_prec_or_width	;wreg free
  2062   0010C0  C007  F1FA         	movff	?_read_prec_or_width,_width
  2063   0010C4  C008  F1FB         	movff	?_read_prec_or_width+1,_width+1
  2064   0010C8                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2066   0010C8  0101               	movlb	1	; () banked
  2067   0010CA  BFFB               	btfsc	(_width+1)& (0+255),7,b
  2068   0010CC  EF6C  F008         	goto	u1960
  2069   0010D0  EF6A  F008         	goto	u1961
  2070   0010D4                     u1961:
  2071   0010D4  EF71  F008         	goto	l3043
  2072   0010D8                     u1960:
  2073   0010D8                     
  2074                           ; BSR set to: 1
  2075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2076   0010D8  805A               	bsf	_flags^0,0,c
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2079   0010DA  6DFA               	negf	_width& (0+255),b
  2080   0010DC  1FFB               	comf	(_width+1)& (0+255),f,b
  2081   0010DE  B0D8               	btfsc	status,0,c
  2082   0010E0  2BFB               	incf	(_width+1)& (0+255),f,b
  2083   0010E2                     l3043:
  2084                           
  2085                           ; BSR set to: 1
  2086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2087   0010E2  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2088   0010E4  6ED9               	movwf	fsr2l,c
  2089   0010E6  6ADA               	clrf	fsr2h,c
  2090   0010E8  50DF               	movf	indf2,w,c
  2091   0010EA  6E2C               	movwf	vfpfcnvrt@cp^0,c
  2092   0010EC                     
  2093                           ; BSR set to: 1
  2094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2095   0010EC  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2096   0010F0                     	if	1	;There is more than 1 active tblptr byte
  2097   0010F0  0E0E               	movlw	high __smallconst
  2098   0010F2  6EF7               	movwf	tblptrh,c
  2099   0010F4                     	endif
  2100   0010F4                     	if	0	;tblptru may be non-zero
  2101   0010F4                     	endif
  2102   0010F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2103   0010F4  0E00               	movlw	low (__smallconst shr (0+16))
  2104   0010F6  6EF8               	movwf	tblptru,c
  2105   0010F8                     	endif
  2106   0010F8  0008               	tblrd		*
  2107   0010FA  50F5               	movf	tablat,w,c
  2108   0010FC  0A64               	xorlw	100
  2109   0010FE  B4D8               	btfsc	status,2,c
  2110   001100  EF84  F008         	goto	u1971
  2111   001104  EF86  F008         	goto	u1970
  2112   001108                     u1971:
  2113   001108  EF96  F008         	goto	l3049
  2114   00110C                     u1970:
  2115   00110C                     
  2116                           ; BSR set to: 1
  2117   00110C  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2118   001110                     	if	1	;There is more than 1 active tblptr byte
  2119   001110  0E0E               	movlw	high __smallconst
  2120   001112  6EF7               	movwf	tblptrh,c
  2121   001114                     	endif
  2122   001114                     	if	0	;tblptru may be non-zero
  2123   001114                     	endif
  2124   001114                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2125   001114  0E00               	movlw	low (__smallconst shr (0+16))
  2126   001116  6EF8               	movwf	tblptru,c
  2127   001118                     	endif
  2128   001118  0008               	tblrd		*
  2129   00111A  50F5               	movf	tablat,w,c
  2130   00111C  0A69               	xorlw	105
  2131   00111E  A4D8               	btfss	status,2,c
  2132   001120  EF94  F008         	goto	u1981
  2133   001124  EF96  F008         	goto	u1980
  2134   001128                     u1981:
  2135   001128  EFB1  F008         	goto	l3057
  2136   00112C                     u1980:
  2137   00112C                     l3049:
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2141   00112C  5024               	movf	vfpfcnvrt@ap^0,w,c
  2142   00112E  6ED9               	movwf	fsr2l,c
  2143   001130  6ADA               	clrf	fsr2h,c
  2144   001132  0E02               	movlw	2
  2145   001134  26DF               	addwf	indf2,f,c
  2146   001136  5CDF               	subwf	indf2,w,c
  2147   001138  6ED9               	movwf	fsr2l,c
  2148   00113A  6ADA               	clrf	fsr2h,c
  2149   00113C  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  2150   001140  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  2151   001144                     
  2152                           ; BSR set to: 1
  2153                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2154   001144  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2155   001146  6ED9               	movwf	fsr2l,c
  2156   001148  6ADA               	clrf	fsr2h,c
  2157   00114A  282C               	incf	vfpfcnvrt@cp^0,w,c
  2158   00114C  6EDF               	movwf	indf2,c
  2159   00114E                     
  2160                           ; BSR set to: 1
  2161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2162   00114E  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2163   001152  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2164   001156  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2165   00115A  ECCB  F008         	call	_dtoa	;wreg free
  2166   00115E  EFCA  F008         	goto	l1161
  2167   001162                     l3057:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2170   001162  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2171   001164  6ED9               	movwf	fsr2l,c
  2172   001166  6ADA               	clrf	fsr2h,c
  2173   001168  2ADF               	incf	indf2,f,c
  2174   00116A  EFCA  F008         	goto	l1161
  2175   00116E                     l3061:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2178   00116E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2179   001170  6ED9               	movwf	fsr2l,c
  2180   001172  6ADA               	clrf	fsr2h,c
  2181   001174  CFDF FFF6          	movff	indf2,tblptrl
  2182   001178                     	if	1	;There is more than 1 active tblptr byte
  2183   001178  0E0E               	movlw	high __smallconst
  2184   00117A  6EF7               	movwf	tblptrh,c
  2185   00117C                     	endif
  2186   00117C                     	if	0	;tblptru may be non-zero
  2187   00117C                     	endif
  2188   00117C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2189   00117C  0E00               	movlw	low (__smallconst shr (0+16))
  2190   00117E  6EF8               	movwf	tblptru,c
  2191   001180                     	endif
  2192   001180  0008               	tblrd		*
  2193   001182  50F5               	movf	tablat,w,c
  2194   001184  6E01               	movwf	fputc@c^0,c
  2195   001186  6A02               	clrf	(fputc@c+1)^0,c
  2196   001188  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2197   00118C  EC5F  F00A         	call	_fputc	;wreg free
  2198   001190  EFB1  F008         	goto	l3057
  2199   001194                     l1161:
  2200   001194  0012               	return		;funcret
  2201   001196                     __end_of_vfpfcnvrt:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _read_prec_or_width *****************
  2205 ;; Defined at:
  2206 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2209 ;;		 -> vfprintf@cfmt(1), 
  2210 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2211 ;;		 -> sprintf@ap(1), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  c               1    8[COMRAM] unsigned char 
  2214 ;;  n               2    9[COMRAM] int 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    6[COMRAM] int 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;Total ram usage:        5 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 1
  2231 ;; This function calls:
  2232 ;;		___wmul
  2233 ;; This function is called by:
  2234 ;;		_vfpfcnvrt
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text9
  2239   0016DA                     __ptext9:
  2240                           	callstack 0
  2241   0016DA                     _read_prec_or_width:
  2242                           	callstack 25
  2243   0016DA                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2245   0016DA  0E00               	movlw	0
  2246   0016DC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2247   0016DE  0E00               	movlw	0
  2248   0016E0  6E0A               	movwf	read_prec_or_width@n^0,c
  2249   0016E2                     
  2250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2251   0016E2  5007               	movf	read_prec_or_width@fmt^0,w,c
  2252   0016E4  6ED9               	movwf	fsr2l,c
  2253   0016E6  6ADA               	clrf	fsr2h,c
  2254   0016E8  CFDF FFF6          	movff	indf2,tblptrl
  2255   0016EC                     	if	1	;There is more than 1 active tblptr byte
  2256   0016EC  0E0E               	movlw	high __smallconst
  2257   0016EE  6EF7               	movwf	tblptrh,c
  2258   0016F0                     	endif
  2259   0016F0                     	if	0	;tblptru may be non-zero
  2260   0016F0                     	endif
  2261   0016F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2262   0016F0  0E00               	movlw	low (__smallconst shr (0+16))
  2263   0016F2  6EF8               	movwf	tblptru,c
  2264   0016F4                     	endif
  2265   0016F4  0008               	tblrd		*
  2266   0016F6  50F5               	movf	tablat,w,c
  2267   0016F8  0A2A               	xorlw	42
  2268   0016FA  A4D8               	btfss	status,2,c
  2269   0016FC  EF82  F00B         	goto	u1921
  2270   001700  EF84  F00B         	goto	u1920
  2271   001704                     u1921:
  2272   001704  EFAA  F00B         	goto	l3013
  2273   001708                     u1920:
  2274   001708                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2276   001708  5007               	movf	read_prec_or_width@fmt^0,w,c
  2277   00170A  6ED9               	movwf	fsr2l,c
  2278   00170C  6ADA               	clrf	fsr2h,c
  2279   00170E  2ADF               	incf	indf2,f,c
  2280   001710                     
  2281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2282   001710  5008               	movf	read_prec_or_width@ap^0,w,c
  2283   001712  6ED9               	movwf	fsr2l,c
  2284   001714  6ADA               	clrf	fsr2h,c
  2285   001716  0E02               	movlw	2
  2286   001718  26DF               	addwf	indf2,f,c
  2287   00171A  5CDF               	subwf	indf2,w,c
  2288   00171C  6ED9               	movwf	fsr2l,c
  2289   00171E  6ADA               	clrf	fsr2h,c
  2290   001720  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2291   001724  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2294   001728  EFBF  F00B         	goto	l1142
  2295   00172C                     l3009:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2298   00172C  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2299   001730  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2300   001734  0E00               	movlw	0
  2301   001736  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2302   001738  0E0A               	movlw	10
  2303   00173A  6E03               	movwf	___wmul@multiplicand^0,c
  2304   00173C  ECB0  F00E         	call	___wmul	;wreg free
  2305   001740  5009               	movf	read_prec_or_width@c^0,w,c
  2306   001742  2401               	addwf	?___wmul^0,w,c
  2307   001744  6E0A               	movwf	read_prec_or_width@n^0,c
  2308   001746  0E00               	movlw	0
  2309   001748  2002               	addwfc	(?___wmul+1)^0,w,c
  2310   00174A  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2311   00174C                     
  2312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2313   00174C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2314   00174E  6ED9               	movwf	fsr2l,c
  2315   001750  6ADA               	clrf	fsr2h,c
  2316   001752  2ADF               	incf	indf2,f,c
  2317   001754                     l3013:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2320   001754  5007               	movf	read_prec_or_width@fmt^0,w,c
  2321   001756  6ED9               	movwf	fsr2l,c
  2322   001758  6ADA               	clrf	fsr2h,c
  2323   00175A  CFDF FFF6          	movff	indf2,tblptrl
  2324   00175E                     	if	1	;There is more than 1 active tblptr byte
  2325   00175E  0E0E               	movlw	high __smallconst
  2326   001760  6EF7               	movwf	tblptrh,c
  2327   001762                     	endif
  2328   001762                     	if	0	;tblptru may be non-zero
  2329   001762                     	endif
  2330   001762                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2331   001762  0E00               	movlw	low (__smallconst shr (0+16))
  2332   001764  6EF8               	movwf	tblptru,c
  2333   001766                     	endif
  2334   001766  0008               	tblrd		*
  2335   001768  50F5               	movf	tablat,w,c
  2336   00176A  0FD0               	addlw	208
  2337   00176C  6E09               	movwf	read_prec_or_width@c^0,c
  2338   00176E  0E09               	movlw	9
  2339   001770  6409               	cpfsgt	read_prec_or_width@c^0,c
  2340   001772  EFBD  F00B         	goto	u1931
  2341   001776  EFBF  F00B         	goto	u1930
  2342   00177A                     u1931:
  2343   00177A  EF96  F00B         	goto	l3009
  2344   00177E                     u1930:
  2345   00177E                     l1142:
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2348   00177E  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2349   001782  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2350   001786  0012               	return		;funcret
  2351   001788                     __end_of_read_prec_or_width:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function ___wmul *****************
  2355 ;; Defined at:
  2356 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  multiplier      2    0[COMRAM] unsigned int 
  2359 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  product         2    4[COMRAM] unsigned int 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  2    0[COMRAM] unsigned int 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, prodl, prodh
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2374 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;Total ram usage:        6 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_ADC2String
  2381 ;;		_read_prec_or_width
  2382 ;;		_setMotorPWM
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text10
  2387   001D60                     __ptext10:
  2388                           	callstack 0
  2389   001D60                     ___wmul:
  2390                           	callstack 25
  2391   001D60  5001               	movf	___wmul@multiplier^0,w,c
  2392   001D62  0203               	mulwf	___wmul@multiplicand^0,c
  2393   001D64  CFF3 F005          	movff	prodl,___wmul@product
  2394   001D68  CFF4 F006          	movff	prodh,___wmul@product+1
  2395   001D6C  5001               	movf	___wmul@multiplier^0,w,c
  2396   001D6E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2397   001D70  50F3               	movf	243,w,c
  2398   001D72  2606               	addwf	(___wmul@product+1)^0,f,c
  2399   001D74  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2400   001D76  0203               	mulwf	___wmul@multiplicand^0,c
  2401   001D78  50F3               	movf	243,w,c
  2402   001D7A  2606               	addwf	(___wmul@product+1)^0,f,c
  2403   001D7C  C005  F001         	movff	___wmul@product,?___wmul
  2404   001D80  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2405   001D84  0012               	return		;funcret
  2406   001D86                     __end_of___wmul:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _dtoa *****************
  2410 ;; Defined at:
  2411 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2414 ;;		 -> sprintf@f(12), 
  2415 ;;  d               2   23[COMRAM] int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  i               2   31[COMRAM] int 
  2418 ;;  w               2   28[COMRAM] int 
  2419 ;;  s               1   30[COMRAM] unsigned char 
  2420 ;;  p               1   27[COMRAM] _Bool 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2430 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2433 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2434 ;;Total ram usage:       11 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 4
  2437 ;; This function calls:
  2438 ;;		___awdiv
  2439 ;;		___awmod
  2440 ;;		_abs
  2441 ;;		_pad
  2442 ;; This function is called by:
  2443 ;;		_vfpfcnvrt
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text11
  2448   001196                     __ptext11:
  2449                           	callstack 0
  2450   001196                     _dtoa:
  2451                           	callstack 22
  2452   001196                     
  2453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2454   001196  0E01               	movlw	1
  2455   001198  6E1C               	movwf	dtoa@p^0,c
  2456   00119A                     
  2457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2458   00119A  BE19               	btfsc	(dtoa@d+1)^0,7,c
  2459   00119C  EFD2  F008         	goto	u1821
  2460   0011A0  EFD5  F008         	goto	u1820
  2461   0011A4                     u1821:
  2462   0011A4  0E01               	movlw	1
  2463   0011A6  EFD6  F008         	goto	u1830
  2464   0011AA                     u1820:
  2465   0011AA  0E00               	movlw	0
  2466   0011AC                     u1830:
  2467   0011AC  6E1F               	movwf	dtoa@s^0,c
  2468   0011AE                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2470   0011AE  C1FA  F01D         	movff	_width,dtoa@w
  2471   0011B2  C1FB  F01E         	movff	_width+1,dtoa@w+1
  2472   0011B6                     
  2473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2474   0011B6  501F               	movf	dtoa@s^0,w,c
  2475   0011B8  B4D8               	btfsc	status,2,c
  2476   0011BA  EFE1  F008         	goto	u1841
  2477   0011BE  EFE3  F008         	goto	u1840
  2478   0011C2                     u1841:
  2479   0011C2  EFFA  F008         	goto	l1125
  2480   0011C6                     u1840:
  2481   0011C6                     
  2482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2483   0011C6  061D               	decf	dtoa@w^0,f,c
  2484   0011C8  A0D8               	btfss	status,0,c
  2485   0011CA  061E               	decf	(dtoa@w+1)^0,f,c
  2486   0011CC                     
  2487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2488   0011CC  501F               	movf	dtoa@s^0,w,c
  2489   0011CE  A4D8               	btfss	status,2,c
  2490   0011D0  EFEC  F008         	goto	u1851
  2491   0011D4  EFEE  F008         	goto	u1850
  2492   0011D8                     u1851:
  2493   0011D8  EFF4  F008         	goto	l2965
  2494   0011DC                     u1850:
  2495   0011DC  0E00               	movlw	0
  2496   0011DE  6E1B               	movwf	(_dtoa$2293+1)^0,c
  2497   0011E0  0E2B               	movlw	43
  2498   0011E2  6E1A               	movwf	_dtoa$2293^0,c
  2499   0011E4  EFF8  F008         	goto	l2967
  2500   0011E8                     l2965:
  2501   0011E8  0E00               	movlw	0
  2502   0011EA  6E1B               	movwf	(_dtoa$2293+1)^0,c
  2503   0011EC  0E2D               	movlw	45
  2504   0011EE  6E1A               	movwf	_dtoa$2293^0,c
  2505   0011F0                     l2967:
  2506   0011F0  C01A  F01F         	movff	_dtoa$2293,dtoa@s
  2507   0011F4                     l1125:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2510   0011F4  0E00               	movlw	0
  2511   0011F6  6E21               	movwf	(dtoa@i+1)^0,c
  2512   0011F8  0E1F               	movlw	31
  2513   0011FA  6E20               	movwf	dtoa@i^0,c
  2514   0011FC                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2516   0011FC  0E00               	movlw	0
  2517   0011FE  0102               	movlb	2	; () banked
  2518   001200  6F83               	movwf	(_dbuf+31)& (0+255),b
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2521   001202  EF32  F009         	goto	l2981
  2522   001206                     l2971:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2525   001206  0620               	decf	dtoa@i^0,f,c
  2526   001208  A0D8               	btfss	status,0,c
  2527   00120A  0621               	decf	(dtoa@i+1)^0,f,c
  2528   00120C                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2530   00120C  0E64               	movlw	low _dbuf
  2531   00120E  2420               	addwf	dtoa@i^0,w,c
  2532   001210  6ED9               	movwf	fsr2l,c
  2533   001212  0E02               	movlw	high _dbuf
  2534   001214  2021               	addwfc	(dtoa@i+1)^0,w,c
  2535   001216  6EDA               	movwf	fsr2h,c
  2536   001218  C018  F001         	movff	dtoa@d,___awmod@dividend
  2537   00121C  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2538   001220  0E00               	movlw	0
  2539   001222  6E04               	movwf	(___awmod@divisor+1)^0,c
  2540   001224  0E0A               	movlw	10
  2541   001226  6E03               	movwf	___awmod@divisor^0,c
  2542   001228  EC15  F00B         	call	___awmod	;wreg free
  2543   00122C  C001  F007         	movff	?___awmod,abs@a
  2544   001230  C002  F008         	movff	?___awmod+1,abs@a+1
  2545   001234  EC3B  F00E         	call	_abs	;wreg free
  2546   001238  5007               	movf	?_abs^0,w,c
  2547   00123A  0F30               	addlw	48
  2548   00123C  6EDF               	movwf	indf2,c
  2549   00123E                     
  2550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2551   00123E  0E00               	movlw	0
  2552   001240  6E1C               	movwf	dtoa@p^0,c
  2553   001242                     
  2554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2555   001242  061D               	decf	dtoa@w^0,f,c
  2556   001244  A0D8               	btfss	status,0,c
  2557   001246  061E               	decf	(dtoa@w+1)^0,f,c
  2558   001248                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2560   001248  C018  F001         	movff	dtoa@d,___awdiv@dividend
  2561   00124C  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2562   001250  0E00               	movlw	0
  2563   001252  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2564   001254  0E0A               	movlw	10
  2565   001256  6E03               	movwf	___awdiv@divisor^0,c
  2566   001258  ECFD  F009         	call	___awdiv	;wreg free
  2567   00125C  C001  F018         	movff	?___awdiv,dtoa@d
  2568   001260  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  2569   001264                     l2981:
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2572   001264  BE21               	btfsc	(dtoa@i+1)^0,7,c
  2573   001266  EF3D  F009         	goto	u1861
  2574   00126A  5021               	movf	(dtoa@i+1)^0,w,c
  2575   00126C  E108               	bnz	u1860
  2576   00126E  0420               	decf	dtoa@i^0,w,c
  2577   001270  A0D8               	btfss	status,0,c
  2578   001272  EF3D  F009         	goto	u1861
  2579   001276  EF3F  F009         	goto	u1860
  2580   00127A                     u1861:
  2581   00127A  EF64  F009         	goto	l2991
  2582   00127E                     u1860:
  2583   00127E  5018               	movf	dtoa@d^0,w,c
  2584   001280  1019               	iorwf	(dtoa@d+1)^0,w,c
  2585   001282  A4D8               	btfss	status,2,c
  2586   001284  EF46  F009         	goto	u1871
  2587   001288  EF48  F009         	goto	u1870
  2588   00128C                     u1871:
  2589   00128C  EF03  F009         	goto	l2971
  2590   001290                     u1870:
  2591   001290  501C               	movf	dtoa@p^0,w,c
  2592   001292  A4D8               	btfss	status,2,c
  2593   001294  EF4E  F009         	goto	u1881
  2594   001298  EF50  F009         	goto	u1880
  2595   00129C                     u1881:
  2596   00129C  EF03  F009         	goto	l2971
  2597   0012A0                     u1880:
  2598   0012A0  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  2599   0012A2  EF5B  F009         	goto	u1891
  2600   0012A6  501E               	movf	(dtoa@w+1)^0,w,c
  2601   0012A8  E108               	bnz	u1890
  2602   0012AA  041D               	decf	dtoa@w^0,w,c
  2603   0012AC  A0D8               	btfss	status,0,c
  2604   0012AE  EF5B  F009         	goto	u1891
  2605   0012B2  EF5D  F009         	goto	u1890
  2606   0012B6                     u1891:
  2607   0012B6  EF64  F009         	goto	l2991
  2608   0012BA                     u1890:
  2609   0012BA  B25A               	btfsc	_flags^0,1,c
  2610   0012BC  EF62  F009         	goto	u1901
  2611   0012C0  EF64  F009         	goto	u1900
  2612   0012C4                     u1901:
  2613   0012C4  EF03  F009         	goto	l2971
  2614   0012C8                     u1900:
  2615   0012C8                     l2991:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2618   0012C8  501F               	movf	dtoa@s^0,w,c
  2619   0012CA  B4D8               	btfsc	status,2,c
  2620   0012CC  EF6A  F009         	goto	u1911
  2621   0012D0  EF6C  F009         	goto	u1910
  2622   0012D4                     u1911:
  2623   0012D4  EF77  F009         	goto	l2997
  2624   0012D8                     u1910:
  2625   0012D8                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2627   0012D8  0620               	decf	dtoa@i^0,f,c
  2628   0012DA  A0D8               	btfss	status,0,c
  2629   0012DC  0621               	decf	(dtoa@i+1)^0,f,c
  2630   0012DE                     
  2631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2632   0012DE  0E64               	movlw	low _dbuf
  2633   0012E0  2420               	addwf	dtoa@i^0,w,c
  2634   0012E2  6ED9               	movwf	fsr2l,c
  2635   0012E4  0E02               	movlw	high _dbuf
  2636   0012E6  2021               	addwfc	(dtoa@i+1)^0,w,c
  2637   0012E8  6EDA               	movwf	fsr2h,c
  2638   0012EA  C01F  FFDF         	movff	dtoa@s,indf2
  2639   0012EE                     l2997:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2642   0012EE  C017  F00F         	movff	dtoa@fp,pad@fp
  2643   0012F2  0E64               	movlw	low _dbuf
  2644   0012F4  2420               	addwf	dtoa@i^0,w,c
  2645   0012F6  6E10               	movwf	pad@buf^0,c
  2646   0012F8  0E02               	movlw	high _dbuf
  2647   0012FA  2021               	addwfc	(dtoa@i+1)^0,w,c
  2648   0012FC  6E11               	movwf	(pad@buf+1)^0,c
  2649   0012FE  C01D  F012         	movff	dtoa@w,pad@p
  2650   001302  C01E  F013         	movff	dtoa@w+1,pad@p+1
  2651   001306  EC17  F00C         	call	_pad	;wreg free
  2652   00130A  0012               	return		;funcret
  2653   00130C                     __end_of_dtoa:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _pad *****************
  2657 ;; Defined at:
  2658 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  2661 ;;		 -> sprintf@f(12), 
  2662 ;;  buf             2   15[COMRAM] PTR unsigned char 
  2663 ;;		 -> dbuf(32), 
  2664 ;;  p               2   17[COMRAM] int 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  i               2   20[COMRAM] int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2676 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;Total ram usage:        8 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 3
  2683 ;; This function calls:
  2684 ;;		_fputc
  2685 ;;		_fputs
  2686 ;; This function is called by:
  2687 ;;		_dtoa
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text12
  2692   00182E                     __ptext12:
  2693                           	callstack 0
  2694   00182E                     _pad:
  2695                           	callstack 22
  2696   00182E                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2698   00182E  A05A               	btfss	_flags^0,0,c
  2699   001830  EF1C  F00C         	goto	u1771
  2700   001834  EF1E  F00C         	goto	u1770
  2701   001838                     u1771:
  2702   001838  EF26  F00C         	goto	l2935
  2703   00183C                     u1770:
  2704   00183C                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2706   00183C  C010  F009         	movff	pad@buf,fputs@s
  2707   001840  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2708   001844  C00F  F00B         	movff	pad@fp,fputs@fp
  2709   001848  ECC4  F00D         	call	_fputs	;wreg free
  2710   00184C                     l2935:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2713   00184C  BE13               	btfsc	(pad@p+1)^0,7,c
  2714   00184E  EF2D  F00C         	goto	u1780
  2715   001852  EF2B  F00C         	goto	u1781
  2716   001856                     u1781:
  2717   001856  EF31  F00C         	goto	l1117
  2718   00185A                     u1780:
  2719   00185A                     
  2720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2721   00185A  0E00               	movlw	0
  2722   00185C  6E13               	movwf	(pad@p+1)^0,c
  2723   00185E  0E00               	movlw	0
  2724   001860  6E12               	movwf	pad@p^0,c
  2725   001862                     l1117:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2728   001862  0E00               	movlw	0
  2729   001864  6E16               	movwf	(pad@i+1)^0,c
  2730   001866  0E00               	movlw	0
  2731   001868  6E15               	movwf	pad@i^0,c
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2734   00186A  EF41  F00C         	goto	l2943
  2735   00186E                     l2939:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2738   00186E  0E00               	movlw	0
  2739   001870  6E02               	movwf	(fputc@c+1)^0,c
  2740   001872  0E20               	movlw	32
  2741   001874  6E01               	movwf	fputc@c^0,c
  2742   001876  C00F  F003         	movff	pad@fp,fputc@fp
  2743   00187A  EC5F  F00A         	call	_fputc	;wreg free
  2744   00187E                     
  2745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2746   00187E  4A15               	infsnz	pad@i^0,f,c
  2747   001880  2A16               	incf	(pad@i+1)^0,f,c
  2748   001882                     l2943:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2751   001882  5012               	movf	pad@p^0,w,c
  2752   001884  5C15               	subwf	pad@i^0,w,c
  2753   001886  5016               	movf	(pad@i+1)^0,w,c
  2754   001888  0A80               	xorlw	128
  2755   00188A  6E14               	movwf	??_pad^0,c
  2756   00188C  5013               	movf	(pad@p+1)^0,w,c
  2757   00188E  0A80               	xorlw	128
  2758   001890  5814               	subwfb	??_pad^0,w,c
  2759   001892  A0D8               	btfss	status,0,c
  2760   001894  EF4E  F00C         	goto	u1791
  2761   001898  EF50  F00C         	goto	u1790
  2762   00189C                     u1791:
  2763   00189C  EF37  F00C         	goto	l2939
  2764   0018A0                     u1790:
  2765   0018A0                     
  2766                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2767   0018A0  B05A               	btfsc	_flags^0,0,c
  2768   0018A2  EF55  F00C         	goto	u1801
  2769   0018A6  EF57  F00C         	goto	u1800
  2770   0018AA                     u1801:
  2771   0018AA  EF5F  F00C         	goto	l1122
  2772   0018AE                     u1800:
  2773   0018AE                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2775   0018AE  C010  F009         	movff	pad@buf,fputs@s
  2776   0018B2  C011  F00A         	movff	pad@buf+1,fputs@s+1
  2777   0018B6  C00F  F00B         	movff	pad@fp,fputs@fp
  2778   0018BA  ECC4  F00D         	call	_fputs	;wreg free
  2779   0018BE                     l1122:
  2780   0018BE  0012               	return		;funcret
  2781   0018C0                     __end_of_pad:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _fputs *****************
  2785 ;; Defined at:
  2786 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  s               2    8[COMRAM] PTR const unsigned char 
  2789 ;;		 -> dbuf(32), 
  2790 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  2791 ;;		 -> sprintf@f(12), 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  i               2   12[COMRAM] int 
  2794 ;;  c               1   11[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  2    8[COMRAM] int 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2804 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2808 ;;Total ram usage:        6 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 2
  2811 ;; This function calls:
  2812 ;;		_fputc
  2813 ;; This function is called by:
  2814 ;;		_pad
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text13
  2819   001B88                     __ptext13:
  2820                           	callstack 0
  2821   001B88                     _fputs:
  2822                           	callstack 22
  2823   001B88  0E00               	movlw	0
  2824   001B8A  6E0E               	movwf	(fputs@i+1)^0,c
  2825   001B8C  0E00               	movlw	0
  2826   001B8E  6E0D               	movwf	fputs@i^0,c
  2827   001B90  EFD3  F00D         	goto	l2843
  2828   001B94                     l2839:
  2829   001B94  C00C  F001         	movff	fputs@c,fputc@c
  2830   001B98  6A02               	clrf	(fputc@c+1)^0,c
  2831   001B9A  C00B  F003         	movff	fputs@fp,fputc@fp
  2832   001B9E  EC5F  F00A         	call	_fputc	;wreg free
  2833   001BA2  4A0D               	infsnz	fputs@i^0,f,c
  2834   001BA4  2A0E               	incf	(fputs@i+1)^0,f,c
  2835   001BA6                     l2843:
  2836   001BA6  500D               	movf	fputs@i^0,w,c
  2837   001BA8  2409               	addwf	fputs@s^0,w,c
  2838   001BAA  6ED9               	movwf	fsr2l,c
  2839   001BAC  500E               	movf	(fputs@i+1)^0,w,c
  2840   001BAE  200A               	addwfc	(fputs@s+1)^0,w,c
  2841   001BB0  6EDA               	movwf	fsr2h,c
  2842   001BB2  50DF               	movf	indf2,w,c
  2843   001BB4  6E0C               	movwf	fputs@c^0,c
  2844   001BB6  500C               	movf	fputs@c^0,w,c
  2845   001BB8  A4D8               	btfss	status,2,c
  2846   001BBA  EFE1  F00D         	goto	u1641
  2847   001BBE  EFE3  F00D         	goto	u1640
  2848   001BC2                     u1641:
  2849   001BC2  EFCA  F00D         	goto	l2839
  2850   001BC6                     u1640:
  2851   001BC6  0012               	return		;funcret
  2852   001BC8                     __end_of_fputs:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _fputc *****************
  2856 ;; Defined at:
  2857 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  c               2    0[COMRAM] int 
  2860 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2861 ;;		 -> sprintf@f(12), 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  2    0[COMRAM] int 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2873 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2875 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;Total ram usage:        8 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 1
  2880 ;; This function calls:
  2881 ;;		_putch
  2882 ;; This function is called by:
  2883 ;;		_pad
  2884 ;;		_vfpfcnvrt
  2885 ;;		_fputs
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text14
  2890   0014BE                     __ptext14:
  2891                           	callstack 0
  2892   0014BE                     _fputc:
  2893                           	callstack 25
  2894   0014BE  5003               	movf	fputc@fp^0,w,c
  2895   0014C0  B4D8               	btfsc	status,2,c
  2896   0014C2  EF65  F00A         	goto	u1601
  2897   0014C6  EF67  F00A         	goto	u1600
  2898   0014CA                     u1601:
  2899   0014CA  EF6F  F00A         	goto	l2827
  2900   0014CE                     u1600:
  2901   0014CE  5003               	movf	fputc@fp^0,w,c
  2902   0014D0  A4D8               	btfss	status,2,c
  2903   0014D2  EF6D  F00A         	goto	u1611
  2904   0014D6  EF6F  F00A         	goto	u1610
  2905   0014DA                     u1611:
  2906   0014DA  EF74  F00A         	goto	l2829
  2907   0014DE                     u1610:
  2908   0014DE                     l2827:
  2909   0014DE  5001               	movf	fputc@c^0,w,c
  2910   0014E0  EC10  F00F         	call	_putch
  2911   0014E4  EFBB  F00A         	goto	l1186
  2912   0014E8                     l2829:
  2913   0014E8  5003               	movf	fputc@fp^0,w,c
  2914   0014EA  6ED9               	movwf	fsr2l,c
  2915   0014EC  6ADA               	clrf	fsr2h,c
  2916   0014EE  0E0A               	movlw	10
  2917   0014F0  26D9               	addwf	fsr2l,f,c
  2918   0014F2  50DE               	movf	postinc2,w,c
  2919   0014F4  10DE               	iorwf	postinc2,w,c
  2920   0014F6  B4D8               	btfsc	status,2,c
  2921   0014F8  EF80  F00A         	goto	u1621
  2922   0014FC  EF82  F00A         	goto	u1620
  2923   001500                     u1621:
  2924   001500  EF9B  F00A         	goto	l2833
  2925   001504                     u1620:
  2926   001504  5003               	movf	fputc@fp^0,w,c
  2927   001506  6ED9               	movwf	fsr2l,c
  2928   001508  6ADA               	clrf	fsr2h,c
  2929   00150A  0E0A               	movlw	10
  2930   00150C  26D9               	addwf	fsr2l,f,c
  2931   00150E  5003               	movf	fputc@fp^0,w,c
  2932   001510  6EE1               	movwf	fsr1l,c
  2933   001512  6AE2               	clrf	fsr1h,c
  2934   001514  0E03               	movlw	3
  2935   001516  26E1               	addwf	fsr1l,f,c
  2936   001518  50DE               	movf	postinc2,w,c
  2937   00151A  5CE6               	subwf	postinc1,w,c
  2938   00151C  50E6               	movf	postinc1,w,c
  2939   00151E  0A80               	xorlw	128
  2940   001520  6E08               	movwf	(??_fputc+4)^0,c
  2941   001522  50DE               	movf	postinc2,w,c
  2942   001524  0A80               	xorlw	128
  2943   001526  5808               	subwfb	(??_fputc+4)^0,w,c
  2944   001528  B0D8               	btfsc	status,0,c
  2945   00152A  EF99  F00A         	goto	u1631
  2946   00152E  EF9B  F00A         	goto	u1630
  2947   001532                     u1631:
  2948   001532  EFBB  F00A         	goto	l1186
  2949   001536                     u1630:
  2950   001536                     l2833:
  2951   001536  5003               	movf	fputc@fp^0,w,c
  2952   001538  6ED9               	movwf	fsr2l,c
  2953   00153A  6ADA               	clrf	fsr2h,c
  2954   00153C  0E03               	movlw	3
  2955   00153E  26D9               	addwf	fsr2l,f,c
  2956   001540  CFDE F004          	movff	postinc2,??_fputc
  2957   001544  CFDD F005          	movff	postdec2,??_fputc+1
  2958   001548  5003               	movf	fputc@fp^0,w,c
  2959   00154A  6ED9               	movwf	fsr2l,c
  2960   00154C  6ADA               	clrf	fsr2h,c
  2961   00154E  CFDE F006          	movff	postinc2,??_fputc+2
  2962   001552  CFDD F007          	movff	postdec2,??_fputc+3
  2963   001556  5004               	movf	??_fputc^0,w,c
  2964   001558  2406               	addwf	(??_fputc+2)^0,w,c
  2965   00155A  6ED9               	movwf	fsr2l,c
  2966   00155C  5005               	movf	(??_fputc+1)^0,w,c
  2967   00155E  2007               	addwfc	(??_fputc+3)^0,w,c
  2968   001560  6EDA               	movwf	fsr2h,c
  2969   001562  C001  FFDF         	movff	fputc@c,indf2
  2970   001566  5003               	movf	fputc@fp^0,w,c
  2971   001568  6ED9               	movwf	fsr2l,c
  2972   00156A  6ADA               	clrf	fsr2h,c
  2973   00156C  0E03               	movlw	3
  2974   00156E  26D9               	addwf	fsr2l,f,c
  2975   001570  2ADE               	incf	postinc2,f,c
  2976   001572  0E00               	movlw	0
  2977   001574  22DD               	addwfc	postdec2,f,c
  2978   001576                     l1186:
  2979   001576  0012               	return		;funcret
  2980   001578                     __end_of_fputc:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _putch *****************
  2984 ;; Defined at:
  2985 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  c               1    wreg     unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  c               1    0[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;Total ram usage:        0 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_fputc
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text15
  3013   001E20                     __ptext15:
  3014                           	callstack 0
  3015   001E20                     _putch:
  3016                           	callstack 25
  3017   001E20  0012               	return		;funcret
  3018   001E22                     __end_of_putch:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _abs *****************
  3022 ;; Defined at:
  3023 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  a               2    6[COMRAM] int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2    6[COMRAM] int 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;Total ram usage:        4 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_dtoa
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text16
  3051   001C76                     __ptext16:
  3052                           	callstack 0
  3053   001C76                     _abs:
  3054                           	callstack 25
  3055   001C76  BE08               	btfsc	(abs@a+1)^0,7,c
  3056   001C78  EF40  F00E         	goto	u1811
  3057   001C7C  EF42  F00E         	goto	u1810
  3058   001C80                     u1811:
  3059   001C80  EF48  F00E         	goto	l1171
  3060   001C84                     u1810:
  3061   001C84  C007  F007         	movff	abs@a,?_abs
  3062   001C88  C008  F008         	movff	abs@a+1,?_abs+1
  3063   001C8C  EF54  F00E         	goto	l1174
  3064   001C90                     l1171:
  3065   001C90  C007  F009         	movff	abs@a,??_abs
  3066   001C94  C008  F00A         	movff	abs@a+1,??_abs+1
  3067   001C98  1E09               	comf	??_abs^0,f,c
  3068   001C9A  1E0A               	comf	(??_abs+1)^0,f,c
  3069   001C9C  4A09               	infsnz	??_abs^0,f,c
  3070   001C9E  2A0A               	incf	(??_abs+1)^0,f,c
  3071   001CA0  C009  F007         	movff	??_abs,?_abs
  3072   001CA4  C00A  F008         	movff	??_abs+1,?_abs+1
  3073   001CA8                     l1174:
  3074   001CA8  0012               	return		;funcret
  3075   001CAA                     __end_of_abs:
  3076                           	callstack 0
  3077                           
  3078 ;; *************** function ___awmod *****************
  3079 ;; Defined at:
  3080 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  dividend        2    0[COMRAM] int 
  3083 ;;  divisor         2    2[COMRAM] int 
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;  sign            1    5[COMRAM] unsigned char 
  3086 ;;  counter         1    4[COMRAM] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2    0[COMRAM] int 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3100 ;;Total ram usage:        6 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		_dtoa
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text17
  3110   00162A                     __ptext17:
  3111                           	callstack 0
  3112   00162A                     ___awmod:
  3113                           	callstack 25
  3114   00162A  0E00               	movlw	0
  3115   00162C  6E06               	movwf	___awmod@sign^0,c
  3116   00162E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3117   001630  EF1E  F00B         	goto	u1710
  3118   001634  EF1C  F00B         	goto	u1711
  3119   001638                     u1711:
  3120   001638  EF24  F00B         	goto	l2903
  3121   00163C                     u1710:
  3122   00163C  6C01               	negf	___awmod@dividend^0,c
  3123   00163E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3124   001640  B0D8               	btfsc	status,0,c
  3125   001642  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3126   001644  0E01               	movlw	1
  3127   001646  6E06               	movwf	___awmod@sign^0,c
  3128   001648                     l2903:
  3129   001648  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3130   00164A  EF2B  F00B         	goto	u1720
  3131   00164E  EF29  F00B         	goto	u1721
  3132   001652                     u1721:
  3133   001652  EF2F  F00B         	goto	l2907
  3134   001656                     u1720:
  3135   001656  6C03               	negf	___awmod@divisor^0,c
  3136   001658  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3137   00165A  B0D8               	btfsc	status,0,c
  3138   00165C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3139   00165E                     l2907:
  3140   00165E  5003               	movf	___awmod@divisor^0,w,c
  3141   001660  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3142   001662  B4D8               	btfsc	status,2,c
  3143   001664  EF36  F00B         	goto	u1731
  3144   001668  EF38  F00B         	goto	u1730
  3145   00166C                     u1731:
  3146   00166C  EF5C  F00B         	goto	l2923
  3147   001670                     u1730:
  3148   001670  0E01               	movlw	1
  3149   001672  6E05               	movwf	___awmod@counter^0,c
  3150   001674  EF40  F00B         	goto	l2913
  3151   001678                     l2911:
  3152   001678  90D8               	bcf	status,0,c
  3153   00167A  3603               	rlcf	___awmod@divisor^0,f,c
  3154   00167C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3155   00167E  2A05               	incf	___awmod@counter^0,f,c
  3156   001680                     l2913:
  3157   001680  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3158   001682  EF45  F00B         	goto	u1741
  3159   001686  EF47  F00B         	goto	u1740
  3160   00168A                     u1741:
  3161   00168A  EF3C  F00B         	goto	l2911
  3162   00168E                     u1740:
  3163   00168E                     l2915:
  3164   00168E  5003               	movf	___awmod@divisor^0,w,c
  3165   001690  5C01               	subwf	___awmod@dividend^0,w,c
  3166   001692  5004               	movf	(___awmod@divisor+1)^0,w,c
  3167   001694  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3168   001696  A0D8               	btfss	status,0,c
  3169   001698  EF50  F00B         	goto	u1751
  3170   00169C  EF52  F00B         	goto	u1750
  3171   0016A0                     u1751:
  3172   0016A0  EF56  F00B         	goto	l2919
  3173   0016A4                     u1750:
  3174   0016A4  5003               	movf	___awmod@divisor^0,w,c
  3175   0016A6  5E01               	subwf	___awmod@dividend^0,f,c
  3176   0016A8  5004               	movf	(___awmod@divisor+1)^0,w,c
  3177   0016AA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3178   0016AC                     l2919:
  3179   0016AC  90D8               	bcf	status,0,c
  3180   0016AE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3181   0016B0  3203               	rrcf	___awmod@divisor^0,f,c
  3182   0016B2  2E05               	decfsz	___awmod@counter^0,f,c
  3183   0016B4  EF47  F00B         	goto	l2915
  3184   0016B8                     l2923:
  3185   0016B8  5006               	movf	___awmod@sign^0,w,c
  3186   0016BA  B4D8               	btfsc	status,2,c
  3187   0016BC  EF62  F00B         	goto	u1761
  3188   0016C0  EF64  F00B         	goto	u1760
  3189   0016C4                     u1761:
  3190   0016C4  EF68  F00B         	goto	l2927
  3191   0016C8                     u1760:
  3192   0016C8  6C01               	negf	___awmod@dividend^0,c
  3193   0016CA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3194   0016CC  B0D8               	btfsc	status,0,c
  3195   0016CE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3196   0016D0                     l2927:
  3197   0016D0  C001  F001         	movff	___awmod@dividend,?___awmod
  3198   0016D4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3199   0016D8  0012               	return		;funcret
  3200   0016DA                     __end_of___awmod:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function ___awdiv *****************
  3204 ;; Defined at:
  3205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  dividend        2    0[COMRAM] int 
  3208 ;;  divisor         2    2[COMRAM] int 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  quotient        2    6[COMRAM] int 
  3211 ;;  sign            1    5[COMRAM] unsigned char 
  3212 ;;  counter         1    4[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    0[COMRAM] int 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:        8 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_dtoa
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235                           	psect	text18
  3236   0013FA                     __ptext18:
  3237                           	callstack 0
  3238   0013FA                     ___awdiv:
  3239                           	callstack 25
  3240   0013FA  0E00               	movlw	0
  3241   0013FC  6E06               	movwf	___awdiv@sign^0,c
  3242   0013FE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3243   001400  EF06  F00A         	goto	u1650
  3244   001404  EF04  F00A         	goto	u1651
  3245   001408                     u1651:
  3246   001408  EF0C  F00A         	goto	l2859
  3247   00140C                     u1650:
  3248   00140C  6C03               	negf	___awdiv@divisor^0,c
  3249   00140E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3250   001410  B0D8               	btfsc	status,0,c
  3251   001412  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3252   001414  0E01               	movlw	1
  3253   001416  6E06               	movwf	___awdiv@sign^0,c
  3254   001418                     l2859:
  3255   001418  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3256   00141A  EF13  F00A         	goto	u1660
  3257   00141E  EF11  F00A         	goto	u1661
  3258   001422                     u1661:
  3259   001422  EF19  F00A         	goto	l2865
  3260   001426                     u1660:
  3261   001426  6C01               	negf	___awdiv@dividend^0,c
  3262   001428  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3263   00142A  B0D8               	btfsc	status,0,c
  3264   00142C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3265   00142E  0E01               	movlw	1
  3266   001430  1A06               	xorwf	___awdiv@sign^0,f,c
  3267   001432                     l2865:
  3268   001432  0E00               	movlw	0
  3269   001434  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3270   001436  0E00               	movlw	0
  3271   001438  6E07               	movwf	___awdiv@quotient^0,c
  3272   00143A  5003               	movf	___awdiv@divisor^0,w,c
  3273   00143C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3274   00143E  B4D8               	btfsc	status,2,c
  3275   001440  EF24  F00A         	goto	u1671
  3276   001444  EF26  F00A         	goto	u1670
  3277   001448                     u1671:
  3278   001448  EF4E  F00A         	goto	l2887
  3279   00144C                     u1670:
  3280   00144C  0E01               	movlw	1
  3281   00144E  6E05               	movwf	___awdiv@counter^0,c
  3282   001450  EF2E  F00A         	goto	l2873
  3283   001454                     l2871:
  3284   001454  90D8               	bcf	status,0,c
  3285   001456  3603               	rlcf	___awdiv@divisor^0,f,c
  3286   001458  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3287   00145A  2A05               	incf	___awdiv@counter^0,f,c
  3288   00145C                     l2873:
  3289   00145C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3290   00145E  EF33  F00A         	goto	u1681
  3291   001462  EF35  F00A         	goto	u1680
  3292   001466                     u1681:
  3293   001466  EF2A  F00A         	goto	l2871
  3294   00146A                     u1680:
  3295   00146A                     l2875:
  3296   00146A  90D8               	bcf	status,0,c
  3297   00146C  3607               	rlcf	___awdiv@quotient^0,f,c
  3298   00146E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3299   001470  5003               	movf	___awdiv@divisor^0,w,c
  3300   001472  5C01               	subwf	___awdiv@dividend^0,w,c
  3301   001474  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3302   001476  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3303   001478  A0D8               	btfss	status,0,c
  3304   00147A  EF41  F00A         	goto	u1691
  3305   00147E  EF43  F00A         	goto	u1690
  3306   001482                     u1691:
  3307   001482  EF48  F00A         	goto	l2883
  3308   001486                     u1690:
  3309   001486  5003               	movf	___awdiv@divisor^0,w,c
  3310   001488  5E01               	subwf	___awdiv@dividend^0,f,c
  3311   00148A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3312   00148C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3313   00148E  8007               	bsf	___awdiv@quotient^0,0,c
  3314   001490                     l2883:
  3315   001490  90D8               	bcf	status,0,c
  3316   001492  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3317   001494  3203               	rrcf	___awdiv@divisor^0,f,c
  3318   001496  2E05               	decfsz	___awdiv@counter^0,f,c
  3319   001498  EF35  F00A         	goto	l2875
  3320   00149C                     l2887:
  3321   00149C  5006               	movf	___awdiv@sign^0,w,c
  3322   00149E  B4D8               	btfsc	status,2,c
  3323   0014A0  EF54  F00A         	goto	u1701
  3324   0014A4  EF56  F00A         	goto	u1700
  3325   0014A8                     u1701:
  3326   0014A8  EF5A  F00A         	goto	l2891
  3327   0014AC                     u1700:
  3328   0014AC  6C07               	negf	___awdiv@quotient^0,c
  3329   0014AE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3330   0014B0  B0D8               	btfsc	status,0,c
  3331   0014B2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3332   0014B4                     l2891:
  3333   0014B4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3334   0014B8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3335   0014BC  0012               	return		;funcret
  3336   0014BE                     __end_of___awdiv:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function ___lwdiv *****************
  3340 ;; Defined at:
  3341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  dividend        2    6[COMRAM] unsigned int 
  3344 ;;  divisor         2    8[COMRAM] unsigned int 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  quotient        2   11[COMRAM] unsigned int 
  3347 ;;  counter         1   10[COMRAM] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2    6[COMRAM] unsigned int 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;Total ram usage:        7 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; This function calls:
  3364 ;;		Nothing
  3365 ;; This function is called by:
  3366 ;;		_ADC2String
  3367 ;;		_setMotorPWM
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text19
  3372   001950                     __ptext19:
  3373                           	callstack 0
  3374   001950                     ___lwdiv:
  3375                           	callstack 27
  3376   001950  0E00               	movlw	0
  3377   001952  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  3378   001954  0E00               	movlw	0
  3379   001956  6E0C               	movwf	___lwdiv@quotient^0,c
  3380   001958  5009               	movf	___lwdiv@divisor^0,w,c
  3381   00195A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3382   00195C  B4D8               	btfsc	status,2,c
  3383   00195E  EFB3  F00C         	goto	u2031
  3384   001962  EFB5  F00C         	goto	u2030
  3385   001966                     u2031:
  3386   001966  EFDD  F00C         	goto	l910
  3387   00196A                     u2030:
  3388   00196A  0E01               	movlw	1
  3389   00196C  6E0B               	movwf	___lwdiv@counter^0,c
  3390   00196E  EFBD  F00C         	goto	l3113
  3391   001972                     l3111:
  3392   001972  90D8               	bcf	status,0,c
  3393   001974  3609               	rlcf	___lwdiv@divisor^0,f,c
  3394   001976  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3395   001978  2A0B               	incf	___lwdiv@counter^0,f,c
  3396   00197A                     l3113:
  3397   00197A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3398   00197C  EFC2  F00C         	goto	u2041
  3399   001980  EFC4  F00C         	goto	u2040
  3400   001984                     u2041:
  3401   001984  EFB9  F00C         	goto	l3111
  3402   001988                     u2040:
  3403   001988                     l3115:
  3404   001988  90D8               	bcf	status,0,c
  3405   00198A  360C               	rlcf	___lwdiv@quotient^0,f,c
  3406   00198C  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3407   00198E  5009               	movf	___lwdiv@divisor^0,w,c
  3408   001990  5C07               	subwf	___lwdiv@dividend^0,w,c
  3409   001992  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3410   001994  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3411   001996  A0D8               	btfss	status,0,c
  3412   001998  EFD0  F00C         	goto	u2051
  3413   00199C  EFD2  F00C         	goto	u2050
  3414   0019A0                     u2051:
  3415   0019A0  EFD7  F00C         	goto	l3123
  3416   0019A4                     u2050:
  3417   0019A4  5009               	movf	___lwdiv@divisor^0,w,c
  3418   0019A6  5E07               	subwf	___lwdiv@dividend^0,f,c
  3419   0019A8  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3420   0019AA  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3421   0019AC  800C               	bsf	___lwdiv@quotient^0,0,c
  3422   0019AE                     l3123:
  3423   0019AE  90D8               	bcf	status,0,c
  3424   0019B0  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3425   0019B2  3209               	rrcf	___lwdiv@divisor^0,f,c
  3426   0019B4  2E0B               	decfsz	___lwdiv@counter^0,f,c
  3427   0019B6  EFC4  F00C         	goto	l3115
  3428   0019BA                     l910:
  3429   0019BA  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  3430   0019BE  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3431   0019C2  0012               	return		;funcret
  3432   0019C4                     __end_of___lwdiv:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _color_read_Red *****************
  3436 ;; Defined at:
  3437 ;;		line 30 in file "color.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  tmp             2    9[COMRAM] unsigned int 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2    4[COMRAM] unsigned int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;Total ram usage:        7 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 2
  3458 ;; This function calls:
  3459 ;;		_I2C_2_Master_Read
  3460 ;;		_I2C_2_Master_RepStart
  3461 ;;		_I2C_2_Master_Start
  3462 ;;		_I2C_2_Master_Stop
  3463 ;;		_I2C_2_Master_Write
  3464 ;; This function is called by:
  3465 ;;		_test
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text20
  3471   0019C4                     __ptext20:
  3472                           	callstack 0
  3473   0019C4                     _color_read_Red:
  3474                           	callstack 27
  3475   0019C4                     
  3476                           ;color.c: 32:  unsigned int tmp;;color.c: 33:  I2C_2_Master_Start();
  3477   0019C4  EC0B  F00F         	call	_I2C_2_Master_Start	;wreg free
  3478                           
  3479                           ;color.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  3480   0019C8  0E52               	movlw	82
  3481   0019CA  ECFB  F00E         	call	_I2C_2_Master_Write
  3482                           
  3483                           ;color.c: 35:  I2C_2_Master_Write(0xA0 | 0x16);
  3484   0019CE  0EB6               	movlw	182
  3485   0019D0  ECFB  F00E         	call	_I2C_2_Master_Write
  3486                           
  3487                           ;color.c: 36:  I2C_2_Master_RepStart();
  3488   0019D4  EC01  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3489                           
  3490                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x01);
  3491   0019D8  0E53               	movlw	83
  3492   0019DA  ECFB  F00E         	call	_I2C_2_Master_Write
  3493                           
  3494                           ;color.c: 38:  tmp=I2C_2_Master_Read(1);
  3495   0019DE  0E01               	movlw	1
  3496   0019E0  ECA3  F00D         	call	_I2C_2_Master_Read
  3497   0019E4  6E07               	movwf	??_color_read_Red^0,c
  3498   0019E6  5007               	movf	??_color_read_Red^0,w,c
  3499   0019E8  6E0A               	movwf	color_read_Red@tmp^0,c
  3500   0019EA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3501                           
  3502                           ;color.c: 39:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3503   0019EC  0E00               	movlw	0
  3504   0019EE  ECA3  F00D         	call	_I2C_2_Master_Read
  3505   0019F2  6E07               	movwf	??_color_read_Red^0,c
  3506   0019F4  5007               	movf	??_color_read_Red^0,w,c
  3507   0019F6  6E09               	movwf	(??_color_read_Red+2)^0,c
  3508   0019F8  6A08               	clrf	(??_color_read_Red+1)^0,c
  3509   0019FA  500A               	movf	color_read_Red@tmp^0,w,c
  3510   0019FC  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3511   0019FE  6E0A               	movwf	color_read_Red@tmp^0,c
  3512   001A00  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3513   001A02  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3514   001A04  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3515                           
  3516                           ;color.c: 40:  I2C_2_Master_Stop();
  3517   001A06  EC06  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3518   001A0A                     
  3519                           ;color.c: 41:  return tmp;
  3520   001A0A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3521   001A0E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3522   001A12  0012               	return		;funcret
  3523   001A14                     __end_of_color_read_Red:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _color_read_Green *****************
  3527 ;; Defined at:
  3528 ;;		line 44 in file "color.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  tmp             2    9[COMRAM] unsigned int 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    4[COMRAM] unsigned int 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3544 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;Total ram usage:        7 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 2
  3549 ;; This function calls:
  3550 ;;		_I2C_2_Master_Read
  3551 ;;		_I2C_2_Master_RepStart
  3552 ;;		_I2C_2_Master_Start
  3553 ;;		_I2C_2_Master_Stop
  3554 ;;		_I2C_2_Master_Write
  3555 ;; This function is called by:
  3556 ;;		_test
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text21
  3562   001A14                     __ptext21:
  3563                           	callstack 0
  3564   001A14                     _color_read_Green:
  3565                           	callstack 27
  3566   001A14                     
  3567                           ;color.c: 46:  unsigned int tmp;;color.c: 47:  I2C_2_Master_Start();
  3568   001A14  EC0B  F00F         	call	_I2C_2_Master_Start	;wreg free
  3569                           
  3570                           ;color.c: 48:  I2C_2_Master_Write(0x52 | 0x00);
  3571   001A18  0E52               	movlw	82
  3572   001A1A  ECFB  F00E         	call	_I2C_2_Master_Write
  3573                           
  3574                           ;color.c: 49:  I2C_2_Master_Write(0xA0 | 0x18);
  3575   001A1E  0EB8               	movlw	184
  3576   001A20  ECFB  F00E         	call	_I2C_2_Master_Write
  3577                           
  3578                           ;color.c: 50:  I2C_2_Master_RepStart();
  3579   001A24  EC01  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3580                           
  3581                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x01);
  3582   001A28  0E53               	movlw	83
  3583   001A2A  ECFB  F00E         	call	_I2C_2_Master_Write
  3584                           
  3585                           ;color.c: 52:  tmp=I2C_2_Master_Read(1);
  3586   001A2E  0E01               	movlw	1
  3587   001A30  ECA3  F00D         	call	_I2C_2_Master_Read
  3588   001A34  6E07               	movwf	??_color_read_Green^0,c
  3589   001A36  5007               	movf	??_color_read_Green^0,w,c
  3590   001A38  6E0A               	movwf	color_read_Green@tmp^0,c
  3591   001A3A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  3592                           
  3593                           ;color.c: 53:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3594   001A3C  0E00               	movlw	0
  3595   001A3E  ECA3  F00D         	call	_I2C_2_Master_Read
  3596   001A42  6E07               	movwf	??_color_read_Green^0,c
  3597   001A44  5007               	movf	??_color_read_Green^0,w,c
  3598   001A46  6E09               	movwf	(??_color_read_Green+2)^0,c
  3599   001A48  6A08               	clrf	(??_color_read_Green+1)^0,c
  3600   001A4A  500A               	movf	color_read_Green@tmp^0,w,c
  3601   001A4C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  3602   001A4E  6E0A               	movwf	color_read_Green@tmp^0,c
  3603   001A50  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  3604   001A52  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  3605   001A54  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  3606                           
  3607                           ;color.c: 54:  I2C_2_Master_Stop();
  3608   001A56  EC06  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3609   001A5A                     
  3610                           ;color.c: 55:  return tmp;
  3611   001A5A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  3612   001A5E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3613   001A62  0012               	return		;funcret
  3614   001A64                     __end_of_color_read_Green:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _color_read_Clear *****************
  3618 ;; Defined at:
  3619 ;;		line 73 in file "color.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  tmp             2    9[COMRAM] unsigned int 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    4[COMRAM] unsigned int 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;Total ram usage:        7 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 2
  3640 ;; This function calls:
  3641 ;;		_I2C_2_Master_Read
  3642 ;;		_I2C_2_Master_RepStart
  3643 ;;		_I2C_2_Master_Start
  3644 ;;		_I2C_2_Master_Stop
  3645 ;;		_I2C_2_Master_Write
  3646 ;; This function is called by:
  3647 ;;		_test
  3648 ;;		_main
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text22
  3653   001A64                     __ptext22:
  3654                           	callstack 0
  3655   001A64                     _color_read_Clear:
  3656                           	callstack 27
  3657   001A64                     
  3658                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  3659   001A64  EC0B  F00F         	call	_I2C_2_Master_Start	;wreg free
  3660                           
  3661                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  3662   001A68  0E52               	movlw	82
  3663   001A6A  ECFB  F00E         	call	_I2C_2_Master_Write
  3664                           
  3665                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  3666   001A6E  0EB4               	movlw	180
  3667   001A70  ECFB  F00E         	call	_I2C_2_Master_Write
  3668                           
  3669                           ;color.c: 79:  I2C_2_Master_RepStart();
  3670   001A74  EC01  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3671                           
  3672                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  3673   001A78  0E53               	movlw	83
  3674   001A7A  ECFB  F00E         	call	_I2C_2_Master_Write
  3675                           
  3676                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  3677   001A7E  0E01               	movlw	1
  3678   001A80  ECA3  F00D         	call	_I2C_2_Master_Read
  3679   001A84  6E07               	movwf	??_color_read_Clear^0,c
  3680   001A86  5007               	movf	??_color_read_Clear^0,w,c
  3681   001A88  6E0A               	movwf	color_read_Clear@tmp^0,c
  3682   001A8A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  3683                           
  3684                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3685   001A8C  0E00               	movlw	0
  3686   001A8E  ECA3  F00D         	call	_I2C_2_Master_Read
  3687   001A92  6E07               	movwf	??_color_read_Clear^0,c
  3688   001A94  5007               	movf	??_color_read_Clear^0,w,c
  3689   001A96  6E09               	movwf	(??_color_read_Clear+2)^0,c
  3690   001A98  6A08               	clrf	(??_color_read_Clear+1)^0,c
  3691   001A9A  500A               	movf	color_read_Clear@tmp^0,w,c
  3692   001A9C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  3693   001A9E  6E0A               	movwf	color_read_Clear@tmp^0,c
  3694   001AA0  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  3695   001AA2  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  3696   001AA4  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  3697                           
  3698                           ;color.c: 83:  I2C_2_Master_Stop();
  3699   001AA6  EC06  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3700   001AAA                     
  3701                           ;color.c: 84:  return tmp;
  3702   001AAA  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  3703   001AAE  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3704   001AB2  0012               	return		;funcret
  3705   001AB4                     __end_of_color_read_Clear:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _color_read_Blue *****************
  3709 ;; Defined at:
  3710 ;;		line 58 in file "color.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;		None
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  tmp             2    9[COMRAM] unsigned int 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2    4[COMRAM] unsigned int 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;Total ram usage:        7 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 2
  3731 ;; This function calls:
  3732 ;;		_I2C_2_Master_Read
  3733 ;;		_I2C_2_Master_RepStart
  3734 ;;		_I2C_2_Master_Start
  3735 ;;		_I2C_2_Master_Stop
  3736 ;;		_I2C_2_Master_Write
  3737 ;; This function is called by:
  3738 ;;		_test
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text23
  3744   001AB4                     __ptext23:
  3745                           	callstack 0
  3746   001AB4                     _color_read_Blue:
  3747                           	callstack 27
  3748   001AB4                     
  3749                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  3750   001AB4  EC0B  F00F         	call	_I2C_2_Master_Start	;wreg free
  3751                           
  3752                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  3753   001AB8  0E52               	movlw	82
  3754   001ABA  ECFB  F00E         	call	_I2C_2_Master_Write
  3755                           
  3756                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x1A);
  3757   001ABE  0EBA               	movlw	186
  3758   001AC0  ECFB  F00E         	call	_I2C_2_Master_Write
  3759                           
  3760                           ;color.c: 64:  I2C_2_Master_RepStart();
  3761   001AC4  EC01  F00F         	call	_I2C_2_Master_RepStart	;wreg free
  3762                           
  3763                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  3764   001AC8  0E53               	movlw	83
  3765   001ACA  ECFB  F00E         	call	_I2C_2_Master_Write
  3766                           
  3767                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  3768   001ACE  0E01               	movlw	1
  3769   001AD0  ECA3  F00D         	call	_I2C_2_Master_Read
  3770   001AD4  6E07               	movwf	??_color_read_Blue^0,c
  3771   001AD6  5007               	movf	??_color_read_Blue^0,w,c
  3772   001AD8  6E0A               	movwf	color_read_Blue@tmp^0,c
  3773   001ADA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  3774                           
  3775                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3776   001ADC  0E00               	movlw	0
  3777   001ADE  ECA3  F00D         	call	_I2C_2_Master_Read
  3778   001AE2  6E07               	movwf	??_color_read_Blue^0,c
  3779   001AE4  5007               	movf	??_color_read_Blue^0,w,c
  3780   001AE6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  3781   001AE8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  3782   001AEA  500A               	movf	color_read_Blue@tmp^0,w,c
  3783   001AEC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  3784   001AEE  6E0A               	movwf	color_read_Blue@tmp^0,c
  3785   001AF0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  3786   001AF2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  3787   001AF4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  3788                           
  3789                           ;color.c: 68:  I2C_2_Master_Stop();
  3790   001AF6  EC06  F00F         	call	_I2C_2_Master_Stop	;wreg free
  3791   001AFA                     
  3792                           ;color.c: 69:  return tmp;
  3793   001AFA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  3794   001AFE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3795   001B02  0012               	return		;funcret
  3796   001B04                     __end_of_color_read_Blue:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _I2C_2_Master_RepStart *****************
  3800 ;; Defined at:
  3801 ;;		line 33 in file "i2c.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 1
  3822 ;; This function calls:
  3823 ;;		_I2C_2_Master_Idle
  3824 ;; This function is called by:
  3825 ;;		_color_read_Red
  3826 ;;		_color_read_Green
  3827 ;;		_color_read_Blue
  3828 ;;		_color_read_Clear
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text24
  3833   001E02                     __ptext24:
  3834                           	callstack 0
  3835   001E02                     _I2C_2_Master_RepStart:
  3836                           	callstack 27
  3837   001E02                     
  3838                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3839   001E02  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3840   001E06                     
  3841                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3842   001E06  010E               	movlb	14	; () banked
  3843   001E08  83DA               	bsf	218,1,b	;volatile
  3844   001E0A                     
  3845                           ; BSR set to: 14
  3846   001E0A  0012               	return		;funcret
  3847   001E0C                     __end_of_I2C_2_Master_RepStart:
  3848                           	callstack 0
  3849                           
  3850 ;; *************** function _I2C_2_Master_Read *****************
  3851 ;; Defined at:
  3852 ;;		line 51 in file "i2c.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  ack             1    wreg     unsigned char 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  ack             1    2[COMRAM] unsigned char 
  3857 ;;  tmp             1    3[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      unsigned char 
  3860 ;; Registers used:
  3861 ;;		wreg, status,2, status,0, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;Total ram usage:        3 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 1
  3874 ;; This function calls:
  3875 ;;		_I2C_2_Master_Idle
  3876 ;; This function is called by:
  3877 ;;		_color_read_Red
  3878 ;;		_color_read_Green
  3879 ;;		_color_read_Blue
  3880 ;;		_color_read_Clear
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text25
  3885   001B46                     __ptext25:
  3886                           	callstack 0
  3887   001B46                     _I2C_2_Master_Read:
  3888                           	callstack 27
  3889                           
  3890                           ; BSR set to: 14
  3891                           ;incstack = 0
  3892                           ;I2C_2_Master_Read@ack stored from wreg
  3893   001B46  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  3894   001B48                     
  3895                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3896   001B48  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3897   001B4C                     
  3898                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3899   001B4C  010E               	movlb	14	; () banked
  3900   001B4E  87DA               	bsf	218,3,b	;volatile
  3901                           
  3902                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3903   001B50  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3904   001B54                     
  3905                           ;i2c.c: 57:   tmp = SSP2BUF;
  3906   001B54  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3907                           
  3908                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3909   001B58  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3910   001B5C                     
  3911                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3912   001B5C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  3913   001B5E  B4D8               	btfsc	status,2,c
  3914   001B60  EFB4  F00D         	goto	u2061
  3915   001B64  EFB8  F00D         	goto	u2060
  3916   001B68                     u2061:
  3917   001B68  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3918   001B6A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  3919   001B6C  EFB9  F00D         	goto	u2078
  3920   001B70                     u2060:
  3921   001B70  6A02               	clrf	??_I2C_2_Master_Read^0,c
  3922   001B72                     u2078:
  3923   001B72  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  3924   001B74  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  3925   001B76  010E               	movlb	14	; () banked
  3926   001B78  51DA               	movf	218,w,b	;volatile
  3927   001B7A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3928   001B7C  0BDF               	andlw	-33
  3929   001B7E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  3930   001B80  6FDA               	movwf	218,b	;volatile
  3931   001B82                     
  3932                           ; BSR set to: 14
  3933                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3934   001B82  89DA               	bsf	218,4,b	;volatile
  3935   001B84                     
  3936                           ; BSR set to: 14
  3937                           ;i2c.c: 61:   return tmp;
  3938   001B84  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  3939   001B86                     
  3940                           ; BSR set to: 14
  3941   001B86  0012               	return		;funcret
  3942   001B88                     __end_of_I2C_2_Master_Read:
  3943                           	callstack 0
  3944                           
  3945 ;; *************** function _initUSART4 *****************
  3946 ;; Defined at:
  3947 ;;		line 14 in file "serial.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; This function calls:
  3968 ;;		Nothing
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text26
  3975   001DA6                     __ptext26:
  3976                           	callstack 0
  3977   001DA6                     _initUSART4:
  3978                           	callstack 30
  3979   001DA6                     
  3980                           ;serial.c: 15:     RC0PPS = 0x12;
  3981   001DA6  0E12               	movlw	18
  3982   001DA8  010E               	movlb	14	; () banked
  3983   001DAA  6F62               	movwf	98,b	;volatile
  3984                           
  3985                           ;serial.c: 16:     RX4PPS = 0x11;
  3986   001DAC  0E11               	movlw	17
  3987   001DAE  6F15               	movwf	21,b	;volatile
  3988   001DB0                     
  3989                           ; BSR set to: 14
  3990                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  3991   001DB0  97E9               	bcf	233,3,b	;volatile
  3992   001DB2                     
  3993                           ; BSR set to: 14
  3994                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  3995   001DB2  95E8               	bcf	232,2,b	;volatile
  3996                           
  3997                           ;serial.c: 19:     SP4BRGL = 51;
  3998   001DB4  0E33               	movlw	51
  3999   001DB6  6FE5               	movwf	229,b	;volatile
  4000                           
  4001                           ;serial.c: 20:     SP4BRGH = 0;
  4002   001DB8  0E00               	movlw	0
  4003   001DBA  6FE6               	movwf	230,b	;volatile
  4004   001DBC                     
  4005                           ; BSR set to: 14
  4006                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4007   001DBC  89E7               	bsf	231,4,b	;volatile
  4008   001DBE                     
  4009                           ; BSR set to: 14
  4010                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4011   001DBE  8BE8               	bsf	232,5,b	;volatile
  4012   001DC0                     
  4013                           ; BSR set to: 14
  4014                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4015   001DC0  8FE7               	bsf	231,7,b	;volatile
  4016   001DC2                     
  4017                           ; BSR set to: 14
  4018   001DC2  0012               	return		;funcret
  4019   001DC4                     __end_of_initUSART4:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _initDCmotorsPWM *****************
  4023 ;; Defined at:
  4024 ;;		line 5 in file "dc_motor.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;Total ram usage:        2 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text27
  4052   0018C0                     __ptext27:
  4053                           	callstack 0
  4054   0018C0                     _initDCmotorsPWM:
  4055                           	callstack 30
  4056   0018C0                     
  4057                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4058   0018C0  9485               	bcf	133,2,c	;volatile
  4059                           
  4060                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4061   0018C2  9E83               	bcf	131,7,c	;volatile
  4062                           
  4063                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4064   0018C4  9885               	bcf	133,4,c	;volatile
  4065                           
  4066                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4067   0018C6  9C87               	bcf	135,6,c	;volatile
  4068                           
  4069                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4070   0018C8  947D               	bcf	125,2,c	;volatile
  4071                           
  4072                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4073   0018CA  9E7B               	bcf	123,7,c	;volatile
  4074                           
  4075                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4076   0018CC  987D               	bcf	125,4,c	;volatile
  4077                           
  4078                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  4079   0018CE  9C7F               	bcf	127,6,c	;volatile
  4080   0018D0                     
  4081                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4082   0018D0  0E05               	movlw	5
  4083   0018D2  010E               	movlb	14	; () banked
  4084   0018D4  6F74               	movwf	116,b	;volatile
  4085                           
  4086                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4087   0018D6  0E06               	movlw	6
  4088   0018D8  6F76               	movwf	118,b	;volatile
  4089                           
  4090                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4091   0018DA  0E07               	movlw	7
  4092   0018DC  6F69               	movwf	105,b	;volatile
  4093                           
  4094                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4095   0018DE  0E08               	movlw	8
  4096   0018E0  6F88               	movwf	136,b	;volatile
  4097                           
  4098                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4099   0018E2  50BD               	movf	189,w,c	;volatile
  4100   0018E4  0B8F               	andlw	-113
  4101   0018E6  0940               	iorlw	64
  4102   0018E8  6EBD               	movwf	189,c	;volatile
  4103                           
  4104                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4105   0018EA  0EE0               	movlw	-32
  4106   0018EC  16BE               	andwf	190,f,c	;volatile
  4107                           
  4108                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4109   0018EE  50BF               	movf	191,w,c	;volatile
  4110   0018F0  0BF0               	andlw	-16
  4111   0018F2  0901               	iorlw	1
  4112   0018F4  6EBF               	movwf	191,c	;volatile
  4113   0018F6                     
  4114                           ; BSR set to: 14
  4115                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  4116   0018F6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4117   0018FA                     
  4118                           ; BSR set to: 14
  4119                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4120   0018FA  8EBD               	bsf	189,7,c	;volatile
  4121                           
  4122                           ;dc_motor.c: 35:     CCPR1H=0;
  4123   0018FC  0E00               	movlw	0
  4124   0018FE  6EAA               	movwf	170,c	;volatile
  4125                           
  4126                           ;dc_motor.c: 36:     CCPR2H=0;
  4127   001900  0E00               	movlw	0
  4128   001902  6EA6               	movwf	166,c	;volatile
  4129                           
  4130                           ;dc_motor.c: 37:     CCPR3H=0;
  4131   001904  0E00               	movlw	0
  4132   001906  010F               	movlb	15	; () banked
  4133   001908  6F25               	movwf	37,b	;volatile
  4134                           
  4135                           ;dc_motor.c: 38:     CCPR4H=0;
  4136   00190A  0E00               	movlw	0
  4137   00190C  6F21               	movwf	33,b	;volatile
  4138                           
  4139                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4140   00190E  0EFC               	movlw	-4
  4141   001910  16AD               	andwf	173,f,c	;volatile
  4142                           
  4143                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4144   001912  0EF3               	movlw	-13
  4145   001914  16AD               	andwf	173,f,c	;volatile
  4146                           
  4147                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4148   001916  0ECF               	movlw	-49
  4149   001918  16AD               	andwf	173,f,c	;volatile
  4150                           
  4151                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4152   00191A  0E3F               	movlw	-193
  4153   00191C  16AD               	andwf	173,f,c	;volatile
  4154   00191E                     
  4155                           ; BSR set to: 15
  4156                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4157   00191E  88AB               	bsf	171,4,c	;volatile
  4158                           
  4159                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  4160   001920  50AB               	movf	171,w,c	;volatile
  4161   001922  0BF0               	andlw	-16
  4162   001924  090C               	iorlw	12
  4163   001926  6EAB               	movwf	171,c	;volatile
  4164   001928                     
  4165                           ; BSR set to: 15
  4166                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  4167   001928  8EAB               	bsf	171,7,c	;volatile
  4168   00192A                     
  4169                           ; BSR set to: 15
  4170                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  4171   00192A  88A7               	bsf	167,4,c	;volatile
  4172                           
  4173                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  4174   00192C  50A7               	movf	167,w,c	;volatile
  4175   00192E  0BF0               	andlw	-16
  4176   001930  090C               	iorlw	12
  4177   001932  6EA7               	movwf	167,c	;volatile
  4178   001934                     
  4179                           ; BSR set to: 15
  4180                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  4181   001934  8EA7               	bsf	167,7,c	;volatile
  4182   001936                     
  4183                           ; BSR set to: 15
  4184                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  4185   001936  8926               	bsf	38,4,b	;volatile
  4186                           
  4187                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  4188   001938  5126               	movf	38,w,b	;volatile
  4189   00193A  0BF0               	andlw	-16
  4190   00193C  090C               	iorlw	12
  4191   00193E  6F26               	movwf	38,b	;volatile
  4192   001940                     
  4193                           ; BSR set to: 15
  4194                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  4195   001940  8F26               	bsf	38,7,b	;volatile
  4196   001942                     
  4197                           ; BSR set to: 15
  4198                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  4199   001942  8922               	bsf	34,4,b	;volatile
  4200                           
  4201                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  4202   001944  5122               	movf	34,w,b	;volatile
  4203   001946  0BF0               	andlw	-16
  4204   001948  090C               	iorlw	12
  4205   00194A  6F22               	movwf	34,b	;volatile
  4206   00194C                     
  4207                           ; BSR set to: 15
  4208                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  4209   00194C  8F22               	bsf	34,7,b	;volatile
  4210   00194E                     
  4211                           ; BSR set to: 15
  4212   00194E  0012               	return		;funcret
  4213   001950                     __end_of_initDCmotorsPWM:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _color_click_init *****************
  4217 ;; Defined at:
  4218 ;;		line 6 in file "color.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      void 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 3
  4239 ;; This function calls:
  4240 ;;		_I2C_2_Master_Init
  4241 ;;		_color_writetoaddr
  4242 ;; This function is called by:
  4243 ;;		_main
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text28
  4248   001CAA                     __ptext28:
  4249                           	callstack 0
  4250   001CAA                     _color_click_init:
  4251                           	callstack 27
  4252   001CAA                     
  4253                           ;color.c: 9:     I2C_2_Master_Init();
  4254   001CAA  EC87  F00E         	call	_I2C_2_Master_Init	;wreg free
  4255   001CAE                     
  4256                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  4257   001CAE  0E01               	movlw	1
  4258   001CB0  6E03               	movwf	color_writetoaddr@value^0,c
  4259   001CB2  0E00               	movlw	0
  4260   001CB4  ECC3  F00E         	call	_color_writetoaddr
  4261   001CB8                     
  4262                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4263   001CB8  0E3F               	movlw	63
  4264   001CBA  6E05               	movwf	??_color_click_init^0,c
  4265   001CBC  0E55               	movlw	85
  4266   001CBE                     u2337:
  4267   001CBE  2EE8               	decfsz	wreg,f,c
  4268   001CC0  D7FE               	bra	u2337
  4269   001CC2  2E05               	decfsz	??_color_click_init^0,f,c
  4270   001CC4  D7FC               	bra	u2337
  4271   001CC6  0000               	nop	
  4272   001CC8                     
  4273                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  4274   001CC8  0E03               	movlw	3
  4275   001CCA  6E03               	movwf	color_writetoaddr@value^0,c
  4276   001CCC  0E00               	movlw	0
  4277   001CCE  ECC3  F00E         	call	_color_writetoaddr
  4278   001CD2                     
  4279                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  4280   001CD2  0ED5               	movlw	213
  4281   001CD4  6E03               	movwf	color_writetoaddr@value^0,c
  4282   001CD6  0E01               	movlw	1
  4283   001CD8  ECC3  F00E         	call	_color_writetoaddr
  4284   001CDC  0012               	return		;funcret
  4285   001CDE                     __end_of_color_click_init:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _color_writetoaddr *****************
  4289 ;; Defined at:
  4290 ;;		line 22 in file "color.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  address         1    wreg     unsigned char 
  4293 ;;  value           1    2[COMRAM] unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  address         1    3[COMRAM] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;Total ram usage:        2 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 2
  4312 ;; This function calls:
  4313 ;;		_I2C_2_Master_Start
  4314 ;;		_I2C_2_Master_Stop
  4315 ;;		_I2C_2_Master_Write
  4316 ;; This function is called by:
  4317 ;;		_color_click_init
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text29
  4322   001D86                     __ptext29:
  4323                           	callstack 0
  4324   001D86                     _color_writetoaddr:
  4325                           	callstack 27
  4326                           
  4327                           ;incstack = 0
  4328                           ;color_writetoaddr@address stored from wreg
  4329   001D86  6E04               	movwf	color_writetoaddr@address^0,c
  4330   001D88                     
  4331                           ;color.c: 23:     I2C_2_Master_Start();
  4332   001D88  EC0B  F00F         	call	_I2C_2_Master_Start	;wreg free
  4333                           
  4334                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  4335   001D8C  0E52               	movlw	82
  4336   001D8E  ECFB  F00E         	call	_I2C_2_Master_Write
  4337                           
  4338                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  4339   001D92  5004               	movf	color_writetoaddr@address^0,w,c
  4340   001D94  0980               	iorlw	128
  4341   001D96  ECFB  F00E         	call	_I2C_2_Master_Write
  4342                           
  4343                           ;color.c: 26:     I2C_2_Master_Write(value);
  4344   001D9A  5003               	movf	color_writetoaddr@value^0,w,c
  4345   001D9C  ECFB  F00E         	call	_I2C_2_Master_Write
  4346                           
  4347                           ;color.c: 27:     I2C_2_Master_Stop();
  4348   001DA0  EC06  F00F         	call	_I2C_2_Master_Stop	;wreg free
  4349   001DA4  0012               	return		;funcret
  4350   001DA6                     __end_of_color_writetoaddr:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _I2C_2_Master_Write *****************
  4354 ;; Defined at:
  4355 ;;		line 45 in file "i2c.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  data_byte       1    wreg     unsigned char 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  data_byte       1    1[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4373 ;;Total ram usage:        1 bytes
  4374 ;; Hardware stack levels used: 1
  4375 ;; Hardware stack levels required when called: 1
  4376 ;; This function calls:
  4377 ;;		_I2C_2_Master_Idle
  4378 ;; This function is called by:
  4379 ;;		_color_writetoaddr
  4380 ;;		_color_read_Red
  4381 ;;		_color_read_Green
  4382 ;;		_color_read_Blue
  4383 ;;		_color_read_Clear
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text30
  4388   001DF6                     __ptext30:
  4389                           	callstack 0
  4390   001DF6                     _I2C_2_Master_Write:
  4391                           	callstack 27
  4392                           
  4393                           ;incstack = 0
  4394                           ;I2C_2_Master_Write@data_byte stored from wreg
  4395   001DF6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4396   001DF8                     
  4397                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4398   001DF8  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4399   001DFC                     
  4400                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4401   001DFC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4402   001E00  0012               	return		;funcret
  4403   001E02                     __end_of_I2C_2_Master_Write:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _I2C_2_Master_Stop *****************
  4407 ;; Defined at:
  4408 ;;		line 39 in file "i2c.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 1
  4429 ;; This function calls:
  4430 ;;		_I2C_2_Master_Idle
  4431 ;; This function is called by:
  4432 ;;		_color_writetoaddr
  4433 ;;		_color_read_Red
  4434 ;;		_color_read_Green
  4435 ;;		_color_read_Blue
  4436 ;;		_color_read_Clear
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text31
  4441   001E0C                     __ptext31:
  4442                           	callstack 0
  4443   001E0C                     _I2C_2_Master_Stop:
  4444                           	callstack 27
  4445   001E0C                     
  4446                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4447   001E0C  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4448   001E10                     
  4449                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4450   001E10  010E               	movlb	14	; () banked
  4451   001E12  85DA               	bsf	218,2,b	;volatile
  4452   001E14                     
  4453                           ; BSR set to: 14
  4454   001E14  0012               	return		;funcret
  4455   001E16                     __end_of_I2C_2_Master_Stop:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _I2C_2_Master_Start *****************
  4459 ;; Defined at:
  4460 ;;		line 27 in file "i2c.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;		None
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4478 ;;Total ram usage:        0 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 1
  4481 ;; This function calls:
  4482 ;;		_I2C_2_Master_Idle
  4483 ;; This function is called by:
  4484 ;;		_color_writetoaddr
  4485 ;;		_color_read_Red
  4486 ;;		_color_read_Green
  4487 ;;		_color_read_Blue
  4488 ;;		_color_read_Clear
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text32
  4493   001E16                     __ptext32:
  4494                           	callstack 0
  4495   001E16                     _I2C_2_Master_Start:
  4496                           	callstack 27
  4497   001E16                     
  4498                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4499   001E16  EC9C  F00E         	call	_I2C_2_Master_Idle	;wreg free
  4500   001E1A                     
  4501                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4502   001E1A  010E               	movlb	14	; () banked
  4503   001E1C  81DA               	bsf	218,0,b	;volatile
  4504   001E1E                     
  4505                           ; BSR set to: 14
  4506   001E1E  0012               	return		;funcret
  4507   001E20                     __end_of_I2C_2_Master_Start:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _I2C_2_Master_Idle *****************
  4511 ;; Defined at:
  4512 ;;		line 22 in file "i2c.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;		None
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;Total ram usage:        1 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_I2C_2_Master_Start
  4536 ;;		_I2C_2_Master_RepStart
  4537 ;;		_I2C_2_Master_Stop
  4538 ;;		_I2C_2_Master_Write
  4539 ;;		_I2C_2_Master_Read
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text33
  4544   001D38                     __ptext33:
  4545                           	callstack 0
  4546   001D38                     _I2C_2_Master_Idle:
  4547                           	callstack 27
  4548   001D38                     l95:
  4549   001D38  010E               	movlb	14	; () banked
  4550   001D3A  B5D8               	btfsc	216,2,b	;volatile
  4551   001D3C  EFA2  F00E         	goto	u2001
  4552   001D40  EFA4  F00E         	goto	u2000
  4553   001D44                     u2001:
  4554   001D44  EF9C  F00E         	goto	l95
  4555   001D48                     u2000:
  4556   001D48                     
  4557                           ; BSR set to: 14
  4558   001D48  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4559   001D4C  0E1F               	movlw	31
  4560   001D4E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4561   001D50  A4D8               	btfss	status,2,c
  4562   001D52  EFAD  F00E         	goto	u2011
  4563   001D56  EFAF  F00E         	goto	u2010
  4564   001D5A                     u2011:
  4565   001D5A  EF9C  F00E         	goto	l95
  4566   001D5E                     u2010:
  4567   001D5E                     
  4568                           ; BSR set to: 14
  4569   001D5E  0012               	return		;funcret
  4570   001D60                     __end_of_I2C_2_Master_Idle:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _I2C_2_Master_Init *****************
  4574 ;; Defined at:
  4575 ;;		line 4 in file "i2c.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;		None
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;Total ram usage:        0 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_color_click_init
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text34
  4603   001D0E                     __ptext34:
  4604                           	callstack 0
  4605   001D0E                     _I2C_2_Master_Init:
  4606                           	callstack 29
  4607   001D0E                     
  4608                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4609   001D0E  010E               	movlb	14	; () banked
  4610   001D10  51D9               	movf	217,w,b	;volatile
  4611   001D12  0BF0               	andlw	-16
  4612   001D14  0908               	iorlw	8
  4613   001D16  6FD9               	movwf	217,b	;volatile
  4614   001D18                     
  4615                           ; BSR set to: 14
  4616                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4617   001D18  8BD9               	bsf	217,5,b	;volatile
  4618                           
  4619                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4620   001D1A  0E9F               	movlw	159
  4621   001D1C  6FD6               	movwf	214,b	;volatile
  4622   001D1E                     
  4623                           ; BSR set to: 14
  4624                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4625   001D1E  8A84               	bsf	132,5,c	;volatile
  4626   001D20                     
  4627                           ; BSR set to: 14
  4628                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4629   001D20  8C84               	bsf	132,6,c	;volatile
  4630   001D22                     
  4631                           ; BSR set to: 14
  4632                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4633   001D22  9BA7               	bcf	167,5,b	;volatile
  4634   001D24                     
  4635                           ; BSR set to: 14
  4636                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4637   001D24  9DA7               	bcf	167,6,b	;volatile
  4638                           
  4639                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4640   001D26  0E1D               	movlw	29
  4641   001D28  6F1D               	movwf	29,b	;volatile
  4642                           
  4643                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4644   001D2A  0E1E               	movlw	30
  4645   001D2C  6F1C               	movwf	28,b	;volatile
  4646                           
  4647                           ;i2c.c: 18:   RD5PPS=0x1C;
  4648   001D2E  0E1C               	movlw	28
  4649   001D30  6F6F               	movwf	111,b	;volatile
  4650                           
  4651                           ;i2c.c: 19:   RD6PPS=0x1B;
  4652   001D32  0E1B               	movlw	27
  4653   001D34  6F70               	movwf	112,b	;volatile
  4654   001D36                     
  4655                           ; BSR set to: 14
  4656   001D36  0012               	return		;funcret
  4657   001D38                     __end_of_I2C_2_Master_Init:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _ADC_init *****************
  4661 ;; Defined at:
  4662 ;;		line 9 in file "ADC.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;Total ram usage:        0 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_main
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text35
  4690   001DC4                     __ptext35:
  4691                           	callstack 0
  4692   001DC4                     _ADC_init:
  4693                           	callstack 30
  4694   001DC4                     
  4695                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  4696   001DC4  8C86               	bsf	134,6,c	;volatile
  4697                           
  4698                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  4699   001DC6  010E               	movlb	14	; () banked
  4700   001DC8  8DB4               	bsf	180,6,b	;volatile
  4701                           
  4702                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  4703   001DCA  010F               	movlb	15	; () banked
  4704   001DCC  9958               	bcf	88,4,b	;volatile
  4705   001DCE                     
  4706                           ; BSR set to: 15
  4707                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  4708   001DCE  0EFC               	movlw	-4
  4709   001DD0  1758               	andwf	88,f,b	;volatile
  4710                           
  4711                           ;ADC.c: 17:     ADPCH=0b101110;
  4712   001DD2  0E2E               	movlw	46
  4713   001DD4  6F5F               	movwf	95,b	;volatile
  4714   001DD6                     
  4715                           ; BSR set to: 15
  4716                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  4717   001DD6  9460               	bcf	96,2,c	;volatile
  4718   001DD8                     
  4719                           ; BSR set to: 15
  4720                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  4721   001DD8  8860               	bsf	96,4,c	;volatile
  4722   001DDA                     
  4723                           ; BSR set to: 15
  4724                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  4725   001DDA  8E60               	bsf	96,7,c	;volatile
  4726   001DDC                     
  4727                           ; BSR set to: 15
  4728   001DDC  0012               	return		;funcret
  4729   001DDE                     __end_of_ADC_init:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _ADC_getval *****************
  4733 ;; Defined at:
  4734 ;;		line 23 in file "ADC.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;		None
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  tmpval          2    2[COMRAM] unsigned int 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  2    0[COMRAM] unsigned int 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;Total ram usage:        4 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text36
  4762   001CDE                     __ptext36:
  4763                           	callstack 0
  4764   001CDE                     _ADC_getval:
  4765                           	callstack 30
  4766   001CDE                     
  4767                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  4768   001CDE  8060               	bsf	96,0,c	;volatile
  4769   001CE0                     l203:
  4770   001CE0  B060               	btfsc	96,0,c	;volatile
  4771   001CE2  EF75  F00E         	goto	u2261
  4772   001CE6  EF77  F00E         	goto	u2260
  4773   001CEA                     u2261:
  4774   001CEA  EF70  F00E         	goto	l203
  4775   001CEE                     u2260:
  4776   001CEE                     
  4777                           ;ADC.c: 31:     tmpval = ADRESH;
  4778   001CEE  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  4779   001CF2  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  4780   001CF4                     
  4781                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  4782   001CF4  5003               	movf	ADC_getval@tmpval^0,w,c
  4783   001CF6  08FF               	sublw	255
  4784   001CF8  6E03               	movwf	ADC_getval@tmpval^0,c
  4785   001CFA  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  4786   001CFC  A0D8               	btfss	status,0,c
  4787   001CFE  2AE8               	incf	wreg,f,c
  4788   001D00  0800               	sublw	0
  4789   001D02  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  4790   001D04                     
  4791                           ;ADC.c: 37:     return tmpval;
  4792   001D04  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  4793   001D08  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  4794   001D0C  0012               	return		;funcret
  4795   001D0E                     __end_of_ADC_getval:
  4796                           	callstack 0
  4797                           
  4798                           	psect	rparam
  4799   000000                     
  4800                           	psect	config
  4801                           
  4802                           ;Config register CONFIG1L @ 0x300000
  4803                           ;	External Oscillator mode Selection bits
  4804                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4805                           ;	Power-up default value for COSC bits
  4806                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4807   300000                     	org	3145728
  4808   300000  AA                 	db	170
  4809                           
  4810                           ;Config register CONFIG1H @ 0x300001
  4811                           ;	unspecified, using default values
  4812                           ;	Clock Out Enable bit
  4813                           ;	CLKOUTEN = 0x1, unprogrammed default
  4814                           ;	Clock Switch Enable bit
  4815                           ;	CSWEN = 0x1, unprogrammed default
  4816                           ;	Fail-Safe Clock Monitor Enable bit
  4817                           ;	FCMEN = 0x1, unprogrammed default
  4818   300001                     	org	3145729
  4819   300001  FF                 	db	255
  4820                           
  4821                           ;Config register CONFIG3L @ 0x300004
  4822                           ;	WDT Period Select bits
  4823                           ;	WDTCPS = 0x1F, unprogrammed default
  4824                           ;	WDT operating mode
  4825                           ;	WDTE = OFF, WDT Disabled
  4826   300004                     	org	3145732
  4827   300004  9F                 	db	159
  4828                           
  4829                           ;Config register CONFIG3H @ 0x300005
  4830                           ;	unspecified, using default values
  4831                           ;	WDT Window Select bits
  4832                           ;	WDTCWS = 0x7, unprogrammed default
  4833                           ;	WDT input clock selector
  4834                           ;	WDTCCS = 0x7, unprogrammed default
  4835   300005                     	org	3145733
  4836   300005  FF                 	db	255
  4837                           tosu	equ	0xFFF
  4838                           tosh	equ	0xFFE
  4839                           tosl	equ	0xFFD
  4840                           stkptr	equ	0xFFC
  4841                           pclatu	equ	0xFFB
  4842                           pclath	equ	0xFFA
  4843                           pcl	equ	0xFF9
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           indf0	equ	0xFEF
  4851                           postinc0	equ	0xFEE
  4852                           postdec0	equ	0xFED
  4853                           preinc0	equ	0xFEC
  4854                           plusw0	equ	0xFEB
  4855                           fsr0h	equ	0xFEA
  4856                           fsr0l	equ	0xFE9
  4857                           wreg	equ	0xFE8
  4858                           indf1	equ	0xFE7
  4859                           postinc1	equ	0xFE6
  4860                           postdec1	equ	0xFE5
  4861                           preinc1	equ	0xFE4
  4862                           plusw1	equ	0xFE3
  4863                           fsr1h	equ	0xFE2
  4864                           fsr1l	equ	0xFE1
  4865                           bsr	equ	0xFE0
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           postdec2	equ	0xFDD
  4869                           preinc2	equ	0xFDC
  4870                           plusw2	equ	0xFDB
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8

Data Sizes:
    Strings     127
    Constant    0
    Data        1
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      95
    BANK0           160     12      12
    BANK1           256    250     255
    BANK2           256      0     150
    BANK3           256    160     160
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@buf(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S2214$buffer	PTR unsigned char  size(2) Largest target is 0

    S2214$source	PTR const unsigned char  size(2) Largest target is 0

    S466DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S466DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@blue_char(BANK1[50]), send2USART@buf(BANK1[50]), send2USART@clear_char(BANK1[50]), send2USART@green_char(BANK1[50]), 
		 -> send2USART@red_char(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), test@blue_bit(BANK3[50]), test@green_bit(BANK3[50]), 
		 -> test@red_bit(BANK3[50]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[16]), STR_2(CODE[18]), STR_3(CODE[17]), STR_4(CODE[21]), 
		 -> STR_5(CODE[12]), STR_6(CODE[13]), STR_7(CODE[14]), STR_8(CODE[16]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> send2USART@blue_char(BANK1[50]), send2USART@buf(BANK1[50]), send2USART@clear_char(BANK1[50]), send2USART@green_char(BANK1[50]), 
		 -> send2USART@red_char(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), test@blue_bit(BANK3[50]), test@green_bit(BANK3[50]), 
		 -> test@red_bit(BANK3[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(ABS[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(ABS[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[16]), STR_2(CODE[18]), STR_3(CODE[17]), STR_4(CODE[21]), 
		 -> STR_5(CODE[12]), STR_6(CODE[13]), STR_7(CODE[14]), STR_8(CODE[16]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[16]), STR_2(CODE[18]), STR_3(CODE[17]), STR_4(CODE[21]), 
		 -> STR_5(CODE[12]), STR_6(CODE[13]), STR_7(CODE[14]), STR_8(CODE[16]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[16]), STR_2(CODE[18]), STR_3(CODE[17]), STR_4(CODE[21]), 
		 -> STR_5(CODE[12]), STR_6(CODE[13]), STR_7(CODE[14]), STR_8(CODE[16]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_test
    _test->_send2USART
    _send2USART->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_test

Critical Paths under _main in BANK1

    _main->_send2USART
    _test->_send2USART

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_test

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   65052
                                              2 BANK0     10    10      0
                         _ADC_getval
                           _ADC_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                         _send2USART
                               _test
 ---------------------------------------------------------------------------------
 (1) _test                                               163   161      2   38063
                                             88 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                                              0 BANK3    160   160      0
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                         _send2USART
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send2USART                                         260   250     10   25484
                                             78 COMRAM    10     0     10
                                              0 BANK1    250   250      0
                         _ADC2String
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     906
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ADC2String                                          10     6      4   12764
                                             68 COMRAM    10     6      4
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   10359
                                             48 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    8607
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    8119
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1452
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1012
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     841
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_getval
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _send2USART
     _ADC2String
       ___lwdiv
         ___wmul (ARG)
       ___wmul
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
             _read_prec_or_width
               ___wmul
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
   _test
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _send2USART
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     A0      A0      11       62.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      96       9       58.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     FA      FF       7       99.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C       C       5        7.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     59      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      46        0.0%
BITBIGSFRlllhhl     31      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      57        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRlllllh     20      0       0      49        0.0%
BITBIGSFRllllll     1E      0       0      51        0.0%
BITBIGSFRhhllh      1E      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      41        0.0%
BITBIGSFRllllll     11      0       0      52        0.0%
BITBIGSFRllllll      F      0       0      59        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      50        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRlllhll      8      0       0      47        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllhhh      6      0       0      43        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRlllhhh      3      0       0      42        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRlllhlh      2      0       0      45        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      53        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      48        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlh          1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A0      62        0.0%
DATA                 0      0     2A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Mar 09 18:07:12 2024

               _color_read_Red 19C4                _color_read_Blue 1AB4                             l51 1A12  
                           l60 1AB2                             l45 1CDC                             l54 1A62  
                           l48 1DA4                             l57 1B02                             l65 100E  
                           l92 1D36                             l95 1D38                             l98 1D5E  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Clear 1A64  
             _color_read_Green 1A14                            l101 1E1E                            l110 1E00  
                          l200 1DDC                            l104 1E0A                            l113 1B86  
                          l203 1CE0                            l107 1E14                            l205 1CEE  
                          l206 1D0C                            l261 194E                            l413 182C  
                          l416 1628                            l353 1DC2                            l362 1DE0  
                          l419 1D84                            l371 1C74                            l365 1DF4  
                          l650 14BC                            l910 19BA                            l663 16D8  
                          l917 19C2                            _abs 1C76                            _pad 182E  
                 ___awmod@sign 0006                            wreg 0FE8                           l1120 18A0  
                         l1122 18BE                           ?_abs 0007                           l1117 1862  
                         l1125 11F4                           l1142 177E                           l3001 16DA  
                         l1161 1194                           l1138 130A                           l1146 1786  
                         l1171 1C90                           l3011 174C                           l3003 16E2  
                         l3005 1708                           l3013 1754                           l3021 104C  
                         l3101 1DE0                           l1174 1CA8                           l3111 1972  
                         l3007 1710                           l3023 1050                           l3015 1010  
                         l1167 1B44                           l3103 1DF0                           l3201 1D24  
                         l3121 19AC                           l3113 197A                           l3105 1950  
                         l3009 172C                           l3041 10D8                           l3033 106E  
                         l3025 1058                           l3017 1036                           l1097 1C02  
                         l1186 1576                           l1194 1BC6                           l3131 1DF8  
                         l3203 1D88                           l3211 1A14                           l3123 19AE  
                         l3115 1988                           l3107 1958                           l3051 1144  
                         l3043 10E2                           l3027 105A                           l3035 10A4  
                         l3019 103E                           l3133 1DFC                           l3141 1E06  
                         l3213 1A5A                           l3205 19C4                           l3125 19B4  
                         l3117 198E                           l3109 196A                           l1197 1E20  
                         l3053 114E                           l3045 10EC                           l3037 10B4  
                         l3029 1066                           l3061 116E                           l3301 0E8C  
                         l3127 1E16                           l3135 1E0C                           l3151 1B82  
                         l3143 1B48                           l3223 1A64                           l3207 1A0A  
                         l3119 19A4                           l3047 110C                           l3039 10C8  
                         l3231 15EC                           l3311 0F24                           l3303 0EF4  
                         l3129 1E1A                           l3137 1E10                           l3153 1B84  
                         l3145 1B4C                           l3217 1AB4                           l3225 1AAA  
                         l3057 1162                           l3049 112C                           l3081 1B3C  
                         l3161 1C50                           l3233 15F8                           l3321 0FBA  
                         l3313 0F4E                           l3305 0F00                           l3331 1DCE  
                         l3147 1B54                           l3139 1E02                           l3219 1AFA  
                         l3075 1B04                           l3091 1BE4                           l3163 1C54  
                         l3235 1604                           l3323 0FC6                           l3315 0F78  
                         l3307 0F0C                           l3333 1DD6                           l3341 1DB0  
                         l3149 1B5C                           l3077 1B0C                           l3093 1BF4  
                         l3085 1BC8                           l3165 1C5C                           l3157 1C3E  
                         l3237 1610                           l3229 1578                           l3325 0FF2  
                         l3317 0FA2                           l3309 0F18                           l3335 1DD8  
                         l3191 1D0E                           l3351 18C0                           l3343 1DB2  
                         l3079 1B1C                           l3087 1BD4                           l3183 1788  
                         l3159 1C42                           l3239 161C                           l3327 0FF8  
                         l3319 0FAE                           l3337 1DDA                           l3329 1DC4  
                         l3193 1D18                           l3097 1D38                           l3361 1928  
                         l3353 18D0                           l3345 1DBC                           l3089 1BDC  
                         l3185 17A4                           l3441 1318                           l3433 130C  
                         l3195 1D1E                           l3099 1D48                           l3291 1CC8  
                         l3371 1942                           l3363 192A                           l3355 18F6  
                         l3347 1DBE                           l3339 1DA6                           l3187 17F4  
                         l3451 133A                           l3443 1324                           l3435 1310  
                         l3197 1D20                           l3293 1CD2                           l3285 1CAA  
                         l3373 194C                           l3365 1934                           l3357 18FA  
                         l3349 1DC0                           l2901 1644                           l3189 1814  
                         l3461 1356                           l3453 1342                           l3445 132A  
                         l3437 1314                           l3375 1CDE                           l3199 1D22  
                         l3287 1CAE                           l3367 1936                           l3359 191E  
                         l2911 1678                           l2903 1648                           l2831 1504  
                         l2823 14BE                           l3295 0E82                           l3471 1376  
                         l3463 136E                           l3455 134A                           l3447 132E  
                         l3439 1318                           l3377 1CF4                           l3289 1CB8  
                         l3369 1940                           l2921 16B2                           l2913 1680  
                         l2905 1656                           l2833 1536                           l2825 14CE  
                         l2841 1BA2                           l3481 138A                           l3473 1378  
                         l3465 1370                           l3457 134E                           l3449 1332  
                         l3379 1D04                           l2851 13FA                           l2915 168E  
                         l2923 16B8                           l2907 165E                           l2827 14DE  
                         l2843 1BA6                           l2931 182E                           l3491 13E6  
                         l3483 1396                           l3475 137A                           l3467 1372  
                         l3459 1352                           l2861 1426                           l2853 13FE  
                         l2925 16C8                           l2917 16A4                           l2909 1670  
                         l2829 14E8                           l2837 1B88                           l2941 187E  
                         l2933 183C                           l2845 1D60                           l3485 13A2  
                         l3477 137C                           l3469 1374                           ?_pad 000F  
                         l2871 1454                           l2863 142E                           l2855 140C  
                         l2927 16D0                           l2919 16AC                           l2839 1B94  
                         l2943 1882                           l2935 184C                           l2951 1196  
                         l2847 1D7C                           l3487 13AE                           l3479 137E  
                         l2881 148E                           l2873 145C                           l2865 1432  
                         l2857 1414                           l2945 18AE                           l2937 185A  
                         l2961 11CC                           l2953 119A                           l3489 13BA  
                         l2891 14B4                           l2883 1490                           l2875 146A  
                         l2867 143A                           l2859 1418                           l2947 1C76  
                         l2939 186E                           l2971 1206                           l2963 11DC  
                         l2955 11AE                           l3587 1096                           l2885 1496  
                         l2877 1470                           l2869 144C                           l2949 1C84  
                         l2973 120C                           l2981 1264                           l2965 11E8  
                         l2957 11B6                           l2879 1486                           l2887 149C  
                         l2895 162A                           l2983 127E                           l2991 12C8  
                         l2975 123E                           l2967 11F0                           l2959 11C6  
                         l2889 14AC                           l2897 162E                           l2993 12D8  
                         l2985 1290                           l2977 1242                           l2969 11FC  
                         l2899 163C                           l2995 12DE                           l2987 12A0  
                         l2979 1248                           l2997 12EE                           l2989 12BA  
                         STR_1 0E49                           STR_2 0E16                           STR_3 0E28  
                         STR_4 0E01                           STR_5 0E74                           STR_6 0E67  
                         STR_7 0E59                           STR_8 0E39                           u2000 1D48  
                         u2001 1D44                           u2010 1D5E                           u2011 1D5A  
                         u2020 1DF0                           u2021 1DEC                           u2030 196A  
                         u2031 1966                           u2040 1988                           u2200 0EE2  
                         u2041 1984                           u2201 0EDA                           u2050 19A4  
                         u2051 19A0                           u2060 1B70                           u2220 0F42  
                         u2061 1B68                           u2221 0F3A                           u2230 0F6C  
                         u2231 0F64                           u1600 14CE                           u2080 1C74  
                         u2240 0F96                           u2160 0E9E                   _BAUD4CONbits 0EE9  
                         u1601 14CA                           u2081 1C70                           u2241 0F8E  
                         u2161 0E96                           u1610 14DE                           u2250 100E  
                         u2218 0EE4                           u1611 14DA                           u2251 100A  
                         u2260 1CEE                           u1700 14AC                           u1620 1504  
                         u2228 0F44                           u2180 0EBE                           u2261 1CEA  
                         u1701 14A8                           u1621 1500                           u2317 1C56  
                         u2181 0EB6                           u2078 1B72                           u1710 163C  
                         u1630 1536                           u2238 0F6E                           u1711 1638  
                         u1631 1532                           u2327 181E                           u1720 1656  
                         u1640 1BC6                           u1800 18AE                           u2248 0F98  
                         u2337 1CBE                           u1721 1652                           u1641 1BC2  
                         u1801 18AA                           u1650 140C                           u1730 1670  
                         u1810 1C84                           u2178 0EA0                           _T2PR 0FBC  
                         u1651 1408                           u1731 166C                           u1811 1C80  
                         u1660 1426                           u1740 168E                           u1900 12C8  
                         u1820 11AA                           u1661 1422                           u1741 168A  
                         u1901 12C4                           u1821 11A4                           u1670 144C  
                         u1750 16A4                           u1910 12D8                           u1830 11AC  
                         u2198 0EC0                           u1671 1448                           u1751 16A0  
                         u1911 12D4                           u1680 146A                           u1760 16C8  
                         u1840 11C6                           u1920 1708                           u1681 1466  
                         u1761 16C4                           u1841 11C2                           u1921 1704  
                         u1690 1486                           u1770 183C                           u1850 11DC  
                         u1930 177E                           u1691 1482                           u1771 1838  
                         u1851 11D8                           u1931 177A                           u1780 185A  
                         u1860 127E                           u1940 1036                           u1781 1856  
                         u1861 127A                           u1941 1032                           u1790 18A0  
                         u1870 1290                           u1950 10B4                           u1791 189C  
                         u1871 128C                           u1951 10B0                           u1880 12A0  
                         u1960 10D8                           u1881 129C                           u1961 10D4  
                         u1890 12BA                           u1970 110C                           u1891 12B6  
                         u1971 1108                           u1980 112C                           u1981 1128  
                         u1990 1B3C                           u1991 1B38                           abs@a 0007  
                         _dbuf 0264                           _main 130C                           _dtoa 1196  
                         _prec 01FC                           _test 0E82                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 1DDE         __end_of_color_read_Red 1A14                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0014                          ?_main 0001  
                        ?_dtoa 0017                          _ADPCH 0F5F                __end_of___awdiv 14BE  
              __end_of___awmod 16DA                          ?_test 0060                ___awdiv@divisor 0003  
              __end_of___lwdiv 19C4                ___awdiv@counter 0005                   vfpfcnvrt@fmt 0023  
      __end_of_sendCharSerial4 1DF6     __end_of_I2C_2_Master_Start 1E20     __end_of_I2C_2_Master_Write 1E02  
                        _flags 005A            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 14BE                          _fputs 1B88                          pad@fp 000F  
                        _width 01FA                          _putch 1E20                          dtoa@d 0018  
                        dtoa@i 0020                          dtoa@p 001C                          dtoa@s 001F  
                        dtoa@w 001D                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 1C04        __end_of_color_read_Blue 1B04          _I2C_2_Master_RepStart 1E02  
              ?_color_read_Red 0005                __initialization 1C04                   __end_of_main 13FA  
                 __end_of_dtoa 130C                   __end_of_test 1010                   ??_ADC2String 0049  
                       ??_main 005A                         ??_dtoa 001A                         ??_test 0059  
                __activetblptr 0003     __end_of_read_prec_or_width 1788                         ?_fputc 0001  
                       ?_fputs 0009                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
                ADC2String@buf 0045               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69            ADC2String@frac_part 004B  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         _RG6PPS 0E88  
                vfpfcnvrt@done 002B       __end_of_color_click_init 1CDE                         _RX4PPS 0E15  
           __end_of_ADC2String 182E                         _TX4REG 0EE4                   ??_ADC_getval 0003  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 0030                         ___wmul 1D60  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___lwdiv 000B  
         read_prec_or_width@ap 0008                         clear_0 1C1C               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         _motorL 028D                         _motorR 0284  
                       isa$std 0001                ___awmod@counter 0005                         pad@buf 0010  
                       dtoa@fp 0017             send2USART@red_char 0132                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                         fputs@s 0009  
                 __mediumconst 0000                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                      ?_ADC_init 0001               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 1B46              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0038             __end_of_ADC_getval 1D0E                     __accesstop 0060  
      __end_of__initialization 1C38       __end_of_color_read_Clear 1AB4       __end_of_color_read_Green 1A64  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK1 1E22                  __end_of_fputc 1578  
                __end_of_fputs 1BC8                  __end_of_putch 1E22                     ??_ADC_init 0001  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK1 01FA                     __pbssBANK2 0200              _color_writetoaddr 1D86  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
            main@battery_level 006A                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007        send2USART@battery_level 004F  
    __end_of_color_writetoaddr 1DA6                      _ADREFbits 0F58             _I2C_2_Master_Start 1E16  
                   _initUSART4 1DA6             _I2C_2_Master_Write 1DF6                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___awdiv 13FA                        ___awmod 162A            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 1950            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D  
          send2USART@blue_char 0164                   __psmallconst 0E00                        __pcinit 1C04  
                      __ramtop 0E00                     _send2USART 1578                        __ptext0 130C  
                      __ptext1 0E82                        __ptext2 1578                        __ptext3 1C3E  
                      __ptext4 1DDE                        __ptext5 1788                        __ptext6 1BC8  
                      __ptext7 1B04                        __ptext8 1010                        __ptext9 16DA  
                    _T2CONbits 0FBD          read_prec_or_width@fmt 0007               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005F                        _sprintf 1BC8  
                      main@red 0062           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 1C38               ADC_getval@tmpval 0003                        fputc@fp 0003  
                      fputs@fp 000B              ?_color_click_init 0001             _read_prec_or_width 16DA  
           ??_color_click_init 0005                    test@red_bit 0300                        test@red 0396  
            __end_of_vfpfcnvrt 1196                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0027                     ??_vfprintf 0030                _initDCmotorsPWM 18C0  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
         ??_read_prec_or_width 0009       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0250  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 1D86                    ?_send2USART 004F            color_read_Clear@tmp 000A  
          start_initialization 1C04                    __end_of_abs 1CAA                    __end_of_pad 18C0  
                _TxBufWriteCnt 005D            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 1950  
                  vfprintf@fmt 002E             ADC2String@int_part 004D                       ??___wmul 0005  
                  __pdataBANK1 01FE                    __pbssCOMRAM 005A                  __pcstackBANK0 0060  
                __pcstackBANK1 0100                  __pcstackBANK3 0300               ___lwdiv@dividend 0007  
                    _dtoa$2293 001A                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___lwdiv 0007                   _readingIndex 005B           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 1D38  
            _I2C_2_Master_Init 1D0E              _I2C_2_Master_Read 1B46              _I2C_2_Master_Stop 1E0C  
                 _RxBufReadCnt 005E                       _ADC_init 1DC4             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0031  
            _sendStringSerial4 1C3E            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATGbits 0F7F              ADC2String@ADC_val 0047  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                     _ADC2String 1788  
                    _vfpfcnvrt 1010                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 1D60  
    __end_of_I2C_2_Master_Init 1D38      __end_of_I2C_2_Master_Read 1B88              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 1E16    I2C_2_Master_Write@data_byte 0002                      main@clear 0068  
                  _ldrReadings 023C                      main@green 0066              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005C                send2USART@clear 0057      __end_of_sendStringSerial4 1C76  
              send2USART@green 0053  __end_of_I2C_2_Master_RepStart 1E0C             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     _ADC_getval 1CDE  
                   vfprintf@ap 002F                       __Lrparam 0000           send2USART@clear_char 01C8  
                   vfprintf@fp 002D                     ?_vfpfcnvrt 0022                   ??_send2USART 0059  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                       _dataFlag 01FE  
                   sprintf@fmt 0033                ___lwdiv@divisor 0009             __end_of_initUSART4 1DC4  
              ___lwdiv@counter 000B                       __ptext10 1D60                       __ptext11 1196  
                     __ptext20 19C4                       __ptext12 182E                       __ptext21 1A14  
                     __ptext13 1B88                       __ptext30 1DF6                       __ptext22 1A64  
                     __ptext14 14BE                       __ptext31 1E0C                       __ptext23 1AB4  
                     __ptext15 1E20                       __ptext32 1E16                       __ptext24 1E02  
                     __ptext16 1C76                       __ptext33 1D38                       __ptext25 1B46  
                     __ptext17 162A                       __ptext34 1D0E                       __ptext26 1DA6  
                     __ptext18 13FA                       __ptext35 1DC4                       __ptext27 18C0  
                     __ptext19 1950                       __ptext36 1CDE                       __ptext28 1CAA  
                     __ptext29 1D86                  test@green_bit 0332                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA             __end_of_send2USART 162A           send2USART@green_char 0196  
                    test@clear 039C                      test@combo 039E                      test@green 039A  
                     isa$xinst 0000                     _RC4STAbits 0EE7                    ?_ADC2String 0045  
                     _vfprintf 1B04                       main@blue 0064                 send2USART@blue 0055  
            test@battery_level 0060                   test@blue_bit 0364                      sprintf@ap 0038  
                     test@blue 0398                    ?_ADC_getval 0001                  send2USART@buf 0100  
                send2USART@red 0051                    ??_vfpfcnvrt 0025               _color_click_init 1CAA  
                     sprintf@f 0039                       sprintf@s 0031                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                     _TX4STAbits 0EE8                _sendCharSerial4 1DDE  
