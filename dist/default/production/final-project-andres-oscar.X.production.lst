

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 00:18:49 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 21/07/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F67K40 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataBANK0
   111   003CD8                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _dataFlag
   115   003CD8  01                 	db	1
   116   000000                     _TX4REG	set	3812
   117   000000                     _RC4STAbits	set	3815
   118   000000                     _SP4BRGH	set	3814
   119   000000                     _LATFbits	set	3966
   120   000000                     _LATHbits	set	3968
   121   000000                     _TRISFbits	set	3974
   122   000000                     _TRISAbits	set	3969
   123   000000                     _TRISEbits	set	3973
   124   000000                     _TRISGbits	set	3975
   125   000000                     _TRISDbits	set	3972
   126   000000                     _PORTFbits	set	3982
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _RX4PPS	set	3605
   129   000000                     _SSP2CLKPPS	set	3612
   130   000000                     _SSP2DATPPS	set	3613
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _LATCbits	set	3963
   138   000000                     _LATDbits	set	3964
   139   000000                     _CCPR2H	set	4006
   140   000000                     _CCPR1H	set	4010
   141   000000                     _RC4REG	set	3811
   142   000000                     _SP4BRGL	set	3813
   143   000000                     _TX4STAbits	set	3816
   144   000000                     _BAUD4CONbits	set	3817
   145   000000                     _SSP2CON2	set	3802
   146   000000                     _CCPR4H	set	3873
   147   000000                     _CCPR3H	set	3877
   148   000000                     _SSP2STAT	set	3800
   149   000000                     _ANSELFbits	set	3764
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _PIE4bits	set	3629
   152   000000                     _PIR4bits	set	3639
   153   000000                     _RC0PPS	set	3682
   154   000000                     _RC7PPS	set	3689
   155   000000                     _RD5PPS	set	3695
   156   000000                     _RE2PPS	set	3700
   157   000000                     _RD6PPS	set	3696
   158   000000                     _CCP1CONbits	set	4011
   159   000000                     _CCPTMRS0bits	set	4013
   160   000000                     _T2PR	set	4028
   161   000000                     _T2CONbits	set	4029
   162   000000                     _CCP2CONbits	set	4007
   163   000000                     _CCP3CONbits	set	3878
   164   000000                     _ADREFbits	set	3928
   165   000000                     _CCP4CONbits	set	3874
   166   000000                     _TRISHbits	set	3976
   167   000000                     _TRISCbits	set	3971
   168   000000                     _ADPCH	set	3935
   169   000000                     _ADRESH	set	3940
   170   000000                     _ADCON0bits	set	3936
   171   000000                     _RE4PPS	set	3702
   172   000000                     _RG6PPS	set	3720
   173   000000                     _T2CLKCONbits	set	4031
   174   000000                     _T2HLTbits	set	4030
   175                           
   176                           	psect	smallconst
   177   000E00                     __psmallconst:
   178                           	callstack 0
   179   000E00  00                 	db	0
   180   000E01                     STR_7:
   181                           
   182                           ; BSR set to: 15
   183   000E01  43                 	db	67	;'C'
   184   000E02  61                 	db	97	;'a'
   185   000E03  6C                 	db	108	;'l'
   186   000E04  69                 	db	105	;'i'
   187   000E05  62                 	db	98	;'b'
   188   000E06  72                 	db	114	;'r'
   189   000E07  61                 	db	97	;'a'
   190   000E08  74                 	db	116	;'t'
   191   000E09  69                 	db	105	;'i'
   192   000E0A  6F                 	db	111	;'o'
   193   000E0B  6E                 	db	110	;'n'
   194   000E0C  20                 	db	32
   195   000E0D  73                 	db	115	;'s'
   196   000E0E  74                 	db	116	;'t'
   197   000E0F  61                 	db	97	;'a'
   198   000E10  74                 	db	116	;'t'
   199   000E11  65                 	db	101	;'e'
   200   000E12  20                 	db	32
   201   000E13  3D                 	db	61	;'='
   202   000E14  20                 	db	32
   203   000E15  20                 	db	32
   204   000E16  77                 	db	119	;'w'
   205   000E17  68                 	db	104	;'h'
   206   000E18  69                 	db	105	;'i'
   207   000E19  74                 	db	116	;'t'
   208   000E1A  65                 	db	101	;'e'
   209   000E1B  20                 	db	32
   210   000E1C  6C                 	db	108	;'l'
   211   000E1D  69                 	db	105	;'i'
   212   000E1E  67                 	db	103	;'g'
   213   000E1F  68                 	db	104	;'h'
   214   000E20  74                 	db	116	;'t'
   215   000E21  00                 	db	0
   216   000E22                     STR_3:
   217                           
   218                           ; BSR set to: 15
   219   000E22  43                 	db	67	;'C'
   220   000E23  61                 	db	97	;'a'
   221   000E24  6C                 	db	108	;'l'
   222   000E25  69                 	db	105	;'i'
   223   000E26  62                 	db	98	;'b'
   224   000E27  72                 	db	114	;'r'
   225   000E28  61                 	db	97	;'a'
   226   000E29  74                 	db	116	;'t'
   227   000E2A  69                 	db	105	;'i'
   228   000E2B  6F                 	db	111	;'o'
   229   000E2C  6E                 	db	110	;'n'
   230   000E2D  20                 	db	32
   231   000E2E  73                 	db	115	;'s'
   232   000E2F  74                 	db	116	;'t'
   233   000E30  61                 	db	97	;'a'
   234   000E31  74                 	db	116	;'t'
   235   000E32  65                 	db	101	;'e'
   236   000E33  20                 	db	32
   237   000E34  3D                 	db	61	;'='
   238   000E35  20                 	db	32
   239   000E36  67                 	db	103	;'g'
   240   000E37  72                 	db	114	;'r'
   241   000E38  65                 	db	101	;'e'
   242   000E39  65                 	db	101	;'e'
   243   000E3A  6E                 	db	110	;'n'
   244   000E3B  20                 	db	32
   245   000E3C  0A                 	db	10
   246   000E3D  0D                 	db	13
   247   000E3E  00                 	db	0
   248   000E3F                     STR_5:
   249                           
   250                           ; BSR set to: 15
   251   000E3F  43                 	db	67	;'C'
   252   000E40  61                 	db	97	;'a'
   253   000E41  6C                 	db	108	;'l'
   254   000E42  69                 	db	105	;'i'
   255   000E43  62                 	db	98	;'b'
   256   000E44  72                 	db	114	;'r'
   257   000E45  61                 	db	97	;'a'
   258   000E46  74                 	db	116	;'t'
   259   000E47  69                 	db	105	;'i'
   260   000E48  6F                 	db	111	;'o'
   261   000E49  6E                 	db	110	;'n'
   262   000E4A  20                 	db	32
   263   000E4B  73                 	db	115	;'s'
   264   000E4C  74                 	db	116	;'t'
   265   000E4D  61                 	db	97	;'a'
   266   000E4E  74                 	db	116	;'t'
   267   000E4F  65                 	db	101	;'e'
   268   000E50  3D                 	db	61	;'='
   269   000E51  20                 	db	32
   270   000E52  62                 	db	98	;'b'
   271   000E53  6C                 	db	108	;'l'
   272   000E54  75                 	db	117	;'u'
   273   000E55  65                 	db	101	;'e'
   274   000E56  20                 	db	32
   275   000E57  0A                 	db	10
   276   000E58  0D                 	db	13
   277   000E59  00                 	db	0
   278   000E5A                     STR_9:
   279                           
   280                           ; BSR set to: 15
   281   000E5A  43                 	db	67	;'C'
   282   000E5B  41                 	db	65	;'A'
   283   000E5C  4C                 	db	76	;'L'
   284   000E5D  49                 	db	73	;'I'
   285   000E5E  42                 	db	66	;'B'
   286   000E5F  52                 	db	82	;'R'
   287   000E60  41                 	db	65	;'A'
   288   000E61  54                 	db	84	;'T'
   289   000E62  49                 	db	73	;'I'
   290   000E63  4F                 	db	79	;'O'
   291   000E64  4E                 	db	78	;'N'
   292   000E65  20                 	db	32
   293   000E66  43                 	db	67	;'C'
   294   000E67  4F                 	db	79	;'O'
   295   000E68  4D                 	db	77	;'M'
   296   000E69  50                 	db	80	;'P'
   297   000E6A  4C                 	db	76	;'L'
   298   000E6B  45                 	db	69	;'E'
   299   000E6C  54                 	db	84	;'T'
   300   000E6D  45                 	db	69	;'E'
   301   000E6E  44                 	db	68	;'D'
   302   000E6F  20                 	db	32
   303   000E70  0A                 	db	10
   304   000E71  0D                 	db	13
   305   000E72  00                 	db	0
   306   000E73                     STR_1:
   307                           
   308                           ; BSR set to: 15
   309   000E73  43                 	db	67	;'C'
   310   000E74  61                 	db	97	;'a'
   311   000E75  6C                 	db	108	;'l'
   312   000E76  69                 	db	105	;'i'
   313   000E77  62                 	db	98	;'b'
   314   000E78  72                 	db	114	;'r'
   315   000E79  61                 	db	97	;'a'
   316   000E7A  74                 	db	116	;'t'
   317   000E7B  69                 	db	105	;'i'
   318   000E7C  6F                 	db	111	;'o'
   319   000E7D  6E                 	db	110	;'n'
   320   000E7E  20                 	db	32
   321   000E7F  73                 	db	115	;'s'
   322   000E80  74                 	db	116	;'t'
   323   000E81  61                 	db	97	;'a'
   324   000E82  74                 	db	116	;'t'
   325   000E83  65                 	db	101	;'e'
   326   000E84  20                 	db	32
   327   000E85  3D                 	db	61	;'='
   328   000E86  20                 	db	32
   329   000E87  72                 	db	114	;'r'
   330   000E88  65                 	db	101	;'e'
   331   000E89  64                 	db	100	;'d'
   332   000E8A  00                 	db	0
   333   000E8B                     
   334                           ; BSR set to: 15
   335   000E8B  56                 	db	86	;'V'
   336   000E8C  6F                 	db	111	;'o'
   337   000E8D  6C                 	db	108	;'l'
   338   000E8E  74                 	db	116	;'t'
   339   000E8F  61                 	db	97	;'a'
   340   000E90  67                 	db	103	;'g'
   341   000E91  65                 	db	101	;'e'
   342   000E92  20                 	db	32
   343   000E93  3D                 	db	61	;'='
   344   000E94  20                 	db	32
   345   000E95  25                 	db	37
   346   000E96  64                 	db	100	;'d'
   347   000E97  2E                 	db	46
   348   000E98  25                 	db	37
   349   000E99  30                 	db	48	;'0'
   350   000E9A  32                 	db	50	;'2'
   351   000E9B  64                 	db	100	;'d'
   352   000E9C  2C                 	db	44
   353   000E9D  20                 	db	32
   354   000E9E  20                 	db	32
   355   000E9F  00                 	db	0
   356   000EA0                     STR_13:
   357                           
   358                           ; BSR set to: 15
   359   000EA0  68                 	db	104	;'h'
   360   000EA1  75                 	db	117	;'u'
   361   000EA2  65                 	db	101	;'e'
   362   000EA3  3D                 	db	61	;'='
   363   000EA4  25                 	db	37
   364   000EA5  30                 	db	48	;'0'
   365   000EA6  33                 	db	51	;'3'
   366   000EA7  64                 	db	100	;'d'
   367   000EA8  2C                 	db	44
   368   000EA9  20                 	db	32
   369   000EAA  20                 	db	32
   370   000EAB  00                 	db	0
   371   000EAC                     STR_11:
   372                           
   373                           ; BSR set to: 15
   374   000EAC  63                 	db	99	;'c'
   375   000EAD  6C                 	db	108	;'l'
   376   000EAE  65                 	db	101	;'e'
   377   000EAF  61                 	db	97	;'a'
   378   000EB0  72                 	db	114	;'r'
   379   000EB1  3D                 	db	61	;'='
   380   000EB2  25                 	db	37
   381   000EB3  30                 	db	48	;'0'
   382   000EB4  33                 	db	51	;'3'
   383   000EB5  64                 	db	100	;'d'
   384   000EB6  00                 	db	0
   385   000EB7                     STR_2:
   386                           
   387                           ; BSR set to: 15
   388   000EB7  2E                 	db	46
   389   000EB8  00                 	db	0
   390   000EB9  00                 	db	0	; dummy byte at the end
   391   000000                     
   392                           ; #config settings
   393                           
   394                           	psect	cinit
   395   0039A6                     __pcinit:
   396                           	callstack 0
   397   0039A6                     start_initialization:
   398                           	callstack 0
   399   0039A6                     __initialization:
   400                           	callstack 0
   401                           
   402                           ; Initialize objects allocated to BANK0 (1 bytes)
   403                           ; load TBLPTR registers with __pidataBANK0
   404   0039A6  0ED8               	movlw	low __pidataBANK0
   405   0039A8  6EF6               	movwf	tblptrl,c
   406   0039AA  0E3C               	movlw	high __pidataBANK0
   407   0039AC  6EF7               	movwf	tblptrh,c
   408   0039AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   409   0039B0  6EF8               	movwf	tblptru,c
   410   0039B2  0009               	tblrd		*+	;fetch initializer
   411   0039B4  CFF5 F0FB          	movff	tablat,__pdataBANK0
   412                           
   413                           ; Clear objects allocated to BANK1 (140 bytes)
   414   0039B8  EE01  F000         	lfsr	0,__pbssBANK1
   415   0039BC  0E8C               	movlw	140
   416   0039BE                     clear_0:
   417   0039BE  6AEE               	clrf	postinc0,c
   418   0039C0  06E8               	decf	wreg,f,c
   419   0039C2  E1FD               	bnz	clear_0
   420                           
   421                           ; Clear objects allocated to BANK0 (39 bytes)
   422   0039C4  EE00  F0D4         	lfsr	0,__pbssBANK0
   423   0039C8  0E27               	movlw	39
   424   0039CA                     clear_1:
   425   0039CA  6AEE               	clrf	postinc0,c
   426   0039CC  06E8               	decf	wreg,f,c
   427   0039CE  E1FD               	bnz	clear_1
   428                           
   429                           ; Clear objects allocated to COMRAM (5 bytes)
   430   0039D0  6A5F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   431   0039D2  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   432   0039D4  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   433   0039D6  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   434   0039D8  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   435   0039DA                     end_of_initialization:
   436                           	callstack 0
   437   0039DA                     __end_of__initialization:
   438                           	callstack 0
   439   0039DA  0100               	movlb	0
   440   0039DC  EF45  F013         	goto	_main	;jump to C main() function
   441                           
   442                           	psect	bssCOMRAM
   443   00005B                     __pbssCOMRAM:
   444                           	callstack 0
   445   00005B                     _flags:
   446                           	callstack 0
   447   00005B                     	ds	1
   448   00005C                     _TxBufReadCnt:
   449                           	callstack 0
   450   00005C                     	ds	1
   451   00005D                     _TxBufWriteCnt:
   452                           	callstack 0
   453   00005D                     	ds	1
   454   00005E                     _RxBufReadCnt:
   455                           	callstack 0
   456   00005E                     	ds	1
   457   00005F                     _RxBufWriteCnt:
   458                           	callstack 0
   459   00005F                     	ds	1
   460                           
   461                           	psect	bssBANK0
   462   0000D4                     __pbssBANK0:
   463                           	callstack 0
   464   0000D4                     _width:
   465                           	callstack 0
   466   0000D4                     	ds	2
   467   0000D6                     _prec:
   468                           	callstack 0
   469   0000D6                     	ds	2
   470   0000D8                     _readingIndex:
   471                           	callstack 0
   472   0000D8                     	ds	1
   473   0000D9                     _motorR:
   474                           	callstack 0
   475   0000D9                     	ds	9
   476   0000E2                     _motorL:
   477                           	callstack 0
   478   0000E2                     	ds	9
   479   0000EB                     _colorCurrent:
   480                           	callstack 0
   481   0000EB                     	ds	8
   482   0000F3                     _colorCalibration:
   483                           	callstack 0
   484   0000F3                     	ds	8
   485                           
   486                           	psect	dataBANK0
   487   0000FB                     __pdataBANK0:
   488                           	callstack 0
   489   0000FB                     _dataFlag:
   490                           	callstack 0
   491   0000FB                     	ds	1
   492                           
   493                           	psect	bssBANK1
   494   000100                     __pbssBANK1:
   495                           	callstack 0
   496   000100                     _EUSART4TXbuf:
   497                           	callstack 0
   498   000100                     	ds	60
   499   00013C                     _ldrReadings:
   500                           	callstack 0
   501   00013C                     	ds	20
   502   000150                     _EUSART4RXbuf:
   503                           	callstack 0
   504   000150                     	ds	20
   505   000164                     _hue:
   506                           	callstack 0
   507   000164                     	ds	8
   508   00016C                     _dbuf:
   509                           	callstack 0
   510   00016C                     	ds	32
   511                           
   512                           	psect	cstackBANK0
   513   000060                     __pcstackBANK0:
   514                           	callstack 0
   515   000060                     convert_rgb2hue@c_char:
   516                           	callstack 0
   517   000060                     send2USART@hue_char:
   518                           	callstack 0
   519                           
   520                           ; 50 bytes @ 0x0
   521   000060                     	ds	20
   522   000074                     convert_rgb2hue@redcurrent:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x14
   526   000074                     	ds	4
   527   000078                     convert_rgb2hue@redmax:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x18
   531   000078                     	ds	4
   532   00007C                     convert_rgb2hue@greencurrent:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x1C
   536   00007C                     	ds	4
   537   000080                     convert_rgb2hue@greenmax:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x20
   541   000080                     	ds	4
   542   000084                     convert_rgb2hue@bluecurrent:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x24
   546   000084                     	ds	4
   547   000088                     convert_rgb2hue@bluemax:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x28
   551   000088                     	ds	4
   552   00008C                     convert_rgb2hue@clearcurrent:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x2C
   556   00008C                     	ds	4
   557   000090                     convert_rgb2hue@clearmax:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x30
   561   000090                     	ds	4
   562   000094                     convert_rgb2hue@c:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x34
   566   000094                     	ds	4
   567   000098                     _convert_rgb2hue$388:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x38
   571   000098                     	ds	4
   572   00009C                     _convert_rgb2hue$389:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x3C
   576   00009C                     	ds	4
   577   0000A0                     _convert_rgb2hue$390:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x40
   581   0000A0                     	ds	4
   582   0000A4                     _convert_rgb2hue$391:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x44
   586   0000A4                     	ds	4
   587   0000A8                     convert_rgb2hue@min:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x48
   591   0000A8                     	ds	4
   592   0000AC                     convert_rgb2hue@diff:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x4C
   596   0000AC                     	ds	4
   597   0000B0                     convert_rgb2hue@max:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x50
   601   0000B0                     	ds	4
   602   0000B4                     convert_rgb2hue@hue:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x54
   606   0000B4                     	ds	4
   607   0000B8                     convert_rgb2hue@r:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x58
   611   0000B8                     	ds	4
   612   0000BC                     convert_rgb2hue@g:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x5C
   616   0000BC                     	ds	4
   617   0000C0                     convert_rgb2hue@b:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x60
   621   0000C0                     	ds	4
   622   0000C4                     ??_main:
   623                           
   624                           ; 1 bytes @ 0x64
   625   0000C4                     	ds	2
   626   0000C6                     main@current:
   627                           	callstack 0
   628                           
   629                           ; 4 bytes @ 0x66
   630   0000C6                     	ds	4
   631   0000CA                     main@maximum:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x6A
   635   0000CA                     	ds	4
   636   0000CE                     main@clear_norm:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x6E
   640   0000CE                     	ds	4
   641   0000D2                     main@hue:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x72
   645   0000D2                     	ds	2
   646                           
   647                           	psect	cstackCOMRAM
   648   000001                     __pcstackCOMRAM:
   649                           	callstack 0
   650   000001                     ??_I2C_2_Master_Idle:
   651   000001                     ?___wmul:
   652                           	callstack 0
   653   000001                     ?___awdiv:
   654                           	callstack 0
   655   000001                     ?___awmod:
   656                           	callstack 0
   657   000001                     ?___fladd:
   658                           	callstack 0
   659   000001                     ?___flmul:
   660                           	callstack 0
   661   000001                     ?___fltol:
   662                           	callstack 0
   663   000001                     ?___xxtofl:
   664                           	callstack 0
   665   000001                     sendCharSerial4@charToSend:
   666                           	callstack 0
   667   000001                     initDCmotorsPWM@PWMperiod:
   668                           	callstack 0
   669   000001                     ___wmul@multiplier:
   670                           	callstack 0
   671   000001                     ___awdiv@dividend:
   672                           	callstack 0
   673   000001                     ___awmod@dividend:
   674                           	callstack 0
   675   000001                     fputc@c:
   676                           	callstack 0
   677   000001                     ___fleq@ff1:
   678                           	callstack 0
   679   000001                     ___flge@ff1:
   680                           	callstack 0
   681   000001                     ___fltol@f1:
   682                           	callstack 0
   683   000001                     ___fladd@b:
   684                           	callstack 0
   685   000001                     ___flmul@b:
   686                           	callstack 0
   687   000001                     ___xxtofl@val:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x0
   691   000001                     	ds	1
   692   000002                     ??_I2C_2_Master_Read:
   693   000002                     I2C_2_Master_Write@data_byte:
   694                           	callstack 0
   695   000002                     sendStringSerial4@string:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x1
   699   000002                     	ds	1
   700   000003                     color_writetoaddr@value:
   701                           	callstack 0
   702   000003                     I2C_2_Master_Read@ack:
   703                           	callstack 0
   704   000003                     fputc@fp:
   705                           	callstack 0
   706   000003                     ___wmul@multiplicand:
   707                           	callstack 0
   708   000003                     ___awdiv@divisor:
   709                           	callstack 0
   710   000003                     ___awmod@divisor:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714   000003                     	ds	1
   715   000004                     ??_fputc:
   716   000004                     color_writetoaddr@address:
   717                           	callstack 0
   718   000004                     I2C_2_Master_Read@tmp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x3
   722   000004                     	ds	1
   723   000005                     ??_color_click_init:
   724   000005                     ??___fltol:
   725   000005                     ??___xxtofl:
   726   000005                     ?_color_read_Red:
   727                           	callstack 0
   728   000005                     ?_color_read_Green:
   729                           	callstack 0
   730   000005                     ?_color_read_Blue:
   731                           	callstack 0
   732   000005                     ?_color_read_Clear:
   733                           	callstack 0
   734   000005                     ___awdiv@counter:
   735                           	callstack 0
   736   000005                     ___awmod@counter:
   737                           	callstack 0
   738   000005                     ___wmul@product:
   739                           	callstack 0
   740   000005                     ___fleq@ff2:
   741                           	callstack 0
   742   000005                     ___flge@ff2:
   743                           	callstack 0
   744   000005                     ___fladd@a:
   745                           	callstack 0
   746   000005                     ___flmul@a:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x4
   750   000005                     	ds	1
   751   000006                     ___awdiv@sign:
   752                           	callstack 0
   753   000006                     ___awmod@sign:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x5
   757   000006                     	ds	1
   758   000007                     ??_color_read_Red:
   759   000007                     ??_color_read_Green:
   760   000007                     ??_color_read_Blue:
   761   000007                     ??_color_read_Clear:
   762   000007                     ?_abs:
   763                           	callstack 0
   764   000007                     ?___lwdiv:
   765                           	callstack 0
   766   000007                     ?_read_prec_or_width:
   767                           	callstack 0
   768   000007                     read_prec_or_width@fmt:
   769                           	callstack 0
   770   000007                     ___awdiv@quotient:
   771                           	callstack 0
   772   000007                     ___lwdiv@dividend:
   773                           	callstack 0
   774   000007                     abs@a:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x6
   778   000007                     	ds	1
   779   000008                     read_prec_or_width@ap:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x7
   783   000008                     	ds	1
   784   000009                     ??___fladd:
   785   000009                     ??___flmul:
   786   000009                     ??_abs:
   787   000009                     ??___fleq:
   788   000009                     ??___flge:
   789   000009                     ___fltol@sign1:
   790                           	callstack 0
   791   000009                     ___xxtofl@sign:
   792                           	callstack 0
   793   000009                     read_prec_or_width@c:
   794                           	callstack 0
   795   000009                     ___lwdiv@divisor:
   796                           	callstack 0
   797   000009                     fputs@s:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x8
   801   000009                     	ds	1
   802   00000A                     ___fltol@exp1:
   803                           	callstack 0
   804   00000A                     ___xxtofl@exp:
   805                           	callstack 0
   806   00000A                     color_read_Red@tmp:
   807                           	callstack 0
   808   00000A                     color_read_Green@tmp:
   809                           	callstack 0
   810   00000A                     color_read_Blue@tmp:
   811                           	callstack 0
   812   00000A                     color_read_Clear@tmp:
   813                           	callstack 0
   814   00000A                     read_prec_or_width@n:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x9
   818   00000A                     	ds	1
   819   00000B                     fputs@fp:
   820                           	callstack 0
   821   00000B                     ___lwdiv@quotient:
   822                           	callstack 0
   823   00000B                     ___xxtofl@arg:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0xA
   827   00000B                     	ds	1
   828   00000C                     fputs@c:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0xB
   832   00000C                     	ds	1
   833   00000D                     ___lwdiv@counter:
   834                           	callstack 0
   835   00000D                     ___fladd@signs:
   836                           	callstack 0
   837   00000D                     ___flmul@sign:
   838                           	callstack 0
   839   00000D                     fputs@i:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0xC
   843   00000D                     	ds	1
   844   00000E                     setMotorPWM@m:
   845                           	callstack 0
   846   00000E                     ___fladd@aexp:
   847                           	callstack 0
   848   00000E                     ___flmul@grs:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0xD
   852   00000E                     	ds	1
   853   00000F                     ??_setMotorPWM:
   854   00000F                     ___fladd@bexp:
   855                           	callstack 0
   856   00000F                     pad@fp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0xE
   860   00000F                     	ds	1
   861   000010                     ___fladd@grs:
   862                           	callstack 0
   863   000010                     pad@buf:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0xF
   867   000010                     	ds	1
   868   000011                     ?___flsub:
   869                           	callstack 0
   870   000011                     setMotorPWM@posDuty:
   871                           	callstack 0
   872   000011                     ___flsub@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x10
   876   000011                     	ds	1
   877   000012                     setMotorPWM@negDuty:
   878                           	callstack 0
   879   000012                     ___flmul@aexp:
   880                           	callstack 0
   881   000012                     pad@p:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x11
   885   000012                     	ds	1
   886   000013                     stop@mL:
   887                           	callstack 0
   888   000013                     turnLeft@mL:
   889                           	callstack 0
   890   000013                     turnRight@mL:
   891                           	callstack 0
   892   000013                     fullSpeedAhead@mL:
   893                           	callstack 0
   894   000013                     fullSpeedBack@mL:
   895                           	callstack 0
   896   000013                     ___flmul@bexp:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x12
   900   000013                     	ds	1
   901   000014                     ??_pad:
   902   000014                     stop@mR:
   903                           	callstack 0
   904   000014                     turnLeft@mR:
   905                           	callstack 0
   906   000014                     turnRight@mR:
   907                           	callstack 0
   908   000014                     fullSpeedAhead@mR:
   909                           	callstack 0
   910   000014                     fullSpeedBack@mR:
   911                           	callstack 0
   912   000014                     ___flmul@prod:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0x13
   916   000014                     	ds	1
   917   000015                     ??_fullSpeedAhead:
   918   000015                     ??_stop:
   919   000015                     ??_turnLeft:
   920   000015                     ??_turnRight:
   921   000015                     ??_fullSpeedBack:
   922   000015                     pad@i:
   923                           	callstack 0
   924   000015                     ___flsub@a:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x14
   928   000015                     	ds	1
   929   000016                     turnLeft@i:
   930                           	callstack 0
   931   000016                     turnRight@i:
   932                           	callstack 0
   933   000016                     fullSpeedAhead@power:
   934                           	callstack 0
   935   000016                     fullSpeedBack@power:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x15
   939   000016                     	ds	1
   940   000017                     dtoa@fp:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x16
   944   000017                     	ds	1
   945   000018                     right90@mL:
   946                           	callstack 0
   947   000018                     left90@mL:
   948                           	callstack 0
   949   000018                     backHalf@mL:
   950                           	callstack 0
   951   000018                     ___flmul@temp:
   952                           	callstack 0
   953   000018                     dtoa@d:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x17
   957   000018                     	ds	1
   958   000019                     ?___fldiv:
   959                           	callstack 0
   960   000019                     right90@mR:
   961                           	callstack 0
   962   000019                     left90@mR:
   963                           	callstack 0
   964   000019                     backHalf@mR:
   965                           	callstack 0
   966   000019                     ___fldiv@b:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x18
   970   000019                     	ds	1
   971   00001A                     ??_right90:
   972   00001A                     ??_left90:
   973   00001A                     ??_backHalf:
   974   00001A                     _dtoa$2633:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x19
   978   00001A                     	ds	2
   979   00001C                     moveRed@mL:
   980                           	callstack 0
   981   00001C                     moveGreen@mL:
   982                           	callstack 0
   983   00001C                     dtoa@p:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0x1B
   987   00001C                     	ds	1
   988   00001D                     moveRed@mR:
   989                           	callstack 0
   990   00001D                     moveGreen@mR:
   991                           	callstack 0
   992   00001D                     dtoa@w:
   993                           	callstack 0
   994   00001D                     ___fldiv@a:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x1C
   998   00001D                     	ds	1
   999   00001E                     ??_moveRed:
  1000   00001E                     ??_moveGreen:
  1001                           
  1002                           ; 1 bytes @ 0x1D
  1003   00001E                     	ds	1
  1004   00001F                     dtoa@s:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x1E
  1008   00001F                     	ds	1
  1009   000020                     decision@hue:
  1010                           	callstack 0
  1011   000020                     dtoa@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x1F
  1015   000020                     	ds	1
  1016   000021                     ??___fldiv:
  1017                           
  1018                           ; 1 bytes @ 0x20
  1019   000021                     	ds	1
  1020   000022                     vfpfcnvrt@fp:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x21
  1024   000022                     	ds	1
  1025   000023                     vfpfcnvrt@fmt:
  1026                           	callstack 0
  1027                           
  1028                           ; 1 bytes @ 0x22
  1029   000023                     	ds	1
  1030   000024                     vfpfcnvrt@ap:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x23
  1034   000024                     	ds	1
  1035   000025                     ??_vfpfcnvrt:
  1036   000025                     ___fldiv@rem:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x24
  1040   000025                     	ds	2
  1041   000027                     vfpfcnvrt@convarg:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x26
  1045   000027                     	ds	2
  1046   000029                     ___fldiv@sign:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x28
  1050   000029                     	ds	1
  1051   00002A                     ___fldiv@new_exp:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x29
  1055   00002A                     	ds	1
  1056   00002B                     vfpfcnvrt@done:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x2A
  1060   00002B                     	ds	1
  1061   00002C                     vfpfcnvrt@cp:
  1062                           	callstack 0
  1063   00002C                     ___fldiv@grs:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x2B
  1067   00002C                     	ds	1
  1068   00002D                     ?_vfprintf:
  1069                           	callstack 0
  1070   00002D                     vfprintf@fp:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x2C
  1074   00002D                     	ds	1
  1075   00002E                     vfprintf@fmt:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x2D
  1079   00002E                     	ds	1
  1080   00002F                     vfprintf@ap:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x2E
  1084   00002F                     	ds	1
  1085   000030                     ___fldiv@bexp:
  1086                           	callstack 0
  1087   000030                     vfprintf@cfmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x2F
  1091   000030                     	ds	1
  1092   000031                     ?_sprintf:
  1093                           	callstack 0
  1094   000031                     ___fldiv@aexp:
  1095                           	callstack 0
  1096   000031                     sprintf@s:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x30
  1100   000031                     	ds	1
  1101   000032                     sprintf@fmt:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x31
  1105   000032                     	ds	5
  1106   000037                     sprintf@ap:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x36
  1110   000037                     	ds	1
  1111   000038                     sprintf@f:
  1112                           	callstack 0
  1113                           
  1114                           ; 12 bytes @ 0x37
  1115   000038                     	ds	12
  1116   000044                     ?_convert_rgb2hue:
  1117                           	callstack 0
  1118   000044                     calibration_routine@cCal:
  1119                           	callstack 0
  1120   000044                     convert_rgb2hue@cMax:
  1121                           	callstack 0
  1122   000044                     send2USART@hue:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0x43
  1126   000044                     	ds	1
  1127   000045                     ??_calibration_routine:
  1128   000045                     convert_rgb2hue@cCurr:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x44
  1132   000045                     	ds	1
  1133   000046                     ??_convert_rgb2hue:
  1134   000046                     
  1135                           ; 1 bytes @ 0x45
  1136   000046                     	ds	1
  1137   000047                     calibration_routine@cal_state:
  1138                           	callstack 0
  1139                           
  1140                           ; 20 bytes @ 0x46
  1141   000047                     	ds	1
  1142   000048                     ?_reading_hue:
  1143                           	callstack 0
  1144   000048                     reading_hue@cCurr:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x47
  1148   000048                     	ds	2
  1149   00004A                     ??_reading_hue:
  1150                           
  1151                           ; 1 bytes @ 0x49
  1152   00004A                     	ds	2
  1153   00004C                     reading_hue@hue:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x4B
  1157   00004C                     	ds	15
  1158                           
  1159 ;;
  1160 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1161 ;;
  1162 ;; *************** function _main *****************
  1163 ;; Defined at:
  1164 ;;		line 28 in file "main.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  clear_norm      4  110[BANK0 ] float 
  1169 ;;  maximum         4  106[BANK0 ] float 
  1170 ;;  current         4  102[BANK0 ] float 
  1171 ;;  hue_char       20    0        unsigned char [20]
  1172 ;;  PWMcycle        2    0        unsigned int 
  1173 ;;  hue             2  114[BANK0 ] unsigned int 
  1174 ;;  clear           2    0        unsigned int 
  1175 ;;  green           2    0        unsigned int 
  1176 ;;  blue            2    0        unsigned int 
  1177 ;;  red             2    0        unsigned int 
  1178 ;;  battery_leve    2    0        unsigned int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;Total ram usage:       16 bytes
  1193 ;; Hardware stack levels required when called: 10
  1194 ;; This function calls:
  1195 ;;		_ADC_init
  1196 ;;		___fldiv
  1197 ;;		___flge
  1198 ;;		___xxtofl
  1199 ;;		_calibration_routine
  1200 ;;		_color_click_init
  1201 ;;		_color_read_Clear
  1202 ;;		_decision
  1203 ;;		_fullSpeedAhead
  1204 ;;		_initDCmotorsPWM
  1205 ;;		_initUSART4
  1206 ;;		_reading_hue
  1207 ;;		_stop
  1208 ;; This function is called by:
  1209 ;;		Startup code after reset
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text0
  1214   00268A                     __ptext0:
  1215                           	callstack 0
  1216   00268A                     _main:
  1217                           	callstack 21
  1218   00268A                     
  1219                           ;main.c: 30:     ADC_init();
  1220   00268A  EC3D  F01E         	call	_ADC_init	;wreg free
  1221   00268E                     
  1222                           ;main.c: 31:     color_click_init();
  1223   00268E  ECF0  F01C         	call	_color_click_init	;wreg free
  1224   002692                     
  1225                           ;main.c: 32:     initUSART4();
  1226   002692  EC2E  F01E         	call	_initUSART4	;wreg free
  1227   002696                     
  1228                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1229   002696  0E00               	movlw	0
  1230   002698  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1231   00269A  0E63               	movlw	99
  1232   00269C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1233   00269E  ECC1  F019         	call	_initDCmotorsPWM	;wreg free
  1234   0026A2                     
  1235                           ;main.c: 39:     motorL.power = 0;
  1236   0026A2  0E00               	movlw	0
  1237   0026A4  0100               	movlb	0	; () banked
  1238   0026A6  6FE2               	movwf	_motorL& (0+255),b
  1239   0026A8                     
  1240                           ; BSR set to: 0
  1241                           ;main.c: 40:     motorL.direction = 1;
  1242   0026A8  0E01               	movlw	1
  1243   0026AA  6FE3               	movwf	(_motorL+1)& (0+255),b
  1244   0026AC                     
  1245                           ; BSR set to: 0
  1246                           ;main.c: 41:     motorL.brakemode = 1;
  1247   0026AC  0E01               	movlw	1
  1248   0026AE  6FE4               	movwf	(_motorL+2)& (0+255),b
  1249   0026B0                     
  1250                           ; BSR set to: 0
  1251                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1252   0026B0  0E00               	movlw	0
  1253   0026B2  6FE6               	movwf	(_motorL+4)& (0+255),b
  1254   0026B4  0E63               	movlw	99
  1255   0026B6  6FE5               	movwf	(_motorL+3)& (0+255),b
  1256   0026B8                     
  1257                           ; BSR set to: 0
  1258                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1259   0026B8  0EAA               	movlw	170
  1260   0026BA  6FE7               	movwf	(_motorL+5)& (0+255),b
  1261   0026BC  0E0F               	movlw	15
  1262   0026BE  6FE8               	movwf	(_motorL+6)& (0+255),b
  1263   0026C0                     
  1264                           ; BSR set to: 0
  1265                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1266   0026C0  0EA6               	movlw	166
  1267   0026C2  6FE9               	movwf	(_motorL+7)& (0+255),b
  1268   0026C4  0E0F               	movlw	15
  1269   0026C6  6FEA               	movwf	(_motorL+8)& (0+255),b
  1270   0026C8                     
  1271                           ; BSR set to: 0
  1272                           ;main.c: 46:     motorR.power = 0;
  1273   0026C8  0E00               	movlw	0
  1274   0026CA  6FD9               	movwf	_motorR& (0+255),b
  1275   0026CC                     
  1276                           ; BSR set to: 0
  1277                           ;main.c: 47:     motorR.direction = 1;
  1278   0026CC  0E01               	movlw	1
  1279   0026CE  6FDA               	movwf	(_motorR+1)& (0+255),b
  1280   0026D0                     
  1281                           ; BSR set to: 0
  1282                           ;main.c: 48:     motorR.brakemode = 1;
  1283   0026D0  0E01               	movlw	1
  1284   0026D2  6FDB               	movwf	(_motorR+2)& (0+255),b
  1285   0026D4                     
  1286                           ; BSR set to: 0
  1287                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1288   0026D4  0E00               	movlw	0
  1289   0026D6  6FDD               	movwf	(_motorR+4)& (0+255),b
  1290   0026D8  0E63               	movlw	99
  1291   0026DA  6FDC               	movwf	(_motorR+3)& (0+255),b
  1292                           
  1293                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1294   0026DC  0E25               	movlw	37
  1295   0026DE  6FDE               	movwf	(_motorR+5)& (0+255),b
  1296   0026E0  0E0F               	movlw	15
  1297   0026E2  6FDF               	movwf	(_motorR+6)& (0+255),b
  1298                           
  1299                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1300   0026E4  0E21               	movlw	33
  1301   0026E6  6FE0               	movwf	(_motorR+7)& (0+255),b
  1302   0026E8  0E0F               	movlw	15
  1303   0026EA  6FE1               	movwf	(_motorR+8)& (0+255),b
  1304   0026EC                     
  1305                           ; BSR set to: 0
  1306                           ;main.c: 54:     LATDbits.LATD7=0;
  1307   0026EC  9E7C               	bcf	124,7,c	;volatile
  1308   0026EE                     
  1309                           ; BSR set to: 0
  1310                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1311   0026EE  9E84               	bcf	132,7,c	;volatile
  1312   0026F0                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1315   0026F0  9087               	bcf	135,0,c	;volatile
  1316   0026F2                     
  1317                           ; BSR set to: 0
  1318                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1319   0026F2  907F               	bcf	127,0,c	;volatile
  1320   0026F4                     
  1321                           ; BSR set to: 0
  1322                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1323   0026F4  9E85               	bcf	133,7,c	;volatile
  1324   0026F6                     
  1325                           ; BSR set to: 0
  1326                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1327   0026F6  9E7D               	bcf	125,7,c	;volatile
  1328   0026F8                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1331   0026F8  9681               	bcf	129,3,c	;volatile
  1332   0026FA                     
  1333                           ; BSR set to: 0
  1334                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1335   0026FA  9679               	bcf	121,3,c	;volatile
  1336   0026FC                     
  1337                           ; BSR set to: 0
  1338                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1339   0026FC  8686               	bsf	134,3,c	;volatile
  1340   0026FE                     
  1341                           ; BSR set to: 0
  1342                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1343   0026FE  010E               	movlb	14	; () banked
  1344   002700  97B4               	bcf	180,3,b	;volatile
  1345   002702                     
  1346                           ; BSR set to: 14
  1347                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     unsigned i
      +                          nt clear;;main.c: 80:     unsigned int hue;;main.c: 81:     char hue_char[20];;main.c: 8
      +                          2:     TRISHbits.TRISH3 = 0;
  1348   002702  9688               	bcf	136,3,c	;volatile
  1349   002704                     
  1350                           ; BSR set to: 14
  1351                           ;main.c: 83:     LATHbits.LATH3 = 1;
  1352   002704  8680               	bsf	128,3,c	;volatile
  1353   002706                     
  1354                           ; BSR set to: 14
  1355                           ;main.c: 84:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1356   002706  0E19               	movlw	25
  1357   002708  0100               	movlb	0	; () banked
  1358   00270A  6FC5               	movwf	(??_main+1)& (0+255),b
  1359   00270C  0E5A               	movlw	90
  1360   00270E  6FC4               	movwf	??_main& (0+255),b
  1361   002710  0EB1               	movlw	177
  1362   002712                     u4307:
  1363   002712  2EE8               	decfsz	wreg,f,c
  1364   002714  D7FE               	bra	u4307
  1365   002716  2FC4               	decfsz	??_main& (0+255),f,b
  1366   002718  D7FC               	bra	u4307
  1367   00271A  2FC5               	decfsz	(??_main+1)& (0+255),f,b
  1368   00271C  D7FA               	bra	u4307
  1369   00271E  D000               	nop2	
  1370   002720                     
  1371                           ;main.c: 85:     LATHbits.LATH3 = 0;
  1372   002720  9680               	bcf	128,3,c	;volatile
  1373   002722                     
  1374                           ;main.c: 86:     LATFbits.LATF2 = 0;
  1375   002722  947E               	bcf	126,2,c	;volatile
  1376   002724                     
  1377                           ;main.c: 87:     TRISFbits.TRISF2 = 1;
  1378   002724  8486               	bsf	134,2,c	;volatile
  1379   002726                     
  1380                           ;main.c: 88:     ANSELFbits.ANSELF2 = 0;
  1381   002726  010E               	movlb	14	; () banked
  1382   002728  95B4               	bcf	180,2,b	;volatile
  1383   00272A                     
  1384                           ; BSR set to: 14
  1385                           ;main.c: 91:     calibration_routine(&colorCalibration);
  1386   00272A  0EF3               	movlw	low _colorCalibration
  1387   00272C  6E44               	movwf	calibration_routine@cCal^0,c
  1388   00272E  EC82  F011         	call	_calibration_routine	;wreg free
  1389   002732                     l4956:
  1390                           
  1391                           ;main.c: 97:         LATGbits.LATG0 = 1;
  1392   002732  807F               	bsf	127,0,c	;volatile
  1393   002734                     
  1394                           ;main.c: 98:         LATEbits.LATE7 = 1;
  1395   002734  8E7D               	bsf	125,7,c	;volatile
  1396   002736                     
  1397                           ;main.c: 99:         LATAbits.LATA3 = 1;
  1398   002736  8679               	bsf	121,3,c	;volatile
  1399   002738                     
  1400                           ;main.c: 100:         fullSpeedAhead(&motorL,&motorR);
  1401   002738  0EE2               	movlw	low _motorL
  1402   00273A  6E13               	movwf	fullSpeedAhead@mL^0,c
  1403   00273C  0ED9               	movlw	low _motorR
  1404   00273E  6E14               	movwf	fullSpeedAhead@mR^0,c
  1405   002740  ECCE  F01A         	call	_fullSpeedAhead	;wreg free
  1406   002744                     
  1407                           ;main.c: 101:         (colorCurrent.clear) = color_read_Clear();
  1408   002744  ECFE  F01B         	call	_color_read_Clear	;wreg free
  1409   002748  C005  F0F1         	movff	?_color_read_Clear,_colorCurrent+6
  1410   00274C  C006  F0F2         	movff	?_color_read_Clear+1,_colorCurrent+7
  1411   002750                     
  1412                           ;main.c: 102:         float current = colorCurrent.clear;
  1413   002750  C0F1  F001         	movff	_colorCurrent+6,___xxtofl@val
  1414   002754  C0F2  F002         	movff	_colorCurrent+7,___xxtofl@val+1
  1415   002758  6A03               	clrf	(___xxtofl@val+2)^0,c
  1416   00275A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1417   00275C  0E00               	movlw	0
  1418   00275E  EC6B  F012         	call	___xxtofl
  1419   002762  C001  F0C6         	movff	?___xxtofl,main@current
  1420   002766  C002  F0C7         	movff	?___xxtofl+1,main@current+1
  1421   00276A  C003  F0C8         	movff	?___xxtofl+2,main@current+2
  1422   00276E  C004  F0C9         	movff	?___xxtofl+3,main@current+3
  1423   002772                     
  1424                           ;main.c: 103:         float maximum = colorCalibration.clear;
  1425   002772  C0F9  F001         	movff	_colorCalibration+6,___xxtofl@val
  1426   002776  C0FA  F002         	movff	_colorCalibration+7,___xxtofl@val+1
  1427   00277A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1428   00277C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1429   00277E  0E00               	movlw	0
  1430   002780  EC6B  F012         	call	___xxtofl
  1431   002784  C001  F0CA         	movff	?___xxtofl,main@maximum
  1432   002788  C002  F0CB         	movff	?___xxtofl+1,main@maximum+1
  1433   00278C  C003  F0CC         	movff	?___xxtofl+2,main@maximum+2
  1434   002790  C004  F0CD         	movff	?___xxtofl+3,main@maximum+3
  1435   002794                     
  1436                           ;main.c: 104:         float clear_norm = current/maximum;
  1437   002794  C0C6  F019         	movff	main@current,___fldiv@b
  1438   002798  C0C7  F01A         	movff	main@current+1,___fldiv@b+1
  1439   00279C  C0C8  F01B         	movff	main@current+2,___fldiv@b+2
  1440   0027A0  C0C9  F01C         	movff	main@current+3,___fldiv@b+3
  1441   0027A4  C0CA  F01D         	movff	main@maximum,___fldiv@a
  1442   0027A8  C0CB  F01E         	movff	main@maximum+1,___fldiv@a+1
  1443   0027AC  C0CC  F01F         	movff	main@maximum+2,___fldiv@a+2
  1444   0027B0  C0CD  F020         	movff	main@maximum+3,___fldiv@a+3
  1445   0027B4  ECB5  F00F         	call	___fldiv	;wreg free
  1446   0027B8  C019  F0CE         	movff	?___fldiv,main@clear_norm
  1447   0027BC  C01A  F0CF         	movff	?___fldiv+1,main@clear_norm+1
  1448   0027C0  C01B  F0D0         	movff	?___fldiv+2,main@clear_norm+2
  1449   0027C4  C01C  F0D1         	movff	?___fldiv+3,main@clear_norm+3
  1450   0027C8                     
  1451                           ;main.c: 107:         if (clear_norm > 0.3){
  1452   0027C8  0E9A               	movlw	154
  1453   0027CA  6E01               	movwf	___flge@ff1^0,c
  1454   0027CC  0E99               	movlw	153
  1455   0027CE  6E02               	movwf	(___flge@ff1+1)^0,c
  1456   0027D0  0E99               	movlw	153
  1457   0027D2  6E03               	movwf	(___flge@ff1+2)^0,c
  1458   0027D4  0E3E               	movlw	62
  1459   0027D6  6E04               	movwf	(___flge@ff1+3)^0,c
  1460   0027D8  C0CE  F005         	movff	main@clear_norm,___flge@ff2
  1461   0027DC  C0CF  F006         	movff	main@clear_norm+1,___flge@ff2+1
  1462   0027E0  C0D0  F007         	movff	main@clear_norm+2,___flge@ff2+2
  1463   0027E4  C0D1  F008         	movff	main@clear_norm+3,___flge@ff2+3
  1464   0027E8  ECC0  F016         	call	___flge	;wreg free
  1465   0027EC  B0D8               	btfsc	status,0,c
  1466   0027EE  EFFB  F013         	goto	u4281
  1467   0027F2  EFFD  F013         	goto	u4280
  1468   0027F6                     u4281:
  1469   0027F6  EF99  F013         	goto	l4956
  1470   0027FA                     u4280:
  1471   0027FA                     
  1472                           ;main.c: 108:             stop(&motorL,&motorR);
  1473   0027FA  0EE2               	movlw	low _motorL
  1474   0027FC  6E13               	movwf	stop@mL^0,c
  1475   0027FE  0ED9               	movlw	low _motorR
  1476   002800  6E14               	movwf	stop@mR^0,c
  1477   002802  EC09  F01A         	call	_stop	;wreg free
  1478   002806                     
  1479                           ;main.c: 109:             hue = reading_hue(&colorCurrent);
  1480   002806  0EEB               	movlw	low _colorCurrent
  1481   002808  6E48               	movwf	reading_hue@cCurr^0,c
  1482   00280A  EC42  F017         	call	_reading_hue	;wreg free
  1483   00280E  C048  F0D2         	movff	?_reading_hue,main@hue
  1484   002812  C049  F0D3         	movff	?_reading_hue+1,main@hue+1
  1485   002816                     
  1486                           ;main.c: 110:             decision(hue);
  1487   002816  C0D2  F020         	movff	main@hue,decision@hue
  1488   00281A  C0D3  F021         	movff	main@hue+1,decision@hue+1
  1489   00281E  EC80  F01B         	call	_decision	;wreg free
  1490   002822  EF99  F013         	goto	l4956
  1491   002826  EF00  F000         	goto	start
  1492   00282A                     __end_of_main:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _reading_hue *****************
  1496 ;; Defined at:
  1497 ;;		line 136 in file "color.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  cCurr           1   71[COMRAM] PTR struct colors
  1500 ;;		 -> colorCurrent(8), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  led_state      50    0        unsigned char [50]
  1503 ;;  hue             2   75[COMRAM] unsigned int 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  2   71[COMRAM] unsigned int 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:        6 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 9
  1520 ;; This function calls:
  1521 ;;		_color_read_Blue
  1522 ;;		_color_read_Clear
  1523 ;;		_color_read_Green
  1524 ;;		_color_read_Red
  1525 ;;		_convert_rgb2hue
  1526 ;;		_send2USART
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text1
  1533   002E84                     __ptext1:
  1534                           	callstack 0
  1535   002E84                     _reading_hue:
  1536                           	callstack 21
  1537   002E84                     
  1538                           ;color.c: 136: unsigned int reading_hue(colors *cCurr);color.c: 137: {;color.c: 138:    
      +                           unsigned int hue;;color.c: 140:     char led_state[50];;color.c: 145:     LATGbits.LATG
      +                          0 = 1;
  1539   002E84  807F               	bsf	127,0,c	;volatile
  1540                           
  1541                           ;color.c: 146:     LATEbits.LATE7 = 0;
  1542   002E86  9E7D               	bcf	125,7,c	;volatile
  1543                           
  1544                           ;color.c: 147:     LATAbits.LATA3 = 0;
  1545   002E88  9679               	bcf	121,3,c	;volatile
  1546   002E8A                     
  1547                           ;color.c: 148:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1548   002E8A  0E29               	movlw	41
  1549   002E8C  6E4B               	movwf	(??_reading_hue+1)^0,c
  1550   002E8E  0E96               	movlw	150
  1551   002E90  6E4A               	movwf	??_reading_hue^0,c
  1552   002E92  0E7F               	movlw	127
  1553   002E94                     u4317:
  1554   002E94  2EE8               	decfsz	wreg,f,c
  1555   002E96  D7FE               	bra	u4317
  1556   002E98  2E4A               	decfsz	??_reading_hue^0,f,c
  1557   002E9A  D7FC               	bra	u4317
  1558   002E9C  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1559   002E9E  D7FA               	bra	u4317
  1560   002EA0  0000               	nop	
  1561   002EA2                     
  1562                           ;color.c: 149:     (cCurr->red)= color_read_Red();
  1563   002EA2  ECAE  F01B         	call	_color_read_Red	;wreg free
  1564   002EA6  5048               	movf	reading_hue@cCurr^0,w,c
  1565   002EA8  6ED9               	movwf	fsr2l,c
  1566   002EAA  6ADA               	clrf	fsr2h,c
  1567   002EAC  C005  FFDE         	movff	?_color_read_Red,postinc2
  1568   002EB0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1569   002EB4                     
  1570                           ;color.c: 154:     LATGbits.LATG0 = 0;
  1571   002EB4  907F               	bcf	127,0,c	;volatile
  1572   002EB6                     
  1573                           ;color.c: 155:     LATEbits.LATE7 = 1;
  1574   002EB6  8E7D               	bsf	125,7,c	;volatile
  1575   002EB8                     
  1576                           ;color.c: 156:     LATAbits.LATA3 = 0;
  1577   002EB8  9679               	bcf	121,3,c	;volatile
  1578   002EBA                     
  1579                           ;color.c: 157:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1580   002EBA  0E29               	movlw	41
  1581   002EBC  6E4B               	movwf	(??_reading_hue+1)^0,c
  1582   002EBE  0E96               	movlw	150
  1583   002EC0  6E4A               	movwf	??_reading_hue^0,c
  1584   002EC2  0E7F               	movlw	127
  1585   002EC4                     u4327:
  1586   002EC4  2EE8               	decfsz	wreg,f,c
  1587   002EC6  D7FE               	bra	u4327
  1588   002EC8  2E4A               	decfsz	??_reading_hue^0,f,c
  1589   002ECA  D7FC               	bra	u4327
  1590   002ECC  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1591   002ECE  D7FA               	bra	u4327
  1592   002ED0  0000               	nop	
  1593                           
  1594                           ;color.c: 158:     (cCurr->green) = color_read_Green();
  1595   002ED2  ECD6  F01B         	call	_color_read_Green	;wreg free
  1596   002ED6  5048               	movf	reading_hue@cCurr^0,w,c
  1597   002ED8  6ED9               	movwf	fsr2l,c
  1598   002EDA  6ADA               	clrf	fsr2h,c
  1599   002EDC  0E02               	movlw	2
  1600   002EDE  26D9               	addwf	fsr2l,f,c
  1601   002EE0  C005  FFDE         	movff	?_color_read_Green,postinc2
  1602   002EE4  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1603   002EE8                     
  1604                           ;color.c: 164:     LATGbits.LATG0 = 0;
  1605   002EE8  907F               	bcf	127,0,c	;volatile
  1606   002EEA                     
  1607                           ;color.c: 165:     LATEbits.LATE7 = 0;
  1608   002EEA  9E7D               	bcf	125,7,c	;volatile
  1609   002EEC                     
  1610                           ;color.c: 166:     LATAbits.LATA3 = 1;
  1611   002EEC  8679               	bsf	121,3,c	;volatile
  1612   002EEE                     
  1613                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1614   002EEE  0E29               	movlw	41
  1615   002EF0  6E4B               	movwf	(??_reading_hue+1)^0,c
  1616   002EF2  0E96               	movlw	150
  1617   002EF4  6E4A               	movwf	??_reading_hue^0,c
  1618   002EF6  0E7F               	movlw	127
  1619   002EF8                     u4337:
  1620   002EF8  2EE8               	decfsz	wreg,f,c
  1621   002EFA  D7FE               	bra	u4337
  1622   002EFC  2E4A               	decfsz	??_reading_hue^0,f,c
  1623   002EFE  D7FC               	bra	u4337
  1624   002F00  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1625   002F02  D7FA               	bra	u4337
  1626   002F04  0000               	nop	
  1627   002F06                     
  1628                           ;color.c: 168:     (cCurr->blue) = color_read_Blue();
  1629   002F06  EC26  F01C         	call	_color_read_Blue	;wreg free
  1630   002F0A  5048               	movf	reading_hue@cCurr^0,w,c
  1631   002F0C  6ED9               	movwf	fsr2l,c
  1632   002F0E  6ADA               	clrf	fsr2h,c
  1633   002F10  0E04               	movlw	4
  1634   002F12  26D9               	addwf	fsr2l,f,c
  1635   002F14  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1636   002F18  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1637   002F1C                     
  1638                           ;color.c: 173:     LATGbits.LATG0 = 1;
  1639   002F1C  807F               	bsf	127,0,c	;volatile
  1640   002F1E                     
  1641                           ;color.c: 174:     LATEbits.LATE7 = 1;
  1642   002F1E  8E7D               	bsf	125,7,c	;volatile
  1643   002F20                     
  1644                           ;color.c: 175:     LATAbits.LATA3 = 1;
  1645   002F20  8679               	bsf	121,3,c	;volatile
  1646                           
  1647                           ;color.c: 176:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1648   002F22  0E29               	movlw	41
  1649   002F24  6E4B               	movwf	(??_reading_hue+1)^0,c
  1650   002F26  0E96               	movlw	150
  1651   002F28  6E4A               	movwf	??_reading_hue^0,c
  1652   002F2A  0E7F               	movlw	127
  1653   002F2C                     u4347:
  1654   002F2C  2EE8               	decfsz	wreg,f,c
  1655   002F2E  D7FE               	bra	u4347
  1656   002F30  2E4A               	decfsz	??_reading_hue^0,f,c
  1657   002F32  D7FC               	bra	u4347
  1658   002F34  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1659   002F36  D7FA               	bra	u4347
  1660   002F38  0000               	nop	
  1661   002F3A                     
  1662                           ;color.c: 177:     (cCurr->clear) = color_read_Clear();
  1663   002F3A  ECFE  F01B         	call	_color_read_Clear	;wreg free
  1664   002F3E  5048               	movf	reading_hue@cCurr^0,w,c
  1665   002F40  6ED9               	movwf	fsr2l,c
  1666   002F42  6ADA               	clrf	fsr2h,c
  1667   002F44  0E06               	movlw	6
  1668   002F46  26D9               	addwf	fsr2l,f,c
  1669   002F48  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1670   002F4C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1671   002F50                     
  1672                           ;color.c: 184:     hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1673   002F50  0EF3               	movlw	low _colorCalibration
  1674   002F52  6E44               	movwf	convert_rgb2hue@cMax^0,c
  1675   002F54  0EEB               	movlw	low _colorCurrent
  1676   002F56  6E45               	movwf	convert_rgb2hue@cCurr^0,c
  1677   002F58  EC5D  F007         	call	_convert_rgb2hue	;wreg free
  1678   002F5C  C044  F04C         	movff	?_convert_rgb2hue,reading_hue@hue
  1679   002F60  C045  F04D         	movff	?_convert_rgb2hue+1,reading_hue@hue+1
  1680   002F64                     
  1681                           ;color.c: 189:     send2USART(hue);
  1682   002F64  C04C  F044         	movff	reading_hue@hue,send2USART@hue
  1683   002F68  C04D  F045         	movff	reading_hue@hue+1,send2USART@hue+1
  1684   002F6C  EC1F  F01E         	call	_send2USART	;wreg free
  1685   002F70                     
  1686                           ;color.c: 191:     return hue;
  1687   002F70  C04C  F048         	movff	reading_hue@hue,?_reading_hue
  1688   002F74  C04D  F049         	movff	reading_hue@hue+1,?_reading_hue+1
  1689   002F78  0012               	return		;funcret
  1690   002F7A                     __end_of_reading_hue:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _send2USART *****************
  1694 ;; Defined at:
  1695 ;;		line 146 in file "serial.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  hue             2   67[COMRAM] unsigned int 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;Total ram usage:       52 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 8
  1716 ;; This function calls:
  1717 ;;		_sendStringSerial4
  1718 ;;		_sprintf
  1719 ;; This function is called by:
  1720 ;;		_reading_hue
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text2
  1725   003C3E                     __ptext2:
  1726                           	callstack 0
  1727   003C3E                     _send2USART:
  1728                           	callstack 21
  1729   003C3E                     
  1730                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1731   003C3E  0E60               	movlw	low send2USART@hue_char
  1732   003C40  6E31               	movwf	sprintf@s^0,c
  1733   003C42  0EA0               	movlw	low STR_13
  1734   003C44  6E32               	movwf	sprintf@fmt^0,c
  1735   003C46  C044  F033         	movff	send2USART@hue,?_sprintf+2
  1736   003C4A  C045  F034         	movff	send2USART@hue+1,?_sprintf+3
  1737   003C4E  EC0A  F01D         	call	_sprintf	;wreg free
  1738   003C52                     
  1739                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1740   003C52  0E60               	movlw	low send2USART@hue_char
  1741   003C54  6E02               	movwf	sendStringSerial4@string^0,c
  1742   003C56  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  1743   003C5A  0012               	return		;funcret
  1744   003C5C                     __end_of_send2USART:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _convert_rgb2hue *****************
  1748 ;; Defined at:
  1749 ;;		line 274 in file "color.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  cMax            1   67[COMRAM] PTR struct colors
  1752 ;;		 -> colorCalibration(8), 
  1753 ;;  cCurr           1   68[COMRAM] PTR struct colors
  1754 ;;		 -> colorCurrent(8), 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  c_char         20    0[BANK0 ] unsigned char [20]
  1757 ;;  b               4   96[BANK0 ] float 
  1758 ;;  g               4   92[BANK0 ] float 
  1759 ;;  r               4   88[BANK0 ] float 
  1760 ;;  hue             4   84[BANK0 ] float 
  1761 ;;  max             4   80[BANK0 ] float 
  1762 ;;  diff            4   76[BANK0 ] float 
  1763 ;;  min             4   72[BANK0 ] float 
  1764 ;;  c               4   52[BANK0 ] float 
  1765 ;;  clearmax        4   48[BANK0 ] float 
  1766 ;;  clearcurrent    4   44[BANK0 ] float 
  1767 ;;  bluemax         4   40[BANK0 ] float 
  1768 ;;  bluecurrent     4   36[BANK0 ] float 
  1769 ;;  greenmax        4   32[BANK0 ] float 
  1770 ;;  greencurrent    4   28[BANK0 ] float 
  1771 ;;  redmax          4   24[BANK0 ] float 
  1772 ;;  redcurrent      4   20[BANK0 ] float 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2   67[COMRAM] unsigned int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Totals:         4     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;Total ram usage:      104 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 8
  1789 ;; This function calls:
  1790 ;;		___fladd
  1791 ;;		___fldiv
  1792 ;;		___fleq
  1793 ;;		___flge
  1794 ;;		___flmul
  1795 ;;		___flsub
  1796 ;;		___fltol
  1797 ;;		___xxtofl
  1798 ;;		_sendStringSerial4
  1799 ;;		_sprintf
  1800 ;; This function is called by:
  1801 ;;		_reading_hue
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text3
  1806   000EBA                     __ptext3:
  1807                           	callstack 0
  1808   000EBA                     _convert_rgb2hue:
  1809                           	callstack 21
  1810   000EBA                     
  1811                           ;color.c: 274: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);c
      +                          olor.c: 275: {;color.c: 276:     float redcurrent, redmax, greencurrent, greenmax, bluec
      +                          urrent, bluemax, clearcurrent, clearmax;;color.c: 277:     float r, g, b, c, min, max, d
      +                          iff, hue = 0.0;
  1812   000EBA  0E00               	movlw	0
  1813   000EBC  0100               	movlb	0	; () banked
  1814   000EBE  6FB4               	movwf	convert_rgb2hue@hue& (0+255),b
  1815   000EC0  0E00               	movlw	0
  1816   000EC2  6FB5               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  1817   000EC4  0E00               	movlw	0
  1818   000EC6  6FB6               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  1819   000EC8  0E00               	movlw	0
  1820   000ECA  6FB7               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  1821   000ECC                     
  1822                           ; BSR set to: 0
  1823                           ;color.c: 279:     redcurrent = cCurr->red;
  1824   000ECC  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1825   000ECE  6ED9               	movwf	fsr2l,c
  1826   000ED0  6ADA               	clrf	fsr2h,c
  1827   000ED2  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1828   000ED6  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1829   000EDA  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1830   000EDE  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1831   000EE2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1832   000EE4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1833   000EE6  0E00               	movlw	0
  1834   000EE8  EC6B  F012         	call	___xxtofl
  1835   000EEC  C001  F074         	movff	?___xxtofl,convert_rgb2hue@redcurrent
  1836   000EF0  C002  F075         	movff	?___xxtofl+1,convert_rgb2hue@redcurrent+1
  1837   000EF4  C003  F076         	movff	?___xxtofl+2,convert_rgb2hue@redcurrent+2
  1838   000EF8  C004  F077         	movff	?___xxtofl+3,convert_rgb2hue@redcurrent+3
  1839   000EFC                     
  1840                           ;color.c: 280:     redmax = cMax->red;
  1841   000EFC  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1842   000EFE  6ED9               	movwf	fsr2l,c
  1843   000F00  6ADA               	clrf	fsr2h,c
  1844   000F02  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1845   000F06  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1846   000F0A  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1847   000F0E  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1848   000F12  6A03               	clrf	(___xxtofl@val+2)^0,c
  1849   000F14  6A04               	clrf	(___xxtofl@val+3)^0,c
  1850   000F16  0E00               	movlw	0
  1851   000F18  EC6B  F012         	call	___xxtofl
  1852   000F1C  C001  F078         	movff	?___xxtofl,convert_rgb2hue@redmax
  1853   000F20  C002  F079         	movff	?___xxtofl+1,convert_rgb2hue@redmax+1
  1854   000F24  C003  F07A         	movff	?___xxtofl+2,convert_rgb2hue@redmax+2
  1855   000F28  C004  F07B         	movff	?___xxtofl+3,convert_rgb2hue@redmax+3
  1856   000F2C                     
  1857                           ;color.c: 281:     greencurrent = cCurr->green;
  1858   000F2C  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1859   000F2E  6ED9               	movwf	fsr2l,c
  1860   000F30  6ADA               	clrf	fsr2h,c
  1861   000F32  0E02               	movlw	2
  1862   000F34  26D9               	addwf	fsr2l,f,c
  1863   000F36  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1864   000F3A  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1865   000F3E  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1866   000F42  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1867   000F46  6A03               	clrf	(___xxtofl@val+2)^0,c
  1868   000F48  6A04               	clrf	(___xxtofl@val+3)^0,c
  1869   000F4A  0E00               	movlw	0
  1870   000F4C  EC6B  F012         	call	___xxtofl
  1871   000F50  C001  F07C         	movff	?___xxtofl,convert_rgb2hue@greencurrent
  1872   000F54  C002  F07D         	movff	?___xxtofl+1,convert_rgb2hue@greencurrent+1
  1873   000F58  C003  F07E         	movff	?___xxtofl+2,convert_rgb2hue@greencurrent+2
  1874   000F5C  C004  F07F         	movff	?___xxtofl+3,convert_rgb2hue@greencurrent+3
  1875   000F60                     
  1876                           ;color.c: 282:     greenmax = cMax->green;
  1877   000F60  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1878   000F62  6ED9               	movwf	fsr2l,c
  1879   000F64  6ADA               	clrf	fsr2h,c
  1880   000F66  0E02               	movlw	2
  1881   000F68  26D9               	addwf	fsr2l,f,c
  1882   000F6A  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1883   000F6E  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1884   000F72  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1885   000F76  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1886   000F7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1887   000F7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1888   000F7E  0E00               	movlw	0
  1889   000F80  EC6B  F012         	call	___xxtofl
  1890   000F84  C001  F080         	movff	?___xxtofl,convert_rgb2hue@greenmax
  1891   000F88  C002  F081         	movff	?___xxtofl+1,convert_rgb2hue@greenmax+1
  1892   000F8C  C003  F082         	movff	?___xxtofl+2,convert_rgb2hue@greenmax+2
  1893   000F90  C004  F083         	movff	?___xxtofl+3,convert_rgb2hue@greenmax+3
  1894   000F94                     
  1895                           ;color.c: 283:     bluecurrent = cCurr->blue;
  1896   000F94  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1897   000F96  6ED9               	movwf	fsr2l,c
  1898   000F98  6ADA               	clrf	fsr2h,c
  1899   000F9A  0E04               	movlw	4
  1900   000F9C  26D9               	addwf	fsr2l,f,c
  1901   000F9E  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1902   000FA2  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1903   000FA6  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1904   000FAA  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1905   000FAE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1906   000FB0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1907   000FB2  0E00               	movlw	0
  1908   000FB4  EC6B  F012         	call	___xxtofl
  1909   000FB8  C001  F084         	movff	?___xxtofl,convert_rgb2hue@bluecurrent
  1910   000FBC  C002  F085         	movff	?___xxtofl+1,convert_rgb2hue@bluecurrent+1
  1911   000FC0  C003  F086         	movff	?___xxtofl+2,convert_rgb2hue@bluecurrent+2
  1912   000FC4  C004  F087         	movff	?___xxtofl+3,convert_rgb2hue@bluecurrent+3
  1913   000FC8                     
  1914                           ;color.c: 284:     bluemax = cMax->blue;
  1915   000FC8  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1916   000FCA  6ED9               	movwf	fsr2l,c
  1917   000FCC  6ADA               	clrf	fsr2h,c
  1918   000FCE  0E04               	movlw	4
  1919   000FD0  26D9               	addwf	fsr2l,f,c
  1920   000FD2  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1921   000FD6  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1922   000FDA  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1923   000FDE  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1924   000FE2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1925   000FE4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1926   000FE6  0E00               	movlw	0
  1927   000FE8  EC6B  F012         	call	___xxtofl
  1928   000FEC  C001  F088         	movff	?___xxtofl,convert_rgb2hue@bluemax
  1929   000FF0  C002  F089         	movff	?___xxtofl+1,convert_rgb2hue@bluemax+1
  1930   000FF4  C003  F08A         	movff	?___xxtofl+2,convert_rgb2hue@bluemax+2
  1931   000FF8  C004  F08B         	movff	?___xxtofl+3,convert_rgb2hue@bluemax+3
  1932   000FFC                     
  1933                           ;color.c: 285:     clearcurrent = cCurr->clear;
  1934   000FFC  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1935   000FFE  6ED9               	movwf	fsr2l,c
  1936   001000  6ADA               	clrf	fsr2h,c
  1937   001002  0E06               	movlw	6
  1938   001004  26D9               	addwf	fsr2l,f,c
  1939   001006  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1940   00100A  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1941   00100E  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1942   001012  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1943   001016  6A03               	clrf	(___xxtofl@val+2)^0,c
  1944   001018  6A04               	clrf	(___xxtofl@val+3)^0,c
  1945   00101A  0E00               	movlw	0
  1946   00101C  EC6B  F012         	call	___xxtofl
  1947   001020  C001  F08C         	movff	?___xxtofl,convert_rgb2hue@clearcurrent
  1948   001024  C002  F08D         	movff	?___xxtofl+1,convert_rgb2hue@clearcurrent+1
  1949   001028  C003  F08E         	movff	?___xxtofl+2,convert_rgb2hue@clearcurrent+2
  1950   00102C  C004  F08F         	movff	?___xxtofl+3,convert_rgb2hue@clearcurrent+3
  1951   001030                     
  1952                           ;color.c: 286:     clearmax = cMax->clear;
  1953   001030  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1954   001032  6ED9               	movwf	fsr2l,c
  1955   001034  6ADA               	clrf	fsr2h,c
  1956   001036  0E06               	movlw	6
  1957   001038  26D9               	addwf	fsr2l,f,c
  1958   00103A  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1959   00103E  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1960   001042  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1961   001046  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1962   00104A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1963   00104C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1964   00104E  0E00               	movlw	0
  1965   001050  EC6B  F012         	call	___xxtofl
  1966   001054  C001  F090         	movff	?___xxtofl,convert_rgb2hue@clearmax
  1967   001058  C002  F091         	movff	?___xxtofl+1,convert_rgb2hue@clearmax+1
  1968   00105C  C003  F092         	movff	?___xxtofl+2,convert_rgb2hue@clearmax+2
  1969   001060  C004  F093         	movff	?___xxtofl+3,convert_rgb2hue@clearmax+3
  1970   001064                     
  1971                           ;color.c: 288:     c = clearcurrent/clearmax;
  1972   001064  C08C  F019         	movff	convert_rgb2hue@clearcurrent,___fldiv@b
  1973   001068  C08D  F01A         	movff	convert_rgb2hue@clearcurrent+1,___fldiv@b+1
  1974   00106C  C08E  F01B         	movff	convert_rgb2hue@clearcurrent+2,___fldiv@b+2
  1975   001070  C08F  F01C         	movff	convert_rgb2hue@clearcurrent+3,___fldiv@b+3
  1976   001074  C090  F01D         	movff	convert_rgb2hue@clearmax,___fldiv@a
  1977   001078  C091  F01E         	movff	convert_rgb2hue@clearmax+1,___fldiv@a+1
  1978   00107C  C092  F01F         	movff	convert_rgb2hue@clearmax+2,___fldiv@a+2
  1979   001080  C093  F020         	movff	convert_rgb2hue@clearmax+3,___fldiv@a+3
  1980   001084  ECB5  F00F         	call	___fldiv	;wreg free
  1981   001088  C019  F094         	movff	?___fldiv,convert_rgb2hue@c
  1982   00108C  C01A  F095         	movff	?___fldiv+1,convert_rgb2hue@c+1
  1983   001090  C01B  F096         	movff	?___fldiv+2,convert_rgb2hue@c+2
  1984   001094  C01C  F097         	movff	?___fldiv+3,convert_rgb2hue@c+3
  1985   001098                     
  1986                           ;color.c: 289:     char c_char[20];;color.c: 290:     sprintf(c_char, "clear=%03d", c);
  1987   001098  0E60               	movlw	low convert_rgb2hue@c_char
  1988   00109A  6E31               	movwf	sprintf@s^0,c
  1989   00109C  0EAC               	movlw	low STR_11
  1990   00109E  6E32               	movwf	sprintf@fmt^0,c
  1991   0010A0  C094  F033         	movff	convert_rgb2hue@c,?_sprintf+2
  1992   0010A4  C095  F034         	movff	convert_rgb2hue@c+1,?_sprintf+3
  1993   0010A8  C096  F035         	movff	convert_rgb2hue@c+2,?_sprintf+4
  1994   0010AC  C097  F036         	movff	convert_rgb2hue@c+3,?_sprintf+5
  1995   0010B0  EC0A  F01D         	call	_sprintf	;wreg free
  1996   0010B4                     
  1997                           ;color.c: 291:     sendStringSerial4(c_char);
  1998   0010B4  0E60               	movlw	low convert_rgb2hue@c_char
  1999   0010B6  6E02               	movwf	sendStringSerial4@string^0,c
  2000   0010B8  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  2001   0010BC                     
  2002                           ;color.c: 295:     r = redcurrent/redmax;
  2003   0010BC  C074  F019         	movff	convert_rgb2hue@redcurrent,___fldiv@b
  2004   0010C0  C075  F01A         	movff	convert_rgb2hue@redcurrent+1,___fldiv@b+1
  2005   0010C4  C076  F01B         	movff	convert_rgb2hue@redcurrent+2,___fldiv@b+2
  2006   0010C8  C077  F01C         	movff	convert_rgb2hue@redcurrent+3,___fldiv@b+3
  2007   0010CC  C078  F01D         	movff	convert_rgb2hue@redmax,___fldiv@a
  2008   0010D0  C079  F01E         	movff	convert_rgb2hue@redmax+1,___fldiv@a+1
  2009   0010D4  C07A  F01F         	movff	convert_rgb2hue@redmax+2,___fldiv@a+2
  2010   0010D8  C07B  F020         	movff	convert_rgb2hue@redmax+3,___fldiv@a+3
  2011   0010DC  ECB5  F00F         	call	___fldiv	;wreg free
  2012   0010E0  C019  F0B8         	movff	?___fldiv,convert_rgb2hue@r
  2013   0010E4  C01A  F0B9         	movff	?___fldiv+1,convert_rgb2hue@r+1
  2014   0010E8  C01B  F0BA         	movff	?___fldiv+2,convert_rgb2hue@r+2
  2015   0010EC  C01C  F0BB         	movff	?___fldiv+3,convert_rgb2hue@r+3
  2016   0010F0                     
  2017                           ;color.c: 296:     g = greencurrent/greenmax;
  2018   0010F0  C07C  F019         	movff	convert_rgb2hue@greencurrent,___fldiv@b
  2019   0010F4  C07D  F01A         	movff	convert_rgb2hue@greencurrent+1,___fldiv@b+1
  2020   0010F8  C07E  F01B         	movff	convert_rgb2hue@greencurrent+2,___fldiv@b+2
  2021   0010FC  C07F  F01C         	movff	convert_rgb2hue@greencurrent+3,___fldiv@b+3
  2022   001100  C080  F01D         	movff	convert_rgb2hue@greenmax,___fldiv@a
  2023   001104  C081  F01E         	movff	convert_rgb2hue@greenmax+1,___fldiv@a+1
  2024   001108  C082  F01F         	movff	convert_rgb2hue@greenmax+2,___fldiv@a+2
  2025   00110C  C083  F020         	movff	convert_rgb2hue@greenmax+3,___fldiv@a+3
  2026   001110  ECB5  F00F         	call	___fldiv	;wreg free
  2027   001114  C019  F0BC         	movff	?___fldiv,convert_rgb2hue@g
  2028   001118  C01A  F0BD         	movff	?___fldiv+1,convert_rgb2hue@g+1
  2029   00111C  C01B  F0BE         	movff	?___fldiv+2,convert_rgb2hue@g+2
  2030   001120  C01C  F0BF         	movff	?___fldiv+3,convert_rgb2hue@g+3
  2031   001124                     
  2032                           ;color.c: 297:     b = bluecurrent/bluemax;
  2033   001124  C084  F019         	movff	convert_rgb2hue@bluecurrent,___fldiv@b
  2034   001128  C085  F01A         	movff	convert_rgb2hue@bluecurrent+1,___fldiv@b+1
  2035   00112C  C086  F01B         	movff	convert_rgb2hue@bluecurrent+2,___fldiv@b+2
  2036   001130  C087  F01C         	movff	convert_rgb2hue@bluecurrent+3,___fldiv@b+3
  2037   001134  C088  F01D         	movff	convert_rgb2hue@bluemax,___fldiv@a
  2038   001138  C089  F01E         	movff	convert_rgb2hue@bluemax+1,___fldiv@a+1
  2039   00113C  C08A  F01F         	movff	convert_rgb2hue@bluemax+2,___fldiv@a+2
  2040   001140  C08B  F020         	movff	convert_rgb2hue@bluemax+3,___fldiv@a+3
  2041   001144  ECB5  F00F         	call	___fldiv	;wreg free
  2042   001148  C019  F0C0         	movff	?___fldiv,convert_rgb2hue@b
  2043   00114C  C01A  F0C1         	movff	?___fldiv+1,convert_rgb2hue@b+1
  2044   001150  C01B  F0C2         	movff	?___fldiv+2,convert_rgb2hue@b+2
  2045   001154  C01C  F0C3         	movff	?___fldiv+3,convert_rgb2hue@b+3
  2046   001158                     
  2047                           ;color.c: 299:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  2048   001158  C0B8  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2049   00115C  C0B9  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2050   001160  C0BA  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2051   001164  C0BB  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2052   001168  C0BC  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2053   00116C  C0BD  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2054   001170  C0BE  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2055   001174  C0BF  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2056   001178  ECC0  F016         	call	___flge	;wreg free
  2057   00117C  A0D8               	btfss	status,0,c
  2058   00117E  EFC3  F008         	goto	u4121
  2059   001182  EFC5  F008         	goto	u4120
  2060   001186                     u4121:
  2061   001186  EFFA  F008         	goto	l4756
  2062   00118A                     u4120:
  2063   00118A  C0BC  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2064   00118E  C0BD  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2065   001192  C0BE  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2066   001196  C0BF  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2067   00119A  C0C0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2068   00119E  C0C1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2069   0011A2  C0C2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2070   0011A6  C0C3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2071   0011AA  ECC0  F016         	call	___flge	;wreg free
  2072   0011AE  A0D8               	btfss	status,0,c
  2073   0011B0  EFDC  F008         	goto	u4131
  2074   0011B4  EFDE  F008         	goto	u4130
  2075   0011B8                     u4131:
  2076   0011B8  EFE8  F008         	goto	l107
  2077   0011BC                     u4130:
  2078   0011BC  C0C0  F098         	movff	convert_rgb2hue@b,_convert_rgb2hue$388
  2079   0011C0  C0C1  F099         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$388+1
  2080   0011C4  C0C2  F09A         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$388+2
  2081   0011C8  C0C3  F09B         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$388+3
  2082   0011CC  EFF0  F008         	goto	l109
  2083   0011D0                     l107:
  2084   0011D0  C0BC  F098         	movff	convert_rgb2hue@g,_convert_rgb2hue$388
  2085   0011D4  C0BD  F099         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$388+1
  2086   0011D8  C0BE  F09A         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$388+2
  2087   0011DC  C0BF  F09B         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$388+3
  2088   0011E0                     l109:
  2089   0011E0  C098  F0A8         	movff	_convert_rgb2hue$388,convert_rgb2hue@min
  2090   0011E4  C099  F0A9         	movff	_convert_rgb2hue$388+1,convert_rgb2hue@min+1
  2091   0011E8  C09A  F0AA         	movff	_convert_rgb2hue$388+2,convert_rgb2hue@min+2
  2092   0011EC  C09B  F0AB         	movff	_convert_rgb2hue$388+3,convert_rgb2hue@min+3
  2093   0011F0  EF2D  F009         	goto	l4760
  2094   0011F4                     l4756:
  2095   0011F4  C0B8  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2096   0011F8  C0B9  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2097   0011FC  C0BA  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2098   001200  C0BB  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2099   001204  C0C0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2100   001208  C0C1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2101   00120C  C0C2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2102   001210  C0C3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2103   001214  ECC0  F016         	call	___flge	;wreg free
  2104   001218  A0D8               	btfss	status,0,c
  2105   00121A  EF11  F009         	goto	u4141
  2106   00121E  EF13  F009         	goto	u4140
  2107   001222                     u4141:
  2108   001222  EF1D  F009         	goto	l111
  2109   001226                     u4140:
  2110   001226  C0C0  F09C         	movff	convert_rgb2hue@b,_convert_rgb2hue$389
  2111   00122A  C0C1  F09D         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$389+1
  2112   00122E  C0C2  F09E         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$389+2
  2113   001232  C0C3  F09F         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$389+3
  2114   001236  EF25  F009         	goto	l113
  2115   00123A                     l111:
  2116   00123A  C0B8  F09C         	movff	convert_rgb2hue@r,_convert_rgb2hue$389
  2117   00123E  C0B9  F09D         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$389+1
  2118   001242  C0BA  F09E         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$389+2
  2119   001246  C0BB  F09F         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$389+3
  2120   00124A                     l113:
  2121   00124A  C09C  F0A8         	movff	_convert_rgb2hue$389,convert_rgb2hue@min
  2122   00124E  C09D  F0A9         	movff	_convert_rgb2hue$389+1,convert_rgb2hue@min+1
  2123   001252  C09E  F0AA         	movff	_convert_rgb2hue$389+2,convert_rgb2hue@min+2
  2124   001256  C09F  F0AB         	movff	_convert_rgb2hue$389+3,convert_rgb2hue@min+3
  2125   00125A                     l4760:
  2126                           
  2127                           ;color.c: 300:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  2128   00125A  C0BC  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2129   00125E  C0BD  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2130   001262  C0BE  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2131   001266  C0BF  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2132   00126A  C0B8  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2133   00126E  C0B9  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2134   001272  C0BA  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2135   001276  C0BB  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2136   00127A  ECC0  F016         	call	___flge	;wreg free
  2137   00127E  A0D8               	btfss	status,0,c
  2138   001280  EF44  F009         	goto	u4151
  2139   001284  EF46  F009         	goto	u4150
  2140   001288                     u4151:
  2141   001288  EF7B  F009         	goto	l4766
  2142   00128C                     u4150:
  2143   00128C  C0C0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2144   001290  C0C1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2145   001294  C0C2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2146   001298  C0C3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2147   00129C  C0BC  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2148   0012A0  C0BD  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2149   0012A4  C0BE  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2150   0012A8  C0BF  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2151   0012AC  ECC0  F016         	call	___flge	;wreg free
  2152   0012B0  A0D8               	btfss	status,0,c
  2153   0012B2  EF5D  F009         	goto	u4161
  2154   0012B6  EF5F  F009         	goto	u4160
  2155   0012BA                     u4161:
  2156   0012BA  EF69  F009         	goto	l119
  2157   0012BE                     u4160:
  2158   0012BE  C0C0  F0A0         	movff	convert_rgb2hue@b,_convert_rgb2hue$390
  2159   0012C2  C0C1  F0A1         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$390+1
  2160   0012C6  C0C2  F0A2         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$390+2
  2161   0012CA  C0C3  F0A3         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$390+3
  2162   0012CE  EF71  F009         	goto	l121
  2163   0012D2                     l119:
  2164   0012D2  C0BC  F0A0         	movff	convert_rgb2hue@g,_convert_rgb2hue$390
  2165   0012D6  C0BD  F0A1         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$390+1
  2166   0012DA  C0BE  F0A2         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$390+2
  2167   0012DE  C0BF  F0A3         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$390+3
  2168   0012E2                     l121:
  2169   0012E2  C0A0  F0B0         	movff	_convert_rgb2hue$390,convert_rgb2hue@max
  2170   0012E6  C0A1  F0B1         	movff	_convert_rgb2hue$390+1,convert_rgb2hue@max+1
  2171   0012EA  C0A2  F0B2         	movff	_convert_rgb2hue$390+2,convert_rgb2hue@max+2
  2172   0012EE  C0A3  F0B3         	movff	_convert_rgb2hue$390+3,convert_rgb2hue@max+3
  2173   0012F2  EFAE  F009         	goto	l4770
  2174   0012F6                     l4766:
  2175   0012F6  C0C0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2176   0012FA  C0C1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2177   0012FE  C0C2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2178   001302  C0C3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2179   001306  C0B8  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2180   00130A  C0B9  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2181   00130E  C0BA  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2182   001312  C0BB  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2183   001316  ECC0  F016         	call	___flge	;wreg free
  2184   00131A  A0D8               	btfss	status,0,c
  2185   00131C  EF92  F009         	goto	u4171
  2186   001320  EF94  F009         	goto	u4170
  2187   001324                     u4171:
  2188   001324  EF9E  F009         	goto	l123
  2189   001328                     u4170:
  2190   001328  C0C0  F0A4         	movff	convert_rgb2hue@b,_convert_rgb2hue$391
  2191   00132C  C0C1  F0A5         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$391+1
  2192   001330  C0C2  F0A6         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$391+2
  2193   001334  C0C3  F0A7         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$391+3
  2194   001338  EFA6  F009         	goto	l125
  2195   00133C                     l123:
  2196   00133C  C0B8  F0A4         	movff	convert_rgb2hue@r,_convert_rgb2hue$391
  2197   001340  C0B9  F0A5         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$391+1
  2198   001344  C0BA  F0A6         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$391+2
  2199   001348  C0BB  F0A7         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$391+3
  2200   00134C                     l125:
  2201   00134C  C0A4  F0B0         	movff	_convert_rgb2hue$391,convert_rgb2hue@max
  2202   001350  C0A5  F0B1         	movff	_convert_rgb2hue$391+1,convert_rgb2hue@max+1
  2203   001354  C0A6  F0B2         	movff	_convert_rgb2hue$391+2,convert_rgb2hue@max+2
  2204   001358  C0A7  F0B3         	movff	_convert_rgb2hue$391+3,convert_rgb2hue@max+3
  2205   00135C                     l4770:
  2206                           
  2207                           ;color.c: 301:     diff = max - min;
  2208   00135C  C0B0  F011         	movff	convert_rgb2hue@max,___flsub@b
  2209   001360  C0B1  F012         	movff	convert_rgb2hue@max+1,___flsub@b+1
  2210   001364  C0B2  F013         	movff	convert_rgb2hue@max+2,___flsub@b+2
  2211   001368  C0B3  F014         	movff	convert_rgb2hue@max+3,___flsub@b+3
  2212   00136C  C0A8  F015         	movff	convert_rgb2hue@min,___flsub@a
  2213   001370  C0A9  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2214   001374  C0AA  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2215   001378  C0AB  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2216   00137C  EC4E  F01C         	call	___flsub	;wreg free
  2217   001380  C011  F0AC         	movff	?___flsub,convert_rgb2hue@diff
  2218   001384  C012  F0AD         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2219   001388  C013  F0AE         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2220   00138C  C014  F0AF         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2221                           
  2222                           ;color.c: 302:     if (max == min) {
  2223   001390  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2224   001394  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2225   001398  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2226   00139C  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2227   0013A0  C0A8  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2228   0013A4  C0A9  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2229   0013A8  C0AA  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2230   0013AC  C0AB  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2231   0013B0  ECCE  F018         	call	___fleq	;wreg free
  2232   0013B4  A0D8               	btfss	status,0,c
  2233   0013B6  EFDF  F009         	goto	u4181
  2234   0013BA  EFE1  F009         	goto	u4180
  2235   0013BE                     u4181:
  2236   0013BE  EFEC  F009         	goto	l4774
  2237   0013C2                     u4180:
  2238   0013C2                     
  2239                           ;color.c: 303:         hue = 0;
  2240   0013C2  0E00               	movlw	0
  2241   0013C4  0100               	movlb	0	; () banked
  2242   0013C6  6FB4               	movwf	convert_rgb2hue@hue& (0+255),b
  2243   0013C8  0E00               	movlw	0
  2244   0013CA  6FB5               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  2245   0013CC  0E00               	movlw	0
  2246   0013CE  6FB6               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  2247   0013D0  0E00               	movlw	0
  2248   0013D2  6FB7               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  2249                           
  2250                           ;color.c: 304:     } else if (max == r){
  2251   0013D4  EFF5  F00A         	goto	l4786
  2252   0013D8                     l4774:
  2253   0013D8  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2254   0013DC  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2255   0013E0  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2256   0013E4  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2257   0013E8  C0B8  F005         	movff	convert_rgb2hue@r,___fleq@ff2
  2258   0013EC  C0B9  F006         	movff	convert_rgb2hue@r+1,___fleq@ff2+1
  2259   0013F0  C0BA  F007         	movff	convert_rgb2hue@r+2,___fleq@ff2+2
  2260   0013F4  C0BB  F008         	movff	convert_rgb2hue@r+3,___fleq@ff2+3
  2261   0013F8  ECCE  F018         	call	___fleq	;wreg free
  2262   0013FC  A0D8               	btfss	status,0,c
  2263   0013FE  EF03  F00A         	goto	u4191
  2264   001402  EF05  F00A         	goto	u4190
  2265   001406                     u4191:
  2266   001406  EF33  F00A         	goto	l4778
  2267   00140A                     u4190:
  2268   00140A                     
  2269                           ;color.c: 305:         hue = (b - g) / diff;
  2270   00140A  C0BC  F015         	movff	convert_rgb2hue@g,___flsub@a
  2271   00140E  C0BD  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2272   001412  C0BE  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2273   001416  C0BF  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2274   00141A  C0C0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2275   00141E  C0C1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2276   001422  C0C2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2277   001426  C0C3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2278   00142A  EC4E  F01C         	call	___flsub	;wreg free
  2279   00142E  C011  F019         	movff	?___flsub,___fldiv@b
  2280   001432  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2281   001436  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2282   00143A  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2283   00143E  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2284   001442  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2285   001446  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2286   00144A  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2287   00144E  ECB5  F00F         	call	___fldiv	;wreg free
  2288   001452  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2289   001456  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2290   00145A  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2291   00145E  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2292                           
  2293                           ;color.c: 306:     } else if (max == g){
  2294   001462  EFF5  F00A         	goto	l4786
  2295   001466                     l4778:
  2296   001466  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2297   00146A  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2298   00146E  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2299   001472  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2300   001476  C0BC  F005         	movff	convert_rgb2hue@g,___fleq@ff2
  2301   00147A  C0BD  F006         	movff	convert_rgb2hue@g+1,___fleq@ff2+1
  2302   00147E  C0BE  F007         	movff	convert_rgb2hue@g+2,___fleq@ff2+2
  2303   001482  C0BF  F008         	movff	convert_rgb2hue@g+3,___fleq@ff2+3
  2304   001486  ECCE  F018         	call	___fleq	;wreg free
  2305   00148A  A0D8               	btfss	status,0,c
  2306   00148C  EF4A  F00A         	goto	u4201
  2307   001490  EF4C  F00A         	goto	u4200
  2308   001494                     u4201:
  2309   001494  EF94  F00A         	goto	l4782
  2310   001498                     u4200:
  2311   001498                     
  2312                           ;color.c: 307:         hue = (b - r) / diff;
  2313   001498  C0B8  F015         	movff	convert_rgb2hue@r,___flsub@a
  2314   00149C  C0B9  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2315   0014A0  C0BA  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2316   0014A4  C0BB  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2317   0014A8  C0C0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2318   0014AC  C0C1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2319   0014B0  C0C2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2320   0014B4  C0C3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2321   0014B8  EC4E  F01C         	call	___flsub	;wreg free
  2322   0014BC  C011  F019         	movff	?___flsub,___fldiv@b
  2323   0014C0  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2324   0014C4  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2325   0014C8  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2326   0014CC  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2327   0014D0  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2328   0014D4  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2329   0014D8  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2330   0014DC  ECB5  F00F         	call	___fldiv	;wreg free
  2331   0014E0  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2332   0014E4  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2333   0014E8  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2334   0014EC  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2335                           
  2336                           ;color.c: 308:         hue = hue + 2;
  2337   0014F0  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2338   0014F4  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2339   0014F8  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2340   0014FC  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2341   001500  0E00               	movlw	0
  2342   001502  6E05               	movwf	___fladd@a^0,c
  2343   001504  0E00               	movlw	0
  2344   001506  6E06               	movwf	(___fladd@a+1)^0,c
  2345   001508  0E00               	movlw	0
  2346   00150A  6E07               	movwf	(___fladd@a+2)^0,c
  2347   00150C  0E40               	movlw	64
  2348   00150E  6E08               	movwf	(___fladd@a+3)^0,c
  2349   001510  EC40  F00B         	call	___fladd	;wreg free
  2350   001514  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2351   001518  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2352   00151C  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2353   001520  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2354                           
  2355                           ;color.c: 309:     } else if (max == b){
  2356   001524  EFF5  F00A         	goto	l4786
  2357   001528                     l4782:
  2358   001528  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2359   00152C  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2360   001530  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2361   001534  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2362   001538  C0C0  F005         	movff	convert_rgb2hue@b,___fleq@ff2
  2363   00153C  C0C1  F006         	movff	convert_rgb2hue@b+1,___fleq@ff2+1
  2364   001540  C0C2  F007         	movff	convert_rgb2hue@b+2,___fleq@ff2+2
  2365   001544  C0C3  F008         	movff	convert_rgb2hue@b+3,___fleq@ff2+3
  2366   001548  ECCE  F018         	call	___fleq	;wreg free
  2367   00154C  A0D8               	btfss	status,0,c
  2368   00154E  EFAB  F00A         	goto	u4211
  2369   001552  EFAD  F00A         	goto	u4210
  2370   001556                     u4211:
  2371   001556  EFF5  F00A         	goto	l129
  2372   00155A                     u4210:
  2373   00155A                     
  2374                           ;color.c: 310:         hue = (r - g) / diff;
  2375   00155A  C0BC  F015         	movff	convert_rgb2hue@g,___flsub@a
  2376   00155E  C0BD  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2377   001562  C0BE  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2378   001566  C0BF  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2379   00156A  C0B8  F011         	movff	convert_rgb2hue@r,___flsub@b
  2380   00156E  C0B9  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2381   001572  C0BA  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2382   001576  C0BB  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2383   00157A  EC4E  F01C         	call	___flsub	;wreg free
  2384   00157E  C011  F019         	movff	?___flsub,___fldiv@b
  2385   001582  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2386   001586  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2387   00158A  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2388   00158E  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2389   001592  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2390   001596  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2391   00159A  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2392   00159E  ECB5  F00F         	call	___fldiv	;wreg free
  2393   0015A2  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2394   0015A6  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2395   0015AA  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2396   0015AE  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2397                           
  2398                           ;color.c: 311:         hue = hue + 4;
  2399   0015B2  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2400   0015B6  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2401   0015BA  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2402   0015BE  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2403   0015C2  0E00               	movlw	0
  2404   0015C4  6E05               	movwf	___fladd@a^0,c
  2405   0015C6  0E00               	movlw	0
  2406   0015C8  6E06               	movwf	(___fladd@a+1)^0,c
  2407   0015CA  0E80               	movlw	128
  2408   0015CC  6E07               	movwf	(___fladd@a+2)^0,c
  2409   0015CE  0E40               	movlw	64
  2410   0015D0  6E08               	movwf	(___fladd@a+3)^0,c
  2411   0015D2  EC40  F00B         	call	___fladd	;wreg free
  2412   0015D6  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2413   0015DA  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2414   0015DE  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2415   0015E2  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2416   0015E6  EFF5  F00A         	goto	l4786
  2417   0015EA                     l129:
  2418   0015EA                     l4786:
  2419                           
  2420                           ;color.c: 314:     hue = hue * 60;
  2421   0015EA  C0B4  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2422   0015EE  C0B5  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2423   0015F2  C0B6  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2424   0015F6  C0B7  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2425   0015FA  0E00               	movlw	0
  2426   0015FC  6E05               	movwf	___flmul@a^0,c
  2427   0015FE  0E00               	movlw	0
  2428   001600  6E06               	movwf	(___flmul@a+1)^0,c
  2429   001602  0E70               	movlw	112
  2430   001604  6E07               	movwf	(___flmul@a+2)^0,c
  2431   001606  0E42               	movlw	66
  2432   001608  6E08               	movwf	(___flmul@a+3)^0,c
  2433   00160A  ECA0  F00D         	call	___flmul	;wreg free
  2434   00160E  C001  F0B4         	movff	?___flmul,convert_rgb2hue@hue
  2435   001612  C002  F0B5         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2436   001616  C003  F0B6         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2437   00161A  C004  F0B7         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2438   00161E                     
  2439                           ;color.c: 315:     if (hue < 0) {
  2440   00161E  0100               	movlb	0	; () banked
  2441   001620  BFB7               	btfsc	(convert_rgb2hue@hue+3)& (0+255),7,b
  2442   001622  EF17  F00B         	goto	u4220
  2443   001626  EF15  F00B         	goto	u4221
  2444   00162A                     u4221:
  2445   00162A  EF31  F00B         	goto	l133
  2446   00162E                     u4220:
  2447   00162E                     
  2448                           ; BSR set to: 0
  2449                           ;color.c: 316:         hue = hue + 360;
  2450   00162E  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2451   001632  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2452   001636  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2453   00163A  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2454   00163E  0E00               	movlw	0
  2455   001640  6E05               	movwf	___fladd@a^0,c
  2456   001642  0E00               	movlw	0
  2457   001644  6E06               	movwf	(___fladd@a+1)^0,c
  2458   001646  0EB4               	movlw	180
  2459   001648  6E07               	movwf	(___fladd@a+2)^0,c
  2460   00164A  0E43               	movlw	67
  2461   00164C  6E08               	movwf	(___fladd@a+3)^0,c
  2462   00164E  EC40  F00B         	call	___fladd	;wreg free
  2463   001652  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2464   001656  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2465   00165A  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2466   00165E  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2467   001662                     l133:
  2468                           
  2469                           ;color.c: 319:     return (unsigned int)hue;
  2470   001662  C0B4  F001         	movff	convert_rgb2hue@hue,___fltol@f1
  2471   001666  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2472   00166A  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2473   00166E  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2474   001672  EC3D  F016         	call	___fltol	;wreg free
  2475   001676  C001  F044         	movff	?___fltol,?_convert_rgb2hue
  2476   00167A  C002  F045         	movff	?___fltol+1,?_convert_rgb2hue+1
  2477   00167E  0012               	return		;funcret
  2478   001680                     __end_of_convert_rgb2hue:
  2479                           	callstack 0
  2480                           
  2481 ;; *************** function ___xxtofl *****************
  2482 ;; Defined at:
  2483 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;  sign            1    wreg     unsigned char 
  2486 ;;  val             4    0[COMRAM] long 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;  sign            1    8[COMRAM] unsigned char 
  2489 ;;  arg             4   10[COMRAM] unsigned long 
  2490 ;;  exp             1    9[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  4    0[COMRAM] unsigned char 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2501 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2503 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2504 ;;Total ram usage:       14 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_convert_rgb2hue
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text4
  2515   0024D6                     __ptext4:
  2516                           	callstack 0
  2517   0024D6                     ___xxtofl:
  2518                           	callstack 28
  2519                           
  2520                           ;incstack = 0
  2521                           ;___xxtofl@sign stored from wreg
  2522   0024D6  6E09               	movwf	___xxtofl@sign^0,c
  2523   0024D8  5009               	movf	___xxtofl@sign^0,w,c
  2524   0024DA  B4D8               	btfsc	status,2,c
  2525   0024DC  EF72  F012         	goto	u3511
  2526   0024E0  EF74  F012         	goto	u3510
  2527   0024E4                     u3511:
  2528   0024E4  EF96  F012         	goto	l1201
  2529   0024E8                     u3510:
  2530   0024E8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2531   0024EA  EF7B  F012         	goto	u3520
  2532   0024EE  EF79  F012         	goto	u3521
  2533   0024F2                     u3521:
  2534   0024F2  EF96  F012         	goto	l1201
  2535   0024F6                     u3520:
  2536   0024F6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2537   0024FA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2538   0024FE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2539   002502  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2540   002506  1E05               	comf	??___xxtofl^0,f,c
  2541   002508  1E06               	comf	(??___xxtofl+1)^0,f,c
  2542   00250A  1E07               	comf	(??___xxtofl+2)^0,f,c
  2543   00250C  1E08               	comf	(??___xxtofl+3)^0,f,c
  2544   00250E  2A05               	incf	??___xxtofl^0,f,c
  2545   002510  0E00               	movlw	0
  2546   002512  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2547   002514  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2548   002516  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2549   002518  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2550   00251C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2551   002520  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2552   002524  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2553   002528  EF9E  F012         	goto	l3980
  2554   00252C                     l1201:
  2555   00252C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2556   002530  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2557   002534  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2558   002538  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2559   00253C                     l3980:
  2560   00253C  5001               	movf	___xxtofl@val^0,w,c
  2561   00253E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2562   002540  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2563   002542  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2564   002544  A4D8               	btfss	status,2,c
  2565   002546  EFA7  F012         	goto	u3531
  2566   00254A  EFA9  F012         	goto	u3530
  2567   00254E                     u3531:
  2568   00254E  EFB3  F012         	goto	l3986
  2569   002552                     u3530:
  2570   002552  0E00               	movlw	0
  2571   002554  6E01               	movwf	?___xxtofl^0,c
  2572   002556  0E00               	movlw	0
  2573   002558  6E02               	movwf	(?___xxtofl+1)^0,c
  2574   00255A  0E00               	movlw	0
  2575   00255C  6E03               	movwf	(?___xxtofl+2)^0,c
  2576   00255E  0E00               	movlw	0
  2577   002560  6E04               	movwf	(?___xxtofl+3)^0,c
  2578   002562  EF44  F013         	goto	l1204
  2579   002566                     l3986:
  2580   002566  0E96               	movlw	150
  2581   002568  6E0A               	movwf	___xxtofl@exp^0,c
  2582   00256A  EFBD  F012         	goto	l3990
  2583   00256E                     l3988:
  2584   00256E  2A0A               	incf	___xxtofl@exp^0,f,c
  2585   002570  90D8               	bcf	status,0,c
  2586   002572  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2587   002574  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2588   002576  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2589   002578  320B               	rrcf	___xxtofl@arg^0,f,c
  2590   00257A                     l3990:
  2591   00257A  0E00               	movlw	0
  2592   00257C  140B               	andwf	___xxtofl@arg^0,w,c
  2593   00257E  6E05               	movwf	??___xxtofl^0,c
  2594   002580  0E00               	movlw	0
  2595   002582  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2596   002584  6E06               	movwf	(??___xxtofl+1)^0,c
  2597   002586  0E00               	movlw	0
  2598   002588  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2599   00258A  6E07               	movwf	(??___xxtofl+2)^0,c
  2600   00258C  0EFE               	movlw	254
  2601   00258E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2602   002590  6E08               	movwf	(??___xxtofl+3)^0,c
  2603   002592  5005               	movf	??___xxtofl^0,w,c
  2604   002594  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2605   002596  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2606   002598  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2607   00259A  A4D8               	btfss	status,2,c
  2608   00259C  EFD2  F012         	goto	u3541
  2609   0025A0  EFD4  F012         	goto	u3540
  2610   0025A4                     u3541:
  2611   0025A4  EFB7  F012         	goto	l3988
  2612   0025A8                     u3540:
  2613   0025A8  EFE2  F012         	goto	l1208
  2614   0025AC                     l3992:
  2615   0025AC  2A0A               	incf	___xxtofl@exp^0,f,c
  2616   0025AE  0E01               	movlw	1
  2617   0025B0  260B               	addwf	___xxtofl@arg^0,f,c
  2618   0025B2  0E00               	movlw	0
  2619   0025B4  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2620   0025B6  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2621   0025B8  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2622   0025BA  90D8               	bcf	status,0,c
  2623   0025BC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2624   0025BE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2625   0025C0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2626   0025C2  320B               	rrcf	___xxtofl@arg^0,f,c
  2627   0025C4                     l1208:
  2628   0025C4  0E00               	movlw	0
  2629   0025C6  140B               	andwf	___xxtofl@arg^0,w,c
  2630   0025C8  6E05               	movwf	??___xxtofl^0,c
  2631   0025CA  0E00               	movlw	0
  2632   0025CC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2633   0025CE  6E06               	movwf	(??___xxtofl+1)^0,c
  2634   0025D0  0E00               	movlw	0
  2635   0025D2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2636   0025D4  6E07               	movwf	(??___xxtofl+2)^0,c
  2637   0025D6  0EFF               	movlw	255
  2638   0025D8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2639   0025DA  6E08               	movwf	(??___xxtofl+3)^0,c
  2640   0025DC  5005               	movf	??___xxtofl^0,w,c
  2641   0025DE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2642   0025E0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2643   0025E2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2644   0025E4  A4D8               	btfss	status,2,c
  2645   0025E6  EFF7  F012         	goto	u3551
  2646   0025EA  EFF9  F012         	goto	u3550
  2647   0025EE                     u3551:
  2648   0025EE  EFD6  F012         	goto	l3992
  2649   0025F2                     u3550:
  2650   0025F2  EF01  F013         	goto	l4000
  2651   0025F6                     l3998:
  2652   0025F6  060A               	decf	___xxtofl@exp^0,f,c
  2653   0025F8  90D8               	bcf	status,0,c
  2654   0025FA  360B               	rlcf	___xxtofl@arg^0,f,c
  2655   0025FC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2656   0025FE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2657   002600  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2658   002602                     l4000:
  2659   002602  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2660   002604  EF06  F013         	goto	u3561
  2661   002608  EF08  F013         	goto	u3560
  2662   00260C                     u3561:
  2663   00260C  EF10  F013         	goto	l1215
  2664   002610                     u3560:
  2665   002610  0E02               	movlw	2
  2666   002612  600A               	cpfslt	___xxtofl@exp^0,c
  2667   002614  EF0E  F013         	goto	u3571
  2668   002618  EF10  F013         	goto	u3570
  2669   00261C                     u3571:
  2670   00261C  EFFB  F012         	goto	l3998
  2671   002620                     u3570:
  2672   002620                     l1215:
  2673   002620  B00A               	btfsc	___xxtofl@exp^0,0,c
  2674   002622  EF15  F013         	goto	u3581
  2675   002626  EF17  F013         	goto	u3580
  2676   00262A                     u3581:
  2677   00262A  EF18  F013         	goto	l4006
  2678   00262E                     u3580:
  2679   00262E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2680   002630                     l4006:
  2681   002630  90D8               	bcf	status,0,c
  2682   002632  320A               	rrcf	___xxtofl@exp^0,f,c
  2683   002634  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2684   002638  6A06               	clrf	(??___xxtofl+1)^0,c
  2685   00263A  6A07               	clrf	(??___xxtofl+2)^0,c
  2686   00263C  6A08               	clrf	(??___xxtofl+3)^0,c
  2687   00263E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2688   002642  6A07               	clrf	(??___xxtofl+2)^0,c
  2689   002644  6A06               	clrf	(??___xxtofl+1)^0,c
  2690   002646  6A05               	clrf	??___xxtofl^0,c
  2691   002648  5005               	movf	??___xxtofl^0,w,c
  2692   00264A  120B               	iorwf	___xxtofl@arg^0,f,c
  2693   00264C  5006               	movf	(??___xxtofl+1)^0,w,c
  2694   00264E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2695   002650  5007               	movf	(??___xxtofl+2)^0,w,c
  2696   002652  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2697   002654  5008               	movf	(??___xxtofl+3)^0,w,c
  2698   002656  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2699   002658  5009               	movf	___xxtofl@sign^0,w,c
  2700   00265A  B4D8               	btfsc	status,2,c
  2701   00265C  EF32  F013         	goto	u3591
  2702   002660  EF34  F013         	goto	u3590
  2703   002664                     u3591:
  2704   002664  EF3C  F013         	goto	l4016
  2705   002668                     u3590:
  2706   002668  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2707   00266A  EF3B  F013         	goto	u3600
  2708   00266E  EF39  F013         	goto	u3601
  2709   002672                     u3601:
  2710   002672  EF3C  F013         	goto	l4016
  2711   002676                     u3600:
  2712   002676  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2713   002678                     l4016:
  2714   002678  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2715   00267C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2716   002680  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2717   002684  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2718   002688                     l1204:
  2719   002688  0012               	return		;funcret
  2720   00268A                     __end_of___xxtofl:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function ___fltol *****************
  2724 ;; Defined at:
  2725 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;  f1              4    0[COMRAM] unsigned char 
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  exp1            1    9[COMRAM] unsigned char 
  2730 ;;  sign1           1    8[COMRAM] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  4    0[COMRAM] long 
  2733 ;; Registers used:
  2734 ;;		wreg, status,2, status,0
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2743 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2744 ;;Total ram usage:       10 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; This function calls:
  2747 ;;		Nothing
  2748 ;; This function is called by:
  2749 ;;		_convert_rgb2hue
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           	psect	text5
  2754   002C7A                     __ptext5:
  2755                           	callstack 0
  2756   002C7A                     ___fltol:
  2757                           	callstack 28
  2758   002C7A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2759   002C7C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2760   002C7E  6E0A               	movwf	___fltol@exp1^0,c
  2761   002C80  500A               	movf	___fltol@exp1^0,w,c
  2762   002C82  A4D8               	btfss	status,2,c
  2763   002C84  EF46  F016         	goto	u3441
  2764   002C88  EF48  F016         	goto	u3440
  2765   002C8C                     u3441:
  2766   002C8C  EF52  F016         	goto	l3936
  2767   002C90                     u3440:
  2768   002C90                     l3932:
  2769   002C90  0E00               	movlw	0
  2770   002C92  6E01               	movwf	?___fltol^0,c
  2771   002C94  0E00               	movlw	0
  2772   002C96  6E02               	movwf	(?___fltol+1)^0,c
  2773   002C98  0E00               	movlw	0
  2774   002C9A  6E03               	movwf	(?___fltol+2)^0,c
  2775   002C9C  0E00               	movlw	0
  2776   002C9E  6E04               	movwf	(?___fltol+3)^0,c
  2777   002CA0  EFBF  F016         	goto	l843
  2778   002CA4                     l3936:
  2779   002CA4  C001  F005         	movff	___fltol@f1,??___fltol
  2780   002CA8  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2781   002CAC  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2782   002CB0  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2783   002CB4  0E20               	movlw	32
  2784   002CB6  EF62  F016         	goto	u3450
  2785   002CBA                     u3455:
  2786   002CBA  90D8               	bcf	status,0,c
  2787   002CBC  3208               	rrcf	(??___fltol+3)^0,f,c
  2788   002CBE  3207               	rrcf	(??___fltol+2)^0,f,c
  2789   002CC0  3206               	rrcf	(??___fltol+1)^0,f,c
  2790   002CC2  3205               	rrcf	??___fltol^0,f,c
  2791   002CC4                     u3450:
  2792   002CC4  2EE8               	decfsz	wreg,f,c
  2793   002CC6  EF5D  F016         	goto	u3455
  2794   002CCA  5005               	movf	??___fltol^0,w,c
  2795   002CCC  6E09               	movwf	___fltol@sign1^0,c
  2796   002CCE  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2797   002CD0  0EFF               	movlw	255
  2798   002CD2  1601               	andwf	___fltol@f1^0,f,c
  2799   002CD4  0EFF               	movlw	255
  2800   002CD6  1602               	andwf	(___fltol@f1+1)^0,f,c
  2801   002CD8  0EFF               	movlw	255
  2802   002CDA  1603               	andwf	(___fltol@f1+2)^0,f,c
  2803   002CDC  0E00               	movlw	0
  2804   002CDE  1604               	andwf	(___fltol@f1+3)^0,f,c
  2805   002CE0  0E96               	movlw	150
  2806   002CE2  5E0A               	subwf	___fltol@exp1^0,f,c
  2807   002CE4  BE0A               	btfsc	___fltol@exp1^0,7,c
  2808   002CE6  EF79  F016         	goto	u3460
  2809   002CEA  EF77  F016         	goto	u3461
  2810   002CEE                     u3461:
  2811   002CEE  EF8F  F016         	goto	l3956
  2812   002CF2                     u3460:
  2813   002CF2  500A               	movf	___fltol@exp1^0,w,c
  2814   002CF4  0A80               	xorlw	128
  2815   002CF6  0F97               	addlw	151
  2816   002CF8  B0D8               	btfsc	status,0,c
  2817   002CFA  EF81  F016         	goto	u3471
  2818   002CFE  EF83  F016         	goto	u3470
  2819   002D02                     u3471:
  2820   002D02  EF85  F016         	goto	l3952
  2821   002D06                     u3470:
  2822   002D06  EF48  F016         	goto	l3932
  2823   002D0A                     l3952:
  2824   002D0A  90D8               	bcf	status,0,c
  2825   002D0C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2826   002D0E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2827   002D10  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2828   002D12  3201               	rrcf	___fltol@f1^0,f,c
  2829   002D14  3E0A               	incfsz	___fltol@exp1^0,f,c
  2830   002D16  EF85  F016         	goto	l3952
  2831   002D1A  EFA7  F016         	goto	l3966
  2832   002D1E                     l3956:
  2833   002D1E  0E1F               	movlw	31
  2834   002D20  640A               	cpfsgt	___fltol@exp1^0,c
  2835   002D22  EF95  F016         	goto	u3481
  2836   002D26  EF97  F016         	goto	u3480
  2837   002D2A                     u3481:
  2838   002D2A  EF9F  F016         	goto	l3964
  2839   002D2E                     u3480:
  2840   002D2E  EF48  F016         	goto	l3932
  2841   002D32                     l3962:
  2842   002D32  90D8               	bcf	status,0,c
  2843   002D34  3601               	rlcf	___fltol@f1^0,f,c
  2844   002D36  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2845   002D38  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2846   002D3A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2847   002D3C  060A               	decf	___fltol@exp1^0,f,c
  2848   002D3E                     l3964:
  2849   002D3E  500A               	movf	___fltol@exp1^0,w,c
  2850   002D40  A4D8               	btfss	status,2,c
  2851   002D42  EFA5  F016         	goto	u3491
  2852   002D46  EFA7  F016         	goto	u3490
  2853   002D4A                     u3491:
  2854   002D4A  EF99  F016         	goto	l3962
  2855   002D4E                     u3490:
  2856   002D4E                     l3966:
  2857   002D4E  5009               	movf	___fltol@sign1^0,w,c
  2858   002D50  B4D8               	btfsc	status,2,c
  2859   002D52  EFAD  F016         	goto	u3501
  2860   002D56  EFAF  F016         	goto	u3500
  2861   002D5A                     u3501:
  2862   002D5A  EFB7  F016         	goto	l3970
  2863   002D5E                     u3500:
  2864   002D5E  1E04               	comf	(___fltol@f1+3)^0,f,c
  2865   002D60  1E03               	comf	(___fltol@f1+2)^0,f,c
  2866   002D62  1E02               	comf	(___fltol@f1+1)^0,f,c
  2867   002D64  6C01               	negf	___fltol@f1^0,c
  2868   002D66  0E00               	movlw	0
  2869   002D68  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2870   002D6A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2871   002D6C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2872   002D6E                     l3970:
  2873   002D6E  C001  F001         	movff	___fltol@f1,?___fltol
  2874   002D72  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2875   002D76  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2876   002D7A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2877   002D7E                     l843:
  2878   002D7E  0012               	return		;funcret
  2879   002D80                     __end_of___fltol:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function ___flsub *****************
  2883 ;; Defined at:
  2884 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  b               4   16[COMRAM] long 
  2887 ;;  a               4   20[COMRAM] long 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;		None
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  4   16[COMRAM] long 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2902 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2903 ;;Total ram usage:        8 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 1
  2906 ;; This function calls:
  2907 ;;		___fladd
  2908 ;; This function is called by:
  2909 ;;		_convert_rgb2hue
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text6
  2914   00389C                     __ptext6:
  2915                           	callstack 0
  2916   00389C                     ___flsub:
  2917                           	callstack 27
  2918   00389C  0E00               	movlw	0
  2919   00389E  1A15               	xorwf	___flsub@a^0,f,c
  2920   0038A0  0E00               	movlw	0
  2921   0038A2  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2922   0038A4  0E00               	movlw	0
  2923   0038A6  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2924   0038A8  0E80               	movlw	128
  2925   0038AA  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2926   0038AC  C011  F001         	movff	___flsub@b,___fladd@b
  2927   0038B0  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2928   0038B4  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2929   0038B8  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2930   0038BC  C015  F005         	movff	___flsub@a,___fladd@a
  2931   0038C0  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2932   0038C4  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2933   0038C8  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2934   0038CC  EC40  F00B         	call	___fladd	;wreg free
  2935   0038D0  C001  F011         	movff	?___fladd,?___flsub
  2936   0038D4  C002  F012         	movff	?___fladd+1,?___flsub+1
  2937   0038D8  C003  F013         	movff	?___fladd+2,?___flsub+2
  2938   0038DC  C004  F014         	movff	?___fladd+3,?___flsub+3
  2939   0038E0  0012               	return		;funcret
  2940   0038E2                     __end_of___flsub:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function ___fladd *****************
  2944 ;; Defined at:
  2945 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  b               4    0[COMRAM] long 
  2948 ;;  a               4    4[COMRAM] long 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  grs             1   15[COMRAM] unsigned char 
  2951 ;;  bexp            1   14[COMRAM] unsigned char 
  2952 ;;  aexp            1   13[COMRAM] unsigned char 
  2953 ;;  signs           1   12[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4    0[COMRAM] unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;Total ram usage:       16 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_convert_rgb2hue
  2973 ;;		___flsub
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text7
  2978   001680                     __ptext7:
  2979                           	callstack 0
  2980   001680                     ___fladd:
  2981                           	callstack 27
  2982   001680  5004               	movf	(___fladd@b+3)^0,w,c
  2983   001682  0B80               	andlw	128
  2984   001684  6E0D               	movwf	___fladd@signs^0,c
  2985   001686  5004               	movf	(___fladd@b+3)^0,w,c
  2986   001688  2404               	addwf	(___fladd@b+3)^0,w,c
  2987   00168A  6E0F               	movwf	___fladd@bexp^0,c
  2988   00168C  AE03               	btfss	(___fladd@b+2)^0,7,c
  2989   00168E  EF4B  F00B         	goto	u2511
  2990   001692  EF4D  F00B         	goto	u2510
  2991   001696                     u2511:
  2992   001696  EF4E  F00B         	goto	l3342
  2993   00169A                     u2510:
  2994   00169A  800F               	bsf	___fladd@bexp^0,0,c
  2995   00169C                     l3342:
  2996   00169C  500F               	movf	___fladd@bexp^0,w,c
  2997   00169E  B4D8               	btfsc	status,2,c
  2998   0016A0  EF54  F00B         	goto	u2521
  2999   0016A4  EF56  F00B         	goto	u2520
  3000   0016A8                     u2521:
  3001   0016A8  EF6B  F00B         	goto	l3352
  3002   0016AC                     u2520:
  3003   0016AC  280F               	incf	___fladd@bexp^0,w,c
  3004   0016AE  A4D8               	btfss	status,2,c
  3005   0016B0  EF5C  F00B         	goto	u2531
  3006   0016B4  EF5E  F00B         	goto	u2530
  3007   0016B8                     u2531:
  3008   0016B8  EF66  F00B         	goto	l3348
  3009   0016BC                     u2530:
  3010   0016BC  0E00               	movlw	0
  3011   0016BE  6E01               	movwf	___fladd@b^0,c
  3012   0016C0  0E00               	movlw	0
  3013   0016C2  6E02               	movwf	(___fladd@b+1)^0,c
  3014   0016C4  0E00               	movlw	0
  3015   0016C6  6E03               	movwf	(___fladd@b+2)^0,c
  3016   0016C8  0E00               	movlw	0
  3017   0016CA  6E04               	movwf	(___fladd@b+3)^0,c
  3018   0016CC                     l3348:
  3019   0016CC  8E03               	bsf	(___fladd@b+2)^0,7,c
  3020   0016CE  0E00               	movlw	0
  3021   0016D0  6E04               	movwf	(___fladd@b+3)^0,c
  3022   0016D2  EF73  F00B         	goto	l3354
  3023   0016D6                     l3352:
  3024   0016D6  0E00               	movlw	0
  3025   0016D8  6E01               	movwf	___fladd@b^0,c
  3026   0016DA  0E00               	movlw	0
  3027   0016DC  6E02               	movwf	(___fladd@b+1)^0,c
  3028   0016DE  0E00               	movlw	0
  3029   0016E0  6E03               	movwf	(___fladd@b+2)^0,c
  3030   0016E2  0E00               	movlw	0
  3031   0016E4  6E04               	movwf	(___fladd@b+3)^0,c
  3032   0016E6                     l3354:
  3033   0016E6  5008               	movf	(___fladd@a+3)^0,w,c
  3034   0016E8  0B80               	andlw	128
  3035   0016EA  6E0E               	movwf	___fladd@aexp^0,c
  3036   0016EC  500D               	movf	___fladd@signs^0,w,c
  3037   0016EE  180E               	xorwf	___fladd@aexp^0,w,c
  3038   0016F0  B4D8               	btfsc	status,2,c
  3039   0016F2  EF7D  F00B         	goto	u2541
  3040   0016F6  EF7F  F00B         	goto	u2540
  3041   0016FA                     u2541:
  3042   0016FA  EF80  F00B         	goto	l3360
  3043   0016FE                     u2540:
  3044   0016FE  8C0D               	bsf	___fladd@signs^0,6,c
  3045   001700                     l3360:
  3046   001700  5008               	movf	(___fladd@a+3)^0,w,c
  3047   001702  2408               	addwf	(___fladd@a+3)^0,w,c
  3048   001704  6E0E               	movwf	___fladd@aexp^0,c
  3049   001706  AE07               	btfss	(___fladd@a+2)^0,7,c
  3050   001708  EF88  F00B         	goto	u2551
  3051   00170C  EF8A  F00B         	goto	u2550
  3052   001710                     u2551:
  3053   001710  EF8B  F00B         	goto	l3366
  3054   001714                     u2550:
  3055   001714  800E               	bsf	___fladd@aexp^0,0,c
  3056   001716                     l3366:
  3057   001716  500E               	movf	___fladd@aexp^0,w,c
  3058   001718  B4D8               	btfsc	status,2,c
  3059   00171A  EF91  F00B         	goto	u2561
  3060   00171E  EF93  F00B         	goto	u2560
  3061   001722                     u2561:
  3062   001722  EFA8  F00B         	goto	l3376
  3063   001726                     u2560:
  3064   001726  280E               	incf	___fladd@aexp^0,w,c
  3065   001728  A4D8               	btfss	status,2,c
  3066   00172A  EF99  F00B         	goto	u2571
  3067   00172E  EF9B  F00B         	goto	u2570
  3068   001732                     u2571:
  3069   001732  EFA3  F00B         	goto	l3372
  3070   001736                     u2570:
  3071   001736  0E00               	movlw	0
  3072   001738  6E05               	movwf	___fladd@a^0,c
  3073   00173A  0E00               	movlw	0
  3074   00173C  6E06               	movwf	(___fladd@a+1)^0,c
  3075   00173E  0E00               	movlw	0
  3076   001740  6E07               	movwf	(___fladd@a+2)^0,c
  3077   001742  0E00               	movlw	0
  3078   001744  6E08               	movwf	(___fladd@a+3)^0,c
  3079   001746                     l3372:
  3080   001746  8E07               	bsf	(___fladd@a+2)^0,7,c
  3081   001748  0E00               	movlw	0
  3082   00174A  6E08               	movwf	(___fladd@a+3)^0,c
  3083   00174C  EFB0  F00B         	goto	l3378
  3084   001750                     l3376:
  3085   001750  0E00               	movlw	0
  3086   001752  6E05               	movwf	___fladd@a^0,c
  3087   001754  0E00               	movlw	0
  3088   001756  6E06               	movwf	(___fladd@a+1)^0,c
  3089   001758  0E00               	movlw	0
  3090   00175A  6E07               	movwf	(___fladd@a+2)^0,c
  3091   00175C  0E00               	movlw	0
  3092   00175E  6E08               	movwf	(___fladd@a+3)^0,c
  3093   001760                     l3378:
  3094   001760  500F               	movf	___fladd@bexp^0,w,c
  3095   001762  5C0E               	subwf	___fladd@aexp^0,w,c
  3096   001764  B0D8               	btfsc	status,0,c
  3097   001766  EFB7  F00B         	goto	u2581
  3098   00176A  EFB9  F00B         	goto	u2580
  3099   00176E                     u2581:
  3100   00176E  EFE0  F00B         	goto	l3414
  3101   001772                     u2580:
  3102   001772  AC0D               	btfss	___fladd@signs^0,6,c
  3103   001774  EFBE  F00B         	goto	u2591
  3104   001778  EFC0  F00B         	goto	u2590
  3105   00177C                     u2591:
  3106   00177C  EFC2  F00B         	goto	l3384
  3107   001780                     u2590:
  3108   001780  0E80               	movlw	128
  3109   001782  1A0D               	xorwf	___fladd@signs^0,f,c
  3110   001784                     l3384:
  3111   001784  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3112   001788  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3113   00178C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3114   001790  C001  F010         	movff	___fladd@b,___fladd@grs
  3115   001794  C005  F001         	movff	___fladd@a,___fladd@b
  3116   001798  C010  F005         	movff	___fladd@grs,___fladd@a
  3117   00179C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3118   0017A0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3119   0017A4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3120   0017A8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3121   0017AC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3122   0017B0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3123   0017B4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3124   0017B8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3125   0017BC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3126   0017C0                     l3414:
  3127   0017C0  0E00               	movlw	0
  3128   0017C2  6E10               	movwf	___fladd@grs^0,c
  3129   0017C4  500F               	movf	___fladd@bexp^0,w,c
  3130   0017C6  C00E  F009         	movff	___fladd@aexp,??___fladd
  3131   0017CA  6A0A               	clrf	(??___fladd+1)^0,c
  3132   0017CC  5E09               	subwf	??___fladd^0,f,c
  3133   0017CE  0E00               	movlw	0
  3134   0017D0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3135   0017D2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3136   0017D4  EFF5  F00B         	goto	u2601
  3137   0017D8  500A               	movf	(??___fladd+1)^0,w,c
  3138   0017DA  E109               	bnz	u2600
  3139   0017DC  0E1A               	movlw	26
  3140   0017DE  5C09               	subwf	??___fladd^0,w,c
  3141   0017E0  A0D8               	btfss	status,0,c
  3142   0017E2  EFF5  F00B         	goto	u2601
  3143   0017E6  EFF7  F00B         	goto	u2600
  3144   0017EA                     u2601:
  3145   0017EA  EF2E  F00C         	goto	l1075
  3146   0017EE                     u2600:
  3147   0017EE  5001               	movf	___fladd@b^0,w,c
  3148   0017F0  1002               	iorwf	(___fladd@b+1)^0,w,c
  3149   0017F2  1003               	iorwf	(___fladd@b+2)^0,w,c
  3150   0017F4  1004               	iorwf	(___fladd@b+3)^0,w,c
  3151   0017F6  A4D8               	btfss	status,2,c
  3152   0017F8  EF00  F00C         	goto	u2611
  3153   0017FC  EF03  F00C         	goto	u2610
  3154   001800                     u2611:
  3155   001800  0E01               	movlw	1
  3156   001802  EF04  F00C         	goto	u2620
  3157   001806                     u2610:
  3158   001806  0E00               	movlw	0
  3159   001808                     u2620:
  3160   001808  6E10               	movwf	___fladd@grs^0,c
  3161   00180A  0E00               	movlw	0
  3162   00180C  6E01               	movwf	___fladd@b^0,c
  3163   00180E  0E00               	movlw	0
  3164   001810  6E02               	movwf	(___fladd@b+1)^0,c
  3165   001812  0E00               	movlw	0
  3166   001814  6E03               	movwf	(___fladd@b+2)^0,c
  3167   001816  0E00               	movlw	0
  3168   001818  6E04               	movwf	(___fladd@b+3)^0,c
  3169   00181A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3170   00181E  EF37  F00C         	goto	l1074
  3171   001822                     l1076:
  3172   001822  A010               	btfss	___fladd@grs^0,0,c
  3173   001824  EF16  F00C         	goto	u2631
  3174   001828  EF18  F00C         	goto	u2630
  3175   00182C                     u2631:
  3176   00182C  EF1E  F00C         	goto	l3426
  3177   001830                     u2630:
  3178   001830  90D8               	bcf	status,0,c
  3179   001832  3010               	rrcf	___fladd@grs^0,w,c
  3180   001834  0901               	iorlw	1
  3181   001836  6E10               	movwf	___fladd@grs^0,c
  3182   001838  EF20  F00C         	goto	l3428
  3183   00183C                     l3426:
  3184   00183C  90D8               	bcf	status,0,c
  3185   00183E  3210               	rrcf	___fladd@grs^0,f,c
  3186   001840                     l3428:
  3187   001840  A001               	btfss	___fladd@b^0,0,c
  3188   001842  EF25  F00C         	goto	u2641
  3189   001846  EF27  F00C         	goto	u2640
  3190   00184A                     u2641:
  3191   00184A  EF28  F00C         	goto	l3432
  3192   00184E                     u2640:
  3193   00184E  8E10               	bsf	___fladd@grs^0,7,c
  3194   001850                     l3432:
  3195   001850  3404               	rlcf	(___fladd@b+3)^0,w,c
  3196   001852  3204               	rrcf	(___fladd@b+3)^0,f,c
  3197   001854  3203               	rrcf	(___fladd@b+2)^0,f,c
  3198   001856  3202               	rrcf	(___fladd@b+1)^0,f,c
  3199   001858  3201               	rrcf	___fladd@b^0,f,c
  3200   00185A  2A0F               	incf	___fladd@bexp^0,f,c
  3201   00185C                     l1075:
  3202   00185C  500E               	movf	___fladd@aexp^0,w,c
  3203   00185E  5C0F               	subwf	___fladd@bexp^0,w,c
  3204   001860  A0D8               	btfss	status,0,c
  3205   001862  EF35  F00C         	goto	u2651
  3206   001866  EF37  F00C         	goto	u2650
  3207   00186A                     u2651:
  3208   00186A  EF11  F00C         	goto	l1076
  3209   00186E                     u2650:
  3210   00186E                     l1074:
  3211   00186E  BC0D               	btfsc	___fladd@signs^0,6,c
  3212   001870  EF3C  F00C         	goto	u2661
  3213   001874  EF3E  F00C         	goto	u2660
  3214   001878                     u2661:
  3215   001878  EF7E  F00C         	goto	l3460
  3216   00187C                     u2660:
  3217   00187C  500F               	movf	___fladd@bexp^0,w,c
  3218   00187E  A4D8               	btfss	status,2,c
  3219   001880  EF44  F00C         	goto	u2671
  3220   001884  EF46  F00C         	goto	u2670
  3221   001888                     u2671:
  3222   001888  EF50  F00C         	goto	l3442
  3223   00188C                     u2670:
  3224   00188C  0E00               	movlw	0
  3225   00188E  6E01               	movwf	?___fladd^0,c
  3226   001890  0E00               	movlw	0
  3227   001892  6E02               	movwf	(?___fladd+1)^0,c
  3228   001894  0E00               	movlw	0
  3229   001896  6E03               	movwf	(?___fladd+2)^0,c
  3230   001898  0E00               	movlw	0
  3231   00189A  6E04               	movwf	(?___fladd+3)^0,c
  3232   00189C  EF9F  F00D         	goto	l1083
  3233   0018A0                     l3442:
  3234   0018A0  5005               	movf	___fladd@a^0,w,c
  3235   0018A2  2601               	addwf	___fladd@b^0,f,c
  3236   0018A4  5006               	movf	(___fladd@a+1)^0,w,c
  3237   0018A6  2202               	addwfc	(___fladd@b+1)^0,f,c
  3238   0018A8  5007               	movf	(___fladd@a+2)^0,w,c
  3239   0018AA  2203               	addwfc	(___fladd@b+2)^0,f,c
  3240   0018AC  5008               	movf	(___fladd@a+3)^0,w,c
  3241   0018AE  2204               	addwfc	(___fladd@b+3)^0,f,c
  3242   0018B0  A004               	btfss	(___fladd@b+3)^0,0,c
  3243   0018B2  EF5D  F00C         	goto	u2681
  3244   0018B6  EF5F  F00C         	goto	u2680
  3245   0018BA                     u2681:
  3246   0018BA  EF0B  F00D         	goto	l3496
  3247   0018BE                     u2680:
  3248   0018BE  A010               	btfss	___fladd@grs^0,0,c
  3249   0018C0  EF64  F00C         	goto	u2691
  3250   0018C4  EF66  F00C         	goto	u2690
  3251   0018C8                     u2691:
  3252   0018C8  EF6C  F00C         	goto	l3450
  3253   0018CC                     u2690:
  3254   0018CC  90D8               	bcf	status,0,c
  3255   0018CE  3010               	rrcf	___fladd@grs^0,w,c
  3256   0018D0  0901               	iorlw	1
  3257   0018D2  6E10               	movwf	___fladd@grs^0,c
  3258   0018D4  EF6E  F00C         	goto	l3452
  3259   0018D8                     l3450:
  3260   0018D8  90D8               	bcf	status,0,c
  3261   0018DA  3210               	rrcf	___fladd@grs^0,f,c
  3262   0018DC                     l3452:
  3263   0018DC  A001               	btfss	___fladd@b^0,0,c
  3264   0018DE  EF73  F00C         	goto	u2701
  3265   0018E2  EF75  F00C         	goto	u2700
  3266   0018E6                     u2701:
  3267   0018E6  EF76  F00C         	goto	l3456
  3268   0018EA                     u2700:
  3269   0018EA  8E10               	bsf	___fladd@grs^0,7,c
  3270   0018EC                     l3456:
  3271   0018EC  3404               	rlcf	(___fladd@b+3)^0,w,c
  3272   0018EE  3204               	rrcf	(___fladd@b+3)^0,f,c
  3273   0018F0  3203               	rrcf	(___fladd@b+2)^0,f,c
  3274   0018F2  3202               	rrcf	(___fladd@b+1)^0,f,c
  3275   0018F4  3201               	rrcf	___fladd@b^0,f,c
  3276   0018F6  2A0F               	incf	___fladd@bexp^0,f,c
  3277   0018F8  EF0B  F00D         	goto	l3496
  3278   0018FC                     l3460:
  3279   0018FC  5005               	movf	___fladd@a^0,w,c
  3280   0018FE  5C01               	subwf	___fladd@b^0,w,c
  3281   001900  5006               	movf	(___fladd@a+1)^0,w,c
  3282   001902  5802               	subwfb	(___fladd@b+1)^0,w,c
  3283   001904  5007               	movf	(___fladd@a+2)^0,w,c
  3284   001906  5803               	subwfb	(___fladd@b+2)^0,w,c
  3285   001908  5004               	movf	(___fladd@b+3)^0,w,c
  3286   00190A  0A80               	xorlw	128
  3287   00190C  6E09               	movwf	??___fladd^0,c
  3288   00190E  5008               	movf	(___fladd@a+3)^0,w,c
  3289   001910  0A80               	xorlw	128
  3290   001912  5809               	subwfb	??___fladd^0,w,c
  3291   001914  B0D8               	btfsc	status,0,c
  3292   001916  EF8F  F00C         	goto	u2711
  3293   00191A  EF91  F00C         	goto	u2710
  3294   00191E                     u2711:
  3295   00191E  EFBC  F00C         	goto	l3470
  3296   001922                     u2710:
  3297   001922  5001               	movf	___fladd@b^0,w,c
  3298   001924  5C05               	subwf	___fladd@a^0,w,c
  3299   001926  6E09               	movwf	??___fladd^0,c
  3300   001928  5002               	movf	(___fladd@b+1)^0,w,c
  3301   00192A  5806               	subwfb	(___fladd@a+1)^0,w,c
  3302   00192C  6E0A               	movwf	(??___fladd+1)^0,c
  3303   00192E  5003               	movf	(___fladd@b+2)^0,w,c
  3304   001930  5807               	subwfb	(___fladd@a+2)^0,w,c
  3305   001932  6E0B               	movwf	(??___fladd+2)^0,c
  3306   001934  5004               	movf	(___fladd@b+3)^0,w,c
  3307   001936  5808               	subwfb	(___fladd@a+3)^0,w,c
  3308   001938  6E0C               	movwf	(??___fladd+3)^0,c
  3309   00193A  0EFF               	movlw	255
  3310   00193C  2409               	addwf	??___fladd^0,w,c
  3311   00193E  6E01               	movwf	___fladd@b^0,c
  3312   001940  0EFF               	movlw	255
  3313   001942  200A               	addwfc	(??___fladd+1)^0,w,c
  3314   001944  6E02               	movwf	(___fladd@b+1)^0,c
  3315   001946  0EFF               	movlw	255
  3316   001948  200B               	addwfc	(??___fladd+2)^0,w,c
  3317   00194A  6E03               	movwf	(___fladd@b+2)^0,c
  3318   00194C  0EFF               	movlw	255
  3319   00194E  200C               	addwfc	(??___fladd+3)^0,w,c
  3320   001950  6E04               	movwf	(___fladd@b+3)^0,c
  3321   001952  0E80               	movlw	128
  3322   001954  1A0D               	xorwf	___fladd@signs^0,f,c
  3323   001956  6C10               	negf	___fladd@grs^0,c
  3324   001958  5010               	movf	___fladd@grs^0,w,c
  3325   00195A  A4D8               	btfss	status,2,c
  3326   00195C  EFB2  F00C         	goto	u2721
  3327   001960  EFB4  F00C         	goto	u2720
  3328   001964                     u2721:
  3329   001964  EFC4  F00C         	goto	l1091
  3330   001968                     u2720:
  3331   001968  0E01               	movlw	1
  3332   00196A  2601               	addwf	___fladd@b^0,f,c
  3333   00196C  0E00               	movlw	0
  3334   00196E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3335   001970  2203               	addwfc	(___fladd@b+2)^0,f,c
  3336   001972  2204               	addwfc	(___fladd@b+3)^0,f,c
  3337   001974  EFC4  F00C         	goto	l1091
  3338   001978                     l3470:
  3339   001978  5005               	movf	___fladd@a^0,w,c
  3340   00197A  5E01               	subwf	___fladd@b^0,f,c
  3341   00197C  5006               	movf	(___fladd@a+1)^0,w,c
  3342   00197E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3343   001980  5007               	movf	(___fladd@a+2)^0,w,c
  3344   001982  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3345   001984  5008               	movf	(___fladd@a+3)^0,w,c
  3346   001986  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3347   001988                     l1091:
  3348   001988  5001               	movf	___fladd@b^0,w,c
  3349   00198A  1002               	iorwf	(___fladd@b+1)^0,w,c
  3350   00198C  1003               	iorwf	(___fladd@b+2)^0,w,c
  3351   00198E  1004               	iorwf	(___fladd@b+3)^0,w,c
  3352   001990  A4D8               	btfss	status,2,c
  3353   001992  EFCD  F00C         	goto	u2731
  3354   001996  EFCF  F00C         	goto	u2730
  3355   00199A                     u2731:
  3356   00199A  EF04  F00D         	goto	l3494
  3357   00199E                     u2730:
  3358   00199E  5010               	movf	___fladd@grs^0,w,c
  3359   0019A0  A4D8               	btfss	status,2,c
  3360   0019A2  EFD5  F00C         	goto	u2741
  3361   0019A6  EFD7  F00C         	goto	u2740
  3362   0019AA                     u2741:
  3363   0019AA  EF04  F00D         	goto	l3494
  3364   0019AE                     u2740:
  3365   0019AE  0E00               	movlw	0
  3366   0019B0  6E01               	movwf	?___fladd^0,c
  3367   0019B2  0E00               	movlw	0
  3368   0019B4  6E02               	movwf	(?___fladd+1)^0,c
  3369   0019B6  0E00               	movlw	0
  3370   0019B8  6E03               	movwf	(?___fladd+2)^0,c
  3371   0019BA  0E00               	movlw	0
  3372   0019BC  6E04               	movwf	(?___fladd+3)^0,c
  3373   0019BE  EF9F  F00D         	goto	l1083
  3374   0019C2                     l3478:
  3375   0019C2  90D8               	bcf	status,0,c
  3376   0019C4  3601               	rlcf	___fladd@b^0,f,c
  3377   0019C6  3602               	rlcf	(___fladd@b+1)^0,f,c
  3378   0019C8  3603               	rlcf	(___fladd@b+2)^0,f,c
  3379   0019CA  3604               	rlcf	(___fladd@b+3)^0,f,c
  3380   0019CC  AE10               	btfss	___fladd@grs^0,7,c
  3381   0019CE  EFEB  F00C         	goto	u2751
  3382   0019D2  EFED  F00C         	goto	u2750
  3383   0019D6                     u2751:
  3384   0019D6  EFEE  F00C         	goto	l3484
  3385   0019DA                     u2750:
  3386   0019DA  8001               	bsf	___fladd@b^0,0,c
  3387   0019DC                     l3484:
  3388   0019DC  A010               	btfss	___fladd@grs^0,0,c
  3389   0019DE  EFF3  F00C         	goto	u2761
  3390   0019E2  EFF5  F00C         	goto	u2760
  3391   0019E6                     u2761:
  3392   0019E6  EFF9  F00C         	goto	l3488
  3393   0019EA                     u2760:
  3394   0019EA  80D8               	bsf	status,0,c
  3395   0019EC  3610               	rlcf	___fladd@grs^0,f,c
  3396   0019EE  EFFB  F00C         	goto	l3490
  3397   0019F2                     l3488:
  3398   0019F2  90D8               	bcf	status,0,c
  3399   0019F4  3610               	rlcf	___fladd@grs^0,f,c
  3400   0019F6                     l3490:
  3401   0019F6  500F               	movf	___fladd@bexp^0,w,c
  3402   0019F8  B4D8               	btfsc	status,2,c
  3403   0019FA  EF01  F00D         	goto	u2771
  3404   0019FE  EF03  F00D         	goto	u2770
  3405   001A02                     u2771:
  3406   001A02  EF04  F00D         	goto	l3494
  3407   001A06                     u2770:
  3408   001A06  060F               	decf	___fladd@bexp^0,f,c
  3409   001A08                     l3494:
  3410   001A08  AE03               	btfss	(___fladd@b+2)^0,7,c
  3411   001A0A  EF09  F00D         	goto	u2781
  3412   001A0E  EF0B  F00D         	goto	u2780
  3413   001A12                     u2781:
  3414   001A12  EFE1  F00C         	goto	l3478
  3415   001A16                     u2780:
  3416   001A16                     l3496:
  3417   001A16  0E00               	movlw	0
  3418   001A18  6E0E               	movwf	___fladd@aexp^0,c
  3419   001A1A  AE10               	btfss	___fladd@grs^0,7,c
  3420   001A1C  EF12  F00D         	goto	u2791
  3421   001A20  EF14  F00D         	goto	u2790
  3422   001A24                     u2791:
  3423   001A24  EF2C  F00D         	goto	l1100
  3424   001A28                     u2790:
  3425   001A28  C010  F009         	movff	___fladd@grs,??___fladd
  3426   001A2C  0E7F               	movlw	127
  3427   001A2E  1609               	andwf	??___fladd^0,f,c
  3428   001A30  B4D8               	btfsc	status,2,c
  3429   001A32  EF1D  F00D         	goto	u2801
  3430   001A36  EF1F  F00D         	goto	u2800
  3431   001A3A                     u2801:
  3432   001A3A  EF23  F00D         	goto	l1101
  3433   001A3E                     u2800:
  3434   001A3E                     l3502:
  3435   001A3E  0E01               	movlw	1
  3436   001A40  6E0E               	movwf	___fladd@aexp^0,c
  3437   001A42  EF2C  F00D         	goto	l1100
  3438   001A46                     l1101:
  3439   001A46  A001               	btfss	___fladd@b^0,0,c
  3440   001A48  EF28  F00D         	goto	u2811
  3441   001A4C  EF2A  F00D         	goto	u2810
  3442   001A50                     u2811:
  3443   001A50  EF2C  F00D         	goto	l1100
  3444   001A54                     u2810:
  3445   001A54  EF1F  F00D         	goto	l3502
  3446   001A58                     l1100:
  3447   001A58  500E               	movf	___fladd@aexp^0,w,c
  3448   001A5A  B4D8               	btfsc	status,2,c
  3449   001A5C  EF32  F00D         	goto	u2821
  3450   001A60  EF34  F00D         	goto	u2820
  3451   001A64                     u2821:
  3452   001A64  EF5F  F00D         	goto	l3514
  3453   001A68                     u2820:
  3454   001A68  0E01               	movlw	1
  3455   001A6A  2601               	addwf	___fladd@b^0,f,c
  3456   001A6C  0E00               	movlw	0
  3457   001A6E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3458   001A70  2203               	addwfc	(___fladd@b+2)^0,f,c
  3459   001A72  2204               	addwfc	(___fladd@b+3)^0,f,c
  3460   001A74  A004               	btfss	(___fladd@b+3)^0,0,c
  3461   001A76  EF3F  F00D         	goto	u2831
  3462   001A7A  EF41  F00D         	goto	u2830
  3463   001A7E                     u2831:
  3464   001A7E  EF5F  F00D         	goto	l3514
  3465   001A82                     u2830:
  3466   001A82  C001  F009         	movff	___fladd@b,??___fladd
  3467   001A86  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3468   001A8A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3469   001A8E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3470   001A92  340C               	rlcf	(??___fladd+3)^0,w,c
  3471   001A94  320C               	rrcf	(??___fladd+3)^0,f,c
  3472   001A96  320B               	rrcf	(??___fladd+2)^0,f,c
  3473   001A98  320A               	rrcf	(??___fladd+1)^0,f,c
  3474   001A9A  3209               	rrcf	??___fladd^0,f,c
  3475   001A9C  C009  F001         	movff	??___fladd,___fladd@b
  3476   001AA0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3477   001AA4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3478   001AA8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3479   001AAC  280F               	incf	___fladd@bexp^0,w,c
  3480   001AAE  B4D8               	btfsc	status,2,c
  3481   001AB0  EF5C  F00D         	goto	u2841
  3482   001AB4  EF5E  F00D         	goto	u2840
  3483   001AB8                     u2841:
  3484   001AB8  EF5F  F00D         	goto	l3514
  3485   001ABC                     u2840:
  3486   001ABC  2A0F               	incf	___fladd@bexp^0,f,c
  3487   001ABE                     l3514:
  3488   001ABE  280F               	incf	___fladd@bexp^0,w,c
  3489   001AC0  B4D8               	btfsc	status,2,c
  3490   001AC2  EF65  F00D         	goto	u2851
  3491   001AC6  EF67  F00D         	goto	u2850
  3492   001ACA                     u2851:
  3493   001ACA  EF6F  F00D         	goto	l3518
  3494   001ACE                     u2850:
  3495   001ACE  500F               	movf	___fladd@bexp^0,w,c
  3496   001AD0  A4D8               	btfss	status,2,c
  3497   001AD2  EF6D  F00D         	goto	u2861
  3498   001AD6  EF6F  F00D         	goto	u2860
  3499   001ADA                     u2861:
  3500   001ADA  EF81  F00D         	goto	l3522
  3501   001ADE                     u2860:
  3502   001ADE                     l3518:
  3503   001ADE  0E00               	movlw	0
  3504   001AE0  6E01               	movwf	___fladd@b^0,c
  3505   001AE2  0E00               	movlw	0
  3506   001AE4  6E02               	movwf	(___fladd@b+1)^0,c
  3507   001AE6  0E00               	movlw	0
  3508   001AE8  6E03               	movwf	(___fladd@b+2)^0,c
  3509   001AEA  0E00               	movlw	0
  3510   001AEC  6E04               	movwf	(___fladd@b+3)^0,c
  3511   001AEE  500F               	movf	___fladd@bexp^0,w,c
  3512   001AF0  A4D8               	btfss	status,2,c
  3513   001AF2  EF7D  F00D         	goto	u2871
  3514   001AF6  EF7F  F00D         	goto	u2870
  3515   001AFA                     u2871:
  3516   001AFA  EF81  F00D         	goto	l3522
  3517   001AFE                     u2870:
  3518   001AFE  0E00               	movlw	0
  3519   001B00  6E0D               	movwf	___fladd@signs^0,c
  3520   001B02                     l3522:
  3521   001B02  A00F               	btfss	___fladd@bexp^0,0,c
  3522   001B04  EF86  F00D         	goto	u2881
  3523   001B08  EF88  F00D         	goto	u2880
  3524   001B0C                     u2881:
  3525   001B0C  EF8B  F00D         	goto	l3526
  3526   001B10                     u2880:
  3527   001B10  8E03               	bsf	(___fladd@b+2)^0,7,c
  3528   001B12  EF8C  F00D         	goto	l3528
  3529   001B16                     l3526:
  3530   001B16  9E03               	bcf	(___fladd@b+2)^0,7,c
  3531   001B18                     l3528:
  3532   001B18  90D8               	bcf	status,0,c
  3533   001B1A  300F               	rrcf	___fladd@bexp^0,w,c
  3534   001B1C  6E04               	movwf	(___fladd@b+3)^0,c
  3535   001B1E  AE0D               	btfss	___fladd@signs^0,7,c
  3536   001B20  EF94  F00D         	goto	u2891
  3537   001B24  EF96  F00D         	goto	u2890
  3538   001B28                     u2891:
  3539   001B28  EF97  F00D         	goto	l3534
  3540   001B2C                     u2890:
  3541   001B2C  8E04               	bsf	(___fladd@b+3)^0,7,c
  3542   001B2E                     l3534:
  3543   001B2E  C001  F001         	movff	___fladd@b,?___fladd
  3544   001B32  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3545   001B36  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3546   001B3A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3547   001B3E                     l1083:
  3548   001B3E  0012               	return		;funcret
  3549   001B40                     __end_of___fladd:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function ___flmul *****************
  3553 ;; Defined at:
  3554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  b               4    0[COMRAM] unsigned char 
  3557 ;;  a               4    4[COMRAM] unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  prod            4   19[COMRAM] struct .
  3560 ;;  grs             4   13[COMRAM] unsigned long 
  3561 ;;  temp            2   23[COMRAM] struct .
  3562 ;;  bexp            1   18[COMRAM] unsigned char 
  3563 ;;  aexp            1   17[COMRAM] unsigned char 
  3564 ;;  sign            1   12[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  4    0[COMRAM] unsigned char 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, prodl, prodh
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3574 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;Total ram usage:       25 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_convert_rgb2hue
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text8
  3588   001B40                     __ptext8:
  3589                           	callstack 0
  3590   001B40                     ___flmul:
  3591                           	callstack 28
  3592   001B40  5004               	movf	(___flmul@b+3)^0,w,c
  3593   001B42  0B80               	andlw	128
  3594   001B44  6E0D               	movwf	___flmul@sign^0,c
  3595   001B46  5004               	movf	(___flmul@b+3)^0,w,c
  3596   001B48  2404               	addwf	(___flmul@b+3)^0,w,c
  3597   001B4A  6E13               	movwf	___flmul@bexp^0,c
  3598   001B4C  AE03               	btfss	(___flmul@b+2)^0,7,c
  3599   001B4E  EFAB  F00D         	goto	u3171
  3600   001B52  EFAD  F00D         	goto	u3170
  3601   001B56                     u3171:
  3602   001B56  EFAE  F00D         	goto	l3762
  3603   001B5A                     u3170:
  3604   001B5A  8013               	bsf	___flmul@bexp^0,0,c
  3605   001B5C                     l3762:
  3606   001B5C  5013               	movf	___flmul@bexp^0,w,c
  3607   001B5E  B4D8               	btfsc	status,2,c
  3608   001B60  EFB4  F00D         	goto	u3181
  3609   001B64  EFB6  F00D         	goto	u3180
  3610   001B68                     u3181:
  3611   001B68  EFC9  F00D         	goto	l3770
  3612   001B6C                     u3180:
  3613   001B6C  2813               	incf	___flmul@bexp^0,w,c
  3614   001B6E  A4D8               	btfss	status,2,c
  3615   001B70  EFBC  F00D         	goto	u3191
  3616   001B74  EFBE  F00D         	goto	u3190
  3617   001B78                     u3191:
  3618   001B78  EFC6  F00D         	goto	l3768
  3619   001B7C                     u3190:
  3620   001B7C  0E00               	movlw	0
  3621   001B7E  6E01               	movwf	___flmul@b^0,c
  3622   001B80  0E00               	movlw	0
  3623   001B82  6E02               	movwf	(___flmul@b+1)^0,c
  3624   001B84  0E00               	movlw	0
  3625   001B86  6E03               	movwf	(___flmul@b+2)^0,c
  3626   001B88  0E00               	movlw	0
  3627   001B8A  6E04               	movwf	(___flmul@b+3)^0,c
  3628   001B8C                     l3768:
  3629   001B8C  8E03               	bsf	(___flmul@b+2)^0,7,c
  3630   001B8E  EFD1  F00D         	goto	l3772
  3631   001B92                     l3770:
  3632   001B92  0E00               	movlw	0
  3633   001B94  6E01               	movwf	___flmul@b^0,c
  3634   001B96  0E00               	movlw	0
  3635   001B98  6E02               	movwf	(___flmul@b+1)^0,c
  3636   001B9A  0E00               	movlw	0
  3637   001B9C  6E03               	movwf	(___flmul@b+2)^0,c
  3638   001B9E  0E00               	movlw	0
  3639   001BA0  6E04               	movwf	(___flmul@b+3)^0,c
  3640   001BA2                     l3772:
  3641   001BA2  5008               	movf	(___flmul@a+3)^0,w,c
  3642   001BA4  0B80               	andlw	128
  3643   001BA6  1A0D               	xorwf	___flmul@sign^0,f,c
  3644   001BA8  5008               	movf	(___flmul@a+3)^0,w,c
  3645   001BAA  2408               	addwf	(___flmul@a+3)^0,w,c
  3646   001BAC  6E12               	movwf	___flmul@aexp^0,c
  3647   001BAE  AE07               	btfss	(___flmul@a+2)^0,7,c
  3648   001BB0  EFDC  F00D         	goto	u3201
  3649   001BB4  EFDE  F00D         	goto	u3200
  3650   001BB8                     u3201:
  3651   001BB8  EFDF  F00D         	goto	l3780
  3652   001BBC                     u3200:
  3653   001BBC  8012               	bsf	___flmul@aexp^0,0,c
  3654   001BBE                     l3780:
  3655   001BBE  5012               	movf	___flmul@aexp^0,w,c
  3656   001BC0  B4D8               	btfsc	status,2,c
  3657   001BC2  EFE5  F00D         	goto	u3211
  3658   001BC6  EFE7  F00D         	goto	u3210
  3659   001BCA                     u3211:
  3660   001BCA  EFFA  F00D         	goto	l3788
  3661   001BCE                     u3210:
  3662   001BCE  2812               	incf	___flmul@aexp^0,w,c
  3663   001BD0  A4D8               	btfss	status,2,c
  3664   001BD2  EFED  F00D         	goto	u3221
  3665   001BD6  EFEF  F00D         	goto	u3220
  3666   001BDA                     u3221:
  3667   001BDA  EFF7  F00D         	goto	l3786
  3668   001BDE                     u3220:
  3669   001BDE  0E00               	movlw	0
  3670   001BE0  6E05               	movwf	___flmul@a^0,c
  3671   001BE2  0E00               	movlw	0
  3672   001BE4  6E06               	movwf	(___flmul@a+1)^0,c
  3673   001BE6  0E00               	movlw	0
  3674   001BE8  6E07               	movwf	(___flmul@a+2)^0,c
  3675   001BEA  0E00               	movlw	0
  3676   001BEC  6E08               	movwf	(___flmul@a+3)^0,c
  3677   001BEE                     l3786:
  3678   001BEE  8E07               	bsf	(___flmul@a+2)^0,7,c
  3679   001BF0  EF02  F00E         	goto	l1160
  3680   001BF4                     l3788:
  3681   001BF4  0E00               	movlw	0
  3682   001BF6  6E05               	movwf	___flmul@a^0,c
  3683   001BF8  0E00               	movlw	0
  3684   001BFA  6E06               	movwf	(___flmul@a+1)^0,c
  3685   001BFC  0E00               	movlw	0
  3686   001BFE  6E07               	movwf	(___flmul@a+2)^0,c
  3687   001C00  0E00               	movlw	0
  3688   001C02  6E08               	movwf	(___flmul@a+3)^0,c
  3689   001C04                     l1160:
  3690   001C04  5012               	movf	___flmul@aexp^0,w,c
  3691   001C06  B4D8               	btfsc	status,2,c
  3692   001C08  EF08  F00E         	goto	u3231
  3693   001C0C  EF0A  F00E         	goto	u3230
  3694   001C10                     u3231:
  3695   001C10  EF12  F00E         	goto	l3792
  3696   001C14                     u3230:
  3697   001C14  5013               	movf	___flmul@bexp^0,w,c
  3698   001C16  A4D8               	btfss	status,2,c
  3699   001C18  EF10  F00E         	goto	u3241
  3700   001C1C  EF12  F00E         	goto	u3240
  3701   001C20                     u3241:
  3702   001C20  EF1C  F00E         	goto	l3796
  3703   001C24                     u3240:
  3704   001C24                     l3792:
  3705   001C24  0E00               	movlw	0
  3706   001C26  6E01               	movwf	?___flmul^0,c
  3707   001C28  0E00               	movlw	0
  3708   001C2A  6E02               	movwf	(?___flmul+1)^0,c
  3709   001C2C  0E00               	movlw	0
  3710   001C2E  6E03               	movwf	(?___flmul+2)^0,c
  3711   001C30  0E00               	movlw	0
  3712   001C32  6E04               	movwf	(?___flmul+3)^0,c
  3713   001C34  EFB4  F00F         	goto	l1164
  3714   001C38                     l3796:
  3715   001C38  5007               	movf	(___flmul@a+2)^0,w,c
  3716   001C3A  0201               	mulwf	___flmul@b^0,c
  3717   001C3C  CFF3 F018          	movff	prodl,___flmul@temp
  3718   001C40  CFF4 F019          	movff	prodh,___flmul@temp+1
  3719   001C44  5018               	movf	___flmul@temp^0,w,c
  3720   001C46  6E0E               	movwf	___flmul@grs^0,c
  3721   001C48  6A0F               	clrf	(___flmul@grs+1)^0,c
  3722   001C4A  6A10               	clrf	(___flmul@grs+2)^0,c
  3723   001C4C  6A11               	clrf	(___flmul@grs+3)^0,c
  3724   001C4E  5019               	movf	(___flmul@temp+1)^0,w,c
  3725   001C50  6E14               	movwf	___flmul@prod^0,c
  3726   001C52  6A15               	clrf	(___flmul@prod+1)^0,c
  3727   001C54  6A16               	clrf	(___flmul@prod+2)^0,c
  3728   001C56  6A17               	clrf	(___flmul@prod+3)^0,c
  3729   001C58  5006               	movf	(___flmul@a+1)^0,w,c
  3730   001C5A  0202               	mulwf	(___flmul@b+1)^0,c
  3731   001C5C  CFF3 F018          	movff	prodl,___flmul@temp
  3732   001C60  CFF4 F019          	movff	prodh,___flmul@temp+1
  3733   001C64  5018               	movf	___flmul@temp^0,w,c
  3734   001C66  260E               	addwf	___flmul@grs^0,f,c
  3735   001C68  0E00               	movlw	0
  3736   001C6A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3737   001C6C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3738   001C6E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3739   001C70  5019               	movf	(___flmul@temp+1)^0,w,c
  3740   001C72  2614               	addwf	___flmul@prod^0,f,c
  3741   001C74  0E00               	movlw	0
  3742   001C76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3743   001C78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3744   001C7A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3745   001C7C  5005               	movf	___flmul@a^0,w,c
  3746   001C7E  0203               	mulwf	(___flmul@b+2)^0,c
  3747   001C80  CFF3 F018          	movff	prodl,___flmul@temp
  3748   001C84  CFF4 F019          	movff	prodh,___flmul@temp+1
  3749   001C88  5018               	movf	___flmul@temp^0,w,c
  3750   001C8A  260E               	addwf	___flmul@grs^0,f,c
  3751   001C8C  0E00               	movlw	0
  3752   001C8E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3753   001C90  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3754   001C92  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3755   001C94  5019               	movf	(___flmul@temp+1)^0,w,c
  3756   001C96  2614               	addwf	___flmul@prod^0,f,c
  3757   001C98  0E00               	movlw	0
  3758   001C9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3759   001C9C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3760   001C9E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3761   001CA0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3762   001CA4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3763   001CA8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3764   001CAC  6A0E               	clrf	___flmul@grs^0,c
  3765   001CAE  5005               	movf	___flmul@a^0,w,c
  3766   001CB0  0202               	mulwf	(___flmul@b+1)^0,c
  3767   001CB2  CFF3 F018          	movff	prodl,___flmul@temp
  3768   001CB6  CFF4 F019          	movff	prodh,___flmul@temp+1
  3769   001CBA  5018               	movf	___flmul@temp^0,w,c
  3770   001CBC  260E               	addwf	___flmul@grs^0,f,c
  3771   001CBE  5019               	movf	(___flmul@temp+1)^0,w,c
  3772   001CC0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3773   001CC2  0E00               	movlw	0
  3774   001CC4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3775   001CC6  0E00               	movlw	0
  3776   001CC8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3777   001CCA  5006               	movf	(___flmul@a+1)^0,w,c
  3778   001CCC  0201               	mulwf	___flmul@b^0,c
  3779   001CCE  CFF3 F018          	movff	prodl,___flmul@temp
  3780   001CD2  CFF4 F019          	movff	prodh,___flmul@temp+1
  3781   001CD6  5018               	movf	___flmul@temp^0,w,c
  3782   001CD8  260E               	addwf	___flmul@grs^0,f,c
  3783   001CDA  5019               	movf	(___flmul@temp+1)^0,w,c
  3784   001CDC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3785   001CDE  0E00               	movlw	0
  3786   001CE0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3787   001CE2  0E00               	movlw	0
  3788   001CE4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3789   001CE6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3790   001CEA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3791   001CEE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3792   001CF2  6A0E               	clrf	___flmul@grs^0,c
  3793   001CF4  5005               	movf	___flmul@a^0,w,c
  3794   001CF6  0201               	mulwf	___flmul@b^0,c
  3795   001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  3796   001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3797   001D00  5018               	movf	___flmul@temp^0,w,c
  3798   001D02  260E               	addwf	___flmul@grs^0,f,c
  3799   001D04  5019               	movf	(___flmul@temp+1)^0,w,c
  3800   001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3801   001D08  0E00               	movlw	0
  3802   001D0A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3803   001D0C  0E00               	movlw	0
  3804   001D0E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3805   001D10  5007               	movf	(___flmul@a+2)^0,w,c
  3806   001D12  0202               	mulwf	(___flmul@b+1)^0,c
  3807   001D14  CFF3 F018          	movff	prodl,___flmul@temp
  3808   001D18  CFF4 F019          	movff	prodh,___flmul@temp+1
  3809   001D1C  5018               	movf	___flmul@temp^0,w,c
  3810   001D1E  2614               	addwf	___flmul@prod^0,f,c
  3811   001D20  5019               	movf	(___flmul@temp+1)^0,w,c
  3812   001D22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3813   001D24  0E00               	movlw	0
  3814   001D26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3815   001D28  0E00               	movlw	0
  3816   001D2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3817   001D2C  5006               	movf	(___flmul@a+1)^0,w,c
  3818   001D2E  0203               	mulwf	(___flmul@b+2)^0,c
  3819   001D30  CFF3 F018          	movff	prodl,___flmul@temp
  3820   001D34  CFF4 F019          	movff	prodh,___flmul@temp+1
  3821   001D38  5018               	movf	___flmul@temp^0,w,c
  3822   001D3A  2614               	addwf	___flmul@prod^0,f,c
  3823   001D3C  5019               	movf	(___flmul@temp+1)^0,w,c
  3824   001D3E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3825   001D40  0E00               	movlw	0
  3826   001D42  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3827   001D44  0E00               	movlw	0
  3828   001D46  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3829   001D48  5007               	movf	(___flmul@a+2)^0,w,c
  3830   001D4A  0203               	mulwf	(___flmul@b+2)^0,c
  3831   001D4C  CFF3 F018          	movff	prodl,___flmul@temp
  3832   001D50  CFF4 F019          	movff	prodh,___flmul@temp+1
  3833   001D54  5018               	movf	___flmul@temp^0,w,c
  3834   001D56  6E09               	movwf	??___flmul^0,c
  3835   001D58  5019               	movf	(___flmul@temp+1)^0,w,c
  3836   001D5A  6E0A               	movwf	(??___flmul+1)^0,c
  3837   001D5C  6A0B               	clrf	(??___flmul+2)^0,c
  3838   001D5E  6A0C               	clrf	(??___flmul+3)^0,c
  3839   001D60  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3840   001D64  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3841   001D68  C009  F00A         	movff	??___flmul,??___flmul+1
  3842   001D6C  6A09               	clrf	??___flmul^0,c
  3843   001D6E  5009               	movf	??___flmul^0,w,c
  3844   001D70  2614               	addwf	___flmul@prod^0,f,c
  3845   001D72  500A               	movf	(??___flmul+1)^0,w,c
  3846   001D74  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3847   001D76  500B               	movf	(??___flmul+2)^0,w,c
  3848   001D78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3849   001D7A  500C               	movf	(??___flmul+3)^0,w,c
  3850   001D7C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3851   001D7E  C00E  F009         	movff	___flmul@grs,??___flmul
  3852   001D82  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3853   001D86  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3854   001D8A  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3855   001D8E  0E19               	movlw	25
  3856   001D90  EFCF  F00E         	goto	u3250
  3857   001D94                     u3255:
  3858   001D94  90D8               	bcf	status,0,c
  3859   001D96  320C               	rrcf	(??___flmul+3)^0,f,c
  3860   001D98  320B               	rrcf	(??___flmul+2)^0,f,c
  3861   001D9A  320A               	rrcf	(??___flmul+1)^0,f,c
  3862   001D9C  3209               	rrcf	??___flmul^0,f,c
  3863   001D9E                     u3250:
  3864   001D9E  2EE8               	decfsz	wreg,f,c
  3865   001DA0  EFCA  F00E         	goto	u3255
  3866   001DA4  5009               	movf	??___flmul^0,w,c
  3867   001DA6  2614               	addwf	___flmul@prod^0,f,c
  3868   001DA8  500A               	movf	(??___flmul+1)^0,w,c
  3869   001DAA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3870   001DAC  500B               	movf	(??___flmul+2)^0,w,c
  3871   001DAE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3872   001DB0  500C               	movf	(??___flmul+3)^0,w,c
  3873   001DB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3874   001DB4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3875   001DB8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3876   001DBC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3877   001DC0  6A0E               	clrf	___flmul@grs^0,c
  3878   001DC2  5012               	movf	___flmul@aexp^0,w,c
  3879   001DC4  C013  F009         	movff	___flmul@bexp,??___flmul
  3880   001DC8  6A0A               	clrf	(??___flmul+1)^0,c
  3881   001DCA  2609               	addwf	??___flmul^0,f,c
  3882   001DCC  0E00               	movlw	0
  3883   001DCE  220A               	addwfc	(??___flmul+1)^0,f,c
  3884   001DD0  0E82               	movlw	130
  3885   001DD2  2409               	addwf	??___flmul^0,w,c
  3886   001DD4  6E18               	movwf	___flmul@temp^0,c
  3887   001DD6  0EFF               	movlw	255
  3888   001DD8  200A               	addwfc	(??___flmul+1)^0,w,c
  3889   001DDA  6E19               	movwf	(___flmul@temp+1)^0,c
  3890   001DDC  EF05  F00F         	goto	l3844
  3891   001DE0                     l3838:
  3892   001DE0  90D8               	bcf	status,0,c
  3893   001DE2  3614               	rlcf	___flmul@prod^0,f,c
  3894   001DE4  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3895   001DE6  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3896   001DE8  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3897   001DEA  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3898   001DEC  EFFA  F00E         	goto	u3261
  3899   001DF0  EFFC  F00E         	goto	u3260
  3900   001DF4                     u3261:
  3901   001DF4  EFFD  F00E         	goto	l1167
  3902   001DF8                     u3260:
  3903   001DF8  8014               	bsf	___flmul@prod^0,0,c
  3904   001DFA                     l1167:
  3905   001DFA  90D8               	bcf	status,0,c
  3906   001DFC  360E               	rlcf	___flmul@grs^0,f,c
  3907   001DFE  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3908   001E00  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3909   001E02  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3910   001E04  0618               	decf	___flmul@temp^0,f,c
  3911   001E06  A0D8               	btfss	status,0,c
  3912   001E08  0619               	decf	(___flmul@temp+1)^0,f,c
  3913   001E0A                     l3844:
  3914   001E0A  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3915   001E0C  EF0A  F00F         	goto	u3271
  3916   001E10  EF0C  F00F         	goto	u3270
  3917   001E14                     u3271:
  3918   001E14  EFF0  F00E         	goto	l3838
  3919   001E18                     u3270:
  3920   001E18  0E00               	movlw	0
  3921   001E1A  6E12               	movwf	___flmul@aexp^0,c
  3922   001E1C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3923   001E1E  EF13  F00F         	goto	u3281
  3924   001E22  EF15  F00F         	goto	u3280
  3925   001E26                     u3281:
  3926   001E26  EF39  F00F         	goto	l1169
  3927   001E2A                     u3280:
  3928   001E2A  0EFF               	movlw	255
  3929   001E2C  140E               	andwf	___flmul@grs^0,w,c
  3930   001E2E  6E09               	movwf	??___flmul^0,c
  3931   001E30  0EFF               	movlw	255
  3932   001E32  140F               	andwf	(___flmul@grs+1)^0,w,c
  3933   001E34  6E0A               	movwf	(??___flmul+1)^0,c
  3934   001E36  0EFF               	movlw	255
  3935   001E38  1410               	andwf	(___flmul@grs+2)^0,w,c
  3936   001E3A  6E0B               	movwf	(??___flmul+2)^0,c
  3937   001E3C  0E7F               	movlw	127
  3938   001E3E  1411               	andwf	(___flmul@grs+3)^0,w,c
  3939   001E40  6E0C               	movwf	(??___flmul+3)^0,c
  3940   001E42  5009               	movf	??___flmul^0,w,c
  3941   001E44  100A               	iorwf	(??___flmul+1)^0,w,c
  3942   001E46  100B               	iorwf	(??___flmul+2)^0,w,c
  3943   001E48  100C               	iorwf	(??___flmul+3)^0,w,c
  3944   001E4A  B4D8               	btfsc	status,2,c
  3945   001E4C  EF2A  F00F         	goto	u3291
  3946   001E50  EF2C  F00F         	goto	u3290
  3947   001E54                     u3291:
  3948   001E54  EF30  F00F         	goto	l1170
  3949   001E58                     u3290:
  3950   001E58                     l3852:
  3951   001E58  0E01               	movlw	1
  3952   001E5A  6E12               	movwf	___flmul@aexp^0,c
  3953   001E5C  EF39  F00F         	goto	l1169
  3954   001E60                     l1170:
  3955   001E60  A014               	btfss	___flmul@prod^0,0,c
  3956   001E62  EF35  F00F         	goto	u3301
  3957   001E66  EF37  F00F         	goto	u3300
  3958   001E6A                     u3301:
  3959   001E6A  EF39  F00F         	goto	l1169
  3960   001E6E                     u3300:
  3961   001E6E  EF2C  F00F         	goto	l3852
  3962   001E72                     l1169:
  3963   001E72  5012               	movf	___flmul@aexp^0,w,c
  3964   001E74  B4D8               	btfsc	status,2,c
  3965   001E76  EF3F  F00F         	goto	u3311
  3966   001E7A  EF41  F00F         	goto	u3310
  3967   001E7E                     u3311:
  3968   001E7E  EF65  F00F         	goto	l3864
  3969   001E82                     u3310:
  3970   001E82  0E01               	movlw	1
  3971   001E84  2614               	addwf	___flmul@prod^0,f,c
  3972   001E86  0E00               	movlw	0
  3973   001E88  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3974   001E8A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3975   001E8C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3976   001E8E  A017               	btfss	(___flmul@prod+3)^0,0,c
  3977   001E90  EF4C  F00F         	goto	u3321
  3978   001E94  EF4E  F00F         	goto	u3320
  3979   001E98                     u3321:
  3980   001E98  EF65  F00F         	goto	l3864
  3981   001E9C                     u3320:
  3982   001E9C  C014  F009         	movff	___flmul@prod,??___flmul
  3983   001EA0  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3984   001EA4  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3985   001EA8  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3986   001EAC  340C               	rlcf	(??___flmul+3)^0,w,c
  3987   001EAE  320C               	rrcf	(??___flmul+3)^0,f,c
  3988   001EB0  320B               	rrcf	(??___flmul+2)^0,f,c
  3989   001EB2  320A               	rrcf	(??___flmul+1)^0,f,c
  3990   001EB4  3209               	rrcf	??___flmul^0,f,c
  3991   001EB6  C009  F014         	movff	??___flmul,___flmul@prod
  3992   001EBA  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3993   001EBE  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3994   001EC2  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3995   001EC6  4A18               	infsnz	___flmul@temp^0,f,c
  3996   001EC8  2A19               	incf	(___flmul@temp+1)^0,f,c
  3997   001ECA                     l3864:
  3998   001ECA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3999   001ECC  EF70  F00F         	goto	u3331
  4000   001ED0  5019               	movf	(___flmul@temp+1)^0,w,c
  4001   001ED2  E108               	bnz	u3330
  4002   001ED4  2818               	incf	___flmul@temp^0,w,c
  4003   001ED6  A0D8               	btfss	status,0,c
  4004   001ED8  EF70  F00F         	goto	u3331
  4005   001EDC  EF72  F00F         	goto	u3330
  4006   001EE0                     u3331:
  4007   001EE0  EF7C  F00F         	goto	l3868
  4008   001EE4                     u3330:
  4009   001EE4  0E00               	movlw	0
  4010   001EE6  6E14               	movwf	___flmul@prod^0,c
  4011   001EE8  0E00               	movlw	0
  4012   001EEA  6E15               	movwf	(___flmul@prod+1)^0,c
  4013   001EEC  0E80               	movlw	128
  4014   001EEE  6E16               	movwf	(___flmul@prod+2)^0,c
  4015   001EF0  0E7F               	movlw	127
  4016   001EF2  6E17               	movwf	(___flmul@prod+3)^0,c
  4017   001EF4  EFAA  F00F         	goto	l3880
  4018   001EF8                     l3868:
  4019   001EF8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  4020   001EFA  EF89  F00F         	goto	u3340
  4021   001EFE  5019               	movf	(___flmul@temp+1)^0,w,c
  4022   001F00  E106               	bnz	u3341
  4023   001F02  0418               	decf	___flmul@temp^0,w,c
  4024   001F04  B0D8               	btfsc	status,0,c
  4025   001F06  EF87  F00F         	goto	u3341
  4026   001F0A  EF89  F00F         	goto	u3340
  4027   001F0E                     u3341:
  4028   001F0E  EF95  F00F         	goto	l1177
  4029   001F12                     u3340:
  4030   001F12  0E00               	movlw	0
  4031   001F14  6E14               	movwf	___flmul@prod^0,c
  4032   001F16  0E00               	movlw	0
  4033   001F18  6E15               	movwf	(___flmul@prod+1)^0,c
  4034   001F1A  0E00               	movlw	0
  4035   001F1C  6E16               	movwf	(___flmul@prod+2)^0,c
  4036   001F1E  0E00               	movlw	0
  4037   001F20  6E17               	movwf	(___flmul@prod+3)^0,c
  4038   001F22  0E00               	movlw	0
  4039   001F24  6E0D               	movwf	___flmul@sign^0,c
  4040   001F26  EFAA  F00F         	goto	l3880
  4041   001F2A                     l1177:
  4042   001F2A  C018  F013         	movff	___flmul@temp,___flmul@bexp
  4043   001F2E  0EFF               	movlw	255
  4044   001F30  1614               	andwf	___flmul@prod^0,f,c
  4045   001F32  0EFF               	movlw	255
  4046   001F34  1615               	andwf	(___flmul@prod+1)^0,f,c
  4047   001F36  0E7F               	movlw	127
  4048   001F38  1616               	andwf	(___flmul@prod+2)^0,f,c
  4049   001F3A  0E00               	movlw	0
  4050   001F3C  1617               	andwf	(___flmul@prod+3)^0,f,c
  4051   001F3E  A013               	btfss	___flmul@bexp^0,0,c
  4052   001F40  EFA4  F00F         	goto	u3351
  4053   001F44  EFA6  F00F         	goto	u3350
  4054   001F48                     u3351:
  4055   001F48  EFA7  F00F         	goto	l3878
  4056   001F4C                     u3350:
  4057   001F4C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  4058   001F4E                     l3878:
  4059   001F4E  90D8               	bcf	status,0,c
  4060   001F50  3013               	rrcf	___flmul@bexp^0,w,c
  4061   001F52  6E17               	movwf	(___flmul@prod+3)^0,c
  4062   001F54                     l3880:
  4063   001F54  500D               	movf	___flmul@sign^0,w,c
  4064   001F56  1217               	iorwf	(___flmul@prod+3)^0,f,c
  4065   001F58  C014  F001         	movff	___flmul@prod,?___flmul
  4066   001F5C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  4067   001F60  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  4068   001F64  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  4069   001F68                     l1164:
  4070   001F68  0012               	return		;funcret
  4071   001F6A                     __end_of___flmul:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function ___flge *****************
  4075 ;; Defined at:
  4076 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  ff1             4    0[COMRAM] unsigned char 
  4079 ;;  ff2             4    4[COMRAM] unsigned char 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;		None               void
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4091 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;Total ram usage:       12 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_convert_rgb2hue
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text9
  4106   002D80                     __ptext9:
  4107                           	callstack 0
  4108   002D80                     ___flge:
  4109                           	callstack 28
  4110   002D80  0E00               	movlw	0
  4111   002D82  1401               	andwf	___flge@ff1^0,w,c
  4112   002D84  6E09               	movwf	??___flge^0,c
  4113   002D86  0E00               	movlw	0
  4114   002D88  1402               	andwf	(___flge@ff1+1)^0,w,c
  4115   002D8A  6E0A               	movwf	(??___flge+1)^0,c
  4116   002D8C  0E80               	movlw	128
  4117   002D8E  1403               	andwf	(___flge@ff1+2)^0,w,c
  4118   002D90  6E0B               	movwf	(??___flge+2)^0,c
  4119   002D92  0E7F               	movlw	127
  4120   002D94  1404               	andwf	(___flge@ff1+3)^0,w,c
  4121   002D96  6E0C               	movwf	(??___flge+3)^0,c
  4122   002D98  5009               	movf	??___flge^0,w,c
  4123   002D9A  100A               	iorwf	(??___flge+1)^0,w,c
  4124   002D9C  100B               	iorwf	(??___flge+2)^0,w,c
  4125   002D9E  100C               	iorwf	(??___flge+3)^0,w,c
  4126   002DA0  A4D8               	btfss	status,2,c
  4127   002DA2  EFD5  F016         	goto	u3391
  4128   002DA6  EFD7  F016         	goto	u3390
  4129   002DAA                     u3391:
  4130   002DAA  EFDF  F016         	goto	l3912
  4131   002DAE                     u3390:
  4132   002DAE  0E00               	movlw	0
  4133   002DB0  6E01               	movwf	___flge@ff1^0,c
  4134   002DB2  0E00               	movlw	0
  4135   002DB4  6E02               	movwf	(___flge@ff1+1)^0,c
  4136   002DB6  0E00               	movlw	0
  4137   002DB8  6E03               	movwf	(___flge@ff1+2)^0,c
  4138   002DBA  0E00               	movlw	0
  4139   002DBC  6E04               	movwf	(___flge@ff1+3)^0,c
  4140   002DBE                     l3912:
  4141   002DBE  0E00               	movlw	0
  4142   002DC0  1405               	andwf	___flge@ff2^0,w,c
  4143   002DC2  6E09               	movwf	??___flge^0,c
  4144   002DC4  0E00               	movlw	0
  4145   002DC6  1406               	andwf	(___flge@ff2+1)^0,w,c
  4146   002DC8  6E0A               	movwf	(??___flge+1)^0,c
  4147   002DCA  0E80               	movlw	128
  4148   002DCC  1407               	andwf	(___flge@ff2+2)^0,w,c
  4149   002DCE  6E0B               	movwf	(??___flge+2)^0,c
  4150   002DD0  0E7F               	movlw	127
  4151   002DD2  1408               	andwf	(___flge@ff2+3)^0,w,c
  4152   002DD4  6E0C               	movwf	(??___flge+3)^0,c
  4153   002DD6  5009               	movf	??___flge^0,w,c
  4154   002DD8  100A               	iorwf	(??___flge+1)^0,w,c
  4155   002DDA  100B               	iorwf	(??___flge+2)^0,w,c
  4156   002DDC  100C               	iorwf	(??___flge+3)^0,w,c
  4157   002DDE  A4D8               	btfss	status,2,c
  4158   002DE0  EFF4  F016         	goto	u3401
  4159   002DE4  EFF6  F016         	goto	u3400
  4160   002DE8                     u3401:
  4161   002DE8  EFFE  F016         	goto	l3916
  4162   002DEC                     u3400:
  4163   002DEC  0E00               	movlw	0
  4164   002DEE  6E05               	movwf	___flge@ff2^0,c
  4165   002DF0  0E00               	movlw	0
  4166   002DF2  6E06               	movwf	(___flge@ff2+1)^0,c
  4167   002DF4  0E00               	movlw	0
  4168   002DF6  6E07               	movwf	(___flge@ff2+2)^0,c
  4169   002DF8  0E00               	movlw	0
  4170   002DFA  6E08               	movwf	(___flge@ff2+3)^0,c
  4171   002DFC                     l3916:
  4172   002DFC  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4173   002DFE  EF03  F017         	goto	u3411
  4174   002E02  EF05  F017         	goto	u3410
  4175   002E06                     u3411:
  4176   002E06  EF0E  F017         	goto	l3920
  4177   002E0A                     u3410:
  4178   002E0A  6C01               	negf	___flge@ff1^0,c
  4179   002E0C  1E02               	comf	(___flge@ff1+1)^0,f,c
  4180   002E0E  B0D8               	btfsc	status,0,c
  4181   002E10  2A02               	incf	(___flge@ff1+1)^0,f,c
  4182   002E12  1E03               	comf	(___flge@ff1+2)^0,f,c
  4183   002E14  B0D8               	btfsc	status,0,c
  4184   002E16  2A03               	incf	(___flge@ff1+2)^0,f,c
  4185   002E18  0E80               	movlw	128
  4186   002E1A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4187   002E1C                     l3920:
  4188   002E1C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4189   002E1E  EF13  F017         	goto	u3421
  4190   002E22  EF15  F017         	goto	u3420
  4191   002E26                     u3421:
  4192   002E26  EF1E  F017         	goto	l811
  4193   002E2A                     u3420:
  4194   002E2A  6C05               	negf	___flge@ff2^0,c
  4195   002E2C  1E06               	comf	(___flge@ff2+1)^0,f,c
  4196   002E2E  B0D8               	btfsc	status,0,c
  4197   002E30  2A06               	incf	(___flge@ff2+1)^0,f,c
  4198   002E32  1E07               	comf	(___flge@ff2+2)^0,f,c
  4199   002E34  B0D8               	btfsc	status,0,c
  4200   002E36  2A07               	incf	(___flge@ff2+2)^0,f,c
  4201   002E38  0E80               	movlw	128
  4202   002E3A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4203   002E3C                     l811:
  4204   002E3C  0E00               	movlw	0
  4205   002E3E  1A01               	xorwf	___flge@ff1^0,f,c
  4206   002E40  0E00               	movlw	0
  4207   002E42  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4208   002E44  0E00               	movlw	0
  4209   002E46  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4210   002E48  0E80               	movlw	128
  4211   002E4A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4212   002E4C  0E00               	movlw	0
  4213   002E4E  1A05               	xorwf	___flge@ff2^0,f,c
  4214   002E50  0E00               	movlw	0
  4215   002E52  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4216   002E54  0E00               	movlw	0
  4217   002E56  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4218   002E58  0E80               	movlw	128
  4219   002E5A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4220   002E5C  5005               	movf	___flge@ff2^0,w,c
  4221   002E5E  5C01               	subwf	___flge@ff1^0,w,c
  4222   002E60  5006               	movf	(___flge@ff2+1)^0,w,c
  4223   002E62  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4224   002E64  5007               	movf	(___flge@ff2+2)^0,w,c
  4225   002E66  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4226   002E68  5008               	movf	(___flge@ff2+3)^0,w,c
  4227   002E6A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4228   002E6C  B0D8               	btfsc	status,0,c
  4229   002E6E  EF3B  F017         	goto	u3431
  4230   002E72  EF3D  F017         	goto	u3430
  4231   002E76                     u3431:
  4232   002E76  EF40  F017         	goto	l3926
  4233   002E7A                     u3430:
  4234   002E7A  90D8               	bcf	status,0,c
  4235   002E7C  EF41  F017         	goto	l816
  4236   002E80                     l3926:
  4237   002E80  80D8               	bsf	status,0,c
  4238   002E82                     l816:
  4239   002E82  0012               	return		;funcret
  4240   002E84                     __end_of___flge:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function ___fleq *****************
  4244 ;; Defined at:
  4245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  ff1             4    0[COMRAM] unsigned char 
  4248 ;;  ff2             4    4[COMRAM] unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;Total ram usage:       12 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_convert_rgb2hue
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text10
  4274   00319C                     __ptext10:
  4275                           	callstack 0
  4276   00319C                     ___fleq:
  4277                           	callstack 28
  4278   00319C  0E00               	movlw	0
  4279   00319E  1401               	andwf	___fleq@ff1^0,w,c
  4280   0031A0  6E09               	movwf	??___fleq^0,c
  4281   0031A2  0E00               	movlw	0
  4282   0031A4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4283   0031A6  6E0A               	movwf	(??___fleq+1)^0,c
  4284   0031A8  0E80               	movlw	128
  4285   0031AA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4286   0031AC  6E0B               	movwf	(??___fleq+2)^0,c
  4287   0031AE  0E7F               	movlw	127
  4288   0031B0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4289   0031B2  6E0C               	movwf	(??___fleq+3)^0,c
  4290   0031B4  5009               	movf	??___fleq^0,w,c
  4291   0031B6  100A               	iorwf	(??___fleq+1)^0,w,c
  4292   0031B8  100B               	iorwf	(??___fleq+2)^0,w,c
  4293   0031BA  100C               	iorwf	(??___fleq+3)^0,w,c
  4294   0031BC  A4D8               	btfss	status,2,c
  4295   0031BE  EFE3  F018         	goto	u3361
  4296   0031C2  EFE5  F018         	goto	u3360
  4297   0031C6                     u3361:
  4298   0031C6  EFED  F018         	goto	l3896
  4299   0031CA                     u3360:
  4300   0031CA  0E00               	movlw	0
  4301   0031CC  6E01               	movwf	___fleq@ff1^0,c
  4302   0031CE  0E00               	movlw	0
  4303   0031D0  6E02               	movwf	(___fleq@ff1+1)^0,c
  4304   0031D2  0E00               	movlw	0
  4305   0031D4  6E03               	movwf	(___fleq@ff1+2)^0,c
  4306   0031D6  0E00               	movlw	0
  4307   0031D8  6E04               	movwf	(___fleq@ff1+3)^0,c
  4308   0031DA                     l3896:
  4309   0031DA  0E00               	movlw	0
  4310   0031DC  1405               	andwf	___fleq@ff2^0,w,c
  4311   0031DE  6E09               	movwf	??___fleq^0,c
  4312   0031E0  0E00               	movlw	0
  4313   0031E2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4314   0031E4  6E0A               	movwf	(??___fleq+1)^0,c
  4315   0031E6  0E80               	movlw	128
  4316   0031E8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4317   0031EA  6E0B               	movwf	(??___fleq+2)^0,c
  4318   0031EC  0E7F               	movlw	127
  4319   0031EE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4320   0031F0  6E0C               	movwf	(??___fleq+3)^0,c
  4321   0031F2  5009               	movf	??___fleq^0,w,c
  4322   0031F4  100A               	iorwf	(??___fleq+1)^0,w,c
  4323   0031F6  100B               	iorwf	(??___fleq+2)^0,w,c
  4324   0031F8  100C               	iorwf	(??___fleq+3)^0,w,c
  4325   0031FA  A4D8               	btfss	status,2,c
  4326   0031FC  EF02  F019         	goto	u3371
  4327   003200  EF04  F019         	goto	u3370
  4328   003204                     u3371:
  4329   003204  EF0C  F019         	goto	l3900
  4330   003208                     u3370:
  4331   003208  0E00               	movlw	0
  4332   00320A  6E05               	movwf	___fleq@ff2^0,c
  4333   00320C  0E00               	movlw	0
  4334   00320E  6E06               	movwf	(___fleq@ff2+1)^0,c
  4335   003210  0E00               	movlw	0
  4336   003212  6E07               	movwf	(___fleq@ff2+2)^0,c
  4337   003214  0E00               	movlw	0
  4338   003216  6E08               	movwf	(___fleq@ff2+3)^0,c
  4339   003218                     l3900:
  4340   003218  5005               	movf	___fleq@ff2^0,w,c
  4341   00321A  1801               	xorwf	___fleq@ff1^0,w,c
  4342   00321C  E10F               	bnz	u3380
  4343   00321E  5006               	movf	(___fleq@ff2+1)^0,w,c
  4344   003220  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4345   003222  E10C               	bnz	u3380
  4346   003224  5007               	movf	(___fleq@ff2+2)^0,w,c
  4347   003226  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4348   003228  E109               	bnz	u3380
  4349   00322A  5008               	movf	(___fleq@ff2+3)^0,w,c
  4350   00322C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4351   00322E  B4D8               	btfsc	status,2,c
  4352   003230  EF1C  F019         	goto	u3381
  4353   003234  EF1E  F019         	goto	u3380
  4354   003238                     u3381:
  4355   003238  EF21  F019         	goto	l3904
  4356   00323C                     u3380:
  4357   00323C  90D8               	bcf	status,0,c
  4358   00323E  EF22  F019         	goto	l805
  4359   003242                     l3904:
  4360   003242  80D8               	bsf	status,0,c
  4361   003244                     l805:
  4362   003244  0012               	return		;funcret
  4363   003246                     __end_of___fleq:
  4364                           	callstack 0
  4365                           
  4366 ;; *************** function ___fldiv *****************
  4367 ;; Defined at:
  4368 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;  b               4   24[COMRAM] unsigned char 
  4371 ;;  a               4   28[COMRAM] unsigned char 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  grs             4   43[COMRAM] unsigned long 
  4374 ;;  rem             4   36[COMRAM] unsigned long 
  4375 ;;  new_exp         2   41[COMRAM] short 
  4376 ;;  aexp            1   48[COMRAM] unsigned char 
  4377 ;;  bexp            1   47[COMRAM] unsigned char 
  4378 ;;  sign            1   40[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  4   24[COMRAM] unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4388 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;Total ram usage:       25 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_convert_rgb2hue
  4398 ;;		_main
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text11
  4403   001F6A                     __ptext11:
  4404                           	callstack 0
  4405   001F6A                     ___fldiv:
  4406                           	callstack 28
  4407   001F6A  501C               	movf	(___fldiv@b+3)^0,w,c
  4408   001F6C  0B80               	andlw	128
  4409   001F6E  6E29               	movwf	___fldiv@sign^0,c
  4410   001F70  501C               	movf	(___fldiv@b+3)^0,w,c
  4411   001F72  241C               	addwf	(___fldiv@b+3)^0,w,c
  4412   001F74  6E30               	movwf	___fldiv@bexp^0,c
  4413   001F76  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4414   001F78  EFC0  F00F         	goto	u2941
  4415   001F7C  EFC2  F00F         	goto	u2940
  4416   001F80                     u2941:
  4417   001F80  EFC3  F00F         	goto	l3624
  4418   001F84                     u2940:
  4419   001F84  8030               	bsf	___fldiv@bexp^0,0,c
  4420   001F86                     l3624:
  4421   001F86  5030               	movf	___fldiv@bexp^0,w,c
  4422   001F88  B4D8               	btfsc	status,2,c
  4423   001F8A  EFC9  F00F         	goto	u2951
  4424   001F8E  EFCB  F00F         	goto	u2950
  4425   001F92                     u2951:
  4426   001F92  EFE0  F00F         	goto	l3634
  4427   001F96                     u2950:
  4428   001F96  2830               	incf	___fldiv@bexp^0,w,c
  4429   001F98  A4D8               	btfss	status,2,c
  4430   001F9A  EFD1  F00F         	goto	u2961
  4431   001F9E  EFD3  F00F         	goto	u2960
  4432   001FA2                     u2961:
  4433   001FA2  EFDB  F00F         	goto	l3630
  4434   001FA6                     u2960:
  4435   001FA6  0E00               	movlw	0
  4436   001FA8  6E19               	movwf	___fldiv@b^0,c
  4437   001FAA  0E00               	movlw	0
  4438   001FAC  6E1A               	movwf	(___fldiv@b+1)^0,c
  4439   001FAE  0E00               	movlw	0
  4440   001FB0  6E1B               	movwf	(___fldiv@b+2)^0,c
  4441   001FB2  0E00               	movlw	0
  4442   001FB4  6E1C               	movwf	(___fldiv@b+3)^0,c
  4443   001FB6                     l3630:
  4444   001FB6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4445   001FB8  0E00               	movlw	0
  4446   001FBA  6E1C               	movwf	(___fldiv@b+3)^0,c
  4447   001FBC  EFE8  F00F         	goto	l3636
  4448   001FC0                     l3634:
  4449   001FC0  0E00               	movlw	0
  4450   001FC2  6E19               	movwf	___fldiv@b^0,c
  4451   001FC4  0E00               	movlw	0
  4452   001FC6  6E1A               	movwf	(___fldiv@b+1)^0,c
  4453   001FC8  0E00               	movlw	0
  4454   001FCA  6E1B               	movwf	(___fldiv@b+2)^0,c
  4455   001FCC  0E00               	movlw	0
  4456   001FCE  6E1C               	movwf	(___fldiv@b+3)^0,c
  4457   001FD0                     l3636:
  4458   001FD0  5020               	movf	(___fldiv@a+3)^0,w,c
  4459   001FD2  0B80               	andlw	128
  4460   001FD4  1A29               	xorwf	___fldiv@sign^0,f,c
  4461   001FD6  5020               	movf	(___fldiv@a+3)^0,w,c
  4462   001FD8  2420               	addwf	(___fldiv@a+3)^0,w,c
  4463   001FDA  6E31               	movwf	___fldiv@aexp^0,c
  4464   001FDC  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  4465   001FDE  EFF3  F00F         	goto	u2971
  4466   001FE2  EFF5  F00F         	goto	u2970
  4467   001FE6                     u2971:
  4468   001FE6  EFF6  F00F         	goto	l3644
  4469   001FEA                     u2970:
  4470   001FEA  8031               	bsf	___fldiv@aexp^0,0,c
  4471   001FEC                     l3644:
  4472   001FEC  5031               	movf	___fldiv@aexp^0,w,c
  4473   001FEE  B4D8               	btfsc	status,2,c
  4474   001FF0  EFFC  F00F         	goto	u2981
  4475   001FF4  EFFE  F00F         	goto	u2980
  4476   001FF8                     u2981:
  4477   001FF8  EF13  F010         	goto	l3654
  4478   001FFC                     u2980:
  4479   001FFC  2831               	incf	___fldiv@aexp^0,w,c
  4480   001FFE  A4D8               	btfss	status,2,c
  4481   002000  EF04  F010         	goto	u2991
  4482   002004  EF06  F010         	goto	u2990
  4483   002008                     u2991:
  4484   002008  EF0E  F010         	goto	l3650
  4485   00200C                     u2990:
  4486   00200C  0E00               	movlw	0
  4487   00200E  6E1D               	movwf	___fldiv@a^0,c
  4488   002010  0E00               	movlw	0
  4489   002012  6E1E               	movwf	(___fldiv@a+1)^0,c
  4490   002014  0E00               	movlw	0
  4491   002016  6E1F               	movwf	(___fldiv@a+2)^0,c
  4492   002018  0E00               	movlw	0
  4493   00201A  6E20               	movwf	(___fldiv@a+3)^0,c
  4494   00201C                     l3650:
  4495   00201C  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  4496   00201E  0E00               	movlw	0
  4497   002020  6E20               	movwf	(___fldiv@a+3)^0,c
  4498   002022  EF1B  F010         	goto	l3656
  4499   002026                     l3654:
  4500   002026  0E00               	movlw	0
  4501   002028  6E1D               	movwf	___fldiv@a^0,c
  4502   00202A  0E00               	movlw	0
  4503   00202C  6E1E               	movwf	(___fldiv@a+1)^0,c
  4504   00202E  0E00               	movlw	0
  4505   002030  6E1F               	movwf	(___fldiv@a+2)^0,c
  4506   002032  0E00               	movlw	0
  4507   002034  6E20               	movwf	(___fldiv@a+3)^0,c
  4508   002036                     l3656:
  4509   002036  501D               	movf	___fldiv@a^0,w,c
  4510   002038  101E               	iorwf	(___fldiv@a+1)^0,w,c
  4511   00203A  101F               	iorwf	(___fldiv@a+2)^0,w,c
  4512   00203C  1020               	iorwf	(___fldiv@a+3)^0,w,c
  4513   00203E  A4D8               	btfss	status,2,c
  4514   002040  EF24  F010         	goto	u3001
  4515   002044  EF26  F010         	goto	u3000
  4516   002048                     u3001:
  4517   002048  EF3E  F010         	goto	l3668
  4518   00204C                     u3000:
  4519   00204C  0E00               	movlw	0
  4520   00204E  6E19               	movwf	___fldiv@b^0,c
  4521   002050  0E00               	movlw	0
  4522   002052  6E1A               	movwf	(___fldiv@b+1)^0,c
  4523   002054  0E00               	movlw	0
  4524   002056  6E1B               	movwf	(___fldiv@b+2)^0,c
  4525   002058  0E00               	movlw	0
  4526   00205A  6E1C               	movwf	(___fldiv@b+3)^0,c
  4527   00205C  0E80               	movlw	128
  4528   00205E  121B               	iorwf	(___fldiv@b+2)^0,f,c
  4529   002060  0E7F               	movlw	127
  4530   002062  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4531   002064                     l3662:
  4532   002064  5029               	movf	___fldiv@sign^0,w,c
  4533   002066  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4534   002068  C019  F019         	movff	___fldiv@b,?___fldiv
  4535   00206C  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  4536   002070  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  4537   002074  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  4538   002078  EF81  F011         	goto	l1128
  4539   00207C                     l3668:
  4540   00207C  5030               	movf	___fldiv@bexp^0,w,c
  4541   00207E  A4D8               	btfss	status,2,c
  4542   002080  EF44  F010         	goto	u3011
  4543   002084  EF46  F010         	goto	u3010
  4544   002088                     u3011:
  4545   002088  EF50  F010         	goto	l3676
  4546   00208C                     u3010:
  4547   00208C  0E00               	movlw	0
  4548   00208E  6E19               	movwf	?___fldiv^0,c
  4549   002090  0E00               	movlw	0
  4550   002092  6E1A               	movwf	(?___fldiv+1)^0,c
  4551   002094  0E00               	movlw	0
  4552   002096  6E1B               	movwf	(?___fldiv+2)^0,c
  4553   002098  0E00               	movlw	0
  4554   00209A  6E1C               	movwf	(?___fldiv+3)^0,c
  4555   00209C  EF81  F011         	goto	l1128
  4556   0020A0                     l3676:
  4557   0020A0  5031               	movf	___fldiv@aexp^0,w,c
  4558   0020A2  C030  F021         	movff	___fldiv@bexp,??___fldiv
  4559   0020A6  6A22               	clrf	(??___fldiv+1)^0,c
  4560   0020A8  5E21               	subwf	??___fldiv^0,f,c
  4561   0020AA  0E00               	movlw	0
  4562   0020AC  5A22               	subwfb	(??___fldiv+1)^0,f,c
  4563   0020AE  0E7F               	movlw	127
  4564   0020B0  2421               	addwf	??___fldiv^0,w,c
  4565   0020B2  6E2A               	movwf	___fldiv@new_exp^0,c
  4566   0020B4  0E00               	movlw	0
  4567   0020B6  2022               	addwfc	(??___fldiv+1)^0,w,c
  4568   0020B8  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4569   0020BA  C019  F025         	movff	___fldiv@b,___fldiv@rem
  4570   0020BE  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  4571   0020C2  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  4572   0020C6  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  4573   0020CA  0E00               	movlw	0
  4574   0020CC  6E19               	movwf	___fldiv@b^0,c
  4575   0020CE  0E00               	movlw	0
  4576   0020D0  6E1A               	movwf	(___fldiv@b+1)^0,c
  4577   0020D2  0E00               	movlw	0
  4578   0020D4  6E1B               	movwf	(___fldiv@b+2)^0,c
  4579   0020D6  0E00               	movlw	0
  4580   0020D8  6E1C               	movwf	(___fldiv@b+3)^0,c
  4581   0020DA  0E00               	movlw	0
  4582   0020DC  6E2C               	movwf	___fldiv@grs^0,c
  4583   0020DE  0E00               	movlw	0
  4584   0020E0  6E2D               	movwf	(___fldiv@grs+1)^0,c
  4585   0020E2  0E00               	movlw	0
  4586   0020E4  6E2E               	movwf	(___fldiv@grs+2)^0,c
  4587   0020E6  0E00               	movlw	0
  4588   0020E8  6E2F               	movwf	(___fldiv@grs+3)^0,c
  4589   0020EA  0E00               	movlw	0
  4590   0020EC  6E31               	movwf	___fldiv@aexp^0,c
  4591   0020EE  EFB1  F010         	goto	l1130
  4592   0020F2                     l3686:
  4593   0020F2  5031               	movf	___fldiv@aexp^0,w,c
  4594   0020F4  B4D8               	btfsc	status,2,c
  4595   0020F6  EF7F  F010         	goto	u3021
  4596   0020FA  EF81  F010         	goto	u3020
  4597   0020FE                     u3021:
  4598   0020FE  EF98  F010         	goto	l3694
  4599   002102                     u3020:
  4600   002102  90D8               	bcf	status,0,c
  4601   002104  3625               	rlcf	___fldiv@rem^0,f,c
  4602   002106  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  4603   002108  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  4604   00210A  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  4605   00210C  90D8               	bcf	status,0,c
  4606   00210E  3619               	rlcf	___fldiv@b^0,f,c
  4607   002110  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4608   002112  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4609   002114  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4610   002116  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4611   002118  EF90  F010         	goto	u3031
  4612   00211C  EF92  F010         	goto	u3030
  4613   002120                     u3031:
  4614   002120  EF93  F010         	goto	l1133
  4615   002124                     u3030:
  4616   002124  8019               	bsf	___fldiv@b^0,0,c
  4617   002126                     l1133:
  4618   002126  90D8               	bcf	status,0,c
  4619   002128  362C               	rlcf	___fldiv@grs^0,f,c
  4620   00212A  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4621   00212C  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4622   00212E  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4623   002130                     l3694:
  4624   002130  501D               	movf	___fldiv@a^0,w,c
  4625   002132  5C25               	subwf	___fldiv@rem^0,w,c
  4626   002134  501E               	movf	(___fldiv@a+1)^0,w,c
  4627   002136  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  4628   002138  501F               	movf	(___fldiv@a+2)^0,w,c
  4629   00213A  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  4630   00213C  5020               	movf	(___fldiv@a+3)^0,w,c
  4631   00213E  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  4632   002140  A0D8               	btfss	status,0,c
  4633   002142  EFA5  F010         	goto	u3041
  4634   002146  EFA7  F010         	goto	u3040
  4635   00214A                     u3041:
  4636   00214A  EFB0  F010         	goto	l3700
  4637   00214E                     u3040:
  4638   00214E  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  4639   002150  501D               	movf	___fldiv@a^0,w,c
  4640   002152  5E25               	subwf	___fldiv@rem^0,f,c
  4641   002154  501E               	movf	(___fldiv@a+1)^0,w,c
  4642   002156  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  4643   002158  501F               	movf	(___fldiv@a+2)^0,w,c
  4644   00215A  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  4645   00215C  5020               	movf	(___fldiv@a+3)^0,w,c
  4646   00215E  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  4647   002160                     l3700:
  4648   002160  2A31               	incf	___fldiv@aexp^0,f,c
  4649   002162                     l1130:
  4650   002162  0E19               	movlw	25
  4651   002164  6431               	cpfsgt	___fldiv@aexp^0,c
  4652   002166  EFB7  F010         	goto	u3051
  4653   00216A  EFB9  F010         	goto	u3050
  4654   00216E                     u3051:
  4655   00216E  EF79  F010         	goto	l3686
  4656   002172                     u3050:
  4657   002172  5025               	movf	___fldiv@rem^0,w,c
  4658   002174  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  4659   002176  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  4660   002178  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  4661   00217A  B4D8               	btfsc	status,2,c
  4662   00217C  EFC2  F010         	goto	u3061
  4663   002180  EFC4  F010         	goto	u3060
  4664   002184                     u3061:
  4665   002184  EFDC  F010         	goto	l3712
  4666   002188                     u3060:
  4667   002188  802C               	bsf	___fldiv@grs^0,0,c
  4668   00218A  EFDC  F010         	goto	l3712
  4669   00218E                     l3706:
  4670   00218E  90D8               	bcf	status,0,c
  4671   002190  3619               	rlcf	___fldiv@b^0,f,c
  4672   002192  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4673   002194  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4674   002196  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4675   002198  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4676   00219A  EFD1  F010         	goto	u3071
  4677   00219E  EFD3  F010         	goto	u3070
  4678   0021A2                     u3071:
  4679   0021A2  EFD4  F010         	goto	l1139
  4680   0021A6                     u3070:
  4681   0021A6  8019               	bsf	___fldiv@b^0,0,c
  4682   0021A8                     l1139:
  4683   0021A8  90D8               	bcf	status,0,c
  4684   0021AA  362C               	rlcf	___fldiv@grs^0,f,c
  4685   0021AC  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4686   0021AE  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4687   0021B0  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4688   0021B2  062A               	decf	___fldiv@new_exp^0,f,c
  4689   0021B4  A0D8               	btfss	status,0,c
  4690   0021B6  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  4691   0021B8                     l3712:
  4692   0021B8  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4693   0021BA  EFE1  F010         	goto	u3081
  4694   0021BE  EFE3  F010         	goto	u3080
  4695   0021C2                     u3081:
  4696   0021C2  EFC7  F010         	goto	l3706
  4697   0021C6                     u3080:
  4698   0021C6  0E00               	movlw	0
  4699   0021C8  6E31               	movwf	___fldiv@aexp^0,c
  4700   0021CA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4701   0021CC  EFEA  F010         	goto	u3091
  4702   0021D0  EFEC  F010         	goto	u3090
  4703   0021D4                     u3091:
  4704   0021D4  EF10  F011         	goto	l1141
  4705   0021D8                     u3090:
  4706   0021D8  0EFF               	movlw	255
  4707   0021DA  142C               	andwf	___fldiv@grs^0,w,c
  4708   0021DC  6E21               	movwf	??___fldiv^0,c
  4709   0021DE  0EFF               	movlw	255
  4710   0021E0  142D               	andwf	(___fldiv@grs+1)^0,w,c
  4711   0021E2  6E22               	movwf	(??___fldiv+1)^0,c
  4712   0021E4  0EFF               	movlw	255
  4713   0021E6  142E               	andwf	(___fldiv@grs+2)^0,w,c
  4714   0021E8  6E23               	movwf	(??___fldiv+2)^0,c
  4715   0021EA  0E7F               	movlw	127
  4716   0021EC  142F               	andwf	(___fldiv@grs+3)^0,w,c
  4717   0021EE  6E24               	movwf	(??___fldiv+3)^0,c
  4718   0021F0  5021               	movf	??___fldiv^0,w,c
  4719   0021F2  1022               	iorwf	(??___fldiv+1)^0,w,c
  4720   0021F4  1023               	iorwf	(??___fldiv+2)^0,w,c
  4721   0021F6  1024               	iorwf	(??___fldiv+3)^0,w,c
  4722   0021F8  B4D8               	btfsc	status,2,c
  4723   0021FA  EF01  F011         	goto	u3101
  4724   0021FE  EF03  F011         	goto	u3100
  4725   002202                     u3101:
  4726   002202  EF07  F011         	goto	l1142
  4727   002206                     u3100:
  4728   002206                     l3720:
  4729   002206  0E01               	movlw	1
  4730   002208  6E31               	movwf	___fldiv@aexp^0,c
  4731   00220A  EF10  F011         	goto	l1141
  4732   00220E                     l1142:
  4733   00220E  A019               	btfss	___fldiv@b^0,0,c
  4734   002210  EF0C  F011         	goto	u3111
  4735   002214  EF0E  F011         	goto	u3110
  4736   002218                     u3111:
  4737   002218  EF10  F011         	goto	l1141
  4738   00221C                     u3110:
  4739   00221C  EF03  F011         	goto	l3720
  4740   002220                     l1141:
  4741   002220  5031               	movf	___fldiv@aexp^0,w,c
  4742   002222  B4D8               	btfsc	status,2,c
  4743   002224  EF16  F011         	goto	u3121
  4744   002228  EF18  F011         	goto	u3120
  4745   00222C                     u3121:
  4746   00222C  EF3C  F011         	goto	l3732
  4747   002230                     u3120:
  4748   002230  0E01               	movlw	1
  4749   002232  2619               	addwf	___fldiv@b^0,f,c
  4750   002234  0E00               	movlw	0
  4751   002236  221A               	addwfc	(___fldiv@b+1)^0,f,c
  4752   002238  221B               	addwfc	(___fldiv@b+2)^0,f,c
  4753   00223A  221C               	addwfc	(___fldiv@b+3)^0,f,c
  4754   00223C  A01C               	btfss	(___fldiv@b+3)^0,0,c
  4755   00223E  EF23  F011         	goto	u3131
  4756   002242  EF25  F011         	goto	u3130
  4757   002246                     u3131:
  4758   002246  EF3C  F011         	goto	l3732
  4759   00224A                     u3130:
  4760   00224A  C019  F021         	movff	___fldiv@b,??___fldiv
  4761   00224E  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  4762   002252  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  4763   002256  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  4764   00225A  3424               	rlcf	(??___fldiv+3)^0,w,c
  4765   00225C  3224               	rrcf	(??___fldiv+3)^0,f,c
  4766   00225E  3223               	rrcf	(??___fldiv+2)^0,f,c
  4767   002260  3222               	rrcf	(??___fldiv+1)^0,f,c
  4768   002262  3221               	rrcf	??___fldiv^0,f,c
  4769   002264  C021  F019         	movff	??___fldiv,___fldiv@b
  4770   002268  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  4771   00226C  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  4772   002270  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  4773   002274  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  4774   002276  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  4775   002278                     l3732:
  4776   002278  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4777   00227A  EF47  F011         	goto	u3141
  4778   00227E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4779   002280  E108               	bnz	u3140
  4780   002282  282A               	incf	___fldiv@new_exp^0,w,c
  4781   002284  A0D8               	btfss	status,0,c
  4782   002286  EF47  F011         	goto	u3141
  4783   00228A  EF49  F011         	goto	u3140
  4784   00228E                     u3141:
  4785   00228E  EF54  F011         	goto	l3736
  4786   002292                     u3140:
  4787   002292  0E00               	movlw	0
  4788   002294  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4789   002296  682A               	setf	___fldiv@new_exp^0,c
  4790   002298  0E00               	movlw	0
  4791   00229A  6E19               	movwf	___fldiv@b^0,c
  4792   00229C  0E00               	movlw	0
  4793   00229E  6E1A               	movwf	(___fldiv@b+1)^0,c
  4794   0022A0  0E00               	movlw	0
  4795   0022A2  6E1B               	movwf	(___fldiv@b+2)^0,c
  4796   0022A4  0E00               	movlw	0
  4797   0022A6  6E1C               	movwf	(___fldiv@b+3)^0,c
  4798   0022A8                     l3736:
  4799   0022A8  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4800   0022AA  EF61  F011         	goto	u3150
  4801   0022AE  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4802   0022B0  E106               	bnz	u3151
  4803   0022B2  042A               	decf	___fldiv@new_exp^0,w,c
  4804   0022B4  B0D8               	btfsc	status,0,c
  4805   0022B6  EF5F  F011         	goto	u3151
  4806   0022BA  EF61  F011         	goto	u3150
  4807   0022BE                     u3151:
  4808   0022BE  EF6F  F011         	goto	l3740
  4809   0022C2                     u3150:
  4810   0022C2  0E00               	movlw	0
  4811   0022C4  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4812   0022C6  0E00               	movlw	0
  4813   0022C8  6E2A               	movwf	___fldiv@new_exp^0,c
  4814   0022CA  0E00               	movlw	0
  4815   0022CC  6E19               	movwf	___fldiv@b^0,c
  4816   0022CE  0E00               	movlw	0
  4817   0022D0  6E1A               	movwf	(___fldiv@b+1)^0,c
  4818   0022D2  0E00               	movlw	0
  4819   0022D4  6E1B               	movwf	(___fldiv@b+2)^0,c
  4820   0022D6  0E00               	movlw	0
  4821   0022D8  6E1C               	movwf	(___fldiv@b+3)^0,c
  4822   0022DA  0E00               	movlw	0
  4823   0022DC  6E29               	movwf	___fldiv@sign^0,c
  4824   0022DE                     l3740:
  4825   0022DE  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  4826   0022E2  A030               	btfss	___fldiv@bexp^0,0,c
  4827   0022E4  EF76  F011         	goto	u3161
  4828   0022E8  EF78  F011         	goto	u3160
  4829   0022EC                     u3161:
  4830   0022EC  EF7B  F011         	goto	l3746
  4831   0022F0                     u3160:
  4832   0022F0  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4833   0022F2  EF7C  F011         	goto	l3748
  4834   0022F6                     l3746:
  4835   0022F6  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  4836   0022F8                     l3748:
  4837   0022F8  90D8               	bcf	status,0,c
  4838   0022FA  3030               	rrcf	___fldiv@bexp^0,w,c
  4839   0022FC  6E1C               	movwf	(___fldiv@b+3)^0,c
  4840   0022FE  EF32  F010         	goto	l3662
  4841   002302                     l1128:
  4842   002302  0012               	return		;funcret
  4843   002304                     __end_of___fldiv:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _initUSART4 *****************
  4847 ;; Defined at:
  4848 ;;		line 14 in file "serial.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text12
  4876   003C5C                     __ptext12:
  4877                           	callstack 0
  4878   003C5C                     _initUSART4:
  4879                           	callstack 30
  4880   003C5C                     
  4881                           ;serial.c: 15:     RC0PPS = 0x12;
  4882   003C5C  0E12               	movlw	18
  4883   003C5E  010E               	movlb	14	; () banked
  4884   003C60  6F62               	movwf	98,b	;volatile
  4885                           
  4886                           ;serial.c: 16:     RX4PPS = 0x11;
  4887   003C62  0E11               	movlw	17
  4888   003C64  6F15               	movwf	21,b	;volatile
  4889   003C66                     
  4890                           ; BSR set to: 14
  4891                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  4892   003C66  97E9               	bcf	233,3,b	;volatile
  4893   003C68                     
  4894                           ; BSR set to: 14
  4895                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  4896   003C68  95E8               	bcf	232,2,b	;volatile
  4897                           
  4898                           ;serial.c: 19:     SP4BRGL = 51;
  4899   003C6A  0E33               	movlw	51
  4900   003C6C  6FE5               	movwf	229,b	;volatile
  4901                           
  4902                           ;serial.c: 20:     SP4BRGH = 0;
  4903   003C6E  0E00               	movlw	0
  4904   003C70  6FE6               	movwf	230,b	;volatile
  4905   003C72                     
  4906                           ; BSR set to: 14
  4907                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4908   003C72  89E7               	bsf	231,4,b	;volatile
  4909   003C74                     
  4910                           ; BSR set to: 14
  4911                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4912   003C74  8BE8               	bsf	232,5,b	;volatile
  4913   003C76                     
  4914                           ; BSR set to: 14
  4915                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4916   003C76  8FE7               	bsf	231,7,b	;volatile
  4917   003C78                     
  4918                           ; BSR set to: 14
  4919   003C78  0012               	return		;funcret
  4920   003C7A                     __end_of_initUSART4:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _initDCmotorsPWM *****************
  4924 ;; Defined at:
  4925 ;;		line 5 in file "dc_motor.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;Total ram usage:        2 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; This function calls:
  4946 ;;		Nothing
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           	psect	text13
  4953   003382                     __ptext13:
  4954                           	callstack 0
  4955   003382                     _initDCmotorsPWM:
  4956                           	callstack 30
  4957   003382                     
  4958                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4959   003382  9485               	bcf	133,2,c	;volatile
  4960                           
  4961                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4962   003384  9E83               	bcf	131,7,c	;volatile
  4963                           
  4964                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4965   003386  9885               	bcf	133,4,c	;volatile
  4966                           
  4967                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4968   003388  9C87               	bcf	135,6,c	;volatile
  4969                           
  4970                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4971   00338A  947D               	bcf	125,2,c	;volatile
  4972                           
  4973                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4974   00338C  9E7B               	bcf	123,7,c	;volatile
  4975                           
  4976                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4977   00338E  987D               	bcf	125,4,c	;volatile
  4978                           
  4979                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  4980   003390  9C7F               	bcf	127,6,c	;volatile
  4981   003392                     
  4982                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4983   003392  0E05               	movlw	5
  4984   003394  010E               	movlb	14	; () banked
  4985   003396  6F74               	movwf	116,b	;volatile
  4986                           
  4987                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4988   003398  0E06               	movlw	6
  4989   00339A  6F76               	movwf	118,b	;volatile
  4990                           
  4991                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4992   00339C  0E07               	movlw	7
  4993   00339E  6F69               	movwf	105,b	;volatile
  4994                           
  4995                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4996   0033A0  0E08               	movlw	8
  4997   0033A2  6F88               	movwf	136,b	;volatile
  4998                           
  4999                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  5000   0033A4  50BD               	movf	189,w,c	;volatile
  5001   0033A6  0B8F               	andlw	-113
  5002   0033A8  0940               	iorlw	64
  5003   0033AA  6EBD               	movwf	189,c	;volatile
  5004                           
  5005                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  5006   0033AC  0EE0               	movlw	-32
  5007   0033AE  16BE               	andwf	190,f,c	;volatile
  5008                           
  5009                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  5010   0033B0  50BF               	movf	191,w,c	;volatile
  5011   0033B2  0BF0               	andlw	-16
  5012   0033B4  0901               	iorlw	1
  5013   0033B6  6EBF               	movwf	191,c	;volatile
  5014   0033B8                     
  5015                           ; BSR set to: 14
  5016                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  5017   0033B8  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5018   0033BC                     
  5019                           ; BSR set to: 14
  5020                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  5021   0033BC  8EBD               	bsf	189,7,c	;volatile
  5022                           
  5023                           ;dc_motor.c: 35:     CCPR1H=0;
  5024   0033BE  0E00               	movlw	0
  5025   0033C0  6EAA               	movwf	170,c	;volatile
  5026                           
  5027                           ;dc_motor.c: 36:     CCPR2H=0;
  5028   0033C2  0E00               	movlw	0
  5029   0033C4  6EA6               	movwf	166,c	;volatile
  5030                           
  5031                           ;dc_motor.c: 37:     CCPR3H=0;
  5032   0033C6  0E00               	movlw	0
  5033   0033C8  010F               	movlb	15	; () banked
  5034   0033CA  6F25               	movwf	37,b	;volatile
  5035                           
  5036                           ;dc_motor.c: 38:     CCPR4H=0;
  5037   0033CC  0E00               	movlw	0
  5038   0033CE  6F21               	movwf	33,b	;volatile
  5039                           
  5040                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  5041   0033D0  0EFC               	movlw	-4
  5042   0033D2  16AD               	andwf	173,f,c	;volatile
  5043                           
  5044                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  5045   0033D4  0EF3               	movlw	-13
  5046   0033D6  16AD               	andwf	173,f,c	;volatile
  5047                           
  5048                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  5049   0033D8  0ECF               	movlw	-49
  5050   0033DA  16AD               	andwf	173,f,c	;volatile
  5051                           
  5052                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  5053   0033DC  0E3F               	movlw	-193
  5054   0033DE  16AD               	andwf	173,f,c	;volatile
  5055   0033E0                     
  5056                           ; BSR set to: 15
  5057                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  5058   0033E0  88AB               	bsf	171,4,c	;volatile
  5059                           
  5060                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  5061   0033E2  50AB               	movf	171,w,c	;volatile
  5062   0033E4  0BF0               	andlw	-16
  5063   0033E6  090C               	iorlw	12
  5064   0033E8  6EAB               	movwf	171,c	;volatile
  5065   0033EA                     
  5066                           ; BSR set to: 15
  5067                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  5068   0033EA  8EAB               	bsf	171,7,c	;volatile
  5069   0033EC                     
  5070                           ; BSR set to: 15
  5071                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  5072   0033EC  88A7               	bsf	167,4,c	;volatile
  5073                           
  5074                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  5075   0033EE  50A7               	movf	167,w,c	;volatile
  5076   0033F0  0BF0               	andlw	-16
  5077   0033F2  090C               	iorlw	12
  5078   0033F4  6EA7               	movwf	167,c	;volatile
  5079   0033F6                     
  5080                           ; BSR set to: 15
  5081                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  5082   0033F6  8EA7               	bsf	167,7,c	;volatile
  5083   0033F8                     
  5084                           ; BSR set to: 15
  5085                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  5086   0033F8  8926               	bsf	38,4,b	;volatile
  5087                           
  5088                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  5089   0033FA  5126               	movf	38,w,b	;volatile
  5090   0033FC  0BF0               	andlw	-16
  5091   0033FE  090C               	iorlw	12
  5092   003400  6F26               	movwf	38,b	;volatile
  5093   003402                     
  5094                           ; BSR set to: 15
  5095                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  5096   003402  8F26               	bsf	38,7,b	;volatile
  5097   003404                     
  5098                           ; BSR set to: 15
  5099                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  5100   003404  8922               	bsf	34,4,b	;volatile
  5101                           
  5102                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  5103   003406  5122               	movf	34,w,b	;volatile
  5104   003408  0BF0               	andlw	-16
  5105   00340A  090C               	iorlw	12
  5106   00340C  6F22               	movwf	34,b	;volatile
  5107   00340E                     
  5108                           ; BSR set to: 15
  5109                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  5110   00340E  8F22               	bsf	34,7,b	;volatile
  5111   003410                     
  5112                           ; BSR set to: 15
  5113   003410  0012               	return		;funcret
  5114   003412                     __end_of_initDCmotorsPWM:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _fullSpeedAhead *****************
  5118 ;; Defined at:
  5119 ;;		line 144 in file "dc_motor.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  5122 ;;		 -> motorL(9), 
  5123 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  5124 ;;		 -> motorR(9), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  power           2   21[COMRAM] int 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;Total ram usage:        5 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 2
  5143 ;; This function calls:
  5144 ;;		_setMotorPWM
  5145 ;; This function is called by:
  5146 ;;		_main
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text14
  5151   00359C                     __ptext14:
  5152                           	callstack 0
  5153   00359C                     _fullSpeedAhead:
  5154                           	callstack 28
  5155   00359C                     
  5156                           ;dc_motor.c: 144: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_
      +                          motor.c: 147:     mL->direction = 1;
  5157   00359C  5013               	movf	fullSpeedAhead@mL^0,w,c
  5158   00359E  6ED9               	movwf	fsr2l,c
  5159   0035A0  6ADA               	clrf	fsr2h,c
  5160   0035A2  0E01               	movlw	1
  5161   0035A4  26D9               	addwf	fsr2l,f,c
  5162   0035A6  0E01               	movlw	1
  5163   0035A8  6EDF               	movwf	indf2,c
  5164                           
  5165                           ;dc_motor.c: 148:     mR->direction = 1;
  5166   0035AA  5014               	movf	fullSpeedAhead@mR^0,w,c
  5167   0035AC  6ED9               	movwf	fsr2l,c
  5168   0035AE  6ADA               	clrf	fsr2h,c
  5169   0035B0  0E01               	movlw	1
  5170   0035B2  26D9               	addwf	fsr2l,f,c
  5171   0035B4  0E01               	movlw	1
  5172   0035B6  6EDF               	movwf	indf2,c
  5173   0035B8                     
  5174                           ;dc_motor.c: 150:     for(int power = 0; power <= 50; power++) {
  5175   0035B8  0E00               	movlw	0
  5176   0035BA  6E17               	movwf	(fullSpeedAhead@power+1)^0,c
  5177   0035BC  0E00               	movlw	0
  5178   0035BE  6E16               	movwf	fullSpeedAhead@power^0,c
  5179   0035C0                     l4314:
  5180                           
  5181                           ;dc_motor.c: 151:         mL->power = power;
  5182   0035C0  5013               	movf	fullSpeedAhead@mL^0,w,c
  5183   0035C2  6ED9               	movwf	fsr2l,c
  5184   0035C4  6ADA               	clrf	fsr2h,c
  5185   0035C6  C016  FFDF         	movff	fullSpeedAhead@power,indf2
  5186                           
  5187                           ;dc_motor.c: 152:         mR->power = power;
  5188   0035CA  5014               	movf	fullSpeedAhead@mR^0,w,c
  5189   0035CC  6ED9               	movwf	fsr2l,c
  5190   0035CE  6ADA               	clrf	fsr2h,c
  5191   0035D0  C016  FFDF         	movff	fullSpeedAhead@power,indf2
  5192   0035D4                     
  5193                           ;dc_motor.c: 155:         setMotorPWM(mL);
  5194   0035D4  C013  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5195   0035D8  EC93  F015         	call	_setMotorPWM	;wreg free
  5196   0035DC                     
  5197                           ;dc_motor.c: 156:         setMotorPWM(mR);
  5198   0035DC  C014  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5199   0035E0  EC93  F015         	call	_setMotorPWM	;wreg free
  5200   0035E4                     
  5201                           ;dc_motor.c: 159:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  5202   0035E4  0E0B               	movlw	11
  5203   0035E6  6E15               	movwf	??_fullSpeedAhead^0,c
  5204   0035E8  0E62               	movlw	98
  5205   0035EA                     u4357:
  5206   0035EA  2EE8               	decfsz	wreg,f,c
  5207   0035EC  D7FE               	bra	u4357
  5208   0035EE  2E15               	decfsz	??_fullSpeedAhead^0,f,c
  5209   0035F0  D7FC               	bra	u4357
  5210   0035F2  D000               	nop2	
  5211   0035F4                     
  5212                           ;dc_motor.c: 160:     }
  5213   0035F4  4A16               	infsnz	fullSpeedAhead@power^0,f,c
  5214   0035F6  2A17               	incf	(fullSpeedAhead@power+1)^0,f,c
  5215   0035F8  BE17               	btfsc	(fullSpeedAhead@power+1)^0,7,c
  5216   0035FA  EF08  F01B         	goto	u3801
  5217   0035FE  5017               	movf	(fullSpeedAhead@power+1)^0,w,c
  5218   003600  E109               	bnz	u3800
  5219   003602  0E33               	movlw	51
  5220   003604  5C16               	subwf	fullSpeedAhead@power^0,w,c
  5221   003606  A0D8               	btfss	status,0,c
  5222   003608  EF08  F01B         	goto	u3801
  5223   00360C  EF0A  F01B         	goto	u3800
  5224   003610                     u3801:
  5225   003610  EFE0  F01A         	goto	l4314
  5226   003614                     u3800:
  5227   003614  0012               	return		;funcret
  5228   003616                     __end_of_fullSpeedAhead:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _decision *****************
  5232 ;; Defined at:
  5233 ;;		line 322 in file "color.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  hue             2   31[COMRAM] unsigned int 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        2 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 5
  5254 ;; This function calls:
  5255 ;;		_moveGreen
  5256 ;;		_moveRed
  5257 ;; This function is called by:
  5258 ;;		_main
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text15
  5263   003700                     __ptext15:
  5264                           	callstack 0
  5265   003700                     _decision:
  5266                           	callstack 25
  5267   003700                     
  5268                           ;color.c: 326:     if (hue<=20) {
  5269   003700  5021               	movf	(decision@hue+1)^0,w,c
  5270   003702  E107               	bnz	u3771
  5271   003704  0E15               	movlw	21
  5272   003706  5C20               	subwf	decision@hue^0,w,c
  5273   003708  B0D8               	btfsc	status,0,c
  5274   00370A  EF89  F01B         	goto	u3771
  5275   00370E  EF8B  F01B         	goto	u3770
  5276   003712                     u3771:
  5277   003712  EF91  F01B         	goto	l4254
  5278   003716                     u3770:
  5279   003716                     
  5280                           ;color.c: 327:         moveRed(&motorL, &motorR);
  5281   003716  0EE2               	movlw	low _motorL
  5282   003718  6E1C               	movwf	moveRed@mL^0,c
  5283   00371A  0ED9               	movlw	low _motorR
  5284   00371C  6E1D               	movwf	moveRed@mR^0,c
  5285   00371E  EC3E  F01D         	call	_moveRed	;wreg free
  5286   003722                     l4254:
  5287                           
  5288                           ;color.c: 329:     if (hue>=105 && hue<=130){
  5289   003722  5021               	movf	(decision@hue+1)^0,w,c
  5290   003724  E109               	bnz	u3780
  5291   003726  0E69               	movlw	105
  5292   003728  5C20               	subwf	decision@hue^0,w,c
  5293   00372A  A0D8               	btfss	status,0,c
  5294   00372C  EF9A  F01B         	goto	u3781
  5295   003730  EF9C  F01B         	goto	u3780
  5296   003734                     u3781:
  5297   003734  EFAD  F01B         	goto	l139
  5298   003738                     u3780:
  5299   003738  5021               	movf	(decision@hue+1)^0,w,c
  5300   00373A  E107               	bnz	u3791
  5301   00373C  0E83               	movlw	131
  5302   00373E  5C20               	subwf	decision@hue^0,w,c
  5303   003740  B0D8               	btfsc	status,0,c
  5304   003742  EFA5  F01B         	goto	u3791
  5305   003746  EFA7  F01B         	goto	u3790
  5306   00374A                     u3791:
  5307   00374A  EFAD  F01B         	goto	l139
  5308   00374E                     u3790:
  5309   00374E                     
  5310                           ;color.c: 330:         moveGreen(&motorL, &motorR);
  5311   00374E  0EE2               	movlw	low _motorL
  5312   003750  6E1C               	movwf	moveGreen@mL^0,c
  5313   003752  0ED9               	movlw	low _motorR
  5314   003754  6E1D               	movwf	moveGreen@mR^0,c
  5315   003756  EC70  F01D         	call	_moveGreen	;wreg free
  5316   00375A                     l139:
  5317   00375A  0012               	return		;funcret
  5318   00375C                     __end_of_decision:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _moveRed *****************
  5322 ;; Defined at:
  5323 ;;		line 254 in file "dc_motor.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  mL              1   27[COMRAM] PTR struct DC_motor
  5326 ;;		 -> motorL(9), 
  5327 ;;  mR              1   28[COMRAM] PTR struct DC_motor
  5328 ;;		 -> motorR(9), 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;Total ram usage:        4 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; Hardware stack levels required when called: 4
  5347 ;; This function calls:
  5348 ;;		_backHalf
  5349 ;;		_right90
  5350 ;; This function is called by:
  5351 ;;		_decision
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text16
  5356   003A7C                     __ptext16:
  5357                           	callstack 0
  5358   003A7C                     _moveRed:
  5359                           	callstack 25
  5360   003A7C                     
  5361                           ;dc_motor.c: 254: void moveRed(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 255
      +                          : {;dc_motor.c: 257:     backHalf(mL,mR);
  5362   003A7C  C01C  F018         	movff	moveRed@mL,backHalf@mL
  5363   003A80  C01D  F019         	movff	moveRed@mR,backHalf@mR
  5364   003A84  ECBB  F01D         	call	_backHalf	;wreg free
  5365   003A88                     
  5366                           ;dc_motor.c: 258:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5367   003A88  0E29               	movlw	41
  5368   003A8A  6E1F               	movwf	(??_moveRed+1)^0,c
  5369   003A8C  0E96               	movlw	150
  5370   003A8E  6E1E               	movwf	??_moveRed^0,c
  5371   003A90  0E7F               	movlw	127
  5372   003A92                     u4367:
  5373   003A92  2EE8               	decfsz	wreg,f,c
  5374   003A94  D7FE               	bra	u4367
  5375   003A96  2E1E               	decfsz	??_moveRed^0,f,c
  5376   003A98  D7FC               	bra	u4367
  5377   003A9A  2E1F               	decfsz	(??_moveRed+1)^0,f,c
  5378   003A9C  D7FA               	bra	u4367
  5379   003A9E  0000               	nop	
  5380   003AA0                     
  5381                           ;dc_motor.c: 259:     right90(mL,mR);
  5382   003AA0  C01C  F018         	movff	moveRed@mL,right90@mL
  5383   003AA4  C01D  F019         	movff	moveRed@mR,right90@mR
  5384   003AA8  EC57  F01D         	call	_right90	;wreg free
  5385   003AAC  0012               	return		;funcret
  5386   003AAE                     __end_of_moveRed:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _right90 *****************
  5390 ;; Defined at:
  5391 ;;		line 193 in file "dc_motor.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  mL              1   23[COMRAM] PTR struct DC_motor
  5394 ;;		 -> motorL(9), 
  5395 ;;  mR              1   24[COMRAM] PTR struct DC_motor
  5396 ;;		 -> motorR(9), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:        4 bytes
  5413 ;; Hardware stack levels used: 1
  5414 ;; Hardware stack levels required when called: 3
  5415 ;; This function calls:
  5416 ;;		_stop
  5417 ;;		_turnRight
  5418 ;; This function is called by:
  5419 ;;		_moveRed
  5420 ;;		_moveYellow
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text17
  5425   003AAE                     __ptext17:
  5426                           	callstack 0
  5427   003AAE                     _right90:
  5428                           	callstack 25
  5429   003AAE                     
  5430                           ;dc_motor.c: 193: void right90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 194
      +                          : {;dc_motor.c: 195:     turnRight(mL,mR);
  5431   003AAE  C018  F013         	movff	right90@mL,turnRight@mL
  5432   003AB2  C019  F014         	movff	right90@mR,turnRight@mR
  5433   003AB6  EC50  F01A         	call	_turnRight	;wreg free
  5434   003ABA                     
  5435                           ;dc_motor.c: 196:     _delay((unsigned long)((260)*(64000000/4000.0)));
  5436   003ABA  0E16               	movlw	22
  5437   003ABC  6E1B               	movwf	(??_right90+1)^0,c
  5438   003ABE  0E1B               	movlw	27
  5439   003AC0  6E1A               	movwf	??_right90^0,c
  5440   003AC2  0E88               	movlw	136
  5441   003AC4                     u4377:
  5442   003AC4  2EE8               	decfsz	wreg,f,c
  5443   003AC6  D7FE               	bra	u4377
  5444   003AC8  2E1A               	decfsz	??_right90^0,f,c
  5445   003ACA  D7FC               	bra	u4377
  5446   003ACC  2E1B               	decfsz	(??_right90+1)^0,f,c
  5447   003ACE  D7FA               	bra	u4377
  5448   003AD0  D000               	nop2	
  5449   003AD2                     
  5450                           ;dc_motor.c: 197:     stop(mL,mR);
  5451   003AD2  C018  F013         	movff	right90@mL,stop@mL
  5452   003AD6  C019  F014         	movff	right90@mR,stop@mR
  5453   003ADA  EC09  F01A         	call	_stop	;wreg free
  5454   003ADE  0012               	return		;funcret
  5455   003AE0                     __end_of_right90:
  5456                           	callstack 0
  5457                           
  5458 ;; *************** function _turnRight *****************
  5459 ;; Defined at:
  5460 ;;		line 125 in file "dc_motor.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  5463 ;;		 -> motorL(9), 
  5464 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  5465 ;;		 -> motorR(9), 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  i               2   21[COMRAM] unsigned int 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;Total ram usage:        5 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 2
  5484 ;; This function calls:
  5485 ;;		_setMotorPWM
  5486 ;; This function is called by:
  5487 ;;		_right90
  5488 ;;		_right135
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text18
  5493   0034A0                     __ptext18:
  5494                           	callstack 0
  5495   0034A0                     _turnRight:
  5496                           	callstack 25
  5497   0034A0                     
  5498                           ;dc_motor.c: 125: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 126: {;dc_motor
      +                          .c: 128:     mL->direction = 1;
  5499   0034A0  5013               	movf	turnRight@mL^0,w,c
  5500   0034A2  6ED9               	movwf	fsr2l,c
  5501   0034A4  6ADA               	clrf	fsr2h,c
  5502   0034A6  0E01               	movlw	1
  5503   0034A8  26D9               	addwf	fsr2l,f,c
  5504   0034AA  0E01               	movlw	1
  5505   0034AC  6EDF               	movwf	indf2,c
  5506                           
  5507                           ;dc_motor.c: 129:     mR->direction = 0;
  5508   0034AE  5014               	movf	turnRight@mR^0,w,c
  5509   0034B0  6ED9               	movwf	fsr2l,c
  5510   0034B2  6ADA               	clrf	fsr2h,c
  5511   0034B4  0E01               	movlw	1
  5512   0034B6  26D9               	addwf	fsr2l,f,c
  5513   0034B8  6ADF               	clrf	indf2,c
  5514   0034BA                     
  5515                           ;dc_motor.c: 131:     setMotorPWM(mL);
  5516   0034BA  C013  F00E         	movff	turnRight@mL,setMotorPWM@m
  5517   0034BE  EC93  F015         	call	_setMotorPWM	;wreg free
  5518   0034C2                     
  5519                           ;dc_motor.c: 132:     setMotorPWM(mR);
  5520   0034C2  C014  F00E         	movff	turnRight@mR,setMotorPWM@m
  5521   0034C6  EC93  F015         	call	_setMotorPWM	;wreg free
  5522   0034CA                     
  5523                           ;dc_motor.c: 133:     for (unsigned int i = 0; i <50; i++)
  5524   0034CA  0E00               	movlw	0
  5525   0034CC  6E17               	movwf	(turnRight@i+1)^0,c
  5526   0034CE  0E00               	movlw	0
  5527   0034D0  6E16               	movwf	turnRight@i^0,c
  5528   0034D2                     l3300:
  5529                           
  5530                           ;dc_motor.c: 134:     {;dc_motor.c: 135:         mL->power++;
  5531   0034D2  5013               	movf	turnRight@mL^0,w,c
  5532   0034D4  6ED9               	movwf	fsr2l,c
  5533   0034D6  6ADA               	clrf	fsr2h,c
  5534   0034D8  2ADF               	incf	indf2,f,c
  5535                           
  5536                           ;dc_motor.c: 136:         mR->power++;
  5537   0034DA  5014               	movf	turnRight@mR^0,w,c
  5538   0034DC  6ED9               	movwf	fsr2l,c
  5539   0034DE  6ADA               	clrf	fsr2h,c
  5540   0034E0  2ADF               	incf	indf2,f,c
  5541   0034E2                     
  5542                           ;dc_motor.c: 137:         setMotorPWM(mL);
  5543   0034E2  C013  F00E         	movff	turnRight@mL,setMotorPWM@m
  5544   0034E6  EC93  F015         	call	_setMotorPWM	;wreg free
  5545   0034EA                     
  5546                           ;dc_motor.c: 138:         setMotorPWM(mR);
  5547   0034EA  C014  F00E         	movff	turnRight@mR,setMotorPWM@m
  5548   0034EE  EC93  F015         	call	_setMotorPWM	;wreg free
  5549   0034F2                     
  5550                           ;dc_motor.c: 139:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  5551   0034F2  0E0B               	movlw	11
  5552   0034F4  6E15               	movwf	??_turnRight^0,c
  5553   0034F6  0E62               	movlw	98
  5554   0034F8                     u4387:
  5555   0034F8  2EE8               	decfsz	wreg,f,c
  5556   0034FA  D7FE               	bra	u4387
  5557   0034FC  2E15               	decfsz	??_turnRight^0,f,c
  5558   0034FE  D7FC               	bra	u4387
  5559   003500  D000               	nop2	
  5560   003502                     
  5561                           ;dc_motor.c: 140:     }
  5562   003502  4A16               	infsnz	turnRight@i^0,f,c
  5563   003504  2A17               	incf	(turnRight@i+1)^0,f,c
  5564   003506  5017               	movf	(turnRight@i+1)^0,w,c
  5565   003508  E109               	bnz	u2480
  5566   00350A  0E32               	movlw	50
  5567   00350C  5C16               	subwf	turnRight@i^0,w,c
  5568   00350E  A0D8               	btfss	status,0,c
  5569   003510  EF8C  F01A         	goto	u2481
  5570   003514  EF8E  F01A         	goto	u2480
  5571   003518                     u2481:
  5572   003518  EF69  F01A         	goto	l3300
  5573   00351C                     u2480:
  5574   00351C  0012               	return		;funcret
  5575   00351E                     __end_of_turnRight:
  5576                           	callstack 0
  5577                           
  5578 ;; *************** function _moveGreen *****************
  5579 ;; Defined at:
  5580 ;;		line 262 in file "dc_motor.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;  mL              1   27[COMRAM] PTR struct DC_motor
  5583 ;;		 -> motorL(9), 
  5584 ;;  mR              1   28[COMRAM] PTR struct DC_motor
  5585 ;;		 -> motorR(9), 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5597 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;Total ram usage:        4 bytes
  5602 ;; Hardware stack levels used: 1
  5603 ;; Hardware stack levels required when called: 4
  5604 ;; This function calls:
  5605 ;;		_backHalf
  5606 ;;		_left90
  5607 ;; This function is called by:
  5608 ;;		_decision
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text19
  5613   003AE0                     __ptext19:
  5614                           	callstack 0
  5615   003AE0                     _moveGreen:
  5616                           	callstack 25
  5617   003AE0                     
  5618                           ;dc_motor.c: 262: void moveGreen(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 2
      +                          63: {;dc_motor.c: 265:     backHalf(mL,mR);
  5619   003AE0  C01C  F018         	movff	moveGreen@mL,backHalf@mL
  5620   003AE4  C01D  F019         	movff	moveGreen@mR,backHalf@mR
  5621   003AE8  ECBB  F01D         	call	_backHalf	;wreg free
  5622   003AEC                     
  5623                           ;dc_motor.c: 266:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5624   003AEC  0E29               	movlw	41
  5625   003AEE  6E1F               	movwf	(??_moveGreen+1)^0,c
  5626   003AF0  0E96               	movlw	150
  5627   003AF2  6E1E               	movwf	??_moveGreen^0,c
  5628   003AF4  0E7F               	movlw	127
  5629   003AF6                     u4397:
  5630   003AF6  2EE8               	decfsz	wreg,f,c
  5631   003AF8  D7FE               	bra	u4397
  5632   003AFA  2E1E               	decfsz	??_moveGreen^0,f,c
  5633   003AFC  D7FC               	bra	u4397
  5634   003AFE  2E1F               	decfsz	(??_moveGreen+1)^0,f,c
  5635   003B00  D7FA               	bra	u4397
  5636   003B02  0000               	nop	
  5637   003B04                     
  5638                           ;dc_motor.c: 267:     left90(mL,mR);
  5639   003B04  C01C  F018         	movff	moveGreen@mL,left90@mL
  5640   003B08  C01D  F019         	movff	moveGreen@mR,left90@mR
  5641   003B0C  EC89  F01D         	call	_left90	;wreg free
  5642   003B10  0012               	return		;funcret
  5643   003B12                     __end_of_moveGreen:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _left90 *****************
  5647 ;; Defined at:
  5648 ;;		line 201 in file "dc_motor.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  mL              1   23[COMRAM] PTR struct DC_motor
  5651 ;;		 -> motorL(9), 
  5652 ;;  mR              1   24[COMRAM] PTR struct DC_motor
  5653 ;;		 -> motorR(9), 
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;Total ram usage:        4 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; Hardware stack levels required when called: 3
  5672 ;; This function calls:
  5673 ;;		_stop
  5674 ;;		_turnLeft
  5675 ;; This function is called by:
  5676 ;;		_moveGreen
  5677 ;;		_movePink
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text20
  5682   003B12                     __ptext20:
  5683                           	callstack 0
  5684   003B12                     _left90:
  5685                           	callstack 25
  5686   003B12                     
  5687                           ;dc_motor.c: 201: void left90(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 202:
      +                           {;dc_motor.c: 203:     turnLeft(mL,mR);
  5688   003B12  C018  F013         	movff	left90@mL,turnLeft@mL
  5689   003B16  C019  F014         	movff	left90@mR,turnLeft@mR
  5690   003B1A  EC8F  F01A         	call	_turnLeft	;wreg free
  5691   003B1E                     
  5692                           ;dc_motor.c: 204:     _delay((unsigned long)((260)*(64000000/4000.0)));
  5693   003B1E  0E16               	movlw	22
  5694   003B20  6E1B               	movwf	(??_left90+1)^0,c
  5695   003B22  0E1B               	movlw	27
  5696   003B24  6E1A               	movwf	??_left90^0,c
  5697   003B26  0E88               	movlw	136
  5698   003B28                     u4407:
  5699   003B28  2EE8               	decfsz	wreg,f,c
  5700   003B2A  D7FE               	bra	u4407
  5701   003B2C  2E1A               	decfsz	??_left90^0,f,c
  5702   003B2E  D7FC               	bra	u4407
  5703   003B30  2E1B               	decfsz	(??_left90+1)^0,f,c
  5704   003B32  D7FA               	bra	u4407
  5705   003B34  D000               	nop2	
  5706   003B36                     
  5707                           ;dc_motor.c: 205:     stop(mL,mR);
  5708   003B36  C018  F013         	movff	left90@mL,stop@mL
  5709   003B3A  C019  F014         	movff	left90@mR,stop@mR
  5710   003B3E  EC09  F01A         	call	_stop	;wreg free
  5711   003B42  0012               	return		;funcret
  5712   003B44                     __end_of_left90:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _turnLeft *****************
  5716 ;; Defined at:
  5717 ;;		line 105 in file "dc_motor.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  5720 ;;		 -> motorL(9), 
  5721 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  5722 ;;		 -> motorR(9), 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  i               2   21[COMRAM] unsigned int 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;Total ram usage:        5 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 2
  5741 ;; This function calls:
  5742 ;;		_setMotorPWM
  5743 ;; This function is called by:
  5744 ;;		_left90
  5745 ;;		_turn180
  5746 ;;		_left135
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text21
  5751   00351E                     __ptext21:
  5752                           	callstack 0
  5753   00351E                     _turnLeft:
  5754                           	callstack 25
  5755   00351E                     
  5756                           ;dc_motor.c: 105: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 106: {;dc_motor.
      +                          c: 108:     mL->direction = 0;
  5757   00351E  5013               	movf	turnLeft@mL^0,w,c
  5758   003520  6ED9               	movwf	fsr2l,c
  5759   003522  6ADA               	clrf	fsr2h,c
  5760   003524  0E01               	movlw	1
  5761   003526  26D9               	addwf	fsr2l,f,c
  5762   003528  6ADF               	clrf	indf2,c
  5763                           
  5764                           ;dc_motor.c: 109:     mR->direction = 1;
  5765   00352A  5014               	movf	turnLeft@mR^0,w,c
  5766   00352C  6ED9               	movwf	fsr2l,c
  5767   00352E  6ADA               	clrf	fsr2h,c
  5768   003530  0E01               	movlw	1
  5769   003532  26D9               	addwf	fsr2l,f,c
  5770   003534  0E01               	movlw	1
  5771   003536  6EDF               	movwf	indf2,c
  5772   003538                     
  5773                           ;dc_motor.c: 111:     setMotorPWM(mL);
  5774   003538  C013  F00E         	movff	turnLeft@mL,setMotorPWM@m
  5775   00353C  EC93  F015         	call	_setMotorPWM	;wreg free
  5776   003540                     
  5777                           ;dc_motor.c: 112:     setMotorPWM(mR);
  5778   003540  C014  F00E         	movff	turnLeft@mR,setMotorPWM@m
  5779   003544  EC93  F015         	call	_setMotorPWM	;wreg free
  5780   003548                     
  5781                           ;dc_motor.c: 113:     for (unsigned int i = 0; i <50; i++)
  5782   003548  0E00               	movlw	0
  5783   00354A  6E17               	movwf	(turnLeft@i+1)^0,c
  5784   00354C  0E00               	movlw	0
  5785   00354E  6E16               	movwf	turnLeft@i^0,c
  5786   003550                     l3276:
  5787                           
  5788                           ;dc_motor.c: 114:     {;dc_motor.c: 115:         mL->power++;
  5789   003550  5013               	movf	turnLeft@mL^0,w,c
  5790   003552  6ED9               	movwf	fsr2l,c
  5791   003554  6ADA               	clrf	fsr2h,c
  5792   003556  2ADF               	incf	indf2,f,c
  5793                           
  5794                           ;dc_motor.c: 116:         mR->power++;
  5795   003558  5014               	movf	turnLeft@mR^0,w,c
  5796   00355A  6ED9               	movwf	fsr2l,c
  5797   00355C  6ADA               	clrf	fsr2h,c
  5798   00355E  2ADF               	incf	indf2,f,c
  5799   003560                     
  5800                           ;dc_motor.c: 117:         setMotorPWM(mL);
  5801   003560  C013  F00E         	movff	turnLeft@mL,setMotorPWM@m
  5802   003564  EC93  F015         	call	_setMotorPWM	;wreg free
  5803   003568                     
  5804                           ;dc_motor.c: 118:         setMotorPWM(mR);
  5805   003568  C014  F00E         	movff	turnLeft@mR,setMotorPWM@m
  5806   00356C  EC93  F015         	call	_setMotorPWM	;wreg free
  5807   003570                     
  5808                           ;dc_motor.c: 119:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  5809   003570  0E0B               	movlw	11
  5810   003572  6E15               	movwf	??_turnLeft^0,c
  5811   003574  0E62               	movlw	98
  5812   003576                     u4417:
  5813   003576  2EE8               	decfsz	wreg,f,c
  5814   003578  D7FE               	bra	u4417
  5815   00357A  2E15               	decfsz	??_turnLeft^0,f,c
  5816   00357C  D7FC               	bra	u4417
  5817   00357E  D000               	nop2	
  5818   003580                     
  5819                           ;dc_motor.c: 120:     }
  5820   003580  4A16               	infsnz	turnLeft@i^0,f,c
  5821   003582  2A17               	incf	(turnLeft@i+1)^0,f,c
  5822   003584  5017               	movf	(turnLeft@i+1)^0,w,c
  5823   003586  E109               	bnz	u2470
  5824   003588  0E32               	movlw	50
  5825   00358A  5C16               	subwf	turnLeft@i^0,w,c
  5826   00358C  A0D8               	btfss	status,0,c
  5827   00358E  EFCB  F01A         	goto	u2471
  5828   003592  EFCD  F01A         	goto	u2470
  5829   003596                     u2471:
  5830   003596  EFA8  F01A         	goto	l3276
  5831   00359A                     u2470:
  5832   00359A  0012               	return		;funcret
  5833   00359C                     __end_of_turnLeft:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _backHalf *****************
  5837 ;; Defined at:
  5838 ;;		line 233 in file "dc_motor.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;  mL              1   23[COMRAM] PTR struct DC_motor
  5841 ;;		 -> motorL(9), 
  5842 ;;  mR              1   24[COMRAM] PTR struct DC_motor
  5843 ;;		 -> motorR(9), 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;		None
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  1    wreg      void 
  5848 ;; Registers used:
  5849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;Total ram usage:        4 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 3
  5862 ;; This function calls:
  5863 ;;		_fullSpeedBack
  5864 ;;		_stop
  5865 ;; This function is called by:
  5866 ;;		_moveRed
  5867 ;;		_moveGreen
  5868 ;;		_moveBlue
  5869 ;;		_moveOrange
  5870 ;;		_moveLightBlue
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text22
  5875   003B76                     __ptext22:
  5876                           	callstack 0
  5877   003B76                     _backHalf:
  5878                           	callstack 25
  5879   003B76                     
  5880                           ;dc_motor.c: 233: void backHalf(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 23
      +                          4: {;dc_motor.c: 235:     fullSpeedBack(mL,mR);
  5881   003B76  C018  F013         	movff	backHalf@mL,fullSpeedBack@mL
  5882   003B7A  C019  F014         	movff	backHalf@mR,fullSpeedBack@mR
  5883   003B7E  EC0B  F01B         	call	_fullSpeedBack	;wreg free
  5884   003B82                     
  5885                           ;dc_motor.c: 236:     _delay((unsigned long)((300)*(64000000/4000.0)));
  5886   003B82  0E19               	movlw	25
  5887   003B84  6E1B               	movwf	(??_backHalf+1)^0,c
  5888   003B86  0E5A               	movlw	90
  5889   003B88  6E1A               	movwf	??_backHalf^0,c
  5890   003B8A  0EB2               	movlw	178
  5891   003B8C                     u4427:
  5892   003B8C  2EE8               	decfsz	wreg,f,c
  5893   003B8E  D7FE               	bra	u4427
  5894   003B90  2E1A               	decfsz	??_backHalf^0,f,c
  5895   003B92  D7FC               	bra	u4427
  5896   003B94  2E1B               	decfsz	(??_backHalf+1)^0,f,c
  5897   003B96  D7FA               	bra	u4427
  5898   003B98                     
  5899                           ;dc_motor.c: 237:     stop(mL,mR);
  5900   003B98  C018  F013         	movff	backHalf@mL,stop@mL
  5901   003B9C  C019  F014         	movff	backHalf@mR,stop@mR
  5902   003BA0  EC09  F01A         	call	_stop	;wreg free
  5903   003BA4  0012               	return		;funcret
  5904   003BA6                     __end_of_backHalf:
  5905                           	callstack 0
  5906                           
  5907 ;; *************** function _stop *****************
  5908 ;; Defined at:
  5909 ;;		line 88 in file "dc_motor.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  5912 ;;		 -> motorL(9), 
  5913 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  5914 ;;		 -> motorR(9), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5930 ;;Total ram usage:        3 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; Hardware stack levels required when called: 2
  5933 ;; This function calls:
  5934 ;;		_setMotorPWM
  5935 ;; This function is called by:
  5936 ;;		_main
  5937 ;;		_right90
  5938 ;;		_left90
  5939 ;;		_backHalf
  5940 ;;		_turn180
  5941 ;;		_right135
  5942 ;;		_left135
  5943 ;;		_backOneAndHalf
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text23
  5948   003412                     __ptext23:
  5949                           	callstack 0
  5950   003412                     _stop:
  5951                           	callstack 28
  5952   003412                     
  5953                           ;dc_motor.c: 88: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 91:
      +                               while(mL->power > 0 || mR->power > 0) {
  5954   003412  EF39  F01A         	goto	l3260
  5955   003416                     l3246:
  5956                           
  5957                           ;dc_motor.c: 92:         if (mL->power > 0) mL->power--;
  5958   003416  5013               	movf	stop@mL^0,w,c
  5959   003418  6ED9               	movwf	fsr2l,c
  5960   00341A  6ADA               	clrf	fsr2h,c
  5961   00341C  50DF               	movf	indf2,w,c
  5962   00341E  B4D8               	btfsc	status,2,c
  5963   003420  EF14  F01A         	goto	u2431
  5964   003424  EF16  F01A         	goto	u2430
  5965   003428                     u2431:
  5966   003428  EF1A  F01A         	goto	l3250
  5967   00342C                     u2430:
  5968   00342C  5013               	movf	stop@mL^0,w,c
  5969   00342E  6ED9               	movwf	fsr2l,c
  5970   003430  6ADA               	clrf	fsr2h,c
  5971   003432  06DF               	decf	indf2,f,c
  5972   003434                     l3250:
  5973                           
  5974                           ;dc_motor.c: 93:         if (mR->power > 0) mR->power--;
  5975   003434  5014               	movf	stop@mR^0,w,c
  5976   003436  6ED9               	movwf	fsr2l,c
  5977   003438  6ADA               	clrf	fsr2h,c
  5978   00343A  50DF               	movf	indf2,w,c
  5979   00343C  B4D8               	btfsc	status,2,c
  5980   00343E  EF23  F01A         	goto	u2441
  5981   003442  EF25  F01A         	goto	u2440
  5982   003446                     u2441:
  5983   003446  EF29  F01A         	goto	l3254
  5984   00344A                     u2440:
  5985   00344A  5014               	movf	stop@mR^0,w,c
  5986   00344C  6ED9               	movwf	fsr2l,c
  5987   00344E  6ADA               	clrf	fsr2h,c
  5988   003450  06DF               	decf	indf2,f,c
  5989   003452                     l3254:
  5990                           
  5991                           ;dc_motor.c: 96:         setMotorPWM(mL);
  5992   003452  C013  F00E         	movff	stop@mL,setMotorPWM@m
  5993   003456  EC93  F015         	call	_setMotorPWM	;wreg free
  5994   00345A                     
  5995                           ;dc_motor.c: 97:         setMotorPWM(mR);
  5996   00345A  C014  F00E         	movff	stop@mR,setMotorPWM@m
  5997   00345E  EC93  F015         	call	_setMotorPWM	;wreg free
  5998   003462                     
  5999                           ;dc_motor.c: 100:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  6000   003462  0E0B               	movlw	11
  6001   003464  6E15               	movwf	??_stop^0,c
  6002   003466  0E62               	movlw	98
  6003   003468                     u4437:
  6004   003468  2EE8               	decfsz	wreg,f,c
  6005   00346A  D7FE               	bra	u4437
  6006   00346C  2E15               	decfsz	??_stop^0,f,c
  6007   00346E  D7FC               	bra	u4437
  6008   003470  D000               	nop2	
  6009   003472                     l3260:
  6010                           
  6011                           ;dc_motor.c: 91:     while(mL->power > 0 || mR->power > 0) {
  6012   003472  5013               	movf	stop@mL^0,w,c
  6013   003474  6ED9               	movwf	fsr2l,c
  6014   003476  6ADA               	clrf	fsr2h,c
  6015   003478  50DF               	movf	indf2,w,c
  6016   00347A  A4D8               	btfss	status,2,c
  6017   00347C  EF42  F01A         	goto	u2451
  6018   003480  EF44  F01A         	goto	u2450
  6019   003484                     u2451:
  6020   003484  EF0B  F01A         	goto	l3246
  6021   003488                     u2450:
  6022   003488  5014               	movf	stop@mR^0,w,c
  6023   00348A  6ED9               	movwf	fsr2l,c
  6024   00348C  6ADA               	clrf	fsr2h,c
  6025   00348E  50DF               	movf	indf2,w,c
  6026   003490  A4D8               	btfss	status,2,c
  6027   003492  EF4D  F01A         	goto	u2461
  6028   003496  EF4F  F01A         	goto	u2460
  6029   00349A                     u2461:
  6030   00349A  EF0B  F01A         	goto	l3246
  6031   00349E                     u2460:
  6032   00349E  0012               	return		;funcret
  6033   0034A0                     __end_of_stop:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _fullSpeedBack *****************
  6037 ;; Defined at:
  6038 ;;		line 165 in file "dc_motor.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  mL              1   18[COMRAM] PTR struct DC_motor
  6041 ;;		 -> motorL(9), 
  6042 ;;  mR              1   19[COMRAM] PTR struct DC_motor
  6043 ;;		 -> motorR(9), 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  power           2   21[COMRAM] int 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;Total ram usage:        5 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 2
  6062 ;; This function calls:
  6063 ;;		_setMotorPWM
  6064 ;; This function is called by:
  6065 ;;		_backHalf
  6066 ;;		_backOneAndHalf
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text24
  6071   003616                     __ptext24:
  6072                           	callstack 0
  6073   003616                     _fullSpeedBack:
  6074                           	callstack 25
  6075   003616                     
  6076                           ;dc_motor.c: 165: void fullSpeedBack(DC_motor *mL, DC_motor *mR);dc_motor.c: 166: {;dc_m
      +                          otor.c: 168:     mL->direction = 0;
  6077   003616  5013               	movf	fullSpeedBack@mL^0,w,c
  6078   003618  6ED9               	movwf	fsr2l,c
  6079   00361A  6ADA               	clrf	fsr2h,c
  6080   00361C  0E01               	movlw	1
  6081   00361E  26D9               	addwf	fsr2l,f,c
  6082   003620  6ADF               	clrf	indf2,c
  6083                           
  6084                           ;dc_motor.c: 169:     mR->direction = 0;
  6085   003622  5014               	movf	fullSpeedBack@mR^0,w,c
  6086   003624  6ED9               	movwf	fsr2l,c
  6087   003626  6ADA               	clrf	fsr2h,c
  6088   003628  0E01               	movlw	1
  6089   00362A  26D9               	addwf	fsr2l,f,c
  6090   00362C  6ADF               	clrf	indf2,c
  6091   00362E                     
  6092                           ;dc_motor.c: 171:     for(int power = 0; power <= 50; power++) {
  6093   00362E  0E00               	movlw	0
  6094   003630  6E17               	movwf	(fullSpeedBack@power+1)^0,c
  6095   003632  0E00               	movlw	0
  6096   003634  6E16               	movwf	fullSpeedBack@power^0,c
  6097   003636                     l3320:
  6098                           
  6099                           ;dc_motor.c: 172:         mL->power = power;
  6100   003636  5013               	movf	fullSpeedBack@mL^0,w,c
  6101   003638  6ED9               	movwf	fsr2l,c
  6102   00363A  6ADA               	clrf	fsr2h,c
  6103   00363C  C016  FFDF         	movff	fullSpeedBack@power,indf2
  6104                           
  6105                           ;dc_motor.c: 173:         mR->power = power;
  6106   003640  5014               	movf	fullSpeedBack@mR^0,w,c
  6107   003642  6ED9               	movwf	fsr2l,c
  6108   003644  6ADA               	clrf	fsr2h,c
  6109   003646  C016  FFDF         	movff	fullSpeedBack@power,indf2
  6110   00364A                     
  6111                           ;dc_motor.c: 176:         setMotorPWM(mL);
  6112   00364A  C013  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  6113   00364E  EC93  F015         	call	_setMotorPWM	;wreg free
  6114   003652                     
  6115                           ;dc_motor.c: 177:         setMotorPWM(mR);
  6116   003652  C014  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  6117   003656  EC93  F015         	call	_setMotorPWM	;wreg free
  6118   00365A                     
  6119                           ;dc_motor.c: 180:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  6120   00365A  0E0B               	movlw	11
  6121   00365C  6E15               	movwf	??_fullSpeedBack^0,c
  6122   00365E  0E62               	movlw	98
  6123   003660                     u4447:
  6124   003660  2EE8               	decfsz	wreg,f,c
  6125   003662  D7FE               	bra	u4447
  6126   003664  2E15               	decfsz	??_fullSpeedBack^0,f,c
  6127   003666  D7FC               	bra	u4447
  6128   003668  D000               	nop2	
  6129   00366A                     
  6130                           ;dc_motor.c: 181:     }
  6131   00366A  4A16               	infsnz	fullSpeedBack@power^0,f,c
  6132   00366C  2A17               	incf	(fullSpeedBack@power+1)^0,f,c
  6133   00366E  BE17               	btfsc	(fullSpeedBack@power+1)^0,7,c
  6134   003670  EF43  F01B         	goto	u2491
  6135   003674  5017               	movf	(fullSpeedBack@power+1)^0,w,c
  6136   003676  E109               	bnz	u2490
  6137   003678  0E33               	movlw	51
  6138   00367A  5C16               	subwf	fullSpeedBack@power^0,w,c
  6139   00367C  A0D8               	btfss	status,0,c
  6140   00367E  EF43  F01B         	goto	u2491
  6141   003682  EF45  F01B         	goto	u2490
  6142   003686                     u2491:
  6143   003686  EF1B  F01B         	goto	l3320
  6144   00368A                     u2490:
  6145   00368A  0012               	return		;funcret
  6146   00368C                     __end_of_fullSpeedBack:
  6147                           	callstack 0
  6148                           
  6149 ;; *************** function _setMotorPWM *****************
  6150 ;; Defined at:
  6151 ;;		line 65 in file "dc_motor.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  m               1   13[COMRAM] PTR struct DC_motor
  6154 ;;		 -> motorR(9), motorL(9), 
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;  negDuty         1   17[COMRAM] unsigned char 
  6157 ;;  posDuty         1   16[COMRAM] unsigned char 
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6171 ;;Total ram usage:        5 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; Hardware stack levels required when called: 1
  6174 ;; This function calls:
  6175 ;;		___lwdiv
  6176 ;;		___wmul
  6177 ;; This function is called by:
  6178 ;;		_stop
  6179 ;;		_turnLeft
  6180 ;;		_turnRight
  6181 ;;		_fullSpeedAhead
  6182 ;;		_fullSpeedBack
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text25
  6187   002B26                     __ptext25:
  6188                           	callstack 0
  6189   002B26                     _setMotorPWM:
  6190                           	callstack 28
  6191   002B26                     
  6192                           ;dc_motor.c: 65: void setMotorPWM(DC_motor *m);dc_motor.c: 66: {;dc_motor.c: 67:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 69:     if(m->brakemode) {
  6193   002B26  500E               	movf	setMotorPWM@m^0,w,c
  6194   002B28  6ED9               	movwf	fsr2l,c
  6195   002B2A  6ADA               	clrf	fsr2h,c
  6196   002B2C  0E02               	movlw	2
  6197   002B2E  26D9               	addwf	fsr2l,f,c
  6198   002B30  50DF               	movf	indf2,w,c
  6199   002B32  B4D8               	btfsc	status,2,c
  6200   002B34  EF9E  F015         	goto	u2341
  6201   002B38  EFA0  F015         	goto	u2340
  6202   002B3C                     u2341:
  6203   002B3C  EFD0  F015         	goto	l3174
  6204   002B40                     u2340:
  6205   002B40                     
  6206                           ;dc_motor.c: 70:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6207   002B40  500E               	movf	setMotorPWM@m^0,w,c
  6208   002B42  6ED9               	movwf	fsr2l,c
  6209   002B44  6ADA               	clrf	fsr2h,c
  6210   002B46  50DF               	movf	indf2,w,c
  6211   002B48  6E0F               	movwf	??_setMotorPWM^0,c
  6212   002B4A  500F               	movf	??_setMotorPWM^0,w,c
  6213   002B4C  6E01               	movwf	___wmul@multiplier^0,c
  6214   002B4E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6215   002B50  500E               	movf	setMotorPWM@m^0,w,c
  6216   002B52  6ED9               	movwf	fsr2l,c
  6217   002B54  6ADA               	clrf	fsr2h,c
  6218   002B56  0E03               	movlw	3
  6219   002B58  26D9               	addwf	fsr2l,f,c
  6220   002B5A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6221   002B5E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6222   002B62  ECFC  F01D         	call	___wmul	;wreg free
  6223   002B66  C001  F007         	movff	?___wmul,___lwdiv@dividend
  6224   002B6A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  6225   002B6E  0E00               	movlw	0
  6226   002B70  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  6227   002B72  0E64               	movlw	100
  6228   002B74  6E09               	movwf	___lwdiv@divisor^0,c
  6229   002B76  EC46  F01B         	call	___lwdiv	;wreg free
  6230   002B7A  500E               	movf	setMotorPWM@m^0,w,c
  6231   002B7C  6ED9               	movwf	fsr2l,c
  6232   002B7E  6ADA               	clrf	fsr2h,c
  6233   002B80  0E03               	movlw	3
  6234   002B82  26D9               	addwf	fsr2l,f,c
  6235   002B84  50DF               	movf	indf2,w,c
  6236   002B86  6E10               	movwf	(??_setMotorPWM+1)^0,c
  6237   002B88  5007               	movf	?___lwdiv^0,w,c
  6238   002B8A  5C10               	subwf	(??_setMotorPWM+1)^0,w,c
  6239   002B8C  6E11               	movwf	setMotorPWM@posDuty^0,c
  6240   002B8E                     
  6241                           ;dc_motor.c: 71:         negDuty=m->PWMperiod;
  6242   002B8E  500E               	movf	setMotorPWM@m^0,w,c
  6243   002B90  6ED9               	movwf	fsr2l,c
  6244   002B92  6ADA               	clrf	fsr2h,c
  6245   002B94  0E03               	movlw	3
  6246   002B96  26D9               	addwf	fsr2l,f,c
  6247   002B98  50DF               	movf	indf2,w,c
  6248   002B9A  6E12               	movwf	setMotorPWM@negDuty^0,c
  6249                           
  6250                           ;dc_motor.c: 72:     }
  6251   002B9C  EFF1  F015         	goto	l3178
  6252   002BA0                     l3174:
  6253                           
  6254                           ;dc_motor.c: 74:         posDuty=0;
  6255   002BA0  0E00               	movlw	0
  6256   002BA2  6E11               	movwf	setMotorPWM@posDuty^0,c
  6257   002BA4                     
  6258                           ;dc_motor.c: 75:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6259   002BA4  500E               	movf	setMotorPWM@m^0,w,c
  6260   002BA6  6ED9               	movwf	fsr2l,c
  6261   002BA8  6ADA               	clrf	fsr2h,c
  6262   002BAA  50DF               	movf	indf2,w,c
  6263   002BAC  6E0F               	movwf	??_setMotorPWM^0,c
  6264   002BAE  500F               	movf	??_setMotorPWM^0,w,c
  6265   002BB0  6E01               	movwf	___wmul@multiplier^0,c
  6266   002BB2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6267   002BB4  500E               	movf	setMotorPWM@m^0,w,c
  6268   002BB6  6ED9               	movwf	fsr2l,c
  6269   002BB8  6ADA               	clrf	fsr2h,c
  6270   002BBA  0E03               	movlw	3
  6271   002BBC  26D9               	addwf	fsr2l,f,c
  6272   002BBE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  6273   002BC2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  6274   002BC6  ECFC  F01D         	call	___wmul	;wreg free
  6275   002BCA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  6276   002BCE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  6277   002BD2  0E00               	movlw	0
  6278   002BD4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  6279   002BD6  0E64               	movlw	100
  6280   002BD8  6E09               	movwf	___lwdiv@divisor^0,c
  6281   002BDA  EC46  F01B         	call	___lwdiv	;wreg free
  6282   002BDE  5007               	movf	?___lwdiv^0,w,c
  6283   002BE0  6E12               	movwf	setMotorPWM@negDuty^0,c
  6284   002BE2                     l3178:
  6285                           
  6286                           ;dc_motor.c: 78:     if (m->direction) {
  6287   002BE2  500E               	movf	setMotorPWM@m^0,w,c
  6288   002BE4  6ED9               	movwf	fsr2l,c
  6289   002BE6  6ADA               	clrf	fsr2h,c
  6290   002BE8  0E01               	movlw	1
  6291   002BEA  26D9               	addwf	fsr2l,f,c
  6292   002BEC  50DF               	movf	indf2,w,c
  6293   002BEE  B4D8               	btfsc	status,2,c
  6294   002BF0  EFFC  F015         	goto	u2351
  6295   002BF4  EFFE  F015         	goto	u2350
  6296   002BF8                     u2351:
  6297   002BF8  EF1E  F016         	goto	l3182
  6298   002BFC                     u2350:
  6299   002BFC                     
  6300                           ;dc_motor.c: 79:         *(m->posDutyHighByte)=posDuty;
  6301   002BFC  500E               	movf	setMotorPWM@m^0,w,c
  6302   002BFE  6ED9               	movwf	fsr2l,c
  6303   002C00  6ADA               	clrf	fsr2h,c
  6304   002C02  0E05               	movlw	5
  6305   002C04  26D9               	addwf	fsr2l,f,c
  6306   002C06  CFDE F00F          	movff	postinc2,??_setMotorPWM
  6307   002C0A  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  6308   002C0E  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  6309   002C12  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6310   002C16  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  6311                           
  6312                           ;dc_motor.c: 80:         *(m->negDutyHighByte)=negDuty;
  6313   002C1A  500E               	movf	setMotorPWM@m^0,w,c
  6314   002C1C  6ED9               	movwf	fsr2l,c
  6315   002C1E  6ADA               	clrf	fsr2h,c
  6316   002C20  0E07               	movlw	7
  6317   002C22  26D9               	addwf	fsr2l,f,c
  6318   002C24  CFDE F00F          	movff	postinc2,??_setMotorPWM
  6319   002C28  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  6320   002C2C  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  6321   002C30  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6322   002C34  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  6323                           
  6324                           ;dc_motor.c: 81:     } else {
  6325   002C38  EF3C  F016         	goto	l359
  6326   002C3C                     l3182:
  6327                           
  6328                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=negDuty;
  6329   002C3C  500E               	movf	setMotorPWM@m^0,w,c
  6330   002C3E  6ED9               	movwf	fsr2l,c
  6331   002C40  6ADA               	clrf	fsr2h,c
  6332   002C42  0E05               	movlw	5
  6333   002C44  26D9               	addwf	fsr2l,f,c
  6334   002C46  CFDE F00F          	movff	postinc2,??_setMotorPWM
  6335   002C4A  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  6336   002C4E  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  6337   002C52  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6338   002C56  C012  FFDF         	movff	setMotorPWM@negDuty,indf2
  6339                           
  6340                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=posDuty;
  6341   002C5A  500E               	movf	setMotorPWM@m^0,w,c
  6342   002C5C  6ED9               	movwf	fsr2l,c
  6343   002C5E  6ADA               	clrf	fsr2h,c
  6344   002C60  0E07               	movlw	7
  6345   002C62  26D9               	addwf	fsr2l,f,c
  6346   002C64  CFDE F00F          	movff	postinc2,??_setMotorPWM
  6347   002C68  CFDD F010          	movff	postdec2,??_setMotorPWM+1
  6348   002C6C  C00F  FFD9         	movff	??_setMotorPWM,fsr2l
  6349   002C70  C010  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6350   002C74  C011  FFDF         	movff	setMotorPWM@posDuty,indf2
  6351   002C78                     l359:
  6352   002C78  0012               	return		;funcret
  6353   002C7A                     __end_of_setMotorPWM:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function ___lwdiv *****************
  6357 ;; Defined at:
  6358 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  dividend        2    6[COMRAM] unsigned int 
  6361 ;;  divisor         2    8[COMRAM] unsigned int 
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;  quotient        2   10[COMRAM] unsigned int 
  6364 ;;  counter         1   12[COMRAM] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;                  2    6[COMRAM] unsigned int 
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;Total ram usage:        7 bytes
  6379 ;; Hardware stack levels used: 1
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_setMotorPWM
  6384 ;;		_ADC2String
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text26
  6389   00368C                     __ptext26:
  6390                           	callstack 0
  6391   00368C                     ___lwdiv:
  6392                           	callstack 28
  6393   00368C  0E00               	movlw	0
  6394   00368E  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  6395   003690  0E00               	movlw	0
  6396   003692  6E0B               	movwf	___lwdiv@quotient^0,c
  6397   003694  5009               	movf	___lwdiv@divisor^0,w,c
  6398   003696  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6399   003698  B4D8               	btfsc	status,2,c
  6400   00369A  EF51  F01B         	goto	u2191
  6401   00369E  EF53  F01B         	goto	u2190
  6402   0036A2                     u2191:
  6403   0036A2  EF7B  F01B         	goto	l1037
  6404   0036A6                     u2190:
  6405   0036A6  0E01               	movlw	1
  6406   0036A8  6E0D               	movwf	___lwdiv@counter^0,c
  6407   0036AA  EF5B  F01B         	goto	l3090
  6408   0036AE                     l3088:
  6409   0036AE  90D8               	bcf	status,0,c
  6410   0036B0  3609               	rlcf	___lwdiv@divisor^0,f,c
  6411   0036B2  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6412   0036B4  2A0D               	incf	___lwdiv@counter^0,f,c
  6413   0036B6                     l3090:
  6414   0036B6  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  6415   0036B8  EF60  F01B         	goto	u2201
  6416   0036BC  EF62  F01B         	goto	u2200
  6417   0036C0                     u2201:
  6418   0036C0  EF57  F01B         	goto	l3088
  6419   0036C4                     u2200:
  6420   0036C4                     l3092:
  6421   0036C4  90D8               	bcf	status,0,c
  6422   0036C6  360B               	rlcf	___lwdiv@quotient^0,f,c
  6423   0036C8  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6424   0036CA  5009               	movf	___lwdiv@divisor^0,w,c
  6425   0036CC  5C07               	subwf	___lwdiv@dividend^0,w,c
  6426   0036CE  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  6427   0036D0  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6428   0036D2  A0D8               	btfss	status,0,c
  6429   0036D4  EF6E  F01B         	goto	u2211
  6430   0036D8  EF70  F01B         	goto	u2210
  6431   0036DC                     u2211:
  6432   0036DC  EF75  F01B         	goto	l3100
  6433   0036E0                     u2210:
  6434   0036E0  5009               	movf	___lwdiv@divisor^0,w,c
  6435   0036E2  5E07               	subwf	___lwdiv@dividend^0,f,c
  6436   0036E4  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  6437   0036E6  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6438   0036E8  800B               	bsf	___lwdiv@quotient^0,0,c
  6439   0036EA                     l3100:
  6440   0036EA  90D8               	bcf	status,0,c
  6441   0036EC  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6442   0036EE  3209               	rrcf	___lwdiv@divisor^0,f,c
  6443   0036F0  2E0D               	decfsz	___lwdiv@counter^0,f,c
  6444   0036F2  EF62  F01B         	goto	l3092
  6445   0036F6                     l1037:
  6446   0036F6  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  6447   0036FA  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6448   0036FE  0012               	return		;funcret
  6449   003700                     __end_of___lwdiv:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _color_click_init *****************
  6453 ;; Defined at:
  6454 ;;		line 8 in file "color.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;Total ram usage:        1 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 3
  6475 ;; This function calls:
  6476 ;;		_I2C_2_Master_Init
  6477 ;;		_color_writetoaddr
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text27
  6484   0039E0                     __ptext27:
  6485                           	callstack 0
  6486   0039E0                     _color_click_init:
  6487                           	callstack 27
  6488   0039E0                     
  6489                           ;color.c: 11:     I2C_2_Master_Init();
  6490   0039E0  ECD3  F01D         	call	_I2C_2_Master_Init	;wreg free
  6491   0039E4                     
  6492                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  6493   0039E4  0E01               	movlw	1
  6494   0039E6  6E03               	movwf	color_writetoaddr@value^0,c
  6495   0039E8  0E00               	movlw	0
  6496   0039EA  EC0F  F01E         	call	_color_writetoaddr
  6497   0039EE                     
  6498                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6499   0039EE  0E3F               	movlw	63
  6500   0039F0  6E05               	movwf	??_color_click_init^0,c
  6501   0039F2  0E55               	movlw	85
  6502   0039F4                     u4457:
  6503   0039F4  2EE8               	decfsz	wreg,f,c
  6504   0039F6  D7FE               	bra	u4457
  6505   0039F8  2E05               	decfsz	??_color_click_init^0,f,c
  6506   0039FA  D7FC               	bra	u4457
  6507   0039FC  0000               	nop	
  6508   0039FE                     
  6509                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  6510   0039FE  0E03               	movlw	3
  6511   003A00  6E03               	movwf	color_writetoaddr@value^0,c
  6512   003A02  0E00               	movlw	0
  6513   003A04  EC0F  F01E         	call	_color_writetoaddr
  6514   003A08                     
  6515                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  6516   003A08  0ED5               	movlw	213
  6517   003A0A  6E03               	movwf	color_writetoaddr@value^0,c
  6518   003A0C  0E01               	movlw	1
  6519   003A0E  EC0F  F01E         	call	_color_writetoaddr
  6520   003A12  0012               	return		;funcret
  6521   003A14                     __end_of_color_click_init:
  6522                           	callstack 0
  6523                           
  6524 ;; *************** function _color_writetoaddr *****************
  6525 ;; Defined at:
  6526 ;;		line 24 in file "color.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  address         1    wreg     unsigned char 
  6529 ;;  value           1    2[COMRAM] unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  address         1    3[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;Total ram usage:        2 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 2
  6548 ;; This function calls:
  6549 ;;		_I2C_2_Master_Start
  6550 ;;		_I2C_2_Master_Stop
  6551 ;;		_I2C_2_Master_Write
  6552 ;; This function is called by:
  6553 ;;		_color_click_init
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           	psect	text28
  6558   003C1E                     __ptext28:
  6559                           	callstack 0
  6560   003C1E                     _color_writetoaddr:
  6561                           	callstack 27
  6562                           
  6563                           ;incstack = 0
  6564                           ;color_writetoaddr@address stored from wreg
  6565   003C1E  6E04               	movwf	color_writetoaddr@address^0,c
  6566   003C20                     
  6567                           ;color.c: 25:     I2C_2_Master_Start();
  6568   003C20  EC61  F01E         	call	_I2C_2_Master_Start	;wreg free
  6569                           
  6570                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  6571   003C24  0E52               	movlw	82
  6572   003C26  EC56  F01E         	call	_I2C_2_Master_Write
  6573                           
  6574                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  6575   003C2A  5004               	movf	color_writetoaddr@address^0,w,c
  6576   003C2C  0980               	iorlw	128
  6577   003C2E  EC56  F01E         	call	_I2C_2_Master_Write
  6578                           
  6579                           ;color.c: 28:     I2C_2_Master_Write(value);
  6580   003C32  5003               	movf	color_writetoaddr@value^0,w,c
  6581   003C34  EC56  F01E         	call	_I2C_2_Master_Write
  6582                           
  6583                           ;color.c: 29:     I2C_2_Master_Stop();
  6584   003C38  EC5C  F01E         	call	_I2C_2_Master_Stop	;wreg free
  6585   003C3C  0012               	return		;funcret
  6586   003C3E                     __end_of_color_writetoaddr:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _I2C_2_Master_Init *****************
  6590 ;; Defined at:
  6591 ;;		line 4 in file "i2c.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;		None
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;		None
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, status,2
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;Total ram usage:        0 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_color_click_init
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text29
  6619   003BA6                     __ptext29:
  6620                           	callstack 0
  6621   003BA6                     _I2C_2_Master_Init:
  6622                           	callstack 29
  6623   003BA6                     
  6624                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6625   003BA6  010E               	movlb	14	; () banked
  6626   003BA8  51D9               	movf	217,w,b	;volatile
  6627   003BAA  0BF0               	andlw	-16
  6628   003BAC  0908               	iorlw	8
  6629   003BAE  6FD9               	movwf	217,b	;volatile
  6630   003BB0                     
  6631                           ; BSR set to: 14
  6632                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6633   003BB0  8BD9               	bsf	217,5,b	;volatile
  6634                           
  6635                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6636   003BB2  0E9F               	movlw	159
  6637   003BB4  6FD6               	movwf	214,b	;volatile
  6638   003BB6                     
  6639                           ; BSR set to: 14
  6640                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6641   003BB6  8A84               	bsf	132,5,c	;volatile
  6642   003BB8                     
  6643                           ; BSR set to: 14
  6644                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6645   003BB8  8C84               	bsf	132,6,c	;volatile
  6646   003BBA                     
  6647                           ; BSR set to: 14
  6648                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6649   003BBA  9BA7               	bcf	167,5,b	;volatile
  6650   003BBC                     
  6651                           ; BSR set to: 14
  6652                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6653   003BBC  9DA7               	bcf	167,6,b	;volatile
  6654                           
  6655                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6656   003BBE  0E1D               	movlw	29
  6657   003BC0  6F1D               	movwf	29,b	;volatile
  6658                           
  6659                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6660   003BC2  0E1E               	movlw	30
  6661   003BC4  6F1C               	movwf	28,b	;volatile
  6662                           
  6663                           ;i2c.c: 18:   RD5PPS=0x1C;
  6664   003BC6  0E1C               	movlw	28
  6665   003BC8  6F6F               	movwf	111,b	;volatile
  6666                           
  6667                           ;i2c.c: 19:   RD6PPS=0x1B;
  6668   003BCA  0E1B               	movlw	27
  6669   003BCC  6F70               	movwf	112,b	;volatile
  6670   003BCE                     
  6671                           ; BSR set to: 14
  6672   003BCE  0012               	return		;funcret
  6673   003BD0                     __end_of_I2C_2_Master_Init:
  6674                           	callstack 0
  6675                           
  6676 ;; *************** function _calibration_routine *****************
  6677 ;; Defined at:
  6678 ;;		line 197 in file "color.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  cCal            1   67[COMRAM] PTR struct colors
  6681 ;;		 -> colorCalibration(8), 
  6682 ;; Auto vars:     Size  Location     Type
  6683 ;;  cal_state      20   70[COMRAM] unsigned char [20]
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  1    wreg      void 
  6686 ;; Registers used:
  6687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6693 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;Total ram usage:       23 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; Hardware stack levels required when called: 8
  6700 ;; This function calls:
  6701 ;;		_color_read_Blue
  6702 ;;		_color_read_Clear
  6703 ;;		_color_read_Green
  6704 ;;		_color_read_Red
  6705 ;;		_sendStringSerial4
  6706 ;;		_sprintf
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text30
  6713   002304                     __ptext30:
  6714                           	callstack 0
  6715   002304                     _calibration_routine:
  6716                           	callstack 22
  6717   002304                     
  6718                           ;color.c: 197: void calibration_routine(colors *cCal);color.c: 198: {;color.c: 200:     
      +                          LATGbits.LATG0 = 0;
  6719   002304  907F               	bcf	127,0,c	;volatile
  6720                           
  6721                           ;color.c: 201:     LATEbits.LATE7 = 0;
  6722   002306  9E7D               	bcf	125,7,c	;volatile
  6723                           
  6724                           ;color.c: 202:     LATAbits.LATA3 = 0;
  6725   002308  9679               	bcf	121,3,c	;volatile
  6726   00230A                     
  6727                           ;color.c: 204:     char cal_state[20];;color.c: 208:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  6728   00230A  0E47               	movlw	low calibration_routine@cal_state
  6729   00230C  6E31               	movwf	sprintf@s^0,c
  6730   00230E  0E73               	movlw	low STR_1
  6731   002310  6E32               	movwf	sprintf@fmt^0,c
  6732   002312  0EB7               	movlw	low STR_2
  6733   002314  6E33               	movwf	(?_sprintf+2)^0,c
  6734   002316  5033               	movf	(?_sprintf+2)^0,w,c
  6735   002318  A4D8               	btfss	status,2,c
  6736   00231A  0E0E               	movlw	high __smallconst
  6737   00231C  6E34               	movwf	(?_sprintf+3)^0,c
  6738   00231E  EC0A  F01D         	call	_sprintf	;wreg free
  6739   002322                     
  6740                           ;color.c: 209:     sendStringSerial4(cal_state);
  6741   002322  0E47               	movlw	low calibration_routine@cal_state
  6742   002324  6E02               	movwf	sendStringSerial4@string^0,c
  6743   002326  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  6744   00232A                     l84:
  6745                           
  6746                           ;color.c: 212:     while(PORTFbits.RF2 == 1){
  6747   00232A  B48E               	btfsc	142,2,c	;volatile
  6748   00232C  EF9A  F011         	goto	u4231
  6749   002330  EF9C  F011         	goto	u4230
  6750   002334                     u4231:
  6751   002334  EF95  F011         	goto	l84
  6752   002338                     u4230:
  6753   002338                     
  6754                           ;color.c: 216:     LATGbits.LATG0 = 1;
  6755   002338  807F               	bsf	127,0,c	;volatile
  6756   00233A                     
  6757                           ;color.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6758   00233A  0E29               	movlw	41
  6759   00233C  6E46               	movwf	(??_calibration_routine+1)^0,c
  6760   00233E  0E96               	movlw	150
  6761   002340  6E45               	movwf	??_calibration_routine^0,c
  6762   002342  0E7F               	movlw	127
  6763   002344                     u4467:
  6764   002344  2EE8               	decfsz	wreg,f,c
  6765   002346  D7FE               	bra	u4467
  6766   002348  2E45               	decfsz	??_calibration_routine^0,f,c
  6767   00234A  D7FC               	bra	u4467
  6768   00234C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  6769   00234E  D7FA               	bra	u4467
  6770   002350  0000               	nop	
  6771   002352                     
  6772                           ;color.c: 218:     (cCal->red) = color_read_Red();
  6773   002352  ECAE  F01B         	call	_color_read_Red	;wreg free
  6774   002356  5044               	movf	calibration_routine@cCal^0,w,c
  6775   002358  6ED9               	movwf	fsr2l,c
  6776   00235A  6ADA               	clrf	fsr2h,c
  6777   00235C  C005  FFDE         	movff	?_color_read_Red,postinc2
  6778   002360  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6779   002364                     
  6780                           ;color.c: 219:     LATGbits.LATG0 = 0;
  6781   002364  907F               	bcf	127,0,c	;volatile
  6782   002366                     
  6783                           ;color.c: 222:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  6784   002366  0E47               	movlw	low calibration_routine@cal_state
  6785   002368  6E31               	movwf	sprintf@s^0,c
  6786   00236A  0E22               	movlw	low STR_3
  6787   00236C  6E32               	movwf	sprintf@fmt^0,c
  6788   00236E  0EB7               	movlw	low STR_2
  6789   002370  6E33               	movwf	(?_sprintf+2)^0,c
  6790   002372  5033               	movf	(?_sprintf+2)^0,w,c
  6791   002374  A4D8               	btfss	status,2,c
  6792   002376  0E0E               	movlw	high __smallconst
  6793   002378  6E34               	movwf	(?_sprintf+3)^0,c
  6794   00237A  EC0A  F01D         	call	_sprintf	;wreg free
  6795   00237E                     
  6796                           ;color.c: 223:     sendStringSerial4(&cal_state);
  6797   00237E  0E47               	movlw	low calibration_routine@cal_state
  6798   002380  6E02               	movwf	sendStringSerial4@string^0,c
  6799   002382  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  6800   002386                     l87:
  6801                           
  6802                           ;color.c: 225:     while(PORTFbits.RF2 == 1){
  6803   002386  B48E               	btfsc	142,2,c	;volatile
  6804   002388  EFC8  F011         	goto	u4241
  6805   00238C  EFCA  F011         	goto	u4240
  6806   002390                     u4241:
  6807   002390  EFC3  F011         	goto	l87
  6808   002394                     u4240:
  6809   002394                     
  6810                           ;color.c: 229:     LATEbits.LATE7 = 1;
  6811   002394  8E7D               	bsf	125,7,c	;volatile
  6812   002396                     
  6813                           ;color.c: 230:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6814   002396  0E29               	movlw	41
  6815   002398  6E46               	movwf	(??_calibration_routine+1)^0,c
  6816   00239A  0E96               	movlw	150
  6817   00239C  6E45               	movwf	??_calibration_routine^0,c
  6818   00239E  0E7F               	movlw	127
  6819   0023A0                     u4477:
  6820   0023A0  2EE8               	decfsz	wreg,f,c
  6821   0023A2  D7FE               	bra	u4477
  6822   0023A4  2E45               	decfsz	??_calibration_routine^0,f,c
  6823   0023A6  D7FC               	bra	u4477
  6824   0023A8  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  6825   0023AA  D7FA               	bra	u4477
  6826   0023AC  0000               	nop	
  6827   0023AE                     
  6828                           ;color.c: 231:     (cCal->green) = color_read_Green();
  6829   0023AE  ECD6  F01B         	call	_color_read_Green	;wreg free
  6830   0023B2  5044               	movf	calibration_routine@cCal^0,w,c
  6831   0023B4  6ED9               	movwf	fsr2l,c
  6832   0023B6  6ADA               	clrf	fsr2h,c
  6833   0023B8  0E02               	movlw	2
  6834   0023BA  26D9               	addwf	fsr2l,f,c
  6835   0023BC  C005  FFDE         	movff	?_color_read_Green,postinc2
  6836   0023C0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6837   0023C4                     
  6838                           ;color.c: 232:     LATEbits.LATE7 = 0;
  6839   0023C4  9E7D               	bcf	125,7,c	;volatile
  6840   0023C6                     
  6841                           ;color.c: 235:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  6842   0023C6  0E47               	movlw	low calibration_routine@cal_state
  6843   0023C8  6E31               	movwf	sprintf@s^0,c
  6844   0023CA  0E3F               	movlw	low STR_5
  6845   0023CC  6E32               	movwf	sprintf@fmt^0,c
  6846   0023CE  0EB7               	movlw	low STR_2
  6847   0023D0  6E33               	movwf	(?_sprintf+2)^0,c
  6848   0023D2  5033               	movf	(?_sprintf+2)^0,w,c
  6849   0023D4  A4D8               	btfss	status,2,c
  6850   0023D6  0E0E               	movlw	high __smallconst
  6851   0023D8  6E34               	movwf	(?_sprintf+3)^0,c
  6852   0023DA  EC0A  F01D         	call	_sprintf	;wreg free
  6853   0023DE                     
  6854                           ;color.c: 236:     sendStringSerial4(&cal_state);
  6855   0023DE  0E47               	movlw	low calibration_routine@cal_state
  6856   0023E0  6E02               	movwf	sendStringSerial4@string^0,c
  6857   0023E2  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  6858   0023E6                     l90:
  6859                           
  6860                           ;color.c: 238:     while(PORTFbits.RF2 == 1){
  6861   0023E6  B48E               	btfsc	142,2,c	;volatile
  6862   0023E8  EFF8  F011         	goto	u4251
  6863   0023EC  EFFA  F011         	goto	u4250
  6864   0023F0                     u4251:
  6865   0023F0  EFF3  F011         	goto	l90
  6866   0023F4                     u4250:
  6867   0023F4                     
  6868                           ;color.c: 242:     LATAbits.LATA3 = 1;
  6869   0023F4  8679               	bsf	121,3,c	;volatile
  6870   0023F6                     
  6871                           ;color.c: 243:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6872   0023F6  0E29               	movlw	41
  6873   0023F8  6E46               	movwf	(??_calibration_routine+1)^0,c
  6874   0023FA  0E96               	movlw	150
  6875   0023FC  6E45               	movwf	??_calibration_routine^0,c
  6876   0023FE  0E7F               	movlw	127
  6877   002400                     u4487:
  6878   002400  2EE8               	decfsz	wreg,f,c
  6879   002402  D7FE               	bra	u4487
  6880   002404  2E45               	decfsz	??_calibration_routine^0,f,c
  6881   002406  D7FC               	bra	u4487
  6882   002408  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  6883   00240A  D7FA               	bra	u4487
  6884   00240C  0000               	nop	
  6885   00240E                     
  6886                           ;color.c: 244:     (cCal->blue) = color_read_Blue();
  6887   00240E  EC26  F01C         	call	_color_read_Blue	;wreg free
  6888   002412  5044               	movf	calibration_routine@cCal^0,w,c
  6889   002414  6ED9               	movwf	fsr2l,c
  6890   002416  6ADA               	clrf	fsr2h,c
  6891   002418  0E04               	movlw	4
  6892   00241A  26D9               	addwf	fsr2l,f,c
  6893   00241C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6894   002420  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6895   002424                     
  6896                           ;color.c: 245:     LATAbits.LATA3 = 0;
  6897   002424  9679               	bcf	121,3,c	;volatile
  6898   002426                     
  6899                           ;color.c: 248:     sprintf(cal_state,"Calibration state =  white light", ".");
  6900   002426  0E47               	movlw	low calibration_routine@cal_state
  6901   002428  6E31               	movwf	sprintf@s^0,c
  6902   00242A  0E01               	movlw	low STR_7
  6903   00242C  6E32               	movwf	sprintf@fmt^0,c
  6904   00242E  0EB7               	movlw	low STR_2
  6905   002430  6E33               	movwf	(?_sprintf+2)^0,c
  6906   002432  5033               	movf	(?_sprintf+2)^0,w,c
  6907   002434  A4D8               	btfss	status,2,c
  6908   002436  0E0E               	movlw	high __smallconst
  6909   002438  6E34               	movwf	(?_sprintf+3)^0,c
  6910   00243A  EC0A  F01D         	call	_sprintf	;wreg free
  6911   00243E                     
  6912                           ;color.c: 249:     sendStringSerial4(&cal_state);
  6913   00243E  0E47               	movlw	low calibration_routine@cal_state
  6914   002440  6E02               	movwf	sendStringSerial4@string^0,c
  6915   002442  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  6916   002446                     l93:
  6917                           
  6918                           ;color.c: 251:     while(PORTFbits.RF2 == 1){
  6919   002446  B48E               	btfsc	142,2,c	;volatile
  6920   002448  EF28  F012         	goto	u4261
  6921   00244C  EF2A  F012         	goto	u4260
  6922   002450                     u4261:
  6923   002450  EF23  F012         	goto	l93
  6924   002454                     u4260:
  6925   002454                     
  6926                           ;color.c: 254:     LATGbits.LATG0 = 1;
  6927   002454  807F               	bsf	127,0,c	;volatile
  6928                           
  6929                           ;color.c: 255:     LATEbits.LATE7 = 1;
  6930   002456  8E7D               	bsf	125,7,c	;volatile
  6931                           
  6932                           ;color.c: 256:     LATAbits.LATA3 = 1;
  6933   002458  8679               	bsf	121,3,c	;volatile
  6934   00245A                     
  6935                           ;color.c: 257:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6936   00245A  0E29               	movlw	41
  6937   00245C  6E46               	movwf	(??_calibration_routine+1)^0,c
  6938   00245E  0E96               	movlw	150
  6939   002460  6E45               	movwf	??_calibration_routine^0,c
  6940   002462  0E7F               	movlw	127
  6941   002464                     u4497:
  6942   002464  2EE8               	decfsz	wreg,f,c
  6943   002466  D7FE               	bra	u4497
  6944   002468  2E45               	decfsz	??_calibration_routine^0,f,c
  6945   00246A  D7FC               	bra	u4497
  6946   00246C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  6947   00246E  D7FA               	bra	u4497
  6948   002470  0000               	nop	
  6949   002472                     
  6950                           ;color.c: 258:     (cCal->clear) = color_read_Clear();
  6951   002472  ECFE  F01B         	call	_color_read_Clear	;wreg free
  6952   002476  5044               	movf	calibration_routine@cCal^0,w,c
  6953   002478  6ED9               	movwf	fsr2l,c
  6954   00247A  6ADA               	clrf	fsr2h,c
  6955   00247C  0E06               	movlw	6
  6956   00247E  26D9               	addwf	fsr2l,f,c
  6957   002480  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6958   002484  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6959   002488                     
  6960                           ;color.c: 259:     LATGbits.LATG0 = 0;
  6961   002488  907F               	bcf	127,0,c	;volatile
  6962   00248A                     
  6963                           ;color.c: 260:     LATEbits.LATE7 = 0;
  6964   00248A  9E7D               	bcf	125,7,c	;volatile
  6965   00248C                     
  6966                           ;color.c: 261:     LATAbits.LATA3 = 0;
  6967   00248C  9679               	bcf	121,3,c	;volatile
  6968   00248E                     
  6969                           ;color.c: 264:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  6970   00248E  0E47               	movlw	low calibration_routine@cal_state
  6971   002490  6E31               	movwf	sprintf@s^0,c
  6972   002492  0E5A               	movlw	low STR_9
  6973   002494  6E32               	movwf	sprintf@fmt^0,c
  6974   002496  0EB7               	movlw	low STR_2
  6975   002498  6E33               	movwf	(?_sprintf+2)^0,c
  6976   00249A  5033               	movf	(?_sprintf+2)^0,w,c
  6977   00249C  A4D8               	btfss	status,2,c
  6978   00249E  0E0E               	movlw	high __smallconst
  6979   0024A0  6E34               	movwf	(?_sprintf+3)^0,c
  6980   0024A2  EC0A  F01D         	call	_sprintf	;wreg free
  6981   0024A6                     
  6982                           ;color.c: 265:     sendStringSerial4(&cal_state);
  6983   0024A6  0E47               	movlw	low calibration_routine@cal_state
  6984   0024A8  6E02               	movwf	sendStringSerial4@string^0,c
  6985   0024AA  ECA2  F01D         	call	_sendStringSerial4	;wreg free
  6986   0024AE                     l96:
  6987                           
  6988                           ;color.c: 267:     while(PORTFbits.RF2 == 1){
  6989   0024AE  B48E               	btfsc	142,2,c	;volatile
  6990   0024B0  EF5C  F012         	goto	u4271
  6991   0024B4  EF5E  F012         	goto	u4270
  6992   0024B8                     u4271:
  6993   0024B8  EF57  F012         	goto	l96
  6994   0024BC                     u4270:
  6995   0024BC                     
  6996                           ;color.c: 270:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6997   0024BC  0E29               	movlw	41
  6998   0024BE  6E46               	movwf	(??_calibration_routine+1)^0,c
  6999   0024C0  0E96               	movlw	150
  7000   0024C2  6E45               	movwf	??_calibration_routine^0,c
  7001   0024C4  0E7F               	movlw	127
  7002   0024C6                     u4507:
  7003   0024C6  2EE8               	decfsz	wreg,f,c
  7004   0024C8  D7FE               	bra	u4507
  7005   0024CA  2E45               	decfsz	??_calibration_routine^0,f,c
  7006   0024CC  D7FC               	bra	u4507
  7007   0024CE  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  7008   0024D0  D7FA               	bra	u4507
  7009   0024D2  0000               	nop	
  7010   0024D4  0012               	return		;funcret
  7011   0024D6                     __end_of_calibration_routine:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _sprintf *****************
  7015 ;; Defined at:
  7016 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  s               1   48[COMRAM] PTR unsigned char 
  7019 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), convert_rgb2hue@c_char(20), calibration_routine@cal_state(2
      +0), 
  7020 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  7021 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  7022 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  f              12   55[COMRAM] struct _IO_FILE
  7025 ;;  ret             2    0        int 
  7026 ;;  ap              1   54[COMRAM] PTR void [1]
  7027 ;;		 -> ?_sprintf(2), 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  2   48[COMRAM] int 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7037 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7040 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;Total ram usage:       19 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 7
  7044 ;; This function calls:
  7045 ;;		_vfprintf
  7046 ;; This function is called by:
  7047 ;;		_calibration_routine
  7048 ;;		_convert_rgb2hue
  7049 ;;		_send2USART
  7050 ;;		_ADC2String
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text31
  7055   003A14                     __ptext31:
  7056                           	callstack 0
  7057   003A14                     _sprintf:
  7058                           	callstack 21
  7059   003A14  0E33               	movlw	low (?_sprintf+2)
  7060   003A16  6E37               	movwf	sprintf@ap^0,c
  7061   003A18  C031  F038         	movff	sprintf@s,sprintf@f
  7062   003A1C  0E00               	movlw	0
  7063   003A1E  6E3C               	movwf	(sprintf@f+4)^0,c
  7064   003A20  0E00               	movlw	0
  7065   003A22  6E3B               	movwf	(sprintf@f+3)^0,c
  7066   003A24  0E00               	movlw	0
  7067   003A26  6E43               	movwf	(sprintf@f+11)^0,c
  7068   003A28  0E00               	movlw	0
  7069   003A2A  6E42               	movwf	(sprintf@f+10)^0,c
  7070   003A2C  0E38               	movlw	low sprintf@f
  7071   003A2E  6E2D               	movwf	vfprintf@fp^0,c
  7072   003A30  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  7073   003A34  0E37               	movlw	low sprintf@ap
  7074   003A36  6E2F               	movwf	vfprintf@ap^0,c
  7075   003A38  EC71  F01C         	call	_vfprintf	;wreg free
  7076   003A3C  5031               	movf	sprintf@s^0,w,c
  7077   003A3E  243B               	addwf	(sprintf@f+3)^0,w,c
  7078   003A40  6ED9               	movwf	fsr2l,c
  7079   003A42  6ADA               	clrf	fsr2h,c
  7080   003A44  6ADF               	clrf	indf2,c
  7081   003A46  0012               	return		;funcret
  7082   003A48                     __end_of_sprintf:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _vfprintf *****************
  7086 ;; Defined at:
  7087 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  7090 ;;		 -> sprintf@f(12), 
  7091 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  7092 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  7093 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  7094 ;;  ap              1   46[COMRAM] PTR PTR void 
  7095 ;;		 -> sprintf@ap(1), 
  7096 ;; Auto vars:     Size  Location     Type
  7097 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  7098 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  7099 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  2   44[COMRAM] int 
  7102 ;; Registers used:
  7103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;Total ram usage:        4 bytes
  7114 ;; Hardware stack levels used: 1
  7115 ;; Hardware stack levels required when called: 6
  7116 ;; This function calls:
  7117 ;;		_vfpfcnvrt
  7118 ;; This function is called by:
  7119 ;;		_sprintf
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text32
  7124   0038E2                     __ptext32:
  7125                           	callstack 0
  7126   0038E2                     _vfprintf:
  7127                           	callstack 21
  7128   0038E2                     
  7129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7130   0038E2  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  7131                           
  7132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7133   0038E6  EF7D  F01C         	goto	l4702
  7134   0038EA                     l4700:
  7135                           
  7136                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  7137   0038EA  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  7138   0038EE  0E30               	movlw	low vfprintf@cfmt
  7139   0038F0  6E23               	movwf	vfpfcnvrt@fmt^0,c
  7140   0038F2  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  7141   0038F6  EC15  F014         	call	_vfpfcnvrt	;wreg free
  7142   0038FA                     l4702:
  7143                           
  7144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7145   0038FA  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  7146   0038FE                     	if	1	;There is more than 1 active tblptr byte
  7147   0038FE  0E0E               	movlw	high __smallconst
  7148   003900  6EF7               	movwf	tblptrh,c
  7149   003902                     	endif
  7150   003902                     	if	0	;tblptru may be non-zero
  7151   003902                     	endif
  7152   003902                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7153   003902  0E00               	movlw	low (__smallconst shr (0+16))
  7154   003904  6EF8               	movwf	tblptru,c
  7155   003906                     	endif
  7156   003906  0008               	tblrd		*
  7157   003908  50F5               	movf	tablat,w,c
  7158   00390A  0900               	iorlw	0
  7159   00390C  A4D8               	btfss	status,2,c
  7160   00390E  EF8B  F01C         	goto	u4111
  7161   003912  EF8D  F01C         	goto	u4110
  7162   003916                     u4111:
  7163   003916  EF75  F01C         	goto	l4700
  7164   00391A                     u4110:
  7165   00391A                     
  7166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  7167   00391A  0E00               	movlw	0
  7168   00391C  6E2E               	movwf	(?_vfprintf+1)^0,c
  7169   00391E  0E00               	movlw	0
  7170   003920  6E2D               	movwf	?_vfprintf^0,c
  7171   003922  0012               	return		;funcret
  7172   003924                     __end_of_vfprintf:
  7173                           	callstack 0
  7174                           
  7175 ;; *************** function _vfpfcnvrt *****************
  7176 ;; Defined at:
  7177 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  7180 ;;		 -> sprintf@f(12), 
  7181 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  7182 ;;		 -> vfprintf@cfmt(1), 
  7183 ;;  ap              1   35[COMRAM] PTR PTR void 
  7184 ;;		 -> sprintf@ap(1), 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  convarg         4   38[COMRAM] struct .
  7187 ;;  cp              1   43[COMRAM] PTR unsigned char 
  7188 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  7189 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  7190 ;;  done            1   42[COMRAM] _Bool 
  7191 ;;  c               1    0        unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7201 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;Total ram usage:       11 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 5
  7208 ;; This function calls:
  7209 ;;		_dtoa
  7210 ;;		_fputc
  7211 ;;		_read_prec_or_width
  7212 ;; This function is called by:
  7213 ;;		_vfprintf
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text33
  7218   00282A                     __ptext33:
  7219                           	callstack 0
  7220   00282A                     _vfpfcnvrt:
  7221                           	callstack 21
  7222   00282A                     
  7223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7224   00282A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7225   00282C  6ED9               	movwf	fsr2l,c
  7226   00282E  6ADA               	clrf	fsr2h,c
  7227   002830  CFDF FFF6          	movff	indf2,tblptrl
  7228   002834                     	if	1	;There is more than 1 active tblptr byte
  7229   002834  0E0E               	movlw	high __smallconst
  7230   002836  6EF7               	movwf	tblptrh,c
  7231   002838                     	endif
  7232   002838                     	if	0	;tblptru may be non-zero
  7233   002838                     	endif
  7234   002838                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7235   002838  0E00               	movlw	low (__smallconst shr (0+16))
  7236   00283A  6EF8               	movwf	tblptru,c
  7237   00283C                     	endif
  7238   00283C  0008               	tblrd		*
  7239   00283E  50F5               	movf	tablat,w,c
  7240   002840  0A25               	xorlw	37
  7241   002842  A4D8               	btfss	status,2,c
  7242   002844  EF26  F014         	goto	u4061
  7243   002848  EF28  F014         	goto	u4060
  7244   00284C                     u4061:
  7245   00284C  EFC4  F014         	goto	l4688
  7246   002850                     u4060:
  7247   002850                     
  7248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7249   002850  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7250   002852  6ED9               	movwf	fsr2l,c
  7251   002854  6ADA               	clrf	fsr2h,c
  7252   002856  2ADF               	incf	indf2,f,c
  7253   002858                     
  7254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7255   002858  0E00               	movlw	0
  7256   00285A  0100               	movlb	0	; () banked
  7257   00285C  6FD5               	movwf	(_width+1)& (0+255),b
  7258   00285E  0E00               	movlw	0
  7259   002860  6FD4               	movwf	_width& (0+255),b
  7260   002862  C0D4  F05B         	movff	_width,_flags
  7261   002866                     
  7262                           ; BSR set to: 0
  7263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7264   002866  69D6               	setf	_prec& (0+255),b
  7265   002868  69D7               	setf	(_prec+1)& (0+255),b
  7266   00286A                     
  7267                           ; BSR set to: 0
  7268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  7269   00286A  0E00               	movlw	0
  7270   00286C  6E2B               	movwf	vfpfcnvrt@done^0,c
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  7273   00286E  EF5F  F014         	goto	l4662
  7274   002872                     l4652:
  7275                           
  7276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  7277   002872  825B               	bsf	_flags^0,1,c
  7278   002874                     
  7279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  7280   002874  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7281   002876  6ED9               	movwf	fsr2l,c
  7282   002878  6ADA               	clrf	fsr2h,c
  7283   00287A  2ADF               	incf	indf2,f,c
  7284                           
  7285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  7286   00287C  EF5F  F014         	goto	l4662
  7287   002880                     l4656:
  7288                           
  7289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  7290   002880  0E01               	movlw	1
  7291   002882  6E2B               	movwf	vfpfcnvrt@done^0,c
  7292                           
  7293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  7294   002884  EF5F  F014         	goto	l4662
  7295   002888                     l4660:
  7296   002888  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7297   00288A  6ED9               	movwf	fsr2l,c
  7298   00288C  6ADA               	clrf	fsr2h,c
  7299   00288E  CFDF FFF6          	movff	indf2,tblptrl
  7300   002892                     	if	1	;There is more than 1 active tblptr byte
  7301   002892  0E0E               	movlw	high __smallconst
  7302   002894  6EF7               	movwf	tblptrh,c
  7303   002896                     	endif
  7304   002896                     	if	0	;tblptru may be non-zero
  7305   002896                     	endif
  7306   002896                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7307   002896  0E00               	movlw	low (__smallconst shr (0+16))
  7308   002898  6EF8               	movwf	tblptru,c
  7309   00289A                     	endif
  7310   00289A  0008               	tblrd		*
  7311   00289C  50F5               	movf	tablat,w,c
  7312   00289E  6E25               	movwf	??_vfpfcnvrt^0,c
  7313   0028A0  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  7314                           
  7315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7316                           ; Switch size 1, requested type "simple"
  7317                           ; Number of cases is 1, Range of values is 0 to 0
  7318                           ; switch strategies available:
  7319                           ; Name         Instructions Cycles
  7320                           ; simple_byte            4     3 (average)
  7321                           ;	Chosen strategy is simple_byte
  7322   0028A2  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  7323   0028A4  0A00               	xorlw	0	; case 0
  7324   0028A6  B4D8               	btfsc	status,2,c
  7325   0028A8  EF58  F014         	goto	l5022
  7326   0028AC  EF40  F014         	goto	l4656
  7327   0028B0                     l5022:
  7328                           
  7329                           ; Switch size 1, requested type "simple"
  7330                           ; Number of cases is 1, Range of values is 48 to 48
  7331                           ; switch strategies available:
  7332                           ; Name         Instructions Cycles
  7333                           ; simple_byte            4     3 (average)
  7334                           ;	Chosen strategy is simple_byte
  7335   0028B0  5025               	movf	??_vfpfcnvrt^0,w,c
  7336   0028B2  0A30               	xorlw	48	; case 48
  7337   0028B4  B4D8               	btfsc	status,2,c
  7338   0028B6  EF39  F014         	goto	l4652
  7339   0028BA  EF40  F014         	goto	l4656
  7340   0028BE                     l4662:
  7341                           
  7342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  7343   0028BE  502B               	movf	vfpfcnvrt@done^0,w,c
  7344   0028C0  B4D8               	btfsc	status,2,c
  7345   0028C2  EF65  F014         	goto	u4071
  7346   0028C6  EF67  F014         	goto	u4070
  7347   0028CA                     u4071:
  7348   0028CA  EF44  F014         	goto	l4660
  7349   0028CE                     u4070:
  7350   0028CE                     
  7351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  7352   0028CE  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7353   0028D2  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7354   0028D6  EC77  F018         	call	_read_prec_or_width	;wreg free
  7355   0028DA  C007  F0D4         	movff	?_read_prec_or_width,_width
  7356   0028DE  C008  F0D5         	movff	?_read_prec_or_width+1,_width+1
  7357   0028E2                     
  7358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  7359   0028E2  0100               	movlb	0	; () banked
  7360   0028E4  BFD5               	btfsc	(_width+1)& (0+255),7,b
  7361   0028E6  EF79  F014         	goto	u4080
  7362   0028EA  EF77  F014         	goto	u4081
  7363   0028EE                     u4081:
  7364   0028EE  EF7E  F014         	goto	l4670
  7365   0028F2                     u4080:
  7366   0028F2                     
  7367                           ; BSR set to: 0
  7368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  7369   0028F2  805B               	bsf	_flags^0,0,c
  7370                           
  7371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  7372   0028F4  6DD4               	negf	_width& (0+255),b
  7373   0028F6  1FD5               	comf	(_width+1)& (0+255),f,b
  7374   0028F8  B0D8               	btfsc	status,0,c
  7375   0028FA  2BD5               	incf	(_width+1)& (0+255),f,b
  7376   0028FC                     l4670:
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7380   0028FC  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7381   0028FE  6ED9               	movwf	fsr2l,c
  7382   002900  6ADA               	clrf	fsr2h,c
  7383   002902  50DF               	movf	indf2,w,c
  7384   002904  6E2C               	movwf	vfpfcnvrt@cp^0,c
  7385   002906                     
  7386                           ; BSR set to: 0
  7387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7388   002906  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7389   00290A                     	if	1	;There is more than 1 active tblptr byte
  7390   00290A  0E0E               	movlw	high __smallconst
  7391   00290C  6EF7               	movwf	tblptrh,c
  7392   00290E                     	endif
  7393   00290E                     	if	0	;tblptru may be non-zero
  7394   00290E                     	endif
  7395   00290E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7396   00290E  0E00               	movlw	low (__smallconst shr (0+16))
  7397   002910  6EF8               	movwf	tblptru,c
  7398   002912                     	endif
  7399   002912  0008               	tblrd		*
  7400   002914  50F5               	movf	tablat,w,c
  7401   002916  0A64               	xorlw	100
  7402   002918  B4D8               	btfsc	status,2,c
  7403   00291A  EF91  F014         	goto	u4091
  7404   00291E  EF93  F014         	goto	u4090
  7405   002922                     u4091:
  7406   002922  EFA3  F014         	goto	l4676
  7407   002926                     u4090:
  7408   002926                     
  7409                           ; BSR set to: 0
  7410   002926  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7411   00292A                     	if	1	;There is more than 1 active tblptr byte
  7412   00292A  0E0E               	movlw	high __smallconst
  7413   00292C  6EF7               	movwf	tblptrh,c
  7414   00292E                     	endif
  7415   00292E                     	if	0	;tblptru may be non-zero
  7416   00292E                     	endif
  7417   00292E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7418   00292E  0E00               	movlw	low (__smallconst shr (0+16))
  7419   002930  6EF8               	movwf	tblptru,c
  7420   002932                     	endif
  7421   002932  0008               	tblrd		*
  7422   002934  50F5               	movf	tablat,w,c
  7423   002936  0A69               	xorlw	105
  7424   002938  A4D8               	btfss	status,2,c
  7425   00293A  EFA1  F014         	goto	u4101
  7426   00293E  EFA3  F014         	goto	u4100
  7427   002942                     u4101:
  7428   002942  EFBE  F014         	goto	l4684
  7429   002946                     u4100:
  7430   002946                     l4676:
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7434   002946  5024               	movf	vfpfcnvrt@ap^0,w,c
  7435   002948  6ED9               	movwf	fsr2l,c
  7436   00294A  6ADA               	clrf	fsr2h,c
  7437   00294C  0E02               	movlw	2
  7438   00294E  26DF               	addwf	indf2,f,c
  7439   002950  5CDF               	subwf	indf2,w,c
  7440   002952  6ED9               	movwf	fsr2l,c
  7441   002954  6ADA               	clrf	fsr2h,c
  7442   002956  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  7443   00295A  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  7444   00295E                     
  7445                           ; BSR set to: 0
  7446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  7447   00295E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7448   002960  6ED9               	movwf	fsr2l,c
  7449   002962  6ADA               	clrf	fsr2h,c
  7450   002964  282C               	incf	vfpfcnvrt@cp^0,w,c
  7451   002966  6EDF               	movwf	indf2,c
  7452   002968                     
  7453                           ; BSR set to: 0
  7454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  7455   002968  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  7456   00296C  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  7457   002970  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  7458   002974  ECD8  F014         	call	_dtoa	;wreg free
  7459   002978  EFD7  F014         	goto	l1288
  7460   00297C                     l4684:
  7461                           
  7462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  7463   00297C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7464   00297E  6ED9               	movwf	fsr2l,c
  7465   002980  6ADA               	clrf	fsr2h,c
  7466   002982  2ADF               	incf	indf2,f,c
  7467   002984  EFD7  F014         	goto	l1288
  7468   002988                     l4688:
  7469                           
  7470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  7471   002988  5023               	movf	vfpfcnvrt@fmt^0,w,c
  7472   00298A  6ED9               	movwf	fsr2l,c
  7473   00298C  6ADA               	clrf	fsr2h,c
  7474   00298E  CFDF FFF6          	movff	indf2,tblptrl
  7475   002992                     	if	1	;There is more than 1 active tblptr byte
  7476   002992  0E0E               	movlw	high __smallconst
  7477   002994  6EF7               	movwf	tblptrh,c
  7478   002996                     	endif
  7479   002996                     	if	0	;tblptru may be non-zero
  7480   002996                     	endif
  7481   002996                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7482   002996  0E00               	movlw	low (__smallconst shr (0+16))
  7483   002998  6EF8               	movwf	tblptru,c
  7484   00299A                     	endif
  7485   00299A  0008               	tblrd		*
  7486   00299C  50F5               	movf	tablat,w,c
  7487   00299E  6E01               	movwf	fputc@c^0,c
  7488   0029A0  6A02               	clrf	(fputc@c+1)^0,c
  7489   0029A2  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7490   0029A6  EC23  F019         	call	_fputc	;wreg free
  7491   0029AA  EFBE  F014         	goto	l4684
  7492   0029AE                     l1288:
  7493   0029AE  0012               	return		;funcret
  7494   0029B0                     __end_of_vfpfcnvrt:
  7495                           	callstack 0
  7496                           
  7497 ;; *************** function _read_prec_or_width *****************
  7498 ;; Defined at:
  7499 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  7502 ;;		 -> vfprintf@cfmt(1), 
  7503 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  7504 ;;		 -> sprintf@ap(1), 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  c               1    8[COMRAM] unsigned char 
  7507 ;;  n               2    9[COMRAM] int 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  2    6[COMRAM] int 
  7510 ;; Registers used:
  7511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;Total ram usage:        5 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 1
  7524 ;; This function calls:
  7525 ;;		___wmul
  7526 ;; This function is called by:
  7527 ;;		_vfpfcnvrt
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text34
  7532   0030EE                     __ptext34:
  7533                           	callstack 0
  7534   0030EE                     _read_prec_or_width:
  7535                           	callstack 24
  7536   0030EE                     
  7537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  7538   0030EE  0E00               	movlw	0
  7539   0030F0  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7540   0030F2  0E00               	movlw	0
  7541   0030F4  6E0A               	movwf	read_prec_or_width@n^0,c
  7542   0030F6                     
  7543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  7544   0030F6  5007               	movf	read_prec_or_width@fmt^0,w,c
  7545   0030F8  6ED9               	movwf	fsr2l,c
  7546   0030FA  6ADA               	clrf	fsr2h,c
  7547   0030FC  CFDF FFF6          	movff	indf2,tblptrl
  7548   003100                     	if	1	;There is more than 1 active tblptr byte
  7549   003100  0E0E               	movlw	high __smallconst
  7550   003102  6EF7               	movwf	tblptrh,c
  7551   003104                     	endif
  7552   003104                     	if	0	;tblptru may be non-zero
  7553   003104                     	endif
  7554   003104                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7555   003104  0E00               	movlw	low (__smallconst shr (0+16))
  7556   003106  6EF8               	movwf	tblptru,c
  7557   003108                     	endif
  7558   003108  0008               	tblrd		*
  7559   00310A  50F5               	movf	tablat,w,c
  7560   00310C  0A2A               	xorlw	42
  7561   00310E  A4D8               	btfss	status,2,c
  7562   003110  EF8C  F018         	goto	u2321
  7563   003114  EF8E  F018         	goto	u2320
  7564   003118                     u2321:
  7565   003118  EFB4  F018         	goto	l3166
  7566   00311C                     u2320:
  7567   00311C                     
  7568                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  7569   00311C  5007               	movf	read_prec_or_width@fmt^0,w,c
  7570   00311E  6ED9               	movwf	fsr2l,c
  7571   003120  6ADA               	clrf	fsr2h,c
  7572   003122  2ADF               	incf	indf2,f,c
  7573   003124                     
  7574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  7575   003124  5008               	movf	read_prec_or_width@ap^0,w,c
  7576   003126  6ED9               	movwf	fsr2l,c
  7577   003128  6ADA               	clrf	fsr2h,c
  7578   00312A  0E02               	movlw	2
  7579   00312C  26DF               	addwf	indf2,f,c
  7580   00312E  5CDF               	subwf	indf2,w,c
  7581   003130  6ED9               	movwf	fsr2l,c
  7582   003132  6ADA               	clrf	fsr2h,c
  7583   003134  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  7584   003138  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  7585                           
  7586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  7587   00313C  EFC9  F018         	goto	l1269
  7588   003140                     l3162:
  7589                           
  7590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7591   003140  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  7592   003144  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7593   003148  0E00               	movlw	0
  7594   00314A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7595   00314C  0E0A               	movlw	10
  7596   00314E  6E03               	movwf	___wmul@multiplicand^0,c
  7597   003150  ECFC  F01D         	call	___wmul	;wreg free
  7598   003154  5009               	movf	read_prec_or_width@c^0,w,c
  7599   003156  2401               	addwf	?___wmul^0,w,c
  7600   003158  6E0A               	movwf	read_prec_or_width@n^0,c
  7601   00315A  0E00               	movlw	0
  7602   00315C  2002               	addwfc	(?___wmul+1)^0,w,c
  7603   00315E  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7604   003160                     
  7605                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7606   003160  5007               	movf	read_prec_or_width@fmt^0,w,c
  7607   003162  6ED9               	movwf	fsr2l,c
  7608   003164  6ADA               	clrf	fsr2h,c
  7609   003166  2ADF               	incf	indf2,f,c
  7610   003168                     l3166:
  7611                           
  7612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7613   003168  5007               	movf	read_prec_or_width@fmt^0,w,c
  7614   00316A  6ED9               	movwf	fsr2l,c
  7615   00316C  6ADA               	clrf	fsr2h,c
  7616   00316E  CFDF FFF6          	movff	indf2,tblptrl
  7617   003172                     	if	1	;There is more than 1 active tblptr byte
  7618   003172  0E0E               	movlw	high __smallconst
  7619   003174  6EF7               	movwf	tblptrh,c
  7620   003176                     	endif
  7621   003176                     	if	0	;tblptru may be non-zero
  7622   003176                     	endif
  7623   003176                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7624   003176  0E00               	movlw	low (__smallconst shr (0+16))
  7625   003178  6EF8               	movwf	tblptru,c
  7626   00317A                     	endif
  7627   00317A  0008               	tblrd		*
  7628   00317C  50F5               	movf	tablat,w,c
  7629   00317E  0FD0               	addlw	208
  7630   003180  6E09               	movwf	read_prec_or_width@c^0,c
  7631   003182  0E09               	movlw	9
  7632   003184  6409               	cpfsgt	read_prec_or_width@c^0,c
  7633   003186  EFC7  F018         	goto	u2331
  7634   00318A  EFC9  F018         	goto	u2330
  7635   00318E                     u2331:
  7636   00318E  EFA0  F018         	goto	l3162
  7637   003192                     u2330:
  7638   003192                     l1269:
  7639                           
  7640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7641   003192  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  7642   003196  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7643   00319A  0012               	return		;funcret
  7644   00319C                     __end_of_read_prec_or_width:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function ___wmul *****************
  7648 ;; Defined at:
  7649 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  multiplier      2    0[COMRAM] unsigned int 
  7652 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  product         2    4[COMRAM] unsigned int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  2    0[COMRAM] unsigned int 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0, prodl, prodh
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;Total ram usage:        6 bytes
  7669 ;; Hardware stack levels used: 1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_setMotorPWM
  7674 ;;		_read_prec_or_width
  7675 ;;		_ADC2String
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text35
  7680   003BF8                     __ptext35:
  7681                           	callstack 0
  7682   003BF8                     ___wmul:
  7683                           	callstack 28
  7684   003BF8  5001               	movf	___wmul@multiplier^0,w,c
  7685   003BFA  0203               	mulwf	___wmul@multiplicand^0,c
  7686   003BFC  CFF3 F005          	movff	prodl,___wmul@product
  7687   003C00  CFF4 F006          	movff	prodh,___wmul@product+1
  7688   003C04  5001               	movf	___wmul@multiplier^0,w,c
  7689   003C06  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7690   003C08  50F3               	movf	243,w,c
  7691   003C0A  2606               	addwf	(___wmul@product+1)^0,f,c
  7692   003C0C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7693   003C0E  0203               	mulwf	___wmul@multiplicand^0,c
  7694   003C10  50F3               	movf	243,w,c
  7695   003C12  2606               	addwf	(___wmul@product+1)^0,f,c
  7696   003C14  C005  F001         	movff	___wmul@product,?___wmul
  7697   003C18  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7698   003C1C  0012               	return		;funcret
  7699   003C1E                     __end_of___wmul:
  7700                           	callstack 0
  7701                           
  7702 ;; *************** function _dtoa *****************
  7703 ;; Defined at:
  7704 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  7707 ;;		 -> sprintf@f(12), 
  7708 ;;  d               2   23[COMRAM] int 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  i               2   31[COMRAM] int 
  7711 ;;  w               2   28[COMRAM] int 
  7712 ;;  s               1   30[COMRAM] unsigned char 
  7713 ;;  p               1   27[COMRAM] _Bool 
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7723 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;Total ram usage:       11 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 4
  7730 ;; This function calls:
  7731 ;;		___awdiv
  7732 ;;		___awmod
  7733 ;;		_abs
  7734 ;;		_pad
  7735 ;; This function is called by:
  7736 ;;		_vfpfcnvrt
  7737 ;; This function uses a non-reentrant model
  7738 ;;
  7739                           
  7740                           	psect	text36
  7741   0029B0                     __ptext36:
  7742                           	callstack 0
  7743   0029B0                     _dtoa:
  7744                           	callstack 21
  7745   0029B0                     
  7746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7747   0029B0  0E01               	movlw	1
  7748   0029B2  6E1C               	movwf	dtoa@p^0,c
  7749   0029B4                     
  7750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7751   0029B4  BE19               	btfsc	(dtoa@d+1)^0,7,c
  7752   0029B6  EFDF  F014         	goto	u3961
  7753   0029BA  EFE2  F014         	goto	u3960
  7754   0029BE                     u3961:
  7755   0029BE  0E01               	movlw	1
  7756   0029C0  EFE3  F014         	goto	u3970
  7757   0029C4                     u3960:
  7758   0029C4  0E00               	movlw	0
  7759   0029C6                     u3970:
  7760   0029C6  6E1F               	movwf	dtoa@s^0,c
  7761   0029C8                     
  7762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7763   0029C8  C0D4  F01D         	movff	_width,dtoa@w
  7764   0029CC  C0D5  F01E         	movff	_width+1,dtoa@w+1
  7765   0029D0                     
  7766                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  7767   0029D0  501F               	movf	dtoa@s^0,w,c
  7768   0029D2  B4D8               	btfsc	status,2,c
  7769   0029D4  EFEE  F014         	goto	u3981
  7770   0029D8  EFF0  F014         	goto	u3980
  7771   0029DC                     u3981:
  7772   0029DC  EF07  F015         	goto	l1252
  7773   0029E0                     u3980:
  7774   0029E0                     
  7775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  7776   0029E0  061D               	decf	dtoa@w^0,f,c
  7777   0029E2  A0D8               	btfss	status,0,c
  7778   0029E4  061E               	decf	(dtoa@w+1)^0,f,c
  7779   0029E6                     
  7780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7781   0029E6  501F               	movf	dtoa@s^0,w,c
  7782   0029E8  A4D8               	btfss	status,2,c
  7783   0029EA  EFF9  F014         	goto	u3991
  7784   0029EE  EFFB  F014         	goto	u3990
  7785   0029F2                     u3991:
  7786   0029F2  EF01  F015         	goto	l4606
  7787   0029F6                     u3990:
  7788   0029F6  0E00               	movlw	0
  7789   0029F8  6E1B               	movwf	(_dtoa$2633+1)^0,c
  7790   0029FA  0E2B               	movlw	43
  7791   0029FC  6E1A               	movwf	_dtoa$2633^0,c
  7792   0029FE  EF05  F015         	goto	l4608
  7793   002A02                     l4606:
  7794   002A02  0E00               	movlw	0
  7795   002A04  6E1B               	movwf	(_dtoa$2633+1)^0,c
  7796   002A06  0E2D               	movlw	45
  7797   002A08  6E1A               	movwf	_dtoa$2633^0,c
  7798   002A0A                     l4608:
  7799   002A0A  C01A  F01F         	movff	_dtoa$2633,dtoa@s
  7800   002A0E                     l1252:
  7801                           
  7802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7803   002A0E  0E00               	movlw	0
  7804   002A10  6E21               	movwf	(dtoa@i+1)^0,c
  7805   002A12  0E1F               	movlw	31
  7806   002A14  6E20               	movwf	dtoa@i^0,c
  7807   002A16                     
  7808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7809   002A16  0E00               	movlw	0
  7810   002A18  0101               	movlb	1	; () banked
  7811   002A1A  6F8B               	movwf	(_dbuf+31)& (0+255),b
  7812                           
  7813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7814   002A1C  EF3F  F015         	goto	l4622
  7815   002A20                     l4612:
  7816                           
  7817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  7818   002A20  0620               	decf	dtoa@i^0,f,c
  7819   002A22  A0D8               	btfss	status,0,c
  7820   002A24  0621               	decf	(dtoa@i+1)^0,f,c
  7821   002A26                     
  7822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7823   002A26  0E6C               	movlw	low _dbuf
  7824   002A28  2420               	addwf	dtoa@i^0,w,c
  7825   002A2A  6ED9               	movwf	fsr2l,c
  7826   002A2C  0E01               	movlw	high _dbuf
  7827   002A2E  2021               	addwfc	(dtoa@i+1)^0,w,c
  7828   002A30  6EDA               	movwf	fsr2h,c
  7829   002A32  C018  F001         	movff	dtoa@d,___awmod@dividend
  7830   002A36  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7831   002A3A  0E00               	movlw	0
  7832   002A3C  6E04               	movwf	(___awmod@divisor+1)^0,c
  7833   002A3E  0E0A               	movlw	10
  7834   002A40  6E03               	movwf	___awmod@divisor^0,c
  7835   002A42  EC1F  F018         	call	___awmod	;wreg free
  7836   002A46  C001  F007         	movff	?___awmod,abs@a
  7837   002A4A  C002  F008         	movff	?___awmod+1,abs@a+1
  7838   002A4E  EC24  F01D         	call	_abs	;wreg free
  7839   002A52  5007               	movf	?_abs^0,w,c
  7840   002A54  0F30               	addlw	48
  7841   002A56  6EDF               	movwf	indf2,c
  7842   002A58                     
  7843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7844   002A58  0E00               	movlw	0
  7845   002A5A  6E1C               	movwf	dtoa@p^0,c
  7846   002A5C                     
  7847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  7848   002A5C  061D               	decf	dtoa@w^0,f,c
  7849   002A5E  A0D8               	btfss	status,0,c
  7850   002A60  061E               	decf	(dtoa@w+1)^0,f,c
  7851   002A62                     
  7852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7853   002A62  C018  F001         	movff	dtoa@d,___awdiv@dividend
  7854   002A66  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7855   002A6A  0E00               	movlw	0
  7856   002A6C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7857   002A6E  0E0A               	movlw	10
  7858   002A70  6E03               	movwf	___awdiv@divisor^0,c
  7859   002A72  ECBD  F017         	call	___awdiv	;wreg free
  7860   002A76  C001  F018         	movff	?___awdiv,dtoa@d
  7861   002A7A  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  7862   002A7E                     l4622:
  7863                           
  7864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7865   002A7E  BE21               	btfsc	(dtoa@i+1)^0,7,c
  7866   002A80  EF4A  F015         	goto	u4001
  7867   002A84  5021               	movf	(dtoa@i+1)^0,w,c
  7868   002A86  E108               	bnz	u4000
  7869   002A88  0420               	decf	dtoa@i^0,w,c
  7870   002A8A  A0D8               	btfss	status,0,c
  7871   002A8C  EF4A  F015         	goto	u4001
  7872   002A90  EF4C  F015         	goto	u4000
  7873   002A94                     u4001:
  7874   002A94  EF71  F015         	goto	l4632
  7875   002A98                     u4000:
  7876   002A98  5018               	movf	dtoa@d^0,w,c
  7877   002A9A  1019               	iorwf	(dtoa@d+1)^0,w,c
  7878   002A9C  A4D8               	btfss	status,2,c
  7879   002A9E  EF53  F015         	goto	u4011
  7880   002AA2  EF55  F015         	goto	u4010
  7881   002AA6                     u4011:
  7882   002AA6  EF10  F015         	goto	l4612
  7883   002AAA                     u4010:
  7884   002AAA  501C               	movf	dtoa@p^0,w,c
  7885   002AAC  A4D8               	btfss	status,2,c
  7886   002AAE  EF5B  F015         	goto	u4021
  7887   002AB2  EF5D  F015         	goto	u4020
  7888   002AB6                     u4021:
  7889   002AB6  EF10  F015         	goto	l4612
  7890   002ABA                     u4020:
  7891   002ABA  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  7892   002ABC  EF68  F015         	goto	u4031
  7893   002AC0  501E               	movf	(dtoa@w+1)^0,w,c
  7894   002AC2  E108               	bnz	u4030
  7895   002AC4  041D               	decf	dtoa@w^0,w,c
  7896   002AC6  A0D8               	btfss	status,0,c
  7897   002AC8  EF68  F015         	goto	u4031
  7898   002ACC  EF6A  F015         	goto	u4030
  7899   002AD0                     u4031:
  7900   002AD0  EF71  F015         	goto	l4632
  7901   002AD4                     u4030:
  7902   002AD4  B25B               	btfsc	_flags^0,1,c
  7903   002AD6  EF6F  F015         	goto	u4041
  7904   002ADA  EF71  F015         	goto	u4040
  7905   002ADE                     u4041:
  7906   002ADE  EF10  F015         	goto	l4612
  7907   002AE2                     u4040:
  7908   002AE2                     l4632:
  7909                           
  7910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7911   002AE2  501F               	movf	dtoa@s^0,w,c
  7912   002AE4  B4D8               	btfsc	status,2,c
  7913   002AE6  EF77  F015         	goto	u4051
  7914   002AEA  EF79  F015         	goto	u4050
  7915   002AEE                     u4051:
  7916   002AEE  EF84  F015         	goto	l4638
  7917   002AF2                     u4050:
  7918   002AF2                     
  7919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  7920   002AF2  0620               	decf	dtoa@i^0,f,c
  7921   002AF4  A0D8               	btfss	status,0,c
  7922   002AF6  0621               	decf	(dtoa@i+1)^0,f,c
  7923   002AF8                     
  7924                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7925   002AF8  0E6C               	movlw	low _dbuf
  7926   002AFA  2420               	addwf	dtoa@i^0,w,c
  7927   002AFC  6ED9               	movwf	fsr2l,c
  7928   002AFE  0E01               	movlw	high _dbuf
  7929   002B00  2021               	addwfc	(dtoa@i+1)^0,w,c
  7930   002B02  6EDA               	movwf	fsr2h,c
  7931   002B04  C01F  FFDF         	movff	dtoa@s,indf2
  7932   002B08                     l4638:
  7933                           
  7934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7935   002B08  C017  F00F         	movff	dtoa@fp,pad@fp
  7936   002B0C  0E6C               	movlw	low _dbuf
  7937   002B0E  2420               	addwf	dtoa@i^0,w,c
  7938   002B10  6E10               	movwf	pad@buf^0,c
  7939   002B12  0E01               	movlw	high _dbuf
  7940   002B14  2021               	addwfc	(dtoa@i+1)^0,w,c
  7941   002B16  6E11               	movwf	(pad@buf+1)^0,c
  7942   002B18  C01D  F012         	movff	dtoa@w,pad@p
  7943   002B1C  C01E  F013         	movff	dtoa@w+1,pad@p+1
  7944   002B20  EC78  F019         	call	_pad	;wreg free
  7945   002B24  0012               	return		;funcret
  7946   002B26                     __end_of_dtoa:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _pad *****************
  7950 ;; Defined at:
  7951 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7954 ;;		 -> sprintf@f(12), 
  7955 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7956 ;;		 -> dbuf(32), 
  7957 ;;  p               2   17[COMRAM] int 
  7958 ;; Auto vars:     Size  Location     Type
  7959 ;;  i               2   20[COMRAM] int 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      void 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7969 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;Total ram usage:        8 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 3
  7976 ;; This function calls:
  7977 ;;		_fputc
  7978 ;;		_fputs
  7979 ;; This function is called by:
  7980 ;;		_dtoa
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text37
  7985   0032F0                     __ptext37:
  7986                           	callstack 0
  7987   0032F0                     _pad:
  7988                           	callstack 21
  7989   0032F0                     
  7990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7991   0032F0  A05B               	btfss	_flags^0,0,c
  7992   0032F2  EF7D  F019         	goto	u3921
  7993   0032F6  EF7F  F019         	goto	u3920
  7994   0032FA                     u3921:
  7995   0032FA  EF87  F019         	goto	l4580
  7996   0032FE                     u3920:
  7997   0032FE                     
  7998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7999   0032FE  C010  F009         	movff	pad@buf,fputs@s
  8000   003302  C011  F00A         	movff	pad@buf+1,fputs@s+1
  8001   003306  C00F  F00B         	movff	pad@fp,fputs@fp
  8002   00330A  ECB3  F01C         	call	_fputs	;wreg free
  8003   00330E                     l4580:
  8004                           
  8005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  8006   00330E  BE13               	btfsc	(pad@p+1)^0,7,c
  8007   003310  EF8E  F019         	goto	u3930
  8008   003314  EF8C  F019         	goto	u3931
  8009   003318                     u3931:
  8010   003318  EF92  F019         	goto	l1244
  8011   00331C                     u3930:
  8012   00331C                     
  8013                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8014   00331C  0E00               	movlw	0
  8015   00331E  6E13               	movwf	(pad@p+1)^0,c
  8016   003320  0E00               	movlw	0
  8017   003322  6E12               	movwf	pad@p^0,c
  8018   003324                     l1244:
  8019                           
  8020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8021   003324  0E00               	movlw	0
  8022   003326  6E16               	movwf	(pad@i+1)^0,c
  8023   003328  0E00               	movlw	0
  8024   00332A  6E15               	movwf	pad@i^0,c
  8025                           
  8026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8027   00332C  EFA2  F019         	goto	l4588
  8028   003330                     l4584:
  8029                           
  8030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8031   003330  0E00               	movlw	0
  8032   003332  6E02               	movwf	(fputc@c+1)^0,c
  8033   003334  0E20               	movlw	32
  8034   003336  6E01               	movwf	fputc@c^0,c
  8035   003338  C00F  F003         	movff	pad@fp,fputc@fp
  8036   00333C  EC23  F019         	call	_fputc	;wreg free
  8037   003340                     
  8038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8039   003340  4A15               	infsnz	pad@i^0,f,c
  8040   003342  2A16               	incf	(pad@i+1)^0,f,c
  8041   003344                     l4588:
  8042                           
  8043                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8044   003344  5012               	movf	pad@p^0,w,c
  8045   003346  5C15               	subwf	pad@i^0,w,c
  8046   003348  5016               	movf	(pad@i+1)^0,w,c
  8047   00334A  0A80               	xorlw	128
  8048   00334C  6E14               	movwf	??_pad^0,c
  8049   00334E  5013               	movf	(pad@p+1)^0,w,c
  8050   003350  0A80               	xorlw	128
  8051   003352  5814               	subwfb	??_pad^0,w,c
  8052   003354  A0D8               	btfss	status,0,c
  8053   003356  EFAF  F019         	goto	u3941
  8054   00335A  EFB1  F019         	goto	u3940
  8055   00335E                     u3941:
  8056   00335E  EF98  F019         	goto	l4584
  8057   003362                     u3940:
  8058   003362                     
  8059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  8060   003362  B05B               	btfsc	_flags^0,0,c
  8061   003364  EFB6  F019         	goto	u3951
  8062   003368  EFB8  F019         	goto	u3950
  8063   00336C                     u3951:
  8064   00336C  EFC0  F019         	goto	l1249
  8065   003370                     u3950:
  8066   003370                     
  8067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8068   003370  C010  F009         	movff	pad@buf,fputs@s
  8069   003374  C011  F00A         	movff	pad@buf+1,fputs@s+1
  8070   003378  C00F  F00B         	movff	pad@fp,fputs@fp
  8071   00337C  ECB3  F01C         	call	_fputs	;wreg free
  8072   003380                     l1249:
  8073   003380  0012               	return		;funcret
  8074   003382                     __end_of_pad:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _fputs *****************
  8078 ;; Defined at:
  8079 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  s               2    8[COMRAM] PTR const unsigned char 
  8082 ;;		 -> dbuf(32), 
  8083 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  8084 ;;		 -> sprintf@f(12), 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  i               2   12[COMRAM] int 
  8087 ;;  c               1   11[COMRAM] unsigned char 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  2    8[COMRAM] int 
  8090 ;; Registers used:
  8091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8097 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;Total ram usage:        6 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 2
  8104 ;; This function calls:
  8105 ;;		_fputc
  8106 ;; This function is called by:
  8107 ;;		_pad
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text38
  8112   003966                     __ptext38:
  8113                           	callstack 0
  8114   003966                     _fputs:
  8115                           	callstack 21
  8116   003966  0E00               	movlw	0
  8117   003968  6E0E               	movwf	(fputs@i+1)^0,c
  8118   00396A  0E00               	movlw	0
  8119   00396C  6E0D               	movwf	fputs@i^0,c
  8120   00396E  EFC2  F01C         	goto	l4574
  8121   003972                     l4570:
  8122   003972  C00C  F001         	movff	fputs@c,fputc@c
  8123   003976  6A02               	clrf	(fputc@c+1)^0,c
  8124   003978  C00B  F003         	movff	fputs@fp,fputc@fp
  8125   00397C  EC23  F019         	call	_fputc	;wreg free
  8126   003980  4A0D               	infsnz	fputs@i^0,f,c
  8127   003982  2A0E               	incf	(fputs@i+1)^0,f,c
  8128   003984                     l4574:
  8129   003984  500D               	movf	fputs@i^0,w,c
  8130   003986  2409               	addwf	fputs@s^0,w,c
  8131   003988  6ED9               	movwf	fsr2l,c
  8132   00398A  500E               	movf	(fputs@i+1)^0,w,c
  8133   00398C  200A               	addwfc	(fputs@s+1)^0,w,c
  8134   00398E  6EDA               	movwf	fsr2h,c
  8135   003990  50DF               	movf	indf2,w,c
  8136   003992  6E0C               	movwf	fputs@c^0,c
  8137   003994  500C               	movf	fputs@c^0,w,c
  8138   003996  A4D8               	btfss	status,2,c
  8139   003998  EFD0  F01C         	goto	u3911
  8140   00399C  EFD2  F01C         	goto	u3910
  8141   0039A0                     u3911:
  8142   0039A0  EFB9  F01C         	goto	l4570
  8143   0039A4                     u3910:
  8144   0039A4  0012               	return		;funcret
  8145   0039A6                     __end_of_fputs:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _fputc *****************
  8149 ;; Defined at:
  8150 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;  c               2    0[COMRAM] int 
  8153 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  8154 ;;		 -> sprintf@f(12), 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  2    0[COMRAM] int 
  8159 ;; Registers used:
  8160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;Total ram usage:        8 bytes
  8171 ;; Hardware stack levels used: 1
  8172 ;; Hardware stack levels required when called: 1
  8173 ;; This function calls:
  8174 ;;		_putch
  8175 ;; This function is called by:
  8176 ;;		_pad
  8177 ;;		_vfpfcnvrt
  8178 ;;		_fputs
  8179 ;; This function uses a non-reentrant model
  8180 ;;
  8181                           
  8182                           	psect	text39
  8183   003246                     __ptext39:
  8184                           	callstack 0
  8185   003246                     _fputc:
  8186                           	callstack 24
  8187   003246  5003               	movf	fputc@fp^0,w,c
  8188   003248  B4D8               	btfsc	status,2,c
  8189   00324A  EF29  F019         	goto	u1971
  8190   00324E  EF2B  F019         	goto	u1970
  8191   003252                     u1971:
  8192   003252  EF33  F019         	goto	l2958
  8193   003256                     u1970:
  8194   003256  5003               	movf	fputc@fp^0,w,c
  8195   003258  A4D8               	btfss	status,2,c
  8196   00325A  EF31  F019         	goto	u1981
  8197   00325E  EF33  F019         	goto	u1980
  8198   003262                     u1981:
  8199   003262  EF38  F019         	goto	l2960
  8200   003266                     u1980:
  8201   003266                     l2958:
  8202   003266  5001               	movf	fputc@c^0,w,c
  8203   003268  EC6B  F01E         	call	_putch
  8204   00326C  EF77  F019         	goto	l1313
  8205   003270                     l2960:
  8206   003270  5003               	movf	fputc@fp^0,w,c
  8207   003272  6ED9               	movwf	fsr2l,c
  8208   003274  6ADA               	clrf	fsr2h,c
  8209   003276  0E0A               	movlw	10
  8210   003278  26D9               	addwf	fsr2l,f,c
  8211   00327A  50DE               	movf	postinc2,w,c
  8212   00327C  10DE               	iorwf	postinc2,w,c
  8213   00327E  B4D8               	btfsc	status,2,c
  8214   003280  EF44  F019         	goto	u1991
  8215   003284  EF46  F019         	goto	u1990
  8216   003288                     u1991:
  8217   003288  EF5F  F019         	goto	l2964
  8218   00328C                     u1990:
  8219   00328C  5003               	movf	fputc@fp^0,w,c
  8220   00328E  6ED9               	movwf	fsr2l,c
  8221   003290  6ADA               	clrf	fsr2h,c
  8222   003292  0E0A               	movlw	10
  8223   003294  26D9               	addwf	fsr2l,f,c
  8224   003296  5003               	movf	fputc@fp^0,w,c
  8225   003298  6EE1               	movwf	fsr1l,c
  8226   00329A  6AE2               	clrf	fsr1h,c
  8227   00329C  0E03               	movlw	3
  8228   00329E  26E1               	addwf	fsr1l,f,c
  8229   0032A0  50DE               	movf	postinc2,w,c
  8230   0032A2  5CE6               	subwf	postinc1,w,c
  8231   0032A4  50E6               	movf	postinc1,w,c
  8232   0032A6  0A80               	xorlw	128
  8233   0032A8  6E08               	movwf	(??_fputc+4)^0,c
  8234   0032AA  50DE               	movf	postinc2,w,c
  8235   0032AC  0A80               	xorlw	128
  8236   0032AE  5808               	subwfb	(??_fputc+4)^0,w,c
  8237   0032B0  B0D8               	btfsc	status,0,c
  8238   0032B2  EF5D  F019         	goto	u2001
  8239   0032B6  EF5F  F019         	goto	u2000
  8240   0032BA                     u2001:
  8241   0032BA  EF77  F019         	goto	l1313
  8242   0032BE                     u2000:
  8243   0032BE                     l2964:
  8244   0032BE  5003               	movf	fputc@fp^0,w,c
  8245   0032C0  6ED9               	movwf	fsr2l,c
  8246   0032C2  6ADA               	clrf	fsr2h,c
  8247   0032C4  0E03               	movlw	3
  8248   0032C6  26D9               	addwf	fsr2l,f,c
  8249   0032C8  50DF               	movf	indf2,w,c
  8250   0032CA  6E04               	movwf	??_fputc^0,c
  8251   0032CC  5003               	movf	fputc@fp^0,w,c
  8252   0032CE  6ED9               	movwf	fsr2l,c
  8253   0032D0  6ADA               	clrf	fsr2h,c
  8254   0032D2  50DF               	movf	indf2,w,c
  8255   0032D4  2404               	addwf	??_fputc^0,w,c
  8256   0032D6  6ED9               	movwf	fsr2l,c
  8257   0032D8  6ADA               	clrf	fsr2h,c
  8258   0032DA  C001  FFDF         	movff	fputc@c,indf2
  8259   0032DE  5003               	movf	fputc@fp^0,w,c
  8260   0032E0  6ED9               	movwf	fsr2l,c
  8261   0032E2  6ADA               	clrf	fsr2h,c
  8262   0032E4  0E03               	movlw	3
  8263   0032E6  26D9               	addwf	fsr2l,f,c
  8264   0032E8  2ADE               	incf	postinc2,f,c
  8265   0032EA  0E00               	movlw	0
  8266   0032EC  22DD               	addwfc	postdec2,f,c
  8267   0032EE                     l1313:
  8268   0032EE  0012               	return		;funcret
  8269   0032F0                     __end_of_fputc:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _putch *****************
  8273 ;; Defined at:
  8274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;  c               1    wreg     unsigned char 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  c               1    0[COMRAM] unsigned char 
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_fputc
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text40
  8302   003CD6                     __ptext40:
  8303                           	callstack 0
  8304   003CD6                     _putch:
  8305                           	callstack 24
  8306   003CD6  0012               	return		;funcret
  8307   003CD8                     __end_of_putch:
  8308                           	callstack 0
  8309                           
  8310 ;; *************** function _abs *****************
  8311 ;; Defined at:
  8312 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;  a               2    6[COMRAM] int 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  2    6[COMRAM] int 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;Total ram usage:        4 bytes
  8331 ;; Hardware stack levels used: 1
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_dtoa
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text41
  8340   003A48                     __ptext41:
  8341                           	callstack 0
  8342   003A48                     _abs:
  8343                           	callstack 24
  8344   003A48  BE08               	btfsc	(abs@a+1)^0,7,c
  8345   003A4A  EF29  F01D         	goto	u2181
  8346   003A4E  EF2B  F01D         	goto	u2180
  8347   003A52                     u2181:
  8348   003A52  EF31  F01D         	goto	l1298
  8349   003A56                     u2180:
  8350   003A56  C007  F007         	movff	abs@a,?_abs
  8351   003A5A  C008  F008         	movff	abs@a+1,?_abs+1
  8352   003A5E  EF3D  F01D         	goto	l1301
  8353   003A62                     l1298:
  8354   003A62  C007  F009         	movff	abs@a,??_abs
  8355   003A66  C008  F00A         	movff	abs@a+1,??_abs+1
  8356   003A6A  1E09               	comf	??_abs^0,f,c
  8357   003A6C  1E0A               	comf	(??_abs+1)^0,f,c
  8358   003A6E  4A09               	infsnz	??_abs^0,f,c
  8359   003A70  2A0A               	incf	(??_abs+1)^0,f,c
  8360   003A72  C009  F007         	movff	??_abs,?_abs
  8361   003A76  C00A  F008         	movff	??_abs+1,?_abs+1
  8362   003A7A                     l1301:
  8363   003A7A  0012               	return		;funcret
  8364   003A7C                     __end_of_abs:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function ___awmod *****************
  8368 ;; Defined at:
  8369 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  dividend        2    0[COMRAM] int 
  8372 ;;  divisor         2    2[COMRAM] int 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;  sign            1    5[COMRAM] unsigned char 
  8375 ;;  counter         1    4[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  2    0[COMRAM] int 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;Total ram usage:        6 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_dtoa
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text42
  8399   00303E                     __ptext42:
  8400                           	callstack 0
  8401   00303E                     ___awmod:
  8402                           	callstack 24
  8403   00303E  0E00               	movlw	0
  8404   003040  6E06               	movwf	___awmod@sign^0,c
  8405   003042  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8406   003044  EF28  F018         	goto	u2080
  8407   003048  EF26  F018         	goto	u2081
  8408   00304C                     u2081:
  8409   00304C  EF2E  F018         	goto	l3034
  8410   003050                     u2080:
  8411   003050  6C01               	negf	___awmod@dividend^0,c
  8412   003052  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8413   003054  B0D8               	btfsc	status,0,c
  8414   003056  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8415   003058  0E01               	movlw	1
  8416   00305A  6E06               	movwf	___awmod@sign^0,c
  8417   00305C                     l3034:
  8418   00305C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8419   00305E  EF35  F018         	goto	u2090
  8420   003062  EF33  F018         	goto	u2091
  8421   003066                     u2091:
  8422   003066  EF39  F018         	goto	l3038
  8423   00306A                     u2090:
  8424   00306A  6C03               	negf	___awmod@divisor^0,c
  8425   00306C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8426   00306E  B0D8               	btfsc	status,0,c
  8427   003070  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8428   003072                     l3038:
  8429   003072  5003               	movf	___awmod@divisor^0,w,c
  8430   003074  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8431   003076  B4D8               	btfsc	status,2,c
  8432   003078  EF40  F018         	goto	u2101
  8433   00307C  EF42  F018         	goto	u2100
  8434   003080                     u2101:
  8435   003080  EF66  F018         	goto	l3054
  8436   003084                     u2100:
  8437   003084  0E01               	movlw	1
  8438   003086  6E05               	movwf	___awmod@counter^0,c
  8439   003088  EF4A  F018         	goto	l3044
  8440   00308C                     l3042:
  8441   00308C  90D8               	bcf	status,0,c
  8442   00308E  3603               	rlcf	___awmod@divisor^0,f,c
  8443   003090  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8444   003092  2A05               	incf	___awmod@counter^0,f,c
  8445   003094                     l3044:
  8446   003094  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8447   003096  EF4F  F018         	goto	u2111
  8448   00309A  EF51  F018         	goto	u2110
  8449   00309E                     u2111:
  8450   00309E  EF46  F018         	goto	l3042
  8451   0030A2                     u2110:
  8452   0030A2                     l3046:
  8453   0030A2  5003               	movf	___awmod@divisor^0,w,c
  8454   0030A4  5C01               	subwf	___awmod@dividend^0,w,c
  8455   0030A6  5004               	movf	(___awmod@divisor+1)^0,w,c
  8456   0030A8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8457   0030AA  A0D8               	btfss	status,0,c
  8458   0030AC  EF5A  F018         	goto	u2121
  8459   0030B0  EF5C  F018         	goto	u2120
  8460   0030B4                     u2121:
  8461   0030B4  EF60  F018         	goto	l3050
  8462   0030B8                     u2120:
  8463   0030B8  5003               	movf	___awmod@divisor^0,w,c
  8464   0030BA  5E01               	subwf	___awmod@dividend^0,f,c
  8465   0030BC  5004               	movf	(___awmod@divisor+1)^0,w,c
  8466   0030BE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8467   0030C0                     l3050:
  8468   0030C0  90D8               	bcf	status,0,c
  8469   0030C2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8470   0030C4  3203               	rrcf	___awmod@divisor^0,f,c
  8471   0030C6  2E05               	decfsz	___awmod@counter^0,f,c
  8472   0030C8  EF51  F018         	goto	l3046
  8473   0030CC                     l3054:
  8474   0030CC  5006               	movf	___awmod@sign^0,w,c
  8475   0030CE  B4D8               	btfsc	status,2,c
  8476   0030D0  EF6C  F018         	goto	u2131
  8477   0030D4  EF6E  F018         	goto	u2130
  8478   0030D8                     u2131:
  8479   0030D8  EF72  F018         	goto	l3058
  8480   0030DC                     u2130:
  8481   0030DC  6C01               	negf	___awmod@dividend^0,c
  8482   0030DE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8483   0030E0  B0D8               	btfsc	status,0,c
  8484   0030E2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8485   0030E4                     l3058:
  8486   0030E4  C001  F001         	movff	___awmod@dividend,?___awmod
  8487   0030E8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8488   0030EC  0012               	return		;funcret
  8489   0030EE                     __end_of___awmod:
  8490                           	callstack 0
  8491                           
  8492 ;; *************** function ___awdiv *****************
  8493 ;; Defined at:
  8494 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  dividend        2    0[COMRAM] int 
  8497 ;;  divisor         2    2[COMRAM] int 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  quotient        2    6[COMRAM] int 
  8500 ;;  sign            1    5[COMRAM] unsigned char 
  8501 ;;  counter         1    4[COMRAM] unsigned char 
  8502 ;; Return value:  Size  Location     Type
  8503 ;;                  2    0[COMRAM] int 
  8504 ;; Registers used:
  8505 ;;		wreg, status,2, status,0
  8506 ;; Tracked objects:
  8507 ;;		On entry : 0/0
  8508 ;;		On exit  : 0/0
  8509 ;;		Unchanged: 0/0
  8510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8515 ;;Total ram usage:        8 bytes
  8516 ;; Hardware stack levels used: 1
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_dtoa
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text43
  8525   002F7A                     __ptext43:
  8526                           	callstack 0
  8527   002F7A                     ___awdiv:
  8528                           	callstack 24
  8529   002F7A  0E00               	movlw	0
  8530   002F7C  6E06               	movwf	___awdiv@sign^0,c
  8531   002F7E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8532   002F80  EFC6  F017         	goto	u2020
  8533   002F84  EFC4  F017         	goto	u2021
  8534   002F88                     u2021:
  8535   002F88  EFCC  F017         	goto	l2990
  8536   002F8C                     u2020:
  8537   002F8C  6C03               	negf	___awdiv@divisor^0,c
  8538   002F8E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8539   002F90  B0D8               	btfsc	status,0,c
  8540   002F92  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8541   002F94  0E01               	movlw	1
  8542   002F96  6E06               	movwf	___awdiv@sign^0,c
  8543   002F98                     l2990:
  8544   002F98  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8545   002F9A  EFD3  F017         	goto	u2030
  8546   002F9E  EFD1  F017         	goto	u2031
  8547   002FA2                     u2031:
  8548   002FA2  EFD9  F017         	goto	l2996
  8549   002FA6                     u2030:
  8550   002FA6  6C01               	negf	___awdiv@dividend^0,c
  8551   002FA8  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8552   002FAA  B0D8               	btfsc	status,0,c
  8553   002FAC  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8554   002FAE  0E01               	movlw	1
  8555   002FB0  1A06               	xorwf	___awdiv@sign^0,f,c
  8556   002FB2                     l2996:
  8557   002FB2  0E00               	movlw	0
  8558   002FB4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8559   002FB6  0E00               	movlw	0
  8560   002FB8  6E07               	movwf	___awdiv@quotient^0,c
  8561   002FBA  5003               	movf	___awdiv@divisor^0,w,c
  8562   002FBC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8563   002FBE  B4D8               	btfsc	status,2,c
  8564   002FC0  EFE4  F017         	goto	u2041
  8565   002FC4  EFE6  F017         	goto	u2040
  8566   002FC8                     u2041:
  8567   002FC8  EF0E  F018         	goto	l3018
  8568   002FCC                     u2040:
  8569   002FCC  0E01               	movlw	1
  8570   002FCE  6E05               	movwf	___awdiv@counter^0,c
  8571   002FD0  EFEE  F017         	goto	l3004
  8572   002FD4                     l3002:
  8573   002FD4  90D8               	bcf	status,0,c
  8574   002FD6  3603               	rlcf	___awdiv@divisor^0,f,c
  8575   002FD8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8576   002FDA  2A05               	incf	___awdiv@counter^0,f,c
  8577   002FDC                     l3004:
  8578   002FDC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8579   002FDE  EFF3  F017         	goto	u2051
  8580   002FE2  EFF5  F017         	goto	u2050
  8581   002FE6                     u2051:
  8582   002FE6  EFEA  F017         	goto	l3002
  8583   002FEA                     u2050:
  8584   002FEA                     l3006:
  8585   002FEA  90D8               	bcf	status,0,c
  8586   002FEC  3607               	rlcf	___awdiv@quotient^0,f,c
  8587   002FEE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8588   002FF0  5003               	movf	___awdiv@divisor^0,w,c
  8589   002FF2  5C01               	subwf	___awdiv@dividend^0,w,c
  8590   002FF4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8591   002FF6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8592   002FF8  A0D8               	btfss	status,0,c
  8593   002FFA  EF01  F018         	goto	u2061
  8594   002FFE  EF03  F018         	goto	u2060
  8595   003002                     u2061:
  8596   003002  EF08  F018         	goto	l3014
  8597   003006                     u2060:
  8598   003006  5003               	movf	___awdiv@divisor^0,w,c
  8599   003008  5E01               	subwf	___awdiv@dividend^0,f,c
  8600   00300A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8601   00300C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8602   00300E  8007               	bsf	___awdiv@quotient^0,0,c
  8603   003010                     l3014:
  8604   003010  90D8               	bcf	status,0,c
  8605   003012  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8606   003014  3203               	rrcf	___awdiv@divisor^0,f,c
  8607   003016  2E05               	decfsz	___awdiv@counter^0,f,c
  8608   003018  EFF5  F017         	goto	l3006
  8609   00301C                     l3018:
  8610   00301C  5006               	movf	___awdiv@sign^0,w,c
  8611   00301E  B4D8               	btfsc	status,2,c
  8612   003020  EF14  F018         	goto	u2071
  8613   003024  EF16  F018         	goto	u2070
  8614   003028                     u2071:
  8615   003028  EF1A  F018         	goto	l3022
  8616   00302C                     u2070:
  8617   00302C  6C07               	negf	___awdiv@quotient^0,c
  8618   00302E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8619   003030  B0D8               	btfsc	status,0,c
  8620   003032  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8621   003034                     l3022:
  8622   003034  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8623   003038  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8624   00303C  0012               	return		;funcret
  8625   00303E                     __end_of___awdiv:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _sendStringSerial4 *****************
  8629 ;; Defined at:
  8630 ;;		line 41 in file "serial.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  string          1    1[COMRAM] PTR unsigned char 
  8633 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), convert_rgb2hue@c_char(20), calibration_routine@cal_state(2
      +0), 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;		None
  8636 ;; Return value:  Size  Location     Type
  8637 ;;                  1    wreg      void 
  8638 ;; Registers used:
  8639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8640 ;; Tracked objects:
  8641 ;;		On entry : 0/0
  8642 ;;		On exit  : 0/0
  8643 ;;		Unchanged: 0/0
  8644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8645 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;Total ram usage:        1 bytes
  8650 ;; Hardware stack levels used: 1
  8651 ;; Hardware stack levels required when called: 1
  8652 ;; This function calls:
  8653 ;;		_sendCharSerial4
  8654 ;; This function is called by:
  8655 ;;		_calibration_routine
  8656 ;;		_convert_rgb2hue
  8657 ;;		_send2USART
  8658 ;;		_sendAllReadings
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           	psect	text44
  8663   003B44                     __ptext44:
  8664                           	callstack 0
  8665   003B44                     _sendStringSerial4:
  8666                           	callstack 27
  8667   003B44                     
  8668                           ;serial.c: 44:     while(*string != 0){
  8669   003B44  EFAF  F01D         	goto	l3598
  8670   003B48                     l3592:
  8671                           
  8672                           ;serial.c: 46:   sendCharSerial4(*string++);
  8673   003B48  5002               	movf	sendStringSerial4@string^0,w,c
  8674   003B4A  6ED9               	movwf	fsr2l,c
  8675   003B4C  6ADA               	clrf	fsr2h,c
  8676   003B4E  50DF               	movf	indf2,w,c
  8677   003B50  EC4A  F01E         	call	_sendCharSerial4
  8678   003B54  2A02               	incf	sendStringSerial4@string^0,f,c
  8679   003B56                     
  8680                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  8681   003B56  0E6A               	movlw	106
  8682   003B58                     u4517:
  8683   003B58  2EE8               	decfsz	wreg,f,c
  8684   003B5A  D7FE               	bra	u4517
  8685   003B5C  D000               	nop2	
  8686   003B5E                     l3598:
  8687                           
  8688                           ;serial.c: 44:     while(*string != 0){
  8689   003B5E  5002               	movf	sendStringSerial4@string^0,w,c
  8690   003B60  6ED9               	movwf	fsr2l,c
  8691   003B62  6ADA               	clrf	fsr2h,c
  8692   003B64  50DF               	movf	indf2,w,c
  8693   003B66  A4D8               	btfss	status,2,c
  8694   003B68  EFB8  F01D         	goto	u2931
  8695   003B6C  EFBA  F01D         	goto	u2930
  8696   003B70                     u2931:
  8697   003B70  EFA4  F01D         	goto	l3592
  8698   003B74                     u2930:
  8699   003B74  0012               	return		;funcret
  8700   003B76                     __end_of_sendStringSerial4:
  8701                           	callstack 0
  8702                           
  8703 ;; *************** function _sendCharSerial4 *****************
  8704 ;; Defined at:
  8705 ;;		line 35 in file "serial.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  charToSend      1    wreg     unsigned char 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  charToSend      1    0[COMRAM] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;Total ram usage:        1 bytes
  8724 ;; Hardware stack levels used: 1
  8725 ;; This function calls:
  8726 ;;		Nothing
  8727 ;; This function is called by:
  8728 ;;		_sendStringSerial4
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text45
  8733   003C94                     __ptext45:
  8734                           	callstack 0
  8735   003C94                     _sendCharSerial4:
  8736                           	callstack 27
  8737                           
  8738                           ;incstack = 0
  8739                           ;sendCharSerial4@charToSend stored from wreg
  8740   003C94  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8741   003C96                     l489:
  8742   003C96  010E               	movlb	14	; () banked
  8743   003C98  A537               	btfss	55,2,b	;volatile
  8744   003C9A  EF51  F01E         	goto	u2501
  8745   003C9E  EF53  F01E         	goto	u2500
  8746   003CA2                     u2501:
  8747   003CA2  EF4B  F01E         	goto	l489
  8748   003CA6                     u2500:
  8749   003CA6                     
  8750                           ; BSR set to: 14
  8751                           ;serial.c: 37:     TX4REG = charToSend;
  8752   003CA6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8753   003CAA                     
  8754                           ; BSR set to: 14
  8755   003CAA  0012               	return		;funcret
  8756   003CAC                     __end_of_sendCharSerial4:
  8757                           	callstack 0
  8758                           
  8759 ;; *************** function _color_read_Red *****************
  8760 ;; Defined at:
  8761 ;;		line 32 in file "color.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  tmp             2    9[COMRAM] unsigned int 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  2    4[COMRAM] unsigned int 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0, cstack
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8778 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8779 ;;Total ram usage:        7 bytes
  8780 ;; Hardware stack levels used: 1
  8781 ;; Hardware stack levels required when called: 2
  8782 ;; This function calls:
  8783 ;;		_I2C_2_Master_Read
  8784 ;;		_I2C_2_Master_RepStart
  8785 ;;		_I2C_2_Master_Start
  8786 ;;		_I2C_2_Master_Stop
  8787 ;;		_I2C_2_Master_Write
  8788 ;; This function is called by:
  8789 ;;		_reading_hue
  8790 ;;		_calibration_routine
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text46
  8795   00375C                     __ptext46:
  8796                           	callstack 0
  8797   00375C                     _color_read_Red:
  8798                           	callstack 27
  8799   00375C                     
  8800                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  8801   00375C  EC61  F01E         	call	_I2C_2_Master_Start	;wreg free
  8802                           
  8803                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  8804   003760  0E52               	movlw	82
  8805   003762  EC56  F01E         	call	_I2C_2_Master_Write
  8806                           
  8807                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  8808   003766  0EB6               	movlw	182
  8809   003768  EC56  F01E         	call	_I2C_2_Master_Write
  8810                           
  8811                           ;color.c: 38:  I2C_2_Master_RepStart();
  8812   00376C  EC66  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  8813                           
  8814                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  8815   003770  0E53               	movlw	83
  8816   003772  EC56  F01E         	call	_I2C_2_Master_Write
  8817                           
  8818                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  8819   003776  0E01               	movlw	1
  8820   003778  EC92  F01C         	call	_I2C_2_Master_Read
  8821   00377C  6E07               	movwf	??_color_read_Red^0,c
  8822   00377E  5007               	movf	??_color_read_Red^0,w,c
  8823   003780  6E0A               	movwf	color_read_Red@tmp^0,c
  8824   003782  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8825                           
  8826                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8827   003784  0E00               	movlw	0
  8828   003786  EC92  F01C         	call	_I2C_2_Master_Read
  8829   00378A  6E07               	movwf	??_color_read_Red^0,c
  8830   00378C  5007               	movf	??_color_read_Red^0,w,c
  8831   00378E  6E09               	movwf	(??_color_read_Red+2)^0,c
  8832   003790  6A08               	clrf	(??_color_read_Red+1)^0,c
  8833   003792  500A               	movf	color_read_Red@tmp^0,w,c
  8834   003794  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8835   003796  6E0A               	movwf	color_read_Red@tmp^0,c
  8836   003798  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8837   00379A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8838   00379C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8839                           
  8840                           ;color.c: 42:  I2C_2_Master_Stop();
  8841   00379E  EC5C  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8842   0037A2                     
  8843                           ;color.c: 43:  return tmp;
  8844   0037A2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8845   0037A6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8846   0037AA  0012               	return		;funcret
  8847   0037AC                     __end_of_color_read_Red:
  8848                           	callstack 0
  8849                           
  8850 ;; *************** function _color_read_Green *****************
  8851 ;; Defined at:
  8852 ;;		line 46 in file "color.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;		None
  8855 ;; Auto vars:     Size  Location     Type
  8856 ;;  tmp             2    9[COMRAM] unsigned int 
  8857 ;; Return value:  Size  Location     Type
  8858 ;;                  2    4[COMRAM] unsigned int 
  8859 ;; Registers used:
  8860 ;;		wreg, status,2, status,0, cstack
  8861 ;; Tracked objects:
  8862 ;;		On entry : 0/0
  8863 ;;		On exit  : 0/0
  8864 ;;		Unchanged: 0/0
  8865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;Total ram usage:        7 bytes
  8871 ;; Hardware stack levels used: 1
  8872 ;; Hardware stack levels required when called: 2
  8873 ;; This function calls:
  8874 ;;		_I2C_2_Master_Read
  8875 ;;		_I2C_2_Master_RepStart
  8876 ;;		_I2C_2_Master_Start
  8877 ;;		_I2C_2_Master_Stop
  8878 ;;		_I2C_2_Master_Write
  8879 ;; This function is called by:
  8880 ;;		_reading_hue
  8881 ;;		_calibration_routine
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text47
  8886   0037AC                     __ptext47:
  8887                           	callstack 0
  8888   0037AC                     _color_read_Green:
  8889                           	callstack 27
  8890   0037AC                     
  8891                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  8892   0037AC  EC61  F01E         	call	_I2C_2_Master_Start	;wreg free
  8893                           
  8894                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  8895   0037B0  0E52               	movlw	82
  8896   0037B2  EC56  F01E         	call	_I2C_2_Master_Write
  8897                           
  8898                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  8899   0037B6  0EB8               	movlw	184
  8900   0037B8  EC56  F01E         	call	_I2C_2_Master_Write
  8901                           
  8902                           ;color.c: 52:  I2C_2_Master_RepStart();
  8903   0037BC  EC66  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  8904                           
  8905                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  8906   0037C0  0E53               	movlw	83
  8907   0037C2  EC56  F01E         	call	_I2C_2_Master_Write
  8908                           
  8909                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  8910   0037C6  0E01               	movlw	1
  8911   0037C8  EC92  F01C         	call	_I2C_2_Master_Read
  8912   0037CC  6E07               	movwf	??_color_read_Green^0,c
  8913   0037CE  5007               	movf	??_color_read_Green^0,w,c
  8914   0037D0  6E0A               	movwf	color_read_Green@tmp^0,c
  8915   0037D2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8916                           
  8917                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8918   0037D4  0E00               	movlw	0
  8919   0037D6  EC92  F01C         	call	_I2C_2_Master_Read
  8920   0037DA  6E07               	movwf	??_color_read_Green^0,c
  8921   0037DC  5007               	movf	??_color_read_Green^0,w,c
  8922   0037DE  6E09               	movwf	(??_color_read_Green+2)^0,c
  8923   0037E0  6A08               	clrf	(??_color_read_Green+1)^0,c
  8924   0037E2  500A               	movf	color_read_Green@tmp^0,w,c
  8925   0037E4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  8926   0037E6  6E0A               	movwf	color_read_Green@tmp^0,c
  8927   0037E8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  8928   0037EA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  8929   0037EC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  8930                           
  8931                           ;color.c: 56:  I2C_2_Master_Stop();
  8932   0037EE  EC5C  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8933   0037F2                     
  8934                           ;color.c: 57:  return tmp;
  8935   0037F2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  8936   0037F6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8937   0037FA  0012               	return		;funcret
  8938   0037FC                     __end_of_color_read_Green:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function _color_read_Clear *****************
  8942 ;; Defined at:
  8943 ;;		line 75 in file "color.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;		None
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  tmp             2    9[COMRAM] unsigned int 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  2    4[COMRAM] unsigned int 
  8950 ;; Registers used:
  8951 ;;		wreg, status,2, status,0, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8961 ;;Total ram usage:        7 bytes
  8962 ;; Hardware stack levels used: 1
  8963 ;; Hardware stack levels required when called: 2
  8964 ;; This function calls:
  8965 ;;		_I2C_2_Master_Read
  8966 ;;		_I2C_2_Master_RepStart
  8967 ;;		_I2C_2_Master_Start
  8968 ;;		_I2C_2_Master_Stop
  8969 ;;		_I2C_2_Master_Write
  8970 ;; This function is called by:
  8971 ;;		_reading_hue
  8972 ;;		_calibration_routine
  8973 ;;		_main
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           	psect	text48
  8978   0037FC                     __ptext48:
  8979                           	callstack 0
  8980   0037FC                     _color_read_Clear:
  8981                           	callstack 27
  8982   0037FC                     
  8983                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  8984   0037FC  EC61  F01E         	call	_I2C_2_Master_Start	;wreg free
  8985                           
  8986                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  8987   003800  0E52               	movlw	82
  8988   003802  EC56  F01E         	call	_I2C_2_Master_Write
  8989                           
  8990                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  8991   003806  0EB4               	movlw	180
  8992   003808  EC56  F01E         	call	_I2C_2_Master_Write
  8993                           
  8994                           ;color.c: 81:  I2C_2_Master_RepStart();
  8995   00380C  EC66  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  8996                           
  8997                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  8998   003810  0E53               	movlw	83
  8999   003812  EC56  F01E         	call	_I2C_2_Master_Write
  9000                           
  9001                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  9002   003816  0E01               	movlw	1
  9003   003818  EC92  F01C         	call	_I2C_2_Master_Read
  9004   00381C  6E07               	movwf	??_color_read_Clear^0,c
  9005   00381E  5007               	movf	??_color_read_Clear^0,w,c
  9006   003820  6E0A               	movwf	color_read_Clear@tmp^0,c
  9007   003822  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9008                           
  9009                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9010   003824  0E00               	movlw	0
  9011   003826  EC92  F01C         	call	_I2C_2_Master_Read
  9012   00382A  6E07               	movwf	??_color_read_Clear^0,c
  9013   00382C  5007               	movf	??_color_read_Clear^0,w,c
  9014   00382E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9015   003830  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9016   003832  500A               	movf	color_read_Clear@tmp^0,w,c
  9017   003834  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9018   003836  6E0A               	movwf	color_read_Clear@tmp^0,c
  9019   003838  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9020   00383A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9021   00383C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9022                           
  9023                           ;color.c: 85:  I2C_2_Master_Stop();
  9024   00383E  EC5C  F01E         	call	_I2C_2_Master_Stop	;wreg free
  9025   003842                     
  9026                           ;color.c: 86:  return tmp;
  9027   003842  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9028   003846  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9029   00384A  0012               	return		;funcret
  9030   00384C                     __end_of_color_read_Clear:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function _color_read_Blue *****************
  9034 ;; Defined at:
  9035 ;;		line 60 in file "color.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;		None
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  tmp             2    9[COMRAM] unsigned int 
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  2    4[COMRAM] unsigned int 
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9051 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9052 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9053 ;;Total ram usage:        7 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 2
  9056 ;; This function calls:
  9057 ;;		_I2C_2_Master_Read
  9058 ;;		_I2C_2_Master_RepStart
  9059 ;;		_I2C_2_Master_Start
  9060 ;;		_I2C_2_Master_Stop
  9061 ;;		_I2C_2_Master_Write
  9062 ;; This function is called by:
  9063 ;;		_reading_hue
  9064 ;;		_calibration_routine
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           	psect	text49
  9069   00384C                     __ptext49:
  9070                           	callstack 0
  9071   00384C                     _color_read_Blue:
  9072                           	callstack 27
  9073   00384C                     
  9074                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  9075   00384C  EC61  F01E         	call	_I2C_2_Master_Start	;wreg free
  9076                           
  9077                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  9078   003850  0E52               	movlw	82
  9079   003852  EC56  F01E         	call	_I2C_2_Master_Write
  9080                           
  9081                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  9082   003856  0EBA               	movlw	186
  9083   003858  EC56  F01E         	call	_I2C_2_Master_Write
  9084                           
  9085                           ;color.c: 66:  I2C_2_Master_RepStart();
  9086   00385C  EC66  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  9087                           
  9088                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  9089   003860  0E53               	movlw	83
  9090   003862  EC56  F01E         	call	_I2C_2_Master_Write
  9091                           
  9092                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  9093   003866  0E01               	movlw	1
  9094   003868  EC92  F01C         	call	_I2C_2_Master_Read
  9095   00386C  6E07               	movwf	??_color_read_Blue^0,c
  9096   00386E  5007               	movf	??_color_read_Blue^0,w,c
  9097   003870  6E0A               	movwf	color_read_Blue@tmp^0,c
  9098   003872  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9099                           
  9100                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9101   003874  0E00               	movlw	0
  9102   003876  EC92  F01C         	call	_I2C_2_Master_Read
  9103   00387A  6E07               	movwf	??_color_read_Blue^0,c
  9104   00387C  5007               	movf	??_color_read_Blue^0,w,c
  9105   00387E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9106   003880  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9107   003882  500A               	movf	color_read_Blue@tmp^0,w,c
  9108   003884  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9109   003886  6E0A               	movwf	color_read_Blue@tmp^0,c
  9110   003888  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9111   00388A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9112   00388C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9113                           
  9114                           ;color.c: 70:  I2C_2_Master_Stop();
  9115   00388E  EC5C  F01E         	call	_I2C_2_Master_Stop	;wreg free
  9116   003892                     
  9117                           ;color.c: 71:  return tmp;
  9118   003892  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9119   003896  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9120   00389A  0012               	return		;funcret
  9121   00389C                     __end_of_color_read_Blue:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _I2C_2_Master_Write *****************
  9125 ;; Defined at:
  9126 ;;		line 45 in file "i2c.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  data_byte       1    wreg     unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  data_byte       1    1[COMRAM] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2, status,0, cstack
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;Total ram usage:        1 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 1
  9147 ;; This function calls:
  9148 ;;		_I2C_2_Master_Idle
  9149 ;; This function is called by:
  9150 ;;		_color_writetoaddr
  9151 ;;		_color_read_Red
  9152 ;;		_color_read_Green
  9153 ;;		_color_read_Blue
  9154 ;;		_color_read_Clear
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text50
  9159   003CAC                     __ptext50:
  9160                           	callstack 0
  9161   003CAC                     _I2C_2_Master_Write:
  9162                           	callstack 27
  9163                           
  9164                           ;incstack = 0
  9165                           ;I2C_2_Master_Write@data_byte stored from wreg
  9166   003CAC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9167   003CAE                     
  9168                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9169   003CAE  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9170   003CB2                     
  9171                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9172   003CB2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9173   003CB6  0012               	return		;funcret
  9174   003CB8                     __end_of_I2C_2_Master_Write:
  9175                           	callstack 0
  9176                           
  9177 ;; *************** function _I2C_2_Master_Stop *****************
  9178 ;; Defined at:
  9179 ;;		line 39 in file "i2c.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;		None
  9182 ;; Auto vars:     Size  Location     Type
  9183 ;;		None
  9184 ;; Return value:  Size  Location     Type
  9185 ;;                  1    wreg      void 
  9186 ;; Registers used:
  9187 ;;		wreg, status,2, status,0, cstack
  9188 ;; Tracked objects:
  9189 ;;		On entry : 0/0
  9190 ;;		On exit  : 0/0
  9191 ;;		Unchanged: 0/0
  9192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;Total ram usage:        0 bytes
  9198 ;; Hardware stack levels used: 1
  9199 ;; Hardware stack levels required when called: 1
  9200 ;; This function calls:
  9201 ;;		_I2C_2_Master_Idle
  9202 ;; This function is called by:
  9203 ;;		_color_writetoaddr
  9204 ;;		_color_read_Red
  9205 ;;		_color_read_Green
  9206 ;;		_color_read_Blue
  9207 ;;		_color_read_Clear
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           	psect	text51
  9212   003CB8                     __ptext51:
  9213                           	callstack 0
  9214   003CB8                     _I2C_2_Master_Stop:
  9215                           	callstack 27
  9216   003CB8                     
  9217                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9218   003CB8  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9219   003CBC                     
  9220                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9221   003CBC  010E               	movlb	14	; () banked
  9222   003CBE  85DA               	bsf	218,2,b	;volatile
  9223   003CC0                     
  9224                           ; BSR set to: 14
  9225   003CC0  0012               	return		;funcret
  9226   003CC2                     __end_of_I2C_2_Master_Stop:
  9227                           	callstack 0
  9228                           
  9229 ;; *************** function _I2C_2_Master_Start *****************
  9230 ;; Defined at:
  9231 ;;		line 27 in file "i2c.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;		None
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;		None
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, status,2, status,0, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;Total ram usage:        0 bytes
  9250 ;; Hardware stack levels used: 1
  9251 ;; Hardware stack levels required when called: 1
  9252 ;; This function calls:
  9253 ;;		_I2C_2_Master_Idle
  9254 ;; This function is called by:
  9255 ;;		_color_writetoaddr
  9256 ;;		_color_read_Red
  9257 ;;		_color_read_Green
  9258 ;;		_color_read_Blue
  9259 ;;		_color_read_Clear
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text52
  9264   003CC2                     __ptext52:
  9265                           	callstack 0
  9266   003CC2                     _I2C_2_Master_Start:
  9267                           	callstack 27
  9268   003CC2                     
  9269                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9270   003CC2  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9271   003CC6                     
  9272                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9273   003CC6  010E               	movlb	14	; () banked
  9274   003CC8  81DA               	bsf	218,0,b	;volatile
  9275   003CCA                     
  9276                           ; BSR set to: 14
  9277   003CCA  0012               	return		;funcret
  9278   003CCC                     __end_of_I2C_2_Master_Start:
  9279                           	callstack 0
  9280                           
  9281 ;; *************** function _I2C_2_Master_RepStart *****************
  9282 ;; Defined at:
  9283 ;;		line 33 in file "i2c.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      void 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;Total ram usage:        0 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; Hardware stack levels required when called: 1
  9304 ;; This function calls:
  9305 ;;		_I2C_2_Master_Idle
  9306 ;; This function is called by:
  9307 ;;		_color_read_Red
  9308 ;;		_color_read_Green
  9309 ;;		_color_read_Blue
  9310 ;;		_color_read_Clear
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text53
  9315   003CCC                     __ptext53:
  9316                           	callstack 0
  9317   003CCC                     _I2C_2_Master_RepStart:
  9318                           	callstack 27
  9319   003CCC                     
  9320                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9321   003CCC  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9322   003CD0                     
  9323                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9324   003CD0  010E               	movlb	14	; () banked
  9325   003CD2  83DA               	bsf	218,1,b	;volatile
  9326   003CD4                     
  9327                           ; BSR set to: 14
  9328   003CD4  0012               	return		;funcret
  9329   003CD6                     __end_of_I2C_2_Master_RepStart:
  9330                           	callstack 0
  9331                           
  9332 ;; *************** function _I2C_2_Master_Read *****************
  9333 ;; Defined at:
  9334 ;;		line 51 in file "i2c.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  ack             1    wreg     unsigned char 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  ack             1    2[COMRAM] unsigned char 
  9339 ;;  tmp             1    3[COMRAM] unsigned char 
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      unsigned char 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2, status,0, cstack
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9352 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9353 ;;Total ram usage:        3 bytes
  9354 ;; Hardware stack levels used: 1
  9355 ;; Hardware stack levels required when called: 1
  9356 ;; This function calls:
  9357 ;;		_I2C_2_Master_Idle
  9358 ;; This function is called by:
  9359 ;;		_color_read_Red
  9360 ;;		_color_read_Green
  9361 ;;		_color_read_Blue
  9362 ;;		_color_read_Clear
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text54
  9367   003924                     __ptext54:
  9368                           	callstack 0
  9369   003924                     _I2C_2_Master_Read:
  9370                           	callstack 27
  9371                           
  9372                           ; BSR set to: 14
  9373                           ;incstack = 0
  9374                           ;I2C_2_Master_Read@ack stored from wreg
  9375   003924  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9376   003926                     
  9377                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9378   003926  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9379   00392A                     
  9380                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9381   00392A  010E               	movlb	14	; () banked
  9382   00392C  87DA               	bsf	218,3,b	;volatile
  9383                           
  9384                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9385   00392E  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9386   003932                     
  9387                           ;i2c.c: 57:   tmp = SSP2BUF;
  9388   003932  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9389                           
  9390                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9391   003936  ECE8  F01D         	call	_I2C_2_Master_Idle	;wreg free
  9392   00393A                     
  9393                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9394   00393A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9395   00393C  B4D8               	btfsc	status,2,c
  9396   00393E  EFA3  F01C         	goto	u2911
  9397   003942  EFA7  F01C         	goto	u2910
  9398   003946                     u2911:
  9399   003946  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9400   003948  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9401   00394A  EFA8  F01C         	goto	u2928
  9402   00394E                     u2910:
  9403   00394E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9404   003950                     u2928:
  9405   003950  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9406   003952  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9407   003954  010E               	movlb	14	; () banked
  9408   003956  51DA               	movf	218,w,b	;volatile
  9409   003958  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9410   00395A  0BDF               	andlw	-33
  9411   00395C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9412   00395E  6FDA               	movwf	218,b	;volatile
  9413   003960                     
  9414                           ; BSR set to: 14
  9415                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9416   003960  89DA               	bsf	218,4,b	;volatile
  9417   003962                     
  9418                           ; BSR set to: 14
  9419                           ;i2c.c: 61:   return tmp;
  9420   003962  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9421   003964                     
  9422                           ; BSR set to: 14
  9423   003964  0012               	return		;funcret
  9424   003966                     __end_of_I2C_2_Master_Read:
  9425                           	callstack 0
  9426                           
  9427 ;; *************** function _I2C_2_Master_Idle *****************
  9428 ;; Defined at:
  9429 ;;		line 22 in file "i2c.c"
  9430 ;; Parameters:    Size  Location     Type
  9431 ;;		None
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;		None
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9447 ;;Total ram usage:        1 bytes
  9448 ;; Hardware stack levels used: 1
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_I2C_2_Master_Start
  9453 ;;		_I2C_2_Master_RepStart
  9454 ;;		_I2C_2_Master_Stop
  9455 ;;		_I2C_2_Master_Write
  9456 ;;		_I2C_2_Master_Read
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           	psect	text55
  9461   003BD0                     __ptext55:
  9462                           	callstack 0
  9463   003BD0                     _I2C_2_Master_Idle:
  9464                           	callstack 27
  9465   003BD0                     l169:
  9466   003BD0  010E               	movlb	14	; () banked
  9467   003BD2  B5D8               	btfsc	216,2,b	;volatile
  9468   003BD4  EFEE  F01D         	goto	u2411
  9469   003BD8  EFF0  F01D         	goto	u2410
  9470   003BDC                     u2411:
  9471   003BDC  EFE8  F01D         	goto	l169
  9472   003BE0                     u2410:
  9473   003BE0                     
  9474                           ; BSR set to: 14
  9475   003BE0  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9476   003BE4  0E1F               	movlw	31
  9477   003BE6  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9478   003BE8  A4D8               	btfss	status,2,c
  9479   003BEA  EFF9  F01D         	goto	u2421
  9480   003BEE  EFFB  F01D         	goto	u2420
  9481   003BF2                     u2421:
  9482   003BF2  EFE8  F01D         	goto	l169
  9483   003BF6                     u2420:
  9484   003BF6                     
  9485                           ; BSR set to: 14
  9486   003BF6  0012               	return		;funcret
  9487   003BF8                     __end_of_I2C_2_Master_Idle:
  9488                           	callstack 0
  9489                           
  9490 ;; *************** function _ADC_init *****************
  9491 ;; Defined at:
  9492 ;;		line 9 in file "ADC.c"
  9493 ;; Parameters:    Size  Location     Type
  9494 ;;		None
  9495 ;; Auto vars:     Size  Location     Type
  9496 ;;		None
  9497 ;; Return value:  Size  Location     Type
  9498 ;;                  1    wreg      void 
  9499 ;; Registers used:
  9500 ;;		wreg, status,2
  9501 ;; Tracked objects:
  9502 ;;		On entry : 0/0
  9503 ;;		On exit  : 0/0
  9504 ;;		Unchanged: 0/0
  9505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;Total ram usage:        0 bytes
  9511 ;; Hardware stack levels used: 1
  9512 ;; This function calls:
  9513 ;;		Nothing
  9514 ;; This function is called by:
  9515 ;;		_main
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           	psect	text56
  9520   003C7A                     __ptext56:
  9521                           	callstack 0
  9522   003C7A                     _ADC_init:
  9523                           	callstack 30
  9524   003C7A                     
  9525                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  9526   003C7A  8C86               	bsf	134,6,c	;volatile
  9527                           
  9528                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  9529   003C7C  010E               	movlb	14	; () banked
  9530   003C7E  8DB4               	bsf	180,6,b	;volatile
  9531                           
  9532                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  9533   003C80  010F               	movlb	15	; () banked
  9534   003C82  9958               	bcf	88,4,b	;volatile
  9535   003C84                     
  9536                           ; BSR set to: 15
  9537                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  9538   003C84  0EFC               	movlw	-4
  9539   003C86  1758               	andwf	88,f,b	;volatile
  9540                           
  9541                           ;ADC.c: 17:     ADPCH=0b101110;
  9542   003C88  0E2E               	movlw	46
  9543   003C8A  6F5F               	movwf	95,b	;volatile
  9544   003C8C                     
  9545                           ; BSR set to: 15
  9546                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  9547   003C8C  9460               	bcf	96,2,c	;volatile
  9548   003C8E                     
  9549                           ; BSR set to: 15
  9550                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  9551   003C8E  8860               	bsf	96,4,c	;volatile
  9552   003C90                     
  9553                           ; BSR set to: 15
  9554                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  9555   003C90  8E60               	bsf	96,7,c	;volatile
  9556   003C92                     
  9557                           ; BSR set to: 15
  9558   003C92  0012               	return		;funcret
  9559   003C94                     __end_of_ADC_init:
  9560                           	callstack 0
  9561                           
  9562                           	psect	rparam
  9563   000000                     
  9564                           	psect	config
  9565                           
  9566                           ;Config register CONFIG1L @ 0x300000
  9567                           ;	External Oscillator mode Selection bits
  9568                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9569                           ;	Power-up default value for COSC bits
  9570                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9571   300000                     	org	3145728
  9572   300000  AA                 	db	170
  9573                           
  9574                           ;Config register CONFIG1H @ 0x300001
  9575                           ;	unspecified, using default values
  9576                           ;	Clock Out Enable bit
  9577                           ;	CLKOUTEN = 0x1, unprogrammed default
  9578                           ;	Clock Switch Enable bit
  9579                           ;	CSWEN = 0x1, unprogrammed default
  9580                           ;	Fail-Safe Clock Monitor Enable bit
  9581                           ;	FCMEN = 0x1, unprogrammed default
  9582   300001                     	org	3145729
  9583   300001  FF                 	db	255
  9584                           
  9585                           ;Config register CONFIG3L @ 0x300004
  9586                           ;	WDT Period Select bits
  9587                           ;	WDTCPS = 0x1F, unprogrammed default
  9588                           ;	WDT operating mode
  9589                           ;	WDTE = OFF, WDT Disabled
  9590   300004                     	org	3145732
  9591   300004  9F                 	db	159
  9592                           
  9593                           ;Config register CONFIG3H @ 0x300005
  9594                           ;	unspecified, using default values
  9595                           ;	WDT Window Select bits
  9596                           ;	WDTCWS = 0x7, unprogrammed default
  9597                           ;	WDT input clock selector
  9598                           ;	WDTCCS = 0x7, unprogrammed default
  9599   300005                     	org	3145733
  9600   300005  FF                 	db	255
  9601                           tosu	equ	0xFFF
  9602                           tosh	equ	0xFFE
  9603                           tosl	equ	0xFFD
  9604                           stkptr	equ	0xFFC
  9605                           pclatu	equ	0xFFB
  9606                           pclath	equ	0xFFA
  9607                           pcl	equ	0xFF9
  9608                           tblptru	equ	0xFF8
  9609                           tblptrh	equ	0xFF7
  9610                           tblptrl	equ	0xFF6
  9611                           tablat	equ	0xFF5
  9612                           prodh	equ	0xFF4
  9613                           prodl	equ	0xFF3
  9614                           indf0	equ	0xFEF
  9615                           postinc0	equ	0xFEE
  9616                           postdec0	equ	0xFED
  9617                           preinc0	equ	0xFEC
  9618                           plusw0	equ	0xFEB
  9619                           fsr0h	equ	0xFEA
  9620                           fsr0l	equ	0xFE9
  9621                           wreg	equ	0xFE8
  9622                           indf1	equ	0xFE7
  9623                           postinc1	equ	0xFE6
  9624                           postdec1	equ	0xFE5
  9625                           preinc1	equ	0xFE4
  9626                           plusw1	equ	0xFE3
  9627                           fsr1h	equ	0xFE2
  9628                           fsr1l	equ	0xFE1
  9629                           bsr	equ	0xFE0
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           preinc2	equ	0xFDC
  9634                           plusw2	equ	0xFDB
  9635                           fsr2h	equ	0xFDA
  9636                           fsr2l	equ	0xFD9
  9637                           status	equ	0xFD8

Data Sizes:
    Strings     184
    Constant    0
    Data        1
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160    116     156
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    backHalf@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    backHalf@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    calibration_routine@cCal	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    left90@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    left90@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    moveGreen@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    moveGreen@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    moveRed@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    moveRed@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    reading_hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    right90@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    right90@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    S2554$buffer	PTR unsigned char  size(2) Largest target is 0

    S2554$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), convert_rgb2hue@c_char(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    setMotorPWM@m	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), motorR(BANK0[9]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), convert_rgb2hue@c_char(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    stop@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(1) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(1) Largest target is 11
		 -> motorR(BANK0[9]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_calibration_routine
    _reading_hue->_convert_rgb2hue
    _send2USART->_sprintf
    _convert_rgb2hue->_sprintf
    ___flsub->___fladd
    ___fldiv->___flsub
    _fullSpeedAhead->_setMotorPWM
    _decision->_moveGreen
    _decision->_moveRed
    _moveRed->_backHalf
    _moveRed->_right90
    _right90->_turnRight
    _turnRight->_setMotorPWM
    _moveGreen->_backHalf
    _moveGreen->_left90
    _left90->_turnLeft
    _turnLeft->_setMotorPWM
    _backHalf->_fullSpeedBack
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _reading_hue->_convert_rgb2hue

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   94520
                                            100 BANK0     16    16      0
                           _ADC_init
                            ___fldiv
                             ___flge
                           ___xxtofl
                _calibration_routine
                   _color_click_init
                   _color_read_Clear
                           _decision
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _initUSART4
                        _reading_hue
                               _stop
 ---------------------------------------------------------------------------------
 (1) _reading_hue                                         56    54      2   36771
                                             71 COMRAM     6     4      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _convert_rgb2hue
                         _send2USART
 ---------------------------------------------------------------------------------
 (2) _send2USART                                          52    50      2   10022
                                             67 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                    104   102      2   26018
                                             67 COMRAM     4     2      2
                                              0 BANK0    100   100      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     866
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3497
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1246
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     950
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2463
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     3      2    3267
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _decision                                             2     0      2   34070
                                             31 COMRAM     2     0      2
                          _moveGreen
                            _moveRed
 ---------------------------------------------------------------------------------
 (2) _moveRed                                              4     2      2   16888
                                             27 COMRAM     4     2      2
                           _backHalf
                            _right90
 ---------------------------------------------------------------------------------
 (3) _right90                                              4     2      2    8096
                                             23 COMRAM     4     2      2
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            5     3      2    3419
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _moveGreen                                            4     2      2   17040
                                             27 COMRAM     4     2      2
                           _backHalf
                             _left90
 ---------------------------------------------------------------------------------
 (3) _left90                                               4     2      2    8248
                                             23 COMRAM     4     2      2
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             5     3      2    3571
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _backHalf                                             4     2      2    8552
                                             23 COMRAM     4     2      2
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 3     1      2    4285
                                             18 COMRAM     3     1      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        5     3      2    3419
                                             18 COMRAM     5     3      2
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          5     4      1    2893
                                             13 COMRAM     5     4      1
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     662
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 23    22      1   10815
                                             67 COMRAM    23    22      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    15      6    9146
                                             48 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3    7394
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           12     9      3    6906
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                11     8      3    4210
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    1     0      1     675
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   ___fldiv
     ___flsub (ARG)
       ___fladd
   ___flge
   ___xxtofl
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Clear
   _decision
     _moveGreen
       _backHalf
         _fullSpeedBack
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
       _left90
         _stop
         _turnLeft
           _setMotorPWM
     _moveRed
       _backHalf
       _right90
         _stop
         _turnRight
           _setMotorPWM
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _reading_hue
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _convert_rgb2hue
       ___fladd
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _sendStringSerial4
       _sprintf
     _send2USART
       _sendStringSerial4
       _sprintf
   _stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      9C       5       97.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     187      61        0.0%
DATA                 0      0     187       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 00:18:49 2024

               _color_read_Red 375C                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
           fullSpeedBack@power 0016                   ___fldiv@sign 0029                _color_read_Blue 384C  
                           l63 3A12                             l72 37FA                             l81 2F78  
                           l90 23E6                             l66 3C3C                             l75 389A  
                           l92 23F4                             l84 232A                             l69 37AA  
                           l93 2446                             l78 384A                             l86 2338  
                           l95 2454                             l87 2386                             l96 24AE  
                           l89 2394                             l99 24D4                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003             convert_rgb2hue@max 00B0             convert_rgb2hue@hue 00B4  
           convert_rgb2hue@min 00A8               _color_read_Clear 37FC               _color_read_Green 37AC  
                          l111 123A                            l121 12E2                            l113 124A  
                          l123 133C                            l107 11D0                            l133 1662  
                          l125 134C                            l109 11E0                            l134 167E  
                          l119 12D2                            l129 15EA                            l411 3AAC  
                          l139 375A                            l172 3BF6                            l181 3CC0  
                          l405 3BA4                            l166 3BCE                            l414 3B10  
                          l175 3CCA                            l184 3CB6                            l352 3410  
                          l169 3BD0                            l178 3CD4                            l291 3C92  
                          l187 3964                            l372 359A                            l390 3ADE  
                          l382 3614                            l359 2C78                            l367 349E  
                          l543 3C5A                            l480 3C78                            l393 3B42  
                          l377 351C                            l546 3C1C                            l387 368A  
                          l811 2E3C                            l492 3CAA                            l805 3244  
                          l816 2E82                            l489 3C96                            l498 3B74  
                          l843 2D7E                            l790 30EC                            l777 303C  
                          _abs 3A48                            _pad 32F0                            _hue 0164  
          convert_rgb2hue@cMax 0044                   ___awmod@sign 0006            convert_rgb2hue@diff 00AC  
                          wreg 0FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0013  
                 ___flmul@sign 000D                   ___flmul@temp 0018                   ___flmul@prod 0014  
                 ___fltol@exp1 000A                           l1100 1A58                           l1101 1A46  
                         l1201 252C                           l1130 2162                           ?_abs 0007  
                         l1044 36FE                           l1116 38E0                           l1204 2688  
                         l1301 3A7A                           l1037 36F6                           l1141 2220  
                         l1133 2126                           l1142 220E                           l1215 2620  
                         l3000 2FCC                           l1224 3A46                           l1128 2302  
                         l1160 1C04                           l1208 25C4                           l1313 32EE  
                         l1321 39A4                           l3010 3006                           l3002 2FD4  
                         l1170 1E60                           l1074 186E                           l1139 21A8  
                         l1091 1988                           l1083 1B3E                           l1075 185C  
                         l3020 302C                           l3012 300E                           l3004 2FDC  
                         l1324 3CD6                           l1244 3324                           l1252 2A0E  
                         l3100 36EA                           l1164 1F68                           l1076 1822  
                         l3022 3034                           l3014 3010                           l3006 2FEA  
                         l3030 3050                           l3102 36F0                           l1247 3362  
                         l1167 1DFA                           l3016 3016                           l3008 2FF0  
                         l3040 3084                           l3032 3058                           l4000 2602  
                         l1249 3380                           l1265 2B24                           l1273 319A  
                         l1177 1F2A                           l1169 1E72                           l3018 301C  
                         l3050 30C0                           l3042 308C                           l3034 305C  
                         l3026 303E                           l4010 2658                           l4002 2610  
                         l3052 30C6                           l3044 3094                           l3036 306A  
                         l3028 3042                           l4020 3BA6                           l3300 34D2  
                         l4012 2668                           l4004 262E                           l1269 3192  
                         l3046 30A2                           l3054 30CC                           l3038 3072  
                         l1294 3922                           l4030 3BBC                           l4022 3BB0  
                         l3310 3506                           l3302 34E2                           l4014 2676  
                         l4006 2630                           l3240 3BD0                           l4040 37AC  
                         l3056 30DC                           l3048 30B8                           l3080 3A56  
                         l3160 3124                           l1288 29AE                           l4024 3BB6  
                         l4032 3C20                           l3320 3636                           l3312 3616  
                         l3304 34EA                           l3400 17A4                           l4016 2678  
                         l4008 2634                           l3242 3BE0                           l4042 37F2  
                         l4034 375C                           l3058 30E4                           l1298 3A62  
                         l3162 3140                           l3154 30EE                           l4026 3BB8  
                         l3090 36B6                           l3082 368C                           l3170 2B40  
                         l3330 366E                           l3322 364A                           l3314 362E  
                         l3250 3434                           l3306 34F2                           l3410 17B8  
                         l3402 17A8                           l4052 37FC                           l4036 37A2  
                         l3332 3C96                           l3164 3160                           l3156 30F6  
                         l4028 3BBA                           l3092 36C4                           l3084 3694  
                         l3180 2BFC                           l3172 2B8E                           l3324 3652  
                         l3252 344A                           l3260 3472                           l3244 3412  
                         l3308 3502                           l4140 3AA0                           l4300 3402  
                         l3500 1A28                           l3420 180A                           l3412 17BC  
                         l3404 17AC                           l3340 169A                           l4046 384C  
                         l4054 3842                           l3334 3CA6                           l3078 3A48  
                         l3158 311C                           l3166 3168                           l5022 28B0  
                         l4150 39E4                           l3094 36CA                           l3086 36A6  
                         l3182 2C3C                           l3174 2BA0                           l3326 365A  
                         l3262 3488                           l3254 3452                           l3246 3416  
                         l3270 3548                           l4142 3AE0                           l4302 3404  
                         l3510 1A82                           l3502 1A3E                           l3430 184E  
                         l3422 181A                           l3406 17B0                           l3414 17C0  
                         l3350 16CE                           l3342 169C                           l4048 3892  
                         l4152 39EE                           l3096 36E0                           l3088 36AE  
                         l3176 2BA4                           l3168 2B26                           l3328 366A  
                         l3256 345A                           l3248 342C                           l3280 3568  
                         l3264 351E                           l4144 3AEC                           l3600 3AAE  
                         l4136 3A7C                           l4320 35E4                           l4304 340E  
                         l3520 1AFE                           l3512 1ABC                           l3432 1850  
                         l3424 1830                           l3416 17C4                           l3408 17B4  
                         l3360 1700                           l3344 16AC                           l3352 16D6  
                         l3336 1680                           l4154 39FE                           l3098 36E8  
                         l3178 2BE2                           l3258 3462                           l3282 3570  
                         l3266 3538                           l3610 3B36                           l4146 3B04  
                         l3290 34BA                           l3602 3ABA                           l4138 3A88  
                         l4250 3700                           l4322 35F4                           l4314 35C0  
                         l4306 359C                           l3530 1B1E                           l3522 1B02  
                         l3506 1A68                           l3514 1ABE                           l3450 18D8  
                         l3442 18A0                           l3434 185A                           l3426 183C  
                         l3418 17EE                           l3370 1736                           l3362 1706  
                         l3354 16E6                           l3346 16BC                           l3338 168C  
                         l4260 3C7A                           l4156 3A08                           l4148 39E0  
                         l3612 3B76                           l3284 3580                           l3276 3550  
                         l3268 3540                           l3292 34C2                           l3604 3AD2  
                         l4252 3716                           l4324 35F8                           l4316 35D4  
                         l4308 35B8                           l3700 2160                           l3620 1F76  
                         l3532 1B2C                           l3524 1B10                           l3516 1ACE  
                         l3508 1A74                           l3452 18DC                           l3444 18B0  
                         l3436 187C                           l3460 18FC                           l3428 1840  
                         l3380 1772                           l3372 1746                           l3364 1714  
                         l3356 16EC                           l3348 16CC                           l4262 3C84  
                         l3550 3CC6                           l3614 3B82                           l3286 3584  
                         l3278 3560                           l3606 3B12                           l3294 34CA  
                         l4254 3722                           l4318 35DC                           l4270 3C5C  
                         l3710 21A6                           l3702 2172                           l3630 1FB6  
                         l3622 1F84                           l3534 1B2E                           l3526 1B16  
                         l3518 1ADE                           l3462 1922                           l3470 1978  
                         l3454 18EA                           l3446 18BE                           l3438 188C  
                         l3390 1790                           l3382 1780                           l3374 1748  
                         l3366 1716                           l3358 16FE                           l4264 3C8C  
                         l3560 3CCC                           l3552 3CAE                           l4600 29E0  
                         l3616 3B98                           l3608 3B1E                           l3288 34A0  
                         l4256 3738                           l4280 3C76                           l4272 3C66  
                         l3720 2206                           l3704 2188                           l3712 21B8  
                         l3640 1FDC                           l3632 1FB8                           l3624 1F86  
                         l3800 1C4E                           l3528 1B18                           l3480 19CC  
                         l3472 199E                           l3464 1956                           l3456 18EC  
                         l3448 18CC                           l3392 1794                           l3384 1784  
                         l3368 1726                           l3376 1750                           l4266 3C8E  
                         l3570 393A                           l3562 3CD0                           l3554 3CB2  
                         l4610 2A16                           l4602 29E6                           l4258 374E  
                         l4290 33E0                           l4282 3382                           l4274 3C68  
                         l3730 2274                           l3714 21C6                           l3706 218E  
                         l3650 201C                           l3642 1FEA                           l3626 1F96  
                         l3634 1FC0                           l3618 1F6A                           l3810 1CA0  
                         l3802 1C64                           l3490 19F6                           l3482 19DA  
                         l3474 19AE                           l3466 1958                           l3458 18F6  
                         l3394 1798                           l3386 1788                           l3378 1760  
                         l4268 3C90                           l3572 3960                           l3564 3926  
                         l3548 3CC2                           l3556 3CB8                           l4620 2A62  
                         l4612 2A20                           l4604 29F6                           l4700 38EA  
                         l4292 33EA                           l4284 3392                           l4276 3C72  
                         l3740 22DE                           l3724 2230                           l3732 2278  
                         l3716 21CA                           l3708 2198                           l3660 205C  
                         l3652 201E                           l3644 1FEC                           l3636 1FD0  
                         l3628 1FA6                           l3900 3218                           l3820 1CE6  
                         l3812 1CAE                           l3804 1C70                           l3492 1A06  
                         l3484 19DC                           l3468 1968                           l3396 179C  
                         l3388 178C                           l3574 3962                           l3566 392A  
                         l3558 3CBC                           l3590 3B44                           l4630 2AD4  
                         l4614 2A26                           l4622 2A7E                           l4606 2A02  
                         l4702 38FA                           l4710 3A1C                           l4294 33EC  
                         l4286 33B8                           l4278 3C74                           l3742 22E2  
                         l3734 2292                           l3726 223C                           l3718 21D8  
                         l3670 208C                           l3662 2064                           l3646 1FFC  
                         l3654 2026                           l3638 1FD6                           l3902 323C  
                         l3910 2DAE                           l3830 1D54                           l3822 1D00  
                         l3814 1CBA                           l3806 1C88                           l3486 19EA  
                         l3478 19C2                           l3494 1A08                           l3398 17A0  
                         ?_pad 000F                           l3568 3932                           l3592 3B48  
                         l2960 3270                           l4624 2A98                           l4632 2AE2  
                         l4616 2A58                           l4608 2A0A                           l4704 391A  
                         l4712 3A24                           l4296 33F6                           l4288 33BC  
                         l3744 22F0                           l3736 22A8                           l3728 224A  
                         l3680 20CA                           l3672 208C                           l3664 2068  
                         l3656 2036                           l3648 200C                           l3904 3242  
                         l3920 2E1C                           l3912 2DBE                           l3840 1DEA  
                         l3832 1D7E                           l3824 1D10                           l3816 1CCA  
                         l3808 1C94                           l3760 1B5A                           l3488 19F2  
                         l3496 1A16                           l4720 0EBA                           l4800 2E8A  
                         l3594 3B54                           l2962 328C                           l2954 3246  
                         l4570 3972                           l4634 2AF2                           l4626 2AAA  
                         l4618 2A5C                           l4650 286A                           l4642 282A  
                         l4714 3A2C                           l4298 33F8                           l3746 22F6  
                         l3738 22C2                           l3690 2116                           l3682 20DA  
                         l3658 204C                           l3922 2E2A                           l3914 2DEC  
                         l3850 1E2A                           l3842 1DF8                           l3834 1DB4  
                         l3826 1D2C                           l3818 1CD6                           l3770 1B92  
                         l3762 1B5C                           l3498 1A1A                           l3930 2C7A  
                         l4730 0F94                           l4722 0ECC                           l4810 2EBA  
                         l4802 2EA2                           l3596 3B56                           l2964 32BE  
                         l2956 3256                           l4572 3980                           l4580 330E  
                         l4636 2AF8                           l4628 2ABA                           l4660 2888  
                         l4652 2872                           l4644 2850                           l4716 3A3C  
                         l4708 3A14                           l3748 22F8                           l3692 2124  
                         l3684 20EA                           l3676 20A0                           l3668 207C  
                         l3924 2E7A                           l3916 2DFC                           l3908 2D80  
                         l3860 1E9C                           l3852 1E58                           l3844 1E0A  
                         l3836 1DC2                           l3828 1D38                           l3780 1BBE  
                         l3772 1BA2                           l3764 1B6C                           l3756 1B40  
                         l3940 2CD0                           l3932 2C90                           l4740 1098  
                         l4732 0FC8                           l4724 0EFC                           l4820 2F06  
                         l4812 2EE8                           l4804 2EB4                           l4900 26A2  
                         l3598 3B5E                           l2990 2F98                           l2982 2F7A  
                         l2958 3266                           l4574 3984                           l4590 3370  
                         l4582 331C                           l4638 2B08                           l4670 28FC  
                         l4654 2874                           l4662 28BE                           l4646 2858  
                         l3694 2130                           l3686 20F2                           l3678 20BA  
                         l3926 2E80                           l3918 2E0A                           l3870 1F12  
                         l3862 1EC6                           l3846 1E18                           l3838 1DE0  
                         l3790 1C14                           l3782 1BCE                           l3774 1BA8  
                         l3766 1B7C                           l3758 1B4C                           l3942 2CE0  
                         l4750 1158                           l4742 10B4                           l4734 0FFC  
                         l4726 0F2C                           l4830 2F50                           l4822 2F1C  
                         l4814 2EEA                           l4806 2EB6                           l4910 26C0  
                         l4902 26A8                           l2992 2FA6                           l2984 2F7E  
                         l4568 3966                           l4584 3330                           l4576 32F0  
                         l4592 29B0                           l2976 3BF8                           l4680 2968  
                         l4672 2906                           l4664 28CE                           l4656 2880  
                         l4648 2866                           l4840 230A                           l3696 214E  
                         l3688 2102                           l3872 1F2E                           l3880 1F54  
                         l3856 1E82                           l3864 1ECA                           l3848 1E1C  
                         l3792 1C24                           l3784 1BDE                           l3776 1BAE  
                         l3768 1B8C                           l3952 2D0A                           l3944 2CE4  
                         l3936 2CA4                           l4760 125A                           l4752 118A  
                         l4744 10BC                           l4736 1030                           l4728 0F60  
                         l4832 2F64                           l4824 2F1E                           l4816 2EEC  
                         l4808 2EB8                           l4920 26EC                           l4912 26C8  
                         l4904 26AC                           l2994 2FAE                           l2986 2F8C  
                         l4586 3340                           l4578 32FE                           l4594 29B4  
                         l2978 3C14                           l4674 2926                           l4666 28E2  
                         l4850 2366                           l4842 2322                           l3698 2150  
                         l3882 1F58                           l3874 1F3E                           l3866 1EE4  
                         l3858 1E8E                           l3786 1BEE                           l3778 1BBC  
                         l3970 2D6E                           l3962 2D32                           l3954 2D14  
                         l3946 2CF2                           l3938 2CCE                           l4770 135C  
                         l4762 128C                           l4754 11BC                           l4746 10F0  
                         l4738 1064                           l4834 2F70                           l4826 2F20  
                         l4818 2EEE                           l4930 26F6                           l4922 26EE  
                         l4914 26CC                           l4906 26B0                           l2996 2FB2  
                         l2988 2F94                           l4588 3344                           l4596 29C8  
                         l4684 297C                           l4676 2946                           l4668 28F2  
                         l4860 23C6                           l4852 237E                           l4844 233A  
                         l3892 319C                           l3876 1F4C                           l3868 1EF8  
                         l3796 1C38                           l3788 1BF4                           l3964 2D3E  
                         l3956 2D1E                           l3980 253C                           l4780 1498  
                         l4772 13C2                           l4764 12BE                           l4756 11F4  
                         l4748 1124                           l4828 2F3A                           l4940 2702  
                         l4932 26F8                           l4924 26F0                           l4916 26D0  
                         l4908 26B8                           l2998 2FBA                           l4598 29D0  
                         l4678 295E                           l4870 2426                           l4862 23DE  
                         l4854 2396                           l4846 2352                           l4838 2304  
                         l3894 31CA                           l3878 1F4E                           l3798 1C44  
                         l3886 389C                           l3966 2D4E                           l3990 257A  
                         l3982 2552                           l3974 24D8                           l4790 162E  
                         l4782 1528                           l4774 13D8                           l4766 12F6  
                         l4758 1226                           l4950 2724                           l4942 2704  
                         l4934 26FA                           l4926 26F2                           l4918 26D4  
                         l4688 2988                           l4880 248A                           l4872 243E  
                         l4864 23F6                           l4856 23AE                           l4848 2364  
                         l3896 31DA                           l3888 38AC                           l3968 2D5E  
                         l3992 25AC                           l3976 24E8                           l4784 155A  
                         l4776 140A                           l4768 1328                           l4960 2736  
                         l4952 2726                           l4944 2706                           l4936 26FC  
                         l4928 26F4                           l4698 38E2                           l4882 248C  
                         l4874 245A                           l4866 240E                           l4858 23C4  
                         l3898 3208                           l3994 25AE                           l3986 2566  
                         l3978 24F6                           l4778 1466                           l4786 15EA  
                         l4794 3C3E                           l4970 2794                           l4962 2738  
                         l4954 272A                           l4946 2720                           l4938 26FE  
                         l4890 268A                           l4884 248E                           l4876 2472  
                         l4868 2424                           l3996 25BA                           l3988 256E  
                         l4788 161E                           l4796 3C52                           l4972 27C8  
                         l4964 2744                           l4956 2732                           l4948 2722  
                         l4892 268E                           l4886 24A6                           l4878 2488  
                         l3998 25F6                           l4798 2E84                           l4974 27FA  
                         l4966 2750                           l4958 2734                           l4894 2692  
                         l4888 24BC                           l4976 2806                           l4968 2772  
                         l4896 2696                           l4978 2816                           l4898 2696  
                         STR_1 0E73                           STR_2 0EB7                           STR_3 0E22  
                         STR_4 0EB7                           STR_5 0E3F                           STR_6 0EB7  
                         STR_7 0E01                           STR_8 0EB7                           STR_9 0E5A  
                         u2000 32BE                           u2001 32BA                           u2020 2F8C  
                         u2100 3084                           u2021 2F88                           u2101 3080  
                         u2030 2FA6                           u2110 30A2                           u2031 2FA2  
                         u2111 309E                           u2040 2FCC                           u2120 30B8  
                         u2200 36C4                           u3000 204C                           u2041 2FC8  
                         u2121 30B4                           u2201 36C0                           u3001 2048  
                         u2050 2FEA                           u2130 30DC                           u2210 36E0  
                         u3010 208C                           u2051 2FE6                           u2131 30D8  
                         u2211 36DC                           u3011 2088                           u2060 3006  
                         u3100 2206                           u3020 2102                           u2061 3002  
                         u3101 2202                           u3021 20FE                           u2070 302C  
                         u3110 221C                           u3030 2124                           u2071 3028  
                         u3111 2218                           u3031 2120                           u2080 3050  
                         u4000 2A98                           u2320 311C                           u3120 2230  
                         u3040 214E                           u3200 1BBC                   _BAUD4CONbits 0EE9  
                         u2081 304C                           u4001 2A94                           u2321 3118  
                         u3121 222C                           u3041 214A                           u3201 1BB8  
                         u2410 3BE0                           u2090 306A                           u4010 2AAA  
                         u2330 3192                           u3130 224A                           u3050 2172  
                         u3210 1BCE                           u2411 3BDC                           u2091 3066  
                         u4011 2AA6                           u2331 318E                           u3131 2246  
                         u3051 216E                           u3211 1BCA                           u2420 3BF6  
                         u2500 3CA6                           u2180 3A56                           u4020 2ABA  
                         u4100 2946                           u2340 2B40                           u3140 2292  
                         u3060 2188                           u3300 1E6E                           u3220 1BDE  
                         u2421 3BF2                           u2501 3CA2                           u2181 3A52  
                         u4021 2AB6                           u4101 2942                           u2341 2B3C  
                         u3141 228E                           u3061 2184                           u3301 1E6A  
                         u3221 1BDA                           u4030 2AD4                           u4110 391A  
                         u2190 36A6                           u2350 2BFC                           u2430 342C  
                         u3150 22C2                           u3070 21A6                           u3310 1E82  
                         u3230 1C14                           u2510 169A                           u4031 2AD0  
                         u4111 3916                           u2191 36A2                           u2351 2BF8  
                         u2431 3428                           u3151 22BE                           u3071 21A2  
                         u3311 1E7E                           u3231 1C10                           u2511 1696  
                         u4040 2AE2                           u2440 344A                           u3160 22F0  
                         u3080 21C6                           u3400 2DEC                           u3320 1E9C  
                         u3240 1C24                           u2600 17EE                           u2520 16AC  
                         u4200 1498                           u4120 118A                           u4041 2ADE  
                         u2441 3446                           u3161 22EC                           u3081 21C2  
                         u3401 2DE8                           u3321 1E98                           u3241 1C20  
                         u2601 17EA                           u2521 16A8                           u4201 1494  
                         u4121 1186                           u4050 2AF2                           u2450 3488  
                         u3090 21D8                           u3410 2E0A                           u3330 1EE4  
                         u3250 1D9E                           u3170 1B5A                           u2610 1806  
                         u2530 16BC                           u4210 155A                           u4130 11BC  
                         _T2PR 0FBC                           u4051 2AEE                           u2451 3484  
                         u3091 21D4                           u3411 2E06                           u3331 1EE0  
                         u3171 1B56                           u2611 1800                           u2531 16B8  
                         u4211 1556                           u4131 11B8                           u4060 2850  
                         u2460 349E                           u3420 2E2A                           u3340 1F12  
                         u3260 1DF8                           u3180 1B6C                           u2700 18EA  
                         u2620 1808                           u2540 16FE                           u3500 2D5E  
                         u4220 162E                           u4140 1226                           u4061 284C  
                         u2461 349A                           u3421 2E26                           u3341 1F0E  
                         u3261 1DF4                           u3181 1B68                           u2701 18E6  
                         u2541 16FA                           u3501 2D5A                           u4221 162A  
                         u4141 1222                           u4070 28CE                           u4230 2338  
                         u2470 359A                           u3430 2E7A                           u3350 1F4C  
                         u3270 1E18                           u3190 1B7C                           u2710 1922  
                         u2630 1830                           u2550 1714                           u3510 24E8  
                         u4150 128C                           u4071 28CA                           u4231 2334  
                         u2471 3596                           u3431 2E76                           u3351 1F48  
                         u3271 1E14                           u3255 1D94                           u3191 1B78  
                         u2711 191E                           u2631 182C                           u2551 1710  
                         u3511 24E4                           u4151 1288                           u4080 28F2  
                         u4240 2394                           u2480 351C                           u3360 31CA  
                         u3280 1E2A                           u2800 1A3E                           u2720 1968  
                         u2640 184E                           u2560 1726                           u3440 2C90  
                         u3600 2676                           u3520 24F6                           u4160 12BE  
                         u4081 28EE                           u4241 2390                           u2481 3518  
                         u3361 31C6                           u3281 1E26                           u2801 1A3A  
                         u2721 1964                           u2641 184A                           u2561 1722  
                         u3441 2C8C                           u3601 2672                           u3521 24F2  
                         u4161 12BA                           u4090 2926                           u4250 23F4  
                         u2490 368A                           u3370 3208                           u3290 1E58  
                         u2810 1A54                           u2730 199E                           u2650 186E  
                         u2570 1736                           u3450 2CC4                           u3530 2552  
                         u4170 1328                           u4091 2922                           u4251 23F0  
                         u2491 3686                           u3371 3204                           u3291 1E54  
                         u2811 1A50                           u2731 199A                           u2651 186A  
                         u2571 1732                           u3531 254E                           u4171 1324  
                         u4307 2712                           u4260 2454                           u3380 323C  
                         u2820 1A68                           u2740 19AE                           u2660 187C  
                         u2580 1772                           u3460 2CF2                           u3540 25A8  
                         u4180 13C2                           u4261 2450                           u3381 3238  
                         u2821 1A64                           u2741 19AA                           u2661 1878  
                         u2581 176E                           u3461 2CEE                           u3541 25A4  
                         u4181 13BE                           u4317 2E94                           u2910 394E  
                         u4270 24BC                           u3390 2DAE                           u2830 1A82  
                         u2750 19DA                           u2670 188C                           u2590 1780  
                         u3470 2D06                           u3550 25F2                           u4190 140A  
                         u2911 3946                           u4271 24B8                           u4407 3B28  
                         u3391 2DAA                           u2831 1A7E                           u2751 19D6  
                         u2671 1888                           u2591 177C                           u3471 2D02  
                         u3455 2CBA                           u3551 25EE                           u4191 1406  
                         u4327 2EC4                           u3800 3614                           u2840 1ABC  
                         u2760 19EA                           u2680 18BE                           u3480 2D2E  
                         u3560 2610                           u4280 27FA                           u4417 3576  
                         u3801 3610                           u2841 1AB8                           u2761 19E6  
                         u2681 18BA                           u3481 2D2A                           u3561 260C  
                         u4337 2EF8                           u4281 27F6                           u2930 3B74  
                         u1970 3256                           u2850 1ACE                           u2770 1A06  
                         u2690 18CC                           u3490 2D4E                           u3570 2620  
                         u2931 3B70                           u1971 3252                           u4507 24C6  
                         u4427 3B8C                           u2851 1ACA                           u2771 1A02  
                         u2691 18C8                           u3491 2D4A                           u3571 261C  
                         u4347 2F2C                           u1980 3266                           u2940 1F84  
                         u2860 1ADE                           u2780 1A16                           u3580 262E  
                         u4517 3B58                           u1981 3262                           u4437 3468  
                         u4357 35EA                           u2941 1F80                           u2861 1ADA  
                         u2781 1A12                           u3581 262A                           u1990 328C  
                         u3910 39A4                           u2950 1F96                           u2870 1AFE  
                         u2790 1A28                           u3590 2668                           u1991 3288  
                         u3911 39A0                           u4447 3660                           u4367 3A92  
                         u2951 1F92                           u2871 1AFA                           u2791 1A24  
                         u3591 2664                           u2928 3950                           u3920 32FE  
                         u2960 1FA6                           u2880 1B10                           u3921 32FA  
                         u4457 39F4                           u4377 3AC4                           u2961 1FA2  
                         u2881 1B0C                           u3930 331C                           u3770 3716  
                         u2970 1FEA                           u2890 1B2C                           u3931 3318  
                         u4467 2344                           u4387 34F8                           u3771 3712  
                         u2971 1FE6                           u2891 1B28                           u3940 3362  
                         u3780 3738                           u2980 1FFC                           u3941 335E  
                         u4477 23A0                           u4397 3AF6                           u3781 3734  
                         u2981 1FF8                           u3950 3370                           u3790 374E  
                         u2990 200C                           u3951 336C                           u4487 2400  
                         u3791 374A                           u2991 2008                           u3960 29C4  
                         u3961 29BE                           u4497 2464                           u3970 29C6  
                         u3980 29E0                           u3981 29DC                           u3990 29F6  
                         u3991 29F2                    main@current 00C6                    main@maximum 00CA  
                         abs@a 0007                           _dbuf 016C                           _main 268A  
                         _dtoa 29B0           convert_rgb2hue@cCurr 0045                           _prec 00D6  
                         pad@i 0015                           pad@p 0012                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           _stop 3412            fullSpeedAhead@power 0016  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 3C94                ___fldiv@new_exp 002A         __end_of_color_read_Red 37AC  
                 ___param_bank 0000                 reading_hue@hue 004C                          ??_abs 0009  
                        ??_pad 0014                  ___fltol@sign1 0009                __end_of___fladd 1B40  
                        ?_main 0001                          ?_dtoa 0017                          _ADPCH 0F5F  
              __end_of___fldiv 2304                __end_of___awdiv 303E                          STR_10 0EB7  
                        STR_11 0EAC                          STR_12 0E8B                          STR_13 0EA0  
              __end_of___awmod 30EE                __end_of___flmul 1F6A                __end_of___flsub 38E2  
              __end_of___fltol 2D80                          ?_stop 0013                ___awdiv@divisor 0003  
              __end_of___lwdiv 3700                ___awdiv@counter 0005              ??_convert_rgb2hue 0046  
                 vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 3CAC     __end_of_I2C_2_Master_Start 3CCC  
   __end_of_I2C_2_Master_Write 3CB8                          _flags 005B            read_prec_or_width@c 0009  
          read_prec_or_width@n 000A                          _fputc 3246                          _fputs 3966  
                        pad@fp 000F                          _width 00D4                          _putch 3CD6  
                        dtoa@d 0018                          dtoa@i 0020                          dtoa@p 001C  
              __end_of_right90 3AE0                          dtoa@s 001F                          dtoa@w 001D  
                 ?_reading_hue 0048                __end_of_moveRed 3AAE          convert_rgb2hue@c_char 0060  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 3A48  
        convert_rgb2hue@redmax 0078        __end_of_color_read_Blue 389C          _I2C_2_Master_RepStart 3CCC  
              ?_color_read_Red 0005                __initialization 39A6                   __end_of_main 282A  
                 __end_of_dtoa 2B26                   __end_of_stop 34A0                         ??_main 00C4  
                       ??_dtoa 001A                         ??_stop 0015                  __activetblptr 0003  
   __end_of_read_prec_or_width 319C                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 0009                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001               __end_of_backHalf 3BA6                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RE4PPS 0E76  
                       _RD6PPS 0E70                         _RG6PPS 0E88                  vfpfcnvrt@done 002B  
     __end_of_color_click_init 3A14                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 268A    convert_rgb2hue@greencurrent 007C               __end_of_decision 375C  
                 _CCPTMRS0bits 0FAD                   vfprintf@cfmt 0030                         ___flge 2D80  
                       ___fleq 319C                      ??___fladd 0009                         ___wmul 3BF8  
                    ??___fldiv 0021                      ??___awdiv 0005                      ??___awmod 0005  
                    ??___flmul 0009                      ??___flsub 0019                      ??___fltol 0005  
                    ??___lwdiv 000B                         _left90 3B12           read_prec_or_width@ap 0008  
                       clear_0 39BE                         clear_1 39CA               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         _motorL 00E2                         _motorR 00D9  
                       isa$std 0001                ___awmod@counter 0005             send2USART@hue_char 0060  
                       pad@buf 0010                         dtoa@fp 0017                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                         fputs@s 0009  
                    ??_right90 001A                   __mediumconst 0000        calibration_routine@cCal 0044  
                    ??_moveRed 001E                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                      ?_ADC_init 0001               ?_sendCharSerial4 0001  
       convert_rgb2hue@bluemax 0088                         putch@c 0001               __end_of_vfprintf 3924  
                       stop@mL 0013                         stop@mR 0014              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0037               __end_of_turnLeft 359C                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
              fullSpeedBack@mL 0013                fullSpeedBack@mR 0014                     __accesstop 0060  
      __end_of__initialization 39DA       __end_of_color_read_Clear 384C       __end_of_color_read_Green 37FC  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                  _fullSpeedBack 3616  
                 __pidataBANK0 3CD8                  __end_of_fputc 32F0                  __end_of_fputs 39A6  
                __end_of_putch 3CD8               reading_hue@cCurr 0048                     ??_ADC_init 0001  
               main@clear_norm 00CE                     backHalf@mL 0018                     backHalf@mR 0019  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK0 00D4                     __pbssBANK1 0100              _color_writetoaddr 3C1E  
                 _T2CLKCONbits 0FBF                 ?_fullSpeedBack 0013                _convert_rgb2hue 0EBA  
                      ?___flge 0001                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001                        ?_left90 0018                      ?_backHalf 0018  
          ??_color_writetoaddr 0004                      ?___xxtofl 0001            _convert_rgb2hue$390 00A0  
          _convert_rgb2hue$391 00A4            _convert_rgb2hue$388 0098            _convert_rgb2hue$389 009C  
                    ?_decision 0020                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5                    moveGreen@mL 001C  
                  moveGreen@mR 001D         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 3C3E                      _ADREFbits 0F58             _I2C_2_Master_Start 3CC2  
                   _initUSART4 3C5C             _I2C_2_Master_Write 3CAC                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 1680                        ___fldiv 1F6A                        ___awdiv 2F7A  
                      ___awmod 303E                        ___flmul 1B40                        ___flsub 389C  
                      ___fltol 2C7A            ?_I2C_2_Master_Start 0001                        ___lwdiv 368C  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D                   __psmallconst 0E00  
                      __pcinit 39A6                     ??_backHalf 001A                        __ramtop 0E00  
                   _send2USART 3C3E                      ?_turnLeft 0013                        __ptext0 268A  
                      __ptext1 2E84                        __ptext2 3C3E                        __ptext3 0EBA  
                      __ptext4 24D6                        __ptext5 2C7A                        __ptext6 389C  
                      __ptext7 1680                        __ptext8 1B40                        __ptext9 2D80  
                    _T2CONbits 0FBD          read_prec_or_width@fmt 0007                     ??___xxtofl 0005  
             ___awmod@dividend 0001                     ??_decision 0022                        _right90 3AAE  
                    _T2HLTbits 0FBE                        _moveRed 3A7C                  _RxBufWriteCnt 005F  
                      _sprintf 3A14                        main@hue 00D2           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 39DA              __end_of_moveGreen 3B12  
                      fputc@fp 0003        __end_of_convert_rgb2hue 1680                        fputs@fp 000B  
            ?_color_click_init 0001             _read_prec_or_width 30EE                ??_fullSpeedBack 0015  
           ??_color_click_init 0005        convert_rgb2hue@clearmax 0090               _colorCalibration 00F3  
            __end_of_vfpfcnvrt 29B0                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0027                     ??_vfprintf 0030        convert_rgb2hue@greenmax 0080  
                 _colorCurrent 00EB                _initDCmotorsPWM 3382                     ??_turnLeft 0015  
                    _PORTFbits 0F8E             setMotorPWM@negDuty 0012              __end_of_turnRight 351E  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 0F81  
           setMotorPWM@posDuty 0011                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               convert_rgb2hue@b 00C0               convert_rgb2hue@c 0094  
         ??_read_prec_or_width 0009               convert_rgb2hue@g 00BC                    ___fldiv@grs 002C  
             convert_rgb2hue@r 00B8                    ___fldiv@rem 0025               fullSpeedAhead@mL 0013  
             fullSpeedAhead@mR 0014       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 000E                    _CCP1CONbits 0FAB            _calibration_routine 2304  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 0150                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005     convert_rgb2hue@bluecurrent 0084  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
    convert_rgb2hue@redcurrent 0074                 __end_of___flge 2E84                 __end_of___fleq 3246  
               _fullSpeedAhead 359C                    vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C  
                  vfpfcnvrt@fp 0022                 __end_of___wmul 3C1E                 __end_of_left90 3B44  
                  ?_send2USART 0044           ?_calibration_routine 0044            color_read_Clear@tmp 000A  
          start_initialization 39A6   calibration_routine@cal_state 0047                    __end_of_abs 3A7C  
                  __end_of_pad 3382                  _TxBufWriteCnt 005D               ?_convert_rgb2hue 0044  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3412                    vfprintf@fmt 002E  
       __end_of_fullSpeedAhead 3616                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                       ??_left90 001A                    __pdataBANK0 00FB  
        ??_calibration_routine 0045                      ___fladd@a 0005                      ___fladd@b 0001  
                    ___fldiv@a 001D                      ___fldiv@b 0019                      ___flmul@a 0005  
                    ___flmul@b 0001                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                  __pcstackBANK0 0060                  ??_reading_hue 004A  
             ___lwdiv@dividend 0007                      _dtoa$2633 001A                ?_fullSpeedAhead 0013  
                     ?___fladd 0001                       ?___fldiv 0019                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 0011  
                     ?___fltol 0001                       ?___lwdiv 0007                   _readingIndex 00D8  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 3BD0              _I2C_2_Master_Init 3BA6              _I2C_2_Master_Read 3924  
                     ?_right90 0018              _I2C_2_Master_Stop 3CB8                       ?_moveRed 001C  
                 _RxBufReadCnt 005E                       _ADC_init 3C7A             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 000F  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0031              _sendStringSerial4 3B44            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80             ?_sendStringSerial4 0002  
                    _moveGreen 3AE0                       _PIE4bits 0E2D            __end_of_reading_hue 2F7A  
                  turnRight@mL 0013                    turnRight@mR 0014                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0003                       _SSP2STAT 0ED8                      _vfpfcnvrt 282A  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 3BF8      __end_of_I2C_2_Master_Init 3BD0  
    __end_of_I2C_2_Master_Read 3966              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 3CC2  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002                    _ldrReadings 013C  
            ??_color_read_Blue 0007                   _TxBufReadCnt 005C                      _turnRight 34A0  
    __end_of_sendStringSerial4 3B76  __end_of_I2C_2_Master_RepStart 3CD6             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 2C7A                   ??_initUSART4 0001                     ?_moveGreen 001C  
                     __Hrparam 0000                     vfprintf@ap 002F                       __Lrparam 0000  
                   vfprintf@fp 002D          __end_of_fullSpeedBack 368C                     ?_vfpfcnvrt 0022  
                     _backHalf 3B76                   ??_send2USART 0046                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 00FB                     sprintf@fmt 0032  
                     ___xxtofl 24D6                       _decision 3700                      right90@mL 0018  
                    right90@mR 0019                ___lwdiv@divisor 0009             __end_of_initUSART4 3C7A  
              ___lwdiv@counter 000D                     ?_turnRight 0013                       __ptext10 319C  
                     __ptext11 1F6A                       __ptext20 3B12                       __ptext12 3C5C  
                     __ptext21 351E                       __ptext13 3382                       __ptext30 2304  
                     __ptext22 3B76                       __ptext14 359C                       __ptext31 3A14  
                     __ptext23 3412                       __ptext15 3700                       __ptext40 3CD6  
                     __ptext32 38E2                       __ptext24 3616                       __ptext16 3A7C  
                     __ptext41 3A48                       __ptext33 282A                       __ptext25 2B26  
                     __ptext17 3AAE                       __ptext50 3CAC                       __ptext42 303E  
                     __ptext34 30EE                       __ptext26 368C                       __ptext18 34A0  
                     __ptext51 3CB8                       __ptext43 2F7A                       __ptext35 3BF8  
                     __ptext27 39E0                       __ptext19 3AE0                       __ptext52 3CC2  
                     __ptext44 3B44                       __ptext36 29B0                       __ptext28 3C1E  
                     __ptext53 3CCC                       __ptext45 3C94                       __ptext37 32F0  
                     __ptext29 3BA6                       __ptext54 3924                       __ptext46 375C  
                     __ptext38 3966                       __ptext55 3BD0                       __ptext47 37AC  
                     __ptext39 3246                       __ptext56 3C7A                       __ptext48 37FC  
                     __ptext49 384C                    decision@hue 0020                      moveRed@mL 001C  
                    moveRed@mR 001D                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                  _reading_hue 2E84                     turnLeft@mL 0013                     turnLeft@mR 0014  
           __end_of_send2USART 3C5C                     turnRight@i 0016                       isa$xinst 0000  
                     left90@mL 0018                       left90@mR 0019                     _RC4STAbits 0EE7  
                     _vfprintf 38E2                       _turnLeft 351E                    _setMotorPWM 2B26  
                    sprintf@ap 0037               ??_fullSpeedAhead 0015                    ??_moveGreen 001E  
                    turnLeft@i 0016    __end_of_calibration_routine 24D6    convert_rgb2hue@clearcurrent 008C  
                send2USART@hue 0044                    ??_vfpfcnvrt 0025               _color_click_init 39E0  
                     sprintf@f 0038                       sprintf@s 0031                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                    ??_turnRight 0015                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 3C94                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
