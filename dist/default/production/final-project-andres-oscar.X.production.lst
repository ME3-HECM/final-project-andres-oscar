

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 22:06:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Generated 21/07/2023 GMT
    59                           ; 
    60                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F67K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000000                     
    93                           	psect	idataBANK0
    94   002D90                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for _dataFlag
    98   002D90  01                 	db	1
    99   000000                     _TX4REG	set	3812
   100   000000                     _RC4STAbits	set	3815
   101   000000                     _SP4BRGH	set	3814
   102   000000                     _LATFbits	set	3966
   103   000000                     _LATHbits	set	3968
   104   000000                     _TRISFbits	set	3974
   105   000000                     _TRISAbits	set	3969
   106   000000                     _TRISEbits	set	3973
   107   000000                     _TRISGbits	set	3975
   108   000000                     _TRISDbits	set	3972
   109   000000                     _PORTFbits	set	3982
   110   000000                     _SSP2CON2bits	set	3802
   111   000000                     _RX4PPS	set	3605
   112   000000                     _SSP2CLKPPS	set	3612
   113   000000                     _SSP2DATPPS	set	3613
   114   000000                     _ANSELDbits	set	3751
   115   000000                     _SSP2ADD	set	3798
   116   000000                     _SSP2CON1bits	set	3801
   117   000000                     _LATAbits	set	3961
   118   000000                     _LATEbits	set	3965
   119   000000                     _LATGbits	set	3967
   120   000000                     _LATCbits	set	3963
   121   000000                     _LATDbits	set	3964
   122   000000                     _CCPR2H	set	4006
   123   000000                     _CCPR1H	set	4010
   124   000000                     _RC4REG	set	3811
   125   000000                     _SP4BRGL	set	3813
   126   000000                     _TX4STAbits	set	3816
   127   000000                     _BAUD4CONbits	set	3817
   128   000000                     _SSP2CON2	set	3802
   129   000000                     _CCPR4H	set	3873
   130   000000                     _CCPR3H	set	3877
   131   000000                     _SSP2STAT	set	3800
   132   000000                     _ANSELFbits	set	3764
   133   000000                     _SSP2BUF	set	3797
   134   000000                     _PIE4bits	set	3629
   135   000000                     _PIR4bits	set	3639
   136   000000                     _RC0PPS	set	3682
   137   000000                     _RC7PPS	set	3689
   138   000000                     _RD5PPS	set	3695
   139   000000                     _RE2PPS	set	3700
   140   000000                     _RD6PPS	set	3696
   141   000000                     _CCP1CONbits	set	4011
   142   000000                     _CCPTMRS0bits	set	4013
   143   000000                     _T2PR	set	4028
   144   000000                     _T2CONbits	set	4029
   145   000000                     _CCP2CONbits	set	4007
   146   000000                     _CCP3CONbits	set	3878
   147   000000                     _ADREFbits	set	3928
   148   000000                     _CCP4CONbits	set	3874
   149   000000                     _TRISHbits	set	3976
   150   000000                     _TRISCbits	set	3971
   151   000000                     _ADPCH	set	3935
   152   000000                     _ADRESH	set	3940
   153   000000                     _ADCON0bits	set	3936
   154   000000                     _RE4PPS	set	3702
   155   000000                     _RG6PPS	set	3720
   156   000000                     _T2CLKCONbits	set	4031
   157   000000                     _T2HLTbits	set	4030
   158                           
   159                           	psect	smallconst
   160   000E00                     __psmallconst:
   161                           	callstack 0
   162   000E00  00                 	db	0
   163   000E01                     STR_9:
   164                           
   165                           ; BSR set to: 15
   166   000E01  43                 	db	67	;'C'
   167   000E02  61                 	db	97	;'a'
   168   000E03  6C                 	db	108	;'l'
   169   000E04  69                 	db	105	;'i'
   170   000E05  62                 	db	98	;'b'
   171   000E06  72                 	db	114	;'r'
   172   000E07  61                 	db	97	;'a'
   173   000E08  74                 	db	116	;'t'
   174   000E09  69                 	db	105	;'i'
   175   000E0A  6F                 	db	111	;'o'
   176   000E0B  6E                 	db	110	;'n'
   177   000E0C  20                 	db	32
   178   000E0D  73                 	db	115	;'s'
   179   000E0E  74                 	db	116	;'t'
   180   000E0F  61                 	db	97	;'a'
   181   000E10  74                 	db	116	;'t'
   182   000E11  65                 	db	101	;'e'
   183   000E12  20                 	db	32
   184   000E13  3D                 	db	61	;'='
   185   000E14  20                 	db	32
   186   000E15  20                 	db	32
   187   000E16  61                 	db	97	;'a'
   188   000E17  6D                 	db	109	;'m'
   189   000E18  62                 	db	98	;'b'
   190   000E19  69                 	db	105	;'i'
   191   000E1A  65                 	db	101	;'e'
   192   000E1B  6E                 	db	110	;'n'
   193   000E1C  74                 	db	116	;'t'
   194   000E1D  20                 	db	32
   195   000E1E  6C                 	db	108	;'l'
   196   000E1F  69                 	db	105	;'i'
   197   000E20  67                 	db	103	;'g'
   198   000E21  68                 	db	104	;'h'
   199   000E22  74                 	db	116	;'t'
   200   000E23  00                 	db	0
   201   000E24                     STR_7:
   202                           
   203                           ; BSR set to: 15
   204   000E24  43                 	db	67	;'C'
   205   000E25  61                 	db	97	;'a'
   206   000E26  6C                 	db	108	;'l'
   207   000E27  69                 	db	105	;'i'
   208   000E28  62                 	db	98	;'b'
   209   000E29  72                 	db	114	;'r'
   210   000E2A  61                 	db	97	;'a'
   211   000E2B  74                 	db	116	;'t'
   212   000E2C  69                 	db	105	;'i'
   213   000E2D  6F                 	db	111	;'o'
   214   000E2E  6E                 	db	110	;'n'
   215   000E2F  20                 	db	32
   216   000E30  73                 	db	115	;'s'
   217   000E31  74                 	db	116	;'t'
   218   000E32  61                 	db	97	;'a'
   219   000E33  74                 	db	116	;'t'
   220   000E34  65                 	db	101	;'e'
   221   000E35  20                 	db	32
   222   000E36  3D                 	db	61	;'='
   223   000E37  20                 	db	32
   224   000E38  20                 	db	32
   225   000E39  77                 	db	119	;'w'
   226   000E3A  68                 	db	104	;'h'
   227   000E3B  69                 	db	105	;'i'
   228   000E3C  74                 	db	116	;'t'
   229   000E3D  65                 	db	101	;'e'
   230   000E3E  20                 	db	32
   231   000E3F  6C                 	db	108	;'l'
   232   000E40  69                 	db	105	;'i'
   233   000E41  67                 	db	103	;'g'
   234   000E42  68                 	db	104	;'h'
   235   000E43  74                 	db	116	;'t'
   236   000E44  00                 	db	0
   237   000E45                     STR_3:
   238                           
   239                           ; BSR set to: 15
   240   000E45  43                 	db	67	;'C'
   241   000E46  61                 	db	97	;'a'
   242   000E47  6C                 	db	108	;'l'
   243   000E48  69                 	db	105	;'i'
   244   000E49  62                 	db	98	;'b'
   245   000E4A  72                 	db	114	;'r'
   246   000E4B  61                 	db	97	;'a'
   247   000E4C  74                 	db	116	;'t'
   248   000E4D  69                 	db	105	;'i'
   249   000E4E  6F                 	db	111	;'o'
   250   000E4F  6E                 	db	110	;'n'
   251   000E50  20                 	db	32
   252   000E51  73                 	db	115	;'s'
   253   000E52  74                 	db	116	;'t'
   254   000E53  61                 	db	97	;'a'
   255   000E54  74                 	db	116	;'t'
   256   000E55  65                 	db	101	;'e'
   257   000E56  20                 	db	32
   258   000E57  3D                 	db	61	;'='
   259   000E58  20                 	db	32
   260   000E59  67                 	db	103	;'g'
   261   000E5A  72                 	db	114	;'r'
   262   000E5B  65                 	db	101	;'e'
   263   000E5C  65                 	db	101	;'e'
   264   000E5D  6E                 	db	110	;'n'
   265   000E5E  20                 	db	32
   266   000E5F  0A                 	db	10
   267   000E60  0D                 	db	13
   268   000E61  00                 	db	0
   269   000E62                     STR_5:
   270                           
   271                           ; BSR set to: 15
   272   000E62  43                 	db	67	;'C'
   273   000E63  61                 	db	97	;'a'
   274   000E64  6C                 	db	108	;'l'
   275   000E65  69                 	db	105	;'i'
   276   000E66  62                 	db	98	;'b'
   277   000E67  72                 	db	114	;'r'
   278   000E68  61                 	db	97	;'a'
   279   000E69  74                 	db	116	;'t'
   280   000E6A  69                 	db	105	;'i'
   281   000E6B  6F                 	db	111	;'o'
   282   000E6C  6E                 	db	110	;'n'
   283   000E6D  20                 	db	32
   284   000E6E  73                 	db	115	;'s'
   285   000E6F  74                 	db	116	;'t'
   286   000E70  61                 	db	97	;'a'
   287   000E71  74                 	db	116	;'t'
   288   000E72  65                 	db	101	;'e'
   289   000E73  3D                 	db	61	;'='
   290   000E74  20                 	db	32
   291   000E75  62                 	db	98	;'b'
   292   000E76  6C                 	db	108	;'l'
   293   000E77  75                 	db	117	;'u'
   294   000E78  65                 	db	101	;'e'
   295   000E79  20                 	db	32
   296   000E7A  0A                 	db	10
   297   000E7B  0D                 	db	13
   298   000E7C  00                 	db	0
   299   000E7D                     STR_11:
   300                           
   301                           ; BSR set to: 15
   302   000E7D  43                 	db	67	;'C'
   303   000E7E  41                 	db	65	;'A'
   304   000E7F  4C                 	db	76	;'L'
   305   000E80  49                 	db	73	;'I'
   306   000E81  42                 	db	66	;'B'
   307   000E82  52                 	db	82	;'R'
   308   000E83  41                 	db	65	;'A'
   309   000E84  54                 	db	84	;'T'
   310   000E85  49                 	db	73	;'I'
   311   000E86  4F                 	db	79	;'O'
   312   000E87  4E                 	db	78	;'N'
   313   000E88  20                 	db	32
   314   000E89  43                 	db	67	;'C'
   315   000E8A  4F                 	db	79	;'O'
   316   000E8B  4D                 	db	77	;'M'
   317   000E8C  50                 	db	80	;'P'
   318   000E8D  4C                 	db	76	;'L'
   319   000E8E  45                 	db	69	;'E'
   320   000E8F  54                 	db	84	;'T'
   321   000E90  45                 	db	69	;'E'
   322   000E91  44                 	db	68	;'D'
   323   000E92  20                 	db	32
   324   000E93  0A                 	db	10
   325   000E94  0D                 	db	13
   326   000E95  00                 	db	0
   327   000E96                     STR_1:
   328                           
   329                           ; BSR set to: 15
   330   000E96  43                 	db	67	;'C'
   331   000E97  61                 	db	97	;'a'
   332   000E98  6C                 	db	108	;'l'
   333   000E99  69                 	db	105	;'i'
   334   000E9A  62                 	db	98	;'b'
   335   000E9B  72                 	db	114	;'r'
   336   000E9C  61                 	db	97	;'a'
   337   000E9D  74                 	db	116	;'t'
   338   000E9E  69                 	db	105	;'i'
   339   000E9F  6F                 	db	111	;'o'
   340   000EA0  6E                 	db	110	;'n'
   341   000EA1  20                 	db	32
   342   000EA2  73                 	db	115	;'s'
   343   000EA3  74                 	db	116	;'t'
   344   000EA4  61                 	db	97	;'a'
   345   000EA5  74                 	db	116	;'t'
   346   000EA6  65                 	db	101	;'e'
   347   000EA7  20                 	db	32
   348   000EA8  3D                 	db	61	;'='
   349   000EA9  20                 	db	32
   350   000EAA  72                 	db	114	;'r'
   351   000EAB  65                 	db	101	;'e'
   352   000EAC  64                 	db	100	;'d'
   353   000EAD  00                 	db	0
   354   000EAE                     
   355                           ; BSR set to: 15
   356   000EAE  56                 	db	86	;'V'
   357   000EAF  6F                 	db	111	;'o'
   358   000EB0  6C                 	db	108	;'l'
   359   000EB1  74                 	db	116	;'t'
   360   000EB2  61                 	db	97	;'a'
   361   000EB3  67                 	db	103	;'g'
   362   000EB4  65                 	db	101	;'e'
   363   000EB5  20                 	db	32
   364   000EB6  3D                 	db	61	;'='
   365   000EB7  20                 	db	32
   366   000EB8  25                 	db	37
   367   000EB9  64                 	db	100	;'d'
   368   000EBA  2E                 	db	46
   369   000EBB  25                 	db	37
   370   000EBC  30                 	db	48	;'0'
   371   000EBD  32                 	db	50	;'2'
   372   000EBE  64                 	db	100	;'d'
   373   000EBF  2C                 	db	44
   374   000EC0  20                 	db	32
   375   000EC1  20                 	db	32
   376   000EC2  00                 	db	0
   377   000EC3                     STR_14:
   378                           
   379                           ; BSR set to: 15
   380   000EC3  68                 	db	104	;'h'
   381   000EC4  75                 	db	117	;'u'
   382   000EC5  65                 	db	101	;'e'
   383   000EC6  3D                 	db	61	;'='
   384   000EC7  25                 	db	37
   385   000EC8  30                 	db	48	;'0'
   386   000EC9  33                 	db	51	;'3'
   387   000ECA  64                 	db	100	;'d'
   388   000ECB  2C                 	db	44
   389   000ECC  20                 	db	32
   390   000ECD  20                 	db	32
   391   000ECE  00                 	db	0
   392   000ECF                     STR_2:
   393                           
   394                           ; BSR set to: 15
   395   000ECF  2E                 	db	46
   396   000ED0  00                 	db	0
   397   000ED1  00                 	db	0	; dummy byte at the end
   398   000000                     
   399                           ; #config settings
   400                           
   401                           	psect	cinit
   402   002B56                     __pcinit:
   403                           	callstack 0
   404   002B56                     start_initialization:
   405                           	callstack 0
   406   002B56                     __initialization:
   407                           	callstack 0
   408                           
   409                           ; Initialize objects allocated to BANK0 (1 bytes)
   410                           ; load TBLPTR registers with __pidataBANK0
   411   002B56  0E90               	movlw	low __pidataBANK0
   412   002B58  6EF6               	movwf	tblptrl,c
   413   002B5A  0E2D               	movlw	high __pidataBANK0
   414   002B5C  6EF7               	movwf	tblptrh,c
   415   002B5E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   416   002B60  6EF8               	movwf	tblptru,c
   417   002B62  0009               	tblrd		*+	;fetch initializer
   418   002B64  CFF5 F0FF          	movff	tablat,__pdataBANK0
   419                           
   420                           ; Clear objects allocated to BANK1 (92 bytes)
   421   002B68  EE01  F000         	lfsr	0,__pbssBANK1
   422   002B6C  0E5C               	movlw	92
   423   002B6E                     clear_0:
   424   002B6E  6AEE               	clrf	postinc0,c
   425   002B70  06E8               	decf	wreg,f,c
   426   002B72  E1FD               	bnz	clear_0
   427                           
   428                           ; Clear objects allocated to BANK0 (93 bytes)
   429   002B74  EE00  F060         	lfsr	0,__pbssBANK0
   430   002B78  0E5D               	movlw	93
   431   002B7A                     clear_1:
   432   002B7A  6AEE               	clrf	postinc0,c
   433   002B7C  06E8               	decf	wreg,f,c
   434   002B7E  E1FD               	bnz	clear_1
   435                           
   436                           ; Clear objects allocated to COMRAM (5 bytes)
   437   002B80  6A5F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   438   002B82  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   439   002B84  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   440   002B86  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   441   002B88  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   442   002B8A                     end_of_initialization:
   443                           	callstack 0
   444   002B8A                     __end_of__initialization:
   445                           	callstack 0
   446   002B8A  0100               	movlb	0
   447   002B8C  EFC8  F00E         	goto	_main	;jump to C main() function
   448                           
   449                           	psect	bssCOMRAM
   450   00005B                     __pbssCOMRAM:
   451                           	callstack 0
   452   00005B                     _flags:
   453                           	callstack 0
   454   00005B                     	ds	1
   455   00005C                     _TxBufReadCnt:
   456                           	callstack 0
   457   00005C                     	ds	1
   458   00005D                     _TxBufWriteCnt:
   459                           	callstack 0
   460   00005D                     	ds	1
   461   00005E                     _RxBufReadCnt:
   462                           	callstack 0
   463   00005E                     	ds	1
   464   00005F                     _RxBufWriteCnt:
   465                           	callstack 0
   466   00005F                     	ds	1
   467                           
   468                           	psect	bssBANK0
   469   000060                     __pbssBANK0:
   470                           	callstack 0
   471   000060                     _ldrReadings:
   472                           	callstack 0
   473   000060                     	ds	20
   474   000074                     _EUSART4RXbuf:
   475                           	callstack 0
   476   000074                     	ds	20
   477   000088                     _hue:
   478                           	callstack 0
   479   000088                     	ds	10
   480   000092                     _width:
   481                           	callstack 0
   482   000092                     	ds	2
   483   000094                     _prec:
   484                           	callstack 0
   485   000094                     	ds	2
   486   000096                     _readingIndex:
   487                           	callstack 0
   488   000096                     	ds	1
   489   000097                     _colorCurrent:
   490                           	callstack 0
   491   000097                     	ds	10
   492   0000A1                     _colorCalibration:
   493                           	callstack 0
   494   0000A1                     	ds	10
   495   0000AB                     _motorR:
   496                           	callstack 0
   497   0000AB                     	ds	9
   498   0000B4                     _motorL:
   499                           	callstack 0
   500   0000B4                     	ds	9
   501                           
   502                           	psect	dataBANK0
   503   0000FF                     __pdataBANK0:
   504                           	callstack 0
   505   0000FF                     _dataFlag:
   506                           	callstack 0
   507   0000FF                     	ds	1
   508                           
   509                           	psect	bssBANK1
   510   000100                     __pbssBANK1:
   511                           	callstack 0
   512   000100                     _EUSART4TXbuf:
   513                           	callstack 0
   514   000100                     	ds	60
   515   00013C                     _dbuf:
   516                           	callstack 0
   517   00013C                     	ds	32
   518                           
   519                           	psect	cstackBANK0
   520   0000BD                     __pcstackBANK0:
   521                           	callstack 0
   522   0000BD                     send2USART@hue_char:
   523                           	callstack 0
   524                           
   525                           ; 50 bytes @ 0x0
   526   0000BD                     	ds	50
   527   0000EF                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x32
   530   0000EF                     	ds	2
   531   0000F1                     main@current:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x34
   535   0000F1                     	ds	4
   536   0000F5                     main@maximum:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x38
   540   0000F5                     	ds	4
   541   0000F9                     main@clear_norm:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3C
   545   0000F9                     	ds	2
   546   0000FB                     main@ambient:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x3E
   550   0000FB                     	ds	4
   551                           
   552                           	psect	cstackCOMRAM
   553   000001                     __pcstackCOMRAM:
   554                           	callstack 0
   555   000001                     ??_I2C_2_Master_Idle:
   556   000001                     ?___wmul:
   557                           	callstack 0
   558   000001                     ?___awdiv:
   559                           	callstack 0
   560   000001                     ?___awmod:
   561                           	callstack 0
   562   000001                     ?___fladd:
   563                           	callstack 0
   564   000001                     sendCharSerial4@charToSend:
   565                           	callstack 0
   566   000001                     initDCmotorsPWM@PWMperiod:
   567                           	callstack 0
   568   000001                     ___wmul@multiplier:
   569                           	callstack 0
   570   000001                     ___awdiv@dividend:
   571                           	callstack 0
   572   000001                     ___awmod@dividend:
   573                           	callstack 0
   574   000001                     fputc@c:
   575                           	callstack 0
   576   000001                     ___fladd@b:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x0
   580   000001                     	ds	1
   581   000002                     ??_I2C_2_Master_Read:
   582   000002                     I2C_2_Master_Write@data_byte:
   583                           	callstack 0
   584   000002                     sendStringSerial4@string:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x1
   588   000002                     	ds	1
   589   000003                     color_writetoaddr@value:
   590                           	callstack 0
   591   000003                     I2C_2_Master_Read@ack:
   592                           	callstack 0
   593   000003                     fputc@fp:
   594                           	callstack 0
   595   000003                     ___wmul@multiplicand:
   596                           	callstack 0
   597   000003                     ___awdiv@divisor:
   598                           	callstack 0
   599   000003                     ___awmod@divisor:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x2
   603   000003                     	ds	1
   604   000004                     ??_fputc:
   605   000004                     color_writetoaddr@address:
   606                           	callstack 0
   607   000004                     I2C_2_Master_Read@tmp:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x3
   611   000004                     	ds	1
   612   000005                     ??_color_click_init:
   613   000005                     ?_color_read_Red:
   614                           	callstack 0
   615   000005                     ?_color_read_Green:
   616                           	callstack 0
   617   000005                     ?_color_read_Blue:
   618                           	callstack 0
   619   000005                     ?_color_read_Clear:
   620                           	callstack 0
   621   000005                     ___awdiv@counter:
   622                           	callstack 0
   623   000005                     ___awmod@counter:
   624                           	callstack 0
   625   000005                     ___wmul@product:
   626                           	callstack 0
   627   000005                     ___fladd@a:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x4
   631   000005                     	ds	1
   632   000006                     ___awdiv@sign:
   633                           	callstack 0
   634   000006                     ___awmod@sign:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x5
   638   000006                     	ds	1
   639   000007                     ??_color_read_Red:
   640   000007                     ??_color_read_Green:
   641   000007                     ??_color_read_Blue:
   642   000007                     ??_color_read_Clear:
   643   000007                     ?_abs:
   644                           	callstack 0
   645   000007                     ?_read_prec_or_width:
   646                           	callstack 0
   647   000007                     read_prec_or_width@fmt:
   648                           	callstack 0
   649   000007                     ___awdiv@quotient:
   650                           	callstack 0
   651   000007                     abs@a:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x6
   655   000007                     	ds	1
   656   000008                     read_prec_or_width@ap:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x7
   660   000008                     	ds	1
   661   000009                     ??___fladd:
   662   000009                     ??_abs:
   663   000009                     read_prec_or_width@c:
   664                           	callstack 0
   665   000009                     fputs@s:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x8
   669   000009                     	ds	1
   670   00000A                     color_read_Red@tmp:
   671                           	callstack 0
   672   00000A                     color_read_Green@tmp:
   673                           	callstack 0
   674   00000A                     color_read_Blue@tmp:
   675                           	callstack 0
   676   00000A                     color_read_Clear@tmp:
   677                           	callstack 0
   678   00000A                     read_prec_or_width@n:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x9
   682   00000A                     	ds	1
   683   00000B                     fputs@fp:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0xA
   687   00000B                     	ds	1
   688   00000C                     ?___xxtofl:
   689                           	callstack 0
   690   00000C                     fputs@c:
   691                           	callstack 0
   692   00000C                     ___xxtofl@val:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0xB
   696   00000C                     	ds	1
   697   00000D                     ___fladd@signs:
   698                           	callstack 0
   699   00000D                     fputs@i:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0xC
   703   00000D                     	ds	1
   704   00000E                     ___fladd@aexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0xD
   708   00000E                     	ds	1
   709   00000F                     ___fladd@bexp:
   710                           	callstack 0
   711   00000F                     pad@fp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0xE
   715   00000F                     	ds	1
   716   000010                     ??___xxtofl:
   717   000010                     ___fladd@grs:
   718                           	callstack 0
   719   000010                     pad@buf:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0xF
   723   000010                     	ds	1
   724   000011                     ?___flsub:
   725                           	callstack 0
   726   000011                     ___flsub@b:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x10
   730   000011                     	ds	1
   731   000012                     pad@p:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x11
   735   000012                     	ds	2
   736   000014                     ??_pad:
   737   000014                     ___xxtofl@sign:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x13
   741   000014                     	ds	1
   742   000015                     ___xxtofl@exp:
   743                           	callstack 0
   744   000015                     pad@i:
   745                           	callstack 0
   746   000015                     ___flsub@a:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x14
   750   000015                     	ds	1
   751   000016                     ___xxtofl@arg:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x15
   755   000016                     	ds	1
   756   000017                     dtoa@fp:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x16
   760   000017                     	ds	1
   761   000018                     dtoa@d:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x17
   765   000018                     	ds	1
   766   000019                     ?___flmul:
   767                           	callstack 0
   768   000019                     ___flmul@b:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x18
   772   000019                     	ds	1
   773   00001A                     _dtoa$2659:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x19
   777   00001A                     	ds	2
   778   00001C                     dtoa@p:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x1B
   782   00001C                     	ds	1
   783   00001D                     dtoa@w:
   784                           	callstack 0
   785   00001D                     ___flmul@a:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x1C
   789   00001D                     	ds	2
   790   00001F                     dtoa@s:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x1E
   794   00001F                     	ds	1
   795   000020                     dtoa@i:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1F
   799   000020                     	ds	1
   800   000021                     ??___flmul:
   801                           
   802                           ; 1 bytes @ 0x20
   803   000021                     	ds	1
   804   000022                     vfpfcnvrt@fp:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x21
   808   000022                     	ds	1
   809   000023                     vfpfcnvrt@fmt:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x22
   813   000023                     	ds	1
   814   000024                     vfpfcnvrt@ap:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x23
   818   000024                     	ds	1
   819   000025                     ??_vfpfcnvrt:
   820   000025                     ___flmul@sign:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x24
   824   000025                     	ds	1
   825   000026                     ___flmul@grs:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x25
   829   000026                     	ds	1
   830   000027                     vfpfcnvrt@convarg:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x26
   834   000027                     	ds	3
   835   00002A                     ___flmul@aexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x29
   839   00002A                     	ds	1
   840   00002B                     ___flmul@bexp:
   841                           	callstack 0
   842   00002B                     vfpfcnvrt@done:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x2A
   846   00002B                     	ds	1
   847   00002C                     vfpfcnvrt@cp:
   848                           	callstack 0
   849   00002C                     ___flmul@prod:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x2B
   853   00002C                     	ds	1
   854   00002D                     ?_vfprintf:
   855                           	callstack 0
   856   00002D                     vfprintf@fp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x2C
   860   00002D                     	ds	1
   861   00002E                     vfprintf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x2D
   865   00002E                     	ds	1
   866   00002F                     vfprintf@ap:
   867                           	callstack 0
   868                           
   869                           ; 1 bytes @ 0x2E
   870   00002F                     	ds	1
   871   000030                     vfprintf@cfmt:
   872                           	callstack 0
   873   000030                     ___flmul@temp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x2F
   877   000030                     	ds	1
   878   000031                     ?_sprintf:
   879                           	callstack 0
   880   000031                     sprintf@s:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x30
   884   000031                     	ds	1
   885   000032                     ?___fldiv:
   886                           	callstack 0
   887   000032                     sprintf@fmt:
   888                           	callstack 0
   889   000032                     ___fldiv@b:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x31
   893   000032                     	ds	4
   894   000036                     ___fldiv@a:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x35
   898   000036                     	ds	1
   899   000037                     sprintf@ap:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x36
   903   000037                     	ds	1
   904   000038                     sprintf@f:
   905                           	callstack 0
   906                           
   907                           ; 12 bytes @ 0x37
   908   000038                     	ds	2
   909   00003A                     ??___fldiv:
   910                           
   911                           ; 1 bytes @ 0x39
   912   00003A                     	ds	4
   913   00003E                     ___fldiv@rem:
   914                           	callstack 0
   915                           
   916                           ; 4 bytes @ 0x3D
   917   00003E                     	ds	4
   918   000042                     ___fldiv@sign:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x41
   922   000042                     	ds	1
   923   000043                     ___fldiv@new_exp:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x42
   927   000043                     	ds	1
   928   000044                     calibration_routine@cCal:
   929                           	callstack 0
   930   000044                     send2USART@hue:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x43
   934   000044                     	ds	1
   935   000045                     ??_calibration_routine:
   936   000045                     ___fldiv@grs:
   937                           	callstack 0
   938                           
   939                           ; 4 bytes @ 0x44
   940   000045                     	ds	1
   941   000046                     
   942                           ; 1 bytes @ 0x45
   943   000046                     	ds	1
   944   000047                     calibration_routine@cal_state:
   945                           	callstack 0
   946                           
   947                           ; 20 bytes @ 0x46
   948   000047                     	ds	2
   949   000049                     ___fldiv@bexp:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x48
   953   000049                     	ds	1
   954   00004A                     ___fldiv@aexp:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x49
   958   00004A                     	ds	1
   959   00004B                     ?___fltol:
   960                           	callstack 0
   961   00004B                     ___fltol@f1:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x4A
   965   00004B                     	ds	4
   966   00004F                     ??___fltol:
   967                           
   968                           ; 1 bytes @ 0x4E
   969   00004F                     	ds	4
   970   000053                     ___fltol@sign1:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x52
   974   000053                     	ds	1
   975   000054                     ___fltol@exp1:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x53
   979   000054                     	ds	7
   980                           
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   983 ;;
   984 ;; *************** function _main *****************
   985 ;; Defined at:
   986 ;;		line 28 in file "main.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  ambient         4   62[BANK0 ] float 
   991 ;;  maximum         4   56[BANK0 ] float 
   992 ;;  current         4   52[BANK0 ] float 
   993 ;;  clear_norm      2   60[BANK0 ] unsigned int 
   994 ;;  hue_char       20    0        unsigned char [20]
   995 ;;  clear_max       4    0        float 
   996 ;;  clear           4    0        float 
   997 ;;  PWMcycle        2    0        unsigned int 
   998 ;;  hue             2    0        unsigned int 
   999 ;;  green           2    0        unsigned int 
  1000 ;;  blue            2    0        unsigned int 
  1001 ;;  red             2    0        unsigned int 
  1002 ;;  battery_leve    2    0        unsigned int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1013 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;Total ram usage:       16 bytes
  1017 ;; Hardware stack levels required when called: 9
  1018 ;; This function calls:
  1019 ;;		_ADC_init
  1020 ;;		___fldiv
  1021 ;;		___flmul
  1022 ;;		___flsub
  1023 ;;		___fltol
  1024 ;;		___xxtofl
  1025 ;;		_calibration_routine
  1026 ;;		_color_click_init
  1027 ;;		_color_read_Clear
  1028 ;;		_initDCmotorsPWM
  1029 ;;		_initUSART4
  1030 ;;		_send2USART
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text0
  1037   001D90                     __ptext0:
  1038                           	callstack 0
  1039   001D90                     _main:
  1040                           	callstack 22
  1041   001D90                     
  1042                           ;main.c: 30:     ADC_init();
  1043   001D90  EC99  F016         	call	_ADC_init	;wreg free
  1044   001D94                     
  1045                           ;main.c: 31:     color_click_init();
  1046   001D94  ECC8  F015         	call	_color_click_init	;wreg free
  1047   001D98                     
  1048                           ;main.c: 32:     initUSART4();
  1049   001D98  EC8A  F016         	call	_initUSART4	;wreg free
  1050   001D9C                     
  1051                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1052   001D9C  0E00               	movlw	0
  1053   001D9E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1054   001DA0  0E63               	movlw	99
  1055   001DA2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1056   001DA4  EC3E  F014         	call	_initDCmotorsPWM	;wreg free
  1057   001DA8                     
  1058                           ;main.c: 39:     motorL.power = 0;
  1059   001DA8  0E00               	movlw	0
  1060   001DAA  0100               	movlb	0	; () banked
  1061   001DAC  6FB4               	movwf	_motorL& (0+255),b
  1062   001DAE                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 40:     motorL.direction = 1;
  1065   001DAE  0E01               	movlw	1
  1066   001DB0  6FB5               	movwf	(_motorL+1)& (0+255),b
  1067   001DB2                     
  1068                           ; BSR set to: 0
  1069                           ;main.c: 41:     motorL.brakemode = 1;
  1070   001DB2  0E01               	movlw	1
  1071   001DB4  6FB6               	movwf	(_motorL+2)& (0+255),b
  1072   001DB6                     
  1073                           ; BSR set to: 0
  1074                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1075   001DB6  0E00               	movlw	0
  1076   001DB8  6FB8               	movwf	(_motorL+4)& (0+255),b
  1077   001DBA  0E63               	movlw	99
  1078   001DBC  6FB7               	movwf	(_motorL+3)& (0+255),b
  1079   001DBE                     
  1080                           ; BSR set to: 0
  1081                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1082   001DBE  0EAA               	movlw	170
  1083   001DC0  6FB9               	movwf	(_motorL+5)& (0+255),b
  1084   001DC2  0E0F               	movlw	15
  1085   001DC4  6FBA               	movwf	(_motorL+6)& (0+255),b
  1086   001DC6                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1089   001DC6  0EA6               	movlw	166
  1090   001DC8  6FBB               	movwf	(_motorL+7)& (0+255),b
  1091   001DCA  0E0F               	movlw	15
  1092   001DCC  6FBC               	movwf	(_motorL+8)& (0+255),b
  1093   001DCE                     
  1094                           ; BSR set to: 0
  1095                           ;main.c: 46:     motorR.power = 0;
  1096   001DCE  0E00               	movlw	0
  1097   001DD0  6FAB               	movwf	_motorR& (0+255),b
  1098   001DD2                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 47:     motorR.direction = 1;
  1101   001DD2  0E01               	movlw	1
  1102   001DD4  6FAC               	movwf	(_motorR+1)& (0+255),b
  1103   001DD6                     
  1104                           ; BSR set to: 0
  1105                           ;main.c: 48:     motorR.brakemode = 1;
  1106   001DD6  0E01               	movlw	1
  1107   001DD8  6FAD               	movwf	(_motorR+2)& (0+255),b
  1108   001DDA                     
  1109                           ; BSR set to: 0
  1110                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1111   001DDA  0E00               	movlw	0
  1112   001DDC  6FAF               	movwf	(_motorR+4)& (0+255),b
  1113   001DDE  0E63               	movlw	99
  1114   001DE0  6FAE               	movwf	(_motorR+3)& (0+255),b
  1115                           
  1116                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1117   001DE2  0E25               	movlw	37
  1118   001DE4  6FB0               	movwf	(_motorR+5)& (0+255),b
  1119   001DE6  0E0F               	movlw	15
  1120   001DE8  6FB1               	movwf	(_motorR+6)& (0+255),b
  1121                           
  1122                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1123   001DEA  0E21               	movlw	33
  1124   001DEC  6FB2               	movwf	(_motorR+7)& (0+255),b
  1125   001DEE  0E0F               	movlw	15
  1126   001DF0  6FB3               	movwf	(_motorR+8)& (0+255),b
  1127   001DF2                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 54:     LATDbits.LATD7=0;
  1130   001DF2  9E7C               	bcf	124,7,c	;volatile
  1131   001DF4                     
  1132                           ; BSR set to: 0
  1133                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1134   001DF4  9E84               	bcf	132,7,c	;volatile
  1135   001DF6                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1138   001DF6  9087               	bcf	135,0,c	;volatile
  1139   001DF8                     
  1140                           ; BSR set to: 0
  1141                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1142   001DF8  907F               	bcf	127,0,c	;volatile
  1143   001DFA                     
  1144                           ; BSR set to: 0
  1145                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1146   001DFA  9E85               	bcf	133,7,c	;volatile
  1147   001DFC                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1150   001DFC  9E7D               	bcf	125,7,c	;volatile
  1151   001DFE                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1154   001DFE  9681               	bcf	129,3,c	;volatile
  1155   001E00                     
  1156                           ; BSR set to: 0
  1157                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1158   001E00  9679               	bcf	121,3,c	;volatile
  1159   001E02                     
  1160                           ; BSR set to: 0
  1161                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1162   001E02  8686               	bsf	134,3,c	;volatile
  1163   001E04                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1166   001E04  010E               	movlb	14	; () banked
  1167   001E06  97B4               	bcf	180,3,b	;volatile
  1168   001E08                     
  1169                           ; BSR set to: 14
  1170                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     float clea
      +                          r;;main.c: 80:     float clear_max;;main.c: 81:     unsigned int hue;;main.c: 82:     ch
      +                          ar hue_char[20];;main.c: 83:     TRISHbits.TRISH3 = 0;
  1171   001E08  9688               	bcf	136,3,c	;volatile
  1172   001E0A                     
  1173                           ; BSR set to: 14
  1174                           ;main.c: 84:     LATHbits.LATH3 = 1;
  1175   001E0A  8680               	bsf	128,3,c	;volatile
  1176   001E0C                     
  1177                           ; BSR set to: 14
  1178                           ;main.c: 85:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1179   001E0C  0E19               	movlw	25
  1180   001E0E  0100               	movlb	0	; () banked
  1181   001E10  6FF0               	movwf	(??_main+1)& (0+255),b
  1182   001E12  0E5A               	movlw	90
  1183   001E14  6FEF               	movwf	??_main& (0+255),b
  1184   001E16  0EB1               	movlw	177
  1185   001E18                     u4287:
  1186   001E18  2EE8               	decfsz	wreg,f,c
  1187   001E1A  D7FE               	bra	u4287
  1188   001E1C  2FEF               	decfsz	??_main& (0+255),f,b
  1189   001E1E  D7FC               	bra	u4287
  1190   001E20  2FF0               	decfsz	(??_main+1)& (0+255),f,b
  1191   001E22  D7FA               	bra	u4287
  1192   001E24  D000               	nop2	
  1193   001E26                     
  1194                           ;main.c: 86:     LATHbits.LATH3 = 0;
  1195   001E26  9680               	bcf	128,3,c	;volatile
  1196   001E28                     
  1197                           ;main.c: 87:     LATFbits.LATF2 = 0;
  1198   001E28  947E               	bcf	126,2,c	;volatile
  1199   001E2A                     
  1200                           ;main.c: 88:     TRISFbits.TRISF2 = 1;
  1201   001E2A  8486               	bsf	134,2,c	;volatile
  1202   001E2C                     
  1203                           ;main.c: 89:     ANSELFbits.ANSELF2 = 0;
  1204   001E2C  010E               	movlb	14	; () banked
  1205   001E2E  95B4               	bcf	180,2,b	;volatile
  1206   001E30                     
  1207                           ; BSR set to: 14
  1208                           ;main.c: 92:     calibration_routine(&colorCalibration);
  1209   001E30  0EA1               	movlw	low _colorCalibration
  1210   001E32  6E44               	movwf	calibration_routine@cCal^0,c
  1211   001E34  ECAB  F00D         	call	_calibration_routine	;wreg free
  1212   001E38                     
  1213                           ;main.c: 94:     LATGbits.LATG0 = 1;
  1214   001E38  807F               	bsf	127,0,c	;volatile
  1215   001E3A                     
  1216                           ;main.c: 95:     LATEbits.LATE7 = 1;
  1217   001E3A  8E7D               	bsf	125,7,c	;volatile
  1218   001E3C                     
  1219                           ;main.c: 96:     LATAbits.LATA3 = 1;
  1220   001E3C  8679               	bsf	121,3,c	;volatile
  1221   001E3E                     l4867:
  1222                           
  1223                           ;main.c: 100:         float current = color_read_Clear();
  1224   001E3E  ECD6  F014         	call	_color_read_Clear	;wreg free
  1225   001E42  C005  F00C         	movff	?_color_read_Clear,___xxtofl@val
  1226   001E46  C006  F00D         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1227   001E4A  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1228   001E4C  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1229   001E4E  0E00               	movlw	0
  1230   001E50  ECB4  F00F         	call	___xxtofl
  1231   001E54  C00C  F0F1         	movff	?___xxtofl,main@current
  1232   001E58  C00D  F0F2         	movff	?___xxtofl+1,main@current+1
  1233   001E5C  C00E  F0F3         	movff	?___xxtofl+2,main@current+2
  1234   001E60  C00F  F0F4         	movff	?___xxtofl+3,main@current+3
  1235   001E64                     
  1236                           ;main.c: 101:         float maximum = colorCalibration.clear;
  1237   001E64  C0A7  F00C         	movff	_colorCalibration+6,___xxtofl@val
  1238   001E68  C0A8  F00D         	movff	_colorCalibration+7,___xxtofl@val+1
  1239   001E6C  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1240   001E6E  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1241   001E70  0E00               	movlw	0
  1242   001E72  ECB4  F00F         	call	___xxtofl
  1243   001E76  C00C  F0F5         	movff	?___xxtofl,main@maximum
  1244   001E7A  C00D  F0F6         	movff	?___xxtofl+1,main@maximum+1
  1245   001E7E  C00E  F0F7         	movff	?___xxtofl+2,main@maximum+2
  1246   001E82  C00F  F0F8         	movff	?___xxtofl+3,main@maximum+3
  1247   001E86                     
  1248                           ;main.c: 102:         float ambient = colorCalibration.clear_ambient;
  1249   001E86  C0A9  F00C         	movff	_colorCalibration+8,___xxtofl@val
  1250   001E8A  C0AA  F00D         	movff	_colorCalibration+9,___xxtofl@val+1
  1251   001E8E  6A0E               	clrf	(___xxtofl@val+2)^0,c
  1252   001E90  6A0F               	clrf	(___xxtofl@val+3)^0,c
  1253   001E92  0E00               	movlw	0
  1254   001E94  ECB4  F00F         	call	___xxtofl
  1255   001E98  C00C  F0FB         	movff	?___xxtofl,main@ambient
  1256   001E9C  C00D  F0FC         	movff	?___xxtofl+1,main@ambient+1
  1257   001EA0  C00E  F0FD         	movff	?___xxtofl+2,main@ambient+2
  1258   001EA4  C00F  F0FE         	movff	?___xxtofl+3,main@ambient+3
  1259   001EA8                     
  1260                           ;main.c: 103:         unsigned int clear_norm = (current-ambient)*100/(maximum-ambient);
  1261   001EA8  C0FB  F015         	movff	main@ambient,___flsub@a
  1262   001EAC  C0FC  F016         	movff	main@ambient+1,___flsub@a+1
  1263   001EB0  C0FD  F017         	movff	main@ambient+2,___flsub@a+2
  1264   001EB4  C0FE  F018         	movff	main@ambient+3,___flsub@a+3
  1265   001EB8  C0F5  F011         	movff	main@maximum,___flsub@b
  1266   001EBC  C0F6  F012         	movff	main@maximum+1,___flsub@b+1
  1267   001EC0  C0F7  F013         	movff	main@maximum+2,___flsub@b+2
  1268   001EC4  C0F8  F014         	movff	main@maximum+3,___flsub@b+3
  1269   001EC8  EC26  F015         	call	___flsub	;wreg free
  1270   001ECC  C011  F036         	movff	?___flsub,___fldiv@a
  1271   001ED0  C012  F037         	movff	?___flsub+1,___fldiv@a+1
  1272   001ED4  C013  F038         	movff	?___flsub+2,___fldiv@a+2
  1273   001ED8  C014  F039         	movff	?___flsub+3,___fldiv@a+3
  1274   001EDC  0E00               	movlw	0
  1275   001EDE  6E1D               	movwf	___flmul@a^0,c
  1276   001EE0  0E00               	movlw	0
  1277   001EE2  6E1E               	movwf	(___flmul@a+1)^0,c
  1278   001EE4  0EC8               	movlw	200
  1279   001EE6  6E1F               	movwf	(___flmul@a+2)^0,c
  1280   001EE8  0E42               	movlw	66
  1281   001EEA  6E20               	movwf	(___flmul@a+3)^0,c
  1282   001EEC  C0FB  F015         	movff	main@ambient,___flsub@a
  1283   001EF0  C0FC  F016         	movff	main@ambient+1,___flsub@a+1
  1284   001EF4  C0FD  F017         	movff	main@ambient+2,___flsub@a+2
  1285   001EF8  C0FE  F018         	movff	main@ambient+3,___flsub@a+3
  1286   001EFC  C0F1  F011         	movff	main@current,___flsub@b
  1287   001F00  C0F2  F012         	movff	main@current+1,___flsub@b+1
  1288   001F04  C0F3  F013         	movff	main@current+2,___flsub@b+2
  1289   001F08  C0F4  F014         	movff	main@current+3,___flsub@b+3
  1290   001F0C  EC26  F015         	call	___flsub	;wreg free
  1291   001F10  C011  F019         	movff	?___flsub,___flmul@b
  1292   001F14  C012  F01A         	movff	?___flsub+1,___flmul@b+1
  1293   001F18  C013  F01B         	movff	?___flsub+2,___flmul@b+2
  1294   001F1C  C014  F01C         	movff	?___flsub+3,___flmul@b+3
  1295   001F20  ECC9  F009         	call	___flmul	;wreg free
  1296   001F24  C019  F032         	movff	?___flmul,___fldiv@b
  1297   001F28  C01A  F033         	movff	?___flmul+1,___fldiv@b+1
  1298   001F2C  C01B  F034         	movff	?___flmul+2,___fldiv@b+2
  1299   001F30  C01C  F035         	movff	?___flmul+3,___fldiv@b+3
  1300   001F34  ECDE  F00B         	call	___fldiv	;wreg free
  1301   001F38  C032  F04B         	movff	?___fldiv,___fltol@f1
  1302   001F3C  C033  F04C         	movff	?___fldiv+1,___fltol@f1+1
  1303   001F40  C034  F04D         	movff	?___fldiv+2,___fltol@f1+2
  1304   001F44  C035  F04E         	movff	?___fldiv+3,___fltol@f1+3
  1305   001F48  EC0C  F012         	call	___fltol	;wreg free
  1306   001F4C  C04B  F0F9         	movff	?___fltol,main@clear_norm
  1307   001F50  C04C  F0FA         	movff	?___fltol+1,main@clear_norm+1
  1308   001F54                     
  1309                           ;main.c: 105:         send2USART(clear_norm);
  1310   001F54  C0F9  F044         	movff	main@clear_norm,send2USART@hue
  1311   001F58  C0FA  F045         	movff	main@clear_norm+1,send2USART@hue+1
  1312   001F5C  EC7B  F016         	call	_send2USART	;wreg free
  1313   001F60  EF1F  F00F         	goto	l4867
  1314   001F64  EF00  F000         	goto	start
  1315   001F68                     __end_of_main:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _send2USART *****************
  1319 ;; Defined at:
  1320 ;;		line 146 in file "serial.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  hue             2   67[COMRAM] unsigned int 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:       52 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 8
  1341 ;; This function calls:
  1342 ;;		_sendStringSerial4
  1343 ;;		_sprintf
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text1
  1350   002CF6                     __ptext1:
  1351                           	callstack 0
  1352   002CF6                     _send2USART:
  1353                           	callstack 22
  1354   002CF6                     
  1355                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1356   002CF6  0EBD               	movlw	low send2USART@hue_char
  1357   002CF8  6E31               	movwf	sprintf@s^0,c
  1358   002CFA  0EC3               	movlw	low STR_14
  1359   002CFC  6E32               	movwf	sprintf@fmt^0,c
  1360   002CFE  C044  F033         	movff	send2USART@hue,?_sprintf+2
  1361   002D02  C045  F034         	movff	send2USART@hue+1,?_sprintf+3
  1362   002D06  ECE2  F015         	call	_sprintf	;wreg free
  1363   002D0A                     
  1364                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1365   002D0A  0EBD               	movlw	low send2USART@hue_char
  1366   002D0C  6E02               	movwf	sendStringSerial4@string^0,c
  1367   002D0E  EC16  F016         	call	_sendStringSerial4	;wreg free
  1368   002D12  0012               	return		;funcret
  1369   002D14                     __end_of_send2USART:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _initUSART4 *****************
  1373 ;; Defined at:
  1374 ;;		line 14 in file "serial.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text2
  1402   002D14                     __ptext2:
  1403                           	callstack 0
  1404   002D14                     _initUSART4:
  1405                           	callstack 30
  1406   002D14                     
  1407                           ;serial.c: 15:     RC0PPS = 0x12;
  1408   002D14  0E12               	movlw	18
  1409   002D16  010E               	movlb	14	; () banked
  1410   002D18  6F62               	movwf	98,b	;volatile
  1411                           
  1412                           ;serial.c: 16:     RX4PPS = 0x11;
  1413   002D1A  0E11               	movlw	17
  1414   002D1C  6F15               	movwf	21,b	;volatile
  1415   002D1E                     
  1416                           ; BSR set to: 14
  1417                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  1418   002D1E  97E9               	bcf	233,3,b	;volatile
  1419   002D20                     
  1420                           ; BSR set to: 14
  1421                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  1422   002D20  95E8               	bcf	232,2,b	;volatile
  1423                           
  1424                           ;serial.c: 19:     SP4BRGL = 51;
  1425   002D22  0E33               	movlw	51
  1426   002D24  6FE5               	movwf	229,b	;volatile
  1427                           
  1428                           ;serial.c: 20:     SP4BRGH = 0;
  1429   002D26  0E00               	movlw	0
  1430   002D28  6FE6               	movwf	230,b	;volatile
  1431   002D2A                     
  1432                           ; BSR set to: 14
  1433                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  1434   002D2A  89E7               	bsf	231,4,b	;volatile
  1435   002D2C                     
  1436                           ; BSR set to: 14
  1437                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  1438   002D2C  8BE8               	bsf	232,5,b	;volatile
  1439   002D2E                     
  1440                           ; BSR set to: 14
  1441                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  1442   002D2E  8FE7               	bsf	231,7,b	;volatile
  1443   002D30                     
  1444                           ; BSR set to: 14
  1445   002D30  0012               	return		;funcret
  1446   002D32                     __end_of_initUSART4:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _initDCmotorsPWM *****************
  1450 ;; Defined at:
  1451 ;;		line 5 in file "dc_motor.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;Total ram usage:        2 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text3
  1479   00287C                     __ptext3:
  1480                           	callstack 0
  1481   00287C                     _initDCmotorsPWM:
  1482                           	callstack 30
  1483   00287C                     
  1484                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  1485   00287C  9485               	bcf	133,2,c	;volatile
  1486                           
  1487                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  1488   00287E  9E83               	bcf	131,7,c	;volatile
  1489                           
  1490                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  1491   002880  9885               	bcf	133,4,c	;volatile
  1492                           
  1493                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  1494   002882  9C87               	bcf	135,6,c	;volatile
  1495                           
  1496                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  1497   002884  947D               	bcf	125,2,c	;volatile
  1498                           
  1499                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  1500   002886  9E7B               	bcf	123,7,c	;volatile
  1501                           
  1502                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  1503   002888  987D               	bcf	125,4,c	;volatile
  1504                           
  1505                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  1506   00288A  9C7F               	bcf	127,6,c	;volatile
  1507   00288C                     
  1508                           ;dc_motor.c: 18:     RE2PPS=0x05;
  1509   00288C  0E05               	movlw	5
  1510   00288E  010E               	movlb	14	; () banked
  1511   002890  6F74               	movwf	116,b	;volatile
  1512                           
  1513                           ;dc_motor.c: 19:     RE4PPS=0x06;
  1514   002892  0E06               	movlw	6
  1515   002894  6F76               	movwf	118,b	;volatile
  1516                           
  1517                           ;dc_motor.c: 20:     RC7PPS=0x07;
  1518   002896  0E07               	movlw	7
  1519   002898  6F69               	movwf	105,b	;volatile
  1520                           
  1521                           ;dc_motor.c: 21:     RG6PPS=0x08;
  1522   00289A  0E08               	movlw	8
  1523   00289C  6F88               	movwf	136,b	;volatile
  1524                           
  1525                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  1526   00289E  50BD               	movf	189,w,c	;volatile
  1527   0028A0  0B8F               	andlw	-113
  1528   0028A2  0940               	iorlw	64
  1529   0028A4  6EBD               	movwf	189,c	;volatile
  1530                           
  1531                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1532   0028A6  0EE0               	movlw	-32
  1533   0028A8  16BE               	andwf	190,f,c	;volatile
  1534                           
  1535                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1536   0028AA  50BF               	movf	191,w,c	;volatile
  1537   0028AC  0BF0               	andlw	-16
  1538   0028AE  0901               	iorlw	1
  1539   0028B0  6EBF               	movwf	191,c	;volatile
  1540   0028B2                     
  1541                           ; BSR set to: 14
  1542                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  1543   0028B2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1544   0028B6                     
  1545                           ; BSR set to: 14
  1546                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1547   0028B6  8EBD               	bsf	189,7,c	;volatile
  1548                           
  1549                           ;dc_motor.c: 35:     CCPR1H=0;
  1550   0028B8  0E00               	movlw	0
  1551   0028BA  6EAA               	movwf	170,c	;volatile
  1552                           
  1553                           ;dc_motor.c: 36:     CCPR2H=0;
  1554   0028BC  0E00               	movlw	0
  1555   0028BE  6EA6               	movwf	166,c	;volatile
  1556                           
  1557                           ;dc_motor.c: 37:     CCPR3H=0;
  1558   0028C0  0E00               	movlw	0
  1559   0028C2  010F               	movlb	15	; () banked
  1560   0028C4  6F25               	movwf	37,b	;volatile
  1561                           
  1562                           ;dc_motor.c: 38:     CCPR4H=0;
  1563   0028C6  0E00               	movlw	0
  1564   0028C8  6F21               	movwf	33,b	;volatile
  1565                           
  1566                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1567   0028CA  0EFC               	movlw	-4
  1568   0028CC  16AD               	andwf	173,f,c	;volatile
  1569                           
  1570                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1571   0028CE  0EF3               	movlw	-13
  1572   0028D0  16AD               	andwf	173,f,c	;volatile
  1573                           
  1574                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1575   0028D2  0ECF               	movlw	-49
  1576   0028D4  16AD               	andwf	173,f,c	;volatile
  1577                           
  1578                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1579   0028D6  0E3F               	movlw	-193
  1580   0028D8  16AD               	andwf	173,f,c	;volatile
  1581   0028DA                     
  1582                           ; BSR set to: 15
  1583                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  1584   0028DA  88AB               	bsf	171,4,c	;volatile
  1585                           
  1586                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  1587   0028DC  50AB               	movf	171,w,c	;volatile
  1588   0028DE  0BF0               	andlw	-16
  1589   0028E0  090C               	iorlw	12
  1590   0028E2  6EAB               	movwf	171,c	;volatile
  1591   0028E4                     
  1592                           ; BSR set to: 15
  1593                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  1594   0028E4  8EAB               	bsf	171,7,c	;volatile
  1595   0028E6                     
  1596                           ; BSR set to: 15
  1597                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  1598   0028E6  88A7               	bsf	167,4,c	;volatile
  1599                           
  1600                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  1601   0028E8  50A7               	movf	167,w,c	;volatile
  1602   0028EA  0BF0               	andlw	-16
  1603   0028EC  090C               	iorlw	12
  1604   0028EE  6EA7               	movwf	167,c	;volatile
  1605   0028F0                     
  1606                           ; BSR set to: 15
  1607                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  1608   0028F0  8EA7               	bsf	167,7,c	;volatile
  1609   0028F2                     
  1610                           ; BSR set to: 15
  1611                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  1612   0028F2  8926               	bsf	38,4,b	;volatile
  1613                           
  1614                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  1615   0028F4  5126               	movf	38,w,b	;volatile
  1616   0028F6  0BF0               	andlw	-16
  1617   0028F8  090C               	iorlw	12
  1618   0028FA  6F26               	movwf	38,b	;volatile
  1619   0028FC                     
  1620                           ; BSR set to: 15
  1621                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  1622   0028FC  8F26               	bsf	38,7,b	;volatile
  1623   0028FE                     
  1624                           ; BSR set to: 15
  1625                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  1626   0028FE  8922               	bsf	34,4,b	;volatile
  1627                           
  1628                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  1629   002900  5122               	movf	34,w,b	;volatile
  1630   002902  0BF0               	andlw	-16
  1631   002904  090C               	iorlw	12
  1632   002906  6F22               	movwf	34,b	;volatile
  1633   002908                     
  1634                           ; BSR set to: 15
  1635                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  1636   002908  8F22               	bsf	34,7,b	;volatile
  1637   00290A                     
  1638                           ; BSR set to: 15
  1639   00290A  0012               	return		;funcret
  1640   00290C                     __end_of_initDCmotorsPWM:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _color_click_init *****************
  1644 ;; Defined at:
  1645 ;;		line 8 in file "color.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;Total ram usage:        1 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 3
  1666 ;; This function calls:
  1667 ;;		_I2C_2_Master_Init
  1668 ;;		_color_writetoaddr
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text4
  1675   002B90                     __ptext4:
  1676                           	callstack 0
  1677   002B90                     _color_click_init:
  1678                           	callstack 27
  1679   002B90                     
  1680                           ;color.c: 11:     I2C_2_Master_Init();
  1681   002B90  EC2F  F016         	call	_I2C_2_Master_Init	;wreg free
  1682   002B94                     
  1683                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  1684   002B94  0E01               	movlw	1
  1685   002B96  6E03               	movwf	color_writetoaddr@value^0,c
  1686   002B98  0E00               	movlw	0
  1687   002B9A  EC6B  F016         	call	_color_writetoaddr
  1688   002B9E                     
  1689                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1690   002B9E  0E3F               	movlw	63
  1691   002BA0  6E05               	movwf	??_color_click_init^0,c
  1692   002BA2  0E55               	movlw	85
  1693   002BA4                     u4297:
  1694   002BA4  2EE8               	decfsz	wreg,f,c
  1695   002BA6  D7FE               	bra	u4297
  1696   002BA8  2E05               	decfsz	??_color_click_init^0,f,c
  1697   002BAA  D7FC               	bra	u4297
  1698   002BAC  0000               	nop	
  1699   002BAE                     
  1700                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  1701   002BAE  0E03               	movlw	3
  1702   002BB0  6E03               	movwf	color_writetoaddr@value^0,c
  1703   002BB2  0E00               	movlw	0
  1704   002BB4  EC6B  F016         	call	_color_writetoaddr
  1705   002BB8                     
  1706                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  1707   002BB8  0ED5               	movlw	213
  1708   002BBA  6E03               	movwf	color_writetoaddr@value^0,c
  1709   002BBC  0E01               	movlw	1
  1710   002BBE  EC6B  F016         	call	_color_writetoaddr
  1711   002BC2  0012               	return		;funcret
  1712   002BC4                     __end_of_color_click_init:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _color_writetoaddr *****************
  1716 ;; Defined at:
  1717 ;;		line 24 in file "color.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  address         1    wreg     unsigned char 
  1720 ;;  value           1    2[COMRAM] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  address         1    3[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1732 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 2
  1739 ;; This function calls:
  1740 ;;		_I2C_2_Master_Start
  1741 ;;		_I2C_2_Master_Stop
  1742 ;;		_I2C_2_Master_Write
  1743 ;; This function is called by:
  1744 ;;		_color_click_init
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text5
  1749   002CD6                     __ptext5:
  1750                           	callstack 0
  1751   002CD6                     _color_writetoaddr:
  1752                           	callstack 27
  1753                           
  1754                           ;incstack = 0
  1755                           ;color_writetoaddr@address stored from wreg
  1756   002CD6  6E04               	movwf	color_writetoaddr@address^0,c
  1757   002CD8                     
  1758                           ;color.c: 25:     I2C_2_Master_Start();
  1759   002CD8  ECBD  F016         	call	_I2C_2_Master_Start	;wreg free
  1760                           
  1761                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  1762   002CDC  0E52               	movlw	82
  1763   002CDE  ECB2  F016         	call	_I2C_2_Master_Write
  1764                           
  1765                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  1766   002CE2  5004               	movf	color_writetoaddr@address^0,w,c
  1767   002CE4  0980               	iorlw	128
  1768   002CE6  ECB2  F016         	call	_I2C_2_Master_Write
  1769                           
  1770                           ;color.c: 28:     I2C_2_Master_Write(value);
  1771   002CEA  5003               	movf	color_writetoaddr@value^0,w,c
  1772   002CEC  ECB2  F016         	call	_I2C_2_Master_Write
  1773                           
  1774                           ;color.c: 29:     I2C_2_Master_Stop();
  1775   002CF0  ECB8  F016         	call	_I2C_2_Master_Stop	;wreg free
  1776   002CF4  0012               	return		;funcret
  1777   002CF6                     __end_of_color_writetoaddr:
  1778                           	callstack 0
  1779                           
  1780 ;; *************** function _I2C_2_Master_Init *****************
  1781 ;; Defined at:
  1782 ;;		line 4 in file "i2c.c"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;		None
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;		None
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;Total ram usage:        0 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_color_click_init
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text6
  1810   002C5E                     __ptext6:
  1811                           	callstack 0
  1812   002C5E                     _I2C_2_Master_Init:
  1813                           	callstack 29
  1814   002C5E                     
  1815                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1816   002C5E  010E               	movlb	14	; () banked
  1817   002C60  51D9               	movf	217,w,b	;volatile
  1818   002C62  0BF0               	andlw	-16
  1819   002C64  0908               	iorlw	8
  1820   002C66  6FD9               	movwf	217,b	;volatile
  1821   002C68                     
  1822                           ; BSR set to: 14
  1823                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1824   002C68  8BD9               	bsf	217,5,b	;volatile
  1825                           
  1826                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1827   002C6A  0E9F               	movlw	159
  1828   002C6C  6FD6               	movwf	214,b	;volatile
  1829   002C6E                     
  1830                           ; BSR set to: 14
  1831                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1832   002C6E  8A84               	bsf	132,5,c	;volatile
  1833   002C70                     
  1834                           ; BSR set to: 14
  1835                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1836   002C70  8C84               	bsf	132,6,c	;volatile
  1837   002C72                     
  1838                           ; BSR set to: 14
  1839                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1840   002C72  9BA7               	bcf	167,5,b	;volatile
  1841   002C74                     
  1842                           ; BSR set to: 14
  1843                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1844   002C74  9DA7               	bcf	167,6,b	;volatile
  1845                           
  1846                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1847   002C76  0E1D               	movlw	29
  1848   002C78  6F1D               	movwf	29,b	;volatile
  1849                           
  1850                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1851   002C7A  0E1E               	movlw	30
  1852   002C7C  6F1C               	movwf	28,b	;volatile
  1853                           
  1854                           ;i2c.c: 18:   RD5PPS=0x1C;
  1855   002C7E  0E1C               	movlw	28
  1856   002C80  6F6F               	movwf	111,b	;volatile
  1857                           
  1858                           ;i2c.c: 19:   RD6PPS=0x1B;
  1859   002C82  0E1B               	movlw	27
  1860   002C84  6F70               	movwf	112,b	;volatile
  1861   002C86                     
  1862                           ; BSR set to: 14
  1863   002C86  0012               	return		;funcret
  1864   002C88                     __end_of_I2C_2_Master_Init:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _calibration_routine *****************
  1868 ;; Defined at:
  1869 ;;		line 196 in file "color.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  cCal            1   67[COMRAM] PTR struct colors
  1872 ;;		 -> colorCalibration(10), 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  cal_state      20   70[COMRAM] unsigned char [20]
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1884 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;Total ram usage:       23 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; Hardware stack levels required when called: 8
  1891 ;; This function calls:
  1892 ;;		_color_read_Blue
  1893 ;;		_color_read_Clear
  1894 ;;		_color_read_Green
  1895 ;;		_color_read_Red
  1896 ;;		_sendStringSerial4
  1897 ;;		_sprintf
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text7
  1904   001B56                     __ptext7:
  1905                           	callstack 0
  1906   001B56                     _calibration_routine:
  1907                           	callstack 22
  1908   001B56                     
  1909                           ;color.c: 196: void calibration_routine(colors *cCal);color.c: 197: {;color.c: 199:     
      +                          LATGbits.LATG0 = 0;
  1910   001B56  907F               	bcf	127,0,c	;volatile
  1911                           
  1912                           ;color.c: 200:     LATEbits.LATE7 = 0;
  1913   001B58  9E7D               	bcf	125,7,c	;volatile
  1914                           
  1915                           ;color.c: 201:     LATAbits.LATA3 = 0;
  1916   001B5A  9679               	bcf	121,3,c	;volatile
  1917   001B5C                     
  1918                           ;color.c: 203:     char cal_state[20];;color.c: 207:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  1919   001B5C  0E47               	movlw	low calibration_routine@cal_state
  1920   001B5E  6E31               	movwf	sprintf@s^0,c
  1921   001B60  0E96               	movlw	low STR_1
  1922   001B62  6E32               	movwf	sprintf@fmt^0,c
  1923   001B64  0ECF               	movlw	low STR_2
  1924   001B66  6E33               	movwf	(?_sprintf+2)^0,c
  1925   001B68  5033               	movf	(?_sprintf+2)^0,w,c
  1926   001B6A  A4D8               	btfss	status,2,c
  1927   001B6C  0E0E               	movlw	high __smallconst
  1928   001B6E  6E34               	movwf	(?_sprintf+3)^0,c
  1929   001B70  ECE2  F015         	call	_sprintf	;wreg free
  1930   001B74                     
  1931                           ;color.c: 208:     sendStringSerial4(cal_state);
  1932   001B74  0E47               	movlw	low calibration_routine@cal_state
  1933   001B76  6E02               	movwf	sendStringSerial4@string^0,c
  1934   001B78  EC16  F016         	call	_sendStringSerial4	;wreg free
  1935   001B7C                     l92:
  1936                           
  1937                           ;color.c: 211:     while(PORTFbits.RF2 == 1){
  1938   001B7C  B48E               	btfsc	142,2,c	;volatile
  1939   001B7E  EFC3  F00D         	goto	u4211
  1940   001B82  EFC5  F00D         	goto	u4210
  1941   001B86                     u4211:
  1942   001B86  EFBE  F00D         	goto	l92
  1943   001B8A                     u4210:
  1944   001B8A                     
  1945                           ;color.c: 215:     LATGbits.LATG0 = 1;
  1946   001B8A  807F               	bsf	127,0,c	;volatile
  1947   001B8C                     
  1948                           ;color.c: 216:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1949   001B8C  0E29               	movlw	41
  1950   001B8E  6E46               	movwf	(??_calibration_routine+1)^0,c
  1951   001B90  0E96               	movlw	150
  1952   001B92  6E45               	movwf	??_calibration_routine^0,c
  1953   001B94  0E7F               	movlw	127
  1954   001B96                     u4307:
  1955   001B96  2EE8               	decfsz	wreg,f,c
  1956   001B98  D7FE               	bra	u4307
  1957   001B9A  2E45               	decfsz	??_calibration_routine^0,f,c
  1958   001B9C  D7FC               	bra	u4307
  1959   001B9E  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  1960   001BA0  D7FA               	bra	u4307
  1961   001BA2  0000               	nop	
  1962   001BA4                     
  1963                           ;color.c: 217:     (cCal->red) = color_read_Red();
  1964   001BA4  EC86  F014         	call	_color_read_Red	;wreg free
  1965   001BA8  5044               	movf	calibration_routine@cCal^0,w,c
  1966   001BAA  6ED9               	movwf	fsr2l,c
  1967   001BAC  6ADA               	clrf	fsr2h,c
  1968   001BAE  C005  FFDE         	movff	?_color_read_Red,postinc2
  1969   001BB2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1970   001BB6                     
  1971                           ;color.c: 218:     LATGbits.LATG0 = 0;
  1972   001BB6  907F               	bcf	127,0,c	;volatile
  1973   001BB8                     
  1974                           ;color.c: 221:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  1975   001BB8  0E47               	movlw	low calibration_routine@cal_state
  1976   001BBA  6E31               	movwf	sprintf@s^0,c
  1977   001BBC  0E45               	movlw	low STR_3
  1978   001BBE  6E32               	movwf	sprintf@fmt^0,c
  1979   001BC0  0ECF               	movlw	low STR_2
  1980   001BC2  6E33               	movwf	(?_sprintf+2)^0,c
  1981   001BC4  5033               	movf	(?_sprintf+2)^0,w,c
  1982   001BC6  A4D8               	btfss	status,2,c
  1983   001BC8  0E0E               	movlw	high __smallconst
  1984   001BCA  6E34               	movwf	(?_sprintf+3)^0,c
  1985   001BCC  ECE2  F015         	call	_sprintf	;wreg free
  1986   001BD0                     
  1987                           ;color.c: 222:     sendStringSerial4(&cal_state);
  1988   001BD0  0E47               	movlw	low calibration_routine@cal_state
  1989   001BD2  6E02               	movwf	sendStringSerial4@string^0,c
  1990   001BD4  EC16  F016         	call	_sendStringSerial4	;wreg free
  1991   001BD8                     l95:
  1992                           
  1993                           ;color.c: 224:     while(PORTFbits.RF2 == 1){
  1994   001BD8  B48E               	btfsc	142,2,c	;volatile
  1995   001BDA  EFF1  F00D         	goto	u4221
  1996   001BDE  EFF3  F00D         	goto	u4220
  1997   001BE2                     u4221:
  1998   001BE2  EFEC  F00D         	goto	l95
  1999   001BE6                     u4220:
  2000   001BE6                     
  2001                           ;color.c: 228:     LATEbits.LATE7 = 1;
  2002   001BE6  8E7D               	bsf	125,7,c	;volatile
  2003   001BE8                     
  2004                           ;color.c: 229:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2005   001BE8  0E29               	movlw	41
  2006   001BEA  6E46               	movwf	(??_calibration_routine+1)^0,c
  2007   001BEC  0E96               	movlw	150
  2008   001BEE  6E45               	movwf	??_calibration_routine^0,c
  2009   001BF0  0E7F               	movlw	127
  2010   001BF2                     u4317:
  2011   001BF2  2EE8               	decfsz	wreg,f,c
  2012   001BF4  D7FE               	bra	u4317
  2013   001BF6  2E45               	decfsz	??_calibration_routine^0,f,c
  2014   001BF8  D7FC               	bra	u4317
  2015   001BFA  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  2016   001BFC  D7FA               	bra	u4317
  2017   001BFE  0000               	nop	
  2018   001C00                     
  2019                           ;color.c: 230:     (cCal->green) = color_read_Green();
  2020   001C00  ECAE  F014         	call	_color_read_Green	;wreg free
  2021   001C04  5044               	movf	calibration_routine@cCal^0,w,c
  2022   001C06  6ED9               	movwf	fsr2l,c
  2023   001C08  6ADA               	clrf	fsr2h,c
  2024   001C0A  0E02               	movlw	2
  2025   001C0C  26D9               	addwf	fsr2l,f,c
  2026   001C0E  C005  FFDE         	movff	?_color_read_Green,postinc2
  2027   001C12  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2028   001C16                     
  2029                           ;color.c: 231:     LATEbits.LATE7 = 0;
  2030   001C16  9E7D               	bcf	125,7,c	;volatile
  2031   001C18                     
  2032                           ;color.c: 234:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  2033   001C18  0E47               	movlw	low calibration_routine@cal_state
  2034   001C1A  6E31               	movwf	sprintf@s^0,c
  2035   001C1C  0E62               	movlw	low STR_5
  2036   001C1E  6E32               	movwf	sprintf@fmt^0,c
  2037   001C20  0ECF               	movlw	low STR_2
  2038   001C22  6E33               	movwf	(?_sprintf+2)^0,c
  2039   001C24  5033               	movf	(?_sprintf+2)^0,w,c
  2040   001C26  A4D8               	btfss	status,2,c
  2041   001C28  0E0E               	movlw	high __smallconst
  2042   001C2A  6E34               	movwf	(?_sprintf+3)^0,c
  2043   001C2C  ECE2  F015         	call	_sprintf	;wreg free
  2044   001C30                     
  2045                           ;color.c: 235:     sendStringSerial4(&cal_state);
  2046   001C30  0E47               	movlw	low calibration_routine@cal_state
  2047   001C32  6E02               	movwf	sendStringSerial4@string^0,c
  2048   001C34  EC16  F016         	call	_sendStringSerial4	;wreg free
  2049   001C38                     l98:
  2050                           
  2051                           ;color.c: 237:     while(PORTFbits.RF2 == 1){
  2052   001C38  B48E               	btfsc	142,2,c	;volatile
  2053   001C3A  EF21  F00E         	goto	u4231
  2054   001C3E  EF23  F00E         	goto	u4230
  2055   001C42                     u4231:
  2056   001C42  EF1C  F00E         	goto	l98
  2057   001C46                     u4230:
  2058   001C46                     
  2059                           ;color.c: 241:     LATAbits.LATA3 = 1;
  2060   001C46  8679               	bsf	121,3,c	;volatile
  2061   001C48                     
  2062                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2063   001C48  0E29               	movlw	41
  2064   001C4A  6E46               	movwf	(??_calibration_routine+1)^0,c
  2065   001C4C  0E96               	movlw	150
  2066   001C4E  6E45               	movwf	??_calibration_routine^0,c
  2067   001C50  0E7F               	movlw	127
  2068   001C52                     u4327:
  2069   001C52  2EE8               	decfsz	wreg,f,c
  2070   001C54  D7FE               	bra	u4327
  2071   001C56  2E45               	decfsz	??_calibration_routine^0,f,c
  2072   001C58  D7FC               	bra	u4327
  2073   001C5A  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  2074   001C5C  D7FA               	bra	u4327
  2075   001C5E  0000               	nop	
  2076   001C60                     
  2077                           ;color.c: 243:     (cCal->blue) = color_read_Blue();
  2078   001C60  ECFE  F014         	call	_color_read_Blue	;wreg free
  2079   001C64  5044               	movf	calibration_routine@cCal^0,w,c
  2080   001C66  6ED9               	movwf	fsr2l,c
  2081   001C68  6ADA               	clrf	fsr2h,c
  2082   001C6A  0E04               	movlw	4
  2083   001C6C  26D9               	addwf	fsr2l,f,c
  2084   001C6E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2085   001C72  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2086   001C76                     
  2087                           ;color.c: 244:     LATAbits.LATA3 = 0;
  2088   001C76  9679               	bcf	121,3,c	;volatile
  2089   001C78                     
  2090                           ;color.c: 247:     sprintf(cal_state,"Calibration state =  white light", ".");
  2091   001C78  0E47               	movlw	low calibration_routine@cal_state
  2092   001C7A  6E31               	movwf	sprintf@s^0,c
  2093   001C7C  0E24               	movlw	low STR_7
  2094   001C7E  6E32               	movwf	sprintf@fmt^0,c
  2095   001C80  0ECF               	movlw	low STR_2
  2096   001C82  6E33               	movwf	(?_sprintf+2)^0,c
  2097   001C84  5033               	movf	(?_sprintf+2)^0,w,c
  2098   001C86  A4D8               	btfss	status,2,c
  2099   001C88  0E0E               	movlw	high __smallconst
  2100   001C8A  6E34               	movwf	(?_sprintf+3)^0,c
  2101   001C8C  ECE2  F015         	call	_sprintf	;wreg free
  2102   001C90                     
  2103                           ;color.c: 248:     sendStringSerial4(&cal_state);
  2104   001C90  0E47               	movlw	low calibration_routine@cal_state
  2105   001C92  6E02               	movwf	sendStringSerial4@string^0,c
  2106   001C94  EC16  F016         	call	_sendStringSerial4	;wreg free
  2107   001C98                     l101:
  2108                           
  2109                           ;color.c: 250:     while(PORTFbits.RF2 == 1){
  2110   001C98  B48E               	btfsc	142,2,c	;volatile
  2111   001C9A  EF51  F00E         	goto	u4241
  2112   001C9E  EF53  F00E         	goto	u4240
  2113   001CA2                     u4241:
  2114   001CA2  EF4C  F00E         	goto	l101
  2115   001CA6                     u4240:
  2116   001CA6                     
  2117                           ;color.c: 253:     LATGbits.LATG0 = 1;
  2118   001CA6  807F               	bsf	127,0,c	;volatile
  2119                           
  2120                           ;color.c: 254:     LATEbits.LATE7 = 1;
  2121   001CA8  8E7D               	bsf	125,7,c	;volatile
  2122                           
  2123                           ;color.c: 255:     LATAbits.LATA3 = 1;
  2124   001CAA  8679               	bsf	121,3,c	;volatile
  2125   001CAC                     
  2126                           ;color.c: 256:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2127   001CAC  0E29               	movlw	41
  2128   001CAE  6E46               	movwf	(??_calibration_routine+1)^0,c
  2129   001CB0  0E96               	movlw	150
  2130   001CB2  6E45               	movwf	??_calibration_routine^0,c
  2131   001CB4  0E7F               	movlw	127
  2132   001CB6                     u4337:
  2133   001CB6  2EE8               	decfsz	wreg,f,c
  2134   001CB8  D7FE               	bra	u4337
  2135   001CBA  2E45               	decfsz	??_calibration_routine^0,f,c
  2136   001CBC  D7FC               	bra	u4337
  2137   001CBE  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  2138   001CC0  D7FA               	bra	u4337
  2139   001CC2  0000               	nop	
  2140   001CC4                     
  2141                           ;color.c: 257:     (cCal->clear) = color_read_Clear();
  2142   001CC4  ECD6  F014         	call	_color_read_Clear	;wreg free
  2143   001CC8  5044               	movf	calibration_routine@cCal^0,w,c
  2144   001CCA  6ED9               	movwf	fsr2l,c
  2145   001CCC  6ADA               	clrf	fsr2h,c
  2146   001CCE  0E06               	movlw	6
  2147   001CD0  26D9               	addwf	fsr2l,f,c
  2148   001CD2  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2149   001CD6  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2150   001CDA                     
  2151                           ;color.c: 258:     LATGbits.LATG0 = 0;
  2152   001CDA  907F               	bcf	127,0,c	;volatile
  2153   001CDC                     
  2154                           ;color.c: 259:     LATEbits.LATE7 = 0;
  2155   001CDC  9E7D               	bcf	125,7,c	;volatile
  2156   001CDE                     
  2157                           ;color.c: 260:     LATAbits.LATA3 = 0;
  2158   001CDE  9679               	bcf	121,3,c	;volatile
  2159   001CE0                     
  2160                           ;color.c: 263:     sprintf(cal_state,"Calibration state =  ambient light", ".");
  2161   001CE0  0E47               	movlw	low calibration_routine@cal_state
  2162   001CE2  6E31               	movwf	sprintf@s^0,c
  2163   001CE4  0E01               	movlw	low STR_9
  2164   001CE6  6E32               	movwf	sprintf@fmt^0,c
  2165   001CE8  0ECF               	movlw	low STR_2
  2166   001CEA  6E33               	movwf	(?_sprintf+2)^0,c
  2167   001CEC  5033               	movf	(?_sprintf+2)^0,w,c
  2168   001CEE  A4D8               	btfss	status,2,c
  2169   001CF0  0E0E               	movlw	high __smallconst
  2170   001CF2  6E34               	movwf	(?_sprintf+3)^0,c
  2171   001CF4  ECE2  F015         	call	_sprintf	;wreg free
  2172   001CF8                     
  2173                           ;color.c: 264:     sendStringSerial4(&cal_state);
  2174   001CF8  0E47               	movlw	low calibration_routine@cal_state
  2175   001CFA  6E02               	movwf	sendStringSerial4@string^0,c
  2176   001CFC  EC16  F016         	call	_sendStringSerial4	;wreg free
  2177   001D00                     l104:
  2178                           
  2179                           ;color.c: 266:     while(PORTFbits.RF2 == 1){
  2180   001D00  B48E               	btfsc	142,2,c	;volatile
  2181   001D02  EF85  F00E         	goto	u4251
  2182   001D06  EF87  F00E         	goto	u4250
  2183   001D0A                     u4251:
  2184   001D0A  EF80  F00E         	goto	l104
  2185   001D0E                     u4250:
  2186   001D0E                     
  2187                           ;color.c: 269:     LATGbits.LATG0 = 1;
  2188   001D0E  807F               	bsf	127,0,c	;volatile
  2189                           
  2190                           ;color.c: 270:     LATEbits.LATE7 = 1;
  2191   001D10  8E7D               	bsf	125,7,c	;volatile
  2192                           
  2193                           ;color.c: 271:     LATAbits.LATA3 = 1;
  2194   001D12  8679               	bsf	121,3,c	;volatile
  2195   001D14                     
  2196                           ;color.c: 272:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2197   001D14  0E29               	movlw	41
  2198   001D16  6E46               	movwf	(??_calibration_routine+1)^0,c
  2199   001D18  0E96               	movlw	150
  2200   001D1A  6E45               	movwf	??_calibration_routine^0,c
  2201   001D1C  0E7F               	movlw	127
  2202   001D1E                     u4347:
  2203   001D1E  2EE8               	decfsz	wreg,f,c
  2204   001D20  D7FE               	bra	u4347
  2205   001D22  2E45               	decfsz	??_calibration_routine^0,f,c
  2206   001D24  D7FC               	bra	u4347
  2207   001D26  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  2208   001D28  D7FA               	bra	u4347
  2209   001D2A  0000               	nop	
  2210   001D2C                     
  2211                           ;color.c: 273:     (cCal->clear_ambient) = color_read_Clear();
  2212   001D2C  ECD6  F014         	call	_color_read_Clear	;wreg free
  2213   001D30  5044               	movf	calibration_routine@cCal^0,w,c
  2214   001D32  6ED9               	movwf	fsr2l,c
  2215   001D34  6ADA               	clrf	fsr2h,c
  2216   001D36  0E08               	movlw	8
  2217   001D38  26D9               	addwf	fsr2l,f,c
  2218   001D3A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2219   001D3E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2220   001D42                     
  2221                           ;color.c: 274:     LATGbits.LATG0 = 0;
  2222   001D42  907F               	bcf	127,0,c	;volatile
  2223   001D44                     
  2224                           ;color.c: 275:     LATEbits.LATE7 = 0;
  2225   001D44  9E7D               	bcf	125,7,c	;volatile
  2226   001D46                     
  2227                           ;color.c: 276:     LATAbits.LATA3 = 0;
  2228   001D46  9679               	bcf	121,3,c	;volatile
  2229   001D48                     
  2230                           ;color.c: 279:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  2231   001D48  0E47               	movlw	low calibration_routine@cal_state
  2232   001D4A  6E31               	movwf	sprintf@s^0,c
  2233   001D4C  0E7D               	movlw	low STR_11
  2234   001D4E  6E32               	movwf	sprintf@fmt^0,c
  2235   001D50  0ECF               	movlw	low STR_2
  2236   001D52  6E33               	movwf	(?_sprintf+2)^0,c
  2237   001D54  5033               	movf	(?_sprintf+2)^0,w,c
  2238   001D56  A4D8               	btfss	status,2,c
  2239   001D58  0E0E               	movlw	high __smallconst
  2240   001D5A  6E34               	movwf	(?_sprintf+3)^0,c
  2241   001D5C  ECE2  F015         	call	_sprintf	;wreg free
  2242   001D60                     
  2243                           ;color.c: 280:     sendStringSerial4(&cal_state);
  2244   001D60  0E47               	movlw	low calibration_routine@cal_state
  2245   001D62  6E02               	movwf	sendStringSerial4@string^0,c
  2246   001D64  EC16  F016         	call	_sendStringSerial4	;wreg free
  2247   001D68                     l107:
  2248                           
  2249                           ;color.c: 282:     while(PORTFbits.RF2 == 1){
  2250   001D68  B48E               	btfsc	142,2,c	;volatile
  2251   001D6A  EFB9  F00E         	goto	u4261
  2252   001D6E  EFBB  F00E         	goto	u4260
  2253   001D72                     u4261:
  2254   001D72  EFB4  F00E         	goto	l107
  2255   001D76                     u4260:
  2256   001D76                     
  2257                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  2258   001D76  0E29               	movlw	41
  2259   001D78  6E46               	movwf	(??_calibration_routine+1)^0,c
  2260   001D7A  0E96               	movlw	150
  2261   001D7C  6E45               	movwf	??_calibration_routine^0,c
  2262   001D7E  0E7F               	movlw	127
  2263   001D80                     u4357:
  2264   001D80  2EE8               	decfsz	wreg,f,c
  2265   001D82  D7FE               	bra	u4357
  2266   001D84  2E45               	decfsz	??_calibration_routine^0,f,c
  2267   001D86  D7FC               	bra	u4357
  2268   001D88  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  2269   001D8A  D7FA               	bra	u4357
  2270   001D8C  0000               	nop	
  2271   001D8E  0012               	return		;funcret
  2272   001D90                     __end_of_calibration_routine:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _sprintf *****************
  2276 ;; Defined at:
  2277 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  s               1   48[COMRAM] PTR unsigned char 
  2280 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), 
  2281 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  2282 ;;		 -> STR_14(12), STR_13(21), STR_11(25), STR_9(35), 
  2283 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  f              12   55[COMRAM] struct _IO_FILE
  2286 ;;  ret             2    0        int 
  2287 ;;  ap              1   54[COMRAM] PTR void [1]
  2288 ;;		 -> ?_sprintf(2), 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2   48[COMRAM] int 
  2291 ;; Registers used:
  2292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2298 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2301 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2302 ;;Total ram usage:       19 bytes
  2303 ;; Hardware stack levels used: 1
  2304 ;; Hardware stack levels required when called: 7
  2305 ;; This function calls:
  2306 ;;		_vfprintf
  2307 ;; This function is called by:
  2308 ;;		_calibration_routine
  2309 ;;		_send2USART
  2310 ;;		_ADC2String
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text8
  2315   002BC4                     __ptext8:
  2316                           	callstack 0
  2317   002BC4                     _sprintf:
  2318                           	callstack 22
  2319   002BC4  0E33               	movlw	low (?_sprintf+2)
  2320   002BC6  6E37               	movwf	sprintf@ap^0,c
  2321   002BC8  C031  F038         	movff	sprintf@s,sprintf@f
  2322   002BCC  0E00               	movlw	0
  2323   002BCE  6E3C               	movwf	(sprintf@f+4)^0,c
  2324   002BD0  0E00               	movlw	0
  2325   002BD2  6E3B               	movwf	(sprintf@f+3)^0,c
  2326   002BD4  0E00               	movlw	0
  2327   002BD6  6E43               	movwf	(sprintf@f+11)^0,c
  2328   002BD8  0E00               	movlw	0
  2329   002BDA  6E42               	movwf	(sprintf@f+10)^0,c
  2330   002BDC  0E38               	movlw	low sprintf@f
  2331   002BDE  6E2D               	movwf	vfprintf@fp^0,c
  2332   002BE0  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  2333   002BE4  0E37               	movlw	low sprintf@ap
  2334   002BE6  6E2F               	movwf	vfprintf@ap^0,c
  2335   002BE8  EC49  F015         	call	_vfprintf	;wreg free
  2336   002BEC  5031               	movf	sprintf@s^0,w,c
  2337   002BEE  243B               	addwf	(sprintf@f+3)^0,w,c
  2338   002BF0  6ED9               	movwf	fsr2l,c
  2339   002BF2  6ADA               	clrf	fsr2h,c
  2340   002BF4  6ADF               	clrf	indf2,c
  2341   002BF6  0012               	return		;funcret
  2342   002BF8                     __end_of_sprintf:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _vfprintf *****************
  2346 ;; Defined at:
  2347 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  2350 ;;		 -> sprintf@f(12), 
  2351 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2352 ;;		 -> STR_14(12), STR_13(21), STR_11(25), STR_9(35), 
  2353 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  2354 ;;  ap              1   46[COMRAM] PTR PTR void 
  2355 ;;		 -> sprintf@ap(1), 
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  2358 ;;		 -> STR_14(12), STR_13(21), STR_11(25), STR_9(35), 
  2359 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2   44[COMRAM] int 
  2362 ;; Registers used:
  2363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2369 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2372 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 6
  2376 ;; This function calls:
  2377 ;;		_vfpfcnvrt
  2378 ;; This function is called by:
  2379 ;;		_sprintf
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text9
  2384   002A92                     __ptext9:
  2385                           	callstack 0
  2386   002A92                     _vfprintf:
  2387                           	callstack 22
  2388   002A92                     
  2389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2390   002A92  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2393   002A96  EF55  F015         	goto	l4707
  2394   002A9A                     l4705:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2397   002A9A  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  2398   002A9E  0E30               	movlw	low vfprintf@cfmt
  2399   002AA0  6E23               	movwf	vfpfcnvrt@fmt^0,c
  2400   002AA2  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  2401   002AA6  EC8E  F010         	call	_vfpfcnvrt	;wreg free
  2402   002AAA                     l4707:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2405   002AAA  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  2406   002AAE                     	if	1	;There is more than 1 active tblptr byte
  2407   002AAE  0E0E               	movlw	high __smallconst
  2408   002AB0  6EF7               	movwf	tblptrh,c
  2409   002AB2                     	endif
  2410   002AB2                     	if	0	;tblptru may be non-zero
  2411   002AB2                     	endif
  2412   002AB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2413   002AB2  0E00               	movlw	low (__smallconst shr (0+16))
  2414   002AB4  6EF8               	movwf	tblptru,c
  2415   002AB6                     	endif
  2416   002AB6  0008               	tblrd		*
  2417   002AB8  50F5               	movf	tablat,w,c
  2418   002ABA  0900               	iorlw	0
  2419   002ABC  A4D8               	btfss	status,2,c
  2420   002ABE  EF63  F015         	goto	u4201
  2421   002AC2  EF65  F015         	goto	u4200
  2422   002AC6                     u4201:
  2423   002AC6  EF4D  F015         	goto	l4705
  2424   002ACA                     u4200:
  2425   002ACA                     
  2426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2427   002ACA  0E00               	movlw	0
  2428   002ACC  6E2E               	movwf	(?_vfprintf+1)^0,c
  2429   002ACE  0E00               	movlw	0
  2430   002AD0  6E2D               	movwf	?_vfprintf^0,c
  2431   002AD2  0012               	return		;funcret
  2432   002AD4                     __end_of_vfprintf:
  2433                           	callstack 0
  2434                           
  2435 ;; *************** function _vfpfcnvrt *****************
  2436 ;; Defined at:
  2437 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  2440 ;;		 -> sprintf@f(12), 
  2441 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  2442 ;;		 -> vfprintf@cfmt(1), 
  2443 ;;  ap              1   35[COMRAM] PTR PTR void 
  2444 ;;		 -> sprintf@ap(1), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  convarg         4   38[COMRAM] struct .
  2447 ;;  cp              1   43[COMRAM] PTR unsigned char 
  2448 ;;		 -> STR_14(12), STR_13(21), STR_11(25), STR_9(35), 
  2449 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  2450 ;;  done            1   42[COMRAM] _Bool 
  2451 ;;  c               1    0        unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      void 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:       11 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 5
  2468 ;; This function calls:
  2469 ;;		_dtoa
  2470 ;;		_fputc
  2471 ;;		_read_prec_or_width
  2472 ;; This function is called by:
  2473 ;;		_vfprintf
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text10
  2478   00211C                     __ptext10:
  2479                           	callstack 0
  2480   00211C                     _vfpfcnvrt:
  2481                           	callstack 22
  2482   00211C                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2484   00211C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2485   00211E  6ED9               	movwf	fsr2l,c
  2486   002120  6ADA               	clrf	fsr2h,c
  2487   002122  CFDF FFF6          	movff	indf2,tblptrl
  2488   002126                     	if	1	;There is more than 1 active tblptr byte
  2489   002126  0E0E               	movlw	high __smallconst
  2490   002128  6EF7               	movwf	tblptrh,c
  2491   00212A                     	endif
  2492   00212A                     	if	0	;tblptru may be non-zero
  2493   00212A                     	endif
  2494   00212A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2495   00212A  0E00               	movlw	low (__smallconst shr (0+16))
  2496   00212C  6EF8               	movwf	tblptru,c
  2497   00212E                     	endif
  2498   00212E  0008               	tblrd		*
  2499   002130  50F5               	movf	tablat,w,c
  2500   002132  0A25               	xorlw	37
  2501   002134  A4D8               	btfss	status,2,c
  2502   002136  EF9F  F010         	goto	u4151
  2503   00213A  EFA1  F010         	goto	u4150
  2504   00213E                     u4151:
  2505   00213E  EF3D  F011         	goto	l4693
  2506   002142                     u4150:
  2507   002142                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2509   002142  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2510   002144  6ED9               	movwf	fsr2l,c
  2511   002146  6ADA               	clrf	fsr2h,c
  2512   002148  2ADF               	incf	indf2,f,c
  2513   00214A                     
  2514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2515   00214A  0E00               	movlw	0
  2516   00214C  0100               	movlb	0	; () banked
  2517   00214E  6F93               	movwf	(_width+1)& (0+255),b
  2518   002150  0E00               	movlw	0
  2519   002152  6F92               	movwf	_width& (0+255),b
  2520   002154  C092  F05B         	movff	_width,_flags
  2521   002158                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2524   002158  6994               	setf	_prec& (0+255),b
  2525   00215A  6995               	setf	(_prec+1)& (0+255),b
  2526   00215C                     
  2527                           ; BSR set to: 0
  2528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2529   00215C  0E00               	movlw	0
  2530   00215E  6E2B               	movwf	vfpfcnvrt@done^0,c
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2533   002160  EFD8  F010         	goto	l4667
  2534   002164                     l4657:
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2537   002164  825B               	bsf	_flags^0,1,c
  2538   002166                     
  2539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2540   002166  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2541   002168  6ED9               	movwf	fsr2l,c
  2542   00216A  6ADA               	clrf	fsr2h,c
  2543   00216C  2ADF               	incf	indf2,f,c
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2546   00216E  EFD8  F010         	goto	l4667
  2547   002172                     l4661:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2550   002172  0E01               	movlw	1
  2551   002174  6E2B               	movwf	vfpfcnvrt@done^0,c
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2554   002176  EFD8  F010         	goto	l4667
  2555   00217A                     l4665:
  2556   00217A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2557   00217C  6ED9               	movwf	fsr2l,c
  2558   00217E  6ADA               	clrf	fsr2h,c
  2559   002180  CFDF FFF6          	movff	indf2,tblptrl
  2560   002184                     	if	1	;There is more than 1 active tblptr byte
  2561   002184  0E0E               	movlw	high __smallconst
  2562   002186  6EF7               	movwf	tblptrh,c
  2563   002188                     	endif
  2564   002188                     	if	0	;tblptru may be non-zero
  2565   002188                     	endif
  2566   002188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2567   002188  0E00               	movlw	low (__smallconst shr (0+16))
  2568   00218A  6EF8               	movwf	tblptru,c
  2569   00218C                     	endif
  2570   00218C  0008               	tblrd		*
  2571   00218E  50F5               	movf	tablat,w,c
  2572   002190  6E25               	movwf	??_vfpfcnvrt^0,c
  2573   002192  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  2574                           
  2575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2576                           ; Switch size 1, requested type "simple"
  2577                           ; Number of cases is 1, Range of values is 0 to 0
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte            4     3 (average)
  2581                           ;	Chosen strategy is simple_byte
  2582   002194  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  2583   002196  0A00               	xorlw	0	; case 0
  2584   002198  B4D8               	btfsc	status,2,c
  2585   00219A  EFD1  F010         	goto	l4919
  2586   00219E  EFB9  F010         	goto	l4661
  2587   0021A2                     l4919:
  2588                           
  2589                           ; Switch size 1, requested type "simple"
  2590                           ; Number of cases is 1, Range of values is 48 to 48
  2591                           ; switch strategies available:
  2592                           ; Name         Instructions Cycles
  2593                           ; simple_byte            4     3 (average)
  2594                           ;	Chosen strategy is simple_byte
  2595   0021A2  5025               	movf	??_vfpfcnvrt^0,w,c
  2596   0021A4  0A30               	xorlw	48	; case 48
  2597   0021A6  B4D8               	btfsc	status,2,c
  2598   0021A8  EFB2  F010         	goto	l4657
  2599   0021AC  EFB9  F010         	goto	l4661
  2600   0021B0                     l4667:
  2601                           
  2602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2603   0021B0  502B               	movf	vfpfcnvrt@done^0,w,c
  2604   0021B2  B4D8               	btfsc	status,2,c
  2605   0021B4  EFDE  F010         	goto	u4161
  2606   0021B8  EFE0  F010         	goto	u4160
  2607   0021BC                     u4161:
  2608   0021BC  EFBD  F010         	goto	l4665
  2609   0021C0                     u4160:
  2610   0021C0                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2612   0021C0  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2613   0021C4  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2614   0021C8  EC49  F013         	call	_read_prec_or_width	;wreg free
  2615   0021CC  C007  F092         	movff	?_read_prec_or_width,_width
  2616   0021D0  C008  F093         	movff	?_read_prec_or_width+1,_width+1
  2617   0021D4                     
  2618                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2619   0021D4  0100               	movlb	0	; () banked
  2620   0021D6  BF93               	btfsc	(_width+1)& (0+255),7,b
  2621   0021D8  EFF2  F010         	goto	u4170
  2622   0021DC  EFF0  F010         	goto	u4171
  2623   0021E0                     u4171:
  2624   0021E0  EFF7  F010         	goto	l4675
  2625   0021E4                     u4170:
  2626   0021E4                     
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2629   0021E4  805B               	bsf	_flags^0,0,c
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2632   0021E6  6D92               	negf	_width& (0+255),b
  2633   0021E8  1F93               	comf	(_width+1)& (0+255),f,b
  2634   0021EA  B0D8               	btfsc	status,0,c
  2635   0021EC  2B93               	incf	(_width+1)& (0+255),f,b
  2636   0021EE                     l4675:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2640   0021EE  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2641   0021F0  6ED9               	movwf	fsr2l,c
  2642   0021F2  6ADA               	clrf	fsr2h,c
  2643   0021F4  50DF               	movf	indf2,w,c
  2644   0021F6  6E2C               	movwf	vfpfcnvrt@cp^0,c
  2645   0021F8                     
  2646                           ; BSR set to: 0
  2647                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2648   0021F8  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2649   0021FC                     	if	1	;There is more than 1 active tblptr byte
  2650   0021FC  0E0E               	movlw	high __smallconst
  2651   0021FE  6EF7               	movwf	tblptrh,c
  2652   002200                     	endif
  2653   002200                     	if	0	;tblptru may be non-zero
  2654   002200                     	endif
  2655   002200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2656   002200  0E00               	movlw	low (__smallconst shr (0+16))
  2657   002202  6EF8               	movwf	tblptru,c
  2658   002204                     	endif
  2659   002204  0008               	tblrd		*
  2660   002206  50F5               	movf	tablat,w,c
  2661   002208  0A64               	xorlw	100
  2662   00220A  B4D8               	btfsc	status,2,c
  2663   00220C  EF0A  F011         	goto	u4181
  2664   002210  EF0C  F011         	goto	u4180
  2665   002214                     u4181:
  2666   002214  EF1C  F011         	goto	l4681
  2667   002218                     u4180:
  2668   002218                     
  2669                           ; BSR set to: 0
  2670   002218  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2671   00221C                     	if	1	;There is more than 1 active tblptr byte
  2672   00221C  0E0E               	movlw	high __smallconst
  2673   00221E  6EF7               	movwf	tblptrh,c
  2674   002220                     	endif
  2675   002220                     	if	0	;tblptru may be non-zero
  2676   002220                     	endif
  2677   002220                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2678   002220  0E00               	movlw	low (__smallconst shr (0+16))
  2679   002222  6EF8               	movwf	tblptru,c
  2680   002224                     	endif
  2681   002224  0008               	tblrd		*
  2682   002226  50F5               	movf	tablat,w,c
  2683   002228  0A69               	xorlw	105
  2684   00222A  A4D8               	btfss	status,2,c
  2685   00222C  EF1A  F011         	goto	u4191
  2686   002230  EF1C  F011         	goto	u4190
  2687   002234                     u4191:
  2688   002234  EF37  F011         	goto	l4689
  2689   002238                     u4190:
  2690   002238                     l4681:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2694   002238  5024               	movf	vfpfcnvrt@ap^0,w,c
  2695   00223A  6ED9               	movwf	fsr2l,c
  2696   00223C  6ADA               	clrf	fsr2h,c
  2697   00223E  0E02               	movlw	2
  2698   002240  26DF               	addwf	indf2,f,c
  2699   002242  5CDF               	subwf	indf2,w,c
  2700   002244  6ED9               	movwf	fsr2l,c
  2701   002246  6ADA               	clrf	fsr2h,c
  2702   002248  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  2703   00224C  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  2704   002250                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2707   002250  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2708   002252  6ED9               	movwf	fsr2l,c
  2709   002254  6ADA               	clrf	fsr2h,c
  2710   002256  282C               	incf	vfpfcnvrt@cp^0,w,c
  2711   002258  6EDF               	movwf	indf2,c
  2712   00225A                     
  2713                           ; BSR set to: 0
  2714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2715   00225A  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2716   00225E  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2717   002262  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2718   002266  EC51  F011         	call	_dtoa	;wreg free
  2719   00226A  EF50  F011         	goto	l1303
  2720   00226E                     l4689:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2723   00226E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2724   002270  6ED9               	movwf	fsr2l,c
  2725   002272  6ADA               	clrf	fsr2h,c
  2726   002274  2ADF               	incf	indf2,f,c
  2727   002276  EF50  F011         	goto	l1303
  2728   00227A                     l4693:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2731   00227A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2732   00227C  6ED9               	movwf	fsr2l,c
  2733   00227E  6ADA               	clrf	fsr2h,c
  2734   002280  CFDF FFF6          	movff	indf2,tblptrl
  2735   002284                     	if	1	;There is more than 1 active tblptr byte
  2736   002284  0E0E               	movlw	high __smallconst
  2737   002286  6EF7               	movwf	tblptrh,c
  2738   002288                     	endif
  2739   002288                     	if	0	;tblptru may be non-zero
  2740   002288                     	endif
  2741   002288                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2742   002288  0E00               	movlw	low (__smallconst shr (0+16))
  2743   00228A  6EF8               	movwf	tblptru,c
  2744   00228C                     	endif
  2745   00228C  0008               	tblrd		*
  2746   00228E  50F5               	movf	tablat,w,c
  2747   002290  6E01               	movwf	fputc@c^0,c
  2748   002292  6A02               	clrf	(fputc@c+1)^0,c
  2749   002294  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2750   002298  ECA0  F013         	call	_fputc	;wreg free
  2751   00229C  EF37  F011         	goto	l4689
  2752   0022A0                     l1303:
  2753   0022A0  0012               	return		;funcret
  2754   0022A2                     __end_of_vfpfcnvrt:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _read_prec_or_width *****************
  2758 ;; Defined at:
  2759 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2762 ;;		 -> vfprintf@cfmt(1), 
  2763 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2764 ;;		 -> sprintf@ap(1), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  c               1    8[COMRAM] unsigned char 
  2767 ;;  n               2    9[COMRAM] int 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    6[COMRAM] int 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2780 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;Total ram usage:        5 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 1
  2784 ;; This function calls:
  2785 ;;		___wmul
  2786 ;; This function is called by:
  2787 ;;		_vfpfcnvrt
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text11
  2792   002692                     __ptext11:
  2793                           	callstack 0
  2794   002692                     _read_prec_or_width:
  2795                           	callstack 25
  2796   002692                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2798   002692  0E00               	movlw	0
  2799   002694  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2800   002696  0E00               	movlw	0
  2801   002698  6E0A               	movwf	read_prec_or_width@n^0,c
  2802   00269A                     
  2803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2804   00269A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2805   00269C  6ED9               	movwf	fsr2l,c
  2806   00269E  6ADA               	clrf	fsr2h,c
  2807   0026A0  CFDF FFF6          	movff	indf2,tblptrl
  2808   0026A4                     	if	1	;There is more than 1 active tblptr byte
  2809   0026A4  0E0E               	movlw	high __smallconst
  2810   0026A6  6EF7               	movwf	tblptrh,c
  2811   0026A8                     	endif
  2812   0026A8                     	if	0	;tblptru may be non-zero
  2813   0026A8                     	endif
  2814   0026A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2815   0026A8  0E00               	movlw	low (__smallconst shr (0+16))
  2816   0026AA  6EF8               	movwf	tblptru,c
  2817   0026AC                     	endif
  2818   0026AC  0008               	tblrd		*
  2819   0026AE  50F5               	movf	tablat,w,c
  2820   0026B0  0A2A               	xorlw	42
  2821   0026B2  A4D8               	btfss	status,2,c
  2822   0026B4  EF5E  F013         	goto	u2281
  2823   0026B8  EF60  F013         	goto	u2280
  2824   0026BC                     u2281:
  2825   0026BC  EF86  F013         	goto	l3125
  2826   0026C0                     u2280:
  2827   0026C0                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2829   0026C0  5007               	movf	read_prec_or_width@fmt^0,w,c
  2830   0026C2  6ED9               	movwf	fsr2l,c
  2831   0026C4  6ADA               	clrf	fsr2h,c
  2832   0026C6  2ADF               	incf	indf2,f,c
  2833   0026C8                     
  2834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2835   0026C8  5008               	movf	read_prec_or_width@ap^0,w,c
  2836   0026CA  6ED9               	movwf	fsr2l,c
  2837   0026CC  6ADA               	clrf	fsr2h,c
  2838   0026CE  0E02               	movlw	2
  2839   0026D0  26DF               	addwf	indf2,f,c
  2840   0026D2  5CDF               	subwf	indf2,w,c
  2841   0026D4  6ED9               	movwf	fsr2l,c
  2842   0026D6  6ADA               	clrf	fsr2h,c
  2843   0026D8  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2844   0026DC  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2847   0026E0  EF9B  F013         	goto	l1284
  2848   0026E4                     l3121:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2851   0026E4  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2852   0026E8  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2853   0026EC  0E00               	movlw	0
  2854   0026EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2855   0026F0  0E0A               	movlw	10
  2856   0026F2  6E03               	movwf	___wmul@multiplicand^0,c
  2857   0026F4  EC58  F016         	call	___wmul	;wreg free
  2858   0026F8  5009               	movf	read_prec_or_width@c^0,w,c
  2859   0026FA  2401               	addwf	?___wmul^0,w,c
  2860   0026FC  6E0A               	movwf	read_prec_or_width@n^0,c
  2861   0026FE  0E00               	movlw	0
  2862   002700  2002               	addwfc	(?___wmul+1)^0,w,c
  2863   002702  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2864   002704                     
  2865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2866   002704  5007               	movf	read_prec_or_width@fmt^0,w,c
  2867   002706  6ED9               	movwf	fsr2l,c
  2868   002708  6ADA               	clrf	fsr2h,c
  2869   00270A  2ADF               	incf	indf2,f,c
  2870   00270C                     l3125:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2873   00270C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2874   00270E  6ED9               	movwf	fsr2l,c
  2875   002710  6ADA               	clrf	fsr2h,c
  2876   002712  CFDF FFF6          	movff	indf2,tblptrl
  2877   002716                     	if	1	;There is more than 1 active tblptr byte
  2878   002716  0E0E               	movlw	high __smallconst
  2879   002718  6EF7               	movwf	tblptrh,c
  2880   00271A                     	endif
  2881   00271A                     	if	0	;tblptru may be non-zero
  2882   00271A                     	endif
  2883   00271A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2884   00271A  0E00               	movlw	low (__smallconst shr (0+16))
  2885   00271C  6EF8               	movwf	tblptru,c
  2886   00271E                     	endif
  2887   00271E  0008               	tblrd		*
  2888   002720  50F5               	movf	tablat,w,c
  2889   002722  0FD0               	addlw	208
  2890   002724  6E09               	movwf	read_prec_or_width@c^0,c
  2891   002726  0E09               	movlw	9
  2892   002728  6409               	cpfsgt	read_prec_or_width@c^0,c
  2893   00272A  EF99  F013         	goto	u2291
  2894   00272E  EF9B  F013         	goto	u2290
  2895   002732                     u2291:
  2896   002732  EF72  F013         	goto	l3121
  2897   002736                     u2290:
  2898   002736                     l1284:
  2899                           
  2900                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2901   002736  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2902   00273A  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2903   00273E  0012               	return		;funcret
  2904   002740                     __end_of_read_prec_or_width:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function ___wmul *****************
  2908 ;; Defined at:
  2909 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;  multiplier      2    0[COMRAM] unsigned int 
  2912 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  product         2    4[COMRAM] unsigned int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2    0[COMRAM] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, prodl, prodh
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;Total ram usage:        6 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; This function calls:
  2931 ;;		Nothing
  2932 ;; This function is called by:
  2933 ;;		_read_prec_or_width
  2934 ;;		_setMotorPWM
  2935 ;;		_ADC2String
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text12
  2940   002CB0                     __ptext12:
  2941                           	callstack 0
  2942   002CB0                     ___wmul:
  2943                           	callstack 25
  2944   002CB0  5001               	movf	___wmul@multiplier^0,w,c
  2945   002CB2  0203               	mulwf	___wmul@multiplicand^0,c
  2946   002CB4  CFF3 F005          	movff	prodl,___wmul@product
  2947   002CB8  CFF4 F006          	movff	prodh,___wmul@product+1
  2948   002CBC  5001               	movf	___wmul@multiplier^0,w,c
  2949   002CBE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2950   002CC0  50F3               	movf	243,w,c
  2951   002CC2  2606               	addwf	(___wmul@product+1)^0,f,c
  2952   002CC4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2953   002CC6  0203               	mulwf	___wmul@multiplicand^0,c
  2954   002CC8  50F3               	movf	243,w,c
  2955   002CCA  2606               	addwf	(___wmul@product+1)^0,f,c
  2956   002CCC  C005  F001         	movff	___wmul@product,?___wmul
  2957   002CD0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2958   002CD4  0012               	return		;funcret
  2959   002CD6                     __end_of___wmul:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _dtoa *****************
  2963 ;; Defined at:
  2964 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2967 ;;		 -> sprintf@f(12), 
  2968 ;;  d               2   23[COMRAM] int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  i               2   31[COMRAM] int 
  2971 ;;  w               2   28[COMRAM] int 
  2972 ;;  s               1   30[COMRAM] unsigned char 
  2973 ;;  p               1   27[COMRAM] _Bool 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;Total ram usage:       11 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 4
  2990 ;; This function calls:
  2991 ;;		___awdiv
  2992 ;;		___awmod
  2993 ;;		_abs
  2994 ;;		_pad
  2995 ;; This function is called by:
  2996 ;;		_vfpfcnvrt
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text13
  3001   0022A2                     __ptext13:
  3002                           	callstack 0
  3003   0022A2                     _dtoa:
  3004                           	callstack 22
  3005   0022A2                     
  3006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  3007   0022A2  0E01               	movlw	1
  3008   0022A4  6E1C               	movwf	dtoa@p^0,c
  3009   0022A6                     
  3010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  3011   0022A6  BE19               	btfsc	(dtoa@d+1)^0,7,c
  3012   0022A8  EF58  F011         	goto	u4051
  3013   0022AC  EF5B  F011         	goto	u4050
  3014   0022B0                     u4051:
  3015   0022B0  0E01               	movlw	1
  3016   0022B2  EF5C  F011         	goto	u4060
  3017   0022B6                     u4050:
  3018   0022B6  0E00               	movlw	0
  3019   0022B8                     u4060:
  3020   0022B8  6E1F               	movwf	dtoa@s^0,c
  3021   0022BA                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3023   0022BA  C092  F01D         	movff	_width,dtoa@w
  3024   0022BE  C093  F01E         	movff	_width+1,dtoa@w+1
  3025   0022C2                     
  3026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  3027   0022C2  501F               	movf	dtoa@s^0,w,c
  3028   0022C4  B4D8               	btfsc	status,2,c
  3029   0022C6  EF67  F011         	goto	u4071
  3030   0022CA  EF69  F011         	goto	u4070
  3031   0022CE                     u4071:
  3032   0022CE  EF80  F011         	goto	l1267
  3033   0022D2                     u4070:
  3034   0022D2                     
  3035                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  3036   0022D2  061D               	decf	dtoa@w^0,f,c
  3037   0022D4  A0D8               	btfss	status,0,c
  3038   0022D6  061E               	decf	(dtoa@w+1)^0,f,c
  3039   0022D8                     
  3040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3041   0022D8  501F               	movf	dtoa@s^0,w,c
  3042   0022DA  A4D8               	btfss	status,2,c
  3043   0022DC  EF72  F011         	goto	u4081
  3044   0022E0  EF74  F011         	goto	u4080
  3045   0022E4                     u4081:
  3046   0022E4  EF7A  F011         	goto	l4611
  3047   0022E8                     u4080:
  3048   0022E8  0E00               	movlw	0
  3049   0022EA  6E1B               	movwf	(_dtoa$2659+1)^0,c
  3050   0022EC  0E2B               	movlw	43
  3051   0022EE  6E1A               	movwf	_dtoa$2659^0,c
  3052   0022F0  EF7E  F011         	goto	l4613
  3053   0022F4                     l4611:
  3054   0022F4  0E00               	movlw	0
  3055   0022F6  6E1B               	movwf	(_dtoa$2659+1)^0,c
  3056   0022F8  0E2D               	movlw	45
  3057   0022FA  6E1A               	movwf	_dtoa$2659^0,c
  3058   0022FC                     l4613:
  3059   0022FC  C01A  F01F         	movff	_dtoa$2659,dtoa@s
  3060   002300                     l1267:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3063   002300  0E00               	movlw	0
  3064   002302  6E21               	movwf	(dtoa@i+1)^0,c
  3065   002304  0E1F               	movlw	31
  3066   002306  6E20               	movwf	dtoa@i^0,c
  3067   002308                     
  3068                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3069   002308  0E00               	movlw	0
  3070   00230A  0101               	movlb	1	; () banked
  3071   00230C  6F5B               	movwf	(_dbuf+31)& (0+255),b
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3074   00230E  EFB8  F011         	goto	l4627
  3075   002312                     l4617:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  3078   002312  0620               	decf	dtoa@i^0,f,c
  3079   002314  A0D8               	btfss	status,0,c
  3080   002316  0621               	decf	(dtoa@i+1)^0,f,c
  3081   002318                     
  3082                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3083   002318  0E3C               	movlw	low _dbuf
  3084   00231A  2420               	addwf	dtoa@i^0,w,c
  3085   00231C  6ED9               	movwf	fsr2l,c
  3086   00231E  0E01               	movlw	high _dbuf
  3087   002320  2021               	addwfc	(dtoa@i+1)^0,w,c
  3088   002322  6EDA               	movwf	fsr2h,c
  3089   002324  C018  F001         	movff	dtoa@d,___awmod@dividend
  3090   002328  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  3091   00232C  0E00               	movlw	0
  3092   00232E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3093   002330  0E0A               	movlw	10
  3094   002332  6E03               	movwf	___awmod@divisor^0,c
  3095   002334  ECF1  F012         	call	___awmod	;wreg free
  3096   002338  C001  F007         	movff	?___awmod,abs@a
  3097   00233C  C002  F008         	movff	?___awmod+1,abs@a+1
  3098   002340  ECFC  F015         	call	_abs	;wreg free
  3099   002344  5007               	movf	?_abs^0,w,c
  3100   002346  0F30               	addlw	48
  3101   002348  6EDF               	movwf	indf2,c
  3102   00234A                     
  3103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  3104   00234A  0E00               	movlw	0
  3105   00234C  6E1C               	movwf	dtoa@p^0,c
  3106   00234E                     
  3107                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  3108   00234E  061D               	decf	dtoa@w^0,f,c
  3109   002350  A0D8               	btfss	status,0,c
  3110   002352  061E               	decf	(dtoa@w+1)^0,f,c
  3111   002354                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3113   002354  C018  F001         	movff	dtoa@d,___awdiv@dividend
  3114   002358  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  3115   00235C  0E00               	movlw	0
  3116   00235E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3117   002360  0E0A               	movlw	10
  3118   002362  6E03               	movwf	___awdiv@divisor^0,c
  3119   002364  EC8F  F012         	call	___awdiv	;wreg free
  3120   002368  C001  F018         	movff	?___awdiv,dtoa@d
  3121   00236C  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  3122   002370                     l4627:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3125   002370  BE21               	btfsc	(dtoa@i+1)^0,7,c
  3126   002372  EFC3  F011         	goto	u4091
  3127   002376  5021               	movf	(dtoa@i+1)^0,w,c
  3128   002378  E108               	bnz	u4090
  3129   00237A  0420               	decf	dtoa@i^0,w,c
  3130   00237C  A0D8               	btfss	status,0,c
  3131   00237E  EFC3  F011         	goto	u4091
  3132   002382  EFC5  F011         	goto	u4090
  3133   002386                     u4091:
  3134   002386  EFEA  F011         	goto	l4637
  3135   00238A                     u4090:
  3136   00238A  5018               	movf	dtoa@d^0,w,c
  3137   00238C  1019               	iorwf	(dtoa@d+1)^0,w,c
  3138   00238E  A4D8               	btfss	status,2,c
  3139   002390  EFCC  F011         	goto	u4101
  3140   002394  EFCE  F011         	goto	u4100
  3141   002398                     u4101:
  3142   002398  EF89  F011         	goto	l4617
  3143   00239C                     u4100:
  3144   00239C  501C               	movf	dtoa@p^0,w,c
  3145   00239E  A4D8               	btfss	status,2,c
  3146   0023A0  EFD4  F011         	goto	u4111
  3147   0023A4  EFD6  F011         	goto	u4110
  3148   0023A8                     u4111:
  3149   0023A8  EF89  F011         	goto	l4617
  3150   0023AC                     u4110:
  3151   0023AC  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  3152   0023AE  EFE1  F011         	goto	u4121
  3153   0023B2  501E               	movf	(dtoa@w+1)^0,w,c
  3154   0023B4  E108               	bnz	u4120
  3155   0023B6  041D               	decf	dtoa@w^0,w,c
  3156   0023B8  A0D8               	btfss	status,0,c
  3157   0023BA  EFE1  F011         	goto	u4121
  3158   0023BE  EFE3  F011         	goto	u4120
  3159   0023C2                     u4121:
  3160   0023C2  EFEA  F011         	goto	l4637
  3161   0023C6                     u4120:
  3162   0023C6  B25B               	btfsc	_flags^0,1,c
  3163   0023C8  EFE8  F011         	goto	u4131
  3164   0023CC  EFEA  F011         	goto	u4130
  3165   0023D0                     u4131:
  3166   0023D0  EF89  F011         	goto	l4617
  3167   0023D4                     u4130:
  3168   0023D4                     l4637:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3171   0023D4  501F               	movf	dtoa@s^0,w,c
  3172   0023D6  B4D8               	btfsc	status,2,c
  3173   0023D8  EFF0  F011         	goto	u4141
  3174   0023DC  EFF2  F011         	goto	u4140
  3175   0023E0                     u4141:
  3176   0023E0  EFFD  F011         	goto	l4643
  3177   0023E4                     u4140:
  3178   0023E4                     
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  3180   0023E4  0620               	decf	dtoa@i^0,f,c
  3181   0023E6  A0D8               	btfss	status,0,c
  3182   0023E8  0621               	decf	(dtoa@i+1)^0,f,c
  3183   0023EA                     
  3184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3185   0023EA  0E3C               	movlw	low _dbuf
  3186   0023EC  2420               	addwf	dtoa@i^0,w,c
  3187   0023EE  6ED9               	movwf	fsr2l,c
  3188   0023F0  0E01               	movlw	high _dbuf
  3189   0023F2  2021               	addwfc	(dtoa@i+1)^0,w,c
  3190   0023F4  6EDA               	movwf	fsr2h,c
  3191   0023F6  C01F  FFDF         	movff	dtoa@s,indf2
  3192   0023FA                     l4643:
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3195   0023FA  C017  F00F         	movff	dtoa@fp,pad@fp
  3196   0023FE  0E3C               	movlw	low _dbuf
  3197   002400  2420               	addwf	dtoa@i^0,w,c
  3198   002402  6E10               	movwf	pad@buf^0,c
  3199   002404  0E01               	movlw	high _dbuf
  3200   002406  2021               	addwfc	(dtoa@i+1)^0,w,c
  3201   002408  6E11               	movwf	(pad@buf+1)^0,c
  3202   00240A  C01D  F012         	movff	dtoa@w,pad@p
  3203   00240E  C01E  F013         	movff	dtoa@w+1,pad@p+1
  3204   002412  ECF5  F013         	call	_pad	;wreg free
  3205   002416  0012               	return		;funcret
  3206   002418                     __end_of_dtoa:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _pad *****************
  3210 ;; Defined at:
  3211 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3214 ;;		 -> sprintf@f(12), 
  3215 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3216 ;;		 -> dbuf(32), 
  3217 ;;  p               2   17[COMRAM] int 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  i               2   20[COMRAM] int 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3229 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;Total ram usage:        8 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 3
  3236 ;; This function calls:
  3237 ;;		_fputc
  3238 ;;		_fputs
  3239 ;; This function is called by:
  3240 ;;		_dtoa
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text14
  3245   0027EA                     __ptext14:
  3246                           	callstack 0
  3247   0027EA                     _pad:
  3248                           	callstack 22
  3249   0027EA                     
  3250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3251   0027EA  A05B               	btfss	_flags^0,0,c
  3252   0027EC  EFFA  F013         	goto	u4011
  3253   0027F0  EFFC  F013         	goto	u4010
  3254   0027F4                     u4011:
  3255   0027F4  EF04  F014         	goto	l4585
  3256   0027F8                     u4010:
  3257   0027F8                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3259   0027F8  C010  F009         	movff	pad@buf,fputs@s
  3260   0027FC  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3261   002800  C00F  F00B         	movff	pad@fp,fputs@fp
  3262   002804  EC8B  F015         	call	_fputs	;wreg free
  3263   002808                     l4585:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3266   002808  BE13               	btfsc	(pad@p+1)^0,7,c
  3267   00280A  EF0B  F014         	goto	u4020
  3268   00280E  EF09  F014         	goto	u4021
  3269   002812                     u4021:
  3270   002812  EF0F  F014         	goto	l1259
  3271   002816                     u4020:
  3272   002816                     
  3273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3274   002816  0E00               	movlw	0
  3275   002818  6E13               	movwf	(pad@p+1)^0,c
  3276   00281A  0E00               	movlw	0
  3277   00281C  6E12               	movwf	pad@p^0,c
  3278   00281E                     l1259:
  3279                           
  3280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3281   00281E  0E00               	movlw	0
  3282   002820  6E16               	movwf	(pad@i+1)^0,c
  3283   002822  0E00               	movlw	0
  3284   002824  6E15               	movwf	pad@i^0,c
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3287   002826  EF1F  F014         	goto	l4593
  3288   00282A                     l4589:
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3291   00282A  0E00               	movlw	0
  3292   00282C  6E02               	movwf	(fputc@c+1)^0,c
  3293   00282E  0E20               	movlw	32
  3294   002830  6E01               	movwf	fputc@c^0,c
  3295   002832  C00F  F003         	movff	pad@fp,fputc@fp
  3296   002836  ECA0  F013         	call	_fputc	;wreg free
  3297   00283A                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3299   00283A  4A15               	infsnz	pad@i^0,f,c
  3300   00283C  2A16               	incf	(pad@i+1)^0,f,c
  3301   00283E                     l4593:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3304   00283E  5012               	movf	pad@p^0,w,c
  3305   002840  5C15               	subwf	pad@i^0,w,c
  3306   002842  5016               	movf	(pad@i+1)^0,w,c
  3307   002844  0A80               	xorlw	128
  3308   002846  6E14               	movwf	??_pad^0,c
  3309   002848  5013               	movf	(pad@p+1)^0,w,c
  3310   00284A  0A80               	xorlw	128
  3311   00284C  5814               	subwfb	??_pad^0,w,c
  3312   00284E  A0D8               	btfss	status,0,c
  3313   002850  EF2C  F014         	goto	u4031
  3314   002854  EF2E  F014         	goto	u4030
  3315   002858                     u4031:
  3316   002858  EF15  F014         	goto	l4589
  3317   00285C                     u4030:
  3318   00285C                     
  3319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3320   00285C  B05B               	btfsc	_flags^0,0,c
  3321   00285E  EF33  F014         	goto	u4041
  3322   002862  EF35  F014         	goto	u4040
  3323   002866                     u4041:
  3324   002866  EF3D  F014         	goto	l1264
  3325   00286A                     u4040:
  3326   00286A                     
  3327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3328   00286A  C010  F009         	movff	pad@buf,fputs@s
  3329   00286E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3330   002872  C00F  F00B         	movff	pad@fp,fputs@fp
  3331   002876  EC8B  F015         	call	_fputs	;wreg free
  3332   00287A                     l1264:
  3333   00287A  0012               	return		;funcret
  3334   00287C                     __end_of_pad:
  3335                           	callstack 0
  3336                           
  3337 ;; *************** function _fputs *****************
  3338 ;; Defined at:
  3339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3342 ;;		 -> dbuf(32), 
  3343 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3344 ;;		 -> sprintf@f(12), 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  i               2   12[COMRAM] int 
  3347 ;;  c               1   11[COMRAM] unsigned char 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2    8[COMRAM] int 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3357 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;Total ram usage:        6 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 2
  3364 ;; This function calls:
  3365 ;;		_fputc
  3366 ;; This function is called by:
  3367 ;;		_pad
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text15
  3372   002B16                     __ptext15:
  3373                           	callstack 0
  3374   002B16                     _fputs:
  3375                           	callstack 22
  3376   002B16  0E00               	movlw	0
  3377   002B18  6E0E               	movwf	(fputs@i+1)^0,c
  3378   002B1A  0E00               	movlw	0
  3379   002B1C  6E0D               	movwf	fputs@i^0,c
  3380   002B1E  EF9A  F015         	goto	l4579
  3381   002B22                     l4575:
  3382   002B22  C00C  F001         	movff	fputs@c,fputc@c
  3383   002B26  6A02               	clrf	(fputc@c+1)^0,c
  3384   002B28  C00B  F003         	movff	fputs@fp,fputc@fp
  3385   002B2C  ECA0  F013         	call	_fputc	;wreg free
  3386   002B30  4A0D               	infsnz	fputs@i^0,f,c
  3387   002B32  2A0E               	incf	(fputs@i+1)^0,f,c
  3388   002B34                     l4579:
  3389   002B34  500D               	movf	fputs@i^0,w,c
  3390   002B36  2409               	addwf	fputs@s^0,w,c
  3391   002B38  6ED9               	movwf	fsr2l,c
  3392   002B3A  500E               	movf	(fputs@i+1)^0,w,c
  3393   002B3C  200A               	addwfc	(fputs@s+1)^0,w,c
  3394   002B3E  6EDA               	movwf	fsr2h,c
  3395   002B40  50DF               	movf	indf2,w,c
  3396   002B42  6E0C               	movwf	fputs@c^0,c
  3397   002B44  500C               	movf	fputs@c^0,w,c
  3398   002B46  A4D8               	btfss	status,2,c
  3399   002B48  EFA8  F015         	goto	u4001
  3400   002B4C  EFAA  F015         	goto	u4000
  3401   002B50                     u4001:
  3402   002B50  EF91  F015         	goto	l4575
  3403   002B54                     u4000:
  3404   002B54  0012               	return		;funcret
  3405   002B56                     __end_of_fputs:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _fputc *****************
  3409 ;; Defined at:
  3410 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  c               2    0[COMRAM] int 
  3413 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3414 ;;		 -> sprintf@f(12), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  2    0[COMRAM] int 
  3419 ;; Registers used:
  3420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3426 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;Total ram usage:        8 bytes
  3431 ;; Hardware stack levels used: 1
  3432 ;; Hardware stack levels required when called: 1
  3433 ;; This function calls:
  3434 ;;		_putch
  3435 ;; This function is called by:
  3436 ;;		_pad
  3437 ;;		_vfpfcnvrt
  3438 ;;		_fputs
  3439 ;; This function uses a non-reentrant model
  3440 ;;
  3441                           
  3442                           	psect	text16
  3443   002740                     __ptext16:
  3444                           	callstack 0
  3445   002740                     _fputc:
  3446                           	callstack 25
  3447   002740  5003               	movf	fputc@fp^0,w,c
  3448   002742  B4D8               	btfsc	status,2,c
  3449   002744  EFA6  F013         	goto	u1961
  3450   002748  EFA8  F013         	goto	u1960
  3451   00274C                     u1961:
  3452   00274C  EFB0  F013         	goto	l2939
  3453   002750                     u1960:
  3454   002750  5003               	movf	fputc@fp^0,w,c
  3455   002752  A4D8               	btfss	status,2,c
  3456   002754  EFAE  F013         	goto	u1971
  3457   002758  EFB0  F013         	goto	u1970
  3458   00275C                     u1971:
  3459   00275C  EFB5  F013         	goto	l2941
  3460   002760                     u1970:
  3461   002760                     l2939:
  3462   002760  5001               	movf	fputc@c^0,w,c
  3463   002762  ECC7  F016         	call	_putch
  3464   002766  EFF4  F013         	goto	l1328
  3465   00276A                     l2941:
  3466   00276A  5003               	movf	fputc@fp^0,w,c
  3467   00276C  6ED9               	movwf	fsr2l,c
  3468   00276E  6ADA               	clrf	fsr2h,c
  3469   002770  0E0A               	movlw	10
  3470   002772  26D9               	addwf	fsr2l,f,c
  3471   002774  50DE               	movf	postinc2,w,c
  3472   002776  10DE               	iorwf	postinc2,w,c
  3473   002778  B4D8               	btfsc	status,2,c
  3474   00277A  EFC1  F013         	goto	u1981
  3475   00277E  EFC3  F013         	goto	u1980
  3476   002782                     u1981:
  3477   002782  EFDC  F013         	goto	l2945
  3478   002786                     u1980:
  3479   002786  5003               	movf	fputc@fp^0,w,c
  3480   002788  6ED9               	movwf	fsr2l,c
  3481   00278A  6ADA               	clrf	fsr2h,c
  3482   00278C  0E0A               	movlw	10
  3483   00278E  26D9               	addwf	fsr2l,f,c
  3484   002790  5003               	movf	fputc@fp^0,w,c
  3485   002792  6EE1               	movwf	fsr1l,c
  3486   002794  6AE2               	clrf	fsr1h,c
  3487   002796  0E03               	movlw	3
  3488   002798  26E1               	addwf	fsr1l,f,c
  3489   00279A  50DE               	movf	postinc2,w,c
  3490   00279C  5CE6               	subwf	postinc1,w,c
  3491   00279E  50E6               	movf	postinc1,w,c
  3492   0027A0  0A80               	xorlw	128
  3493   0027A2  6E08               	movwf	(??_fputc+4)^0,c
  3494   0027A4  50DE               	movf	postinc2,w,c
  3495   0027A6  0A80               	xorlw	128
  3496   0027A8  5808               	subwfb	(??_fputc+4)^0,w,c
  3497   0027AA  B0D8               	btfsc	status,0,c
  3498   0027AC  EFDA  F013         	goto	u1991
  3499   0027B0  EFDC  F013         	goto	u1990
  3500   0027B4                     u1991:
  3501   0027B4  EFF4  F013         	goto	l1328
  3502   0027B8                     u1990:
  3503   0027B8                     l2945:
  3504   0027B8  5003               	movf	fputc@fp^0,w,c
  3505   0027BA  6ED9               	movwf	fsr2l,c
  3506   0027BC  6ADA               	clrf	fsr2h,c
  3507   0027BE  0E03               	movlw	3
  3508   0027C0  26D9               	addwf	fsr2l,f,c
  3509   0027C2  50DF               	movf	indf2,w,c
  3510   0027C4  6E04               	movwf	??_fputc^0,c
  3511   0027C6  5003               	movf	fputc@fp^0,w,c
  3512   0027C8  6ED9               	movwf	fsr2l,c
  3513   0027CA  6ADA               	clrf	fsr2h,c
  3514   0027CC  50DF               	movf	indf2,w,c
  3515   0027CE  2404               	addwf	??_fputc^0,w,c
  3516   0027D0  6ED9               	movwf	fsr2l,c
  3517   0027D2  6ADA               	clrf	fsr2h,c
  3518   0027D4  C001  FFDF         	movff	fputc@c,indf2
  3519   0027D8  5003               	movf	fputc@fp^0,w,c
  3520   0027DA  6ED9               	movwf	fsr2l,c
  3521   0027DC  6ADA               	clrf	fsr2h,c
  3522   0027DE  0E03               	movlw	3
  3523   0027E0  26D9               	addwf	fsr2l,f,c
  3524   0027E2  2ADE               	incf	postinc2,f,c
  3525   0027E4  0E00               	movlw	0
  3526   0027E6  22DD               	addwfc	postdec2,f,c
  3527   0027E8                     l1328:
  3528   0027E8  0012               	return		;funcret
  3529   0027EA                     __end_of_fputc:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _putch *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  c               1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  c               1    0[COMRAM] unsigned char 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;Total ram usage:        0 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_fputc
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text17
  3562   002D8E                     __ptext17:
  3563                           	callstack 0
  3564   002D8E                     _putch:
  3565                           	callstack 25
  3566   002D8E  0012               	return		;funcret
  3567   002D90                     __end_of_putch:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _abs *****************
  3571 ;; Defined at:
  3572 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  a               2    6[COMRAM] int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  2    6[COMRAM] int 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;Total ram usage:        4 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_dtoa
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text18
  3600   002BF8                     __ptext18:
  3601                           	callstack 0
  3602   002BF8                     _abs:
  3603                           	callstack 25
  3604   002BF8  BE08               	btfsc	(abs@a+1)^0,7,c
  3605   002BFA  EF01  F016         	goto	u2171
  3606   002BFE  EF03  F016         	goto	u2170
  3607   002C02                     u2171:
  3608   002C02  EF09  F016         	goto	l1313
  3609   002C06                     u2170:
  3610   002C06  C007  F007         	movff	abs@a,?_abs
  3611   002C0A  C008  F008         	movff	abs@a+1,?_abs+1
  3612   002C0E  EF15  F016         	goto	l1316
  3613   002C12                     l1313:
  3614   002C12  C007  F009         	movff	abs@a,??_abs
  3615   002C16  C008  F00A         	movff	abs@a+1,??_abs+1
  3616   002C1A  1E09               	comf	??_abs^0,f,c
  3617   002C1C  1E0A               	comf	(??_abs+1)^0,f,c
  3618   002C1E  4A09               	infsnz	??_abs^0,f,c
  3619   002C20  2A0A               	incf	(??_abs+1)^0,f,c
  3620   002C22  C009  F007         	movff	??_abs,?_abs
  3621   002C26  C00A  F008         	movff	??_abs+1,?_abs+1
  3622   002C2A                     l1316:
  3623   002C2A  0012               	return		;funcret
  3624   002C2C                     __end_of_abs:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function ___awmod *****************
  3628 ;; Defined at:
  3629 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  dividend        2    0[COMRAM] int 
  3632 ;;  divisor         2    2[COMRAM] int 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  sign            1    5[COMRAM] unsigned char 
  3635 ;;  counter         1    4[COMRAM] unsigned char 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  2    0[COMRAM] int 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;Total ram usage:        6 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_dtoa
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text19
  3659   0025E2                     __ptext19:
  3660                           	callstack 0
  3661   0025E2                     ___awmod:
  3662                           	callstack 25
  3663   0025E2  0E00               	movlw	0
  3664   0025E4  6E06               	movwf	___awmod@sign^0,c
  3665   0025E6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3666   0025E8  EFFA  F012         	goto	u2070
  3667   0025EC  EFF8  F012         	goto	u2071
  3668   0025F0                     u2071:
  3669   0025F0  EF00  F013         	goto	l3015
  3670   0025F4                     u2070:
  3671   0025F4  6C01               	negf	___awmod@dividend^0,c
  3672   0025F6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3673   0025F8  B0D8               	btfsc	status,0,c
  3674   0025FA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3675   0025FC  0E01               	movlw	1
  3676   0025FE  6E06               	movwf	___awmod@sign^0,c
  3677   002600                     l3015:
  3678   002600  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3679   002602  EF07  F013         	goto	u2080
  3680   002606  EF05  F013         	goto	u2081
  3681   00260A                     u2081:
  3682   00260A  EF0B  F013         	goto	l3019
  3683   00260E                     u2080:
  3684   00260E  6C03               	negf	___awmod@divisor^0,c
  3685   002610  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3686   002612  B0D8               	btfsc	status,0,c
  3687   002614  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3688   002616                     l3019:
  3689   002616  5003               	movf	___awmod@divisor^0,w,c
  3690   002618  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3691   00261A  B4D8               	btfsc	status,2,c
  3692   00261C  EF12  F013         	goto	u2091
  3693   002620  EF14  F013         	goto	u2090
  3694   002624                     u2091:
  3695   002624  EF38  F013         	goto	l3035
  3696   002628                     u2090:
  3697   002628  0E01               	movlw	1
  3698   00262A  6E05               	movwf	___awmod@counter^0,c
  3699   00262C  EF1C  F013         	goto	l3025
  3700   002630                     l3023:
  3701   002630  90D8               	bcf	status,0,c
  3702   002632  3603               	rlcf	___awmod@divisor^0,f,c
  3703   002634  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3704   002636  2A05               	incf	___awmod@counter^0,f,c
  3705   002638                     l3025:
  3706   002638  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3707   00263A  EF21  F013         	goto	u2101
  3708   00263E  EF23  F013         	goto	u2100
  3709   002642                     u2101:
  3710   002642  EF18  F013         	goto	l3023
  3711   002646                     u2100:
  3712   002646                     l3027:
  3713   002646  5003               	movf	___awmod@divisor^0,w,c
  3714   002648  5C01               	subwf	___awmod@dividend^0,w,c
  3715   00264A  5004               	movf	(___awmod@divisor+1)^0,w,c
  3716   00264C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3717   00264E  A0D8               	btfss	status,0,c
  3718   002650  EF2C  F013         	goto	u2111
  3719   002654  EF2E  F013         	goto	u2110
  3720   002658                     u2111:
  3721   002658  EF32  F013         	goto	l3031
  3722   00265C                     u2110:
  3723   00265C  5003               	movf	___awmod@divisor^0,w,c
  3724   00265E  5E01               	subwf	___awmod@dividend^0,f,c
  3725   002660  5004               	movf	(___awmod@divisor+1)^0,w,c
  3726   002662  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3727   002664                     l3031:
  3728   002664  90D8               	bcf	status,0,c
  3729   002666  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3730   002668  3203               	rrcf	___awmod@divisor^0,f,c
  3731   00266A  2E05               	decfsz	___awmod@counter^0,f,c
  3732   00266C  EF23  F013         	goto	l3027
  3733   002670                     l3035:
  3734   002670  5006               	movf	___awmod@sign^0,w,c
  3735   002672  B4D8               	btfsc	status,2,c
  3736   002674  EF3E  F013         	goto	u2121
  3737   002678  EF40  F013         	goto	u2120
  3738   00267C                     u2121:
  3739   00267C  EF44  F013         	goto	l3039
  3740   002680                     u2120:
  3741   002680  6C01               	negf	___awmod@dividend^0,c
  3742   002682  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3743   002684  B0D8               	btfsc	status,0,c
  3744   002686  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3745   002688                     l3039:
  3746   002688  C001  F001         	movff	___awmod@dividend,?___awmod
  3747   00268C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3748   002690  0012               	return		;funcret
  3749   002692                     __end_of___awmod:
  3750                           	callstack 0
  3751                           
  3752 ;; *************** function ___awdiv *****************
  3753 ;; Defined at:
  3754 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  dividend        2    0[COMRAM] int 
  3757 ;;  divisor         2    2[COMRAM] int 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  quotient        2    6[COMRAM] int 
  3760 ;;  sign            1    5[COMRAM] unsigned char 
  3761 ;;  counter         1    4[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  2    0[COMRAM] int 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;Total ram usage:        8 bytes
  3776 ;; Hardware stack levels used: 1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_dtoa
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           	psect	text20
  3785   00251E                     __ptext20:
  3786                           	callstack 0
  3787   00251E                     ___awdiv:
  3788                           	callstack 25
  3789   00251E  0E00               	movlw	0
  3790   002520  6E06               	movwf	___awdiv@sign^0,c
  3791   002522  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3792   002524  EF98  F012         	goto	u2010
  3793   002528  EF96  F012         	goto	u2011
  3794   00252C                     u2011:
  3795   00252C  EF9E  F012         	goto	l2971
  3796   002530                     u2010:
  3797   002530  6C03               	negf	___awdiv@divisor^0,c
  3798   002532  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3799   002534  B0D8               	btfsc	status,0,c
  3800   002536  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3801   002538  0E01               	movlw	1
  3802   00253A  6E06               	movwf	___awdiv@sign^0,c
  3803   00253C                     l2971:
  3804   00253C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3805   00253E  EFA5  F012         	goto	u2020
  3806   002542  EFA3  F012         	goto	u2021
  3807   002546                     u2021:
  3808   002546  EFAB  F012         	goto	l2977
  3809   00254A                     u2020:
  3810   00254A  6C01               	negf	___awdiv@dividend^0,c
  3811   00254C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3812   00254E  B0D8               	btfsc	status,0,c
  3813   002550  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3814   002552  0E01               	movlw	1
  3815   002554  1A06               	xorwf	___awdiv@sign^0,f,c
  3816   002556                     l2977:
  3817   002556  0E00               	movlw	0
  3818   002558  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3819   00255A  0E00               	movlw	0
  3820   00255C  6E07               	movwf	___awdiv@quotient^0,c
  3821   00255E  5003               	movf	___awdiv@divisor^0,w,c
  3822   002560  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3823   002562  B4D8               	btfsc	status,2,c
  3824   002564  EFB6  F012         	goto	u2031
  3825   002568  EFB8  F012         	goto	u2030
  3826   00256C                     u2031:
  3827   00256C  EFE0  F012         	goto	l2999
  3828   002570                     u2030:
  3829   002570  0E01               	movlw	1
  3830   002572  6E05               	movwf	___awdiv@counter^0,c
  3831   002574  EFC0  F012         	goto	l2985
  3832   002578                     l2983:
  3833   002578  90D8               	bcf	status,0,c
  3834   00257A  3603               	rlcf	___awdiv@divisor^0,f,c
  3835   00257C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3836   00257E  2A05               	incf	___awdiv@counter^0,f,c
  3837   002580                     l2985:
  3838   002580  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3839   002582  EFC5  F012         	goto	u2041
  3840   002586  EFC7  F012         	goto	u2040
  3841   00258A                     u2041:
  3842   00258A  EFBC  F012         	goto	l2983
  3843   00258E                     u2040:
  3844   00258E                     l2987:
  3845   00258E  90D8               	bcf	status,0,c
  3846   002590  3607               	rlcf	___awdiv@quotient^0,f,c
  3847   002592  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3848   002594  5003               	movf	___awdiv@divisor^0,w,c
  3849   002596  5C01               	subwf	___awdiv@dividend^0,w,c
  3850   002598  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3851   00259A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3852   00259C  A0D8               	btfss	status,0,c
  3853   00259E  EFD3  F012         	goto	u2051
  3854   0025A2  EFD5  F012         	goto	u2050
  3855   0025A6                     u2051:
  3856   0025A6  EFDA  F012         	goto	l2995
  3857   0025AA                     u2050:
  3858   0025AA  5003               	movf	___awdiv@divisor^0,w,c
  3859   0025AC  5E01               	subwf	___awdiv@dividend^0,f,c
  3860   0025AE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3861   0025B0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3862   0025B2  8007               	bsf	___awdiv@quotient^0,0,c
  3863   0025B4                     l2995:
  3864   0025B4  90D8               	bcf	status,0,c
  3865   0025B6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3866   0025B8  3203               	rrcf	___awdiv@divisor^0,f,c
  3867   0025BA  2E05               	decfsz	___awdiv@counter^0,f,c
  3868   0025BC  EFC7  F012         	goto	l2987
  3869   0025C0                     l2999:
  3870   0025C0  5006               	movf	___awdiv@sign^0,w,c
  3871   0025C2  B4D8               	btfsc	status,2,c
  3872   0025C4  EFE6  F012         	goto	u2061
  3873   0025C8  EFE8  F012         	goto	u2060
  3874   0025CC                     u2061:
  3875   0025CC  EFEC  F012         	goto	l3003
  3876   0025D0                     u2060:
  3877   0025D0  6C07               	negf	___awdiv@quotient^0,c
  3878   0025D2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3879   0025D4  B0D8               	btfsc	status,0,c
  3880   0025D6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3881   0025D8                     l3003:
  3882   0025D8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3883   0025DC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3884   0025E0  0012               	return		;funcret
  3885   0025E2                     __end_of___awdiv:
  3886                           	callstack 0
  3887                           
  3888 ;; *************** function _sendStringSerial4 *****************
  3889 ;; Defined at:
  3890 ;;		line 41 in file "serial.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  string          1    1[COMRAM] PTR unsigned char 
  3893 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3905 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;Total ram usage:        1 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 1
  3912 ;; This function calls:
  3913 ;;		_sendCharSerial4
  3914 ;; This function is called by:
  3915 ;;		_calibration_routine
  3916 ;;		_send2USART
  3917 ;;		_sendAllReadings
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text21
  3922   002C2C                     __ptext21:
  3923                           	callstack 0
  3924   002C2C                     _sendStringSerial4:
  3925                           	callstack 28
  3926   002C2C                     
  3927                           ;serial.c: 44:     while(*string != 0){
  3928   002C2C  EF23  F016         	goto	l3305
  3929   002C30                     l3299:
  3930                           
  3931                           ;serial.c: 46:   sendCharSerial4(*string++);
  3932   002C30  5002               	movf	sendStringSerial4@string^0,w,c
  3933   002C32  6ED9               	movwf	fsr2l,c
  3934   002C34  6ADA               	clrf	fsr2h,c
  3935   002C36  50DF               	movf	indf2,w,c
  3936   002C38  ECA6  F016         	call	_sendCharSerial4
  3937   002C3C  2A02               	incf	sendStringSerial4@string^0,f,c
  3938   002C3E                     
  3939                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  3940   002C3E  0E6A               	movlw	106
  3941   002C40                     u4367:
  3942   002C40  2EE8               	decfsz	wreg,f,c
  3943   002C42  D7FE               	bra	u4367
  3944   002C44  D000               	nop2	
  3945   002C46                     l3305:
  3946                           
  3947                           ;serial.c: 44:     while(*string != 0){
  3948   002C46  5002               	movf	sendStringSerial4@string^0,w,c
  3949   002C48  6ED9               	movwf	fsr2l,c
  3950   002C4A  6ADA               	clrf	fsr2h,c
  3951   002C4C  50DF               	movf	indf2,w,c
  3952   002C4E  A4D8               	btfss	status,2,c
  3953   002C50  EF2C  F016         	goto	u2431
  3954   002C54  EF2E  F016         	goto	u2430
  3955   002C58                     u2431:
  3956   002C58  EF18  F016         	goto	l3299
  3957   002C5C                     u2430:
  3958   002C5C  0012               	return		;funcret
  3959   002C5E                     __end_of_sendStringSerial4:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _sendCharSerial4 *****************
  3963 ;; Defined at:
  3964 ;;		line 35 in file "serial.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  charToSend      1    wreg     unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  charToSend      1    0[COMRAM] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;Total ram usage:        1 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_sendStringSerial4
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text22
  3992   002D4C                     __ptext22:
  3993                           	callstack 0
  3994   002D4C                     _sendCharSerial4:
  3995                           	callstack 28
  3996                           
  3997                           ;incstack = 0
  3998                           ;sendCharSerial4@charToSend stored from wreg
  3999   002D4C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4000   002D4E                     l504:
  4001   002D4E  010E               	movlb	14	; () banked
  4002   002D50  A537               	btfss	55,2,b	;volatile
  4003   002D52  EFAD  F016         	goto	u2411
  4004   002D56  EFAF  F016         	goto	u2410
  4005   002D5A                     u2411:
  4006   002D5A  EFA7  F016         	goto	l504
  4007   002D5E                     u2410:
  4008   002D5E                     
  4009                           ; BSR set to: 14
  4010                           ;serial.c: 37:     TX4REG = charToSend;
  4011   002D5E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4012   002D62                     
  4013                           ; BSR set to: 14
  4014   002D62  0012               	return		;funcret
  4015   002D64                     __end_of_sendCharSerial4:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _color_read_Red *****************
  4019 ;; Defined at:
  4020 ;;		line 32 in file "color.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  tmp             2    9[COMRAM] unsigned int 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  2    4[COMRAM] unsigned int 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;Total ram usage:        7 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 2
  4041 ;; This function calls:
  4042 ;;		_I2C_2_Master_Read
  4043 ;;		_I2C_2_Master_RepStart
  4044 ;;		_I2C_2_Master_Start
  4045 ;;		_I2C_2_Master_Stop
  4046 ;;		_I2C_2_Master_Write
  4047 ;; This function is called by:
  4048 ;;		_calibration_routine
  4049 ;;		_reading_hue
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text23
  4054   00290C                     __ptext23:
  4055                           	callstack 0
  4056   00290C                     _color_read_Red:
  4057                           	callstack 27
  4058   00290C                     
  4059                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  4060   00290C  ECBD  F016         	call	_I2C_2_Master_Start	;wreg free
  4061                           
  4062                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  4063   002910  0E52               	movlw	82
  4064   002912  ECB2  F016         	call	_I2C_2_Master_Write
  4065                           
  4066                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  4067   002916  0EB6               	movlw	182
  4068   002918  ECB2  F016         	call	_I2C_2_Master_Write
  4069                           
  4070                           ;color.c: 38:  I2C_2_Master_RepStart();
  4071   00291C  ECC2  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4072                           
  4073                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  4074   002920  0E53               	movlw	83
  4075   002922  ECB2  F016         	call	_I2C_2_Master_Write
  4076                           
  4077                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  4078   002926  0E01               	movlw	1
  4079   002928  EC6A  F015         	call	_I2C_2_Master_Read
  4080   00292C  6E07               	movwf	??_color_read_Red^0,c
  4081   00292E  5007               	movf	??_color_read_Red^0,w,c
  4082   002930  6E0A               	movwf	color_read_Red@tmp^0,c
  4083   002932  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4084                           
  4085                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4086   002934  0E00               	movlw	0
  4087   002936  EC6A  F015         	call	_I2C_2_Master_Read
  4088   00293A  6E07               	movwf	??_color_read_Red^0,c
  4089   00293C  5007               	movf	??_color_read_Red^0,w,c
  4090   00293E  6E09               	movwf	(??_color_read_Red+2)^0,c
  4091   002940  6A08               	clrf	(??_color_read_Red+1)^0,c
  4092   002942  500A               	movf	color_read_Red@tmp^0,w,c
  4093   002944  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4094   002946  6E0A               	movwf	color_read_Red@tmp^0,c
  4095   002948  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4096   00294A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4097   00294C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4098                           
  4099                           ;color.c: 42:  I2C_2_Master_Stop();
  4100   00294E  ECB8  F016         	call	_I2C_2_Master_Stop	;wreg free
  4101   002952                     
  4102                           ;color.c: 43:  return tmp;
  4103   002952  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4104   002956  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4105   00295A  0012               	return		;funcret
  4106   00295C                     __end_of_color_read_Red:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _color_read_Green *****************
  4110 ;; Defined at:
  4111 ;;		line 46 in file "color.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;		None
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  tmp             2    9[COMRAM] unsigned int 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  2    4[COMRAM] unsigned int 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4127 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4128 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;Total ram usage:        7 bytes
  4130 ;; Hardware stack levels used: 1
  4131 ;; Hardware stack levels required when called: 2
  4132 ;; This function calls:
  4133 ;;		_I2C_2_Master_Read
  4134 ;;		_I2C_2_Master_RepStart
  4135 ;;		_I2C_2_Master_Start
  4136 ;;		_I2C_2_Master_Stop
  4137 ;;		_I2C_2_Master_Write
  4138 ;; This function is called by:
  4139 ;;		_calibration_routine
  4140 ;;		_reading_hue
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text24
  4145   00295C                     __ptext24:
  4146                           	callstack 0
  4147   00295C                     _color_read_Green:
  4148                           	callstack 27
  4149   00295C                     
  4150                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4151   00295C  ECBD  F016         	call	_I2C_2_Master_Start	;wreg free
  4152                           
  4153                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4154   002960  0E52               	movlw	82
  4155   002962  ECB2  F016         	call	_I2C_2_Master_Write
  4156                           
  4157                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4158   002966  0EB8               	movlw	184
  4159   002968  ECB2  F016         	call	_I2C_2_Master_Write
  4160                           
  4161                           ;color.c: 52:  I2C_2_Master_RepStart();
  4162   00296C  ECC2  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4163                           
  4164                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4165   002970  0E53               	movlw	83
  4166   002972  ECB2  F016         	call	_I2C_2_Master_Write
  4167                           
  4168                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4169   002976  0E01               	movlw	1
  4170   002978  EC6A  F015         	call	_I2C_2_Master_Read
  4171   00297C  6E07               	movwf	??_color_read_Green^0,c
  4172   00297E  5007               	movf	??_color_read_Green^0,w,c
  4173   002980  6E0A               	movwf	color_read_Green@tmp^0,c
  4174   002982  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4175                           
  4176                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4177   002984  0E00               	movlw	0
  4178   002986  EC6A  F015         	call	_I2C_2_Master_Read
  4179   00298A  6E07               	movwf	??_color_read_Green^0,c
  4180   00298C  5007               	movf	??_color_read_Green^0,w,c
  4181   00298E  6E09               	movwf	(??_color_read_Green+2)^0,c
  4182   002990  6A08               	clrf	(??_color_read_Green+1)^0,c
  4183   002992  500A               	movf	color_read_Green@tmp^0,w,c
  4184   002994  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4185   002996  6E0A               	movwf	color_read_Green@tmp^0,c
  4186   002998  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4187   00299A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4188   00299C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4189                           
  4190                           ;color.c: 56:  I2C_2_Master_Stop();
  4191   00299E  ECB8  F016         	call	_I2C_2_Master_Stop	;wreg free
  4192   0029A2                     
  4193                           ;color.c: 57:  return tmp;
  4194   0029A2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4195   0029A6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4196   0029AA  0012               	return		;funcret
  4197   0029AC                     __end_of_color_read_Green:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function _color_read_Clear *****************
  4201 ;; Defined at:
  4202 ;;		line 75 in file "color.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;		None
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  tmp             2    9[COMRAM] unsigned int 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  2    4[COMRAM] unsigned int 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;Total ram usage:        7 bytes
  4221 ;; Hardware stack levels used: 1
  4222 ;; Hardware stack levels required when called: 2
  4223 ;; This function calls:
  4224 ;;		_I2C_2_Master_Read
  4225 ;;		_I2C_2_Master_RepStart
  4226 ;;		_I2C_2_Master_Start
  4227 ;;		_I2C_2_Master_Stop
  4228 ;;		_I2C_2_Master_Write
  4229 ;; This function is called by:
  4230 ;;		_calibration_routine
  4231 ;;		_main
  4232 ;;		_reading_hue
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text25
  4237   0029AC                     __ptext25:
  4238                           	callstack 0
  4239   0029AC                     _color_read_Clear:
  4240                           	callstack 28
  4241   0029AC                     
  4242                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  4243   0029AC  ECBD  F016         	call	_I2C_2_Master_Start	;wreg free
  4244                           
  4245                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  4246   0029B0  0E52               	movlw	82
  4247   0029B2  ECB2  F016         	call	_I2C_2_Master_Write
  4248                           
  4249                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  4250   0029B6  0EB4               	movlw	180
  4251   0029B8  ECB2  F016         	call	_I2C_2_Master_Write
  4252                           
  4253                           ;color.c: 81:  I2C_2_Master_RepStart();
  4254   0029BC  ECC2  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4255                           
  4256                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  4257   0029C0  0E53               	movlw	83
  4258   0029C2  ECB2  F016         	call	_I2C_2_Master_Write
  4259                           
  4260                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  4261   0029C6  0E01               	movlw	1
  4262   0029C8  EC6A  F015         	call	_I2C_2_Master_Read
  4263   0029CC  6E07               	movwf	??_color_read_Clear^0,c
  4264   0029CE  5007               	movf	??_color_read_Clear^0,w,c
  4265   0029D0  6E0A               	movwf	color_read_Clear@tmp^0,c
  4266   0029D2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4267                           
  4268                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4269   0029D4  0E00               	movlw	0
  4270   0029D6  EC6A  F015         	call	_I2C_2_Master_Read
  4271   0029DA  6E07               	movwf	??_color_read_Clear^0,c
  4272   0029DC  5007               	movf	??_color_read_Clear^0,w,c
  4273   0029DE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4274   0029E0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4275   0029E2  500A               	movf	color_read_Clear@tmp^0,w,c
  4276   0029E4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4277   0029E6  6E0A               	movwf	color_read_Clear@tmp^0,c
  4278   0029E8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4279   0029EA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4280   0029EC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4281                           
  4282                           ;color.c: 85:  I2C_2_Master_Stop();
  4283   0029EE  ECB8  F016         	call	_I2C_2_Master_Stop	;wreg free
  4284   0029F2                     
  4285                           ;color.c: 86:  return tmp;
  4286   0029F2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4287   0029F6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4288   0029FA  0012               	return		;funcret
  4289   0029FC                     __end_of_color_read_Clear:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _color_read_Blue *****************
  4293 ;; Defined at:
  4294 ;;		line 60 in file "color.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  tmp             2    9[COMRAM] unsigned int 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  2    4[COMRAM] unsigned int 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;Total ram usage:        7 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 2
  4315 ;; This function calls:
  4316 ;;		_I2C_2_Master_Read
  4317 ;;		_I2C_2_Master_RepStart
  4318 ;;		_I2C_2_Master_Start
  4319 ;;		_I2C_2_Master_Stop
  4320 ;;		_I2C_2_Master_Write
  4321 ;; This function is called by:
  4322 ;;		_calibration_routine
  4323 ;;		_reading_hue
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text26
  4328   0029FC                     __ptext26:
  4329                           	callstack 0
  4330   0029FC                     _color_read_Blue:
  4331                           	callstack 27
  4332   0029FC                     
  4333                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4334   0029FC  ECBD  F016         	call	_I2C_2_Master_Start	;wreg free
  4335                           
  4336                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4337   002A00  0E52               	movlw	82
  4338   002A02  ECB2  F016         	call	_I2C_2_Master_Write
  4339                           
  4340                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4341   002A06  0EBA               	movlw	186
  4342   002A08  ECB2  F016         	call	_I2C_2_Master_Write
  4343                           
  4344                           ;color.c: 66:  I2C_2_Master_RepStart();
  4345   002A0C  ECC2  F016         	call	_I2C_2_Master_RepStart	;wreg free
  4346                           
  4347                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4348   002A10  0E53               	movlw	83
  4349   002A12  ECB2  F016         	call	_I2C_2_Master_Write
  4350                           
  4351                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4352   002A16  0E01               	movlw	1
  4353   002A18  EC6A  F015         	call	_I2C_2_Master_Read
  4354   002A1C  6E07               	movwf	??_color_read_Blue^0,c
  4355   002A1E  5007               	movf	??_color_read_Blue^0,w,c
  4356   002A20  6E0A               	movwf	color_read_Blue@tmp^0,c
  4357   002A22  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4358                           
  4359                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4360   002A24  0E00               	movlw	0
  4361   002A26  EC6A  F015         	call	_I2C_2_Master_Read
  4362   002A2A  6E07               	movwf	??_color_read_Blue^0,c
  4363   002A2C  5007               	movf	??_color_read_Blue^0,w,c
  4364   002A2E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4365   002A30  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4366   002A32  500A               	movf	color_read_Blue@tmp^0,w,c
  4367   002A34  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4368   002A36  6E0A               	movwf	color_read_Blue@tmp^0,c
  4369   002A38  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4370   002A3A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4371   002A3C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4372                           
  4373                           ;color.c: 70:  I2C_2_Master_Stop();
  4374   002A3E  ECB8  F016         	call	_I2C_2_Master_Stop	;wreg free
  4375   002A42                     
  4376                           ;color.c: 71:  return tmp;
  4377   002A42  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4378   002A46  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4379   002A4A  0012               	return		;funcret
  4380   002A4C                     __end_of_color_read_Blue:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _I2C_2_Master_Write *****************
  4384 ;; Defined at:
  4385 ;;		line 45 in file "i2c.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  data_byte       1    wreg     unsigned char 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  data_byte       1    1[COMRAM] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;Total ram usage:        1 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 1
  4406 ;; This function calls:
  4407 ;;		_I2C_2_Master_Idle
  4408 ;; This function is called by:
  4409 ;;		_color_writetoaddr
  4410 ;;		_color_read_Red
  4411 ;;		_color_read_Green
  4412 ;;		_color_read_Blue
  4413 ;;		_color_read_Clear
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text27
  4418   002D64                     __ptext27:
  4419                           	callstack 0
  4420   002D64                     _I2C_2_Master_Write:
  4421                           	callstack 28
  4422                           
  4423                           ;incstack = 0
  4424                           ;I2C_2_Master_Write@data_byte stored from wreg
  4425   002D64  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4426   002D66                     
  4427                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4428   002D66  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4429   002D6A                     
  4430                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4431   002D6A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4432   002D6E  0012               	return		;funcret
  4433   002D70                     __end_of_I2C_2_Master_Write:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _I2C_2_Master_Stop *****************
  4437 ;; Defined at:
  4438 ;;		line 39 in file "i2c.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 1
  4459 ;; This function calls:
  4460 ;;		_I2C_2_Master_Idle
  4461 ;; This function is called by:
  4462 ;;		_color_writetoaddr
  4463 ;;		_color_read_Red
  4464 ;;		_color_read_Green
  4465 ;;		_color_read_Blue
  4466 ;;		_color_read_Clear
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text28
  4471   002D70                     __ptext28:
  4472                           	callstack 0
  4473   002D70                     _I2C_2_Master_Stop:
  4474                           	callstack 28
  4475   002D70                     
  4476                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4477   002D70  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4478   002D74                     
  4479                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4480   002D74  010E               	movlb	14	; () banked
  4481   002D76  85DA               	bsf	218,2,b	;volatile
  4482   002D78                     
  4483                           ; BSR set to: 14
  4484   002D78  0012               	return		;funcret
  4485   002D7A                     __end_of_I2C_2_Master_Stop:
  4486                           	callstack 0
  4487                           
  4488 ;; *************** function _I2C_2_Master_Start *****************
  4489 ;; Defined at:
  4490 ;;		line 27 in file "i2c.c"
  4491 ;; Parameters:    Size  Location     Type
  4492 ;;		None
  4493 ;; Auto vars:     Size  Location     Type
  4494 ;;		None
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, status,2, status,0, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;Total ram usage:        0 bytes
  4509 ;; Hardware stack levels used: 1
  4510 ;; Hardware stack levels required when called: 1
  4511 ;; This function calls:
  4512 ;;		_I2C_2_Master_Idle
  4513 ;; This function is called by:
  4514 ;;		_color_writetoaddr
  4515 ;;		_color_read_Red
  4516 ;;		_color_read_Green
  4517 ;;		_color_read_Blue
  4518 ;;		_color_read_Clear
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text29
  4523   002D7A                     __ptext29:
  4524                           	callstack 0
  4525   002D7A                     _I2C_2_Master_Start:
  4526                           	callstack 28
  4527   002D7A                     
  4528                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4529   002D7A  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4530   002D7E                     
  4531                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4532   002D7E  010E               	movlb	14	; () banked
  4533   002D80  81DA               	bsf	218,0,b	;volatile
  4534   002D82                     
  4535                           ; BSR set to: 14
  4536   002D82  0012               	return		;funcret
  4537   002D84                     __end_of_I2C_2_Master_Start:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _I2C_2_Master_RepStart *****************
  4541 ;; Defined at:
  4542 ;;		line 33 in file "i2c.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;Total ram usage:        0 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 1
  4563 ;; This function calls:
  4564 ;;		_I2C_2_Master_Idle
  4565 ;; This function is called by:
  4566 ;;		_color_read_Red
  4567 ;;		_color_read_Green
  4568 ;;		_color_read_Blue
  4569 ;;		_color_read_Clear
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text30
  4574   002D84                     __ptext30:
  4575                           	callstack 0
  4576   002D84                     _I2C_2_Master_RepStart:
  4577                           	callstack 28
  4578   002D84                     
  4579                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4580   002D84  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4581   002D88                     
  4582                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4583   002D88  010E               	movlb	14	; () banked
  4584   002D8A  83DA               	bsf	218,1,b	;volatile
  4585   002D8C                     
  4586                           ; BSR set to: 14
  4587   002D8C  0012               	return		;funcret
  4588   002D8E                     __end_of_I2C_2_Master_RepStart:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _I2C_2_Master_Read *****************
  4592 ;; Defined at:
  4593 ;;		line 51 in file "i2c.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  ack             1    wreg     unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  ack             1    2[COMRAM] unsigned char 
  4598 ;;  tmp             1    3[COMRAM] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      unsigned char 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, status,0, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;Total ram usage:        3 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 1
  4615 ;; This function calls:
  4616 ;;		_I2C_2_Master_Idle
  4617 ;; This function is called by:
  4618 ;;		_color_read_Red
  4619 ;;		_color_read_Green
  4620 ;;		_color_read_Blue
  4621 ;;		_color_read_Clear
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text31
  4626   002AD4                     __ptext31:
  4627                           	callstack 0
  4628   002AD4                     _I2C_2_Master_Read:
  4629                           	callstack 28
  4630                           
  4631                           ; BSR set to: 14
  4632                           ;incstack = 0
  4633                           ;I2C_2_Master_Read@ack stored from wreg
  4634   002AD4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4635   002AD6                     
  4636                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4637   002AD6  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4638   002ADA                     
  4639                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4640   002ADA  010E               	movlb	14	; () banked
  4641   002ADC  87DA               	bsf	218,3,b	;volatile
  4642                           
  4643                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4644   002ADE  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4645   002AE2                     
  4646                           ;i2c.c: 57:   tmp = SSP2BUF;
  4647   002AE2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4648                           
  4649                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4650   002AE6  EC44  F016         	call	_I2C_2_Master_Idle	;wreg free
  4651   002AEA                     
  4652                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4653   002AEA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4654   002AEC  B4D8               	btfsc	status,2,c
  4655   002AEE  EF7B  F015         	goto	u2371
  4656   002AF2  EF7F  F015         	goto	u2370
  4657   002AF6                     u2371:
  4658   002AF6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4659   002AF8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4660   002AFA  EF80  F015         	goto	u2388
  4661   002AFE                     u2370:
  4662   002AFE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4663   002B00                     u2388:
  4664   002B00  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4665   002B02  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4666   002B04  010E               	movlb	14	; () banked
  4667   002B06  51DA               	movf	218,w,b	;volatile
  4668   002B08  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4669   002B0A  0BDF               	andlw	-33
  4670   002B0C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4671   002B0E  6FDA               	movwf	218,b	;volatile
  4672   002B10                     
  4673                           ; BSR set to: 14
  4674                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4675   002B10  89DA               	bsf	218,4,b	;volatile
  4676   002B12                     
  4677                           ; BSR set to: 14
  4678                           ;i2c.c: 61:   return tmp;
  4679   002B12  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4680   002B14                     
  4681                           ; BSR set to: 14
  4682   002B14  0012               	return		;funcret
  4683   002B16                     __end_of_I2C_2_Master_Read:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _I2C_2_Master_Idle *****************
  4687 ;; Defined at:
  4688 ;;		line 22 in file "i2c.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;Total ram usage:        1 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_I2C_2_Master_Start
  4712 ;;		_I2C_2_Master_RepStart
  4713 ;;		_I2C_2_Master_Stop
  4714 ;;		_I2C_2_Master_Write
  4715 ;;		_I2C_2_Master_Read
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text32
  4720   002C88                     __ptext32:
  4721                           	callstack 0
  4722   002C88                     _I2C_2_Master_Idle:
  4723                           	callstack 28
  4724   002C88                     l191:
  4725   002C88  010E               	movlb	14	; () banked
  4726   002C8A  B5D8               	btfsc	216,2,b	;volatile
  4727   002C8C  EF4A  F016         	goto	u2301
  4728   002C90  EF4C  F016         	goto	u2300
  4729   002C94                     u2301:
  4730   002C94  EF44  F016         	goto	l191
  4731   002C98                     u2300:
  4732   002C98                     
  4733                           ; BSR set to: 14
  4734   002C98  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4735   002C9C  0E1F               	movlw	31
  4736   002C9E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4737   002CA0  A4D8               	btfss	status,2,c
  4738   002CA2  EF55  F016         	goto	u2311
  4739   002CA6  EF57  F016         	goto	u2310
  4740   002CAA                     u2311:
  4741   002CAA  EF44  F016         	goto	l191
  4742   002CAE                     u2310:
  4743   002CAE                     
  4744                           ; BSR set to: 14
  4745   002CAE  0012               	return		;funcret
  4746   002CB0                     __end_of_I2C_2_Master_Idle:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function ___xxtofl *****************
  4750 ;; Defined at:
  4751 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  sign            1    wreg     unsigned char 
  4754 ;;  val             4   11[COMRAM] long 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;  sign            1   19[COMRAM] unsigned char 
  4757 ;;  arg             4   21[COMRAM] unsigned long 
  4758 ;;  exp             1   20[COMRAM] unsigned char 
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  4   11[COMRAM] unsigned char 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4769 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4771 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4772 ;;Total ram usage:       14 bytes
  4773 ;; Hardware stack levels used: 1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;;		_convert_rgb2hue
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text33
  4783   001F68                     __ptext33:
  4784                           	callstack 0
  4785   001F68                     ___xxtofl:
  4786                           	callstack 30
  4787                           
  4788                           ; BSR set to: 14
  4789                           ;incstack = 0
  4790                           ;___xxtofl@sign stored from wreg
  4791   001F68  6E14               	movwf	___xxtofl@sign^0,c
  4792   001F6A  5014               	movf	___xxtofl@sign^0,w,c
  4793   001F6C  B4D8               	btfsc	status,2,c
  4794   001F6E  EFBB  F00F         	goto	u3511
  4795   001F72  EFBD  F00F         	goto	u3510
  4796   001F76                     u3511:
  4797   001F76  EFDF  F00F         	goto	l1216
  4798   001F7A                     u3510:
  4799   001F7A  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4800   001F7C  EFC4  F00F         	goto	u3520
  4801   001F80  EFC2  F00F         	goto	u3521
  4802   001F84                     u3521:
  4803   001F84  EFDF  F00F         	goto	l1216
  4804   001F88                     u3520:
  4805   001F88  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  4806   001F8C  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  4807   001F90  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  4808   001F94  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  4809   001F98  1E10               	comf	??___xxtofl^0,f,c
  4810   001F9A  1E11               	comf	(??___xxtofl+1)^0,f,c
  4811   001F9C  1E12               	comf	(??___xxtofl+2)^0,f,c
  4812   001F9E  1E13               	comf	(??___xxtofl+3)^0,f,c
  4813   001FA0  2A10               	incf	??___xxtofl^0,f,c
  4814   001FA2  0E00               	movlw	0
  4815   001FA4  2211               	addwfc	(??___xxtofl+1)^0,f,c
  4816   001FA6  2212               	addwfc	(??___xxtofl+2)^0,f,c
  4817   001FA8  2213               	addwfc	(??___xxtofl+3)^0,f,c
  4818   001FAA  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  4819   001FAE  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  4820   001FB2  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  4821   001FB6  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  4822   001FBA  EFE7  F00F         	goto	l4117
  4823   001FBE                     l1216:
  4824   001FBE  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  4825   001FC2  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4826   001FC6  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4827   001FCA  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4828   001FCE                     l4117:
  4829   001FCE  500C               	movf	___xxtofl@val^0,w,c
  4830   001FD0  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  4831   001FD2  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  4832   001FD4  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  4833   001FD6  A4D8               	btfss	status,2,c
  4834   001FD8  EFF0  F00F         	goto	u3531
  4835   001FDC  EFF2  F00F         	goto	u3530
  4836   001FE0                     u3531:
  4837   001FE0  EFFC  F00F         	goto	l4123
  4838   001FE4                     u3530:
  4839   001FE4  0E00               	movlw	0
  4840   001FE6  6E0C               	movwf	?___xxtofl^0,c
  4841   001FE8  0E00               	movlw	0
  4842   001FEA  6E0D               	movwf	(?___xxtofl+1)^0,c
  4843   001FEC  0E00               	movlw	0
  4844   001FEE  6E0E               	movwf	(?___xxtofl+2)^0,c
  4845   001FF0  0E00               	movlw	0
  4846   001FF2  6E0F               	movwf	(?___xxtofl+3)^0,c
  4847   001FF4  EF8D  F010         	goto	l1219
  4848   001FF8                     l4123:
  4849   001FF8  0E96               	movlw	150
  4850   001FFA  6E15               	movwf	___xxtofl@exp^0,c
  4851   001FFC  EF06  F010         	goto	l4127
  4852   002000                     l4125:
  4853   002000  2A15               	incf	___xxtofl@exp^0,f,c
  4854   002002  90D8               	bcf	status,0,c
  4855   002004  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4856   002006  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4857   002008  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4858   00200A  3216               	rrcf	___xxtofl@arg^0,f,c
  4859   00200C                     l4127:
  4860   00200C  0E00               	movlw	0
  4861   00200E  1416               	andwf	___xxtofl@arg^0,w,c
  4862   002010  6E10               	movwf	??___xxtofl^0,c
  4863   002012  0E00               	movlw	0
  4864   002014  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4865   002016  6E11               	movwf	(??___xxtofl+1)^0,c
  4866   002018  0E00               	movlw	0
  4867   00201A  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4868   00201C  6E12               	movwf	(??___xxtofl+2)^0,c
  4869   00201E  0EFE               	movlw	254
  4870   002020  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4871   002022  6E13               	movwf	(??___xxtofl+3)^0,c
  4872   002024  5010               	movf	??___xxtofl^0,w,c
  4873   002026  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4874   002028  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4875   00202A  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4876   00202C  A4D8               	btfss	status,2,c
  4877   00202E  EF1B  F010         	goto	u3541
  4878   002032  EF1D  F010         	goto	u3540
  4879   002036                     u3541:
  4880   002036  EF00  F010         	goto	l4125
  4881   00203A                     u3540:
  4882   00203A  EF2B  F010         	goto	l1223
  4883   00203E                     l4129:
  4884   00203E  2A15               	incf	___xxtofl@exp^0,f,c
  4885   002040  0E01               	movlw	1
  4886   002042  2616               	addwf	___xxtofl@arg^0,f,c
  4887   002044  0E00               	movlw	0
  4888   002046  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  4889   002048  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  4890   00204A  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  4891   00204C  90D8               	bcf	status,0,c
  4892   00204E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  4893   002050  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  4894   002052  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  4895   002054  3216               	rrcf	___xxtofl@arg^0,f,c
  4896   002056                     l1223:
  4897   002056  0E00               	movlw	0
  4898   002058  1416               	andwf	___xxtofl@arg^0,w,c
  4899   00205A  6E10               	movwf	??___xxtofl^0,c
  4900   00205C  0E00               	movlw	0
  4901   00205E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  4902   002060  6E11               	movwf	(??___xxtofl+1)^0,c
  4903   002062  0E00               	movlw	0
  4904   002064  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  4905   002066  6E12               	movwf	(??___xxtofl+2)^0,c
  4906   002068  0EFF               	movlw	255
  4907   00206A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  4908   00206C  6E13               	movwf	(??___xxtofl+3)^0,c
  4909   00206E  5010               	movf	??___xxtofl^0,w,c
  4910   002070  1011               	iorwf	(??___xxtofl+1)^0,w,c
  4911   002072  1012               	iorwf	(??___xxtofl+2)^0,w,c
  4912   002074  1013               	iorwf	(??___xxtofl+3)^0,w,c
  4913   002076  A4D8               	btfss	status,2,c
  4914   002078  EF40  F010         	goto	u3551
  4915   00207C  EF42  F010         	goto	u3550
  4916   002080                     u3551:
  4917   002080  EF1F  F010         	goto	l4129
  4918   002084                     u3550:
  4919   002084  EF4A  F010         	goto	l4137
  4920   002088                     l4135:
  4921   002088  0615               	decf	___xxtofl@exp^0,f,c
  4922   00208A  90D8               	bcf	status,0,c
  4923   00208C  3616               	rlcf	___xxtofl@arg^0,f,c
  4924   00208E  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  4925   002090  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  4926   002092  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  4927   002094                     l4137:
  4928   002094  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  4929   002096  EF4F  F010         	goto	u3561
  4930   00209A  EF51  F010         	goto	u3560
  4931   00209E                     u3561:
  4932   00209E  EF59  F010         	goto	l1230
  4933   0020A2                     u3560:
  4934   0020A2  0E02               	movlw	2
  4935   0020A4  6015               	cpfslt	___xxtofl@exp^0,c
  4936   0020A6  EF57  F010         	goto	u3571
  4937   0020AA  EF59  F010         	goto	u3570
  4938   0020AE                     u3571:
  4939   0020AE  EF44  F010         	goto	l4135
  4940   0020B2                     u3570:
  4941   0020B2                     l1230:
  4942   0020B2  B015               	btfsc	___xxtofl@exp^0,0,c
  4943   0020B4  EF5E  F010         	goto	u3581
  4944   0020B8  EF60  F010         	goto	u3580
  4945   0020BC                     u3581:
  4946   0020BC  EF61  F010         	goto	l4143
  4947   0020C0                     u3580:
  4948   0020C0  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  4949   0020C2                     l4143:
  4950   0020C2  90D8               	bcf	status,0,c
  4951   0020C4  3215               	rrcf	___xxtofl@exp^0,f,c
  4952   0020C6  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  4953   0020CA  6A11               	clrf	(??___xxtofl+1)^0,c
  4954   0020CC  6A12               	clrf	(??___xxtofl+2)^0,c
  4955   0020CE  6A13               	clrf	(??___xxtofl+3)^0,c
  4956   0020D0  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  4957   0020D4  6A12               	clrf	(??___xxtofl+2)^0,c
  4958   0020D6  6A11               	clrf	(??___xxtofl+1)^0,c
  4959   0020D8  6A10               	clrf	??___xxtofl^0,c
  4960   0020DA  5010               	movf	??___xxtofl^0,w,c
  4961   0020DC  1216               	iorwf	___xxtofl@arg^0,f,c
  4962   0020DE  5011               	movf	(??___xxtofl+1)^0,w,c
  4963   0020E0  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  4964   0020E2  5012               	movf	(??___xxtofl+2)^0,w,c
  4965   0020E4  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  4966   0020E6  5013               	movf	(??___xxtofl+3)^0,w,c
  4967   0020E8  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  4968   0020EA  5014               	movf	___xxtofl@sign^0,w,c
  4969   0020EC  B4D8               	btfsc	status,2,c
  4970   0020EE  EF7B  F010         	goto	u3591
  4971   0020F2  EF7D  F010         	goto	u3590
  4972   0020F6                     u3591:
  4973   0020F6  EF85  F010         	goto	l4153
  4974   0020FA                     u3590:
  4975   0020FA  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  4976   0020FC  EF84  F010         	goto	u3600
  4977   002100  EF82  F010         	goto	u3601
  4978   002104                     u3601:
  4979   002104  EF85  F010         	goto	l4153
  4980   002108                     u3600:
  4981   002108  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  4982   00210A                     l4153:
  4983   00210A  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  4984   00210E  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  4985   002112  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  4986   002116  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  4987   00211A                     l1219:
  4988   00211A  0012               	return		;funcret
  4989   00211C                     __end_of___xxtofl:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function ___fltol *****************
  4993 ;; Defined at:
  4994 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  f1              4   74[COMRAM] unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  exp1            1   83[COMRAM] unsigned char 
  4999 ;;  sign1           1   82[COMRAM] unsigned char 
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  4   74[COMRAM] long 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;Total ram usage:       10 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_main
  5019 ;;		_convert_rgb2hue
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text34
  5024   002418                     __ptext34:
  5025                           	callstack 0
  5026   002418                     ___fltol:
  5027                           	callstack 30
  5028   002418  344D               	rlcf	(___fltol@f1+2)^0,w,c
  5029   00241A  344E               	rlcf	(___fltol@f1+3)^0,w,c
  5030   00241C  6E54               	movwf	___fltol@exp1^0,c
  5031   00241E  5054               	movf	___fltol@exp1^0,w,c
  5032   002420  A4D8               	btfss	status,2,c
  5033   002422  EF15  F012         	goto	u3441
  5034   002426  EF17  F012         	goto	u3440
  5035   00242A                     u3441:
  5036   00242A  EF21  F012         	goto	l4073
  5037   00242E                     u3440:
  5038   00242E                     l4069:
  5039   00242E  0E00               	movlw	0
  5040   002430  6E4B               	movwf	?___fltol^0,c
  5041   002432  0E00               	movlw	0
  5042   002434  6E4C               	movwf	(?___fltol+1)^0,c
  5043   002436  0E00               	movlw	0
  5044   002438  6E4D               	movwf	(?___fltol+2)^0,c
  5045   00243A  0E00               	movlw	0
  5046   00243C  6E4E               	movwf	(?___fltol+3)^0,c
  5047   00243E  EF8E  F012         	goto	l858
  5048   002442                     l4073:
  5049   002442  C04B  F04F         	movff	___fltol@f1,??___fltol
  5050   002446  C04C  F050         	movff	___fltol@f1+1,??___fltol+1
  5051   00244A  C04D  F051         	movff	___fltol@f1+2,??___fltol+2
  5052   00244E  C04E  F052         	movff	___fltol@f1+3,??___fltol+3
  5053   002452  0E20               	movlw	32
  5054   002454  EF31  F012         	goto	u3450
  5055   002458                     u3455:
  5056   002458  90D8               	bcf	status,0,c
  5057   00245A  3252               	rrcf	(??___fltol+3)^0,f,c
  5058   00245C  3251               	rrcf	(??___fltol+2)^0,f,c
  5059   00245E  3250               	rrcf	(??___fltol+1)^0,f,c
  5060   002460  324F               	rrcf	??___fltol^0,f,c
  5061   002462                     u3450:
  5062   002462  2EE8               	decfsz	wreg,f,c
  5063   002464  EF2C  F012         	goto	u3455
  5064   002468  504F               	movf	??___fltol^0,w,c
  5065   00246A  6E53               	movwf	___fltol@sign1^0,c
  5066   00246C  8E4D               	bsf	(___fltol@f1+2)^0,7,c
  5067   00246E  0EFF               	movlw	255
  5068   002470  164B               	andwf	___fltol@f1^0,f,c
  5069   002472  0EFF               	movlw	255
  5070   002474  164C               	andwf	(___fltol@f1+1)^0,f,c
  5071   002476  0EFF               	movlw	255
  5072   002478  164D               	andwf	(___fltol@f1+2)^0,f,c
  5073   00247A  0E00               	movlw	0
  5074   00247C  164E               	andwf	(___fltol@f1+3)^0,f,c
  5075   00247E  0E96               	movlw	150
  5076   002480  5E54               	subwf	___fltol@exp1^0,f,c
  5077   002482  BE54               	btfsc	___fltol@exp1^0,7,c
  5078   002484  EF48  F012         	goto	u3460
  5079   002488  EF46  F012         	goto	u3461
  5080   00248C                     u3461:
  5081   00248C  EF5E  F012         	goto	l4093
  5082   002490                     u3460:
  5083   002490  5054               	movf	___fltol@exp1^0,w,c
  5084   002492  0A80               	xorlw	128
  5085   002494  0F97               	addlw	151
  5086   002496  B0D8               	btfsc	status,0,c
  5087   002498  EF50  F012         	goto	u3471
  5088   00249C  EF52  F012         	goto	u3470
  5089   0024A0                     u3471:
  5090   0024A0  EF54  F012         	goto	l4089
  5091   0024A4                     u3470:
  5092   0024A4  EF17  F012         	goto	l4069
  5093   0024A8                     l4089:
  5094   0024A8  90D8               	bcf	status,0,c
  5095   0024AA  324E               	rrcf	(___fltol@f1+3)^0,f,c
  5096   0024AC  324D               	rrcf	(___fltol@f1+2)^0,f,c
  5097   0024AE  324C               	rrcf	(___fltol@f1+1)^0,f,c
  5098   0024B0  324B               	rrcf	___fltol@f1^0,f,c
  5099   0024B2  3E54               	incfsz	___fltol@exp1^0,f,c
  5100   0024B4  EF54  F012         	goto	l4089
  5101   0024B8  EF76  F012         	goto	l4103
  5102   0024BC                     l4093:
  5103   0024BC  0E1F               	movlw	31
  5104   0024BE  6454               	cpfsgt	___fltol@exp1^0,c
  5105   0024C0  EF64  F012         	goto	u3481
  5106   0024C4  EF66  F012         	goto	u3480
  5107   0024C8                     u3481:
  5108   0024C8  EF6E  F012         	goto	l4101
  5109   0024CC                     u3480:
  5110   0024CC  EF17  F012         	goto	l4069
  5111   0024D0                     l4099:
  5112   0024D0  90D8               	bcf	status,0,c
  5113   0024D2  364B               	rlcf	___fltol@f1^0,f,c
  5114   0024D4  364C               	rlcf	(___fltol@f1+1)^0,f,c
  5115   0024D6  364D               	rlcf	(___fltol@f1+2)^0,f,c
  5116   0024D8  364E               	rlcf	(___fltol@f1+3)^0,f,c
  5117   0024DA  0654               	decf	___fltol@exp1^0,f,c
  5118   0024DC                     l4101:
  5119   0024DC  5054               	movf	___fltol@exp1^0,w,c
  5120   0024DE  A4D8               	btfss	status,2,c
  5121   0024E0  EF74  F012         	goto	u3491
  5122   0024E4  EF76  F012         	goto	u3490
  5123   0024E8                     u3491:
  5124   0024E8  EF68  F012         	goto	l4099
  5125   0024EC                     u3490:
  5126   0024EC                     l4103:
  5127   0024EC  5053               	movf	___fltol@sign1^0,w,c
  5128   0024EE  B4D8               	btfsc	status,2,c
  5129   0024F0  EF7C  F012         	goto	u3501
  5130   0024F4  EF7E  F012         	goto	u3500
  5131   0024F8                     u3501:
  5132   0024F8  EF86  F012         	goto	l4107
  5133   0024FC                     u3500:
  5134   0024FC  1E4E               	comf	(___fltol@f1+3)^0,f,c
  5135   0024FE  1E4D               	comf	(___fltol@f1+2)^0,f,c
  5136   002500  1E4C               	comf	(___fltol@f1+1)^0,f,c
  5137   002502  6C4B               	negf	___fltol@f1^0,c
  5138   002504  0E00               	movlw	0
  5139   002506  224C               	addwfc	(___fltol@f1+1)^0,f,c
  5140   002508  224D               	addwfc	(___fltol@f1+2)^0,f,c
  5141   00250A  224E               	addwfc	(___fltol@f1+3)^0,f,c
  5142   00250C                     l4107:
  5143   00250C  C04B  F04B         	movff	___fltol@f1,?___fltol
  5144   002510  C04C  F04C         	movff	___fltol@f1+1,?___fltol+1
  5145   002514  C04D  F04D         	movff	___fltol@f1+2,?___fltol+2
  5146   002518  C04E  F04E         	movff	___fltol@f1+3,?___fltol+3
  5147   00251C                     l858:
  5148   00251C  0012               	return		;funcret
  5149   00251E                     __end_of___fltol:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function ___flsub *****************
  5153 ;; Defined at:
  5154 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  b               4   16[COMRAM] long 
  5157 ;;  a               4   20[COMRAM] long 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;		None
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  4   16[COMRAM] long 
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;Total ram usage:        8 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 1
  5176 ;; This function calls:
  5177 ;;		___fladd
  5178 ;; This function is called by:
  5179 ;;		_main
  5180 ;;		_convert_rgb2hue
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text35
  5185   002A4C                     __ptext35:
  5186                           	callstack 0
  5187   002A4C                     ___flsub:
  5188                           	callstack 29
  5189   002A4C  0E00               	movlw	0
  5190   002A4E  1A15               	xorwf	___flsub@a^0,f,c
  5191   002A50  0E00               	movlw	0
  5192   002A52  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5193   002A54  0E00               	movlw	0
  5194   002A56  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5195   002A58  0E80               	movlw	128
  5196   002A5A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5197   002A5C  C011  F001         	movff	___flsub@b,___fladd@b
  5198   002A60  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5199   002A64  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5200   002A68  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5201   002A6C  C015  F005         	movff	___flsub@a,___fladd@a
  5202   002A70  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5203   002A74  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5204   002A78  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5205   002A7C  EC69  F007         	call	___fladd	;wreg free
  5206   002A80  C001  F011         	movff	?___fladd,?___flsub
  5207   002A84  C002  F012         	movff	?___fladd+1,?___flsub+1
  5208   002A88  C003  F013         	movff	?___fladd+2,?___flsub+2
  5209   002A8C  C004  F014         	movff	?___fladd+3,?___flsub+3
  5210   002A90  0012               	return		;funcret
  5211   002A92                     __end_of___flsub:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function ___fladd *****************
  5215 ;; Defined at:
  5216 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  b               4    0[COMRAM] long 
  5219 ;;  a               4    4[COMRAM] long 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  grs             1   15[COMRAM] unsigned char 
  5222 ;;  bexp            1   14[COMRAM] unsigned char 
  5223 ;;  aexp            1   13[COMRAM] unsigned char 
  5224 ;;  signs           1   12[COMRAM] unsigned char 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  4    0[COMRAM] unsigned char 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;Total ram usage:       16 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		___flsub
  5244 ;;		_convert_rgb2hue
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text36
  5249   000ED2                     __ptext36:
  5250                           	callstack 0
  5251   000ED2                     ___fladd:
  5252                           	callstack 29
  5253   000ED2  5004               	movf	(___fladd@b+3)^0,w,c
  5254   000ED4  0B80               	andlw	128
  5255   000ED6  6E0D               	movwf	___fladd@signs^0,c
  5256   000ED8  5004               	movf	(___fladd@b+3)^0,w,c
  5257   000EDA  2404               	addwf	(___fladd@b+3)^0,w,c
  5258   000EDC  6E0F               	movwf	___fladd@bexp^0,c
  5259   000EDE  AE03               	btfss	(___fladd@b+2)^0,7,c
  5260   000EE0  EF74  F007         	goto	u2511
  5261   000EE4  EF76  F007         	goto	u2510
  5262   000EE8                     u2511:
  5263   000EE8  EF77  F007         	goto	l3401
  5264   000EEC                     u2510:
  5265   000EEC  800F               	bsf	___fladd@bexp^0,0,c
  5266   000EEE                     l3401:
  5267   000EEE  500F               	movf	___fladd@bexp^0,w,c
  5268   000EF0  B4D8               	btfsc	status,2,c
  5269   000EF2  EF7D  F007         	goto	u2521
  5270   000EF6  EF7F  F007         	goto	u2520
  5271   000EFA                     u2521:
  5272   000EFA  EF94  F007         	goto	l3411
  5273   000EFE                     u2520:
  5274   000EFE  280F               	incf	___fladd@bexp^0,w,c
  5275   000F00  A4D8               	btfss	status,2,c
  5276   000F02  EF85  F007         	goto	u2531
  5277   000F06  EF87  F007         	goto	u2530
  5278   000F0A                     u2531:
  5279   000F0A  EF8F  F007         	goto	l3407
  5280   000F0E                     u2530:
  5281   000F0E  0E00               	movlw	0
  5282   000F10  6E01               	movwf	___fladd@b^0,c
  5283   000F12  0E00               	movlw	0
  5284   000F14  6E02               	movwf	(___fladd@b+1)^0,c
  5285   000F16  0E00               	movlw	0
  5286   000F18  6E03               	movwf	(___fladd@b+2)^0,c
  5287   000F1A  0E00               	movlw	0
  5288   000F1C  6E04               	movwf	(___fladd@b+3)^0,c
  5289   000F1E                     l3407:
  5290   000F1E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5291   000F20  0E00               	movlw	0
  5292   000F22  6E04               	movwf	(___fladd@b+3)^0,c
  5293   000F24  EF9C  F007         	goto	l3413
  5294   000F28                     l3411:
  5295   000F28  0E00               	movlw	0
  5296   000F2A  6E01               	movwf	___fladd@b^0,c
  5297   000F2C  0E00               	movlw	0
  5298   000F2E  6E02               	movwf	(___fladd@b+1)^0,c
  5299   000F30  0E00               	movlw	0
  5300   000F32  6E03               	movwf	(___fladd@b+2)^0,c
  5301   000F34  0E00               	movlw	0
  5302   000F36  6E04               	movwf	(___fladd@b+3)^0,c
  5303   000F38                     l3413:
  5304   000F38  5008               	movf	(___fladd@a+3)^0,w,c
  5305   000F3A  0B80               	andlw	128
  5306   000F3C  6E0E               	movwf	___fladd@aexp^0,c
  5307   000F3E  500D               	movf	___fladd@signs^0,w,c
  5308   000F40  180E               	xorwf	___fladd@aexp^0,w,c
  5309   000F42  B4D8               	btfsc	status,2,c
  5310   000F44  EFA6  F007         	goto	u2541
  5311   000F48  EFA8  F007         	goto	u2540
  5312   000F4C                     u2541:
  5313   000F4C  EFA9  F007         	goto	l3419
  5314   000F50                     u2540:
  5315   000F50  8C0D               	bsf	___fladd@signs^0,6,c
  5316   000F52                     l3419:
  5317   000F52  5008               	movf	(___fladd@a+3)^0,w,c
  5318   000F54  2408               	addwf	(___fladd@a+3)^0,w,c
  5319   000F56  6E0E               	movwf	___fladd@aexp^0,c
  5320   000F58  AE07               	btfss	(___fladd@a+2)^0,7,c
  5321   000F5A  EFB1  F007         	goto	u2551
  5322   000F5E  EFB3  F007         	goto	u2550
  5323   000F62                     u2551:
  5324   000F62  EFB4  F007         	goto	l3425
  5325   000F66                     u2550:
  5326   000F66  800E               	bsf	___fladd@aexp^0,0,c
  5327   000F68                     l3425:
  5328   000F68  500E               	movf	___fladd@aexp^0,w,c
  5329   000F6A  B4D8               	btfsc	status,2,c
  5330   000F6C  EFBA  F007         	goto	u2561
  5331   000F70  EFBC  F007         	goto	u2560
  5332   000F74                     u2561:
  5333   000F74  EFD1  F007         	goto	l3435
  5334   000F78                     u2560:
  5335   000F78  280E               	incf	___fladd@aexp^0,w,c
  5336   000F7A  A4D8               	btfss	status,2,c
  5337   000F7C  EFC2  F007         	goto	u2571
  5338   000F80  EFC4  F007         	goto	u2570
  5339   000F84                     u2571:
  5340   000F84  EFCC  F007         	goto	l3431
  5341   000F88                     u2570:
  5342   000F88  0E00               	movlw	0
  5343   000F8A  6E05               	movwf	___fladd@a^0,c
  5344   000F8C  0E00               	movlw	0
  5345   000F8E  6E06               	movwf	(___fladd@a+1)^0,c
  5346   000F90  0E00               	movlw	0
  5347   000F92  6E07               	movwf	(___fladd@a+2)^0,c
  5348   000F94  0E00               	movlw	0
  5349   000F96  6E08               	movwf	(___fladd@a+3)^0,c
  5350   000F98                     l3431:
  5351   000F98  8E07               	bsf	(___fladd@a+2)^0,7,c
  5352   000F9A  0E00               	movlw	0
  5353   000F9C  6E08               	movwf	(___fladd@a+3)^0,c
  5354   000F9E  EFD9  F007         	goto	l3437
  5355   000FA2                     l3435:
  5356   000FA2  0E00               	movlw	0
  5357   000FA4  6E05               	movwf	___fladd@a^0,c
  5358   000FA6  0E00               	movlw	0
  5359   000FA8  6E06               	movwf	(___fladd@a+1)^0,c
  5360   000FAA  0E00               	movlw	0
  5361   000FAC  6E07               	movwf	(___fladd@a+2)^0,c
  5362   000FAE  0E00               	movlw	0
  5363   000FB0  6E08               	movwf	(___fladd@a+3)^0,c
  5364   000FB2                     l3437:
  5365   000FB2  500F               	movf	___fladd@bexp^0,w,c
  5366   000FB4  5C0E               	subwf	___fladd@aexp^0,w,c
  5367   000FB6  B0D8               	btfsc	status,0,c
  5368   000FB8  EFE0  F007         	goto	u2581
  5369   000FBC  EFE2  F007         	goto	u2580
  5370   000FC0                     u2581:
  5371   000FC0  EF09  F008         	goto	l3473
  5372   000FC4                     u2580:
  5373   000FC4  AC0D               	btfss	___fladd@signs^0,6,c
  5374   000FC6  EFE7  F007         	goto	u2591
  5375   000FCA  EFE9  F007         	goto	u2590
  5376   000FCE                     u2591:
  5377   000FCE  EFEB  F007         	goto	l3443
  5378   000FD2                     u2590:
  5379   000FD2  0E80               	movlw	128
  5380   000FD4  1A0D               	xorwf	___fladd@signs^0,f,c
  5381   000FD6                     l3443:
  5382   000FD6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5383   000FDA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5384   000FDE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5385   000FE2  C001  F010         	movff	___fladd@b,___fladd@grs
  5386   000FE6  C005  F001         	movff	___fladd@a,___fladd@b
  5387   000FEA  C010  F005         	movff	___fladd@grs,___fladd@a
  5388   000FEE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5389   000FF2  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5390   000FF6  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5391   000FFA  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5392   000FFE  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5393   001002  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5394   001006  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5395   00100A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5396   00100E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5397   001012                     l3473:
  5398   001012  0E00               	movlw	0
  5399   001014  6E10               	movwf	___fladd@grs^0,c
  5400   001016  500F               	movf	___fladd@bexp^0,w,c
  5401   001018  C00E  F009         	movff	___fladd@aexp,??___fladd
  5402   00101C  6A0A               	clrf	(??___fladd+1)^0,c
  5403   00101E  5E09               	subwf	??___fladd^0,f,c
  5404   001020  0E00               	movlw	0
  5405   001022  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5406   001024  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5407   001026  EF1E  F008         	goto	u2601
  5408   00102A  500A               	movf	(??___fladd+1)^0,w,c
  5409   00102C  E109               	bnz	u2600
  5410   00102E  0E1A               	movlw	26
  5411   001030  5C09               	subwf	??___fladd^0,w,c
  5412   001032  A0D8               	btfss	status,0,c
  5413   001034  EF1E  F008         	goto	u2601
  5414   001038  EF20  F008         	goto	u2600
  5415   00103C                     u2601:
  5416   00103C  EF57  F008         	goto	l1090
  5417   001040                     u2600:
  5418   001040  5001               	movf	___fladd@b^0,w,c
  5419   001042  1002               	iorwf	(___fladd@b+1)^0,w,c
  5420   001044  1003               	iorwf	(___fladd@b+2)^0,w,c
  5421   001046  1004               	iorwf	(___fladd@b+3)^0,w,c
  5422   001048  A4D8               	btfss	status,2,c
  5423   00104A  EF29  F008         	goto	u2611
  5424   00104E  EF2C  F008         	goto	u2610
  5425   001052                     u2611:
  5426   001052  0E01               	movlw	1
  5427   001054  EF2D  F008         	goto	u2620
  5428   001058                     u2610:
  5429   001058  0E00               	movlw	0
  5430   00105A                     u2620:
  5431   00105A  6E10               	movwf	___fladd@grs^0,c
  5432   00105C  0E00               	movlw	0
  5433   00105E  6E01               	movwf	___fladd@b^0,c
  5434   001060  0E00               	movlw	0
  5435   001062  6E02               	movwf	(___fladd@b+1)^0,c
  5436   001064  0E00               	movlw	0
  5437   001066  6E03               	movwf	(___fladd@b+2)^0,c
  5438   001068  0E00               	movlw	0
  5439   00106A  6E04               	movwf	(___fladd@b+3)^0,c
  5440   00106C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5441   001070  EF60  F008         	goto	l1089
  5442   001074                     l1091:
  5443   001074  A010               	btfss	___fladd@grs^0,0,c
  5444   001076  EF3F  F008         	goto	u2631
  5445   00107A  EF41  F008         	goto	u2630
  5446   00107E                     u2631:
  5447   00107E  EF47  F008         	goto	l3485
  5448   001082                     u2630:
  5449   001082  90D8               	bcf	status,0,c
  5450   001084  3010               	rrcf	___fladd@grs^0,w,c
  5451   001086  0901               	iorlw	1
  5452   001088  6E10               	movwf	___fladd@grs^0,c
  5453   00108A  EF49  F008         	goto	l3487
  5454   00108E                     l3485:
  5455   00108E  90D8               	bcf	status,0,c
  5456   001090  3210               	rrcf	___fladd@grs^0,f,c
  5457   001092                     l3487:
  5458   001092  A001               	btfss	___fladd@b^0,0,c
  5459   001094  EF4E  F008         	goto	u2641
  5460   001098  EF50  F008         	goto	u2640
  5461   00109C                     u2641:
  5462   00109C  EF51  F008         	goto	l3491
  5463   0010A0                     u2640:
  5464   0010A0  8E10               	bsf	___fladd@grs^0,7,c
  5465   0010A2                     l3491:
  5466   0010A2  3404               	rlcf	(___fladd@b+3)^0,w,c
  5467   0010A4  3204               	rrcf	(___fladd@b+3)^0,f,c
  5468   0010A6  3203               	rrcf	(___fladd@b+2)^0,f,c
  5469   0010A8  3202               	rrcf	(___fladd@b+1)^0,f,c
  5470   0010AA  3201               	rrcf	___fladd@b^0,f,c
  5471   0010AC  2A0F               	incf	___fladd@bexp^0,f,c
  5472   0010AE                     l1090:
  5473   0010AE  500E               	movf	___fladd@aexp^0,w,c
  5474   0010B0  5C0F               	subwf	___fladd@bexp^0,w,c
  5475   0010B2  A0D8               	btfss	status,0,c
  5476   0010B4  EF5E  F008         	goto	u2651
  5477   0010B8  EF60  F008         	goto	u2650
  5478   0010BC                     u2651:
  5479   0010BC  EF3A  F008         	goto	l1091
  5480   0010C0                     u2650:
  5481   0010C0                     l1089:
  5482   0010C0  BC0D               	btfsc	___fladd@signs^0,6,c
  5483   0010C2  EF65  F008         	goto	u2661
  5484   0010C6  EF67  F008         	goto	u2660
  5485   0010CA                     u2661:
  5486   0010CA  EFA7  F008         	goto	l3519
  5487   0010CE                     u2660:
  5488   0010CE  500F               	movf	___fladd@bexp^0,w,c
  5489   0010D0  A4D8               	btfss	status,2,c
  5490   0010D2  EF6D  F008         	goto	u2671
  5491   0010D6  EF6F  F008         	goto	u2670
  5492   0010DA                     u2671:
  5493   0010DA  EF79  F008         	goto	l3501
  5494   0010DE                     u2670:
  5495   0010DE  0E00               	movlw	0
  5496   0010E0  6E01               	movwf	?___fladd^0,c
  5497   0010E2  0E00               	movlw	0
  5498   0010E4  6E02               	movwf	(?___fladd+1)^0,c
  5499   0010E6  0E00               	movlw	0
  5500   0010E8  6E03               	movwf	(?___fladd+2)^0,c
  5501   0010EA  0E00               	movlw	0
  5502   0010EC  6E04               	movwf	(?___fladd+3)^0,c
  5503   0010EE  EFC8  F009         	goto	l1098
  5504   0010F2                     l3501:
  5505   0010F2  5005               	movf	___fladd@a^0,w,c
  5506   0010F4  2601               	addwf	___fladd@b^0,f,c
  5507   0010F6  5006               	movf	(___fladd@a+1)^0,w,c
  5508   0010F8  2202               	addwfc	(___fladd@b+1)^0,f,c
  5509   0010FA  5007               	movf	(___fladd@a+2)^0,w,c
  5510   0010FC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5511   0010FE  5008               	movf	(___fladd@a+3)^0,w,c
  5512   001100  2204               	addwfc	(___fladd@b+3)^0,f,c
  5513   001102  A004               	btfss	(___fladd@b+3)^0,0,c
  5514   001104  EF86  F008         	goto	u2681
  5515   001108  EF88  F008         	goto	u2680
  5516   00110C                     u2681:
  5517   00110C  EF34  F009         	goto	l3555
  5518   001110                     u2680:
  5519   001110  A010               	btfss	___fladd@grs^0,0,c
  5520   001112  EF8D  F008         	goto	u2691
  5521   001116  EF8F  F008         	goto	u2690
  5522   00111A                     u2691:
  5523   00111A  EF95  F008         	goto	l3509
  5524   00111E                     u2690:
  5525   00111E  90D8               	bcf	status,0,c
  5526   001120  3010               	rrcf	___fladd@grs^0,w,c
  5527   001122  0901               	iorlw	1
  5528   001124  6E10               	movwf	___fladd@grs^0,c
  5529   001126  EF97  F008         	goto	l3511
  5530   00112A                     l3509:
  5531   00112A  90D8               	bcf	status,0,c
  5532   00112C  3210               	rrcf	___fladd@grs^0,f,c
  5533   00112E                     l3511:
  5534   00112E  A001               	btfss	___fladd@b^0,0,c
  5535   001130  EF9C  F008         	goto	u2701
  5536   001134  EF9E  F008         	goto	u2700
  5537   001138                     u2701:
  5538   001138  EF9F  F008         	goto	l3515
  5539   00113C                     u2700:
  5540   00113C  8E10               	bsf	___fladd@grs^0,7,c
  5541   00113E                     l3515:
  5542   00113E  3404               	rlcf	(___fladd@b+3)^0,w,c
  5543   001140  3204               	rrcf	(___fladd@b+3)^0,f,c
  5544   001142  3203               	rrcf	(___fladd@b+2)^0,f,c
  5545   001144  3202               	rrcf	(___fladd@b+1)^0,f,c
  5546   001146  3201               	rrcf	___fladd@b^0,f,c
  5547   001148  2A0F               	incf	___fladd@bexp^0,f,c
  5548   00114A  EF34  F009         	goto	l3555
  5549   00114E                     l3519:
  5550   00114E  5005               	movf	___fladd@a^0,w,c
  5551   001150  5C01               	subwf	___fladd@b^0,w,c
  5552   001152  5006               	movf	(___fladd@a+1)^0,w,c
  5553   001154  5802               	subwfb	(___fladd@b+1)^0,w,c
  5554   001156  5007               	movf	(___fladd@a+2)^0,w,c
  5555   001158  5803               	subwfb	(___fladd@b+2)^0,w,c
  5556   00115A  5004               	movf	(___fladd@b+3)^0,w,c
  5557   00115C  0A80               	xorlw	128
  5558   00115E  6E09               	movwf	??___fladd^0,c
  5559   001160  5008               	movf	(___fladd@a+3)^0,w,c
  5560   001162  0A80               	xorlw	128
  5561   001164  5809               	subwfb	??___fladd^0,w,c
  5562   001166  B0D8               	btfsc	status,0,c
  5563   001168  EFB8  F008         	goto	u2711
  5564   00116C  EFBA  F008         	goto	u2710
  5565   001170                     u2711:
  5566   001170  EFE5  F008         	goto	l3529
  5567   001174                     u2710:
  5568   001174  5001               	movf	___fladd@b^0,w,c
  5569   001176  5C05               	subwf	___fladd@a^0,w,c
  5570   001178  6E09               	movwf	??___fladd^0,c
  5571   00117A  5002               	movf	(___fladd@b+1)^0,w,c
  5572   00117C  5806               	subwfb	(___fladd@a+1)^0,w,c
  5573   00117E  6E0A               	movwf	(??___fladd+1)^0,c
  5574   001180  5003               	movf	(___fladd@b+2)^0,w,c
  5575   001182  5807               	subwfb	(___fladd@a+2)^0,w,c
  5576   001184  6E0B               	movwf	(??___fladd+2)^0,c
  5577   001186  5004               	movf	(___fladd@b+3)^0,w,c
  5578   001188  5808               	subwfb	(___fladd@a+3)^0,w,c
  5579   00118A  6E0C               	movwf	(??___fladd+3)^0,c
  5580   00118C  0EFF               	movlw	255
  5581   00118E  2409               	addwf	??___fladd^0,w,c
  5582   001190  6E01               	movwf	___fladd@b^0,c
  5583   001192  0EFF               	movlw	255
  5584   001194  200A               	addwfc	(??___fladd+1)^0,w,c
  5585   001196  6E02               	movwf	(___fladd@b+1)^0,c
  5586   001198  0EFF               	movlw	255
  5587   00119A  200B               	addwfc	(??___fladd+2)^0,w,c
  5588   00119C  6E03               	movwf	(___fladd@b+2)^0,c
  5589   00119E  0EFF               	movlw	255
  5590   0011A0  200C               	addwfc	(??___fladd+3)^0,w,c
  5591   0011A2  6E04               	movwf	(___fladd@b+3)^0,c
  5592   0011A4  0E80               	movlw	128
  5593   0011A6  1A0D               	xorwf	___fladd@signs^0,f,c
  5594   0011A8  6C10               	negf	___fladd@grs^0,c
  5595   0011AA  5010               	movf	___fladd@grs^0,w,c
  5596   0011AC  A4D8               	btfss	status,2,c
  5597   0011AE  EFDB  F008         	goto	u2721
  5598   0011B2  EFDD  F008         	goto	u2720
  5599   0011B6                     u2721:
  5600   0011B6  EFED  F008         	goto	l1106
  5601   0011BA                     u2720:
  5602   0011BA  0E01               	movlw	1
  5603   0011BC  2601               	addwf	___fladd@b^0,f,c
  5604   0011BE  0E00               	movlw	0
  5605   0011C0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5606   0011C2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5607   0011C4  2204               	addwfc	(___fladd@b+3)^0,f,c
  5608   0011C6  EFED  F008         	goto	l1106
  5609   0011CA                     l3529:
  5610   0011CA  5005               	movf	___fladd@a^0,w,c
  5611   0011CC  5E01               	subwf	___fladd@b^0,f,c
  5612   0011CE  5006               	movf	(___fladd@a+1)^0,w,c
  5613   0011D0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5614   0011D2  5007               	movf	(___fladd@a+2)^0,w,c
  5615   0011D4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5616   0011D6  5008               	movf	(___fladd@a+3)^0,w,c
  5617   0011D8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5618   0011DA                     l1106:
  5619   0011DA  5001               	movf	___fladd@b^0,w,c
  5620   0011DC  1002               	iorwf	(___fladd@b+1)^0,w,c
  5621   0011DE  1003               	iorwf	(___fladd@b+2)^0,w,c
  5622   0011E0  1004               	iorwf	(___fladd@b+3)^0,w,c
  5623   0011E2  A4D8               	btfss	status,2,c
  5624   0011E4  EFF6  F008         	goto	u2731
  5625   0011E8  EFF8  F008         	goto	u2730
  5626   0011EC                     u2731:
  5627   0011EC  EF2D  F009         	goto	l3553
  5628   0011F0                     u2730:
  5629   0011F0  5010               	movf	___fladd@grs^0,w,c
  5630   0011F2  A4D8               	btfss	status,2,c
  5631   0011F4  EFFE  F008         	goto	u2741
  5632   0011F8  EF00  F009         	goto	u2740
  5633   0011FC                     u2741:
  5634   0011FC  EF2D  F009         	goto	l3553
  5635   001200                     u2740:
  5636   001200  0E00               	movlw	0
  5637   001202  6E01               	movwf	?___fladd^0,c
  5638   001204  0E00               	movlw	0
  5639   001206  6E02               	movwf	(?___fladd+1)^0,c
  5640   001208  0E00               	movlw	0
  5641   00120A  6E03               	movwf	(?___fladd+2)^0,c
  5642   00120C  0E00               	movlw	0
  5643   00120E  6E04               	movwf	(?___fladd+3)^0,c
  5644   001210  EFC8  F009         	goto	l1098
  5645   001214                     l3537:
  5646   001214  90D8               	bcf	status,0,c
  5647   001216  3601               	rlcf	___fladd@b^0,f,c
  5648   001218  3602               	rlcf	(___fladd@b+1)^0,f,c
  5649   00121A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5650   00121C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5651   00121E  AE10               	btfss	___fladd@grs^0,7,c
  5652   001220  EF14  F009         	goto	u2751
  5653   001224  EF16  F009         	goto	u2750
  5654   001228                     u2751:
  5655   001228  EF17  F009         	goto	l3543
  5656   00122C                     u2750:
  5657   00122C  8001               	bsf	___fladd@b^0,0,c
  5658   00122E                     l3543:
  5659   00122E  A010               	btfss	___fladd@grs^0,0,c
  5660   001230  EF1C  F009         	goto	u2761
  5661   001234  EF1E  F009         	goto	u2760
  5662   001238                     u2761:
  5663   001238  EF22  F009         	goto	l3547
  5664   00123C                     u2760:
  5665   00123C  80D8               	bsf	status,0,c
  5666   00123E  3610               	rlcf	___fladd@grs^0,f,c
  5667   001240  EF24  F009         	goto	l3549
  5668   001244                     l3547:
  5669   001244  90D8               	bcf	status,0,c
  5670   001246  3610               	rlcf	___fladd@grs^0,f,c
  5671   001248                     l3549:
  5672   001248  500F               	movf	___fladd@bexp^0,w,c
  5673   00124A  B4D8               	btfsc	status,2,c
  5674   00124C  EF2A  F009         	goto	u2771
  5675   001250  EF2C  F009         	goto	u2770
  5676   001254                     u2771:
  5677   001254  EF2D  F009         	goto	l3553
  5678   001258                     u2770:
  5679   001258  060F               	decf	___fladd@bexp^0,f,c
  5680   00125A                     l3553:
  5681   00125A  AE03               	btfss	(___fladd@b+2)^0,7,c
  5682   00125C  EF32  F009         	goto	u2781
  5683   001260  EF34  F009         	goto	u2780
  5684   001264                     u2781:
  5685   001264  EF0A  F009         	goto	l3537
  5686   001268                     u2780:
  5687   001268                     l3555:
  5688   001268  0E00               	movlw	0
  5689   00126A  6E0E               	movwf	___fladd@aexp^0,c
  5690   00126C  AE10               	btfss	___fladd@grs^0,7,c
  5691   00126E  EF3B  F009         	goto	u2791
  5692   001272  EF3D  F009         	goto	u2790
  5693   001276                     u2791:
  5694   001276  EF55  F009         	goto	l1115
  5695   00127A                     u2790:
  5696   00127A  C010  F009         	movff	___fladd@grs,??___fladd
  5697   00127E  0E7F               	movlw	127
  5698   001280  1609               	andwf	??___fladd^0,f,c
  5699   001282  B4D8               	btfsc	status,2,c
  5700   001284  EF46  F009         	goto	u2801
  5701   001288  EF48  F009         	goto	u2800
  5702   00128C                     u2801:
  5703   00128C  EF4C  F009         	goto	l1116
  5704   001290                     u2800:
  5705   001290                     l3561:
  5706   001290  0E01               	movlw	1
  5707   001292  6E0E               	movwf	___fladd@aexp^0,c
  5708   001294  EF55  F009         	goto	l1115
  5709   001298                     l1116:
  5710   001298  A001               	btfss	___fladd@b^0,0,c
  5711   00129A  EF51  F009         	goto	u2811
  5712   00129E  EF53  F009         	goto	u2810
  5713   0012A2                     u2811:
  5714   0012A2  EF55  F009         	goto	l1115
  5715   0012A6                     u2810:
  5716   0012A6  EF48  F009         	goto	l3561
  5717   0012AA                     l1115:
  5718   0012AA  500E               	movf	___fladd@aexp^0,w,c
  5719   0012AC  B4D8               	btfsc	status,2,c
  5720   0012AE  EF5B  F009         	goto	u2821
  5721   0012B2  EF5D  F009         	goto	u2820
  5722   0012B6                     u2821:
  5723   0012B6  EF88  F009         	goto	l3573
  5724   0012BA                     u2820:
  5725   0012BA  0E01               	movlw	1
  5726   0012BC  2601               	addwf	___fladd@b^0,f,c
  5727   0012BE  0E00               	movlw	0
  5728   0012C0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5729   0012C2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5730   0012C4  2204               	addwfc	(___fladd@b+3)^0,f,c
  5731   0012C6  A004               	btfss	(___fladd@b+3)^0,0,c
  5732   0012C8  EF68  F009         	goto	u2831
  5733   0012CC  EF6A  F009         	goto	u2830
  5734   0012D0                     u2831:
  5735   0012D0  EF88  F009         	goto	l3573
  5736   0012D4                     u2830:
  5737   0012D4  C001  F009         	movff	___fladd@b,??___fladd
  5738   0012D8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5739   0012DC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5740   0012E0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5741   0012E4  340C               	rlcf	(??___fladd+3)^0,w,c
  5742   0012E6  320C               	rrcf	(??___fladd+3)^0,f,c
  5743   0012E8  320B               	rrcf	(??___fladd+2)^0,f,c
  5744   0012EA  320A               	rrcf	(??___fladd+1)^0,f,c
  5745   0012EC  3209               	rrcf	??___fladd^0,f,c
  5746   0012EE  C009  F001         	movff	??___fladd,___fladd@b
  5747   0012F2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5748   0012F6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5749   0012FA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5750   0012FE  280F               	incf	___fladd@bexp^0,w,c
  5751   001300  B4D8               	btfsc	status,2,c
  5752   001302  EF85  F009         	goto	u2841
  5753   001306  EF87  F009         	goto	u2840
  5754   00130A                     u2841:
  5755   00130A  EF88  F009         	goto	l3573
  5756   00130E                     u2840:
  5757   00130E  2A0F               	incf	___fladd@bexp^0,f,c
  5758   001310                     l3573:
  5759   001310  280F               	incf	___fladd@bexp^0,w,c
  5760   001312  B4D8               	btfsc	status,2,c
  5761   001314  EF8E  F009         	goto	u2851
  5762   001318  EF90  F009         	goto	u2850
  5763   00131C                     u2851:
  5764   00131C  EF98  F009         	goto	l3577
  5765   001320                     u2850:
  5766   001320  500F               	movf	___fladd@bexp^0,w,c
  5767   001322  A4D8               	btfss	status,2,c
  5768   001324  EF96  F009         	goto	u2861
  5769   001328  EF98  F009         	goto	u2860
  5770   00132C                     u2861:
  5771   00132C  EFAA  F009         	goto	l3581
  5772   001330                     u2860:
  5773   001330                     l3577:
  5774   001330  0E00               	movlw	0
  5775   001332  6E01               	movwf	___fladd@b^0,c
  5776   001334  0E00               	movlw	0
  5777   001336  6E02               	movwf	(___fladd@b+1)^0,c
  5778   001338  0E00               	movlw	0
  5779   00133A  6E03               	movwf	(___fladd@b+2)^0,c
  5780   00133C  0E00               	movlw	0
  5781   00133E  6E04               	movwf	(___fladd@b+3)^0,c
  5782   001340  500F               	movf	___fladd@bexp^0,w,c
  5783   001342  A4D8               	btfss	status,2,c
  5784   001344  EFA6  F009         	goto	u2871
  5785   001348  EFA8  F009         	goto	u2870
  5786   00134C                     u2871:
  5787   00134C  EFAA  F009         	goto	l3581
  5788   001350                     u2870:
  5789   001350  0E00               	movlw	0
  5790   001352  6E0D               	movwf	___fladd@signs^0,c
  5791   001354                     l3581:
  5792   001354  A00F               	btfss	___fladd@bexp^0,0,c
  5793   001356  EFAF  F009         	goto	u2881
  5794   00135A  EFB1  F009         	goto	u2880
  5795   00135E                     u2881:
  5796   00135E  EFB4  F009         	goto	l3585
  5797   001362                     u2880:
  5798   001362  8E03               	bsf	(___fladd@b+2)^0,7,c
  5799   001364  EFB5  F009         	goto	l3587
  5800   001368                     l3585:
  5801   001368  9E03               	bcf	(___fladd@b+2)^0,7,c
  5802   00136A                     l3587:
  5803   00136A  90D8               	bcf	status,0,c
  5804   00136C  300F               	rrcf	___fladd@bexp^0,w,c
  5805   00136E  6E04               	movwf	(___fladd@b+3)^0,c
  5806   001370  AE0D               	btfss	___fladd@signs^0,7,c
  5807   001372  EFBD  F009         	goto	u2891
  5808   001376  EFBF  F009         	goto	u2890
  5809   00137A                     u2891:
  5810   00137A  EFC0  F009         	goto	l3593
  5811   00137E                     u2890:
  5812   00137E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5813   001380                     l3593:
  5814   001380  C001  F001         	movff	___fladd@b,?___fladd
  5815   001384  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5816   001388  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5817   00138C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5818   001390                     l1098:
  5819   001390  0012               	return		;funcret
  5820   001392                     __end_of___fladd:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function ___flmul *****************
  5824 ;; Defined at:
  5825 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  b               4   24[COMRAM] unsigned char 
  5828 ;;  a               4   28[COMRAM] unsigned char 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  prod            4   43[COMRAM] struct .
  5831 ;;  grs             4   37[COMRAM] unsigned long 
  5832 ;;  temp            2   47[COMRAM] struct .
  5833 ;;  bexp            1   42[COMRAM] unsigned char 
  5834 ;;  aexp            1   41[COMRAM] unsigned char 
  5835 ;;  sign            1   36[COMRAM] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  4   24[COMRAM] unsigned char 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0, prodl, prodh
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5845 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;Total ram usage:       25 bytes
  5850 ;; Hardware stack levels used: 1
  5851 ;; This function calls:
  5852 ;;		Nothing
  5853 ;; This function is called by:
  5854 ;;		_main
  5855 ;;		_convert_rgb2hue
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text37
  5860   001392                     __ptext37:
  5861                           	callstack 0
  5862   001392                     ___flmul:
  5863                           	callstack 30
  5864   001392  501C               	movf	(___flmul@b+3)^0,w,c
  5865   001394  0B80               	andlw	128
  5866   001396  6E25               	movwf	___flmul@sign^0,c
  5867   001398  501C               	movf	(___flmul@b+3)^0,w,c
  5868   00139A  241C               	addwf	(___flmul@b+3)^0,w,c
  5869   00139C  6E2B               	movwf	___flmul@bexp^0,c
  5870   00139E  AE1B               	btfss	(___flmul@b+2)^0,7,c
  5871   0013A0  EFD4  F009         	goto	u3221
  5872   0013A4  EFD6  F009         	goto	u3220
  5873   0013A8                     u3221:
  5874   0013A8  EFD7  F009         	goto	l3921
  5875   0013AC                     u3220:
  5876   0013AC  802B               	bsf	___flmul@bexp^0,0,c
  5877   0013AE                     l3921:
  5878   0013AE  502B               	movf	___flmul@bexp^0,w,c
  5879   0013B0  B4D8               	btfsc	status,2,c
  5880   0013B2  EFDD  F009         	goto	u3231
  5881   0013B6  EFDF  F009         	goto	u3230
  5882   0013BA                     u3231:
  5883   0013BA  EFF2  F009         	goto	l3929
  5884   0013BE                     u3230:
  5885   0013BE  282B               	incf	___flmul@bexp^0,w,c
  5886   0013C0  A4D8               	btfss	status,2,c
  5887   0013C2  EFE5  F009         	goto	u3241
  5888   0013C6  EFE7  F009         	goto	u3240
  5889   0013CA                     u3241:
  5890   0013CA  EFEF  F009         	goto	l3927
  5891   0013CE                     u3240:
  5892   0013CE  0E00               	movlw	0
  5893   0013D0  6E19               	movwf	___flmul@b^0,c
  5894   0013D2  0E00               	movlw	0
  5895   0013D4  6E1A               	movwf	(___flmul@b+1)^0,c
  5896   0013D6  0E00               	movlw	0
  5897   0013D8  6E1B               	movwf	(___flmul@b+2)^0,c
  5898   0013DA  0E00               	movlw	0
  5899   0013DC  6E1C               	movwf	(___flmul@b+3)^0,c
  5900   0013DE                     l3927:
  5901   0013DE  8E1B               	bsf	(___flmul@b+2)^0,7,c
  5902   0013E0  EFFA  F009         	goto	l3931
  5903   0013E4                     l3929:
  5904   0013E4  0E00               	movlw	0
  5905   0013E6  6E19               	movwf	___flmul@b^0,c
  5906   0013E8  0E00               	movlw	0
  5907   0013EA  6E1A               	movwf	(___flmul@b+1)^0,c
  5908   0013EC  0E00               	movlw	0
  5909   0013EE  6E1B               	movwf	(___flmul@b+2)^0,c
  5910   0013F0  0E00               	movlw	0
  5911   0013F2  6E1C               	movwf	(___flmul@b+3)^0,c
  5912   0013F4                     l3931:
  5913   0013F4  5020               	movf	(___flmul@a+3)^0,w,c
  5914   0013F6  0B80               	andlw	128
  5915   0013F8  1A25               	xorwf	___flmul@sign^0,f,c
  5916   0013FA  5020               	movf	(___flmul@a+3)^0,w,c
  5917   0013FC  2420               	addwf	(___flmul@a+3)^0,w,c
  5918   0013FE  6E2A               	movwf	___flmul@aexp^0,c
  5919   001400  AE1F               	btfss	(___flmul@a+2)^0,7,c
  5920   001402  EF05  F00A         	goto	u3251
  5921   001406  EF07  F00A         	goto	u3250
  5922   00140A                     u3251:
  5923   00140A  EF08  F00A         	goto	l3939
  5924   00140E                     u3250:
  5925   00140E  802A               	bsf	___flmul@aexp^0,0,c
  5926   001410                     l3939:
  5927   001410  502A               	movf	___flmul@aexp^0,w,c
  5928   001412  B4D8               	btfsc	status,2,c
  5929   001414  EF0E  F00A         	goto	u3261
  5930   001418  EF10  F00A         	goto	u3260
  5931   00141C                     u3261:
  5932   00141C  EF23  F00A         	goto	l3947
  5933   001420                     u3260:
  5934   001420  282A               	incf	___flmul@aexp^0,w,c
  5935   001422  A4D8               	btfss	status,2,c
  5936   001424  EF16  F00A         	goto	u3271
  5937   001428  EF18  F00A         	goto	u3270
  5938   00142C                     u3271:
  5939   00142C  EF20  F00A         	goto	l3945
  5940   001430                     u3270:
  5941   001430  0E00               	movlw	0
  5942   001432  6E1D               	movwf	___flmul@a^0,c
  5943   001434  0E00               	movlw	0
  5944   001436  6E1E               	movwf	(___flmul@a+1)^0,c
  5945   001438  0E00               	movlw	0
  5946   00143A  6E1F               	movwf	(___flmul@a+2)^0,c
  5947   00143C  0E00               	movlw	0
  5948   00143E  6E20               	movwf	(___flmul@a+3)^0,c
  5949   001440                     l3945:
  5950   001440  8E1F               	bsf	(___flmul@a+2)^0,7,c
  5951   001442  EF2B  F00A         	goto	l1175
  5952   001446                     l3947:
  5953   001446  0E00               	movlw	0
  5954   001448  6E1D               	movwf	___flmul@a^0,c
  5955   00144A  0E00               	movlw	0
  5956   00144C  6E1E               	movwf	(___flmul@a+1)^0,c
  5957   00144E  0E00               	movlw	0
  5958   001450  6E1F               	movwf	(___flmul@a+2)^0,c
  5959   001452  0E00               	movlw	0
  5960   001454  6E20               	movwf	(___flmul@a+3)^0,c
  5961   001456                     l1175:
  5962   001456  502A               	movf	___flmul@aexp^0,w,c
  5963   001458  B4D8               	btfsc	status,2,c
  5964   00145A  EF31  F00A         	goto	u3281
  5965   00145E  EF33  F00A         	goto	u3280
  5966   001462                     u3281:
  5967   001462  EF3B  F00A         	goto	l3951
  5968   001466                     u3280:
  5969   001466  502B               	movf	___flmul@bexp^0,w,c
  5970   001468  A4D8               	btfss	status,2,c
  5971   00146A  EF39  F00A         	goto	u3291
  5972   00146E  EF3B  F00A         	goto	u3290
  5973   001472                     u3291:
  5974   001472  EF45  F00A         	goto	l3955
  5975   001476                     u3290:
  5976   001476                     l3951:
  5977   001476  0E00               	movlw	0
  5978   001478  6E19               	movwf	?___flmul^0,c
  5979   00147A  0E00               	movlw	0
  5980   00147C  6E1A               	movwf	(?___flmul+1)^0,c
  5981   00147E  0E00               	movlw	0
  5982   001480  6E1B               	movwf	(?___flmul+2)^0,c
  5983   001482  0E00               	movlw	0
  5984   001484  6E1C               	movwf	(?___flmul+3)^0,c
  5985   001486  EFDD  F00B         	goto	l1179
  5986   00148A                     l3955:
  5987   00148A  501F               	movf	(___flmul@a+2)^0,w,c
  5988   00148C  0219               	mulwf	___flmul@b^0,c
  5989   00148E  CFF3 F030          	movff	prodl,___flmul@temp
  5990   001492  CFF4 F031          	movff	prodh,___flmul@temp+1
  5991   001496  5030               	movf	___flmul@temp^0,w,c
  5992   001498  6E26               	movwf	___flmul@grs^0,c
  5993   00149A  6A27               	clrf	(___flmul@grs+1)^0,c
  5994   00149C  6A28               	clrf	(___flmul@grs+2)^0,c
  5995   00149E  6A29               	clrf	(___flmul@grs+3)^0,c
  5996   0014A0  5031               	movf	(___flmul@temp+1)^0,w,c
  5997   0014A2  6E2C               	movwf	___flmul@prod^0,c
  5998   0014A4  6A2D               	clrf	(___flmul@prod+1)^0,c
  5999   0014A6  6A2E               	clrf	(___flmul@prod+2)^0,c
  6000   0014A8  6A2F               	clrf	(___flmul@prod+3)^0,c
  6001   0014AA  501E               	movf	(___flmul@a+1)^0,w,c
  6002   0014AC  021A               	mulwf	(___flmul@b+1)^0,c
  6003   0014AE  CFF3 F030          	movff	prodl,___flmul@temp
  6004   0014B2  CFF4 F031          	movff	prodh,___flmul@temp+1
  6005   0014B6  5030               	movf	___flmul@temp^0,w,c
  6006   0014B8  2626               	addwf	___flmul@grs^0,f,c
  6007   0014BA  0E00               	movlw	0
  6008   0014BC  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6009   0014BE  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6010   0014C0  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6011   0014C2  5031               	movf	(___flmul@temp+1)^0,w,c
  6012   0014C4  262C               	addwf	___flmul@prod^0,f,c
  6013   0014C6  0E00               	movlw	0
  6014   0014C8  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6015   0014CA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6016   0014CC  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6017   0014CE  501D               	movf	___flmul@a^0,w,c
  6018   0014D0  021B               	mulwf	(___flmul@b+2)^0,c
  6019   0014D2  CFF3 F030          	movff	prodl,___flmul@temp
  6020   0014D6  CFF4 F031          	movff	prodh,___flmul@temp+1
  6021   0014DA  5030               	movf	___flmul@temp^0,w,c
  6022   0014DC  2626               	addwf	___flmul@grs^0,f,c
  6023   0014DE  0E00               	movlw	0
  6024   0014E0  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6025   0014E2  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6026   0014E4  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6027   0014E6  5031               	movf	(___flmul@temp+1)^0,w,c
  6028   0014E8  262C               	addwf	___flmul@prod^0,f,c
  6029   0014EA  0E00               	movlw	0
  6030   0014EC  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6031   0014EE  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6032   0014F0  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6033   0014F2  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6034   0014F6  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6035   0014FA  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6036   0014FE  6A26               	clrf	___flmul@grs^0,c
  6037   001500  501D               	movf	___flmul@a^0,w,c
  6038   001502  021A               	mulwf	(___flmul@b+1)^0,c
  6039   001504  CFF3 F030          	movff	prodl,___flmul@temp
  6040   001508  CFF4 F031          	movff	prodh,___flmul@temp+1
  6041   00150C  5030               	movf	___flmul@temp^0,w,c
  6042   00150E  2626               	addwf	___flmul@grs^0,f,c
  6043   001510  5031               	movf	(___flmul@temp+1)^0,w,c
  6044   001512  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6045   001514  0E00               	movlw	0
  6046   001516  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6047   001518  0E00               	movlw	0
  6048   00151A  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6049   00151C  501E               	movf	(___flmul@a+1)^0,w,c
  6050   00151E  0219               	mulwf	___flmul@b^0,c
  6051   001520  CFF3 F030          	movff	prodl,___flmul@temp
  6052   001524  CFF4 F031          	movff	prodh,___flmul@temp+1
  6053   001528  5030               	movf	___flmul@temp^0,w,c
  6054   00152A  2626               	addwf	___flmul@grs^0,f,c
  6055   00152C  5031               	movf	(___flmul@temp+1)^0,w,c
  6056   00152E  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6057   001530  0E00               	movlw	0
  6058   001532  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6059   001534  0E00               	movlw	0
  6060   001536  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6061   001538  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6062   00153C  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6063   001540  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6064   001544  6A26               	clrf	___flmul@grs^0,c
  6065   001546  501D               	movf	___flmul@a^0,w,c
  6066   001548  0219               	mulwf	___flmul@b^0,c
  6067   00154A  CFF3 F030          	movff	prodl,___flmul@temp
  6068   00154E  CFF4 F031          	movff	prodh,___flmul@temp+1
  6069   001552  5030               	movf	___flmul@temp^0,w,c
  6070   001554  2626               	addwf	___flmul@grs^0,f,c
  6071   001556  5031               	movf	(___flmul@temp+1)^0,w,c
  6072   001558  2227               	addwfc	(___flmul@grs+1)^0,f,c
  6073   00155A  0E00               	movlw	0
  6074   00155C  2228               	addwfc	(___flmul@grs+2)^0,f,c
  6075   00155E  0E00               	movlw	0
  6076   001560  2229               	addwfc	(___flmul@grs+3)^0,f,c
  6077   001562  501F               	movf	(___flmul@a+2)^0,w,c
  6078   001564  021A               	mulwf	(___flmul@b+1)^0,c
  6079   001566  CFF3 F030          	movff	prodl,___flmul@temp
  6080   00156A  CFF4 F031          	movff	prodh,___flmul@temp+1
  6081   00156E  5030               	movf	___flmul@temp^0,w,c
  6082   001570  262C               	addwf	___flmul@prod^0,f,c
  6083   001572  5031               	movf	(___flmul@temp+1)^0,w,c
  6084   001574  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6085   001576  0E00               	movlw	0
  6086   001578  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6087   00157A  0E00               	movlw	0
  6088   00157C  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6089   00157E  501E               	movf	(___flmul@a+1)^0,w,c
  6090   001580  021B               	mulwf	(___flmul@b+2)^0,c
  6091   001582  CFF3 F030          	movff	prodl,___flmul@temp
  6092   001586  CFF4 F031          	movff	prodh,___flmul@temp+1
  6093   00158A  5030               	movf	___flmul@temp^0,w,c
  6094   00158C  262C               	addwf	___flmul@prod^0,f,c
  6095   00158E  5031               	movf	(___flmul@temp+1)^0,w,c
  6096   001590  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6097   001592  0E00               	movlw	0
  6098   001594  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6099   001596  0E00               	movlw	0
  6100   001598  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6101   00159A  501F               	movf	(___flmul@a+2)^0,w,c
  6102   00159C  021B               	mulwf	(___flmul@b+2)^0,c
  6103   00159E  CFF3 F030          	movff	prodl,___flmul@temp
  6104   0015A2  CFF4 F031          	movff	prodh,___flmul@temp+1
  6105   0015A6  5030               	movf	___flmul@temp^0,w,c
  6106   0015A8  6E21               	movwf	??___flmul^0,c
  6107   0015AA  5031               	movf	(___flmul@temp+1)^0,w,c
  6108   0015AC  6E22               	movwf	(??___flmul+1)^0,c
  6109   0015AE  6A23               	clrf	(??___flmul+2)^0,c
  6110   0015B0  6A24               	clrf	(??___flmul+3)^0,c
  6111   0015B2  C023  F024         	movff	??___flmul+2,??___flmul+3
  6112   0015B6  C022  F023         	movff	??___flmul+1,??___flmul+2
  6113   0015BA  C021  F022         	movff	??___flmul,??___flmul+1
  6114   0015BE  6A21               	clrf	??___flmul^0,c
  6115   0015C0  5021               	movf	??___flmul^0,w,c
  6116   0015C2  262C               	addwf	___flmul@prod^0,f,c
  6117   0015C4  5022               	movf	(??___flmul+1)^0,w,c
  6118   0015C6  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6119   0015C8  5023               	movf	(??___flmul+2)^0,w,c
  6120   0015CA  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6121   0015CC  5024               	movf	(??___flmul+3)^0,w,c
  6122   0015CE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6123   0015D0  C026  F021         	movff	___flmul@grs,??___flmul
  6124   0015D4  C027  F022         	movff	___flmul@grs+1,??___flmul+1
  6125   0015D8  C028  F023         	movff	___flmul@grs+2,??___flmul+2
  6126   0015DC  C029  F024         	movff	___flmul@grs+3,??___flmul+3
  6127   0015E0  0E19               	movlw	25
  6128   0015E2  EFF8  F00A         	goto	u3300
  6129   0015E6                     u3305:
  6130   0015E6  90D8               	bcf	status,0,c
  6131   0015E8  3224               	rrcf	(??___flmul+3)^0,f,c
  6132   0015EA  3223               	rrcf	(??___flmul+2)^0,f,c
  6133   0015EC  3222               	rrcf	(??___flmul+1)^0,f,c
  6134   0015EE  3221               	rrcf	??___flmul^0,f,c
  6135   0015F0                     u3300:
  6136   0015F0  2EE8               	decfsz	wreg,f,c
  6137   0015F2  EFF3  F00A         	goto	u3305
  6138   0015F6  5021               	movf	??___flmul^0,w,c
  6139   0015F8  262C               	addwf	___flmul@prod^0,f,c
  6140   0015FA  5022               	movf	(??___flmul+1)^0,w,c
  6141   0015FC  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6142   0015FE  5023               	movf	(??___flmul+2)^0,w,c
  6143   001600  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6144   001602  5024               	movf	(??___flmul+3)^0,w,c
  6145   001604  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6146   001606  C028  F029         	movff	___flmul@grs+2,___flmul@grs+3
  6147   00160A  C027  F028         	movff	___flmul@grs+1,___flmul@grs+2
  6148   00160E  C026  F027         	movff	___flmul@grs,___flmul@grs+1
  6149   001612  6A26               	clrf	___flmul@grs^0,c
  6150   001614  502A               	movf	___flmul@aexp^0,w,c
  6151   001616  C02B  F021         	movff	___flmul@bexp,??___flmul
  6152   00161A  6A22               	clrf	(??___flmul+1)^0,c
  6153   00161C  2621               	addwf	??___flmul^0,f,c
  6154   00161E  0E00               	movlw	0
  6155   001620  2222               	addwfc	(??___flmul+1)^0,f,c
  6156   001622  0E82               	movlw	130
  6157   001624  2421               	addwf	??___flmul^0,w,c
  6158   001626  6E30               	movwf	___flmul@temp^0,c
  6159   001628  0EFF               	movlw	255
  6160   00162A  2022               	addwfc	(??___flmul+1)^0,w,c
  6161   00162C  6E31               	movwf	(___flmul@temp+1)^0,c
  6162   00162E  EF2E  F00B         	goto	l4003
  6163   001632                     l3997:
  6164   001632  90D8               	bcf	status,0,c
  6165   001634  362C               	rlcf	___flmul@prod^0,f,c
  6166   001636  362D               	rlcf	(___flmul@prod+1)^0,f,c
  6167   001638  362E               	rlcf	(___flmul@prod+2)^0,f,c
  6168   00163A  362F               	rlcf	(___flmul@prod+3)^0,f,c
  6169   00163C  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6170   00163E  EF23  F00B         	goto	u3311
  6171   001642  EF25  F00B         	goto	u3310
  6172   001646                     u3311:
  6173   001646  EF26  F00B         	goto	l1182
  6174   00164A                     u3310:
  6175   00164A  802C               	bsf	___flmul@prod^0,0,c
  6176   00164C                     l1182:
  6177   00164C  90D8               	bcf	status,0,c
  6178   00164E  3626               	rlcf	___flmul@grs^0,f,c
  6179   001650  3627               	rlcf	(___flmul@grs+1)^0,f,c
  6180   001652  3628               	rlcf	(___flmul@grs+2)^0,f,c
  6181   001654  3629               	rlcf	(___flmul@grs+3)^0,f,c
  6182   001656  0630               	decf	___flmul@temp^0,f,c
  6183   001658  A0D8               	btfss	status,0,c
  6184   00165A  0631               	decf	(___flmul@temp+1)^0,f,c
  6185   00165C                     l4003:
  6186   00165C  AE2E               	btfss	(___flmul@prod+2)^0,7,c
  6187   00165E  EF33  F00B         	goto	u3321
  6188   001662  EF35  F00B         	goto	u3320
  6189   001666                     u3321:
  6190   001666  EF19  F00B         	goto	l3997
  6191   00166A                     u3320:
  6192   00166A  0E00               	movlw	0
  6193   00166C  6E2A               	movwf	___flmul@aexp^0,c
  6194   00166E  AE29               	btfss	(___flmul@grs+3)^0,7,c
  6195   001670  EF3C  F00B         	goto	u3331
  6196   001674  EF3E  F00B         	goto	u3330
  6197   001678                     u3331:
  6198   001678  EF62  F00B         	goto	l1184
  6199   00167C                     u3330:
  6200   00167C  0EFF               	movlw	255
  6201   00167E  1426               	andwf	___flmul@grs^0,w,c
  6202   001680  6E21               	movwf	??___flmul^0,c
  6203   001682  0EFF               	movlw	255
  6204   001684  1427               	andwf	(___flmul@grs+1)^0,w,c
  6205   001686  6E22               	movwf	(??___flmul+1)^0,c
  6206   001688  0EFF               	movlw	255
  6207   00168A  1428               	andwf	(___flmul@grs+2)^0,w,c
  6208   00168C  6E23               	movwf	(??___flmul+2)^0,c
  6209   00168E  0E7F               	movlw	127
  6210   001690  1429               	andwf	(___flmul@grs+3)^0,w,c
  6211   001692  6E24               	movwf	(??___flmul+3)^0,c
  6212   001694  5021               	movf	??___flmul^0,w,c
  6213   001696  1022               	iorwf	(??___flmul+1)^0,w,c
  6214   001698  1023               	iorwf	(??___flmul+2)^0,w,c
  6215   00169A  1024               	iorwf	(??___flmul+3)^0,w,c
  6216   00169C  B4D8               	btfsc	status,2,c
  6217   00169E  EF53  F00B         	goto	u3341
  6218   0016A2  EF55  F00B         	goto	u3340
  6219   0016A6                     u3341:
  6220   0016A6  EF59  F00B         	goto	l1185
  6221   0016AA                     u3340:
  6222   0016AA                     l4011:
  6223   0016AA  0E01               	movlw	1
  6224   0016AC  6E2A               	movwf	___flmul@aexp^0,c
  6225   0016AE  EF62  F00B         	goto	l1184
  6226   0016B2                     l1185:
  6227   0016B2  A02C               	btfss	___flmul@prod^0,0,c
  6228   0016B4  EF5E  F00B         	goto	u3351
  6229   0016B8  EF60  F00B         	goto	u3350
  6230   0016BC                     u3351:
  6231   0016BC  EF62  F00B         	goto	l1184
  6232   0016C0                     u3350:
  6233   0016C0  EF55  F00B         	goto	l4011
  6234   0016C4                     l1184:
  6235   0016C4  502A               	movf	___flmul@aexp^0,w,c
  6236   0016C6  B4D8               	btfsc	status,2,c
  6237   0016C8  EF68  F00B         	goto	u3361
  6238   0016CC  EF6A  F00B         	goto	u3360
  6239   0016D0                     u3361:
  6240   0016D0  EF8E  F00B         	goto	l4023
  6241   0016D4                     u3360:
  6242   0016D4  0E01               	movlw	1
  6243   0016D6  262C               	addwf	___flmul@prod^0,f,c
  6244   0016D8  0E00               	movlw	0
  6245   0016DA  222D               	addwfc	(___flmul@prod+1)^0,f,c
  6246   0016DC  222E               	addwfc	(___flmul@prod+2)^0,f,c
  6247   0016DE  222F               	addwfc	(___flmul@prod+3)^0,f,c
  6248   0016E0  A02F               	btfss	(___flmul@prod+3)^0,0,c
  6249   0016E2  EF75  F00B         	goto	u3371
  6250   0016E6  EF77  F00B         	goto	u3370
  6251   0016EA                     u3371:
  6252   0016EA  EF8E  F00B         	goto	l4023
  6253   0016EE                     u3370:
  6254   0016EE  C02C  F021         	movff	___flmul@prod,??___flmul
  6255   0016F2  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
  6256   0016F6  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
  6257   0016FA  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
  6258   0016FE  3424               	rlcf	(??___flmul+3)^0,w,c
  6259   001700  3224               	rrcf	(??___flmul+3)^0,f,c
  6260   001702  3223               	rrcf	(??___flmul+2)^0,f,c
  6261   001704  3222               	rrcf	(??___flmul+1)^0,f,c
  6262   001706  3221               	rrcf	??___flmul^0,f,c
  6263   001708  C021  F02C         	movff	??___flmul,___flmul@prod
  6264   00170C  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
  6265   001710  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
  6266   001714  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
  6267   001718  4A30               	infsnz	___flmul@temp^0,f,c
  6268   00171A  2A31               	incf	(___flmul@temp+1)^0,f,c
  6269   00171C                     l4023:
  6270   00171C  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  6271   00171E  EF99  F00B         	goto	u3381
  6272   001722  5031               	movf	(___flmul@temp+1)^0,w,c
  6273   001724  E108               	bnz	u3380
  6274   001726  2830               	incf	___flmul@temp^0,w,c
  6275   001728  A0D8               	btfss	status,0,c
  6276   00172A  EF99  F00B         	goto	u3381
  6277   00172E  EF9B  F00B         	goto	u3380
  6278   001732                     u3381:
  6279   001732  EFA5  F00B         	goto	l4027
  6280   001736                     u3380:
  6281   001736  0E00               	movlw	0
  6282   001738  6E2C               	movwf	___flmul@prod^0,c
  6283   00173A  0E00               	movlw	0
  6284   00173C  6E2D               	movwf	(___flmul@prod+1)^0,c
  6285   00173E  0E80               	movlw	128
  6286   001740  6E2E               	movwf	(___flmul@prod+2)^0,c
  6287   001742  0E7F               	movlw	127
  6288   001744  6E2F               	movwf	(___flmul@prod+3)^0,c
  6289   001746  EFD3  F00B         	goto	l4039
  6290   00174A                     l4027:
  6291   00174A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
  6292   00174C  EFB2  F00B         	goto	u3390
  6293   001750  5031               	movf	(___flmul@temp+1)^0,w,c
  6294   001752  E106               	bnz	u3391
  6295   001754  0430               	decf	___flmul@temp^0,w,c
  6296   001756  B0D8               	btfsc	status,0,c
  6297   001758  EFB0  F00B         	goto	u3391
  6298   00175C  EFB2  F00B         	goto	u3390
  6299   001760                     u3391:
  6300   001760  EFBE  F00B         	goto	l1192
  6301   001764                     u3390:
  6302   001764  0E00               	movlw	0
  6303   001766  6E2C               	movwf	___flmul@prod^0,c
  6304   001768  0E00               	movlw	0
  6305   00176A  6E2D               	movwf	(___flmul@prod+1)^0,c
  6306   00176C  0E00               	movlw	0
  6307   00176E  6E2E               	movwf	(___flmul@prod+2)^0,c
  6308   001770  0E00               	movlw	0
  6309   001772  6E2F               	movwf	(___flmul@prod+3)^0,c
  6310   001774  0E00               	movlw	0
  6311   001776  6E25               	movwf	___flmul@sign^0,c
  6312   001778  EFD3  F00B         	goto	l4039
  6313   00177C                     l1192:
  6314   00177C  C030  F02B         	movff	___flmul@temp,___flmul@bexp
  6315   001780  0EFF               	movlw	255
  6316   001782  162C               	andwf	___flmul@prod^0,f,c
  6317   001784  0EFF               	movlw	255
  6318   001786  162D               	andwf	(___flmul@prod+1)^0,f,c
  6319   001788  0E7F               	movlw	127
  6320   00178A  162E               	andwf	(___flmul@prod+2)^0,f,c
  6321   00178C  0E00               	movlw	0
  6322   00178E  162F               	andwf	(___flmul@prod+3)^0,f,c
  6323   001790  A02B               	btfss	___flmul@bexp^0,0,c
  6324   001792  EFCD  F00B         	goto	u3401
  6325   001796  EFCF  F00B         	goto	u3400
  6326   00179A                     u3401:
  6327   00179A  EFD0  F00B         	goto	l4037
  6328   00179E                     u3400:
  6329   00179E  8E2E               	bsf	(___flmul@prod+2)^0,7,c
  6330   0017A0                     l4037:
  6331   0017A0  90D8               	bcf	status,0,c
  6332   0017A2  302B               	rrcf	___flmul@bexp^0,w,c
  6333   0017A4  6E2F               	movwf	(___flmul@prod+3)^0,c
  6334   0017A6                     l4039:
  6335   0017A6  5025               	movf	___flmul@sign^0,w,c
  6336   0017A8  122F               	iorwf	(___flmul@prod+3)^0,f,c
  6337   0017AA  C02C  F019         	movff	___flmul@prod,?___flmul
  6338   0017AE  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
  6339   0017B2  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
  6340   0017B6  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
  6341   0017BA                     l1179:
  6342   0017BA  0012               	return		;funcret
  6343   0017BC                     __end_of___flmul:
  6344                           	callstack 0
  6345                           
  6346 ;; *************** function ___fldiv *****************
  6347 ;; Defined at:
  6348 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  b               4   49[COMRAM] unsigned char 
  6351 ;;  a               4   53[COMRAM] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  grs             4   68[COMRAM] unsigned long 
  6354 ;;  rem             4   61[COMRAM] unsigned long 
  6355 ;;  new_exp         2   66[COMRAM] short 
  6356 ;;  aexp            1   73[COMRAM] unsigned char 
  6357 ;;  bexp            1   72[COMRAM] unsigned char 
  6358 ;;  sign            1   65[COMRAM] unsigned char 
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  4   49[COMRAM] unsigned char 
  6361 ;; Registers used:
  6362 ;;		wreg, status,2, status,0
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6368 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6371 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;Total ram usage:       25 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;;		_convert_rgb2hue
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text38
  6383   0017BC                     __ptext38:
  6384                           	callstack 0
  6385   0017BC                     ___fldiv:
  6386                           	callstack 30
  6387   0017BC  5035               	movf	(___fldiv@b+3)^0,w,c
  6388   0017BE  0B80               	andlw	128
  6389   0017C0  6E42               	movwf	___fldiv@sign^0,c
  6390   0017C2  5035               	movf	(___fldiv@b+3)^0,w,c
  6391   0017C4  2435               	addwf	(___fldiv@b+3)^0,w,c
  6392   0017C6  6E49               	movwf	___fldiv@bexp^0,c
  6393   0017C8  AE34               	btfss	(___fldiv@b+2)^0,7,c
  6394   0017CA  EFE9  F00B         	goto	u2991
  6395   0017CE  EFEB  F00B         	goto	u2990
  6396   0017D2                     u2991:
  6397   0017D2  EFEC  F00B         	goto	l3783
  6398   0017D6                     u2990:
  6399   0017D6  8049               	bsf	___fldiv@bexp^0,0,c
  6400   0017D8                     l3783:
  6401   0017D8  5049               	movf	___fldiv@bexp^0,w,c
  6402   0017DA  B4D8               	btfsc	status,2,c
  6403   0017DC  EFF2  F00B         	goto	u3001
  6404   0017E0  EFF4  F00B         	goto	u3000
  6405   0017E4                     u3001:
  6406   0017E4  EF09  F00C         	goto	l3793
  6407   0017E8                     u3000:
  6408   0017E8  2849               	incf	___fldiv@bexp^0,w,c
  6409   0017EA  A4D8               	btfss	status,2,c
  6410   0017EC  EFFA  F00B         	goto	u3011
  6411   0017F0  EFFC  F00B         	goto	u3010
  6412   0017F4                     u3011:
  6413   0017F4  EF04  F00C         	goto	l3789
  6414   0017F8                     u3010:
  6415   0017F8  0E00               	movlw	0
  6416   0017FA  6E32               	movwf	___fldiv@b^0,c
  6417   0017FC  0E00               	movlw	0
  6418   0017FE  6E33               	movwf	(___fldiv@b+1)^0,c
  6419   001800  0E00               	movlw	0
  6420   001802  6E34               	movwf	(___fldiv@b+2)^0,c
  6421   001804  0E00               	movlw	0
  6422   001806  6E35               	movwf	(___fldiv@b+3)^0,c
  6423   001808                     l3789:
  6424   001808  8E34               	bsf	(___fldiv@b+2)^0,7,c
  6425   00180A  0E00               	movlw	0
  6426   00180C  6E35               	movwf	(___fldiv@b+3)^0,c
  6427   00180E  EF11  F00C         	goto	l3795
  6428   001812                     l3793:
  6429   001812  0E00               	movlw	0
  6430   001814  6E32               	movwf	___fldiv@b^0,c
  6431   001816  0E00               	movlw	0
  6432   001818  6E33               	movwf	(___fldiv@b+1)^0,c
  6433   00181A  0E00               	movlw	0
  6434   00181C  6E34               	movwf	(___fldiv@b+2)^0,c
  6435   00181E  0E00               	movlw	0
  6436   001820  6E35               	movwf	(___fldiv@b+3)^0,c
  6437   001822                     l3795:
  6438   001822  5039               	movf	(___fldiv@a+3)^0,w,c
  6439   001824  0B80               	andlw	128
  6440   001826  1A42               	xorwf	___fldiv@sign^0,f,c
  6441   001828  5039               	movf	(___fldiv@a+3)^0,w,c
  6442   00182A  2439               	addwf	(___fldiv@a+3)^0,w,c
  6443   00182C  6E4A               	movwf	___fldiv@aexp^0,c
  6444   00182E  AE38               	btfss	(___fldiv@a+2)^0,7,c
  6445   001830  EF1C  F00C         	goto	u3021
  6446   001834  EF1E  F00C         	goto	u3020
  6447   001838                     u3021:
  6448   001838  EF1F  F00C         	goto	l3803
  6449   00183C                     u3020:
  6450   00183C  804A               	bsf	___fldiv@aexp^0,0,c
  6451   00183E                     l3803:
  6452   00183E  504A               	movf	___fldiv@aexp^0,w,c
  6453   001840  B4D8               	btfsc	status,2,c
  6454   001842  EF25  F00C         	goto	u3031
  6455   001846  EF27  F00C         	goto	u3030
  6456   00184A                     u3031:
  6457   00184A  EF3C  F00C         	goto	l3813
  6458   00184E                     u3030:
  6459   00184E  284A               	incf	___fldiv@aexp^0,w,c
  6460   001850  A4D8               	btfss	status,2,c
  6461   001852  EF2D  F00C         	goto	u3041
  6462   001856  EF2F  F00C         	goto	u3040
  6463   00185A                     u3041:
  6464   00185A  EF37  F00C         	goto	l3809
  6465   00185E                     u3040:
  6466   00185E  0E00               	movlw	0
  6467   001860  6E36               	movwf	___fldiv@a^0,c
  6468   001862  0E00               	movlw	0
  6469   001864  6E37               	movwf	(___fldiv@a+1)^0,c
  6470   001866  0E00               	movlw	0
  6471   001868  6E38               	movwf	(___fldiv@a+2)^0,c
  6472   00186A  0E00               	movlw	0
  6473   00186C  6E39               	movwf	(___fldiv@a+3)^0,c
  6474   00186E                     l3809:
  6475   00186E  8E38               	bsf	(___fldiv@a+2)^0,7,c
  6476   001870  0E00               	movlw	0
  6477   001872  6E39               	movwf	(___fldiv@a+3)^0,c
  6478   001874  EF44  F00C         	goto	l3815
  6479   001878                     l3813:
  6480   001878  0E00               	movlw	0
  6481   00187A  6E36               	movwf	___fldiv@a^0,c
  6482   00187C  0E00               	movlw	0
  6483   00187E  6E37               	movwf	(___fldiv@a+1)^0,c
  6484   001880  0E00               	movlw	0
  6485   001882  6E38               	movwf	(___fldiv@a+2)^0,c
  6486   001884  0E00               	movlw	0
  6487   001886  6E39               	movwf	(___fldiv@a+3)^0,c
  6488   001888                     l3815:
  6489   001888  5036               	movf	___fldiv@a^0,w,c
  6490   00188A  1037               	iorwf	(___fldiv@a+1)^0,w,c
  6491   00188C  1038               	iorwf	(___fldiv@a+2)^0,w,c
  6492   00188E  1039               	iorwf	(___fldiv@a+3)^0,w,c
  6493   001890  A4D8               	btfss	status,2,c
  6494   001892  EF4D  F00C         	goto	u3051
  6495   001896  EF4F  F00C         	goto	u3050
  6496   00189A                     u3051:
  6497   00189A  EF67  F00C         	goto	l3827
  6498   00189E                     u3050:
  6499   00189E  0E00               	movlw	0
  6500   0018A0  6E32               	movwf	___fldiv@b^0,c
  6501   0018A2  0E00               	movlw	0
  6502   0018A4  6E33               	movwf	(___fldiv@b+1)^0,c
  6503   0018A6  0E00               	movlw	0
  6504   0018A8  6E34               	movwf	(___fldiv@b+2)^0,c
  6505   0018AA  0E00               	movlw	0
  6506   0018AC  6E35               	movwf	(___fldiv@b+3)^0,c
  6507   0018AE  0E80               	movlw	128
  6508   0018B0  1234               	iorwf	(___fldiv@b+2)^0,f,c
  6509   0018B2  0E7F               	movlw	127
  6510   0018B4  1235               	iorwf	(___fldiv@b+3)^0,f,c
  6511   0018B6                     l3821:
  6512   0018B6  5042               	movf	___fldiv@sign^0,w,c
  6513   0018B8  1235               	iorwf	(___fldiv@b+3)^0,f,c
  6514   0018BA  C032  F032         	movff	___fldiv@b,?___fldiv
  6515   0018BE  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
  6516   0018C2  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
  6517   0018C6  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
  6518   0018CA  EFAA  F00D         	goto	l1143
  6519   0018CE                     l3827:
  6520   0018CE  5049               	movf	___fldiv@bexp^0,w,c
  6521   0018D0  A4D8               	btfss	status,2,c
  6522   0018D2  EF6D  F00C         	goto	u3061
  6523   0018D6  EF6F  F00C         	goto	u3060
  6524   0018DA                     u3061:
  6525   0018DA  EF79  F00C         	goto	l3835
  6526   0018DE                     u3060:
  6527   0018DE  0E00               	movlw	0
  6528   0018E0  6E32               	movwf	?___fldiv^0,c
  6529   0018E2  0E00               	movlw	0
  6530   0018E4  6E33               	movwf	(?___fldiv+1)^0,c
  6531   0018E6  0E00               	movlw	0
  6532   0018E8  6E34               	movwf	(?___fldiv+2)^0,c
  6533   0018EA  0E00               	movlw	0
  6534   0018EC  6E35               	movwf	(?___fldiv+3)^0,c
  6535   0018EE  EFAA  F00D         	goto	l1143
  6536   0018F2                     l3835:
  6537   0018F2  504A               	movf	___fldiv@aexp^0,w,c
  6538   0018F4  C049  F03A         	movff	___fldiv@bexp,??___fldiv
  6539   0018F8  6A3B               	clrf	(??___fldiv+1)^0,c
  6540   0018FA  5E3A               	subwf	??___fldiv^0,f,c
  6541   0018FC  0E00               	movlw	0
  6542   0018FE  5A3B               	subwfb	(??___fldiv+1)^0,f,c
  6543   001900  0E7F               	movlw	127
  6544   001902  243A               	addwf	??___fldiv^0,w,c
  6545   001904  6E43               	movwf	___fldiv@new_exp^0,c
  6546   001906  0E00               	movlw	0
  6547   001908  203B               	addwfc	(??___fldiv+1)^0,w,c
  6548   00190A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  6549   00190C  C032  F03E         	movff	___fldiv@b,___fldiv@rem
  6550   001910  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
  6551   001914  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
  6552   001918  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
  6553   00191C  0E00               	movlw	0
  6554   00191E  6E32               	movwf	___fldiv@b^0,c
  6555   001920  0E00               	movlw	0
  6556   001922  6E33               	movwf	(___fldiv@b+1)^0,c
  6557   001924  0E00               	movlw	0
  6558   001926  6E34               	movwf	(___fldiv@b+2)^0,c
  6559   001928  0E00               	movlw	0
  6560   00192A  6E35               	movwf	(___fldiv@b+3)^0,c
  6561   00192C  0E00               	movlw	0
  6562   00192E  6E45               	movwf	___fldiv@grs^0,c
  6563   001930  0E00               	movlw	0
  6564   001932  6E46               	movwf	(___fldiv@grs+1)^0,c
  6565   001934  0E00               	movlw	0
  6566   001936  6E47               	movwf	(___fldiv@grs+2)^0,c
  6567   001938  0E00               	movlw	0
  6568   00193A  6E48               	movwf	(___fldiv@grs+3)^0,c
  6569   00193C  0E00               	movlw	0
  6570   00193E  6E4A               	movwf	___fldiv@aexp^0,c
  6571   001940  EFDA  F00C         	goto	l1145
  6572   001944                     l3845:
  6573   001944  504A               	movf	___fldiv@aexp^0,w,c
  6574   001946  B4D8               	btfsc	status,2,c
  6575   001948  EFA8  F00C         	goto	u3071
  6576   00194C  EFAA  F00C         	goto	u3070
  6577   001950                     u3071:
  6578   001950  EFC1  F00C         	goto	l3853
  6579   001954                     u3070:
  6580   001954  90D8               	bcf	status,0,c
  6581   001956  363E               	rlcf	___fldiv@rem^0,f,c
  6582   001958  363F               	rlcf	(___fldiv@rem+1)^0,f,c
  6583   00195A  3640               	rlcf	(___fldiv@rem+2)^0,f,c
  6584   00195C  3641               	rlcf	(___fldiv@rem+3)^0,f,c
  6585   00195E  90D8               	bcf	status,0,c
  6586   001960  3632               	rlcf	___fldiv@b^0,f,c
  6587   001962  3633               	rlcf	(___fldiv@b+1)^0,f,c
  6588   001964  3634               	rlcf	(___fldiv@b+2)^0,f,c
  6589   001966  3635               	rlcf	(___fldiv@b+3)^0,f,c
  6590   001968  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  6591   00196A  EFB9  F00C         	goto	u3081
  6592   00196E  EFBB  F00C         	goto	u3080
  6593   001972                     u3081:
  6594   001972  EFBC  F00C         	goto	l1148
  6595   001976                     u3080:
  6596   001976  8032               	bsf	___fldiv@b^0,0,c
  6597   001978                     l1148:
  6598   001978  90D8               	bcf	status,0,c
  6599   00197A  3645               	rlcf	___fldiv@grs^0,f,c
  6600   00197C  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  6601   00197E  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  6602   001980  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  6603   001982                     l3853:
  6604   001982  5036               	movf	___fldiv@a^0,w,c
  6605   001984  5C3E               	subwf	___fldiv@rem^0,w,c
  6606   001986  5037               	movf	(___fldiv@a+1)^0,w,c
  6607   001988  583F               	subwfb	(___fldiv@rem+1)^0,w,c
  6608   00198A  5038               	movf	(___fldiv@a+2)^0,w,c
  6609   00198C  5840               	subwfb	(___fldiv@rem+2)^0,w,c
  6610   00198E  5039               	movf	(___fldiv@a+3)^0,w,c
  6611   001990  5841               	subwfb	(___fldiv@rem+3)^0,w,c
  6612   001992  A0D8               	btfss	status,0,c
  6613   001994  EFCE  F00C         	goto	u3091
  6614   001998  EFD0  F00C         	goto	u3090
  6615   00199C                     u3091:
  6616   00199C  EFD9  F00C         	goto	l3859
  6617   0019A0                     u3090:
  6618   0019A0  8C48               	bsf	(___fldiv@grs+3)^0,6,c
  6619   0019A2  5036               	movf	___fldiv@a^0,w,c
  6620   0019A4  5E3E               	subwf	___fldiv@rem^0,f,c
  6621   0019A6  5037               	movf	(___fldiv@a+1)^0,w,c
  6622   0019A8  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
  6623   0019AA  5038               	movf	(___fldiv@a+2)^0,w,c
  6624   0019AC  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
  6625   0019AE  5039               	movf	(___fldiv@a+3)^0,w,c
  6626   0019B0  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
  6627   0019B2                     l3859:
  6628   0019B2  2A4A               	incf	___fldiv@aexp^0,f,c
  6629   0019B4                     l1145:
  6630   0019B4  0E19               	movlw	25
  6631   0019B6  644A               	cpfsgt	___fldiv@aexp^0,c
  6632   0019B8  EFE0  F00C         	goto	u3101
  6633   0019BC  EFE2  F00C         	goto	u3100
  6634   0019C0                     u3101:
  6635   0019C0  EFA2  F00C         	goto	l3845
  6636   0019C4                     u3100:
  6637   0019C4  503E               	movf	___fldiv@rem^0,w,c
  6638   0019C6  103F               	iorwf	(___fldiv@rem+1)^0,w,c
  6639   0019C8  1040               	iorwf	(___fldiv@rem+2)^0,w,c
  6640   0019CA  1041               	iorwf	(___fldiv@rem+3)^0,w,c
  6641   0019CC  B4D8               	btfsc	status,2,c
  6642   0019CE  EFEB  F00C         	goto	u3111
  6643   0019D2  EFED  F00C         	goto	u3110
  6644   0019D6                     u3111:
  6645   0019D6  EF05  F00D         	goto	l3871
  6646   0019DA                     u3110:
  6647   0019DA  8045               	bsf	___fldiv@grs^0,0,c
  6648   0019DC  EF05  F00D         	goto	l3871
  6649   0019E0                     l3865:
  6650   0019E0  90D8               	bcf	status,0,c
  6651   0019E2  3632               	rlcf	___fldiv@b^0,f,c
  6652   0019E4  3633               	rlcf	(___fldiv@b+1)^0,f,c
  6653   0019E6  3634               	rlcf	(___fldiv@b+2)^0,f,c
  6654   0019E8  3635               	rlcf	(___fldiv@b+3)^0,f,c
  6655   0019EA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  6656   0019EC  EFFA  F00C         	goto	u3121
  6657   0019F0  EFFC  F00C         	goto	u3120
  6658   0019F4                     u3121:
  6659   0019F4  EFFD  F00C         	goto	l1154
  6660   0019F8                     u3120:
  6661   0019F8  8032               	bsf	___fldiv@b^0,0,c
  6662   0019FA                     l1154:
  6663   0019FA  90D8               	bcf	status,0,c
  6664   0019FC  3645               	rlcf	___fldiv@grs^0,f,c
  6665   0019FE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
  6666   001A00  3647               	rlcf	(___fldiv@grs+2)^0,f,c
  6667   001A02  3648               	rlcf	(___fldiv@grs+3)^0,f,c
  6668   001A04  0643               	decf	___fldiv@new_exp^0,f,c
  6669   001A06  A0D8               	btfss	status,0,c
  6670   001A08  0644               	decf	(___fldiv@new_exp+1)^0,f,c
  6671   001A0A                     l3871:
  6672   001A0A  AE34               	btfss	(___fldiv@b+2)^0,7,c
  6673   001A0C  EF0A  F00D         	goto	u3131
  6674   001A10  EF0C  F00D         	goto	u3130
  6675   001A14                     u3131:
  6676   001A14  EFF0  F00C         	goto	l3865
  6677   001A18                     u3130:
  6678   001A18  0E00               	movlw	0
  6679   001A1A  6E4A               	movwf	___fldiv@aexp^0,c
  6680   001A1C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
  6681   001A1E  EF13  F00D         	goto	u3141
  6682   001A22  EF15  F00D         	goto	u3140
  6683   001A26                     u3141:
  6684   001A26  EF39  F00D         	goto	l1156
  6685   001A2A                     u3140:
  6686   001A2A  0EFF               	movlw	255
  6687   001A2C  1445               	andwf	___fldiv@grs^0,w,c
  6688   001A2E  6E3A               	movwf	??___fldiv^0,c
  6689   001A30  0EFF               	movlw	255
  6690   001A32  1446               	andwf	(___fldiv@grs+1)^0,w,c
  6691   001A34  6E3B               	movwf	(??___fldiv+1)^0,c
  6692   001A36  0EFF               	movlw	255
  6693   001A38  1447               	andwf	(___fldiv@grs+2)^0,w,c
  6694   001A3A  6E3C               	movwf	(??___fldiv+2)^0,c
  6695   001A3C  0E7F               	movlw	127
  6696   001A3E  1448               	andwf	(___fldiv@grs+3)^0,w,c
  6697   001A40  6E3D               	movwf	(??___fldiv+3)^0,c
  6698   001A42  503A               	movf	??___fldiv^0,w,c
  6699   001A44  103B               	iorwf	(??___fldiv+1)^0,w,c
  6700   001A46  103C               	iorwf	(??___fldiv+2)^0,w,c
  6701   001A48  103D               	iorwf	(??___fldiv+3)^0,w,c
  6702   001A4A  B4D8               	btfsc	status,2,c
  6703   001A4C  EF2A  F00D         	goto	u3151
  6704   001A50  EF2C  F00D         	goto	u3150
  6705   001A54                     u3151:
  6706   001A54  EF30  F00D         	goto	l1157
  6707   001A58                     u3150:
  6708   001A58                     l3879:
  6709   001A58  0E01               	movlw	1
  6710   001A5A  6E4A               	movwf	___fldiv@aexp^0,c
  6711   001A5C  EF39  F00D         	goto	l1156
  6712   001A60                     l1157:
  6713   001A60  A032               	btfss	___fldiv@b^0,0,c
  6714   001A62  EF35  F00D         	goto	u3161
  6715   001A66  EF37  F00D         	goto	u3160
  6716   001A6A                     u3161:
  6717   001A6A  EF39  F00D         	goto	l1156
  6718   001A6E                     u3160:
  6719   001A6E  EF2C  F00D         	goto	l3879
  6720   001A72                     l1156:
  6721   001A72  504A               	movf	___fldiv@aexp^0,w,c
  6722   001A74  B4D8               	btfsc	status,2,c
  6723   001A76  EF3F  F00D         	goto	u3171
  6724   001A7A  EF41  F00D         	goto	u3170
  6725   001A7E                     u3171:
  6726   001A7E  EF65  F00D         	goto	l3891
  6727   001A82                     u3170:
  6728   001A82  0E01               	movlw	1
  6729   001A84  2632               	addwf	___fldiv@b^0,f,c
  6730   001A86  0E00               	movlw	0
  6731   001A88  2233               	addwfc	(___fldiv@b+1)^0,f,c
  6732   001A8A  2234               	addwfc	(___fldiv@b+2)^0,f,c
  6733   001A8C  2235               	addwfc	(___fldiv@b+3)^0,f,c
  6734   001A8E  A035               	btfss	(___fldiv@b+3)^0,0,c
  6735   001A90  EF4C  F00D         	goto	u3181
  6736   001A94  EF4E  F00D         	goto	u3180
  6737   001A98                     u3181:
  6738   001A98  EF65  F00D         	goto	l3891
  6739   001A9C                     u3180:
  6740   001A9C  C032  F03A         	movff	___fldiv@b,??___fldiv
  6741   001AA0  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
  6742   001AA4  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
  6743   001AA8  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
  6744   001AAC  343D               	rlcf	(??___fldiv+3)^0,w,c
  6745   001AAE  323D               	rrcf	(??___fldiv+3)^0,f,c
  6746   001AB0  323C               	rrcf	(??___fldiv+2)^0,f,c
  6747   001AB2  323B               	rrcf	(??___fldiv+1)^0,f,c
  6748   001AB4  323A               	rrcf	??___fldiv^0,f,c
  6749   001AB6  C03A  F032         	movff	??___fldiv,___fldiv@b
  6750   001ABA  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
  6751   001ABE  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
  6752   001AC2  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
  6753   001AC6  4A43               	infsnz	___fldiv@new_exp^0,f,c
  6754   001AC8  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
  6755   001ACA                     l3891:
  6756   001ACA  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6757   001ACC  EF70  F00D         	goto	u3191
  6758   001AD0  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  6759   001AD2  E108               	bnz	u3190
  6760   001AD4  2843               	incf	___fldiv@new_exp^0,w,c
  6761   001AD6  A0D8               	btfss	status,0,c
  6762   001AD8  EF70  F00D         	goto	u3191
  6763   001ADC  EF72  F00D         	goto	u3190
  6764   001AE0                     u3191:
  6765   001AE0  EF7D  F00D         	goto	l3895
  6766   001AE4                     u3190:
  6767   001AE4  0E00               	movlw	0
  6768   001AE6  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  6769   001AE8  6843               	setf	___fldiv@new_exp^0,c
  6770   001AEA  0E00               	movlw	0
  6771   001AEC  6E32               	movwf	___fldiv@b^0,c
  6772   001AEE  0E00               	movlw	0
  6773   001AF0  6E33               	movwf	(___fldiv@b+1)^0,c
  6774   001AF2  0E00               	movlw	0
  6775   001AF4  6E34               	movwf	(___fldiv@b+2)^0,c
  6776   001AF6  0E00               	movlw	0
  6777   001AF8  6E35               	movwf	(___fldiv@b+3)^0,c
  6778   001AFA                     l3895:
  6779   001AFA  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6780   001AFC  EF8A  F00D         	goto	u3200
  6781   001B00  5044               	movf	(___fldiv@new_exp+1)^0,w,c
  6782   001B02  E106               	bnz	u3201
  6783   001B04  0443               	decf	___fldiv@new_exp^0,w,c
  6784   001B06  B0D8               	btfsc	status,0,c
  6785   001B08  EF88  F00D         	goto	u3201
  6786   001B0C  EF8A  F00D         	goto	u3200
  6787   001B10                     u3201:
  6788   001B10  EF98  F00D         	goto	l3899
  6789   001B14                     u3200:
  6790   001B14  0E00               	movlw	0
  6791   001B16  6E44               	movwf	(___fldiv@new_exp+1)^0,c
  6792   001B18  0E00               	movlw	0
  6793   001B1A  6E43               	movwf	___fldiv@new_exp^0,c
  6794   001B1C  0E00               	movlw	0
  6795   001B1E  6E32               	movwf	___fldiv@b^0,c
  6796   001B20  0E00               	movlw	0
  6797   001B22  6E33               	movwf	(___fldiv@b+1)^0,c
  6798   001B24  0E00               	movlw	0
  6799   001B26  6E34               	movwf	(___fldiv@b+2)^0,c
  6800   001B28  0E00               	movlw	0
  6801   001B2A  6E35               	movwf	(___fldiv@b+3)^0,c
  6802   001B2C  0E00               	movlw	0
  6803   001B2E  6E42               	movwf	___fldiv@sign^0,c
  6804   001B30                     l3899:
  6805   001B30  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
  6806   001B34  A049               	btfss	___fldiv@bexp^0,0,c
  6807   001B36  EF9F  F00D         	goto	u3211
  6808   001B3A  EFA1  F00D         	goto	u3210
  6809   001B3E                     u3211:
  6810   001B3E  EFA4  F00D         	goto	l3905
  6811   001B42                     u3210:
  6812   001B42  8E34               	bsf	(___fldiv@b+2)^0,7,c
  6813   001B44  EFA5  F00D         	goto	l3907
  6814   001B48                     l3905:
  6815   001B48  9E34               	bcf	(___fldiv@b+2)^0,7,c
  6816   001B4A                     l3907:
  6817   001B4A  90D8               	bcf	status,0,c
  6818   001B4C  3049               	rrcf	___fldiv@bexp^0,w,c
  6819   001B4E  6E35               	movwf	(___fldiv@b+3)^0,c
  6820   001B50  EF5B  F00C         	goto	l3821
  6821   001B54                     l1143:
  6822   001B54  0012               	return		;funcret
  6823   001B56                     __end_of___fldiv:
  6824                           	callstack 0
  6825                           
  6826 ;; *************** function _ADC_init *****************
  6827 ;; Defined at:
  6828 ;;		line 9 in file "ADC.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;		None
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;		None
  6833 ;; Return value:  Size  Location     Type
  6834 ;;                  1    wreg      void 
  6835 ;; Registers used:
  6836 ;;		wreg, status,2
  6837 ;; Tracked objects:
  6838 ;;		On entry : 0/0
  6839 ;;		On exit  : 0/0
  6840 ;;		Unchanged: 0/0
  6841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6846 ;;Total ram usage:        0 bytes
  6847 ;; Hardware stack levels used: 1
  6848 ;; This function calls:
  6849 ;;		Nothing
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text39
  6856   002D32                     __ptext39:
  6857                           	callstack 0
  6858   002D32                     _ADC_init:
  6859                           	callstack 30
  6860   002D32                     
  6861                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  6862   002D32  8C86               	bsf	134,6,c	;volatile
  6863                           
  6864                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  6865   002D34  010E               	movlb	14	; () banked
  6866   002D36  8DB4               	bsf	180,6,b	;volatile
  6867                           
  6868                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  6869   002D38  010F               	movlb	15	; () banked
  6870   002D3A  9958               	bcf	88,4,b	;volatile
  6871   002D3C                     
  6872                           ; BSR set to: 15
  6873                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  6874   002D3C  0EFC               	movlw	-4
  6875   002D3E  1758               	andwf	88,f,b	;volatile
  6876                           
  6877                           ;ADC.c: 17:     ADPCH=0b101110;
  6878   002D40  0E2E               	movlw	46
  6879   002D42  6F5F               	movwf	95,b	;volatile
  6880   002D44                     
  6881                           ; BSR set to: 15
  6882                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  6883   002D44  9460               	bcf	96,2,c	;volatile
  6884   002D46                     
  6885                           ; BSR set to: 15
  6886                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  6887   002D46  8860               	bsf	96,4,c	;volatile
  6888   002D48                     
  6889                           ; BSR set to: 15
  6890                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  6891   002D48  8E60               	bsf	96,7,c	;volatile
  6892   002D4A                     
  6893                           ; BSR set to: 15
  6894   002D4A  0012               	return		;funcret
  6895   002D4C                     __end_of_ADC_init:
  6896                           	callstack 0
  6897                           
  6898                           	psect	rparam
  6899   000000                     
  6900                           	psect	config
  6901                           
  6902                           ;Config register CONFIG1L @ 0x300000
  6903                           ;	External Oscillator mode Selection bits
  6904                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6905                           ;	Power-up default value for COSC bits
  6906                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6907   300000                     	org	3145728
  6908   300000  AA                 	db	170
  6909                           
  6910                           ;Config register CONFIG1H @ 0x300001
  6911                           ;	unspecified, using default values
  6912                           ;	Clock Out Enable bit
  6913                           ;	CLKOUTEN = 0x1, unprogrammed default
  6914                           ;	Clock Switch Enable bit
  6915                           ;	CSWEN = 0x1, unprogrammed default
  6916                           ;	Fail-Safe Clock Monitor Enable bit
  6917                           ;	FCMEN = 0x1, unprogrammed default
  6918   300001                     	org	3145729
  6919   300001  FF                 	db	255
  6920                           
  6921                           ;Config register CONFIG3L @ 0x300004
  6922                           ;	WDT Period Select bits
  6923                           ;	WDTCPS = 0x1F, unprogrammed default
  6924                           ;	WDT operating mode
  6925                           ;	WDTE = OFF, WDT Disabled
  6926   300004                     	org	3145732
  6927   300004  9F                 	db	159
  6928                           
  6929                           ;Config register CONFIG3H @ 0x300005
  6930                           ;	unspecified, using default values
  6931                           ;	WDT Window Select bits
  6932                           ;	WDTCWS = 0x7, unprogrammed default
  6933                           ;	WDT input clock selector
  6934                           ;	WDTCCS = 0x7, unprogrammed default
  6935   300005                     	org	3145733
  6936   300005  FF                 	db	255
  6937                           tosu	equ	0xFFF
  6938                           tosh	equ	0xFFE
  6939                           tosl	equ	0xFFD
  6940                           stkptr	equ	0xFFC
  6941                           pclatu	equ	0xFFB
  6942                           pclath	equ	0xFFA
  6943                           pcl	equ	0xFF9
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           indf0	equ	0xFEF
  6951                           postinc0	equ	0xFEE
  6952                           postdec0	equ	0xFED
  6953                           preinc0	equ	0xFEC
  6954                           plusw0	equ	0xFEB
  6955                           fsr0h	equ	0xFEA
  6956                           fsr0l	equ	0xFE9
  6957                           wreg	equ	0xFE8
  6958                           indf1	equ	0xFE7
  6959                           postinc1	equ	0xFE6
  6960                           postdec1	equ	0xFE5
  6961                           preinc1	equ	0xFE4
  6962                           plusw1	equ	0xFE3
  6963                           fsr1h	equ	0xFE2
  6964                           fsr1l	equ	0xFE1
  6965                           bsr	equ	0xFE0
  6966                           indf2	equ	0xFDF
  6967                           postinc2	equ	0xFDE
  6968                           postdec2	equ	0xFDD
  6969                           preinc2	equ	0xFDC
  6970                           plusw2	equ	0xFDB
  6971                           fsr2h	equ	0xFDA
  6972                           fsr2l	equ	0xFD9
  6973                           status	equ	0xFD8

Data Sizes:
    Strings     208
    Constant    0
    Data        1
    BSS         190
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     66     160
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(1) Largest target is 10
		 -> colorCalibration(BANK0[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S2580$buffer	PTR unsigned char  size(2) Largest target is 0

    S2580$source	PTR const unsigned char  size(2) Largest target is 0

    S30DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S30DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_1(CODE[24]), STR_11(CODE[25]), STR_13(CODE[21]), STR_14(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[35]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 35
		 -> STR_1(CODE[24]), STR_11(CODE[25]), STR_13(CODE[21]), STR_14(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[35]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 35
		 -> STR_1(CODE[24]), STR_11(CODE[25]), STR_13(CODE[21]), STR_14(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[35]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_1(CODE[24]), STR_11(CODE[25]), STR_13(CODE[21]), STR_14(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[35]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_calibration_routine
    _send2USART->_sprintf
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Clear
    ___fltol->___fldiv
    ___flsub->___fladd
    ___flmul->___flsub
    ___fldiv->___flmul

Critical Paths under _main in BANK0

    _main->_send2USART

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   31029
                                             50 BANK0     16    16      0
                           _ADC_init
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                _calibration_routine
                   _color_click_init
                   _color_read_Clear
                    _initDCmotorsPWM
                         _initUSART4
                         _send2USART
 ---------------------------------------------------------------------------------
 (1) _send2USART                                          52    50      2   10022
                                             67 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 23    22      1   10908
                                             67 COMRAM    23    22      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    9146
                                             48 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    7394
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6906
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4210
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     675
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     942
                                             11 COMRAM    14    10      4
                   _color_read_Clear (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                             74 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    3801
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    2311
                                             49 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   ___fldiv
     ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
     ___flsub (ARG)
   ___flmul
   ___flsub
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___flsub (ARG)
   ___xxtofl
     _color_read_Clear (ARG)
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_read_Clear
   _initDCmotorsPWM
   _initUSART4
   _send2USART
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      61        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 22:06:55 2024

               _color_read_Red 290C                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
                 ___fldiv@sign 0042                _color_read_Blue 29FC                             l71 2BC2  
                           l80 29AA                             l74 2CF4                             l83 2A4A  
                           l92 1B7C                             l77 295A                             l86 29FA  
                           l94 1B8A                             l95 1BD8                             l97 1BE6  
                           l98 1C38                   ___awdiv@sign 0006            ___wmul@multiplicand 0003  
             _color_read_Clear 29AC               _color_read_Green 295C                            l100 1C46  
                          l101 1C98                            l110 1D8E                            l103 1CA6  
                          l200 2D8C                            l104 1D00                            l106 1D0E  
                          l203 2D78                            l107 1D68                            l206 2D6E  
                          l209 2B14                            l306 2D4A                            l191 2C88  
                          l504 2D4E                            l513 2C5C                            l194 2CAE  
                          l507 2D62                            l188 2C86                            l197 2D82  
                          l367 290A                            l561 2CD4                            l805 2690  
                          l558 2D12                            l495 2D30                            l792 25E0  
                          l858 251C                            _abs 2BF8                            _pad 27EA  
                          _hue 0088                   ___awmod@sign 0006                            wreg 0FE8  
                 ___flmul@aexp 002A                   ___flmul@bexp 002B                   ___flmul@sign 0025  
                 ___flmul@temp 0030                   ___flmul@prod 002C                    main@ambient 00FB  
                 ___fltol@exp1 0054                           l1106 11DA                           l1115 12AA  
                         l1131 2A90                           ?_abs 0007                           l1116 1298  
                         l1230 20B2                           l1143 1B54                           l1223 2056  
                         l1303 22A0                           l1216 1FBE                           l1145 19B4  
                         l3001 25D0                           l1313 2C12                           l1154 19FA  
                         l1090 10AE                           l1091 1074                           l1219 211A  
                         l3003 25D8                           l3011 25F4                           l1156 1A72  
                         l1148 1978                           l1316 2C2A                           l1157 1A60  
                         l3021 2628                           l3013 25FC                           l1309 2AD2  
                         l1182 164C                           l1262 285C                           l1175 1456  
                         l3031 2664                           l3023 2630                           l3015 2600  
                         l3007 25E2                           l1239 2BF6                           l1192 177C  
                         l1184 16C4                           l1328 27E8                           l1336 2B54  
                         l1264 287A                           l1280 2416                           l1185 16B2  
                         l4001 164A                           l1089 10C0                           l3201 2D88  
                         l3033 266A                           l3025 2638                           l3017 260E  
                         l3009 25E6                           l3121 26E4                           l3113 2692  
                         l1098 1390                           l4011 16AA                           l4003 165C  
                         l1179 17BA                           l3211 2B10                           l3203 2AD6  
                         l3027 2646                           l3035 2670                           l3019 2616  
                         l1339 2D8E                           l1259 281E                           l1267 2300  
                         l3123 2704                           l3115 269A                           l1284 2736  
                         l4021 1718                           l4005 166A                           l4101 24DC  
                         l3213 2B12                           l3205 2ADA                           l3301 2C3C  
                         l3037 2680                           l3029 265C                           l3061 2C06  
                         l3117 26C0                           l3125 270C                           l4031 1780  
                         l4015 16D4                           l4023 171C                           l4007 166E  
                         l4103 24EC                           l4111 1F6A                           l3127 2C88  
                         l3207 2AE2                           l3303 2C3E                           l3039 2688  
                         l3119 26C8                           l1288 273E                           l4041 17AA  
                         l4033 1790                           l4025 1736                           l4017 16E0  
                         l4009 167C                           l3401 0EEE                           l4105 24FC  
                         l4113 1F7A                           l3129 2C98                           l3209 2AEA  
                         l3233 2D4E                           l3305 2C46                           l4035 179E  
                         l4027 174A                           l4019 16EE                           l3403 0EFE  
                         l3411 0F28                           l4107 250C                           l4131 2040  
                         l4123 1FF8                           l4115 1F88                           l3235 2D5E  
                         l3059 2BF8                           l3251 2C6E                           l4037 17A0  
                         l4029 1764                           l3501 10F2                           l3421 0F58  
                         l3413 0F38                           l3405 0F0E                           l4045 2A4C  
                         l4141 20C0                           l4133 204C                           l4125 2000  
                         l4117 1FCE                           l3261 290C                           l3253 2C70  
                         l4039 17A6                           l3511 112E                           l3503 1102  
                         l3431 0F98                           l3423 0F66                           l3415 0F3E  
                         l3407 0F1E                           l4047 2A5C                           l4151 2108  
                         l4143 20C2                           l4135 2088                           l4127 200C  
                         l4119 1FE4                           l3191 2D66                           l3263 2952  
                         l3255 2C72                           l3247 2C5E                           l3521 1174  
                         l3513 113C                           l3505 1110                           l3441 0FD2  
                         l3433 0F9A                           l3425 0F68                           l3417 0F50  
                         l3409 0F20                           l4081 2482                           l4073 2442  
                         l4153 210A                           l4145 20C6                           l4137 2094  
                         l4129 203E                           l3193 2D6A                           l3273 29FC  
                         l3281 29F2                           l3257 2C74                           l3249 2C68  
                         l3601 2B9E                           l3531 11F0                           l3523 11A8  
                         l3515 113E                           l3507 111E                           l3451 0FE6  
                         l3443 0FD6                           l3427 0F78                           l3435 0FA2  
                         l3419 0F52                           l4091 24B2                           l4083 2490  
                         l4075 246C                           l4067 2418                           l4147 20EA  
                         l4139 20A2                           l3187 2D7A                           l3195 2D70  
                         l3275 2A42                           l3267 295C                           l3259 2CD8  
                         l3603 2BAE                           l3541 122C                           l3533 1200  
                         l3525 11AA                           l3517 1148                           l3509 112A  
                         l3461 0FFA                           l3453 0FEA                           l3445 0FDA  
                         l3437 0FB2                           l3429 0F88                           l4093 24BC  
                         l4077 246E                           l4069 242E                           l4149 20FA  
                         l3189 2D7E                           l3197 2D74                           l3269 29A2  
                         l3605 2BB8                           l3701 28B6                           l3551 1258  
                         l3543 122E                           l3527 11BA                           l3519 114E  
                         l3471 100E                           l3463 0FFE                           l3455 0FEE  
                         l3447 0FDE                           l3439 0FC4                           l4079 247E  
                         l3199 2D84                           l3279 29AC                           l3711 28F2  
                         l3703 28DA                           l3801 183C                           l3561 1290  
                         l3545 123C                           l3537 1214                           l3553 125A  
                         l3529 11CA                           l3481 106C                           l3465 1002  
                         l3457 0FF2                           l3449 0FE2                           l3473 1012  
                         l4089 24A8                           l3297 2C2C                           l4601 22BA  
                         l3713 28FC                           l3705 28E4                           l3811 1870  
                         l3803 183E                           l3571 130E                           l3547 1244  
                         l3539 121E                           l3555 1268                           l3491 10A2  
                         l3483 1082                           l3475 1016                           l3467 1006  
                         l3459 0FF6                           l3395 0ED2                           l4099 24D0  
                         l3299 2C30                           l4611 22F4                           l4603 22C2  
                         l3715 28FE                           l3707 28E6                           l3901 1B34  
                         l3821 18B6                           l3805 184E                           l3813 1878  
                         l3581 1354                           l3565 12BA                           l3573 1310  
                         l3557 126C                           l3549 1248                           l3493 10AC  
                         l3485 108E                           l3477 1040                           l3469 100A  
                         l3397 0EDE                           l2941 276A                           l4621 234A  
                         l4613 22FC                           l4605 22D2                           l3717 2908  
                         l3709 28F0                           ?_pad 000F                           l3903 1B42  
                         l3831 18DE                           l3823 18BA                           l3815 1888  
                         l3807 185E                           l3591 137E                           l3583 1362  
                         l3575 1320                           l3567 12C6                           l3559 127A  
                         l3495 10CE                           l3487 1092                           l3479 105C  
                         l3399 0EEC                           l2943 2786                           l2935 2740  
                         l4631 239C                           l4623 234E                           l4615 2308  
                         l4607 22D8                           l4703 2A92                           l3681 2D48  
                         l3673 2D32                           l3905 1B48                           l3841 192C  
                         l3817 189E                           l3809 186E                           l3921 13AE  
                         l3593 1380                           l3585 1368                           l3577 1330  
                         l3569 12D4                           l3497 10DE                           l3489 10A0  
                         l2945 27B8                           l2937 2750                           l4641 23EA  
                         l4633 23AC                           l4625 2354                           l4617 2312  
                         l4609 22E8                           l4705 2A9A                           l4721 2BEC  
                         l4713 2BC4                           l4801 1D9C                           l3675 2D3C  
                         l3907 1B4A                           l3851 1976                           l3843 193C  
                         l3835 18F2                           l3819 18AE                           l3827 18CE  
                         l3931 13F4                           l3923 13BE                           l3915 1392  
                         l3587 136A                           l3579 1350                           l2971 253C  
                         l2963 251E                           l2939 2760                           l4643 23FA  
                         l4635 23C6                           l4619 2318                           l4627 2370  
                         l4651 214A                           l4707 2AAA                           l4715 2BCC  
                         l4731 1B8C                           l3691 2D2C                           l3683 2D14  
                         l4811 1DB6                           l4803 1D9C                           l3677 2D44  
                         l3861 19C4                           l3853 1982                           l3845 1944  
                         l3837 190C                           l3829 18DE                           l3781 17D6  
                         l3941 1420                           l3933 13FA                           l3925 13CE  
                         l3917 139E                           l3589 1370                           l2981 2570  
                         l2973 254A                           l2965 2522                           l4573 2B16  
                         l4581 27EA                           l4629 238A                           l4637 23D4  
                         l2957 2CB0                           l4661 2172                           l4653 2158  
                         l4709 2ACA                           l4717 2BD4                           l4741 1BE8  
                         l4733 1BA4                           l4725 1B56                           l3597 2B90  
                         l3693 2D2E                           l3685 2D1E                           l4821 1DD6  
                         l4813 1DBE                           l4805 1DA8                           l3679 2D46  
                         l3863 19DA                           l3871 1A0A                           l3855 19A0  
                         l3847 1954                           l3839 191C                           l3791 180A  
                         l3783 17D8                           l3951 1476                           l3943 1430  
                         l3935 1400                           l3927 13DE                           l3919 13AC  
                         l2991 25AA                           l2983 2578                           l2975 2552  
                         l2967 2530                           l4575 2B22                           l4591 283A  
                         l4583 27F8                           l4639 23E4                           l2959 2CCC  
                         l4671 21D4                           l4655 215C                           l4647 211C  
                         l4719 2BDC                           l4751 1C48                           l4743 1C00  
                         l4735 1BB6                           l4727 1B5C                           l3599 2B94  
                         l3695 287C                           l3687 2D20                           l4831 1DF8  
                         l4823 1DDA                           l4815 1DC6                           l4807 1DAE  
                         l3873 1A18                           l3865 19E0                           l3857 19A2  
                         l3849 1968                           l3785 17E8                           l3793 1812  
                         l3777 17BC                           l3961 14B6                           l3945 1440  
                         l3937 140E                           l3929 13E4                           l2993 25B2  
                         l2985 2580                           l2977 2556                           l2969 2538  
                         l4577 2B30                           l4593 283E                           l4585 2808  
                         l4681 2238                           l4673 21E4                           l4665 217A  
                         l4657 2164                           l4649 2142                           l4761 1CAC  
                         l4753 1C60                           l4745 1C16                           l4737 1BB8  
                         l4729 1B74                           l3697 288C                           l3689 2D2A  
                         l4841 1E02                           l4833 1DFA                           l4825 1DF2  
                         l4817 1DCE                           l4809 1DB2                           l3883 1A82  
                         l3891 1ACA                           l3875 1A1C                           l3867 19EA  
                         l3859 19B2                           l3795 1822                           l3787 17F8  
                         l3779 17C8                           l3971 1500                           l3963 14C2  
                         l3955 148A                           l3947 1446                           l3939 1410  
                         l2995 25B4                           l2987 258E                           l2979 255E  
                         l4579 2B34                           l4595 286A                           l4587 2816  
                         l4683 2250                           l4675 21EE                           l4659 2166  
                         l4667 21B0                           l4771 1CE0                           l4763 1CC4  
                         l4755 1C76                           l4747 1C18                           l4739 1BD0  
                         l3699 28B2                           l4851 1E26                           l4843 1E04  
                         l4835 1DFC                           l4827 1DF4                           l4819 1DD2  
                         l3893 1AE4                           l3885 1A8E                           l3877 1A2A  
                         l3869 19F8                           l3797 1828                           l3789 1808  
                         l3981 1552                           l3973 150C                           l3965 14DA  
                         l3957 1496                           l3949 1466                           l2997 25BA  
                         l2989 2594                           l4589 282A                           l4597 22A2  
                         l4685 225A                           l4677 21F8                           l4669 21C0  
                         l4693 227A                           l4781 1D44                           l4773 1CF8  
                         l4765 1CDA                           l4757 1C78                           l4749 1C30  
                         l4861 1E38                           l4853 1E28                           l4845 1E08  
                         l4837 1DFE                           l4829 1DF6                           l3895 1AFA  
                         l3887 1A9C                           l3879 1A58                           l3799 182E  
                         l3991 15D0                           l3983 1562                           l3975 151C  
                         l3967 14E6                           l3959 14A0                           l2999 25C0  
                         l4599 22A6                           l4679 2218                           l4919 21A2  
                         l4783 1D46                           l4775 1D14                           l4767 1CDC  
                         l4759 1C90                           l4791 2CF6                           l4871 1E86  
                         l4863 1E3A                           l4855 1E2A                           l4847 1E0A  
                         l4839 1E00                           l3897 1B14                           l3889 1AC6  
                         l3993 1606                           l3985 157E                           l3977 1528  
                         l3969 14F2                           l4689 226E                           l4785 1D48  
                         l4777 1D2C                           l4769 1CDE                           l4793 2D0A  
                         l4873 1EA8                           l4865 1E3C                           l4857 1E2C  
                         l4849 1E0C                           l3899 1B30                           l3995 1614  
                         l3987 158A                           l3979 1538                           l4787 1D60  
                         l4779 1D42                           l4875 1F54                           l4867 1E3E  
                         l4859 1E30                           l4795 1D90                           l3997 1632  
                         l3989 15A6                           l4789 1D76                           l4869 1E64  
                         l4797 1D94                           l3999 163C                           l4799 1D98  
                         STR_1 0E96                           STR_2 0ECF                           STR_3 0E45  
                         STR_4 0ECF                           STR_5 0E62                           STR_6 0ECF  
                         STR_7 0E24                           STR_8 0ECF                           STR_9 0E01  
                         u2010 2530                           u2011 252C                           u2020 254A  
                         u2100 2646                           u2021 2546                           u2101 2642  
                         u2030 2570                           u2110 265C                           u2031 256C  
                         u2111 2658                           u3000 17E8                           u2040 258E  
                         u2120 2680                           u3001 17E4                           u2041 258A  
                         u2121 267C                           u3010 17F8                           u2050 25AA  
                         u3011 17F4                           u2051 25A6                           u3100 19C4  
                         u3020 183C                           u2300 2C98                           u2060 25D0  
                         u3101 19C0                           u3021 1838                           u2301 2C94  
                         u2061 25CC                           u3110 19DA                           u3030 184E  
                         u2310 2CAE                           u2070 25F4                           u3111 19D6  
                         u3031 184A                           u2311 2CAA                           u2071 25F0  
                         u3200 1B14                           u3120 19F8                           u3040 185E  
                         u2080 260E                           u4000 2B54                   _BAUD4CONbits 0EE9  
                         u3201 1B10                           u3121 19F4                           u3041 185A  
                         u2081 260A                           u4001 2B50                           u3210 1B42  
                         u3130 1A18                           u3050 189E                           u2410 2D5E  
                         u2090 2628                           u2170 2C06                           u4010 27F8  
                         u3211 1B3E                           u3131 1A14                           u3051 189A  
                         u2411 2D5A                           u2091 2624                           u2171 2C02  
                         u4011 27F4                           u3140 1A2A                           u3060 18DE  
                         u3300 15F0                           u3220 13AC                           u4020 2816  
                         u4100 239C                           u3141 1A26                           u3061 18DA  
                         u3221 13A8                           u4021 2812                           u4101 2398  
                         u3150 1A58                           u3070 1954                           u3310 164A  
                         u3230 13BE                           u2510 0EEC                           u2430 2C5C  
                         u4030 285C                           u4110 23AC                           u3151 1A54  
                         u3071 1950                           u3311 1646                           u3231 13BA  
                         u2511 0EE8                           u2431 2C58                           u4031 2858  
                         u4111 23A8                           u3160 1A6E                           u3080 1976  
                         u3400 179E                           u3320 166A                           u3240 13CE  
                         u2600 1040                           u2520 0EFE                           u4040 286A  
                         u4120 23C6                           u2280 26C0                           u4200 2ACA  
                         u3161 1A6A                           u3081 1972                           u3401 179A  
                         u3321 1666                           u3305 15E6                           u3241 13CA  
                         u2601 103C                           u2521 0EFA                           u4041 2866  
                         u4121 23C2                           u2281 26BC                           u4201 2AC6  
                         u3170 1A82                           u3090 19A0                           u3330 167C  
                         u3250 140E                           u2610 1058                           u2530 0F0E  
                         u2370 2AFE                           u4130 23D4                           u4050 22B6  
                         u2290 2736                           u4210 1B8A                           _T2PR 0FBC  
                         u3171 1A7E                           u3091 199C                           u3331 1678  
                         u3251 140A                           u2611 1052                           u2531 0F0A  
                         u2371 2AF6                           u4131 23D0                           u4051 22B0  
                         u2291 2732                           u4211 1B86                           u3180 1A9C  
                         u3340 16AA                           u3260 1420                           u2700 113C  
                         u2620 105A                           u2540 0F50                           u3500 24FC  
                         u4140 23E4                           u4060 22B8                           u4220 1BE6  
                         u3181 1A98                           u3341 16A6                           u3261 141C  
                         u2701 1138                           u2541 0F4C                           u3501 24F8  
                         u4141 23E0                           u4221 1BE2                           u3190 1AE4  
                         u3350 16C0                           u3270 1430                           u2710 1174  
                         u2630 1082                           u2550 0F66                           u3510 1F7A  
                         u4070 22D2                           u4150 2142                           u4230 1C46  
                         u3191 1AE0                           u3351 16BC                           u3271 142C  
                         u2711 1170                           u2631 107E                           u2551 0F62  
                         u3511 1F76                           u4071 22CE                           u4151 213E  
                         u4231 1C42                           u3360 16D4                           u3280 1466  
                         u2800 1290                           u2720 11BA                           u2640 10A0  
                         u2560 0F78                           u3440 242E                           u3600 2108  
                         u3520 1F88                           u4080 22E8                           u4160 21C0  
                         u4240 1CA6                           u3361 16D0                           u3281 1462  
                         u2801 128C                           u2721 11B6                           u2641 109C  
                         u2561 0F74                           u3441 242A                           u3601 2104  
                         u3521 1F84                           u4081 22E4                           u4161 21BC  
                         u4241 1CA2                           u3370 16EE                           u3290 1476  
                         u2810 12A6                           u2730 11F0                           u2650 10C0  
                         u2570 0F88                           u3450 2462                           u3530 1FE4  
                         u4090 238A                           u4170 21E4                           u4250 1D0E  
                         u3371 16EA                           u3291 1472                           u2811 12A2  
                         u2731 11EC                           u2651 10BC                           u2571 0F84  
                         u3531 1FE0                           u4091 2386                           u4171 21E0  
                         u4251 1D0A                           u4307 1B96                           u3380 1736  
                         u2820 12BA                           u2740 1200                           u2660 10CE  
                         u2580 0FC4                           u3460 2490                           u3540 203A  
                         u2388 2B00                           u4180 2218                           u4260 1D76  
                         u3381 1732                           u2821 12B6                           u2741 11FC  
                         u2661 10CA                           u2581 0FC0                           u3461 248C  
                         u3541 2036                           u4181 2214                           u4261 1D72  
                         u4317 1BF2                           u3390 1764                           u2830 12D4  
                         u2750 122C                           u2670 10DE                           u2590 0FD2  
                         u3470 24A4                           u3550 2084                           u4190 2238  
                         u3391 1760                           u2831 12D0                           u2751 1228  
                         u2671 10DA                           u2591 0FCE                           u3471 24A0  
                         u3455 2458                           u3551 2080                           u4191 2234  
                         u4327 1C52                           u2840 130E                           u2760 123C  
                         u2680 1110                           u3480 24CC                           u3560 20A2  
                         u1960 2750                           u2841 130A                           u2761 1238  
                         u2681 110C                           u3481 24C8                           u3561 209E  
                         u1961 274C                           u4337 1CB6                           u2850 1320  
                         u2770 1258                           u2690 111E                           u3490 24EC  
                         u3570 20B2                           u1970 2760                           u2851 131C  
                         u2771 1254                           u2691 111A                           u3491 24E8  
                         u3571 20AE                           u1971 275C                           u4347 1D1E  
                         u2860 1330                           u2780 1268                           u3580 20C0  
                         u1980 2786                           u2861 132C                           u2781 1264  
                         u3581 20BC                           u1981 2782                           u4357 1D80  
                         u2870 1350                           u2790 127A                           u3590 20FA  
                         u1990 27B8                           u2871 134C                           u2791 1276  
                         u3591 20F6                           u4367 2C40                           u1991 27B4  
                         u4287 1E18                           u2880 1362                           u2881 135E  
                         u4297 2BA4                           u2890 137E                           u2891 137A  
                         u2990 17D6                           u2991 17D2                    main@current 00F1  
                  main@maximum 00F5                           abs@a 0007                           _dbuf 013C  
                         _main 1D90                           _dtoa 22A2                           _prec 0094  
                         pad@i 0015                           pad@p 0012                           fsr1h 0FE2  
                         fsr2h 0FDA                           indf2 0FDF                           fsr1l 0FE1  
                         fsr2l 0FD9                           prodh 0FF4                           prodl 0FF3  
                         start 0000               __end_of_ADC_init 2D4C                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 295C                   ___param_bank 0000                          ??_abs 0009  
                        ??_pad 0014                  ___fltol@sign1 0053                __end_of___fladd 1392  
                        ?_main 0001                          ?_dtoa 0017                          _ADPCH 0F5F  
              __end_of___fldiv 1B56                __end_of___awdiv 25E2                          STR_10 0ECF  
                        STR_11 0E7D                          STR_12 0ECF                          STR_13 0EAE  
                        STR_14 0EC3                __end_of___awmod 2692                __end_of___flmul 17BC  
              __end_of___flsub 2A92                __end_of___fltol 251E                ___awdiv@divisor 0003  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 2D64  
   __end_of_I2C_2_Master_Start 2D84     __end_of_I2C_2_Master_Write 2D70                          _flags 005B  
          read_prec_or_width@c 0009            read_prec_or_width@n 000A                          _fputc 2740  
                        _fputs 2B16                          pad@fp 000F                          _width 0092  
                        _putch 2D8E                          dtoa@d 0018                          dtoa@i 0020  
                        dtoa@p 001C                          dtoa@s 001F                          dtoa@w 001D  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 2BF8  
      __end_of_color_read_Blue 2A4C          _I2C_2_Master_RepStart 2D84                ?_color_read_Red 0005  
              __initialization 2B56                   __end_of_main 1F68                   __end_of_dtoa 2418  
                       ??_main 00EF                         ??_dtoa 001A                  __activetblptr 0003  
   __end_of_read_prec_or_width 2740                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         _RG6PPS 0E88  
                vfpfcnvrt@done 002B       __end_of_color_click_init 2BC4                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 211C                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 0030                      ??___fladd 0009                         ___wmul 2CB0  
                    ??___fldiv 003A                      ??___awdiv 0005                      ??___awmod 0005  
                    ??___flmul 0021                      ??___flsub 0019                      ??___fltol 004F  
         read_prec_or_width@ap 0008                         clear_0 2B6E                         clear_1 2B7A  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         _motorL 00B4  
                       _motorR 00AB                         isa$std 0001                ___awmod@counter 0005  
           send2USART@hue_char 00BD                         pad@buf 0010                         dtoa@fp 0017  
                       fputc@c 0001                         fputs@c 000C                         fputs@i 000D  
                       fputs@s 0009                   __mediumconst 0000        calibration_routine@cCal 0044  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
                    ?_ADC_init 0001               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 2AD4              ??_initDCmotorsPWM 0003                      ??_sprintf 0037  
                 ___xxtofl@arg 0016                   ___xxtofl@exp 0015                   ___xxtofl@val 000C  
                   __accesstop 0060        __end_of__initialization 2B8A       __end_of_color_read_Clear 29FC  
     __end_of_color_read_Green 29AC         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
                   ___fltol@f1 004B               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2D90                  __end_of_fputc 27EA                  __end_of_fputs 2B56  
                __end_of_putch 2D90                     ??_ADC_init 0001                 main@clear_norm 00F9  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK0 0060                     __pbssBANK1 0100              _color_writetoaddr 2CD6  
                 _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                      ?___xxtofl 000C                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 2CF6  
                    _ADREFbits 0F58             _I2C_2_Master_Start 2D7A                     _initUSART4 2D14  
           _I2C_2_Master_Write 2D64                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___fladd 0ED2  
                      ___fldiv 17BC                        ___awdiv 251E                        ___awmod 25E2  
                      ___flmul 1392                        ___flsub 2A4C                        ___fltol 2418  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D  
                 __psmallconst 0E00                        __pcinit 2B56                        __ramtop 0E00  
                   _send2USART 2CF6                        __ptext0 1D90                        __ptext1 2CF6  
                      __ptext2 2D14                        __ptext3 287C                        __ptext4 2B90  
                      __ptext5 2CD6                        __ptext6 2C5E                        __ptext7 1B56  
                      __ptext8 2BC4                        __ptext9 2A92                      _T2CONbits 0FBD  
        read_prec_or_width@fmt 0007                     ??___xxtofl 0010               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005F                        _sprintf 2BC4  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 2B8A  
                      fputc@fp 0003                        fputs@fp 000B              ?_color_click_init 0001  
           _read_prec_or_width 2692             ??_color_click_init 0005               _colorCalibration 00A1  
            __end_of_vfpfcnvrt 22A2                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0027                     ??_vfprintf 0030                   _colorCurrent 0097  
              _initDCmotorsPWM 287C                      _PORTFbits 0F8E                    ___fladd@grs 0010  
                ___xxtofl@sign 0014                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88           ??_read_prec_or_width 0009  
                  ___fldiv@grs 0045                    ___fldiv@rem 003E       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 0026                    _CCP1CONbits 0FAB  
          _calibration_routine 1B56              ?_color_read_Clear 0005                   _EUSART4RXbuf 0074  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 2CD6                    ?_send2USART 0044           ?_calibration_routine 0044  
          color_read_Clear@tmp 000A            start_initialization 2B56   calibration_routine@cal_state 0047  
                  __end_of_abs 2C2C                    __end_of_pad 287C                  _TxBufWriteCnt 005D  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 290C                    vfprintf@fmt 002E  
                     ??___wmul 0005                    __pdataBANK0 00FF          ??_calibration_routine 0045  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0036  
                    ___fldiv@b 0032                      ___flmul@a 001D                      ___flmul@b 0019  
                  __pbssCOMRAM 005B                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 00BD                      _dtoa$2659 001A                       ?___fladd 0001  
                     ?___fldiv 0032                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 0019                       ?___flsub 0011                       ?___fltol 004B  
                 _readingIndex 0096           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 2C88              _I2C_2_Master_Init 2C5E  
            _I2C_2_Master_Read 2AD4              _I2C_2_Master_Stop 2D70                   _RxBufReadCnt 005E  
                     _ADC_init 2D32             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0031              _sendStringSerial4 2C2C            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0003  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 211C                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 2CB0      __end_of_I2C_2_Master_Init 2C88      __end_of_I2C_2_Master_Read 2B16  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 2D7A    I2C_2_Master_Write@data_byte 0002  
                  _ldrReadings 0060              ??_color_read_Blue 0007                   _TxBufReadCnt 005C  
    __end_of_sendStringSerial4 2C5E  __end_of_I2C_2_Master_RepStart 2D8E             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 002F  
                     __Lrparam 0000                     vfprintf@fp 002D                     ?_vfpfcnvrt 0022  
                 ??_send2USART 0046                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                     _dataFlag 00FF                     sprintf@fmt 0032                       ___xxtofl 1F68  
           __end_of_initUSART4 2D32                       __ptext10 211C                       __ptext11 2692  
                     __ptext20 251E                       __ptext12 2CB0                       __ptext21 2C2C  
                     __ptext13 22A2                       __ptext30 2D84                       __ptext22 2D4C  
                     __ptext14 27EA                       __ptext31 2AD4                       __ptext23 290C  
                     __ptext15 2B16                       __ptext32 2C88                       __ptext24 295C  
                     __ptext16 2740                       __ptext33 1F68                       __ptext25 29AC  
                     __ptext17 2D8E                       __ptext34 2418                       __ptext26 29FC  
                     __ptext18 2BF8                       __ptext35 2A4C                       __ptext27 2D64  
                     __ptext19 25E2                       __ptext36 0ED2                       __ptext28 2D70  
                     __ptext37 1392                       __ptext29 2D7A                       __ptext38 17BC  
                     __ptext39 2D32                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
           __end_of_send2USART 2D14                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     _vfprintf 2A92                      sprintf@ap 0037    __end_of_calibration_routine 1D90  
                send2USART@hue 0044                    ??_vfpfcnvrt 0025               _color_click_init 2B90  
                     sprintf@f 0038                       sprintf@s 0031                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                  ___fladd@signs 000D                     _TX4STAbits 0EE8  
              _sendCharSerial4 2D4C                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
