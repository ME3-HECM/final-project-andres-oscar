

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 12:18:43 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 21/07/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001A5E                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _dataFlag
    90   001A5E  01                 	db	1
    91   000000                     _TX4REG	set	3812
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _SSP2CON2bits	set	3802
    95   000000                     _RX4PPS	set	3605
    96   000000                     _SSP2CLKPPS	set	3612
    97   000000                     _SSP2DATPPS	set	3613
    98   000000                     _ANSELDbits	set	3751
    99   000000                     _ANSELFbits	set	3764
   100   000000                     _TRISFbits	set	3974
   101   000000                     _SSP2BUF	set	3797
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _ADREFbits	set	3928
   105   000000                     _ADPCH	set	3935
   106   000000                     _ADRESH	set	3940
   107   000000                     _ADCON0bits	set	3936
   108   000000                     _LATDbits	set	3964
   109   000000                     _TRISDbits	set	3972
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _SSP2CON2	set	3802
   115   000000                     _SSP2STAT	set	3800
   116   000000                     _PIE4bits	set	3629
   117   000000                     _PIR4bits	set	3639
   118   000000                     _RC0PPS	set	3682
   119   000000                     _RD5PPS	set	3695
   120   000000                     _RD6PPS	set	3696
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     STR_4:
   127   000E01  56                 	db	86	;'V'
   128   000E02  6F                 	db	111	;'o'
   129   000E03  6C                 	db	108	;'l'
   130   000E04  74                 	db	116	;'t'
   131   000E05  61                 	db	97	;'a'
   132   000E06  67                 	db	103	;'g'
   133   000E07  65                 	db	101	;'e'
   134   000E08  20                 	db	32
   135   000E09  3D                 	db	61	;'='
   136   000E0A  20                 	db	32
   137   000E0B  25                 	db	37
   138   000E0C  64                 	db	100	;'d'
   139   000E0D  2E                 	db	46
   140   000E0E  25                 	db	37
   141   000E0F  30                 	db	48	;'0'
   142   000E10  32                 	db	50	;'2'
   143   000E11  64                 	db	100	;'d'
   144   000E12  2C                 	db	44
   145   000E13  20                 	db	32
   146   000E14  20                 	db	32
   147   000E15  00                 	db	0
   148   000E16                     STR_3:
   149   000E16  47                 	db	71	;'G'
   150   000E17  72                 	db	114	;'r'
   151   000E18  65                 	db	101	;'e'
   152   000E19  65                 	db	101	;'e'
   153   000E1A  6E                 	db	110	;'n'
   154   000E1B  3D                 	db	61	;'='
   155   000E1C  25                 	db	37
   156   000E1D  64                 	db	100	;'d'
   157   000E1E  2C                 	db	44
   158   000E1F  20                 	db	32
   159   000E20  20                 	db	32
   160   000E21  00                 	db	0
   161   000E22                     STR_2:
   162   000E22  42                 	db	66	;'B'
   163   000E23  6C                 	db	108	;'l'
   164   000E24  75                 	db	117	;'u'
   165   000E25  65                 	db	101	;'e'
   166   000E26  3D                 	db	61	;'='
   167   000E27  25                 	db	37
   168   000E28  64                 	db	100	;'d'
   169   000E29  2C                 	db	44
   170   000E2A  20                 	db	32
   171   000E2B  20                 	db	32
   172   000E2C  00                 	db	0
   173   000E2D                     STR_1:
   174   000E2D  52                 	db	82	;'R'
   175   000E2E  65                 	db	101	;'e'
   176   000E2F  64                 	db	100	;'d'
   177   000E30  3D                 	db	61	;'='
   178   000E31  25                 	db	37
   179   000E32  64                 	db	100	;'d'
   180   000E33  2C                 	db	44
   181   000E34  20                 	db	32
   182   000E35  20                 	db	32
   183   000E36  00                 	db	0
   184   000E37  00                 	db	0	; dummy byte at the end
   185   000000                     
   186                           ; #config settings
   187                           
   188                           	psect	cinit
   189   0018EA                     __pcinit:
   190                           	callstack 0
   191   0018EA                     start_initialization:
   192                           	callstack 0
   193   0018EA                     __initialization:
   194                           	callstack 0
   195                           
   196                           ; Initialize objects allocated to COMRAM (1 bytes)
   197                           ; load TBLPTR registers with __pidataCOMRAM
   198   0018EA  0E5E               	movlw	low __pidataCOMRAM
   199   0018EC  6EF6               	movwf	tblptrl,c
   200   0018EE  0E1A               	movlw	high __pidataCOMRAM
   201   0018F0  6EF7               	movwf	tblptrh,c
   202   0018F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   203   0018F4  6EF8               	movwf	tblptru,c
   204   0018F6  0009               	tblrd		*+	;fetch initializer
   205   0018F8  CFF5 F057          	movff	tablat,__pdataCOMRAM
   206                           
   207                           ; Clear objects allocated to BANK0 (132 bytes)
   208   0018FC  EE00  F060         	lfsr	0,__pbssBANK0
   209   001900  0E84               	movlw	132
   210   001902                     clear_0:
   211   001902  6AEE               	clrf	postinc0,c
   212   001904  06E8               	decf	wreg,f,c
   213   001906  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to COMRAM (10 bytes)
   216   001908  EE00  F04D         	lfsr	0,__pbssCOMRAM
   217   00190C  0E0A               	movlw	10
   218   00190E                     clear_1:
   219   00190E  6AEE               	clrf	postinc0,c
   220   001910  06E8               	decf	wreg,f,c
   221   001912  E1FD               	bnz	clear_1
   222   001914                     end_of_initialization:
   223                           	callstack 0
   224   001914                     __end_of__initialization:
   225                           	callstack 0
   226   001914  0100               	movlb	0
   227   001916  EF91  F008         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssCOMRAM
   230   00004D                     __pbssCOMRAM:
   231                           	callstack 0
   232   00004D                     _width:
   233                           	callstack 0
   234   00004D                     	ds	2
   235   00004F                     _prec:
   236                           	callstack 0
   237   00004F                     	ds	2
   238   000051                     _flags:
   239                           	callstack 0
   240   000051                     	ds	1
   241   000052                     _readingIndex:
   242                           	callstack 0
   243   000052                     	ds	1
   244   000053                     _TxBufReadCnt:
   245                           	callstack 0
   246   000053                     	ds	1
   247   000054                     _TxBufWriteCnt:
   248                           	callstack 0
   249   000054                     	ds	1
   250   000055                     _RxBufReadCnt:
   251                           	callstack 0
   252   000055                     	ds	1
   253   000056                     _RxBufWriteCnt:
   254                           	callstack 0
   255   000056                     	ds	1
   256                           
   257                           	psect	dataCOMRAM
   258   000057                     __pdataCOMRAM:
   259                           	callstack 0
   260   000057                     _dataFlag:
   261                           	callstack 0
   262   000057                     	ds	1
   263                           
   264                           	psect	bssBANK0
   265   000060                     __pbssBANK0:
   266                           	callstack 0
   267   000060                     _EUSART4TXbuf:
   268                           	callstack 0
   269   000060                     	ds	60
   270   00009C                     _ldrReadings:
   271                           	callstack 0
   272   00009C                     	ds	20
   273   0000B0                     _EUSART4RXbuf:
   274                           	callstack 0
   275   0000B0                     	ds	20
   276   0000C4                     _dbuf:
   277                           	callstack 0
   278   0000C4                     	ds	32
   279                           
   280                           	psect	cstackBANK1
   281   000100                     __pcstackBANK1:
   282                           	callstack 0
   283   000100                     main@buf:
   284                           	callstack 0
   285                           
   286                           ; 50 bytes @ 0x0
   287   000100                     	ds	50
   288   000132                     main@red_char:
   289                           	callstack 0
   290                           
   291                           ; 50 bytes @ 0x32
   292   000132                     	ds	50
   293   000164                     main@blue_char:
   294                           	callstack 0
   295                           
   296                           ; 50 bytes @ 0x64
   297   000164                     	ds	50
   298   000196                     main@green_char:
   299                           	callstack 0
   300                           
   301                           ; 50 bytes @ 0x96
   302   000196                     	ds	50
   303   0001C8                     main@battery_level:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xC8
   307   0001C8                     	ds	2
   308   0001CA                     main@red:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xCA
   312   0001CA                     	ds	2
   313   0001CC                     main@blue:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xCC
   317   0001CC                     	ds	2
   318   0001CE                     main@green:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xCE
   322   0001CE                     	ds	2
   323                           
   324                           	psect	cstackCOMRAM
   325   000001                     __pcstackCOMRAM:
   326                           	callstack 0
   327   000001                     ??_I2C_2_Master_Idle:
   328   000001                     ?_ADC_getval:
   329                           	callstack 0
   330   000001                     ?___wmul:
   331                           	callstack 0
   332   000001                     ?___awdiv:
   333                           	callstack 0
   334   000001                     ?___awmod:
   335                           	callstack 0
   336   000001                     sendCharSerial4@charToSend:
   337                           	callstack 0
   338   000001                     ___wmul@multiplier:
   339                           	callstack 0
   340   000001                     ___awdiv@dividend:
   341                           	callstack 0
   342   000001                     ___awmod@dividend:
   343                           	callstack 0
   344   000001                     fputc@c:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x0
   348   000001                     	ds	1
   349   000002                     ??_I2C_2_Master_Read:
   350   000002                     I2C_2_Master_Write@data_byte:
   351                           	callstack 0
   352   000002                     sendStringSerial4@string:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x1
   356   000002                     	ds	1
   357   000003                     color_writetoaddr@value:
   358                           	callstack 0
   359   000003                     I2C_2_Master_Read@ack:
   360                           	callstack 0
   361   000003                     fputc@fp:
   362                           	callstack 0
   363   000003                     ADC_getval@tmpval:
   364                           	callstack 0
   365   000003                     ___wmul@multiplicand:
   366                           	callstack 0
   367   000003                     ___awdiv@divisor:
   368                           	callstack 0
   369   000003                     ___awmod@divisor:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2
   373   000003                     	ds	1
   374   000004                     ??_fputc:
   375   000004                     color_writetoaddr@address:
   376                           	callstack 0
   377   000004                     I2C_2_Master_Read@tmp:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x3
   381   000004                     	ds	1
   382   000005                     ??_color_click_init:
   383   000005                     ?_color_read_Red:
   384                           	callstack 0
   385   000005                     ?_color_read_Green:
   386                           	callstack 0
   387   000005                     ?_color_read_Blue:
   388                           	callstack 0
   389   000005                     ___awdiv@counter:
   390                           	callstack 0
   391   000005                     ___awmod@counter:
   392                           	callstack 0
   393   000005                     ___wmul@product:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x4
   397   000005                     	ds	1
   398   000006                     ___awdiv@sign:
   399                           	callstack 0
   400   000006                     ___awmod@sign:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x5
   404   000006                     	ds	1
   405   000007                     ??_color_read_Red:
   406   000007                     ??_color_read_Green:
   407   000007                     ??_color_read_Blue:
   408   000007                     ?_abs:
   409                           	callstack 0
   410   000007                     ?___lwdiv:
   411                           	callstack 0
   412   000007                     ?_read_prec_or_width:
   413                           	callstack 0
   414   000007                     read_prec_or_width@fmt:
   415                           	callstack 0
   416   000007                     ___awdiv@quotient:
   417                           	callstack 0
   418   000007                     ___lwdiv@dividend:
   419                           	callstack 0
   420   000007                     abs@a:
   421                           	callstack 0
   422                           
   423                           ; 2 bytes @ 0x6
   424   000007                     	ds	1
   425   000008                     read_prec_or_width@ap:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x7
   429   000008                     	ds	1
   430   000009                     ??_abs:
   431   000009                     read_prec_or_width@c:
   432                           	callstack 0
   433   000009                     fputs@s:
   434                           	callstack 0
   435   000009                     ___lwdiv@divisor:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x8
   439   000009                     	ds	1
   440   00000A                     fputs@fp:
   441                           	callstack 0
   442   00000A                     color_read_Red@tmp:
   443                           	callstack 0
   444   00000A                     color_read_Green@tmp:
   445                           	callstack 0
   446   00000A                     color_read_Blue@tmp:
   447                           	callstack 0
   448   00000A                     read_prec_or_width@n:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x9
   452   00000A                     	ds	1
   453   00000B                     fputs@c:
   454                           	callstack 0
   455   00000B                     ___lwdiv@quotient:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xA
   459   00000B                     	ds	1
   460   00000C                     fputs@i:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xB
   464   00000C                     	ds	1
   465   00000D                     ___lwdiv@counter:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xC
   469   00000D                     	ds	1
   470   00000E                     pad@fp:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xD
   474   00000E                     	ds	1
   475   00000F                     pad@buf:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0xE
   479   00000F                     	ds	1
   480   000010                     pad@p:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xF
   484   000010                     	ds	2
   485   000012                     ??_pad:
   486                           
   487                           ; 1 bytes @ 0x11
   488   000012                     	ds	1
   489   000013                     pad@i:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x12
   493   000013                     	ds	2
   494   000015                     dtoa@fp:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x14
   498   000015                     	ds	1
   499   000016                     dtoa@d:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x15
   503   000016                     	ds	2
   504   000018                     _dtoa$1244:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x17
   508   000018                     	ds	2
   509   00001A                     dtoa@p:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x19
   513   00001A                     	ds	1
   514   00001B                     dtoa@w:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1A
   518   00001B                     	ds	2
   519   00001D                     dtoa@s:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x1C
   523   00001D                     	ds	1
   524   00001E                     dtoa@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1D
   528   00001E                     	ds	2
   529   000020                     vfpfcnvrt@fp:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x1F
   533   000020                     	ds	1
   534   000021                     vfpfcnvrt@fmt:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x20
   538   000021                     	ds	1
   539   000022                     vfpfcnvrt@ap:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x21
   543   000022                     	ds	1
   544   000023                     ??_vfpfcnvrt:
   545                           
   546                           ; 1 bytes @ 0x22
   547   000023                     	ds	2
   548   000025                     vfpfcnvrt@convarg:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x24
   552   000025                     	ds	4
   553   000029                     vfpfcnvrt@done:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x28
   557   000029                     	ds	1
   558   00002A                     vfpfcnvrt@cp:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x29
   562   00002A                     	ds	1
   563   00002B                     ?_vfprintf:
   564                           	callstack 0
   565   00002B                     vfprintf@fp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x2A
   569   00002B                     	ds	1
   570   00002C                     vfprintf@fmt:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x2B
   574   00002C                     	ds	1
   575   00002D                     vfprintf@ap:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x2C
   579   00002D                     	ds	1
   580   00002E                     vfprintf@cfmt:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x2D
   584   00002E                     	ds	1
   585   00002F                     ?_sprintf:
   586                           	callstack 0
   587   00002F                     sprintf@s:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x2E
   591   00002F                     	ds	2
   592   000031                     sprintf@fmt:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x30
   596   000031                     	ds	5
   597   000036                     sprintf@ap:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x35
   601   000036                     	ds	1
   602   000037                     sprintf@f:
   603                           	callstack 0
   604                           
   605                           ; 12 bytes @ 0x36
   606   000037                     	ds	12
   607   000043                     ADC2String@buf:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x42
   611   000043                     	ds	2
   612   000045                     ADC2String@ADC_val:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x44
   616   000045                     	ds	2
   617   000047                     ??_ADC2String:
   618                           
   619                           ; 1 bytes @ 0x46
   620   000047                     	ds	2
   621   000049                     ADC2String@frac_part:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x48
   625   000049                     	ds	2
   626   00004B                     ADC2String@int_part:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x4A
   630   00004B                     	ds	2
   631   00004D                     
   632                           ; 1 bytes @ 0x4C
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   635 ;;
   636 ;; *************** function _main *****************
   637 ;; Defined at:
   638 ;;		line 26 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  green_char     50  150[BANK1 ] unsigned char [50]
   643 ;;  blue_char      50  100[BANK1 ] unsigned char [50]
   644 ;;  red_char       50   50[BANK1 ] unsigned char [50]
   645 ;;  buf            50    0[BANK1 ] unsigned char [50]
   646 ;;  green           2  206[BANK1 ] unsigned int 
   647 ;;  blue            2  204[BANK1 ] unsigned int 
   648 ;;  red             2  202[BANK1 ] unsigned int 
   649 ;;  battery_leve    2  200[BANK1 ] unsigned int 
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   660 ;;      Locals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   662 ;;      Totals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   663 ;;Total ram usage:      208 bytes
   664 ;; Hardware stack levels required when called: 9
   665 ;; This function calls:
   666 ;;		_ADC2String
   667 ;;		_ADC_getval
   668 ;;		_ADC_init
   669 ;;		_color_click_init
   670 ;;		_color_read_Blue
   671 ;;		_color_read_Green
   672 ;;		_color_read_Red
   673 ;;		_initUSART4
   674 ;;		_sendStringSerial4
   675 ;;		_sprintf
   676 ;; This function is called by:
   677 ;;		Startup code after reset
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text0
   682   001122                     __ptext0:
   683                           	callstack 0
   684   001122                     _main:
   685                           	callstack 22
   686   001122                     
   687                           ;main.c: 28:     ADC_init();
   688   001122  EC00  F00D         	call	_ADC_init	;wreg free
   689   001126                     
   690                           ;main.c: 29:     color_click_init();
   691   001126  EC41  F00C         	call	_color_click_init	;wreg free
   692   00112A                     
   693                           ;main.c: 30:     initUSART4();
   694   00112A  ECF1  F00C         	call	_initUSART4	;wreg free
   695   00112E                     
   696                           ;main.c: 34:     LATDbits.LATD7=0;
   697   00112E  9E7C               	bcf	124,7,c	;volatile
   698   001130                     
   699                           ;main.c: 35:     TRISDbits.TRISD7=0;
   700   001130  9E84               	bcf	132,7,c	;volatile
   701   001132                     l143:
   702                           
   703                           ;main.c: 51:         battery_level = ADC_getval();
   704   001132  EC8D  F00C         	call	_ADC_getval	;wreg free
   705   001136  C001  F1C8         	movff	?_ADC_getval,main@battery_level
   706   00113A  C002  F1C9         	movff	?_ADC_getval+1,main@battery_level+1
   707                           
   708                           ;main.c: 53:         red = color_read_Red();
   709   00113E  EC2F  F00B         	call	_color_read_Red	;wreg free
   710   001142  C005  F1CA         	movff	?_color_read_Red,main@red
   711   001146  C006  F1CB         	movff	?_color_read_Red+1,main@red+1
   712                           
   713                           ;main.c: 54:         blue = color_read_Blue();
   714   00114A  EC7F  F00B         	call	_color_read_Blue	;wreg free
   715   00114E  C005  F1CC         	movff	?_color_read_Blue,main@blue
   716   001152  C006  F1CD         	movff	?_color_read_Blue+1,main@blue+1
   717                           
   718                           ;main.c: 55:         green = color_read_Green();
   719   001156  EC57  F00B         	call	_color_read_Green	;wreg free
   720   00115A  C005  F1CE         	movff	?_color_read_Green,main@green
   721   00115E  C006  F1CF         	movff	?_color_read_Green+1,main@green+1
   722   001162                     
   723                           ;main.c: 58:         ADC2String(buf, battery_level);
   724   001162  0E00               	movlw	low main@buf
   725   001164  6E43               	movwf	ADC2String@buf^0,c
   726   001166  0E01               	movlw	high main@buf
   727   001168  6E44               	movwf	(ADC2String@buf+1)^0,c
   728   00116A  C1C8  F045         	movff	main@battery_level,ADC2String@ADC_val
   729   00116E  C1C9  F046         	movff	main@battery_level+1,ADC2String@ADC_val+1
   730   001172  EC69  F00A         	call	_ADC2String	;wreg free
   731   001176                     
   732                           ;main.c: 59:         sprintf(red_char,"Red=%d,  ",red);
   733   001176  0E32               	movlw	low main@red_char
   734   001178  6E2F               	movwf	sprintf@s^0,c
   735   00117A  0E01               	movlw	high main@red_char
   736   00117C  6E30               	movwf	(sprintf@s+1)^0,c
   737   00117E  0E2D               	movlw	low STR_1
   738   001180  6E31               	movwf	sprintf@fmt^0,c
   739   001182  C1CA  F032         	movff	main@red,?_sprintf+3
   740   001186  C1CB  F033         	movff	main@red+1,?_sprintf+4
   741   00118A  ECE9  F00B         	call	_sprintf	;wreg free
   742   00118E                     
   743                           ;main.c: 60:         sprintf(blue_char,"Blue=%d,  ",blue);
   744   00118E  0E64               	movlw	low main@blue_char
   745   001190  6E2F               	movwf	sprintf@s^0,c
   746   001192  0E01               	movlw	high main@blue_char
   747   001194  6E30               	movwf	(sprintf@s+1)^0,c
   748   001196  0E22               	movlw	low STR_2
   749   001198  6E31               	movwf	sprintf@fmt^0,c
   750   00119A  C1CC  F032         	movff	main@blue,?_sprintf+3
   751   00119E  C1CD  F033         	movff	main@blue+1,?_sprintf+4
   752   0011A2  ECE9  F00B         	call	_sprintf	;wreg free
   753   0011A6                     
   754                           ;main.c: 61:         sprintf(green_char,"Green=%d,  ",green);
   755   0011A6  0E96               	movlw	low main@green_char
   756   0011A8  6E2F               	movwf	sprintf@s^0,c
   757   0011AA  0E01               	movlw	high main@green_char
   758   0011AC  6E30               	movwf	(sprintf@s+1)^0,c
   759   0011AE  0E16               	movlw	low STR_3
   760   0011B0  6E31               	movwf	sprintf@fmt^0,c
   761   0011B2  C1CE  F032         	movff	main@green,?_sprintf+3
   762   0011B6  C1CF  F033         	movff	main@green+1,?_sprintf+4
   763   0011BA  ECE9  F00B         	call	_sprintf	;wreg free
   764   0011BE                     
   765                           ;main.c: 64:         sendStringSerial4(buf);
   766   0011BE  0E00               	movlw	low main@buf
   767   0011C0  6E02               	movwf	sendStringSerial4@string^0,c
   768   0011C2  0E01               	movlw	high main@buf
   769   0011C4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   770   0011C6  EC25  F00C         	call	_sendStringSerial4	;wreg free
   771   0011CA                     
   772                           ;main.c: 65:         sendStringSerial4(red_char);
   773   0011CA  0E32               	movlw	low main@red_char
   774   0011CC  6E02               	movwf	sendStringSerial4@string^0,c
   775   0011CE  0E01               	movlw	high main@red_char
   776   0011D0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   777   0011D2  EC25  F00C         	call	_sendStringSerial4	;wreg free
   778   0011D6                     
   779                           ;main.c: 66:         sendStringSerial4(blue_char);
   780   0011D6  0E64               	movlw	low main@blue_char
   781   0011D8  6E02               	movwf	sendStringSerial4@string^0,c
   782   0011DA  0E01               	movlw	high main@blue_char
   783   0011DC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   784   0011DE  EC25  F00C         	call	_sendStringSerial4	;wreg free
   785   0011E2                     
   786                           ;main.c: 67:         sendStringSerial4(green_char);
   787   0011E2  0E96               	movlw	low main@green_char
   788   0011E4  6E02               	movwf	sendStringSerial4@string^0,c
   789   0011E6  0E01               	movlw	high main@green_char
   790   0011E8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   791   0011EA  EC25  F00C         	call	_sendStringSerial4	;wreg free
   792   0011EE  EF99  F008         	goto	l143
   793   0011F2  EF00  F000         	goto	start
   794   0011F6                     __end_of_main:
   795                           	callstack 0
   796                           
   797 ;; *************** function _sendStringSerial4 *****************
   798 ;; Defined at:
   799 ;;		line 41 in file "serial.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  string          2    1[COMRAM] PTR unsigned char 
   802 ;;		 -> sendAllReadings@buffer(10), main@green_char(50), main@blue_char(50), main@red_char(50), 
   803 ;;		 -> main@buf(50), 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   819 ;;Total ram usage:        2 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 1
   822 ;; This function calls:
   823 ;;		_sendCharSerial4
   824 ;; This function is called by:
   825 ;;		_main
   826 ;;		_sendAllReadings
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text1
   831   00184A                     __ptext1:
   832                           	callstack 0
   833   00184A                     _sendStringSerial4:
   834                           	callstack 29
   835   00184A                     
   836                           ;serial.c: 44:     while(*string != 0){
   837   00184A  EF34  F00C         	goto	l1998
   838   00184E                     l1992:
   839                           
   840                           ;serial.c: 46:   sendCharSerial4(*string++);
   841   00184E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   842   001852  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   843   001856  50DF               	movf	indf2,w,c
   844   001858  EC0D  F00D         	call	_sendCharSerial4
   845   00185C  4A02               	infsnz	sendStringSerial4@string^0,f,c
   846   00185E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
   847   001860                     
   848                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
   849   001860  0E6A               	movlw	106
   850   001862                     u1177:
   851   001862  2EE8               	decfsz	wreg,f,c
   852   001864  D7FE               	bra	u1177
   853   001866  D000               	nop2	
   854   001868                     l1998:
   855                           
   856                           ;serial.c: 44:     while(*string != 0){
   857   001868  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   858   00186C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   859   001870  50DF               	movf	indf2,w,c
   860   001872  A4D8               	btfss	status,2,c
   861   001874  EF3E  F00C         	goto	u1101
   862   001878  EF40  F00C         	goto	u1100
   863   00187C                     u1101:
   864   00187C  EF27  F00C         	goto	l1992
   865   001880                     u1100:
   866   001880  0012               	return		;funcret
   867   001882                     __end_of_sendStringSerial4:
   868                           	callstack 0
   869                           
   870 ;; *************** function _sendCharSerial4 *****************
   871 ;; Defined at:
   872 ;;		line 35 in file "serial.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  charToSend      1    wreg     unsigned char 
   875 ;; Auto vars:     Size  Location     Type
   876 ;;  charToSend      1    0[COMRAM] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   890 ;;Total ram usage:        1 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_sendStringSerial4
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text2
   900   001A1A                     __ptext2:
   901                           	callstack 0
   902   001A1A                     _sendCharSerial4:
   903                           	callstack 29
   904                           
   905                           ;incstack = 0
   906                           ;sendCharSerial4@charToSend stored from wreg
   907   001A1A  6E01               	movwf	sendCharSerial4@charToSend^0,c
   908   001A1C                     l206:
   909   001A1C  010E               	movlb	14	; () banked
   910   001A1E  A537               	btfss	55,2,b	;volatile
   911   001A20  EF14  F00D         	goto	u1051
   912   001A24  EF16  F00D         	goto	u1050
   913   001A28                     u1051:
   914   001A28  EF0E  F00D         	goto	l206
   915   001A2C                     u1050:
   916   001A2C                     
   917                           ; BSR set to: 14
   918                           ;serial.c: 37:     TX4REG = charToSend;
   919   001A2C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
   920   001A30                     
   921                           ; BSR set to: 14
   922   001A30  0012               	return		;funcret
   923   001A32                     __end_of_sendCharSerial4:
   924                           	callstack 0
   925                           
   926 ;; *************** function _initUSART4 *****************
   927 ;; Defined at:
   928 ;;		line 14 in file "serial.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text3
   956   0019E2                     __ptext3:
   957                           	callstack 0
   958   0019E2                     _initUSART4:
   959                           	callstack 30
   960   0019E2                     
   961                           ;serial.c: 15:     RC0PPS = 0x12;
   962   0019E2  0E12               	movlw	18
   963   0019E4  010E               	movlb	14	; () banked
   964   0019E6  6F62               	movwf	98,b	;volatile
   965                           
   966                           ;serial.c: 16:     RX4PPS = 0x11;
   967   0019E8  0E11               	movlw	17
   968   0019EA  6F15               	movwf	21,b	;volatile
   969   0019EC                     
   970                           ; BSR set to: 14
   971                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
   972   0019EC  97E9               	bcf	233,3,b	;volatile
   973   0019EE                     
   974                           ; BSR set to: 14
   975                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
   976   0019EE  95E8               	bcf	232,2,b	;volatile
   977                           
   978                           ;serial.c: 19:     SP4BRGL = 51;
   979   0019F0  0E33               	movlw	51
   980   0019F2  6FE5               	movwf	229,b	;volatile
   981                           
   982                           ;serial.c: 20:     SP4BRGH = 0;
   983   0019F4  0E00               	movlw	0
   984   0019F6  6FE6               	movwf	230,b	;volatile
   985   0019F8                     
   986                           ; BSR set to: 14
   987                           ;serial.c: 22:     RC4STAbits.CREN = 1;
   988   0019F8  89E7               	bsf	231,4,b	;volatile
   989   0019FA                     
   990                           ; BSR set to: 14
   991                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
   992   0019FA  8BE8               	bsf	232,5,b	;volatile
   993   0019FC                     
   994                           ; BSR set to: 14
   995                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
   996   0019FC  8FE7               	bsf	231,7,b	;volatile
   997   0019FE                     
   998                           ; BSR set to: 14
   999   0019FE  0012               	return		;funcret
  1000   001A00                     __end_of_initUSART4:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _color_read_Red *****************
  1004 ;; Defined at:
  1005 ;;		line 29 in file "color.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  tmp             2    9[COMRAM] unsigned int 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  2    4[COMRAM] unsigned int 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1020 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1021 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1022 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1023 ;;Total ram usage:        7 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 2
  1026 ;; This function calls:
  1027 ;;		_I2C_2_Master_Read
  1028 ;;		_I2C_2_Master_RepStart
  1029 ;;		_I2C_2_Master_Start
  1030 ;;		_I2C_2_Master_Stop
  1031 ;;		_I2C_2_Master_Write
  1032 ;; This function is called by:
  1033 ;;		_main
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text4
  1038   00165E                     __ptext4:
  1039                           	callstack 0
  1040   00165E                     _color_read_Red:
  1041                           	callstack 28
  1042   00165E                     
  1043                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1044   00165E  EC29  F00D         	call	_I2C_2_Master_Start	;wreg free
  1045                           
  1046                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1047   001662  0E52               	movlw	82
  1048   001664  EC19  F00D         	call	_I2C_2_Master_Write
  1049                           
  1050                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1051   001668  0EB6               	movlw	182
  1052   00166A  EC19  F00D         	call	_I2C_2_Master_Write
  1053                           
  1054                           ;color.c: 35:  I2C_2_Master_RepStart();
  1055   00166E  EC1F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1056                           
  1057                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1058   001672  0E53               	movlw	83
  1059   001674  EC19  F00D         	call	_I2C_2_Master_Write
  1060                           
  1061                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1062   001678  0E01               	movlw	1
  1063   00167A  ECA7  F00B         	call	_I2C_2_Master_Read
  1064   00167E  6E07               	movwf	??_color_read_Red^0,c
  1065   001680  5007               	movf	??_color_read_Red^0,w,c
  1066   001682  6E0A               	movwf	color_read_Red@tmp^0,c
  1067   001684  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1068                           
  1069                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1070   001686  0E00               	movlw	0
  1071   001688  ECA7  F00B         	call	_I2C_2_Master_Read
  1072   00168C  6E07               	movwf	??_color_read_Red^0,c
  1073   00168E  5007               	movf	??_color_read_Red^0,w,c
  1074   001690  6E09               	movwf	(??_color_read_Red+2)^0,c
  1075   001692  6A08               	clrf	(??_color_read_Red+1)^0,c
  1076   001694  500A               	movf	color_read_Red@tmp^0,w,c
  1077   001696  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1078   001698  6E0A               	movwf	color_read_Red@tmp^0,c
  1079   00169A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1080   00169C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1081   00169E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1082                           
  1083                           ;color.c: 39:  I2C_2_Master_Stop();
  1084   0016A0  EC24  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1085   0016A4                     
  1086                           ;color.c: 40:  return tmp;
  1087   0016A4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1088   0016A8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1089   0016AC  0012               	return		;funcret
  1090   0016AE                     __end_of_color_read_Red:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _color_read_Green *****************
  1094 ;; Defined at:
  1095 ;;		line 43 in file "color.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  tmp             2    9[COMRAM] unsigned int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2    4[COMRAM] unsigned int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;Total ram usage:        7 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 2
  1116 ;; This function calls:
  1117 ;;		_I2C_2_Master_Read
  1118 ;;		_I2C_2_Master_RepStart
  1119 ;;		_I2C_2_Master_Start
  1120 ;;		_I2C_2_Master_Stop
  1121 ;;		_I2C_2_Master_Write
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text5
  1128   0016AE                     __ptext5:
  1129                           	callstack 0
  1130   0016AE                     _color_read_Green:
  1131                           	callstack 28
  1132   0016AE                     
  1133                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  1134   0016AE  EC29  F00D         	call	_I2C_2_Master_Start	;wreg free
  1135                           
  1136                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  1137   0016B2  0E52               	movlw	82
  1138   0016B4  EC19  F00D         	call	_I2C_2_Master_Write
  1139                           
  1140                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  1141   0016B8  0EB8               	movlw	184
  1142   0016BA  EC19  F00D         	call	_I2C_2_Master_Write
  1143                           
  1144                           ;color.c: 49:  I2C_2_Master_RepStart();
  1145   0016BE  EC1F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1146                           
  1147                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  1148   0016C2  0E53               	movlw	83
  1149   0016C4  EC19  F00D         	call	_I2C_2_Master_Write
  1150                           
  1151                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  1152   0016C8  0E01               	movlw	1
  1153   0016CA  ECA7  F00B         	call	_I2C_2_Master_Read
  1154   0016CE  6E07               	movwf	??_color_read_Green^0,c
  1155   0016D0  5007               	movf	??_color_read_Green^0,w,c
  1156   0016D2  6E0A               	movwf	color_read_Green@tmp^0,c
  1157   0016D4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1158                           
  1159                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1160   0016D6  0E00               	movlw	0
  1161   0016D8  ECA7  F00B         	call	_I2C_2_Master_Read
  1162   0016DC  6E07               	movwf	??_color_read_Green^0,c
  1163   0016DE  5007               	movf	??_color_read_Green^0,w,c
  1164   0016E0  6E09               	movwf	(??_color_read_Green+2)^0,c
  1165   0016E2  6A08               	clrf	(??_color_read_Green+1)^0,c
  1166   0016E4  500A               	movf	color_read_Green@tmp^0,w,c
  1167   0016E6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1168   0016E8  6E0A               	movwf	color_read_Green@tmp^0,c
  1169   0016EA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1170   0016EC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1171   0016EE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1172                           
  1173                           ;color.c: 53:  I2C_2_Master_Stop();
  1174   0016F0  EC24  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1175   0016F4                     
  1176                           ;color.c: 54:  return tmp;
  1177   0016F4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1178   0016F8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1179   0016FC  0012               	return		;funcret
  1180   0016FE                     __end_of_color_read_Green:
  1181                           	callstack 0
  1182                           
  1183 ;; *************** function _color_read_Blue *****************
  1184 ;; Defined at:
  1185 ;;		line 57 in file "color.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  tmp             2    9[COMRAM] unsigned int 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  2    4[COMRAM] unsigned int 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1200 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;Total ram usage:        7 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 2
  1206 ;; This function calls:
  1207 ;;		_I2C_2_Master_Read
  1208 ;;		_I2C_2_Master_RepStart
  1209 ;;		_I2C_2_Master_Start
  1210 ;;		_I2C_2_Master_Stop
  1211 ;;		_I2C_2_Master_Write
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text6
  1218   0016FE                     __ptext6:
  1219                           	callstack 0
  1220   0016FE                     _color_read_Blue:
  1221                           	callstack 28
  1222   0016FE                     
  1223                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  1224   0016FE  EC29  F00D         	call	_I2C_2_Master_Start	;wreg free
  1225                           
  1226                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  1227   001702  0E52               	movlw	82
  1228   001704  EC19  F00D         	call	_I2C_2_Master_Write
  1229                           
  1230                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  1231   001708  0EBA               	movlw	186
  1232   00170A  EC19  F00D         	call	_I2C_2_Master_Write
  1233                           
  1234                           ;color.c: 63:  I2C_2_Master_RepStart();
  1235   00170E  EC1F  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1236                           
  1237                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  1238   001712  0E53               	movlw	83
  1239   001714  EC19  F00D         	call	_I2C_2_Master_Write
  1240                           
  1241                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  1242   001718  0E01               	movlw	1
  1243   00171A  ECA7  F00B         	call	_I2C_2_Master_Read
  1244   00171E  6E07               	movwf	??_color_read_Blue^0,c
  1245   001720  5007               	movf	??_color_read_Blue^0,w,c
  1246   001722  6E0A               	movwf	color_read_Blue@tmp^0,c
  1247   001724  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1248                           
  1249                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1250   001726  0E00               	movlw	0
  1251   001728  ECA7  F00B         	call	_I2C_2_Master_Read
  1252   00172C  6E07               	movwf	??_color_read_Blue^0,c
  1253   00172E  5007               	movf	??_color_read_Blue^0,w,c
  1254   001730  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1255   001732  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1256   001734  500A               	movf	color_read_Blue@tmp^0,w,c
  1257   001736  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1258   001738  6E0A               	movwf	color_read_Blue@tmp^0,c
  1259   00173A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1260   00173C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1261   00173E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1262                           
  1263                           ;color.c: 67:  I2C_2_Master_Stop();
  1264   001740  EC24  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1265   001744                     
  1266                           ;color.c: 68:  return tmp;
  1267   001744  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1268   001748  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1269   00174C  0012               	return		;funcret
  1270   00174E                     __end_of_color_read_Blue:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _I2C_2_Master_RepStart *****************
  1274 ;; Defined at:
  1275 ;;		line 33 in file "i2c.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		_I2C_2_Master_Idle
  1298 ;; This function is called by:
  1299 ;;		_color_read_Red
  1300 ;;		_color_read_Green
  1301 ;;		_color_read_Blue
  1302 ;; This function uses a non-reentrant model
  1303 ;;
  1304                           
  1305                           	psect	text7
  1306   001A3E                     __ptext7:
  1307                           	callstack 0
  1308   001A3E                     _I2C_2_Master_RepStart:
  1309                           	callstack 28
  1310   001A3E                     
  1311                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1312   001A3E  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1313   001A42                     
  1314                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1315   001A42  010E               	movlb	14	; () banked
  1316   001A44  83DA               	bsf	218,1,b	;volatile
  1317   001A46                     
  1318                           ; BSR set to: 14
  1319   001A46  0012               	return		;funcret
  1320   001A48                     __end_of_I2C_2_Master_RepStart:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _I2C_2_Master_Read *****************
  1324 ;; Defined at:
  1325 ;;		line 51 in file "i2c.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  ack             1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  ack             1    2[COMRAM] unsigned char 
  1330 ;;  tmp             1    3[COMRAM] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      unsigned char 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1344 ;;Total ram usage:        3 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 1
  1347 ;; This function calls:
  1348 ;;		_I2C_2_Master_Idle
  1349 ;; This function is called by:
  1350 ;;		_color_read_Red
  1351 ;;		_color_read_Green
  1352 ;;		_color_read_Blue
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text8
  1357   00174E                     __ptext8:
  1358                           	callstack 0
  1359   00174E                     _I2C_2_Master_Read:
  1360                           	callstack 28
  1361                           
  1362                           ; BSR set to: 14
  1363                           ;incstack = 0
  1364                           ;I2C_2_Master_Read@ack stored from wreg
  1365   00174E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1366   001750                     
  1367                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1368   001750  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1369   001754                     
  1370                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1371   001754  010E               	movlb	14	; () banked
  1372   001756  87DA               	bsf	218,3,b	;volatile
  1373                           
  1374                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1375   001758  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1376   00175C                     
  1377                           ;i2c.c: 57:   tmp = SSP2BUF;
  1378   00175C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1379                           
  1380                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1381   001760  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1382   001764                     
  1383                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1384   001764  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1385   001766  B4D8               	btfsc	status,2,c
  1386   001768  EFB8  F00B         	goto	u1031
  1387   00176C  EFBC  F00B         	goto	u1030
  1388   001770                     u1031:
  1389   001770  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1390   001772  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1391   001774  EFBD  F00B         	goto	u1048
  1392   001778                     u1030:
  1393   001778  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1394   00177A                     u1048:
  1395   00177A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1396   00177C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1397   00177E  010E               	movlb	14	; () banked
  1398   001780  51DA               	movf	218,w,b	;volatile
  1399   001782  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1400   001784  0BDF               	andlw	-33
  1401   001786  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1402   001788  6FDA               	movwf	218,b	;volatile
  1403   00178A                     
  1404                           ; BSR set to: 14
  1405                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1406   00178A  89DA               	bsf	218,4,b	;volatile
  1407   00178C                     
  1408                           ; BSR set to: 14
  1409                           ;i2c.c: 61:   return tmp;
  1410   00178C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1411   00178E                     
  1412                           ; BSR set to: 14
  1413   00178E  0012               	return		;funcret
  1414   001790                     __end_of_I2C_2_Master_Read:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _color_click_init *****************
  1418 ;; Defined at:
  1419 ;;		line 5 in file "color.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1436 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;Total ram usage:        1 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 3
  1440 ;; This function calls:
  1441 ;;		_I2C_2_Master_Init
  1442 ;;		_color_writetoaddr
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text9
  1449   001882                     __ptext9:
  1450                           	callstack 0
  1451   001882                     _color_click_init:
  1452                           	callstack 27
  1453   001882                     
  1454                           ;color.c: 8:     I2C_2_Master_Init();
  1455   001882  ECA5  F00C         	call	_I2C_2_Master_Init	;wreg free
  1456   001886                     
  1457                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1458   001886  0E01               	movlw	1
  1459   001888  6E03               	movwf	color_writetoaddr@value^0,c
  1460   00188A  0E00               	movlw	0
  1461   00188C  ECE1  F00C         	call	_color_writetoaddr
  1462   001890                     
  1463                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1464   001890  0E3F               	movlw	63
  1465   001892  6E05               	movwf	??_color_click_init^0,c
  1466   001894  0E55               	movlw	85
  1467   001896                     u1187:
  1468   001896  2EE8               	decfsz	wreg,f,c
  1469   001898  D7FE               	bra	u1187
  1470   00189A  2E05               	decfsz	??_color_click_init^0,f,c
  1471   00189C  D7FC               	bra	u1187
  1472   00189E  0000               	nop	
  1473   0018A0                     
  1474                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1475   0018A0  0E03               	movlw	3
  1476   0018A2  6E03               	movwf	color_writetoaddr@value^0,c
  1477   0018A4  0E00               	movlw	0
  1478   0018A6  ECE1  F00C         	call	_color_writetoaddr
  1479   0018AA                     
  1480                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1481   0018AA  0ED5               	movlw	213
  1482   0018AC  6E03               	movwf	color_writetoaddr@value^0,c
  1483   0018AE  0E01               	movlw	1
  1484   0018B0  ECE1  F00C         	call	_color_writetoaddr
  1485   0018B4  0012               	return		;funcret
  1486   0018B6                     __end_of_color_click_init:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _color_writetoaddr *****************
  1490 ;; Defined at:
  1491 ;;		line 21 in file "color.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  address         1    wreg     unsigned char 
  1494 ;;  value           1    2[COMRAM] unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  address         1    3[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0, cstack
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;Total ram usage:        2 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 2
  1513 ;; This function calls:
  1514 ;;		_I2C_2_Master_Start
  1515 ;;		_I2C_2_Master_Stop
  1516 ;;		_I2C_2_Master_Write
  1517 ;; This function is called by:
  1518 ;;		_color_click_init
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text10
  1523   0019C2                     __ptext10:
  1524                           	callstack 0
  1525   0019C2                     _color_writetoaddr:
  1526                           	callstack 27
  1527                           
  1528                           ;incstack = 0
  1529                           ;color_writetoaddr@address stored from wreg
  1530   0019C2  6E04               	movwf	color_writetoaddr@address^0,c
  1531   0019C4                     
  1532                           ;color.c: 22:     I2C_2_Master_Start();
  1533   0019C4  EC29  F00D         	call	_I2C_2_Master_Start	;wreg free
  1534                           
  1535                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1536   0019C8  0E52               	movlw	82
  1537   0019CA  EC19  F00D         	call	_I2C_2_Master_Write
  1538                           
  1539                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1540   0019CE  5004               	movf	color_writetoaddr@address^0,w,c
  1541   0019D0  0980               	iorlw	128
  1542   0019D2  EC19  F00D         	call	_I2C_2_Master_Write
  1543                           
  1544                           ;color.c: 25:     I2C_2_Master_Write(value);
  1545   0019D6  5003               	movf	color_writetoaddr@value^0,w,c
  1546   0019D8  EC19  F00D         	call	_I2C_2_Master_Write
  1547                           
  1548                           ;color.c: 26:     I2C_2_Master_Stop();
  1549   0019DC  EC24  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1550   0019E0  0012               	return		;funcret
  1551   0019E2                     __end_of_color_writetoaddr:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _I2C_2_Master_Write *****************
  1555 ;; Defined at:
  1556 ;;		line 45 in file "i2c.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  data_byte       1    wreg     unsigned char 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  data_byte       1    1[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        1 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		_I2C_2_Master_Idle
  1579 ;; This function is called by:
  1580 ;;		_color_writetoaddr
  1581 ;;		_color_read_Red
  1582 ;;		_color_read_Green
  1583 ;;		_color_read_Blue
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text11
  1588   001A32                     __ptext11:
  1589                           	callstack 0
  1590   001A32                     _I2C_2_Master_Write:
  1591                           	callstack 28
  1592                           
  1593                           ;incstack = 0
  1594                           ;I2C_2_Master_Write@data_byte stored from wreg
  1595   001A32  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1596   001A34                     
  1597                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1598   001A34  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1599   001A38                     
  1600                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1601   001A38  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1602   001A3C  0012               	return		;funcret
  1603   001A3E                     __end_of_I2C_2_Master_Write:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _I2C_2_Master_Stop *****************
  1607 ;; Defined at:
  1608 ;;		line 39 in file "i2c.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0, cstack
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 1
  1629 ;; This function calls:
  1630 ;;		_I2C_2_Master_Idle
  1631 ;; This function is called by:
  1632 ;;		_color_writetoaddr
  1633 ;;		_color_read_Red
  1634 ;;		_color_read_Green
  1635 ;;		_color_read_Blue
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text12
  1640   001A48                     __ptext12:
  1641                           	callstack 0
  1642   001A48                     _I2C_2_Master_Stop:
  1643                           	callstack 28
  1644   001A48                     
  1645                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1646   001A48  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1647   001A4C                     
  1648                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1649   001A4C  010E               	movlb	14	; () banked
  1650   001A4E  85DA               	bsf	218,2,b	;volatile
  1651   001A50                     
  1652                           ; BSR set to: 14
  1653   001A50  0012               	return		;funcret
  1654   001A52                     __end_of_I2C_2_Master_Stop:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function _I2C_2_Master_Start *****************
  1658 ;; Defined at:
  1659 ;;		line 27 in file "i2c.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;		None
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1677 ;;Total ram usage:        0 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 1
  1680 ;; This function calls:
  1681 ;;		_I2C_2_Master_Idle
  1682 ;; This function is called by:
  1683 ;;		_color_writetoaddr
  1684 ;;		_color_read_Red
  1685 ;;		_color_read_Green
  1686 ;;		_color_read_Blue
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           	psect	text13
  1691   001A52                     __ptext13:
  1692                           	callstack 0
  1693   001A52                     _I2C_2_Master_Start:
  1694                           	callstack 28
  1695   001A52                     
  1696                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1697   001A52  ECBA  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1698   001A56                     
  1699                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1700   001A56  010E               	movlb	14	; () banked
  1701   001A58  81DA               	bsf	218,0,b	;volatile
  1702   001A5A                     
  1703                           ; BSR set to: 14
  1704   001A5A  0012               	return		;funcret
  1705   001A5C                     __end_of_I2C_2_Master_Start:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _I2C_2_Master_Idle *****************
  1709 ;; Defined at:
  1710 ;;		line 22 in file "i2c.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1728 ;;Total ram usage:        1 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_I2C_2_Master_Start
  1734 ;;		_I2C_2_Master_RepStart
  1735 ;;		_I2C_2_Master_Stop
  1736 ;;		_I2C_2_Master_Write
  1737 ;;		_I2C_2_Master_Read
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text14
  1742   001974                     __ptext14:
  1743                           	callstack 0
  1744   001974                     _I2C_2_Master_Idle:
  1745                           	callstack 28
  1746   001974                     l82:
  1747   001974  010E               	movlb	14	; () banked
  1748   001976  B5D8               	btfsc	216,2,b	;volatile
  1749   001978  EFC0  F00C         	goto	u951
  1750   00197C  EFC2  F00C         	goto	u950
  1751   001980                     u951:
  1752   001980  EFBA  F00C         	goto	l82
  1753   001984                     u950:
  1754   001984                     
  1755                           ; BSR set to: 14
  1756   001984  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1757   001988  0E1F               	movlw	31
  1758   00198A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1759   00198C  A4D8               	btfss	status,2,c
  1760   00198E  EFCB  F00C         	goto	u961
  1761   001992  EFCD  F00C         	goto	u960
  1762   001996                     u961:
  1763   001996  EFBA  F00C         	goto	l82
  1764   00199A                     u960:
  1765   00199A                     
  1766                           ; BSR set to: 14
  1767   00199A  0012               	return		;funcret
  1768   00199C                     __end_of_I2C_2_Master_Idle:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _I2C_2_Master_Init *****************
  1772 ;; Defined at:
  1773 ;;		line 4 in file "i2c.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_color_click_init
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text15
  1801   00194A                     __ptext15:
  1802                           	callstack 0
  1803   00194A                     _I2C_2_Master_Init:
  1804                           	callstack 29
  1805   00194A                     
  1806                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1807   00194A  010E               	movlb	14	; () banked
  1808   00194C  51D9               	movf	217,w,b	;volatile
  1809   00194E  0BF0               	andlw	-16
  1810   001950  0908               	iorlw	8
  1811   001952  6FD9               	movwf	217,b	;volatile
  1812   001954                     
  1813                           ; BSR set to: 14
  1814                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1815   001954  8BD9               	bsf	217,5,b	;volatile
  1816                           
  1817                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1818   001956  0E9F               	movlw	159
  1819   001958  6FD6               	movwf	214,b	;volatile
  1820   00195A                     
  1821                           ; BSR set to: 14
  1822                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1823   00195A  8A84               	bsf	132,5,c	;volatile
  1824   00195C                     
  1825                           ; BSR set to: 14
  1826                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1827   00195C  8C84               	bsf	132,6,c	;volatile
  1828   00195E                     
  1829                           ; BSR set to: 14
  1830                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1831   00195E  9BA7               	bcf	167,5,b	;volatile
  1832   001960                     
  1833                           ; BSR set to: 14
  1834                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1835   001960  9DA7               	bcf	167,6,b	;volatile
  1836                           
  1837                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1838   001962  0E1D               	movlw	29
  1839   001964  6F1D               	movwf	29,b	;volatile
  1840                           
  1841                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1842   001966  0E1E               	movlw	30
  1843   001968  6F1C               	movwf	28,b	;volatile
  1844                           
  1845                           ;i2c.c: 18:   RD5PPS=0x1C;
  1846   00196A  0E1C               	movlw	28
  1847   00196C  6F6F               	movwf	111,b	;volatile
  1848                           
  1849                           ;i2c.c: 19:   RD6PPS=0x1B;
  1850   00196E  0E1B               	movlw	27
  1851   001970  6F70               	movwf	112,b	;volatile
  1852   001972                     
  1853                           ; BSR set to: 14
  1854   001972  0012               	return		;funcret
  1855   001974                     __end_of_I2C_2_Master_Init:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _ADC_init *****************
  1859 ;; Defined at:
  1860 ;;		line 9 in file "ADC.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text16
  1888   001A00                     __ptext16:
  1889                           	callstack 0
  1890   001A00                     _ADC_init:
  1891                           	callstack 30
  1892   001A00                     
  1893                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  1894   001A00  8C86               	bsf	134,6,c	;volatile
  1895                           
  1896                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  1897   001A02  010E               	movlb	14	; () banked
  1898   001A04  8DB4               	bsf	180,6,b	;volatile
  1899                           
  1900                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  1901   001A06  010F               	movlb	15	; () banked
  1902   001A08  9958               	bcf	88,4,b	;volatile
  1903   001A0A                     
  1904                           ; BSR set to: 15
  1905                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  1906   001A0A  0EFC               	movlw	-4
  1907   001A0C  1758               	andwf	88,f,b	;volatile
  1908                           
  1909                           ;ADC.c: 17:     ADPCH=0b101110;
  1910   001A0E  0E2E               	movlw	46
  1911   001A10  6F5F               	movwf	95,b	;volatile
  1912   001A12                     
  1913                           ; BSR set to: 15
  1914                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  1915   001A12  9460               	bcf	96,2,c	;volatile
  1916   001A14                     
  1917                           ; BSR set to: 15
  1918                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  1919   001A14  8860               	bsf	96,4,c	;volatile
  1920   001A16                     
  1921                           ; BSR set to: 15
  1922                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  1923   001A16  8E60               	bsf	96,7,c	;volatile
  1924   001A18                     
  1925                           ; BSR set to: 15
  1926   001A18  0012               	return		;funcret
  1927   001A1A                     __end_of_ADC_init:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _ADC_getval *****************
  1931 ;; Defined at:
  1932 ;;		line 23 in file "ADC.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  tmpval          2    2[COMRAM] unsigned int 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  2    0[COMRAM] unsigned int 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        4 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text17
  1960   00191A                     __ptext17:
  1961                           	callstack 0
  1962   00191A                     _ADC_getval:
  1963                           	callstack 30
  1964   00191A                     
  1965                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  1966   00191A  8060               	bsf	96,0,c	;volatile
  1967   00191C                     l18:
  1968   00191C  B060               	btfsc	96,0,c	;volatile
  1969   00191E  EF93  F00C         	goto	u1091
  1970   001922  EF95  F00C         	goto	u1090
  1971   001926                     u1091:
  1972   001926  EF8E  F00C         	goto	l18
  1973   00192A                     u1090:
  1974   00192A                     
  1975                           ;ADC.c: 31:     tmpval = ADRESH;
  1976   00192A  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  1977   00192E  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  1978   001930                     
  1979                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  1980   001930  5003               	movf	ADC_getval@tmpval^0,w,c
  1981   001932  08FF               	sublw	255
  1982   001934  6E03               	movwf	ADC_getval@tmpval^0,c
  1983   001936  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  1984   001938  A0D8               	btfss	status,0,c
  1985   00193A  2AE8               	incf	wreg,f,c
  1986   00193C  0800               	sublw	0
  1987   00193E  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  1988   001940                     
  1989                           ;ADC.c: 37:     return tmpval;
  1990   001940  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  1991   001944  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  1992   001948  0012               	return		;funcret
  1993   00194A                     __end_of_ADC_getval:
  1994                           	callstack 0
  1995                           
  1996 ;; *************** function _ADC2String *****************
  1997 ;; Defined at:
  1998 ;;		line 133 in file "serial.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  buf             2   66[COMRAM] PTR unsigned char 
  2001 ;;		 -> sendAllReadings@buffer(10), main@buf(50), 
  2002 ;;  ADC_val         2   68[COMRAM] unsigned int 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  int_part        2   74[COMRAM] unsigned int 
  2005 ;;  frac_part       2   72[COMRAM] unsigned int 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2018 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;Total ram usage:       10 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 8
  2022 ;; This function calls:
  2023 ;;		___lwdiv
  2024 ;;		___wmul
  2025 ;;		_sprintf
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;;		_sendAllReadings
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text18
  2033   0014D2                     __ptext18:
  2034                           	callstack 0
  2035   0014D2                     _ADC2String:
  2036                           	callstack 22
  2037   0014D2                     
  2038                           ;serial.c: 135:     unsigned int int_part=ADC_val/77;
  2039   0014D2  C045  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  2040   0014D6  C046  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  2041   0014DA  0E00               	movlw	0
  2042   0014DC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2043   0014DE  0E4D               	movlw	77
  2044   0014E0  6E09               	movwf	___lwdiv@divisor^0,c
  2045   0014E2  ECF5  F00A         	call	___lwdiv	;wreg free
  2046   0014E6  C007  F04B         	movff	?___lwdiv,ADC2String@int_part
  2047   0014EA  C008  F04C         	movff	?___lwdiv+1,ADC2String@int_part+1
  2048   0014EE                     
  2049                           ;serial.c: 137:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  2050   0014EE  C045  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  2051   0014F2  C046  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  2052   0014F6  0E00               	movlw	0
  2053   0014F8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2054   0014FA  0E64               	movlw	100
  2055   0014FC  6E03               	movwf	___wmul@multiplicand^0,c
  2056   0014FE  ECCE  F00C         	call	___wmul	;wreg free
  2057   001502  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2058   001506  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2059   00150A  0E00               	movlw	0
  2060   00150C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2061   00150E  0E4D               	movlw	77
  2062   001510  6E09               	movwf	___lwdiv@divisor^0,c
  2063   001512  ECF5  F00A         	call	___lwdiv	;wreg free
  2064   001516  C007  F047         	movff	?___lwdiv,??_ADC2String
  2065   00151A  C008  F048         	movff	?___lwdiv+1,??_ADC2String+1
  2066   00151E  C04B  F001         	movff	ADC2String@int_part,___wmul@multiplier
  2067   001522  C04C  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  2068   001526  0EFF               	movlw	255
  2069   001528  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2070   00152A  0E9C               	movlw	156
  2071   00152C  6E03               	movwf	___wmul@multiplicand^0,c
  2072   00152E  ECCE  F00C         	call	___wmul	;wreg free
  2073   001532  5001               	movf	?___wmul^0,w,c
  2074   001534  2447               	addwf	??_ADC2String^0,w,c
  2075   001536  6E49               	movwf	ADC2String@frac_part^0,c
  2076   001538  5002               	movf	(?___wmul+1)^0,w,c
  2077   00153A  2048               	addwfc	(??_ADC2String+1)^0,w,c
  2078   00153C  6E4A               	movwf	(ADC2String@frac_part+1)^0,c
  2079   00153E                     
  2080                           ;serial.c: 139:     sprintf(buf,"Voltage = %d.%02d,  ",int_part,frac_part);
  2081   00153E  C043  F02F         	movff	ADC2String@buf,sprintf@s
  2082   001542  C044  F030         	movff	ADC2String@buf+1,sprintf@s+1
  2083   001546  0E01               	movlw	low STR_4
  2084   001548  6E31               	movwf	sprintf@fmt^0,c
  2085   00154A  C04B  F032         	movff	ADC2String@int_part,?_sprintf+3
  2086   00154E  C04C  F033         	movff	ADC2String@int_part+1,?_sprintf+4
  2087   001552  C049  F034         	movff	ADC2String@frac_part,?_sprintf+5
  2088   001556  C04A  F035         	movff	ADC2String@frac_part+1,?_sprintf+6
  2089   00155A  ECE9  F00B         	call	_sprintf	;wreg free
  2090   00155E  0012               	return		;funcret
  2091   001560                     __end_of_ADC2String:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _sprintf *****************
  2095 ;; Defined at:
  2096 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  s               2   46[COMRAM] PTR unsigned char 
  2099 ;;		 -> sendAllReadings@buffer(10), main@green_char(50), main@blue_char(50), main@red_char(50), 
  2100 ;;		 -> main@buf(50), 
  2101 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  2102 ;;		 -> STR_4(21), STR_3(12), STR_2(11), STR_1(10), 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  f              12   54[COMRAM] struct _IO_FILE
  2105 ;;  ret             2    0        int 
  2106 ;;  ap              1   53[COMRAM] PTR void [1]
  2107 ;;		 -> ?_sprintf(2), 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  2   46[COMRAM] int 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2117 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2120 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;Total ram usage:       20 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 7
  2124 ;; This function calls:
  2125 ;;		_vfprintf
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;;		_ADC2String
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text19
  2133   0017D2                     __ptext19:
  2134                           	callstack 0
  2135   0017D2                     _sprintf:
  2136                           	callstack 23
  2137   0017D2  0E32               	movlw	low (?_sprintf+3)
  2138   0017D4  6E36               	movwf	sprintf@ap^0,c
  2139   0017D6  C02F  F037         	movff	sprintf@s,sprintf@f
  2140   0017DA  C030  F038         	movff	sprintf@s+1,sprintf@f+1
  2141   0017DE  0E00               	movlw	0
  2142   0017E0  6E3B               	movwf	(sprintf@f+4)^0,c
  2143   0017E2  0E00               	movlw	0
  2144   0017E4  6E3A               	movwf	(sprintf@f+3)^0,c
  2145   0017E6  0E00               	movlw	0
  2146   0017E8  6E42               	movwf	(sprintf@f+11)^0,c
  2147   0017EA  0E00               	movlw	0
  2148   0017EC  6E41               	movwf	(sprintf@f+10)^0,c
  2149   0017EE  0E37               	movlw	low sprintf@f
  2150   0017F0  6E2B               	movwf	vfprintf@fp^0,c
  2151   0017F2  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  2152   0017F6  0E36               	movlw	low sprintf@ap
  2153   0017F8  6E2D               	movwf	vfprintf@ap^0,c
  2154   0017FA  ECC8  F00B         	call	_vfprintf	;wreg free
  2155   0017FE  503A               	movf	(sprintf@f+3)^0,w,c
  2156   001800  242F               	addwf	sprintf@s^0,w,c
  2157   001802  6ED9               	movwf	fsr2l,c
  2158   001804  503B               	movf	(sprintf@f+4)^0,w,c
  2159   001806  2030               	addwfc	(sprintf@s+1)^0,w,c
  2160   001808  6EDA               	movwf	fsr2h,c
  2161   00180A  6ADF               	clrf	indf2,c
  2162   00180C  0012               	return		;funcret
  2163   00180E                     __end_of_sprintf:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _vfprintf *****************
  2167 ;; Defined at:
  2168 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  2171 ;;		 -> sprintf@f(12), 
  2172 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  2173 ;;		 -> STR_4(21), STR_3(12), STR_2(11), STR_1(10), 
  2174 ;;  ap              1   44[COMRAM] PTR PTR void 
  2175 ;;		 -> sprintf@ap(1), 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  2178 ;;		 -> STR_4(21), STR_3(12), STR_2(11), STR_1(10), 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   42[COMRAM] int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;Total ram usage:        4 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 6
  2195 ;; This function calls:
  2196 ;;		_vfpfcnvrt
  2197 ;; This function is called by:
  2198 ;;		_sprintf
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text20
  2203   001790                     __ptext20:
  2204                           	callstack 0
  2205   001790                     _vfprintf:
  2206                           	callstack 23
  2207   001790                     
  2208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2209   001790  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2212   001794  EFD4  F00B         	goto	l1850
  2213   001798                     l1848:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2216   001798  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2217   00179C  0E2E               	movlw	low vfprintf@cfmt
  2218   00179E  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2219   0017A0  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2220   0017A4  EC1C  F007         	call	_vfpfcnvrt	;wreg free
  2221   0017A8                     l1850:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2224   0017A8  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2225   0017AC                     	if	1	;There is more than 1 active tblptr byte
  2226   0017AC  0E0E               	movlw	high __smallconst
  2227   0017AE  6EF7               	movwf	tblptrh,c
  2228   0017B0                     	endif
  2229   0017B0                     	if	0	;tblptru may be non-zero
  2230   0017B0                     	endif
  2231   0017B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2232   0017B0  0E00               	movlw	low (__smallconst shr (0+16))
  2233   0017B2  6EF8               	movwf	tblptru,c
  2234   0017B4                     	endif
  2235   0017B4  0008               	tblrd		*
  2236   0017B6  50F5               	movf	tablat,w,c
  2237   0017B8  0900               	iorlw	0
  2238   0017BA  A4D8               	btfss	status,2,c
  2239   0017BC  EFE2  F00B         	goto	u1021
  2240   0017C0  EFE4  F00B         	goto	u1020
  2241   0017C4                     u1021:
  2242   0017C4  EFCC  F00B         	goto	l1848
  2243   0017C8                     u1020:
  2244   0017C8                     
  2245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2246   0017C8  0E00               	movlw	0
  2247   0017CA  6E2C               	movwf	(?_vfprintf+1)^0,c
  2248   0017CC  0E00               	movlw	0
  2249   0017CE  6E2B               	movwf	?_vfprintf^0,c
  2250   0017D0  0012               	return		;funcret
  2251   0017D2                     __end_of_vfprintf:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _vfpfcnvrt *****************
  2255 ;; Defined at:
  2256 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2259 ;;		 -> sprintf@f(12), 
  2260 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2261 ;;		 -> vfprintf@cfmt(1), 
  2262 ;;  ap              1   33[COMRAM] PTR PTR void 
  2263 ;;		 -> sprintf@ap(1), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  convarg         4   36[COMRAM] struct .
  2266 ;;  cp              1   41[COMRAM] PTR unsigned char 
  2267 ;;		 -> STR_4(21), STR_3(12), STR_2(11), STR_1(10), 
  2268 ;;  done            1   40[COMRAM] _Bool 
  2269 ;;  c               1    0        unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2279 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;Total ram usage:       11 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 5
  2286 ;; This function calls:
  2287 ;;		_dtoa
  2288 ;;		_fputc
  2289 ;;		_read_prec_or_width
  2290 ;; This function is called by:
  2291 ;;		_vfprintf
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text21
  2296   000E38                     __ptext21:
  2297                           	callstack 0
  2298   000E38                     _vfpfcnvrt:
  2299                           	callstack 23
  2300   000E38                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2302   000E38  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2303   000E3A  6ED9               	movwf	fsr2l,c
  2304   000E3C  6ADA               	clrf	fsr2h,c
  2305   000E3E  CFDF FFF6          	movff	indf2,tblptrl
  2306   000E42                     	if	1	;There is more than 1 active tblptr byte
  2307   000E42  0E0E               	movlw	high __smallconst
  2308   000E44  6EF7               	movwf	tblptrh,c
  2309   000E46                     	endif
  2310   000E46                     	if	0	;tblptru may be non-zero
  2311   000E46                     	endif
  2312   000E46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2313   000E46  0E00               	movlw	low (__smallconst shr (0+16))
  2314   000E48  6EF8               	movwf	tblptru,c
  2315   000E4A                     	endif
  2316   000E4A  0008               	tblrd		*
  2317   000E4C  50F5               	movf	tablat,w,c
  2318   000E4E  0A25               	xorlw	37
  2319   000E50  A4D8               	btfss	status,2,c
  2320   000E52  EF2D  F007         	goto	u971
  2321   000E56  EF2F  F007         	goto	u970
  2322   000E5A                     u971:
  2323   000E5A  EFC9  F007         	goto	l1824
  2324   000E5E                     u970:
  2325   000E5E                     
  2326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2327   000E5E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2328   000E60  6ED9               	movwf	fsr2l,c
  2329   000E62  6ADA               	clrf	fsr2h,c
  2330   000E64  2ADF               	incf	indf2,f,c
  2331   000E66                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2333   000E66  0E00               	movlw	0
  2334   000E68  6E4E               	movwf	(_width+1)^0,c
  2335   000E6A  0E00               	movlw	0
  2336   000E6C  6E4D               	movwf	_width^0,c
  2337   000E6E  C04D  F051         	movff	_width,_flags
  2338   000E72                     
  2339                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2340   000E72  684F               	setf	_prec^0,c
  2341   000E74  6850               	setf	(_prec+1)^0,c
  2342   000E76                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2344   000E76  0E00               	movlw	0
  2345   000E78  6E29               	movwf	vfpfcnvrt@done^0,c
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2348   000E7A  EF65  F007         	goto	l1798
  2349   000E7E                     l1788:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2352   000E7E  8251               	bsf	_flags^0,1,c
  2353   000E80                     
  2354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2355   000E80  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2356   000E82  6ED9               	movwf	fsr2l,c
  2357   000E84  6ADA               	clrf	fsr2h,c
  2358   000E86  2ADF               	incf	indf2,f,c
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2361   000E88  EF65  F007         	goto	l1798
  2362   000E8C                     l1792:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2365   000E8C  0E01               	movlw	1
  2366   000E8E  6E29               	movwf	vfpfcnvrt@done^0,c
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2369   000E90  EF65  F007         	goto	l1798
  2370   000E94                     l1796:
  2371   000E94  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2372   000E96  6ED9               	movwf	fsr2l,c
  2373   000E98  6ADA               	clrf	fsr2h,c
  2374   000E9A  CFDF FFF6          	movff	indf2,tblptrl
  2375   000E9E                     	if	1	;There is more than 1 active tblptr byte
  2376   000E9E  0E0E               	movlw	high __smallconst
  2377   000EA0  6EF7               	movwf	tblptrh,c
  2378   000EA2                     	endif
  2379   000EA2                     	if	0	;tblptru may be non-zero
  2380   000EA2                     	endif
  2381   000EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2382   000EA2  0E00               	movlw	low (__smallconst shr (0+16))
  2383   000EA4  6EF8               	movwf	tblptru,c
  2384   000EA6                     	endif
  2385   000EA6  0008               	tblrd		*
  2386   000EA8  50F5               	movf	tablat,w,c
  2387   000EAA  6E23               	movwf	??_vfpfcnvrt^0,c
  2388   000EAC  6A24               	clrf	(??_vfpfcnvrt+1)^0,c
  2389                           
  2390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2391                           ; Switch size 1, requested type "simple"
  2392                           ; Number of cases is 1, Range of values is 0 to 0
  2393                           ; switch strategies available:
  2394                           ; Name         Instructions Cycles
  2395                           ; simple_byte            4     3 (average)
  2396                           ;	Chosen strategy is simple_byte
  2397   000EAE  5024               	movf	(??_vfpfcnvrt+1)^0,w,c
  2398   000EB0  0A00               	xorlw	0	; case 0
  2399   000EB2  B4D8               	btfsc	status,2,c
  2400   000EB4  EF5E  F007         	goto	l2104
  2401   000EB8  EF46  F007         	goto	l1792
  2402   000EBC                     l2104:
  2403                           
  2404                           ; Switch size 1, requested type "simple"
  2405                           ; Number of cases is 1, Range of values is 48 to 48
  2406                           ; switch strategies available:
  2407                           ; Name         Instructions Cycles
  2408                           ; simple_byte            4     3 (average)
  2409                           ;	Chosen strategy is simple_byte
  2410   000EBC  5023               	movf	??_vfpfcnvrt^0,w,c
  2411   000EBE  0A30               	xorlw	48	; case 48
  2412   000EC0  B4D8               	btfsc	status,2,c
  2413   000EC2  EF3F  F007         	goto	l1788
  2414   000EC6  EF46  F007         	goto	l1792
  2415   000ECA                     l1798:
  2416                           
  2417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2418   000ECA  5029               	movf	vfpfcnvrt@done^0,w,c
  2419   000ECC  B4D8               	btfsc	status,2,c
  2420   000ECE  EF6B  F007         	goto	u981
  2421   000ED2  EF6D  F007         	goto	u980
  2422   000ED6                     u981:
  2423   000ED6  EF4A  F007         	goto	l1796
  2424   000EDA                     u980:
  2425   000EDA                     
  2426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2427   000EDA  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2428   000EDE  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2429   000EE2  EC12  F00A         	call	_read_prec_or_width	;wreg free
  2430   000EE6  C007  F04D         	movff	?_read_prec_or_width,_width
  2431   000EEA  C008  F04E         	movff	?_read_prec_or_width+1,_width+1
  2432   000EEE                     
  2433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2434   000EEE  BE4E               	btfsc	(_width+1)^0,7,c
  2435   000EF0  EF7E  F007         	goto	u990
  2436   000EF4  EF7C  F007         	goto	u991
  2437   000EF8                     u991:
  2438   000EF8  EF83  F007         	goto	l1806
  2439   000EFC                     u990:
  2440   000EFC                     
  2441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2442   000EFC  8051               	bsf	_flags^0,0,c
  2443                           
  2444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2445   000EFE  6C4D               	negf	_width^0,c
  2446   000F00  1E4E               	comf	(_width+1)^0,f,c
  2447   000F02  B0D8               	btfsc	status,0,c
  2448   000F04  2A4E               	incf	(_width+1)^0,f,c
  2449   000F06                     l1806:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2452   000F06  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2453   000F08  6ED9               	movwf	fsr2l,c
  2454   000F0A  6ADA               	clrf	fsr2h,c
  2455   000F0C  50DF               	movf	indf2,w,c
  2456   000F0E  6E2A               	movwf	vfpfcnvrt@cp^0,c
  2457   000F10                     
  2458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2459   000F10  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2460   000F14                     	if	1	;There is more than 1 active tblptr byte
  2461   000F14  0E0E               	movlw	high __smallconst
  2462   000F16  6EF7               	movwf	tblptrh,c
  2463   000F18                     	endif
  2464   000F18                     	if	0	;tblptru may be non-zero
  2465   000F18                     	endif
  2466   000F18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2467   000F18  0E00               	movlw	low (__smallconst shr (0+16))
  2468   000F1A  6EF8               	movwf	tblptru,c
  2469   000F1C                     	endif
  2470   000F1C  0008               	tblrd		*
  2471   000F1E  50F5               	movf	tablat,w,c
  2472   000F20  0A64               	xorlw	100
  2473   000F22  B4D8               	btfsc	status,2,c
  2474   000F24  EF96  F007         	goto	u1001
  2475   000F28  EF98  F007         	goto	u1000
  2476   000F2C                     u1001:
  2477   000F2C  EFA8  F007         	goto	l1812
  2478   000F30                     u1000:
  2479   000F30  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2480   000F34                     	if	1	;There is more than 1 active tblptr byte
  2481   000F34  0E0E               	movlw	high __smallconst
  2482   000F36  6EF7               	movwf	tblptrh,c
  2483   000F38                     	endif
  2484   000F38                     	if	0	;tblptru may be non-zero
  2485   000F38                     	endif
  2486   000F38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2487   000F38  0E00               	movlw	low (__smallconst shr (0+16))
  2488   000F3A  6EF8               	movwf	tblptru,c
  2489   000F3C                     	endif
  2490   000F3C  0008               	tblrd		*
  2491   000F3E  50F5               	movf	tablat,w,c
  2492   000F40  0A69               	xorlw	105
  2493   000F42  A4D8               	btfss	status,2,c
  2494   000F44  EFA6  F007         	goto	u1011
  2495   000F48  EFA8  F007         	goto	u1010
  2496   000F4C                     u1011:
  2497   000F4C  EFC3  F007         	goto	l1820
  2498   000F50                     u1010:
  2499   000F50                     l1812:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2502   000F50  5022               	movf	vfpfcnvrt@ap^0,w,c
  2503   000F52  6ED9               	movwf	fsr2l,c
  2504   000F54  6ADA               	clrf	fsr2h,c
  2505   000F56  0E02               	movlw	2
  2506   000F58  26DF               	addwf	indf2,f,c
  2507   000F5A  5CDF               	subwf	indf2,w,c
  2508   000F5C  6ED9               	movwf	fsr2l,c
  2509   000F5E  6ADA               	clrf	fsr2h,c
  2510   000F60  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  2511   000F64  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  2512   000F68                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2514   000F68  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2515   000F6A  6ED9               	movwf	fsr2l,c
  2516   000F6C  6ADA               	clrf	fsr2h,c
  2517   000F6E  282A               	incf	vfpfcnvrt@cp^0,w,c
  2518   000F70  6EDF               	movwf	indf2,c
  2519   000F72                     
  2520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2521   000F72  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2522   000F76  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2523   000F7A  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2524   000F7E  ECDD  F007         	call	_dtoa	;wreg free
  2525   000F82  EFDC  F007         	goto	l1002
  2526   000F86                     l1820:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2529   000F86  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2530   000F88  6ED9               	movwf	fsr2l,c
  2531   000F8A  6ADA               	clrf	fsr2h,c
  2532   000F8C  2ADF               	incf	indf2,f,c
  2533   000F8E  EFDC  F007         	goto	l1002
  2534   000F92                     l1824:
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2537   000F92  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2538   000F94  6ED9               	movwf	fsr2l,c
  2539   000F96  6ADA               	clrf	fsr2h,c
  2540   000F98  CFDF FFF6          	movff	indf2,tblptrl
  2541   000F9C                     	if	1	;There is more than 1 active tblptr byte
  2542   000F9C  0E0E               	movlw	high __smallconst
  2543   000F9E  6EF7               	movwf	tblptrh,c
  2544   000FA0                     	endif
  2545   000FA0                     	if	0	;tblptru may be non-zero
  2546   000FA0                     	endif
  2547   000FA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2548   000FA0  0E00               	movlw	low (__smallconst shr (0+16))
  2549   000FA2  6EF8               	movwf	tblptru,c
  2550   000FA4                     	endif
  2551   000FA4  0008               	tblrd		*
  2552   000FA6  50F5               	movf	tablat,w,c
  2553   000FA8  6E01               	movwf	fputc@c^0,c
  2554   000FAA  6A02               	clrf	(fputc@c+1)^0,c
  2555   000FAC  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2556   000FB0  EC5D  F009         	call	_fputc	;wreg free
  2557   000FB4  EFC3  F007         	goto	l1820
  2558   000FB8                     l1002:
  2559   000FB8  0012               	return		;funcret
  2560   000FBA                     __end_of_vfpfcnvrt:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _read_prec_or_width *****************
  2564 ;; Defined at:
  2565 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2568 ;;		 -> vfprintf@cfmt(1), 
  2569 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2570 ;;		 -> sprintf@ap(1), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  c               1    8[COMRAM] unsigned char 
  2573 ;;  n               2    9[COMRAM] int 
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  2    6[COMRAM] int 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2583 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;Total ram usage:        5 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 1
  2590 ;; This function calls:
  2591 ;;		___wmul
  2592 ;; This function is called by:
  2593 ;;		_vfpfcnvrt
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           	psect	text22
  2598   001424                     __ptext22:
  2599                           	callstack 0
  2600   001424                     _read_prec_or_width:
  2601                           	callstack 26
  2602   001424                     
  2603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2604   001424  0E00               	movlw	0
  2605   001426  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2606   001428  0E00               	movlw	0
  2607   00142A  6E0A               	movwf	read_prec_or_width@n^0,c
  2608   00142C                     
  2609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2610   00142C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2611   00142E  6ED9               	movwf	fsr2l,c
  2612   001430  6ADA               	clrf	fsr2h,c
  2613   001432  CFDF FFF6          	movff	indf2,tblptrl
  2614   001436                     	if	1	;There is more than 1 active tblptr byte
  2615   001436  0E0E               	movlw	high __smallconst
  2616   001438  6EF7               	movwf	tblptrh,c
  2617   00143A                     	endif
  2618   00143A                     	if	0	;tblptru may be non-zero
  2619   00143A                     	endif
  2620   00143A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2621   00143A  0E00               	movlw	low (__smallconst shr (0+16))
  2622   00143C  6EF8               	movwf	tblptru,c
  2623   00143E                     	endif
  2624   00143E  0008               	tblrd		*
  2625   001440  50F5               	movf	tablat,w,c
  2626   001442  0A2A               	xorlw	42
  2627   001444  A4D8               	btfss	status,2,c
  2628   001446  EF27  F00A         	goto	u931
  2629   00144A  EF29  F00A         	goto	u930
  2630   00144E                     u931:
  2631   00144E  EF4F  F00A         	goto	l1772
  2632   001452                     u930:
  2633   001452                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2635   001452  5007               	movf	read_prec_or_width@fmt^0,w,c
  2636   001454  6ED9               	movwf	fsr2l,c
  2637   001456  6ADA               	clrf	fsr2h,c
  2638   001458  2ADF               	incf	indf2,f,c
  2639   00145A                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2641   00145A  5008               	movf	read_prec_or_width@ap^0,w,c
  2642   00145C  6ED9               	movwf	fsr2l,c
  2643   00145E  6ADA               	clrf	fsr2h,c
  2644   001460  0E02               	movlw	2
  2645   001462  26DF               	addwf	indf2,f,c
  2646   001464  5CDF               	subwf	indf2,w,c
  2647   001466  6ED9               	movwf	fsr2l,c
  2648   001468  6ADA               	clrf	fsr2h,c
  2649   00146A  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2650   00146E  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2653   001472  EF64  F00A         	goto	l983
  2654   001476                     l1768:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2657   001476  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2658   00147A  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2659   00147E  0E00               	movlw	0
  2660   001480  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2661   001482  0E0A               	movlw	10
  2662   001484  6E03               	movwf	___wmul@multiplicand^0,c
  2663   001486  ECCE  F00C         	call	___wmul	;wreg free
  2664   00148A  5009               	movf	read_prec_or_width@c^0,w,c
  2665   00148C  2401               	addwf	?___wmul^0,w,c
  2666   00148E  6E0A               	movwf	read_prec_or_width@n^0,c
  2667   001490  0E00               	movlw	0
  2668   001492  2002               	addwfc	(?___wmul+1)^0,w,c
  2669   001494  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2670   001496                     
  2671                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2672   001496  5007               	movf	read_prec_or_width@fmt^0,w,c
  2673   001498  6ED9               	movwf	fsr2l,c
  2674   00149A  6ADA               	clrf	fsr2h,c
  2675   00149C  2ADF               	incf	indf2,f,c
  2676   00149E                     l1772:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2679   00149E  5007               	movf	read_prec_or_width@fmt^0,w,c
  2680   0014A0  6ED9               	movwf	fsr2l,c
  2681   0014A2  6ADA               	clrf	fsr2h,c
  2682   0014A4  CFDF FFF6          	movff	indf2,tblptrl
  2683   0014A8                     	if	1	;There is more than 1 active tblptr byte
  2684   0014A8  0E0E               	movlw	high __smallconst
  2685   0014AA  6EF7               	movwf	tblptrh,c
  2686   0014AC                     	endif
  2687   0014AC                     	if	0	;tblptru may be non-zero
  2688   0014AC                     	endif
  2689   0014AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2690   0014AC  0E00               	movlw	low (__smallconst shr (0+16))
  2691   0014AE  6EF8               	movwf	tblptru,c
  2692   0014B0                     	endif
  2693   0014B0  0008               	tblrd		*
  2694   0014B2  50F5               	movf	tablat,w,c
  2695   0014B4  0FD0               	addlw	208
  2696   0014B6  6E09               	movwf	read_prec_or_width@c^0,c
  2697   0014B8  0E09               	movlw	9
  2698   0014BA  6409               	cpfsgt	read_prec_or_width@c^0,c
  2699   0014BC  EF62  F00A         	goto	u941
  2700   0014C0  EF64  F00A         	goto	u940
  2701   0014C4                     u941:
  2702   0014C4  EF3B  F00A         	goto	l1768
  2703   0014C8                     u940:
  2704   0014C8                     l983:
  2705                           
  2706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2707   0014C8  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2708   0014CC  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2709   0014D0  0012               	return		;funcret
  2710   0014D2                     __end_of_read_prec_or_width:
  2711                           	callstack 0
  2712                           
  2713 ;; *************** function ___wmul *****************
  2714 ;; Defined at:
  2715 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  multiplier      2    0[COMRAM] unsigned int 
  2718 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  product         2    4[COMRAM] unsigned int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMRAM] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0, prodl, prodh
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;Total ram usage:        6 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_ADC2String
  2740 ;;		_read_prec_or_width
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text23
  2745   00199C                     __ptext23:
  2746                           	callstack 0
  2747   00199C                     ___wmul:
  2748                           	callstack 26
  2749   00199C  5001               	movf	___wmul@multiplier^0,w,c
  2750   00199E  0203               	mulwf	___wmul@multiplicand^0,c
  2751   0019A0  CFF3 F005          	movff	prodl,___wmul@product
  2752   0019A4  CFF4 F006          	movff	prodh,___wmul@product+1
  2753   0019A8  5001               	movf	___wmul@multiplier^0,w,c
  2754   0019AA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2755   0019AC  50F3               	movf	243,w,c
  2756   0019AE  2606               	addwf	(___wmul@product+1)^0,f,c
  2757   0019B0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2758   0019B2  0203               	mulwf	___wmul@multiplicand^0,c
  2759   0019B4  50F3               	movf	243,w,c
  2760   0019B6  2606               	addwf	(___wmul@product+1)^0,f,c
  2761   0019B8  C005  F001         	movff	___wmul@product,?___wmul
  2762   0019BC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2763   0019C0  0012               	return		;funcret
  2764   0019C2                     __end_of___wmul:
  2765                           	callstack 0
  2766                           
  2767 ;; *************** function _dtoa *****************
  2768 ;; Defined at:
  2769 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2772 ;;		 -> sprintf@f(12), 
  2773 ;;  d               2   21[COMRAM] int 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  i               2   29[COMRAM] int 
  2776 ;;  w               2   26[COMRAM] int 
  2777 ;;  s               1   28[COMRAM] unsigned char 
  2778 ;;  p               1   25[COMRAM] _Bool 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2788 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2789 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;Total ram usage:       11 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 4
  2795 ;; This function calls:
  2796 ;;		___awdiv
  2797 ;;		___awmod
  2798 ;;		_abs
  2799 ;;		_pad
  2800 ;; This function is called by:
  2801 ;;		_vfpfcnvrt
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text24
  2806   000FBA                     __ptext24:
  2807                           	callstack 0
  2808   000FBA                     _dtoa:
  2809                           	callstack 23
  2810   000FBA                     
  2811                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2812   000FBA  0E01               	movlw	1
  2813   000FBC  6E1A               	movwf	dtoa@p^0,c
  2814   000FBE                     
  2815                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2816   000FBE  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2817   000FC0  EFE4  F007         	goto	u831
  2818   000FC4  EFE7  F007         	goto	u830
  2819   000FC8                     u831:
  2820   000FC8  0E01               	movlw	1
  2821   000FCA  EFE8  F007         	goto	u840
  2822   000FCE                     u830:
  2823   000FCE  0E00               	movlw	0
  2824   000FD0                     u840:
  2825   000FD0  6E1D               	movwf	dtoa@s^0,c
  2826   000FD2                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2828   000FD2  C04D  F01B         	movff	_width,dtoa@w
  2829   000FD6  C04E  F01C         	movff	_width+1,dtoa@w+1
  2830   000FDA                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2832   000FDA  501D               	movf	dtoa@s^0,w,c
  2833   000FDC  B4D8               	btfsc	status,2,c
  2834   000FDE  EFF3  F007         	goto	u851
  2835   000FE2  EFF5  F007         	goto	u850
  2836   000FE6                     u851:
  2837   000FE6  EF0C  F008         	goto	l966
  2838   000FEA                     u850:
  2839   000FEA                     
  2840                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2841   000FEA  061B               	decf	dtoa@w^0,f,c
  2842   000FEC  A0D8               	btfss	status,0,c
  2843   000FEE  061C               	decf	(dtoa@w+1)^0,f,c
  2844   000FF0                     
  2845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2846   000FF0  501D               	movf	dtoa@s^0,w,c
  2847   000FF2  A4D8               	btfss	status,2,c
  2848   000FF4  EFFE  F007         	goto	u861
  2849   000FF8  EF00  F008         	goto	u860
  2850   000FFC                     u861:
  2851   000FFC  EF06  F008         	goto	l1724
  2852   001000                     u860:
  2853   001000  0E00               	movlw	0
  2854   001002  6E19               	movwf	(_dtoa$1244+1)^0,c
  2855   001004  0E2B               	movlw	43
  2856   001006  6E18               	movwf	_dtoa$1244^0,c
  2857   001008  EF0A  F008         	goto	l1726
  2858   00100C                     l1724:
  2859   00100C  0E00               	movlw	0
  2860   00100E  6E19               	movwf	(_dtoa$1244+1)^0,c
  2861   001010  0E2D               	movlw	45
  2862   001012  6E18               	movwf	_dtoa$1244^0,c
  2863   001014                     l1726:
  2864   001014  C018  F01D         	movff	_dtoa$1244,dtoa@s
  2865   001018                     l966:
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2868   001018  0E00               	movlw	0
  2869   00101A  6E1F               	movwf	(dtoa@i+1)^0,c
  2870   00101C  0E1F               	movlw	31
  2871   00101E  6E1E               	movwf	dtoa@i^0,c
  2872   001020                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2874   001020  0E00               	movlw	0
  2875   001022  0100               	movlb	0	; () banked
  2876   001024  6FE3               	movwf	(_dbuf+31)& (0+255),b
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2879   001026  EF42  F008         	goto	l1740
  2880   00102A                     l1730:
  2881                           
  2882                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2883   00102A  061E               	decf	dtoa@i^0,f,c
  2884   00102C  A0D8               	btfss	status,0,c
  2885   00102E  061F               	decf	(dtoa@i+1)^0,f,c
  2886   001030                     
  2887                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2888   001030  501E               	movf	dtoa@i^0,w,c
  2889   001032  0FC4               	addlw	low _dbuf
  2890   001034  6ED9               	movwf	fsr2l,c
  2891   001036  6ADA               	clrf	fsr2h,c
  2892   001038  C016  F001         	movff	dtoa@d,___awmod@dividend
  2893   00103C  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2894   001040  0E00               	movlw	0
  2895   001042  6E04               	movwf	(___awmod@divisor+1)^0,c
  2896   001044  0E0A               	movlw	10
  2897   001046  6E03               	movwf	___awmod@divisor^0,c
  2898   001048  ECBA  F009         	call	___awmod	;wreg free
  2899   00104C  C001  F007         	movff	?___awmod,abs@a
  2900   001050  C002  F008         	movff	?___awmod+1,abs@a+1
  2901   001054  EC5B  F00C         	call	_abs	;wreg free
  2902   001058  5007               	movf	?_abs^0,w,c
  2903   00105A  0F30               	addlw	48
  2904   00105C  6EDF               	movwf	indf2,c
  2905   00105E                     
  2906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2907   00105E  0E00               	movlw	0
  2908   001060  6E1A               	movwf	dtoa@p^0,c
  2909   001062                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2911   001062  061B               	decf	dtoa@w^0,f,c
  2912   001064  A0D8               	btfss	status,0,c
  2913   001066  061C               	decf	(dtoa@w+1)^0,f,c
  2914   001068                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2916   001068  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2917   00106C  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2918   001070  0E00               	movlw	0
  2919   001072  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2920   001074  0E0A               	movlw	10
  2921   001076  6E03               	movwf	___awdiv@divisor^0,c
  2922   001078  ECFB  F008         	call	___awdiv	;wreg free
  2923   00107C  C001  F016         	movff	?___awdiv,dtoa@d
  2924   001080  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2925   001084                     l1740:
  2926                           
  2927                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2928   001084  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2929   001086  EF4D  F008         	goto	u871
  2930   00108A  501F               	movf	(dtoa@i+1)^0,w,c
  2931   00108C  E108               	bnz	u870
  2932   00108E  041E               	decf	dtoa@i^0,w,c
  2933   001090  A0D8               	btfss	status,0,c
  2934   001092  EF4D  F008         	goto	u871
  2935   001096  EF4F  F008         	goto	u870
  2936   00109A                     u871:
  2937   00109A  EF74  F008         	goto	l1750
  2938   00109E                     u870:
  2939   00109E  5016               	movf	dtoa@d^0,w,c
  2940   0010A0  1017               	iorwf	(dtoa@d+1)^0,w,c
  2941   0010A2  A4D8               	btfss	status,2,c
  2942   0010A4  EF56  F008         	goto	u881
  2943   0010A8  EF58  F008         	goto	u880
  2944   0010AC                     u881:
  2945   0010AC  EF15  F008         	goto	l1730
  2946   0010B0                     u880:
  2947   0010B0  501A               	movf	dtoa@p^0,w,c
  2948   0010B2  A4D8               	btfss	status,2,c
  2949   0010B4  EF5E  F008         	goto	u891
  2950   0010B8  EF60  F008         	goto	u890
  2951   0010BC                     u891:
  2952   0010BC  EF15  F008         	goto	l1730
  2953   0010C0                     u890:
  2954   0010C0  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2955   0010C2  EF6B  F008         	goto	u901
  2956   0010C6  501C               	movf	(dtoa@w+1)^0,w,c
  2957   0010C8  E108               	bnz	u900
  2958   0010CA  041B               	decf	dtoa@w^0,w,c
  2959   0010CC  A0D8               	btfss	status,0,c
  2960   0010CE  EF6B  F008         	goto	u901
  2961   0010D2  EF6D  F008         	goto	u900
  2962   0010D6                     u901:
  2963   0010D6  EF74  F008         	goto	l1750
  2964   0010DA                     u900:
  2965   0010DA  B251               	btfsc	_flags^0,1,c
  2966   0010DC  EF72  F008         	goto	u911
  2967   0010E0  EF74  F008         	goto	u910
  2968   0010E4                     u911:
  2969   0010E4  EF15  F008         	goto	l1730
  2970   0010E8                     u910:
  2971   0010E8                     l1750:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2974   0010E8  501D               	movf	dtoa@s^0,w,c
  2975   0010EA  B4D8               	btfsc	status,2,c
  2976   0010EC  EF7A  F008         	goto	u921
  2977   0010F0  EF7C  F008         	goto	u920
  2978   0010F4                     u921:
  2979   0010F4  EF85  F008         	goto	l1756
  2980   0010F8                     u920:
  2981   0010F8                     
  2982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2983   0010F8  061E               	decf	dtoa@i^0,f,c
  2984   0010FA  A0D8               	btfss	status,0,c
  2985   0010FC  061F               	decf	(dtoa@i+1)^0,f,c
  2986   0010FE                     
  2987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2988   0010FE  501E               	movf	dtoa@i^0,w,c
  2989   001100  0FC4               	addlw	low _dbuf
  2990   001102  6ED9               	movwf	fsr2l,c
  2991   001104  6ADA               	clrf	fsr2h,c
  2992   001106  C01D  FFDF         	movff	dtoa@s,indf2
  2993   00110A                     l1756:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2996   00110A  C015  F00E         	movff	dtoa@fp,pad@fp
  2997   00110E  501E               	movf	dtoa@i^0,w,c
  2998   001110  0FC4               	addlw	low _dbuf
  2999   001112  6E0F               	movwf	pad@buf^0,c
  3000   001114  C01B  F010         	movff	dtoa@w,pad@p
  3001   001118  C01C  F011         	movff	dtoa@w+1,pad@p+1
  3002   00111C  ECB0  F00A         	call	_pad	;wreg free
  3003   001120  0012               	return		;funcret
  3004   001122                     __end_of_dtoa:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _pad *****************
  3008 ;; Defined at:
  3009 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3012 ;;		 -> sprintf@f(12), 
  3013 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3014 ;;		 -> dbuf(32), 
  3015 ;;  p               2   15[COMRAM] int 
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  i               2   18[COMRAM] int 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;Total ram usage:        7 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 3
  3034 ;; This function calls:
  3035 ;;		_fputc
  3036 ;;		_fputs
  3037 ;; This function is called by:
  3038 ;;		_dtoa
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042                           	psect	text25
  3043   001560                     __ptext25:
  3044                           	callstack 0
  3045   001560                     _pad:
  3046                           	callstack 23
  3047   001560                     
  3048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3049   001560  A051               	btfss	_flags^0,0,c
  3050   001562  EFB5  F00A         	goto	u781
  3051   001566  EFB7  F00A         	goto	u780
  3052   00156A                     u781:
  3053   00156A  EFBD  F00A         	goto	l1694
  3054   00156E                     u780:
  3055   00156E                     
  3056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3057   00156E  C00F  F009         	movff	pad@buf,fputs@s
  3058   001572  C00E  F00A         	movff	pad@fp,fputs@fp
  3059   001576  EC07  F00C         	call	_fputs	;wreg free
  3060   00157A                     l1694:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3063   00157A  BE11               	btfsc	(pad@p+1)^0,7,c
  3064   00157C  EFC4  F00A         	goto	u790
  3065   001580  EFC2  F00A         	goto	u791
  3066   001584                     u791:
  3067   001584  EFC8  F00A         	goto	l958
  3068   001588                     u790:
  3069   001588                     
  3070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3071   001588  0E00               	movlw	0
  3072   00158A  6E11               	movwf	(pad@p+1)^0,c
  3073   00158C  0E00               	movlw	0
  3074   00158E  6E10               	movwf	pad@p^0,c
  3075   001590                     l958:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3078   001590  0E00               	movlw	0
  3079   001592  6E14               	movwf	(pad@i+1)^0,c
  3080   001594  0E00               	movlw	0
  3081   001596  6E13               	movwf	pad@i^0,c
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3084   001598  EFD8  F00A         	goto	l1702
  3085   00159C                     l1698:
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3088   00159C  0E00               	movlw	0
  3089   00159E  6E02               	movwf	(fputc@c+1)^0,c
  3090   0015A0  0E20               	movlw	32
  3091   0015A2  6E01               	movwf	fputc@c^0,c
  3092   0015A4  C00E  F003         	movff	pad@fp,fputc@fp
  3093   0015A8  EC5D  F009         	call	_fputc	;wreg free
  3094   0015AC                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3096   0015AC  4A13               	infsnz	pad@i^0,f,c
  3097   0015AE  2A14               	incf	(pad@i+1)^0,f,c
  3098   0015B0                     l1702:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3101   0015B0  5010               	movf	pad@p^0,w,c
  3102   0015B2  5C13               	subwf	pad@i^0,w,c
  3103   0015B4  5014               	movf	(pad@i+1)^0,w,c
  3104   0015B6  0A80               	xorlw	128
  3105   0015B8  6E12               	movwf	??_pad^0,c
  3106   0015BA  5011               	movf	(pad@p+1)^0,w,c
  3107   0015BC  0A80               	xorlw	128
  3108   0015BE  5812               	subwfb	??_pad^0,w,c
  3109   0015C0  A0D8               	btfss	status,0,c
  3110   0015C2  EFE5  F00A         	goto	u801
  3111   0015C6  EFE7  F00A         	goto	u800
  3112   0015CA                     u801:
  3113   0015CA  EFCE  F00A         	goto	l1698
  3114   0015CE                     u800:
  3115   0015CE                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3117   0015CE  B051               	btfsc	_flags^0,0,c
  3118   0015D0  EFEC  F00A         	goto	u811
  3119   0015D4  EFEE  F00A         	goto	u810
  3120   0015D8                     u811:
  3121   0015D8  EFF4  F00A         	goto	l963
  3122   0015DC                     u810:
  3123   0015DC                     
  3124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3125   0015DC  C00F  F009         	movff	pad@buf,fputs@s
  3126   0015E0  C00E  F00A         	movff	pad@fp,fputs@fp
  3127   0015E4  EC07  F00C         	call	_fputs	;wreg free
  3128   0015E8                     l963:
  3129   0015E8  0012               	return		;funcret
  3130   0015EA                     __end_of_pad:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _fputs *****************
  3134 ;; Defined at:
  3135 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3138 ;;		 -> dbuf(32), 
  3139 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3140 ;;		 -> sprintf@f(12), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  i               2   11[COMRAM] int 
  3143 ;;  c               1   10[COMRAM] unsigned char 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  2    8[COMRAM] int 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3157 ;;Total ram usage:        5 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 2
  3160 ;; This function calls:
  3161 ;;		_fputc
  3162 ;; This function is called by:
  3163 ;;		_pad
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text26
  3168   00180E                     __ptext26:
  3169                           	callstack 0
  3170   00180E                     _fputs:
  3171                           	callstack 23
  3172   00180E  0E00               	movlw	0
  3173   001810  6E0D               	movwf	(fputs@i+1)^0,c
  3174   001812  0E00               	movlw	0
  3175   001814  6E0C               	movwf	fputs@i^0,c
  3176   001816  EF16  F00C         	goto	l1602
  3177   00181A                     l1598:
  3178   00181A  C00B  F001         	movff	fputs@c,fputc@c
  3179   00181E  6A02               	clrf	(fputc@c+1)^0,c
  3180   001820  C00A  F003         	movff	fputs@fp,fputc@fp
  3181   001824  EC5D  F009         	call	_fputc	;wreg free
  3182   001828  4A0C               	infsnz	fputs@i^0,f,c
  3183   00182A  2A0D               	incf	(fputs@i+1)^0,f,c
  3184   00182C                     l1602:
  3185   00182C  5009               	movf	fputs@s^0,w,c
  3186   00182E  240C               	addwf	fputs@i^0,w,c
  3187   001830  6ED9               	movwf	fsr2l,c
  3188   001832  6ADA               	clrf	fsr2h,c
  3189   001834  50DF               	movf	indf2,w,c
  3190   001836  6E0B               	movwf	fputs@c^0,c
  3191   001838  500B               	movf	fputs@c^0,w,c
  3192   00183A  A4D8               	btfss	status,2,c
  3193   00183C  EF22  F00C         	goto	u651
  3194   001840  EF24  F00C         	goto	u650
  3195   001844                     u651:
  3196   001844  EF0D  F00C         	goto	l1598
  3197   001848                     u650:
  3198   001848  0012               	return		;funcret
  3199   00184A                     __end_of_fputs:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function _fputc *****************
  3203 ;; Defined at:
  3204 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  c               2    0[COMRAM] int 
  3207 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3208 ;;		 -> sprintf@f(12), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2    0[COMRAM] int 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;Total ram usage:        8 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 1
  3227 ;; This function calls:
  3228 ;;		_putch
  3229 ;; This function is called by:
  3230 ;;		_pad
  3231 ;;		_vfpfcnvrt
  3232 ;;		_fputs
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text27
  3237   0012BA                     __ptext27:
  3238                           	callstack 0
  3239   0012BA                     _fputc:
  3240                           	callstack 26
  3241   0012BA  5003               	movf	fputc@fp^0,w,c
  3242   0012BC  B4D8               	btfsc	status,2,c
  3243   0012BE  EF63  F009         	goto	u611
  3244   0012C2  EF65  F009         	goto	u610
  3245   0012C6                     u611:
  3246   0012C6  EF6D  F009         	goto	l1586
  3247   0012CA                     u610:
  3248   0012CA  5003               	movf	fputc@fp^0,w,c
  3249   0012CC  A4D8               	btfss	status,2,c
  3250   0012CE  EF6B  F009         	goto	u621
  3251   0012D2  EF6D  F009         	goto	u620
  3252   0012D6                     u621:
  3253   0012D6  EF72  F009         	goto	l1588
  3254   0012DA                     u620:
  3255   0012DA                     l1586:
  3256   0012DA  5001               	movf	fputc@c^0,w,c
  3257   0012DC  EC2E  F00D         	call	_putch
  3258   0012E0  EFB9  F009         	goto	l1027
  3259   0012E4                     l1588:
  3260   0012E4  5003               	movf	fputc@fp^0,w,c
  3261   0012E6  6ED9               	movwf	fsr2l,c
  3262   0012E8  6ADA               	clrf	fsr2h,c
  3263   0012EA  0E0A               	movlw	10
  3264   0012EC  26D9               	addwf	fsr2l,f,c
  3265   0012EE  50DE               	movf	postinc2,w,c
  3266   0012F0  10DE               	iorwf	postinc2,w,c
  3267   0012F2  B4D8               	btfsc	status,2,c
  3268   0012F4  EF7E  F009         	goto	u631
  3269   0012F8  EF80  F009         	goto	u630
  3270   0012FC                     u631:
  3271   0012FC  EF99  F009         	goto	l1592
  3272   001300                     u630:
  3273   001300  5003               	movf	fputc@fp^0,w,c
  3274   001302  6ED9               	movwf	fsr2l,c
  3275   001304  6ADA               	clrf	fsr2h,c
  3276   001306  0E0A               	movlw	10
  3277   001308  26D9               	addwf	fsr2l,f,c
  3278   00130A  5003               	movf	fputc@fp^0,w,c
  3279   00130C  6EE1               	movwf	fsr1l,c
  3280   00130E  6AE2               	clrf	fsr1h,c
  3281   001310  0E03               	movlw	3
  3282   001312  26E1               	addwf	fsr1l,f,c
  3283   001314  50DE               	movf	postinc2,w,c
  3284   001316  5CE6               	subwf	postinc1,w,c
  3285   001318  50E6               	movf	postinc1,w,c
  3286   00131A  0A80               	xorlw	128
  3287   00131C  6E08               	movwf	(??_fputc+4)^0,c
  3288   00131E  50DE               	movf	postinc2,w,c
  3289   001320  0A80               	xorlw	128
  3290   001322  5808               	subwfb	(??_fputc+4)^0,w,c
  3291   001324  B0D8               	btfsc	status,0,c
  3292   001326  EF97  F009         	goto	u641
  3293   00132A  EF99  F009         	goto	u640
  3294   00132E                     u641:
  3295   00132E  EFB9  F009         	goto	l1027
  3296   001332                     u640:
  3297   001332                     l1592:
  3298   001332  5003               	movf	fputc@fp^0,w,c
  3299   001334  6ED9               	movwf	fsr2l,c
  3300   001336  6ADA               	clrf	fsr2h,c
  3301   001338  0E03               	movlw	3
  3302   00133A  26D9               	addwf	fsr2l,f,c
  3303   00133C  CFDE F004          	movff	postinc2,??_fputc
  3304   001340  CFDD F005          	movff	postdec2,??_fputc+1
  3305   001344  5003               	movf	fputc@fp^0,w,c
  3306   001346  6ED9               	movwf	fsr2l,c
  3307   001348  6ADA               	clrf	fsr2h,c
  3308   00134A  CFDE F006          	movff	postinc2,??_fputc+2
  3309   00134E  CFDD F007          	movff	postdec2,??_fputc+3
  3310   001352  5004               	movf	??_fputc^0,w,c
  3311   001354  2406               	addwf	(??_fputc+2)^0,w,c
  3312   001356  6ED9               	movwf	fsr2l,c
  3313   001358  5005               	movf	(??_fputc+1)^0,w,c
  3314   00135A  2007               	addwfc	(??_fputc+3)^0,w,c
  3315   00135C  6EDA               	movwf	fsr2h,c
  3316   00135E  C001  FFDF         	movff	fputc@c,indf2
  3317   001362  5003               	movf	fputc@fp^0,w,c
  3318   001364  6ED9               	movwf	fsr2l,c
  3319   001366  6ADA               	clrf	fsr2h,c
  3320   001368  0E03               	movlw	3
  3321   00136A  26D9               	addwf	fsr2l,f,c
  3322   00136C  2ADE               	incf	postinc2,f,c
  3323   00136E  0E00               	movlw	0
  3324   001370  22DD               	addwfc	postdec2,f,c
  3325   001372                     l1027:
  3326   001372  0012               	return		;funcret
  3327   001374                     __end_of_fputc:
  3328                           	callstack 0
  3329                           
  3330 ;; *************** function _putch *****************
  3331 ;; Defined at:
  3332 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;  c               1    wreg     unsigned char 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  c               1    0[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_fputc
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text28
  3360   001A5C                     __ptext28:
  3361                           	callstack 0
  3362   001A5C                     _putch:
  3363                           	callstack 26
  3364   001A5C  0012               	return		;funcret
  3365   001A5E                     __end_of_putch:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _abs *****************
  3369 ;; Defined at:
  3370 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  a               2    6[COMRAM] int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    6[COMRAM] int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;Total ram usage:        4 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_dtoa
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text29
  3398   0018B6                     __ptext29:
  3399                           	callstack 0
  3400   0018B6                     _abs:
  3401                           	callstack 26
  3402   0018B6  BE08               	btfsc	(abs@a+1)^0,7,c
  3403   0018B8  EF60  F00C         	goto	u821
  3404   0018BC  EF62  F00C         	goto	u820
  3405   0018C0                     u821:
  3406   0018C0  EF68  F00C         	goto	l1012
  3407   0018C4                     u820:
  3408   0018C4  C007  F007         	movff	abs@a,?_abs
  3409   0018C8  C008  F008         	movff	abs@a+1,?_abs+1
  3410   0018CC  EF74  F00C         	goto	l1015
  3411   0018D0                     l1012:
  3412   0018D0  C007  F009         	movff	abs@a,??_abs
  3413   0018D4  C008  F00A         	movff	abs@a+1,??_abs+1
  3414   0018D8  1E09               	comf	??_abs^0,f,c
  3415   0018DA  1E0A               	comf	(??_abs+1)^0,f,c
  3416   0018DC  4A09               	infsnz	??_abs^0,f,c
  3417   0018DE  2A0A               	incf	(??_abs+1)^0,f,c
  3418   0018E0  C009  F007         	movff	??_abs,?_abs
  3419   0018E4  C00A  F008         	movff	??_abs+1,?_abs+1
  3420   0018E8                     l1015:
  3421   0018E8  0012               	return		;funcret
  3422   0018EA                     __end_of_abs:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function ___awmod *****************
  3426 ;; Defined at:
  3427 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  dividend        2    0[COMRAM] int 
  3430 ;;  divisor         2    2[COMRAM] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  sign            1    5[COMRAM] unsigned char 
  3433 ;;  counter         1    4[COMRAM] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2    0[COMRAM] int 
  3436 ;; Registers used:
  3437 ;;		wreg, status,2, status,0
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3446 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3447 ;;Total ram usage:        6 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_dtoa
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text30
  3457   001374                     __ptext30:
  3458                           	callstack 0
  3459   001374                     ___awmod:
  3460                           	callstack 26
  3461   001374  0E00               	movlw	0
  3462   001376  6E06               	movwf	___awmod@sign^0,c
  3463   001378  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3464   00137A  EFC3  F009         	goto	u720
  3465   00137E  EFC1  F009         	goto	u721
  3466   001382                     u721:
  3467   001382  EFC9  F009         	goto	l1662
  3468   001386                     u720:
  3469   001386  6C01               	negf	___awmod@dividend^0,c
  3470   001388  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3471   00138A  B0D8               	btfsc	status,0,c
  3472   00138C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3473   00138E  0E01               	movlw	1
  3474   001390  6E06               	movwf	___awmod@sign^0,c
  3475   001392                     l1662:
  3476   001392  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3477   001394  EFD0  F009         	goto	u730
  3478   001398  EFCE  F009         	goto	u731
  3479   00139C                     u731:
  3480   00139C  EFD4  F009         	goto	l1666
  3481   0013A0                     u730:
  3482   0013A0  6C03               	negf	___awmod@divisor^0,c
  3483   0013A2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3484   0013A4  B0D8               	btfsc	status,0,c
  3485   0013A6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3486   0013A8                     l1666:
  3487   0013A8  5003               	movf	___awmod@divisor^0,w,c
  3488   0013AA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3489   0013AC  B4D8               	btfsc	status,2,c
  3490   0013AE  EFDB  F009         	goto	u741
  3491   0013B2  EFDD  F009         	goto	u740
  3492   0013B6                     u741:
  3493   0013B6  EF01  F00A         	goto	l1682
  3494   0013BA                     u740:
  3495   0013BA  0E01               	movlw	1
  3496   0013BC  6E05               	movwf	___awmod@counter^0,c
  3497   0013BE  EFE5  F009         	goto	l1672
  3498   0013C2                     l1670:
  3499   0013C2  90D8               	bcf	status,0,c
  3500   0013C4  3603               	rlcf	___awmod@divisor^0,f,c
  3501   0013C6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3502   0013C8  2A05               	incf	___awmod@counter^0,f,c
  3503   0013CA                     l1672:
  3504   0013CA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3505   0013CC  EFEA  F009         	goto	u751
  3506   0013D0  EFEC  F009         	goto	u750
  3507   0013D4                     u751:
  3508   0013D4  EFE1  F009         	goto	l1670
  3509   0013D8                     u750:
  3510   0013D8                     l1674:
  3511   0013D8  5003               	movf	___awmod@divisor^0,w,c
  3512   0013DA  5C01               	subwf	___awmod@dividend^0,w,c
  3513   0013DC  5004               	movf	(___awmod@divisor+1)^0,w,c
  3514   0013DE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3515   0013E0  A0D8               	btfss	status,0,c
  3516   0013E2  EFF5  F009         	goto	u761
  3517   0013E6  EFF7  F009         	goto	u760
  3518   0013EA                     u761:
  3519   0013EA  EFFB  F009         	goto	l1678
  3520   0013EE                     u760:
  3521   0013EE  5003               	movf	___awmod@divisor^0,w,c
  3522   0013F0  5E01               	subwf	___awmod@dividend^0,f,c
  3523   0013F2  5004               	movf	(___awmod@divisor+1)^0,w,c
  3524   0013F4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3525   0013F6                     l1678:
  3526   0013F6  90D8               	bcf	status,0,c
  3527   0013F8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3528   0013FA  3203               	rrcf	___awmod@divisor^0,f,c
  3529   0013FC  2E05               	decfsz	___awmod@counter^0,f,c
  3530   0013FE  EFEC  F009         	goto	l1674
  3531   001402                     l1682:
  3532   001402  5006               	movf	___awmod@sign^0,w,c
  3533   001404  B4D8               	btfsc	status,2,c
  3534   001406  EF07  F00A         	goto	u771
  3535   00140A  EF09  F00A         	goto	u770
  3536   00140E                     u771:
  3537   00140E  EF0D  F00A         	goto	l1686
  3538   001412                     u770:
  3539   001412  6C01               	negf	___awmod@dividend^0,c
  3540   001414  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3541   001416  B0D8               	btfsc	status,0,c
  3542   001418  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3543   00141A                     l1686:
  3544   00141A  C001  F001         	movff	___awmod@dividend,?___awmod
  3545   00141E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3546   001422  0012               	return		;funcret
  3547   001424                     __end_of___awmod:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function ___awdiv *****************
  3551 ;; Defined at:
  3552 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  dividend        2    0[COMRAM] int 
  3555 ;;  divisor         2    2[COMRAM] int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  quotient        2    6[COMRAM] int 
  3558 ;;  sign            1    5[COMRAM] unsigned char 
  3559 ;;  counter         1    4[COMRAM] unsigned char 
  3560 ;; Return value:  Size  Location     Type
  3561 ;;                  2    0[COMRAM] int 
  3562 ;; Registers used:
  3563 ;;		wreg, status,2, status,0
  3564 ;; Tracked objects:
  3565 ;;		On entry : 0/0
  3566 ;;		On exit  : 0/0
  3567 ;;		Unchanged: 0/0
  3568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;Total ram usage:        8 bytes
  3574 ;; Hardware stack levels used: 1
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_dtoa
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text31
  3583   0011F6                     __ptext31:
  3584                           	callstack 0
  3585   0011F6                     ___awdiv:
  3586                           	callstack 26
  3587   0011F6  0E00               	movlw	0
  3588   0011F8  6E06               	movwf	___awdiv@sign^0,c
  3589   0011FA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3590   0011FC  EF04  F009         	goto	u660
  3591   001200  EF02  F009         	goto	u661
  3592   001204                     u661:
  3593   001204  EF0A  F009         	goto	l1618
  3594   001208                     u660:
  3595   001208  6C03               	negf	___awdiv@divisor^0,c
  3596   00120A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3597   00120C  B0D8               	btfsc	status,0,c
  3598   00120E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3599   001210  0E01               	movlw	1
  3600   001212  6E06               	movwf	___awdiv@sign^0,c
  3601   001214                     l1618:
  3602   001214  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3603   001216  EF11  F009         	goto	u670
  3604   00121A  EF0F  F009         	goto	u671
  3605   00121E                     u671:
  3606   00121E  EF17  F009         	goto	l1624
  3607   001222                     u670:
  3608   001222  6C01               	negf	___awdiv@dividend^0,c
  3609   001224  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3610   001226  B0D8               	btfsc	status,0,c
  3611   001228  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3612   00122A  0E01               	movlw	1
  3613   00122C  1A06               	xorwf	___awdiv@sign^0,f,c
  3614   00122E                     l1624:
  3615   00122E  0E00               	movlw	0
  3616   001230  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3617   001232  0E00               	movlw	0
  3618   001234  6E07               	movwf	___awdiv@quotient^0,c
  3619   001236  5003               	movf	___awdiv@divisor^0,w,c
  3620   001238  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3621   00123A  B4D8               	btfsc	status,2,c
  3622   00123C  EF22  F009         	goto	u681
  3623   001240  EF24  F009         	goto	u680
  3624   001244                     u681:
  3625   001244  EF4C  F009         	goto	l1646
  3626   001248                     u680:
  3627   001248  0E01               	movlw	1
  3628   00124A  6E05               	movwf	___awdiv@counter^0,c
  3629   00124C  EF2C  F009         	goto	l1632
  3630   001250                     l1630:
  3631   001250  90D8               	bcf	status,0,c
  3632   001252  3603               	rlcf	___awdiv@divisor^0,f,c
  3633   001254  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3634   001256  2A05               	incf	___awdiv@counter^0,f,c
  3635   001258                     l1632:
  3636   001258  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3637   00125A  EF31  F009         	goto	u691
  3638   00125E  EF33  F009         	goto	u690
  3639   001262                     u691:
  3640   001262  EF28  F009         	goto	l1630
  3641   001266                     u690:
  3642   001266                     l1634:
  3643   001266  90D8               	bcf	status,0,c
  3644   001268  3607               	rlcf	___awdiv@quotient^0,f,c
  3645   00126A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3646   00126C  5003               	movf	___awdiv@divisor^0,w,c
  3647   00126E  5C01               	subwf	___awdiv@dividend^0,w,c
  3648   001270  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3649   001272  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3650   001274  A0D8               	btfss	status,0,c
  3651   001276  EF3F  F009         	goto	u701
  3652   00127A  EF41  F009         	goto	u700
  3653   00127E                     u701:
  3654   00127E  EF46  F009         	goto	l1642
  3655   001282                     u700:
  3656   001282  5003               	movf	___awdiv@divisor^0,w,c
  3657   001284  5E01               	subwf	___awdiv@dividend^0,f,c
  3658   001286  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3659   001288  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3660   00128A  8007               	bsf	___awdiv@quotient^0,0,c
  3661   00128C                     l1642:
  3662   00128C  90D8               	bcf	status,0,c
  3663   00128E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3664   001290  3203               	rrcf	___awdiv@divisor^0,f,c
  3665   001292  2E05               	decfsz	___awdiv@counter^0,f,c
  3666   001294  EF33  F009         	goto	l1634
  3667   001298                     l1646:
  3668   001298  5006               	movf	___awdiv@sign^0,w,c
  3669   00129A  B4D8               	btfsc	status,2,c
  3670   00129C  EF52  F009         	goto	u711
  3671   0012A0  EF54  F009         	goto	u710
  3672   0012A4                     u711:
  3673   0012A4  EF58  F009         	goto	l1650
  3674   0012A8                     u710:
  3675   0012A8  6C07               	negf	___awdiv@quotient^0,c
  3676   0012AA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3677   0012AC  B0D8               	btfsc	status,0,c
  3678   0012AE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3679   0012B0                     l1650:
  3680   0012B0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3681   0012B4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3682   0012B8  0012               	return		;funcret
  3683   0012BA                     __end_of___awdiv:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function ___lwdiv *****************
  3687 ;; Defined at:
  3688 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  dividend        2    6[COMRAM] unsigned int 
  3691 ;;  divisor         2    8[COMRAM] unsigned int 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  quotient        2   10[COMRAM] unsigned int 
  3694 ;;  counter         1   12[COMRAM] unsigned char 
  3695 ;; Return value:  Size  Location     Type
  3696 ;;                  2    6[COMRAM] unsigned int 
  3697 ;; Registers used:
  3698 ;;		wreg, status,2, status,0
  3699 ;; Tracked objects:
  3700 ;;		On entry : 0/0
  3701 ;;		On exit  : 0/0
  3702 ;;		Unchanged: 0/0
  3703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3705 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;Total ram usage:        7 bytes
  3709 ;; Hardware stack levels used: 1
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_ADC2String
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text32
  3718   0015EA                     __ptext32:
  3719                           	callstack 0
  3720   0015EA                     ___lwdiv:
  3721                           	callstack 29
  3722   0015EA  0E00               	movlw	0
  3723   0015EC  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3724   0015EE  0E00               	movlw	0
  3725   0015F0  6E0B               	movwf	___lwdiv@quotient^0,c
  3726   0015F2  5009               	movf	___lwdiv@divisor^0,w,c
  3727   0015F4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3728   0015F6  B4D8               	btfsc	status,2,c
  3729   0015F8  EF00  F00B         	goto	u1061
  3730   0015FC  EF02  F00B         	goto	u1060
  3731   001600                     u1061:
  3732   001600  EF2A  F00B         	goto	l751
  3733   001604                     u1060:
  3734   001604  0E01               	movlw	1
  3735   001606  6E0D               	movwf	___lwdiv@counter^0,c
  3736   001608  EF0A  F00B         	goto	l1912
  3737   00160C                     l1910:
  3738   00160C  90D8               	bcf	status,0,c
  3739   00160E  3609               	rlcf	___lwdiv@divisor^0,f,c
  3740   001610  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3741   001612  2A0D               	incf	___lwdiv@counter^0,f,c
  3742   001614                     l1912:
  3743   001614  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3744   001616  EF0F  F00B         	goto	u1071
  3745   00161A  EF11  F00B         	goto	u1070
  3746   00161E                     u1071:
  3747   00161E  EF06  F00B         	goto	l1910
  3748   001622                     u1070:
  3749   001622                     l1914:
  3750   001622  90D8               	bcf	status,0,c
  3751   001624  360B               	rlcf	___lwdiv@quotient^0,f,c
  3752   001626  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3753   001628  5009               	movf	___lwdiv@divisor^0,w,c
  3754   00162A  5C07               	subwf	___lwdiv@dividend^0,w,c
  3755   00162C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3756   00162E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3757   001630  A0D8               	btfss	status,0,c
  3758   001632  EF1D  F00B         	goto	u1081
  3759   001636  EF1F  F00B         	goto	u1080
  3760   00163A                     u1081:
  3761   00163A  EF24  F00B         	goto	l1922
  3762   00163E                     u1080:
  3763   00163E  5009               	movf	___lwdiv@divisor^0,w,c
  3764   001640  5E07               	subwf	___lwdiv@dividend^0,f,c
  3765   001642  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3766   001644  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3767   001646  800B               	bsf	___lwdiv@quotient^0,0,c
  3768   001648                     l1922:
  3769   001648  90D8               	bcf	status,0,c
  3770   00164A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3771   00164C  3209               	rrcf	___lwdiv@divisor^0,f,c
  3772   00164E  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3773   001650  EF11  F00B         	goto	l1914
  3774   001654                     l751:
  3775   001654  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3776   001658  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3777   00165C  0012               	return		;funcret
  3778   00165E                     __end_of___lwdiv:
  3779                           	callstack 0
  3780                           
  3781                           	psect	rparam
  3782   000000                     
  3783                           	psect	config
  3784                           
  3785                           ;Config register CONFIG1L @ 0x300000
  3786                           ;	External Oscillator mode Selection bits
  3787                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3788                           ;	Power-up default value for COSC bits
  3789                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3790   300000                     	org	3145728
  3791   300000  AA                 	db	170
  3792                           
  3793                           ;Config register CONFIG1H @ 0x300001
  3794                           ;	unspecified, using default values
  3795                           ;	Clock Out Enable bit
  3796                           ;	CLKOUTEN = 0x1, unprogrammed default
  3797                           ;	Clock Switch Enable bit
  3798                           ;	CSWEN = 0x1, unprogrammed default
  3799                           ;	Fail-Safe Clock Monitor Enable bit
  3800                           ;	FCMEN = 0x1, unprogrammed default
  3801   300001                     	org	3145729
  3802   300001  FF                 	db	255
  3803                           
  3804                           ;Config register CONFIG3L @ 0x300004
  3805                           ;	WDT Period Select bits
  3806                           ;	WDTCPS = 0x1F, unprogrammed default
  3807                           ;	WDT operating mode
  3808                           ;	WDTE = OFF, WDT Disabled
  3809   300004                     	org	3145732
  3810   300004  9F                 	db	159
  3811                           
  3812                           ;Config register CONFIG3H @ 0x300005
  3813                           ;	unspecified, using default values
  3814                           ;	WDT Window Select bits
  3815                           ;	WDTCWS = 0x7, unprogrammed default
  3816                           ;	WDT input clock selector
  3817                           ;	WDTCCS = 0x7, unprogrammed default
  3818   300005                     	org	3145733
  3819   300005  FF                 	db	255
  3820                           tosu	equ	0xFFF
  3821                           tosh	equ	0xFFE
  3822                           tosl	equ	0xFFD
  3823                           stkptr	equ	0xFFC
  3824                           pclatu	equ	0xFFB
  3825                           pclath	equ	0xFFA
  3826                           pcl	equ	0xFF9
  3827                           tblptru	equ	0xFF8
  3828                           tblptrh	equ	0xFF7
  3829                           tblptrl	equ	0xFF6
  3830                           tablat	equ	0xFF5
  3831                           prodh	equ	0xFF4
  3832                           prodl	equ	0xFF3
  3833                           indf0	equ	0xFEF
  3834                           postinc0	equ	0xFEE
  3835                           postdec0	equ	0xFED
  3836                           preinc0	equ	0xFEC
  3837                           plusw0	equ	0xFEB
  3838                           fsr0h	equ	0xFEA
  3839                           fsr0l	equ	0xFE9
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           postinc1	equ	0xFE6
  3843                           postdec1	equ	0xFE5
  3844                           preinc1	equ	0xFE4
  3845                           plusw1	equ	0xFE3
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           bsr	equ	0xFE0
  3849                           indf2	equ	0xFDF
  3850                           postinc2	equ	0xFDE
  3851                           postdec2	equ	0xFDD
  3852                           preinc2	equ	0xFDC
  3853                           plusw2	equ	0xFDB
  3854                           fsr2h	equ	0xFDA
  3855                           fsr2l	equ	0xFD9
  3856                           status	equ	0xFD8

Data Sizes:
    Strings     54
    Constant    0
    Data        1
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     76      87
    BANK0           160      0     132
    BANK1           256    208     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1165$buffer	PTR unsigned char  size(2) Largest target is 0

    S1165$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK1[50]), main@buf(BANK1[50]), main@green_char(BANK1[50]), main@red_char(BANK1[50]), 
		 -> sendAllReadings@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK1[50]), main@buf(BANK1[50]), main@green_char(BANK1[50]), main@red_char(BANK1[50]), 
		 -> sendAllReadings@buffer(COMRAM[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               208   208      0   17381
                                              0 BANK1    208   208      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                          10     6      4    8741
                                             66 COMRAM    10     6      4
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    7222
                                             46 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    6413
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    6054
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     947
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    3775
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _ADC_getval
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D0      D0       7       81.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      84       5       82.5%
BITBIGSFRh          79      0       0      32        0.0%
BITBIGSFRlhlhh      6E      0       0      38        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4C      57       1       91.6%
BITBIGSFRlllhh      36      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      45        0.0%
BITBIGSFRlllll      26      0       0      49        0.0%
BITBIGSFRlhlll      20      0       0      41        0.0%
BITBIGSFRlhhhhl     17      0       0      35        0.0%
BITBIGSFRlllhll      F      0       0      47        0.0%
BITBIGSFRlllhlh      C      0       0      44        0.0%
BITBIGSFRllh         C      0       0      42        0.0%
BITBIGSFRlllhll      9      0       0      46        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRlhhhhl      7      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      48        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRlhhhhh      1      0       0      33        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      50        0.0%
DATA                 0      0     1AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 12:18:43 2024

               _color_read_Red 165E                _color_read_Blue 16FE                             l20 192A  
                           l21 1948                             l15 1A18                             l40 18B4  
                           l18 191C                             l43 19E0                             l52 174C  
                           l46 16AC                             l49 16FC                             l82 1974  
                           l91 1A46                             l85 199A                             l94 1A50  
                           l79 1972                             l88 1A5A                             l97 1A3C  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Green 16AE  
                          l100 178E                            l206 1A1C                            l215 1880  
                          l143 1132                            l209 1A30                            l260 19C0  
                          l504 1422                            l257 155E                            l197 19FE  
                          l491 12B8                            l751 1654                            l758 165C  
                          l961 15CE                            l938 180C                            l963 15E8  
                          l958 1590                            l966 1018                            l983 14C8  
                          l979 1120                            l987 14D0                            u610 12CA  
                          u611 12C6                            u700 1282                            u620 12DA  
                          u701 127E                            u621 12D6                            u710 12A8  
                          u630 1300                            u711 12A4                            u631 12FC  
                          u720 1386                            u640 1332                            u800 15CE  
                          u721 1382                            u641 132E                            u801 15CA  
                          u730 13A0                            u650 1848                            u810 15DC  
                          u731 139C                            u651 1844                            u811 15D8  
                          u660 1208                            u740 13BA                            u820 18C4  
                          u900 10DA                            u661 1204                            u741 13B6  
                          u821 18C0                            u901 10D6                            u670 1222  
                          u750 13D8                            u910 10E8                            u830 0FCE  
                          u671 121E                            u751 13D4                            u911 10E4  
                          u831 0FC8                            u680 1248                            u760 13EE  
                          u920 10F8                            u840 0FD0                            u681 1244  
                          u761 13EA                            u921 10F4                            u690 1266  
                          u770 1412                            u850 0FEA                            u930 1452  
                          u691 1262                            u771 140E                            u851 0FE6  
                          u931 144E                            u780 156E                            u860 1000  
                          u940 14C8                            u781 156A                            u861 0FFC  
                          u941 14C4                            u790 1588                            u870 109E  
                          u950 1984                            u791 1584                            u871 109A  
                          u951 1980                            u880 10B0                            u960 199A  
                          u881 10AC                            u961 1996                            u890 10C0  
                          u970 0E5E                            u891 10BC                            u971 0E5A  
                          u980 0EDA                            u981 0ED6                            u990 0EFC  
                          u991 0EF8                            _abs 18B6                            _pad 1560  
                 ___awmod@sign 0006                            wreg 0FE8                           l1002 0FB8  
                         l1012 18D0                           l1015 18E8                           l1008 17D0  
                         l2010 1126                           l1027 1372                           l1035 1848  
                         ?_abs 0007                           l2020 1176                           l2012 112A  
                         l1038 1A5C                           l2030 11D6                           l2022 118E  
                         l2014 112E                           l2104 0EBC                           l2032 11E2  
                         l2024 11A6                           l2016 1130                           l2008 1122  
                         l2026 11BE                           l2018 1162                           l2028 11CA  
                         l1600 1828                           l1610 11F6                           l1602 182C  
                         l1620 1222                           l1612 11FA                           l1700 15AC  
                         l1604 199C                           l1630 1250                           l1622 122A  
                         l1614 1208                           l1702 15B0                           l1710 0FBA  
                         l1606 19B8                           l1640 128A                           l1632 1258  
                         l1624 122E                           l1616 1210                           l1704 15DC  
                         l1720 0FF0                           l1712 0FBE                           l1800 0EDA  
                         l1650 12B0                           l1642 128C                           l1634 1266  
                         l1626 1236                           l1618 1214                           l1706 18B6  
                         l1730 102A                           l1722 1000                           l1714 0FD2  
                         l1810 0F30                           l1802 0EEE                           l1644 1292  
                         l1636 126C                           l1628 1248                           l1660 138E  
                         l1708 18C4                           l1732 1030                           l1740 1084  
                         l1724 100C                           l1716 0FDA                           l1820 0F86  
                         l1812 0F50                           l1804 0EFC                           l1900 1A1C  
                         l1910 160C                           l1638 1282                           l1646 1298  
                         l1670 13C2                           l1662 1392                           l1654 1374  
                         l1590 1300                           l1582 12BA                           l1742 109E  
                         l1750 10E8                           l1734 105E                           l1726 1014  
                         l1718 0FEA                           l1814 0F68                           l1806 0F06  
                         l1902 1A2C                           l1920 1646                           l1912 1614  
                         l1904 15EA                           l1648 12A8                           l1680 13FC  
                         l1672 13CA                           l1664 13A0                           l1656 1378  
                         l1592 1332                           l1584 12CA                           l1752 10F8  
                         l1744 10B0                           l1736 1062                           l1728 1020  
                         l1760 1424                           l1816 0F72                           l1808 0F10  
                         l1824 0F92                           l1840 1A38                           l1922 1648  
                         l1914 1622                           l1906 15F2                           l1674 13D8  
                         l1682 1402                           l1666 13A8                           l1658 1386  
                         l1586 12DA                           l1690 1560                           l1754 10FE  
                         l1746 10C0                           l1738 1068                           l1770 1496  
                         l1762 142C                           l1850 17A8                           l1930 1A12  
                         l1834 1A52                           l1842 1A48                           l1924 164E  
                         l1916 1628                           l1908 1604                           l1684 1412  
                         l1676 13EE                           l1668 13BA                           l1588 12E4  
                         l1596 180E                           l1692 156E                           l1756 110A  
                         l1748 10DA                           l1764 1452                           l1772 149E  
                         l1780 0E5E                           l1852 17C8                           l1940 1940  
                         l1932 1A14                           l1860 195A                           l1836 1A56  
                         l1844 1A4C                           l1918 163E                           l1686 141A  
                         l1678 13F6                           l1598 181A                           l1694 157A  
                         l1766 145A                           l1790 0E80                           l1782 0E66  
                         l1846 1790                           l1934 1A16                           l1926 1A00  
                         l1862 195C                           l1774 1974                           l1838 1A34  
                         l1950 18A0                           l1870 1A3E                           l1696 1588  
                         l1768 1476                           l1792 0E8C                           l1784 0E72  
                         l1848 1798                           l1936 191A                           l1928 1A0A  
                         l1864 195E                           l1856 194A                           l1776 1984  
                         l1952 18AA                           l1944 1882                           l1880 1764  
                         l1872 1A42                           l1960 16AE                           l1698 159C  
                         l1786 0E76                           l1778 0E38                           l1890 17DE  
                         l1938 1930                           l1866 1960                           l1858 1954  
                         l1946 1886                           l1882 178A                           l1874 1750  
                         l1962 16F4                           l1954 165E                           l1796 0E94  
                         l1788 0E7E                           l1892 17E6                           l1868 19C4  
                         l1948 1890                           l1884 178C                           l1876 1754  
                         l1956 16A4                           l1980 19FA                           l1972 19E2  
                         l1798 0ECA                           l1894 17EE                           l1878 175C  
                         l1966 16FE                           l1982 19FC                           l1974 19EC  
                         l1990 184A                           ?_pad 000E                           l1896 17FE  
                         l1888 17D2                           l1984 14D2                           l1968 1744  
                         l1976 19EE                           l1992 184E                           l1986 14EE  
                         l1978 19F8                           l1994 185C                           l1988 153E  
                         l1996 1860                           l1998 1868                           STR_1 0E2D  
                         STR_2 0E22                           STR_3 0E16                           STR_4 0E01  
                         u1000 0F30                           u1001 0F2C                           u1010 0F50  
                         u1011 0F4C                           u1020 17C8                           u1100 1880  
                         u1021 17C4                           u1101 187C                           u1030 1778  
                         u1031 1770                           u1050 1A2C                           u1051 1A28  
                         u1060 1604                           u1061 1600                           u1070 1622  
                         u1071 161E                           u1080 163E                           u1048 177A  
                         u1081 163A                           u1090 192A                           u1091 1926  
                 _BAUD4CONbits 0EE9                           u1177 1862                           u1187 1896  
                         abs@a 0007                           _dbuf 00C4                           _main 1122  
                         _dtoa 0FBA                           _prec 004F                           pad@i 0013  
                         pad@p 0010                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 1A1A         __end_of_color_read_Red 16AE                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0012                          ?_main 0001  
                        ?_dtoa 0015                          _ADPCH 0F5F                __end_of___awdiv 12BA  
              __end_of___awmod 1424                ___awdiv@divisor 0003                __end_of___lwdiv 165E  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0021                   main@red_char 0132  
      __end_of_sendCharSerial4 1A32     __end_of_I2C_2_Master_Start 1A5C     __end_of_I2C_2_Master_Write 1A3E  
                        _flags 0051            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 12BA                          _fputs 180E                          pad@fp 000E  
                        _width 004D                          _putch 1A5C                          dtoa@d 0016  
                        dtoa@i 001E                          dtoa@p 001A                          dtoa@s 001D  
                        dtoa@w 001B                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 180E        __end_of_color_read_Blue 174E          _I2C_2_Master_RepStart 1A3E  
              ?_color_read_Red 0005                __initialization 18EA                   __end_of_main 11F6  
                 __end_of_dtoa 1122                   ??_ADC2String 0047                         ??_main 004D  
                       ??_dtoa 0018                  __activetblptr 0003                  main@blue_char 0164  
   __end_of_read_prec_or_width 14D2                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                  ADC2String@buf 0043               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RD5PPS 0E6F            ADC2String@frac_part 0049                         _RD6PPS 0E70  
                vfpfcnvrt@done 0029       __end_of_color_click_init 18B6                         _RX4PPS 0E15  
           __end_of_ADC2String 1560                         _TX4REG 0EE4                   ??_ADC_getval 0003  
                 vfprintf@cfmt 002E                         ___wmul 199C                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___lwdiv 000B           read_prec_or_width@ap 0008  
                       clear_0 1902                         clear_1 190E               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       pad@buf 000F                         dtoa@fp 0015                         fputc@c 0001  
                       fputs@c 000B                         fputs@i 000C                   __pdataCOMRAM 0057  
                       fputs@s 0009                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 17D2  
                    ??_sprintf 0036             __end_of_ADC_getval 194A                     __accesstop 0060  
      __end_of__initialization 1914       __end_of_color_read_Green 16FE         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                __end_of_fputc 1374                  __end_of_fputs 184A                  __end_of_putch 1A5E  
                   ??_ADC_init 0001                        ??_fputc 0004                        ??_fputs 000B  
                      ??_putch 0001                     __pbssBANK0 0060              _color_writetoaddr 19C2  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
               main@green_char 0196                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
            main@battery_level 01C8                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 19E2  
                    _ADREFbits 0F58             _I2C_2_Master_Start 1A52                     _initUSART4 19E2  
           _I2C_2_Master_Write 1A32                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___awdiv 11F6  
                      ___awmod 1374            ?_I2C_2_Master_Start 0001                        ___lwdiv 15EA  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002B                   __psmallconst 0E00  
                      __pcinit 18EA                        __ramtop 0E00                        __ptext0 1122  
                      __ptext1 184A                        __ptext2 1A1A                        __ptext3 19E2  
                      __ptext4 165E                        __ptext5 16AE                        __ptext6 16FE  
                      __ptext7 1A3E                        __ptext8 174E                        __ptext9 1882  
        read_prec_or_width@fmt 0007               ___awmod@dividend 0001                  _RxBufWriteCnt 0056  
                      main@buf 0100                        _sprintf 17D2                        main@red 01CA  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1914  
             ADC_getval@tmpval 0003                        fputc@fp 0003                        fputs@fp 000A  
            ?_color_click_init 0001             _read_prec_or_width 1424             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 0FBA                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0025                     ??_vfprintf 002E                      _TRISDbits 0F84  
                    _TRISFbits 0F86           ??_read_prec_or_width 0009       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                   _EUSART4RXbuf 00B0                   _EUSART4TXbuf 0060  
            ?_color_read_Green 0005                    ?_initUSART4 0001      sendCharSerial4@charToSend 0001  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 0022                    vfpfcnvrt@cp 002A  
                  vfpfcnvrt@fp 0020                 __end_of___wmul 19C2                  __pidataCOMRAM 1A5E  
          start_initialization 18EA                    __end_of_abs 18EA                    __end_of_pad 15EA  
                _TxBufWriteCnt 0054            color_read_Green@tmp 000A                    vfprintf@fmt 002C  
           ADC2String@int_part 004B                       ??___wmul 0005                    __pbssCOMRAM 004D  
                __pcstackBANK1 0100               ___lwdiv@dividend 0007                      _dtoa$1244 0018  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___lwdiv 0007  
                 _readingIndex 0052           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 1974              _I2C_2_Master_Init 194A  
            _I2C_2_Master_Read 174E              _I2C_2_Master_Stop 1A48                   _RxBufReadCnt 0055  
                     _ADC_init 1A00             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
                     ?_sprintf 002F              _sendStringSerial4 184A            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 0F7C              ADC2String@ADC_val 0045  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                       _PIR4bits 0E37  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                     _ADC2String 14D2                      _vfpfcnvrt 0E38  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 199C      __end_of_I2C_2_Master_Init 1974  
    __end_of_I2C_2_Master_Read 1790              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1A52  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 009C                      main@green 01CE  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0053      __end_of_sendStringSerial4 1882  
__end_of_I2C_2_Master_RepStart 1A48             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     _ADC_getval 191A                     vfprintf@ap 002D  
                     __Lrparam 0000                     vfprintf@fp 002B                     ?_vfpfcnvrt 0020  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                       _dataFlag 0057  
                   sprintf@fmt 0031                ___lwdiv@divisor 0009             __end_of_initUSART4 1A00  
              ___lwdiv@counter 000D                       __ptext10 19C2                       __ptext11 1A32  
                     __ptext20 1790                       __ptext12 1A48                       __ptext21 0E38  
                     __ptext13 1A52                       __ptext30 1374                       __ptext22 1424  
                     __ptext14 1974                       __ptext31 11F6                       __ptext23 199C  
                     __ptext15 194A                       __ptext32 15EA                       __ptext24 0FBA  
                     __ptext16 1A00                       __ptext25 1560                       __ptext17 191A  
                     __ptext26 180E                       __ptext18 14D2                       __ptext27 12BA  
                     __ptext19 17D2                       __ptext28 1A5C                       __ptext29 18B6  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                    ?_ADC2String 0043                       _vfprintf 1790  
                     main@blue 01CC                      sprintf@ap 0036                    ?_ADC_getval 0001  
                  ??_vfpfcnvrt 0023               _color_click_init 1882                       sprintf@f 0037  
                     sprintf@s 002F                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                   _TX4STAbits 0EE8                _sendCharSerial4 1A1A  
