

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 23:56:23 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 21/07/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataBANK0
    98   003648                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _dataFlag
   102   003648  01                 	db	1
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _LATFbits	set	3966
   107   000000                     _LATHbits	set	3968
   108   000000                     _TRISFbits	set	3974
   109   000000                     _TRISAbits	set	3969
   110   000000                     _TRISEbits	set	3973
   111   000000                     _TRISGbits	set	3975
   112   000000                     _TRISDbits	set	3972
   113   000000                     _PORTFbits	set	3982
   114   000000                     _SSP2CON2bits	set	3802
   115   000000                     _RX4PPS	set	3605
   116   000000                     _SSP2CLKPPS	set	3612
   117   000000                     _SSP2DATPPS	set	3613
   118   000000                     _ANSELDbits	set	3751
   119   000000                     _SSP2ADD	set	3798
   120   000000                     _SSP2CON1bits	set	3801
   121   000000                     _LATAbits	set	3961
   122   000000                     _LATEbits	set	3965
   123   000000                     _LATGbits	set	3967
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _CCPR2H	set	4006
   127   000000                     _CCPR1H	set	4010
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _SSP2CON2	set	3802
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RD5PPS	set	3695
   143   000000                     _RE2PPS	set	3700
   144   000000                     _RD6PPS	set	3696
   145   000000                     _CCP1CONbits	set	4011
   146   000000                     _CCPTMRS0bits	set	4013
   147   000000                     _T2PR	set	4028
   148   000000                     _T2CONbits	set	4029
   149   000000                     _CCP2CONbits	set	4007
   150   000000                     _CCP3CONbits	set	3878
   151   000000                     _ADREFbits	set	3928
   152   000000                     _CCP4CONbits	set	3874
   153   000000                     _TRISHbits	set	3976
   154   000000                     _TRISCbits	set	3971
   155   000000                     _ADPCH	set	3935
   156   000000                     _ADRESH	set	3940
   157   000000                     _ADCON0bits	set	3936
   158   000000                     _RE4PPS	set	3702
   159   000000                     _RG6PPS	set	3720
   160   000000                     _T2CLKCONbits	set	4031
   161   000000                     _T2HLTbits	set	4030
   162                           
   163                           	psect	smallconst
   164   000E00                     __psmallconst:
   165                           	callstack 0
   166   000E00  00                 	db	0
   167   000E01                     STR_7:
   168                           
   169                           ; BSR set to: 15
   170   000E01  43                 	db	67	;'C'
   171   000E02  61                 	db	97	;'a'
   172   000E03  6C                 	db	108	;'l'
   173   000E04  69                 	db	105	;'i'
   174   000E05  62                 	db	98	;'b'
   175   000E06  72                 	db	114	;'r'
   176   000E07  61                 	db	97	;'a'
   177   000E08  74                 	db	116	;'t'
   178   000E09  69                 	db	105	;'i'
   179   000E0A  6F                 	db	111	;'o'
   180   000E0B  6E                 	db	110	;'n'
   181   000E0C  20                 	db	32
   182   000E0D  73                 	db	115	;'s'
   183   000E0E  74                 	db	116	;'t'
   184   000E0F  61                 	db	97	;'a'
   185   000E10  74                 	db	116	;'t'
   186   000E11  65                 	db	101	;'e'
   187   000E12  20                 	db	32
   188   000E13  3D                 	db	61	;'='
   189   000E14  20                 	db	32
   190   000E15  20                 	db	32
   191   000E16  77                 	db	119	;'w'
   192   000E17  68                 	db	104	;'h'
   193   000E18  69                 	db	105	;'i'
   194   000E19  74                 	db	116	;'t'
   195   000E1A  65                 	db	101	;'e'
   196   000E1B  20                 	db	32
   197   000E1C  6C                 	db	108	;'l'
   198   000E1D  69                 	db	105	;'i'
   199   000E1E  67                 	db	103	;'g'
   200   000E1F  68                 	db	104	;'h'
   201   000E20  74                 	db	116	;'t'
   202   000E21  00                 	db	0
   203   000E22                     STR_3:
   204                           
   205                           ; BSR set to: 15
   206   000E22  43                 	db	67	;'C'
   207   000E23  61                 	db	97	;'a'
   208   000E24  6C                 	db	108	;'l'
   209   000E25  69                 	db	105	;'i'
   210   000E26  62                 	db	98	;'b'
   211   000E27  72                 	db	114	;'r'
   212   000E28  61                 	db	97	;'a'
   213   000E29  74                 	db	116	;'t'
   214   000E2A  69                 	db	105	;'i'
   215   000E2B  6F                 	db	111	;'o'
   216   000E2C  6E                 	db	110	;'n'
   217   000E2D  20                 	db	32
   218   000E2E  73                 	db	115	;'s'
   219   000E2F  74                 	db	116	;'t'
   220   000E30  61                 	db	97	;'a'
   221   000E31  74                 	db	116	;'t'
   222   000E32  65                 	db	101	;'e'
   223   000E33  20                 	db	32
   224   000E34  3D                 	db	61	;'='
   225   000E35  20                 	db	32
   226   000E36  67                 	db	103	;'g'
   227   000E37  72                 	db	114	;'r'
   228   000E38  65                 	db	101	;'e'
   229   000E39  65                 	db	101	;'e'
   230   000E3A  6E                 	db	110	;'n'
   231   000E3B  20                 	db	32
   232   000E3C  0A                 	db	10
   233   000E3D  0D                 	db	13
   234   000E3E  00                 	db	0
   235   000E3F                     STR_5:
   236                           
   237                           ; BSR set to: 15
   238   000E3F  43                 	db	67	;'C'
   239   000E40  61                 	db	97	;'a'
   240   000E41  6C                 	db	108	;'l'
   241   000E42  69                 	db	105	;'i'
   242   000E43  62                 	db	98	;'b'
   243   000E44  72                 	db	114	;'r'
   244   000E45  61                 	db	97	;'a'
   245   000E46  74                 	db	116	;'t'
   246   000E47  69                 	db	105	;'i'
   247   000E48  6F                 	db	111	;'o'
   248   000E49  6E                 	db	110	;'n'
   249   000E4A  20                 	db	32
   250   000E4B  73                 	db	115	;'s'
   251   000E4C  74                 	db	116	;'t'
   252   000E4D  61                 	db	97	;'a'
   253   000E4E  74                 	db	116	;'t'
   254   000E4F  65                 	db	101	;'e'
   255   000E50  3D                 	db	61	;'='
   256   000E51  20                 	db	32
   257   000E52  62                 	db	98	;'b'
   258   000E53  6C                 	db	108	;'l'
   259   000E54  75                 	db	117	;'u'
   260   000E55  65                 	db	101	;'e'
   261   000E56  20                 	db	32
   262   000E57  0A                 	db	10
   263   000E58  0D                 	db	13
   264   000E59  00                 	db	0
   265   000E5A                     STR_9:
   266                           
   267                           ; BSR set to: 15
   268   000E5A  43                 	db	67	;'C'
   269   000E5B  41                 	db	65	;'A'
   270   000E5C  4C                 	db	76	;'L'
   271   000E5D  49                 	db	73	;'I'
   272   000E5E  42                 	db	66	;'B'
   273   000E5F  52                 	db	82	;'R'
   274   000E60  41                 	db	65	;'A'
   275   000E61  54                 	db	84	;'T'
   276   000E62  49                 	db	73	;'I'
   277   000E63  4F                 	db	79	;'O'
   278   000E64  4E                 	db	78	;'N'
   279   000E65  20                 	db	32
   280   000E66  43                 	db	67	;'C'
   281   000E67  4F                 	db	79	;'O'
   282   000E68  4D                 	db	77	;'M'
   283   000E69  50                 	db	80	;'P'
   284   000E6A  4C                 	db	76	;'L'
   285   000E6B  45                 	db	69	;'E'
   286   000E6C  54                 	db	84	;'T'
   287   000E6D  45                 	db	69	;'E'
   288   000E6E  44                 	db	68	;'D'
   289   000E6F  20                 	db	32
   290   000E70  0A                 	db	10
   291   000E71  0D                 	db	13
   292   000E72  00                 	db	0
   293   000E73                     STR_1:
   294                           
   295                           ; BSR set to: 15
   296   000E73  43                 	db	67	;'C'
   297   000E74  61                 	db	97	;'a'
   298   000E75  6C                 	db	108	;'l'
   299   000E76  69                 	db	105	;'i'
   300   000E77  62                 	db	98	;'b'
   301   000E78  72                 	db	114	;'r'
   302   000E79  61                 	db	97	;'a'
   303   000E7A  74                 	db	116	;'t'
   304   000E7B  69                 	db	105	;'i'
   305   000E7C  6F                 	db	111	;'o'
   306   000E7D  6E                 	db	110	;'n'
   307   000E7E  20                 	db	32
   308   000E7F  73                 	db	115	;'s'
   309   000E80  74                 	db	116	;'t'
   310   000E81  61                 	db	97	;'a'
   311   000E82  74                 	db	116	;'t'
   312   000E83  65                 	db	101	;'e'
   313   000E84  20                 	db	32
   314   000E85  3D                 	db	61	;'='
   315   000E86  20                 	db	32
   316   000E87  72                 	db	114	;'r'
   317   000E88  65                 	db	101	;'e'
   318   000E89  64                 	db	100	;'d'
   319   000E8A  00                 	db	0
   320   000E8B                     
   321                           ; BSR set to: 15
   322   000E8B  56                 	db	86	;'V'
   323   000E8C  6F                 	db	111	;'o'
   324   000E8D  6C                 	db	108	;'l'
   325   000E8E  74                 	db	116	;'t'
   326   000E8F  61                 	db	97	;'a'
   327   000E90  67                 	db	103	;'g'
   328   000E91  65                 	db	101	;'e'
   329   000E92  20                 	db	32
   330   000E93  3D                 	db	61	;'='
   331   000E94  20                 	db	32
   332   000E95  25                 	db	37
   333   000E96  64                 	db	100	;'d'
   334   000E97  2E                 	db	46
   335   000E98  25                 	db	37
   336   000E99  30                 	db	48	;'0'
   337   000E9A  32                 	db	50	;'2'
   338   000E9B  64                 	db	100	;'d'
   339   000E9C  2C                 	db	44
   340   000E9D  20                 	db	32
   341   000E9E  20                 	db	32
   342   000E9F  00                 	db	0
   343   000EA0                     STR_13:
   344                           
   345                           ; BSR set to: 15
   346   000EA0  68                 	db	104	;'h'
   347   000EA1  75                 	db	117	;'u'
   348   000EA2  65                 	db	101	;'e'
   349   000EA3  3D                 	db	61	;'='
   350   000EA4  25                 	db	37
   351   000EA5  30                 	db	48	;'0'
   352   000EA6  33                 	db	51	;'3'
   353   000EA7  64                 	db	100	;'d'
   354   000EA8  2C                 	db	44
   355   000EA9  20                 	db	32
   356   000EAA  20                 	db	32
   357   000EAB  00                 	db	0
   358   000EAC                     STR_11:
   359                           
   360                           ; BSR set to: 15
   361   000EAC  63                 	db	99	;'c'
   362   000EAD  6C                 	db	108	;'l'
   363   000EAE  65                 	db	101	;'e'
   364   000EAF  61                 	db	97	;'a'
   365   000EB0  72                 	db	114	;'r'
   366   000EB1  3D                 	db	61	;'='
   367   000EB2  25                 	db	37
   368   000EB3  30                 	db	48	;'0'
   369   000EB4  33                 	db	51	;'3'
   370   000EB5  64                 	db	100	;'d'
   371   000EB6  00                 	db	0
   372   000EB7                     STR_2:
   373                           
   374                           ; BSR set to: 15
   375   000EB7  2E                 	db	46
   376   000EB8  00                 	db	0
   377   000EB9  00                 	db	0	; dummy byte at the end
   378   000000                     
   379                           ; #config settings
   380                           
   381                           	psect	cinit
   382   003412                     __pcinit:
   383                           	callstack 0
   384   003412                     start_initialization:
   385                           	callstack 0
   386   003412                     __initialization:
   387                           	callstack 0
   388                           
   389                           ; Initialize objects allocated to BANK0 (1 bytes)
   390                           ; load TBLPTR registers with __pidataBANK0
   391   003412  0E48               	movlw	low __pidataBANK0
   392   003414  6EF6               	movwf	tblptrl,c
   393   003416  0E36               	movlw	high __pidataBANK0
   394   003418  6EF7               	movwf	tblptrh,c
   395   00341A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   396   00341C  6EF8               	movwf	tblptru,c
   397   00341E  0009               	tblrd		*+	;fetch initializer
   398   003420  CFF5 F0F7          	movff	tablat,__pdataBANK0
   399                           
   400                           ; Clear objects allocated to BANK1 (132 bytes)
   401   003424  EE01  F000         	lfsr	0,__pbssBANK1
   402   003428  0E84               	movlw	132
   403   00342A                     clear_0:
   404   00342A  6AEE               	clrf	postinc0,c
   405   00342C  06E8               	decf	wreg,f,c
   406   00342E  E1FD               	bnz	clear_0
   407                           
   408                           ; Clear objects allocated to BANK0 (49 bytes)
   409   003430  EE00  F0C6         	lfsr	0,__pbssBANK0
   410   003434  0E31               	movlw	49
   411   003436                     clear_1:
   412   003436  6AEE               	clrf	postinc0,c
   413   003438  06E8               	decf	wreg,f,c
   414   00343A  E1FD               	bnz	clear_1
   415                           
   416                           ; Clear objects allocated to COMRAM (3 bytes)
   417   00343C  6A5F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   418   00343E  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   419   003440  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   420   003442                     end_of_initialization:
   421                           	callstack 0
   422   003442                     __end_of__initialization:
   423                           	callstack 0
   424   003442  0100               	movlb	0
   425   003444  EF32  F016         	goto	_main	;jump to C main() function
   426                           
   427                           	psect	bssCOMRAM
   428   00005D                     __pbssCOMRAM:
   429                           	callstack 0
   430   00005D                     _TxBufReadCnt:
   431                           	callstack 0
   432   00005D                     	ds	1
   433   00005E                     _TxBufWriteCnt:
   434                           	callstack 0
   435   00005E                     	ds	1
   436   00005F                     _RxBufWriteCnt:
   437                           	callstack 0
   438   00005F                     	ds	1
   439                           
   440                           	psect	bssBANK0
   441   0000C6                     __pbssBANK0:
   442                           	callstack 0
   443   0000C6                     _hue:
   444                           	callstack 0
   445   0000C6                     	ds	8
   446   0000CE                     _width:
   447                           	callstack 0
   448   0000CE                     	ds	2
   449   0000D0                     _prec:
   450                           	callstack 0
   451   0000D0                     	ds	2
   452   0000D2                     _flags:
   453                           	callstack 0
   454   0000D2                     	ds	1
   455   0000D3                     _readingIndex:
   456                           	callstack 0
   457   0000D3                     	ds	1
   458   0000D4                     _RxBufReadCnt:
   459                           	callstack 0
   460   0000D4                     	ds	1
   461   0000D5                     _motorR:
   462                           	callstack 0
   463   0000D5                     	ds	9
   464   0000DE                     _motorL:
   465                           	callstack 0
   466   0000DE                     	ds	9
   467   0000E7                     _colorCurrent:
   468                           	callstack 0
   469   0000E7                     	ds	8
   470   0000EF                     _colorCalibration:
   471                           	callstack 0
   472   0000EF                     	ds	8
   473                           
   474                           	psect	dataBANK0
   475   0000F7                     __pdataBANK0:
   476                           	callstack 0
   477   0000F7                     _dataFlag:
   478                           	callstack 0
   479   0000F7                     	ds	1
   480                           
   481                           	psect	bssBANK1
   482   000100                     __pbssBANK1:
   483                           	callstack 0
   484   000100                     _EUSART4TXbuf:
   485                           	callstack 0
   486   000100                     	ds	60
   487   00013C                     _ldrReadings:
   488                           	callstack 0
   489   00013C                     	ds	20
   490   000150                     _EUSART4RXbuf:
   491                           	callstack 0
   492   000150                     	ds	20
   493   000164                     _dbuf:
   494                           	callstack 0
   495   000164                     	ds	32
   496                           
   497                           	psect	cstackBANK0
   498   000060                     __pcstackBANK0:
   499                           	callstack 0
   500   000060                     convert_rgb2hue@c_char:
   501                           	callstack 0
   502   000060                     send2USART@hue_char:
   503                           	callstack 0
   504                           
   505                           ; 50 bytes @ 0x0
   506   000060                     	ds	20
   507   000074                     convert_rgb2hue@redcurrent:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x14
   511   000074                     	ds	4
   512   000078                     convert_rgb2hue@redmax:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x18
   516   000078                     	ds	4
   517   00007C                     convert_rgb2hue@greencurrent:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x1C
   521   00007C                     	ds	4
   522   000080                     convert_rgb2hue@greenmax:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x20
   526   000080                     	ds	4
   527   000084                     convert_rgb2hue@bluecurrent:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x24
   531   000084                     	ds	4
   532   000088                     convert_rgb2hue@bluemax:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x28
   536   000088                     	ds	4
   537   00008C                     convert_rgb2hue@clearcurrent:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x2C
   541   00008C                     	ds	4
   542   000090                     convert_rgb2hue@clearmax:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x30
   546   000090                     	ds	4
   547   000094                     convert_rgb2hue@c:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x34
   551   000094                     	ds	4
   552   000098                     _convert_rgb2hue$388:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x38
   556   000098                     	ds	4
   557   00009C                     _convert_rgb2hue$389:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x3C
   561   00009C                     	ds	4
   562   0000A0                     _convert_rgb2hue$390:
   563                           	callstack 0
   564                           
   565                           ; 4 bytes @ 0x40
   566   0000A0                     	ds	4
   567   0000A4                     _convert_rgb2hue$391:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x44
   571   0000A4                     	ds	4
   572   0000A8                     convert_rgb2hue@min:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x48
   576   0000A8                     	ds	4
   577   0000AC                     convert_rgb2hue@diff:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x4C
   581   0000AC                     	ds	4
   582   0000B0                     convert_rgb2hue@max:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x50
   586   0000B0                     	ds	4
   587   0000B4                     convert_rgb2hue@hue:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x54
   591   0000B4                     	ds	4
   592   0000B8                     convert_rgb2hue@r:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x58
   596   0000B8                     	ds	4
   597   0000BC                     convert_rgb2hue@g:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x5C
   601   0000BC                     	ds	4
   602   0000C0                     convert_rgb2hue@b:
   603                           	callstack 0
   604                           
   605                           ; 4 bytes @ 0x60
   606   0000C0                     	ds	4
   607   0000C4                     main@hue:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x64
   611   0000C4                     	ds	2
   612                           
   613                           	psect	cstackCOMRAM
   614   000001                     __pcstackCOMRAM:
   615                           	callstack 0
   616   000001                     ??_I2C_2_Master_Idle:
   617   000001                     ?___wmul:
   618                           	callstack 0
   619   000001                     ?___awdiv:
   620                           	callstack 0
   621   000001                     ?___awmod:
   622                           	callstack 0
   623   000001                     ?___fladd:
   624                           	callstack 0
   625   000001                     ?___flmul:
   626                           	callstack 0
   627   000001                     ?___fltol:
   628                           	callstack 0
   629   000001                     ?___xxtofl:
   630                           	callstack 0
   631   000001                     sendCharSerial4@charToSend:
   632                           	callstack 0
   633   000001                     initDCmotorsPWM@PWMperiod:
   634                           	callstack 0
   635   000001                     ___wmul@multiplier:
   636                           	callstack 0
   637   000001                     ___awdiv@dividend:
   638                           	callstack 0
   639   000001                     ___awmod@dividend:
   640                           	callstack 0
   641   000001                     fputc@c:
   642                           	callstack 0
   643   000001                     ___fleq@ff1:
   644                           	callstack 0
   645   000001                     ___flge@ff1:
   646                           	callstack 0
   647   000001                     ___fltol@f1:
   648                           	callstack 0
   649   000001                     ___fladd@b:
   650                           	callstack 0
   651   000001                     ___flmul@b:
   652                           	callstack 0
   653   000001                     ___xxtofl@val:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x0
   657   000001                     	ds	1
   658   000002                     ??_I2C_2_Master_Read:
   659   000002                     I2C_2_Master_Write@data_byte:
   660                           	callstack 0
   661   000002                     sendStringSerial4@string:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x1
   665   000002                     	ds	1
   666   000003                     color_writetoaddr@value:
   667                           	callstack 0
   668   000003                     I2C_2_Master_Read@ack:
   669                           	callstack 0
   670   000003                     fputc@fp:
   671                           	callstack 0
   672   000003                     ___wmul@multiplicand:
   673                           	callstack 0
   674   000003                     ___awdiv@divisor:
   675                           	callstack 0
   676   000003                     ___awmod@divisor:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2
   680   000003                     	ds	1
   681   000004                     ??_fputc:
   682   000004                     color_writetoaddr@address:
   683                           	callstack 0
   684   000004                     I2C_2_Master_Read@tmp:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0x3
   688   000004                     	ds	1
   689   000005                     ??_color_click_init:
   690   000005                     ??___fltol:
   691   000005                     ??___xxtofl:
   692   000005                     ?_color_read_Red:
   693                           	callstack 0
   694   000005                     ?_color_read_Green:
   695                           	callstack 0
   696   000005                     ?_color_read_Blue:
   697                           	callstack 0
   698   000005                     ?_color_read_Clear:
   699                           	callstack 0
   700   000005                     ___awdiv@counter:
   701                           	callstack 0
   702   000005                     ___awmod@counter:
   703                           	callstack 0
   704   000005                     ___wmul@product:
   705                           	callstack 0
   706   000005                     ___fleq@ff2:
   707                           	callstack 0
   708   000005                     ___flge@ff2:
   709                           	callstack 0
   710   000005                     ___fladd@a:
   711                           	callstack 0
   712   000005                     ___flmul@a:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x4
   716   000005                     	ds	1
   717   000006                     ___awdiv@sign:
   718                           	callstack 0
   719   000006                     ___awmod@sign:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x5
   723   000006                     	ds	1
   724   000007                     ??_color_read_Red:
   725   000007                     ??_color_read_Green:
   726   000007                     ??_color_read_Blue:
   727   000007                     ??_color_read_Clear:
   728   000007                     ?_abs:
   729                           	callstack 0
   730   000007                     ?_read_prec_or_width:
   731                           	callstack 0
   732   000007                     read_prec_or_width@fmt:
   733                           	callstack 0
   734   000007                     ___awdiv@quotient:
   735                           	callstack 0
   736   000007                     abs@a:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x6
   740   000007                     	ds	1
   741   000008                     read_prec_or_width@ap:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0x7
   745   000008                     	ds	1
   746   000009                     ??___fladd:
   747   000009                     ??___flmul:
   748   000009                     ??_abs:
   749   000009                     ??___fleq:
   750   000009                     ??___flge:
   751   000009                     ___fltol@sign1:
   752                           	callstack 0
   753   000009                     ___xxtofl@sign:
   754                           	callstack 0
   755   000009                     read_prec_or_width@c:
   756                           	callstack 0
   757   000009                     fputs@s:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x8
   761   000009                     	ds	1
   762   00000A                     ___fltol@exp1:
   763                           	callstack 0
   764   00000A                     ___xxtofl@exp:
   765                           	callstack 0
   766   00000A                     color_read_Red@tmp:
   767                           	callstack 0
   768   00000A                     color_read_Green@tmp:
   769                           	callstack 0
   770   00000A                     color_read_Blue@tmp:
   771                           	callstack 0
   772   00000A                     color_read_Clear@tmp:
   773                           	callstack 0
   774   00000A                     read_prec_or_width@n:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x9
   778   00000A                     	ds	1
   779   00000B                     fputs@fp:
   780                           	callstack 0
   781   00000B                     ___xxtofl@arg:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0xA
   785   00000B                     	ds	1
   786   00000C                     fputs@c:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0xB
   790   00000C                     	ds	1
   791   00000D                     ___fladd@signs:
   792                           	callstack 0
   793   00000D                     ___flmul@sign:
   794                           	callstack 0
   795   00000D                     fputs@i:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xC
   799   00000D                     	ds	1
   800   00000E                     ___fladd@aexp:
   801                           	callstack 0
   802   00000E                     ___flmul@aexp:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0xD
   806   00000E                     	ds	1
   807   00000F                     ___fladd@bexp:
   808                           	callstack 0
   809   00000F                     pad@fp:
   810                           	callstack 0
   811   00000F                     ___flmul@grs:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0xE
   815   00000F                     	ds	1
   816   000010                     ___fladd@grs:
   817                           	callstack 0
   818   000010                     pad@buf:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0xF
   822   000010                     	ds	1
   823   000011                     ?___flsub:
   824                           	callstack 0
   825   000011                     ___flsub@b:
   826                           	callstack 0
   827                           
   828                           ; 4 bytes @ 0x10
   829   000011                     	ds	1
   830   000012                     pad@p:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x11
   834   000012                     	ds	1
   835   000013                     ___flmul@bexp:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x12
   839   000013                     	ds	1
   840   000014                     ??_pad:
   841   000014                     ___flmul@prod:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x13
   845   000014                     	ds	1
   846   000015                     pad@i:
   847                           	callstack 0
   848   000015                     ___flsub@a:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x14
   852   000015                     	ds	2
   853   000017                     dtoa@fp:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x16
   857   000017                     	ds	1
   858   000018                     ___flmul@temp:
   859                           	callstack 0
   860   000018                     dtoa@d:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x17
   864   000018                     	ds	1
   865   000019                     ?___fldiv:
   866                           	callstack 0
   867   000019                     ___fldiv@b:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x18
   871   000019                     	ds	1
   872   00001A                     _dtoa$2617:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x19
   876   00001A                     	ds	2
   877   00001C                     dtoa@p:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0x1B
   881   00001C                     	ds	1
   882   00001D                     dtoa@w:
   883                           	callstack 0
   884   00001D                     ___fldiv@a:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x1C
   888   00001D                     	ds	2
   889   00001F                     dtoa@s:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x1E
   893   00001F                     	ds	1
   894   000020                     dtoa@i:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x1F
   898   000020                     	ds	1
   899   000021                     ??___fldiv:
   900                           
   901                           ; 1 bytes @ 0x20
   902   000021                     	ds	1
   903   000022                     vfpfcnvrt@fp:
   904                           	callstack 0
   905                           
   906                           ; 1 bytes @ 0x21
   907   000022                     	ds	1
   908   000023                     vfpfcnvrt@fmt:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x22
   912   000023                     	ds	1
   913   000024                     vfpfcnvrt@ap:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x23
   917   000024                     	ds	1
   918   000025                     ??_vfpfcnvrt:
   919   000025                     ___fldiv@rem:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x24
   923   000025                     	ds	2
   924   000027                     vfpfcnvrt@convarg:
   925                           	callstack 0
   926                           
   927                           ; 4 bytes @ 0x26
   928   000027                     	ds	2
   929   000029                     ___fldiv@sign:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x28
   933   000029                     	ds	1
   934   00002A                     ___fldiv@new_exp:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x29
   938   00002A                     	ds	1
   939   00002B                     vfpfcnvrt@done:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x2A
   943   00002B                     	ds	1
   944   00002C                     vfpfcnvrt@cp:
   945                           	callstack 0
   946   00002C                     ___fldiv@grs:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x2B
   950   00002C                     	ds	1
   951   00002D                     ?_vfprintf:
   952                           	callstack 0
   953   00002D                     vfprintf@fp:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x2C
   957   00002D                     	ds	1
   958   00002E                     vfprintf@fmt:
   959                           	callstack 0
   960                           
   961                           ; 1 bytes @ 0x2D
   962   00002E                     	ds	1
   963   00002F                     vfprintf@ap:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2E
   967   00002F                     	ds	1
   968   000030                     ___fldiv@bexp:
   969                           	callstack 0
   970   000030                     vfprintf@cfmt:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x2F
   974   000030                     	ds	1
   975   000031                     ?_sprintf:
   976                           	callstack 0
   977   000031                     ___fldiv@aexp:
   978                           	callstack 0
   979   000031                     sprintf@s:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x30
   983   000031                     	ds	1
   984   000032                     sprintf@fmt:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x31
   988   000032                     	ds	5
   989   000037                     sprintf@ap:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x36
   993   000037                     	ds	1
   994   000038                     sprintf@f:
   995                           	callstack 0
   996                           
   997                           ; 12 bytes @ 0x37
   998   000038                     	ds	12
   999   000044                     ?_convert_rgb2hue:
  1000                           	callstack 0
  1001   000044                     calibration_routine@cCal:
  1002                           	callstack 0
  1003   000044                     convert_rgb2hue@cMax:
  1004                           	callstack 0
  1005   000044                     send2USART@hue:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x43
  1009   000044                     	ds	1
  1010   000045                     ??_calibration_routine:
  1011   000045                     convert_rgb2hue@cCurr:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x44
  1015   000045                     	ds	1
  1016   000046                     ??_convert_rgb2hue:
  1017   000046                     
  1018                           ; 1 bytes @ 0x45
  1019   000046                     	ds	1
  1020   000047                     calibration_routine@cal_state:
  1021                           	callstack 0
  1022                           
  1023                           ; 20 bytes @ 0x46
  1024   000047                     	ds	1
  1025   000048                     ?_reading_hue:
  1026                           	callstack 0
  1027   000048                     reading_hue@cCurr:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x47
  1031   000048                     	ds	2
  1032   00004A                     ??_reading_hue:
  1033                           
  1034                           ; 1 bytes @ 0x49
  1035   00004A                     	ds	2
  1036   00004C                     reading_hue@hue:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x4B
  1040   00004C                     	ds	15
  1041   00005B                     ??_main:
  1042                           
  1043                           ; 1 bytes @ 0x5A
  1044   00005B                     	ds	2
  1045                           
  1046 ;;
  1047 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1048 ;;
  1049 ;; *************** function _main *****************
  1050 ;; Defined at:
  1051 ;;		line 28 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  hue_char       20    0        unsigned char [20]
  1056 ;;  PWMcycle        2    0        unsigned int 
  1057 ;;  hue             2  100[BANK0 ] unsigned int 
  1058 ;;  clear           2    0        unsigned int 
  1059 ;;  green           2    0        unsigned int 
  1060 ;;  blue            2    0        unsigned int 
  1061 ;;  red             2    0        unsigned int 
  1062 ;;  battery_leve    2    0        unsigned int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1075 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;Total ram usage:        4 bytes
  1077 ;; Hardware stack levels required when called: 10
  1078 ;; This function calls:
  1079 ;;		_ADC_init
  1080 ;;		_calibration_routine
  1081 ;;		_color_click_init
  1082 ;;		_initDCmotorsPWM
  1083 ;;		_initUSART4
  1084 ;;		_reading_hue
  1085 ;;		_send2USART
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text0
  1092   002C64                     __ptext0:
  1093                           	callstack 0
  1094   002C64                     _main:
  1095                           	callstack 21
  1096   002C64                     
  1097                           ;main.c: 30:     ADC_init();
  1098   002C64  ECF5  F01A         	call	_ADC_init	;wreg free
  1099   002C68                     
  1100                           ;main.c: 31:     color_click_init();
  1101   002C68  EC24  F01A         	call	_color_click_init	;wreg free
  1102   002C6C                     
  1103                           ;main.c: 32:     initUSART4();
  1104   002C6C  ECE6  F01A         	call	_initUSART4	;wreg free
  1105   002C70                     
  1106                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1107   002C70  0E00               	movlw	0
  1108   002C72  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1109   002C74  0E63               	movlw	99
  1110   002C76  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1111   002C78  EC9C  F018         	call	_initDCmotorsPWM	;wreg free
  1112   002C7C                     
  1113                           ;main.c: 39:     motorL.power = 0;
  1114   002C7C  0E00               	movlw	0
  1115   002C7E  0100               	movlb	0	; () banked
  1116   002C80  6FDE               	movwf	_motorL& (0+255),b
  1117   002C82                     
  1118                           ; BSR set to: 0
  1119                           ;main.c: 40:     motorL.direction = 1;
  1120   002C82  0E01               	movlw	1
  1121   002C84  6FDF               	movwf	(_motorL+1)& (0+255),b
  1122   002C86                     
  1123                           ; BSR set to: 0
  1124                           ;main.c: 41:     motorL.brakemode = 1;
  1125   002C86  0E01               	movlw	1
  1126   002C88  6FE0               	movwf	(_motorL+2)& (0+255),b
  1127   002C8A                     
  1128                           ; BSR set to: 0
  1129                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1130   002C8A  0E00               	movlw	0
  1131   002C8C  6FE2               	movwf	(_motorL+4)& (0+255),b
  1132   002C8E  0E63               	movlw	99
  1133   002C90  6FE1               	movwf	(_motorL+3)& (0+255),b
  1134   002C92                     
  1135                           ; BSR set to: 0
  1136                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1137   002C92  0EAA               	movlw	170
  1138   002C94  6FE3               	movwf	(_motorL+5)& (0+255),b
  1139   002C96  0E0F               	movlw	15
  1140   002C98  6FE4               	movwf	(_motorL+6)& (0+255),b
  1141   002C9A                     
  1142                           ; BSR set to: 0
  1143                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1144   002C9A  0EA6               	movlw	166
  1145   002C9C  6FE5               	movwf	(_motorL+7)& (0+255),b
  1146   002C9E  0E0F               	movlw	15
  1147   002CA0  6FE6               	movwf	(_motorL+8)& (0+255),b
  1148   002CA2                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 46:     motorR.power = 0;
  1151   002CA2  0E00               	movlw	0
  1152   002CA4  6FD5               	movwf	_motorR& (0+255),b
  1153   002CA6                     
  1154                           ; BSR set to: 0
  1155                           ;main.c: 47:     motorR.direction = 1;
  1156   002CA6  0E01               	movlw	1
  1157   002CA8  6FD6               	movwf	(_motorR+1)& (0+255),b
  1158   002CAA                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 48:     motorR.brakemode = 1;
  1161   002CAA  0E01               	movlw	1
  1162   002CAC  6FD7               	movwf	(_motorR+2)& (0+255),b
  1163   002CAE                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1166   002CAE  0E00               	movlw	0
  1167   002CB0  6FD9               	movwf	(_motorR+4)& (0+255),b
  1168   002CB2  0E63               	movlw	99
  1169   002CB4  6FD8               	movwf	(_motorR+3)& (0+255),b
  1170                           
  1171                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1172   002CB6  0E25               	movlw	37
  1173   002CB8  6FDA               	movwf	(_motorR+5)& (0+255),b
  1174   002CBA  0E0F               	movlw	15
  1175   002CBC  6FDB               	movwf	(_motorR+6)& (0+255),b
  1176                           
  1177                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1178   002CBE  0E21               	movlw	33
  1179   002CC0  6FDC               	movwf	(_motorR+7)& (0+255),b
  1180   002CC2  0E0F               	movlw	15
  1181   002CC4  6FDD               	movwf	(_motorR+8)& (0+255),b
  1182   002CC6                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 54:     LATDbits.LATD7=0;
  1185   002CC6  9E7C               	bcf	124,7,c	;volatile
  1186   002CC8                     
  1187                           ; BSR set to: 0
  1188                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1189   002CC8  9E84               	bcf	132,7,c	;volatile
  1190   002CCA                     
  1191                           ; BSR set to: 0
  1192                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1193   002CCA  9087               	bcf	135,0,c	;volatile
  1194   002CCC                     
  1195                           ; BSR set to: 0
  1196                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1197   002CCC  907F               	bcf	127,0,c	;volatile
  1198   002CCE                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1201   002CCE  9E85               	bcf	133,7,c	;volatile
  1202   002CD0                     
  1203                           ; BSR set to: 0
  1204                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1205   002CD0  9E7D               	bcf	125,7,c	;volatile
  1206   002CD2                     
  1207                           ; BSR set to: 0
  1208                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1209   002CD2  9681               	bcf	129,3,c	;volatile
  1210   002CD4                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1213   002CD4  9679               	bcf	121,3,c	;volatile
  1214   002CD6                     
  1215                           ; BSR set to: 0
  1216                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1217   002CD6  8686               	bsf	134,3,c	;volatile
  1218   002CD8                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1221   002CD8  010E               	movlb	14	; () banked
  1222   002CDA  97B4               	bcf	180,3,b	;volatile
  1223   002CDC                     
  1224                           ; BSR set to: 14
  1225                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     unsigned i
      +                          nt clear;;main.c: 80:     unsigned int hue;;main.c: 81:     char hue_char[20];;main.c: 8
      +                          2:     TRISHbits.TRISH3 = 0;
  1226   002CDC  9688               	bcf	136,3,c	;volatile
  1227   002CDE                     
  1228                           ; BSR set to: 14
  1229                           ;main.c: 83:     LATHbits.LATH3 = 1;
  1230   002CDE  8680               	bsf	128,3,c	;volatile
  1231   002CE0                     
  1232                           ; BSR set to: 14
  1233                           ;main.c: 84:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1234   002CE0  0E19               	movlw	25
  1235   002CE2  6E5C               	movwf	(??_main+1)^0,c
  1236   002CE4  0E5A               	movlw	90
  1237   002CE6  6E5B               	movwf	??_main^0,c
  1238   002CE8  0EB2               	movlw	178
  1239   002CEA                     u5657:
  1240   002CEA  2EE8               	decfsz	wreg,f,c
  1241   002CEC  D7FE               	bra	u5657
  1242   002CEE  2E5B               	decfsz	??_main^0,f,c
  1243   002CF0  D7FC               	bra	u5657
  1244   002CF2  2E5C               	decfsz	(??_main+1)^0,f,c
  1245   002CF4  D7FA               	bra	u5657
  1246   002CF6                     
  1247                           ;main.c: 85:     LATHbits.LATH3 = 0;
  1248   002CF6  9680               	bcf	128,3,c	;volatile
  1249   002CF8                     
  1250                           ;main.c: 86:     LATFbits.LATF2 = 0;
  1251   002CF8  947E               	bcf	126,2,c	;volatile
  1252   002CFA                     
  1253                           ;main.c: 87:     TRISFbits.TRISF2 = 1;
  1254   002CFA  8486               	bsf	134,2,c	;volatile
  1255   002CFC                     
  1256                           ;main.c: 88:     ANSELFbits.ANSELF2 = 0;
  1257   002CFC  010E               	movlb	14	; () banked
  1258   002CFE  95B4               	bcf	180,2,b	;volatile
  1259   002D00                     
  1260                           ; BSR set to: 14
  1261                           ;main.c: 91:     calibration_routine(&colorCalibration);
  1262   002D00  0EEF               	movlw	low _colorCalibration
  1263   002D02  6E44               	movwf	calibration_routine@cCal^0,c
  1264   002D04  EC5C  F012         	call	_calibration_routine	;wreg free
  1265   002D08                     l5906:
  1266                           
  1267                           ;main.c: 97:         hue = reading_hue(&colorCurrent);
  1268   002D08  0EE7               	movlw	low _colorCurrent
  1269   002D0A  6E48               	movwf	reading_hue@cCurr^0,c
  1270   002D0C  ECB7  F015         	call	_reading_hue	;wreg free
  1271   002D10  C048  F0C4         	movff	?_reading_hue,main@hue
  1272   002D14  C049  F0C5         	movff	?_reading_hue+1,main@hue+1
  1273   002D18                     
  1274                           ;main.c: 98:         send2USART(hue);
  1275   002D18  C0C4  F044         	movff	main@hue,send2USART@hue
  1276   002D1C  C0C5  F045         	movff	main@hue+1,send2USART@hue+1
  1277   002D20  ECD7  F01A         	call	_send2USART	;wreg free
  1278   002D24  EF84  F016         	goto	l5906
  1279   002D28  EF00  F000         	goto	start
  1280   002D2C                     __end_of_main:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _reading_hue *****************
  1284 ;; Defined at:
  1285 ;;		line 136 in file "color.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  cCurr           1   71[COMRAM] PTR struct colors
  1288 ;;		 -> colorCurrent(8), 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  led_state      50    0        unsigned char [50]
  1291 ;;  hue             2   75[COMRAM] unsigned int 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  2   71[COMRAM] unsigned int 
  1294 ;; Registers used:
  1295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;Total ram usage:        6 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 9
  1308 ;; This function calls:
  1309 ;;		_color_read_Blue
  1310 ;;		_color_read_Clear
  1311 ;;		_color_read_Green
  1312 ;;		_color_read_Red
  1313 ;;		_convert_rgb2hue
  1314 ;;		_send2USART
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text1
  1321   002B6E                     __ptext1:
  1322                           	callstack 0
  1323   002B6E                     _reading_hue:
  1324                           	callstack 21
  1325   002B6E                     
  1326                           ;color.c: 136: unsigned int reading_hue(colors *cCurr);color.c: 137: {;color.c: 138:    
      +                           unsigned int hue;;color.c: 140:     char led_state[50];;color.c: 145:     LATGbits.LATG
      +                          0 = 1;
  1327   002B6E  807F               	bsf	127,0,c	;volatile
  1328                           
  1329                           ;color.c: 146:     LATEbits.LATE7 = 0;
  1330   002B70  9E7D               	bcf	125,7,c	;volatile
  1331                           
  1332                           ;color.c: 147:     LATAbits.LATA3 = 0;
  1333   002B72  9679               	bcf	121,3,c	;volatile
  1334   002B74                     
  1335                           ;color.c: 148:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1336   002B74  0E29               	movlw	41
  1337   002B76  6E4B               	movwf	(??_reading_hue+1)^0,c
  1338   002B78  0E96               	movlw	150
  1339   002B7A  6E4A               	movwf	??_reading_hue^0,c
  1340   002B7C  0E7F               	movlw	127
  1341   002B7E                     u5667:
  1342   002B7E  2EE8               	decfsz	wreg,f,c
  1343   002B80  D7FE               	bra	u5667
  1344   002B82  2E4A               	decfsz	??_reading_hue^0,f,c
  1345   002B84  D7FC               	bra	u5667
  1346   002B86  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1347   002B88  D7FA               	bra	u5667
  1348   002B8A  0000               	nop	
  1349   002B8C                     
  1350                           ;color.c: 149:     (cCurr->red)= color_read_Red();
  1351   002B8C  ECE4  F018         	call	_color_read_Red	;wreg free
  1352   002B90  5048               	movf	reading_hue@cCurr^0,w,c
  1353   002B92  6ED9               	movwf	fsr2l,c
  1354   002B94  6ADA               	clrf	fsr2h,c
  1355   002B96  C005  FFDE         	movff	?_color_read_Red,postinc2
  1356   002B9A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1357   002B9E                     
  1358                           ;color.c: 154:     LATGbits.LATG0 = 0;
  1359   002B9E  907F               	bcf	127,0,c	;volatile
  1360   002BA0                     
  1361                           ;color.c: 155:     LATEbits.LATE7 = 1;
  1362   002BA0  8E7D               	bsf	125,7,c	;volatile
  1363   002BA2                     
  1364                           ;color.c: 156:     LATAbits.LATA3 = 0;
  1365   002BA2  9679               	bcf	121,3,c	;volatile
  1366   002BA4                     
  1367                           ;color.c: 157:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1368   002BA4  0E29               	movlw	41
  1369   002BA6  6E4B               	movwf	(??_reading_hue+1)^0,c
  1370   002BA8  0E96               	movlw	150
  1371   002BAA  6E4A               	movwf	??_reading_hue^0,c
  1372   002BAC  0E7F               	movlw	127
  1373   002BAE                     u5677:
  1374   002BAE  2EE8               	decfsz	wreg,f,c
  1375   002BB0  D7FE               	bra	u5677
  1376   002BB2  2E4A               	decfsz	??_reading_hue^0,f,c
  1377   002BB4  D7FC               	bra	u5677
  1378   002BB6  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1379   002BB8  D7FA               	bra	u5677
  1380   002BBA  0000               	nop	
  1381                           
  1382                           ;color.c: 158:     (cCurr->green) = color_read_Green();
  1383   002BBC  EC0C  F019         	call	_color_read_Green	;wreg free
  1384   002BC0  5048               	movf	reading_hue@cCurr^0,w,c
  1385   002BC2  6ED9               	movwf	fsr2l,c
  1386   002BC4  6ADA               	clrf	fsr2h,c
  1387   002BC6  0E02               	movlw	2
  1388   002BC8  26D9               	addwf	fsr2l,f,c
  1389   002BCA  C005  FFDE         	movff	?_color_read_Green,postinc2
  1390   002BCE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1391   002BD2                     
  1392                           ;color.c: 164:     LATGbits.LATG0 = 0;
  1393   002BD2  907F               	bcf	127,0,c	;volatile
  1394   002BD4                     
  1395                           ;color.c: 165:     LATEbits.LATE7 = 0;
  1396   002BD4  9E7D               	bcf	125,7,c	;volatile
  1397   002BD6                     
  1398                           ;color.c: 166:     LATAbits.LATA3 = 1;
  1399   002BD6  8679               	bsf	121,3,c	;volatile
  1400   002BD8                     
  1401                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1402   002BD8  0E29               	movlw	41
  1403   002BDA  6E4B               	movwf	(??_reading_hue+1)^0,c
  1404   002BDC  0E96               	movlw	150
  1405   002BDE  6E4A               	movwf	??_reading_hue^0,c
  1406   002BE0  0E7F               	movlw	127
  1407   002BE2                     u5687:
  1408   002BE2  2EE8               	decfsz	wreg,f,c
  1409   002BE4  D7FE               	bra	u5687
  1410   002BE6  2E4A               	decfsz	??_reading_hue^0,f,c
  1411   002BE8  D7FC               	bra	u5687
  1412   002BEA  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1413   002BEC  D7FA               	bra	u5687
  1414   002BEE  0000               	nop	
  1415   002BF0                     
  1416                           ;color.c: 168:     (cCurr->blue) = color_read_Blue();
  1417   002BF0  EC5C  F019         	call	_color_read_Blue	;wreg free
  1418   002BF4  5048               	movf	reading_hue@cCurr^0,w,c
  1419   002BF6  6ED9               	movwf	fsr2l,c
  1420   002BF8  6ADA               	clrf	fsr2h,c
  1421   002BFA  0E04               	movlw	4
  1422   002BFC  26D9               	addwf	fsr2l,f,c
  1423   002BFE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1424   002C02  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1425   002C06                     
  1426                           ;color.c: 173:     LATGbits.LATG0 = 1;
  1427   002C06  807F               	bsf	127,0,c	;volatile
  1428   002C08                     
  1429                           ;color.c: 174:     LATEbits.LATE7 = 1;
  1430   002C08  8E7D               	bsf	125,7,c	;volatile
  1431   002C0A                     
  1432                           ;color.c: 175:     LATAbits.LATA3 = 1;
  1433   002C0A  8679               	bsf	121,3,c	;volatile
  1434                           
  1435                           ;color.c: 176:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1436   002C0C  0E29               	movlw	41
  1437   002C0E  6E4B               	movwf	(??_reading_hue+1)^0,c
  1438   002C10  0E96               	movlw	150
  1439   002C12  6E4A               	movwf	??_reading_hue^0,c
  1440   002C14  0E7F               	movlw	127
  1441   002C16                     u5697:
  1442   002C16  2EE8               	decfsz	wreg,f,c
  1443   002C18  D7FE               	bra	u5697
  1444   002C1A  2E4A               	decfsz	??_reading_hue^0,f,c
  1445   002C1C  D7FC               	bra	u5697
  1446   002C1E  2E4B               	decfsz	(??_reading_hue+1)^0,f,c
  1447   002C20  D7FA               	bra	u5697
  1448   002C22  0000               	nop	
  1449   002C24                     
  1450                           ;color.c: 177:     (cCurr->clear) = color_read_Clear();
  1451   002C24  EC34  F019         	call	_color_read_Clear	;wreg free
  1452   002C28  5048               	movf	reading_hue@cCurr^0,w,c
  1453   002C2A  6ED9               	movwf	fsr2l,c
  1454   002C2C  6ADA               	clrf	fsr2h,c
  1455   002C2E  0E06               	movlw	6
  1456   002C30  26D9               	addwf	fsr2l,f,c
  1457   002C32  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1458   002C36  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1459   002C3A                     
  1460                           ;color.c: 184:     hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1461   002C3A  0EEF               	movlw	low _colorCalibration
  1462   002C3C  6E44               	movwf	convert_rgb2hue@cMax^0,c
  1463   002C3E  0EE7               	movlw	low _colorCurrent
  1464   002C40  6E45               	movwf	convert_rgb2hue@cCurr^0,c
  1465   002C42  EC5D  F007         	call	_convert_rgb2hue	;wreg free
  1466   002C46  C044  F04C         	movff	?_convert_rgb2hue,reading_hue@hue
  1467   002C4A  C045  F04D         	movff	?_convert_rgb2hue+1,reading_hue@hue+1
  1468   002C4E                     
  1469                           ;color.c: 189:     send2USART(hue);
  1470   002C4E  C04C  F044         	movff	reading_hue@hue,send2USART@hue
  1471   002C52  C04D  F045         	movff	reading_hue@hue+1,send2USART@hue+1
  1472   002C56  ECD7  F01A         	call	_send2USART	;wreg free
  1473   002C5A                     
  1474                           ;color.c: 191:     return hue;
  1475   002C5A  C04C  F048         	movff	reading_hue@hue,?_reading_hue
  1476   002C5E  C04D  F049         	movff	reading_hue@hue+1,?_reading_hue+1
  1477   002C62  0012               	return		;funcret
  1478   002C64                     __end_of_reading_hue:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _send2USART *****************
  1482 ;; Defined at:
  1483 ;;		line 146 in file "serial.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  hue             2   67[COMRAM] unsigned int 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1497 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;Total ram usage:       52 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 8
  1504 ;; This function calls:
  1505 ;;		_sendStringSerial4
  1506 ;;		_sprintf
  1507 ;; This function is called by:
  1508 ;;		_reading_hue
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text2
  1514   0035AE                     __ptext2:
  1515                           	callstack 0
  1516   0035AE                     _send2USART:
  1517                           	callstack 22
  1518   0035AE                     
  1519                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1520   0035AE  0E60               	movlw	low send2USART@hue_char
  1521   0035B0  6E31               	movwf	sprintf@s^0,c
  1522   0035B2  0EA0               	movlw	low STR_13
  1523   0035B4  6E32               	movwf	sprintf@fmt^0,c
  1524   0035B6  C044  F033         	movff	send2USART@hue,?_sprintf+2
  1525   0035BA  C045  F034         	movff	send2USART@hue+1,?_sprintf+3
  1526   0035BE  EC3E  F01A         	call	_sprintf	;wreg free
  1527   0035C2                     
  1528                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1529   0035C2  0E60               	movlw	low send2USART@hue_char
  1530   0035C4  6E02               	movwf	sendStringSerial4@string^0,c
  1531   0035C6  EC72  F01A         	call	_sendStringSerial4	;wreg free
  1532   0035CA  0012               	return		;funcret
  1533   0035CC                     __end_of_send2USART:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _convert_rgb2hue *****************
  1537 ;; Defined at:
  1538 ;;		line 284 in file "color.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  cMax            1   67[COMRAM] PTR struct colors
  1541 ;;		 -> colorCalibration(8), 
  1542 ;;  cCurr           1   68[COMRAM] PTR struct colors
  1543 ;;		 -> colorCurrent(8), 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  c_char         20    0[BANK0 ] unsigned char [20]
  1546 ;;  b               4   96[BANK0 ] float 
  1547 ;;  g               4   92[BANK0 ] float 
  1548 ;;  r               4   88[BANK0 ] float 
  1549 ;;  hue             4   84[BANK0 ] float 
  1550 ;;  max             4   80[BANK0 ] float 
  1551 ;;  diff            4   76[BANK0 ] float 
  1552 ;;  min             4   72[BANK0 ] float 
  1553 ;;  c               4   52[BANK0 ] float 
  1554 ;;  clearmax        4   48[BANK0 ] float 
  1555 ;;  clearcurrent    4   44[BANK0 ] float 
  1556 ;;  bluemax         4   40[BANK0 ] float 
  1557 ;;  bluecurrent     4   36[BANK0 ] float 
  1558 ;;  greenmax        4   32[BANK0 ] float 
  1559 ;;  greencurrent    4   28[BANK0 ] float 
  1560 ;;  redmax          4   24[BANK0 ] float 
  1561 ;;  redcurrent      4   20[BANK0 ] float 
  1562 ;; Return value:  Size  Location     Type
  1563 ;;                  2   67[COMRAM] unsigned int 
  1564 ;; Registers used:
  1565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;      Totals:         4     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1575 ;;Total ram usage:      104 bytes
  1576 ;; Hardware stack levels used: 1
  1577 ;; Hardware stack levels required when called: 8
  1578 ;; This function calls:
  1579 ;;		___fladd
  1580 ;;		___fldiv
  1581 ;;		___fleq
  1582 ;;		___flge
  1583 ;;		___flmul
  1584 ;;		___flsub
  1585 ;;		___fltol
  1586 ;;		___xxtofl
  1587 ;;		_sendStringSerial4
  1588 ;;		_sprintf
  1589 ;; This function is called by:
  1590 ;;		_reading_hue
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text3
  1595   000EBA                     __ptext3:
  1596                           	callstack 0
  1597   000EBA                     _convert_rgb2hue:
  1598                           	callstack 21
  1599   000EBA                     
  1600                           ;color.c: 284: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);c
      +                          olor.c: 285: {;color.c: 286:     float redcurrent, redmax, greencurrent, greenmax, bluec
      +                          urrent, bluemax, clearcurrent, clearmax;;color.c: 287:     float r, g, b, c, min, max, d
      +                          iff, hue = 0.0;
  1601   000EBA  0E00               	movlw	0
  1602   000EBC  0100               	movlb	0	; () banked
  1603   000EBE  6FB4               	movwf	convert_rgb2hue@hue& (0+255),b
  1604   000EC0  0E00               	movlw	0
  1605   000EC2  6FB5               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  1606   000EC4  0E00               	movlw	0
  1607   000EC6  6FB6               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  1608   000EC8  0E00               	movlw	0
  1609   000ECA  6FB7               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  1610   000ECC                     
  1611                           ; BSR set to: 0
  1612                           ;color.c: 289:     redcurrent = cCurr->red;
  1613   000ECC  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1614   000ECE  6ED9               	movwf	fsr2l,c
  1615   000ED0  6ADA               	clrf	fsr2h,c
  1616   000ED2  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1617   000ED6  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1618   000EDA  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1619   000EDE  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1620   000EE2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1621   000EE4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1622   000EE6  0E00               	movlw	0
  1623   000EE8  EC82  F011         	call	___xxtofl
  1624   000EEC  C001  F074         	movff	?___xxtofl,convert_rgb2hue@redcurrent
  1625   000EF0  C002  F075         	movff	?___xxtofl+1,convert_rgb2hue@redcurrent+1
  1626   000EF4  C003  F076         	movff	?___xxtofl+2,convert_rgb2hue@redcurrent+2
  1627   000EF8  C004  F077         	movff	?___xxtofl+3,convert_rgb2hue@redcurrent+3
  1628   000EFC                     
  1629                           ;color.c: 290:     redmax = cMax->red;
  1630   000EFC  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1631   000EFE  6ED9               	movwf	fsr2l,c
  1632   000F00  6ADA               	clrf	fsr2h,c
  1633   000F02  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1634   000F06  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1635   000F0A  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1636   000F0E  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1637   000F12  6A03               	clrf	(___xxtofl@val+2)^0,c
  1638   000F14  6A04               	clrf	(___xxtofl@val+3)^0,c
  1639   000F16  0E00               	movlw	0
  1640   000F18  EC82  F011         	call	___xxtofl
  1641   000F1C  C001  F078         	movff	?___xxtofl,convert_rgb2hue@redmax
  1642   000F20  C002  F079         	movff	?___xxtofl+1,convert_rgb2hue@redmax+1
  1643   000F24  C003  F07A         	movff	?___xxtofl+2,convert_rgb2hue@redmax+2
  1644   000F28  C004  F07B         	movff	?___xxtofl+3,convert_rgb2hue@redmax+3
  1645   000F2C                     
  1646                           ;color.c: 291:     greencurrent = cCurr->green;
  1647   000F2C  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1648   000F2E  6ED9               	movwf	fsr2l,c
  1649   000F30  6ADA               	clrf	fsr2h,c
  1650   000F32  0E02               	movlw	2
  1651   000F34  26D9               	addwf	fsr2l,f,c
  1652   000F36  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1653   000F3A  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1654   000F3E  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1655   000F42  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1656   000F46  6A03               	clrf	(___xxtofl@val+2)^0,c
  1657   000F48  6A04               	clrf	(___xxtofl@val+3)^0,c
  1658   000F4A  0E00               	movlw	0
  1659   000F4C  EC82  F011         	call	___xxtofl
  1660   000F50  C001  F07C         	movff	?___xxtofl,convert_rgb2hue@greencurrent
  1661   000F54  C002  F07D         	movff	?___xxtofl+1,convert_rgb2hue@greencurrent+1
  1662   000F58  C003  F07E         	movff	?___xxtofl+2,convert_rgb2hue@greencurrent+2
  1663   000F5C  C004  F07F         	movff	?___xxtofl+3,convert_rgb2hue@greencurrent+3
  1664   000F60                     
  1665                           ;color.c: 292:     greenmax = cMax->green;
  1666   000F60  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1667   000F62  6ED9               	movwf	fsr2l,c
  1668   000F64  6ADA               	clrf	fsr2h,c
  1669   000F66  0E02               	movlw	2
  1670   000F68  26D9               	addwf	fsr2l,f,c
  1671   000F6A  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1672   000F6E  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1673   000F72  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1674   000F76  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1675   000F7A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1676   000F7C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1677   000F7E  0E00               	movlw	0
  1678   000F80  EC82  F011         	call	___xxtofl
  1679   000F84  C001  F080         	movff	?___xxtofl,convert_rgb2hue@greenmax
  1680   000F88  C002  F081         	movff	?___xxtofl+1,convert_rgb2hue@greenmax+1
  1681   000F8C  C003  F082         	movff	?___xxtofl+2,convert_rgb2hue@greenmax+2
  1682   000F90  C004  F083         	movff	?___xxtofl+3,convert_rgb2hue@greenmax+3
  1683   000F94                     
  1684                           ;color.c: 293:     bluecurrent = cCurr->blue;
  1685   000F94  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1686   000F96  6ED9               	movwf	fsr2l,c
  1687   000F98  6ADA               	clrf	fsr2h,c
  1688   000F9A  0E04               	movlw	4
  1689   000F9C  26D9               	addwf	fsr2l,f,c
  1690   000F9E  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1691   000FA2  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1692   000FA6  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1693   000FAA  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1694   000FAE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1695   000FB0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1696   000FB2  0E00               	movlw	0
  1697   000FB4  EC82  F011         	call	___xxtofl
  1698   000FB8  C001  F084         	movff	?___xxtofl,convert_rgb2hue@bluecurrent
  1699   000FBC  C002  F085         	movff	?___xxtofl+1,convert_rgb2hue@bluecurrent+1
  1700   000FC0  C003  F086         	movff	?___xxtofl+2,convert_rgb2hue@bluecurrent+2
  1701   000FC4  C004  F087         	movff	?___xxtofl+3,convert_rgb2hue@bluecurrent+3
  1702   000FC8                     
  1703                           ;color.c: 294:     bluemax = cMax->blue;
  1704   000FC8  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1705   000FCA  6ED9               	movwf	fsr2l,c
  1706   000FCC  6ADA               	clrf	fsr2h,c
  1707   000FCE  0E04               	movlw	4
  1708   000FD0  26D9               	addwf	fsr2l,f,c
  1709   000FD2  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1710   000FD6  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1711   000FDA  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1712   000FDE  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1713   000FE2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1714   000FE4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1715   000FE6  0E00               	movlw	0
  1716   000FE8  EC82  F011         	call	___xxtofl
  1717   000FEC  C001  F088         	movff	?___xxtofl,convert_rgb2hue@bluemax
  1718   000FF0  C002  F089         	movff	?___xxtofl+1,convert_rgb2hue@bluemax+1
  1719   000FF4  C003  F08A         	movff	?___xxtofl+2,convert_rgb2hue@bluemax+2
  1720   000FF8  C004  F08B         	movff	?___xxtofl+3,convert_rgb2hue@bluemax+3
  1721   000FFC                     
  1722                           ;color.c: 295:     clearcurrent = cCurr->clear;
  1723   000FFC  5045               	movf	convert_rgb2hue@cCurr^0,w,c
  1724   000FFE  6ED9               	movwf	fsr2l,c
  1725   001000  6ADA               	clrf	fsr2h,c
  1726   001002  0E06               	movlw	6
  1727   001004  26D9               	addwf	fsr2l,f,c
  1728   001006  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1729   00100A  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1730   00100E  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1731   001012  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1732   001016  6A03               	clrf	(___xxtofl@val+2)^0,c
  1733   001018  6A04               	clrf	(___xxtofl@val+3)^0,c
  1734   00101A  0E00               	movlw	0
  1735   00101C  EC82  F011         	call	___xxtofl
  1736   001020  C001  F08C         	movff	?___xxtofl,convert_rgb2hue@clearcurrent
  1737   001024  C002  F08D         	movff	?___xxtofl+1,convert_rgb2hue@clearcurrent+1
  1738   001028  C003  F08E         	movff	?___xxtofl+2,convert_rgb2hue@clearcurrent+2
  1739   00102C  C004  F08F         	movff	?___xxtofl+3,convert_rgb2hue@clearcurrent+3
  1740   001030                     
  1741                           ;color.c: 296:     clearmax = cMax->clear;
  1742   001030  5044               	movf	convert_rgb2hue@cMax^0,w,c
  1743   001032  6ED9               	movwf	fsr2l,c
  1744   001034  6ADA               	clrf	fsr2h,c
  1745   001036  0E06               	movlw	6
  1746   001038  26D9               	addwf	fsr2l,f,c
  1747   00103A  CFDE F046          	movff	postinc2,??_convert_rgb2hue
  1748   00103E  CFDD F047          	movff	postdec2,??_convert_rgb2hue+1
  1749   001042  C046  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1750   001046  C047  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1751   00104A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1752   00104C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1753   00104E  0E00               	movlw	0
  1754   001050  EC82  F011         	call	___xxtofl
  1755   001054  C001  F090         	movff	?___xxtofl,convert_rgb2hue@clearmax
  1756   001058  C002  F091         	movff	?___xxtofl+1,convert_rgb2hue@clearmax+1
  1757   00105C  C003  F092         	movff	?___xxtofl+2,convert_rgb2hue@clearmax+2
  1758   001060  C004  F093         	movff	?___xxtofl+3,convert_rgb2hue@clearmax+3
  1759   001064                     
  1760                           ;color.c: 298:     c = clearcurrent/clearmax;
  1761   001064  C08C  F019         	movff	convert_rgb2hue@clearcurrent,___fldiv@b
  1762   001068  C08D  F01A         	movff	convert_rgb2hue@clearcurrent+1,___fldiv@b+1
  1763   00106C  C08E  F01B         	movff	convert_rgb2hue@clearcurrent+2,___fldiv@b+2
  1764   001070  C08F  F01C         	movff	convert_rgb2hue@clearcurrent+3,___fldiv@b+3
  1765   001074  C090  F01D         	movff	convert_rgb2hue@clearmax,___fldiv@a
  1766   001078  C091  F01E         	movff	convert_rgb2hue@clearmax+1,___fldiv@a+1
  1767   00107C  C092  F01F         	movff	convert_rgb2hue@clearmax+2,___fldiv@a+2
  1768   001080  C093  F020         	movff	convert_rgb2hue@clearmax+3,___fldiv@a+3
  1769   001084  ECB5  F00F         	call	___fldiv	;wreg free
  1770   001088  C019  F094         	movff	?___fldiv,convert_rgb2hue@c
  1771   00108C  C01A  F095         	movff	?___fldiv+1,convert_rgb2hue@c+1
  1772   001090  C01B  F096         	movff	?___fldiv+2,convert_rgb2hue@c+2
  1773   001094  C01C  F097         	movff	?___fldiv+3,convert_rgb2hue@c+3
  1774   001098                     
  1775                           ;color.c: 299:     char c_char[20];;color.c: 300:     sprintf(c_char, "clear=%03d", c);
  1776   001098  0E60               	movlw	low convert_rgb2hue@c_char
  1777   00109A  6E31               	movwf	sprintf@s^0,c
  1778   00109C  0EAC               	movlw	low STR_11
  1779   00109E  6E32               	movwf	sprintf@fmt^0,c
  1780   0010A0  C094  F033         	movff	convert_rgb2hue@c,?_sprintf+2
  1781   0010A4  C095  F034         	movff	convert_rgb2hue@c+1,?_sprintf+3
  1782   0010A8  C096  F035         	movff	convert_rgb2hue@c+2,?_sprintf+4
  1783   0010AC  C097  F036         	movff	convert_rgb2hue@c+3,?_sprintf+5
  1784   0010B0  EC3E  F01A         	call	_sprintf	;wreg free
  1785   0010B4                     
  1786                           ;color.c: 301:     sendStringSerial4(c_char);
  1787   0010B4  0E60               	movlw	low convert_rgb2hue@c_char
  1788   0010B6  6E02               	movwf	sendStringSerial4@string^0,c
  1789   0010B8  EC72  F01A         	call	_sendStringSerial4	;wreg free
  1790   0010BC                     
  1791                           ;color.c: 305:     r = redcurrent/redmax;
  1792   0010BC  C074  F019         	movff	convert_rgb2hue@redcurrent,___fldiv@b
  1793   0010C0  C075  F01A         	movff	convert_rgb2hue@redcurrent+1,___fldiv@b+1
  1794   0010C4  C076  F01B         	movff	convert_rgb2hue@redcurrent+2,___fldiv@b+2
  1795   0010C8  C077  F01C         	movff	convert_rgb2hue@redcurrent+3,___fldiv@b+3
  1796   0010CC  C078  F01D         	movff	convert_rgb2hue@redmax,___fldiv@a
  1797   0010D0  C079  F01E         	movff	convert_rgb2hue@redmax+1,___fldiv@a+1
  1798   0010D4  C07A  F01F         	movff	convert_rgb2hue@redmax+2,___fldiv@a+2
  1799   0010D8  C07B  F020         	movff	convert_rgb2hue@redmax+3,___fldiv@a+3
  1800   0010DC  ECB5  F00F         	call	___fldiv	;wreg free
  1801   0010E0  C019  F0B8         	movff	?___fldiv,convert_rgb2hue@r
  1802   0010E4  C01A  F0B9         	movff	?___fldiv+1,convert_rgb2hue@r+1
  1803   0010E8  C01B  F0BA         	movff	?___fldiv+2,convert_rgb2hue@r+2
  1804   0010EC  C01C  F0BB         	movff	?___fldiv+3,convert_rgb2hue@r+3
  1805   0010F0                     
  1806                           ;color.c: 306:     g = greencurrent/greenmax;
  1807   0010F0  C07C  F019         	movff	convert_rgb2hue@greencurrent,___fldiv@b
  1808   0010F4  C07D  F01A         	movff	convert_rgb2hue@greencurrent+1,___fldiv@b+1
  1809   0010F8  C07E  F01B         	movff	convert_rgb2hue@greencurrent+2,___fldiv@b+2
  1810   0010FC  C07F  F01C         	movff	convert_rgb2hue@greencurrent+3,___fldiv@b+3
  1811   001100  C080  F01D         	movff	convert_rgb2hue@greenmax,___fldiv@a
  1812   001104  C081  F01E         	movff	convert_rgb2hue@greenmax+1,___fldiv@a+1
  1813   001108  C082  F01F         	movff	convert_rgb2hue@greenmax+2,___fldiv@a+2
  1814   00110C  C083  F020         	movff	convert_rgb2hue@greenmax+3,___fldiv@a+3
  1815   001110  ECB5  F00F         	call	___fldiv	;wreg free
  1816   001114  C019  F0BC         	movff	?___fldiv,convert_rgb2hue@g
  1817   001118  C01A  F0BD         	movff	?___fldiv+1,convert_rgb2hue@g+1
  1818   00111C  C01B  F0BE         	movff	?___fldiv+2,convert_rgb2hue@g+2
  1819   001120  C01C  F0BF         	movff	?___fldiv+3,convert_rgb2hue@g+3
  1820   001124                     
  1821                           ;color.c: 307:     b = bluecurrent/bluemax;
  1822   001124  C084  F019         	movff	convert_rgb2hue@bluecurrent,___fldiv@b
  1823   001128  C085  F01A         	movff	convert_rgb2hue@bluecurrent+1,___fldiv@b+1
  1824   00112C  C086  F01B         	movff	convert_rgb2hue@bluecurrent+2,___fldiv@b+2
  1825   001130  C087  F01C         	movff	convert_rgb2hue@bluecurrent+3,___fldiv@b+3
  1826   001134  C088  F01D         	movff	convert_rgb2hue@bluemax,___fldiv@a
  1827   001138  C089  F01E         	movff	convert_rgb2hue@bluemax+1,___fldiv@a+1
  1828   00113C  C08A  F01F         	movff	convert_rgb2hue@bluemax+2,___fldiv@a+2
  1829   001140  C08B  F020         	movff	convert_rgb2hue@bluemax+3,___fldiv@a+3
  1830   001144  ECB5  F00F         	call	___fldiv	;wreg free
  1831   001148  C019  F0C0         	movff	?___fldiv,convert_rgb2hue@b
  1832   00114C  C01A  F0C1         	movff	?___fldiv+1,convert_rgb2hue@b+1
  1833   001150  C01B  F0C2         	movff	?___fldiv+2,convert_rgb2hue@b+2
  1834   001154  C01C  F0C3         	movff	?___fldiv+3,convert_rgb2hue@b+3
  1835   001158                     
  1836                           ;color.c: 309:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  1837   001158  C0B8  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1838   00115C  C0B9  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1839   001160  C0BA  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1840   001164  C0BB  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1841   001168  C0BC  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1842   00116C  C0BD  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1843   001170  C0BE  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1844   001174  C0BF  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1845   001178  EC35  F015         	call	___flge	;wreg free
  1846   00117C  A0D8               	btfss	status,0,c
  1847   00117E  EFC3  F008         	goto	u5381
  1848   001182  EFC5  F008         	goto	u5380
  1849   001186                     u5381:
  1850   001186  EFFA  F008         	goto	l5500
  1851   00118A                     u5380:
  1852   00118A  C0BC  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1853   00118E  C0BD  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1854   001192  C0BE  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1855   001196  C0BF  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1856   00119A  C0C0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1857   00119E  C0C1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1858   0011A2  C0C2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1859   0011A6  C0C3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1860   0011AA  EC35  F015         	call	___flge	;wreg free
  1861   0011AE  A0D8               	btfss	status,0,c
  1862   0011B0  EFDC  F008         	goto	u5391
  1863   0011B4  EFDE  F008         	goto	u5390
  1864   0011B8                     u5391:
  1865   0011B8  EFE8  F008         	goto	l104
  1866   0011BC                     u5390:
  1867   0011BC  C0C0  F098         	movff	convert_rgb2hue@b,_convert_rgb2hue$388
  1868   0011C0  C0C1  F099         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$388+1
  1869   0011C4  C0C2  F09A         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$388+2
  1870   0011C8  C0C3  F09B         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$388+3
  1871   0011CC  EFF0  F008         	goto	l106
  1872   0011D0                     l104:
  1873   0011D0  C0BC  F098         	movff	convert_rgb2hue@g,_convert_rgb2hue$388
  1874   0011D4  C0BD  F099         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$388+1
  1875   0011D8  C0BE  F09A         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$388+2
  1876   0011DC  C0BF  F09B         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$388+3
  1877   0011E0                     l106:
  1878   0011E0  C098  F0A8         	movff	_convert_rgb2hue$388,convert_rgb2hue@min
  1879   0011E4  C099  F0A9         	movff	_convert_rgb2hue$388+1,convert_rgb2hue@min+1
  1880   0011E8  C09A  F0AA         	movff	_convert_rgb2hue$388+2,convert_rgb2hue@min+2
  1881   0011EC  C09B  F0AB         	movff	_convert_rgb2hue$388+3,convert_rgb2hue@min+3
  1882   0011F0  EF2D  F009         	goto	l5504
  1883   0011F4                     l5500:
  1884   0011F4  C0B8  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1885   0011F8  C0B9  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1886   0011FC  C0BA  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1887   001200  C0BB  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1888   001204  C0C0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1889   001208  C0C1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1890   00120C  C0C2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1891   001210  C0C3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1892   001214  EC35  F015         	call	___flge	;wreg free
  1893   001218  A0D8               	btfss	status,0,c
  1894   00121A  EF11  F009         	goto	u5401
  1895   00121E  EF13  F009         	goto	u5400
  1896   001222                     u5401:
  1897   001222  EF1D  F009         	goto	l108
  1898   001226                     u5400:
  1899   001226  C0C0  F09C         	movff	convert_rgb2hue@b,_convert_rgb2hue$389
  1900   00122A  C0C1  F09D         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$389+1
  1901   00122E  C0C2  F09E         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$389+2
  1902   001232  C0C3  F09F         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$389+3
  1903   001236  EF25  F009         	goto	l110
  1904   00123A                     l108:
  1905   00123A  C0B8  F09C         	movff	convert_rgb2hue@r,_convert_rgb2hue$389
  1906   00123E  C0B9  F09D         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$389+1
  1907   001242  C0BA  F09E         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$389+2
  1908   001246  C0BB  F09F         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$389+3
  1909   00124A                     l110:
  1910   00124A  C09C  F0A8         	movff	_convert_rgb2hue$389,convert_rgb2hue@min
  1911   00124E  C09D  F0A9         	movff	_convert_rgb2hue$389+1,convert_rgb2hue@min+1
  1912   001252  C09E  F0AA         	movff	_convert_rgb2hue$389+2,convert_rgb2hue@min+2
  1913   001256  C09F  F0AB         	movff	_convert_rgb2hue$389+3,convert_rgb2hue@min+3
  1914   00125A                     l5504:
  1915                           
  1916                           ;color.c: 310:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  1917   00125A  C0BC  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1918   00125E  C0BD  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1919   001262  C0BE  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1920   001266  C0BF  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1921   00126A  C0B8  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1922   00126E  C0B9  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1923   001272  C0BA  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1924   001276  C0BB  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1925   00127A  EC35  F015         	call	___flge	;wreg free
  1926   00127E  A0D8               	btfss	status,0,c
  1927   001280  EF44  F009         	goto	u5411
  1928   001284  EF46  F009         	goto	u5410
  1929   001288                     u5411:
  1930   001288  EF7B  F009         	goto	l5510
  1931   00128C                     u5410:
  1932   00128C  C0C0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1933   001290  C0C1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1934   001294  C0C2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1935   001298  C0C3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1936   00129C  C0BC  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1937   0012A0  C0BD  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1938   0012A4  C0BE  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1939   0012A8  C0BF  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1940   0012AC  EC35  F015         	call	___flge	;wreg free
  1941   0012B0  A0D8               	btfss	status,0,c
  1942   0012B2  EF5D  F009         	goto	u5421
  1943   0012B6  EF5F  F009         	goto	u5420
  1944   0012BA                     u5421:
  1945   0012BA  EF69  F009         	goto	l116
  1946   0012BE                     u5420:
  1947   0012BE  C0C0  F0A0         	movff	convert_rgb2hue@b,_convert_rgb2hue$390
  1948   0012C2  C0C1  F0A1         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$390+1
  1949   0012C6  C0C2  F0A2         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$390+2
  1950   0012CA  C0C3  F0A3         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$390+3
  1951   0012CE  EF71  F009         	goto	l118
  1952   0012D2                     l116:
  1953   0012D2  C0BC  F0A0         	movff	convert_rgb2hue@g,_convert_rgb2hue$390
  1954   0012D6  C0BD  F0A1         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$390+1
  1955   0012DA  C0BE  F0A2         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$390+2
  1956   0012DE  C0BF  F0A3         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$390+3
  1957   0012E2                     l118:
  1958   0012E2  C0A0  F0B0         	movff	_convert_rgb2hue$390,convert_rgb2hue@max
  1959   0012E6  C0A1  F0B1         	movff	_convert_rgb2hue$390+1,convert_rgb2hue@max+1
  1960   0012EA  C0A2  F0B2         	movff	_convert_rgb2hue$390+2,convert_rgb2hue@max+2
  1961   0012EE  C0A3  F0B3         	movff	_convert_rgb2hue$390+3,convert_rgb2hue@max+3
  1962   0012F2  EFAE  F009         	goto	l5514
  1963   0012F6                     l5510:
  1964   0012F6  C0C0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1965   0012FA  C0C1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1966   0012FE  C0C2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1967   001302  C0C3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1968   001306  C0B8  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1969   00130A  C0B9  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1970   00130E  C0BA  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1971   001312  C0BB  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1972   001316  EC35  F015         	call	___flge	;wreg free
  1973   00131A  A0D8               	btfss	status,0,c
  1974   00131C  EF92  F009         	goto	u5431
  1975   001320  EF94  F009         	goto	u5430
  1976   001324                     u5431:
  1977   001324  EF9E  F009         	goto	l120
  1978   001328                     u5430:
  1979   001328  C0C0  F0A4         	movff	convert_rgb2hue@b,_convert_rgb2hue$391
  1980   00132C  C0C1  F0A5         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$391+1
  1981   001330  C0C2  F0A6         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$391+2
  1982   001334  C0C3  F0A7         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$391+3
  1983   001338  EFA6  F009         	goto	l122
  1984   00133C                     l120:
  1985   00133C  C0B8  F0A4         	movff	convert_rgb2hue@r,_convert_rgb2hue$391
  1986   001340  C0B9  F0A5         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$391+1
  1987   001344  C0BA  F0A6         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$391+2
  1988   001348  C0BB  F0A7         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$391+3
  1989   00134C                     l122:
  1990   00134C  C0A4  F0B0         	movff	_convert_rgb2hue$391,convert_rgb2hue@max
  1991   001350  C0A5  F0B1         	movff	_convert_rgb2hue$391+1,convert_rgb2hue@max+1
  1992   001354  C0A6  F0B2         	movff	_convert_rgb2hue$391+2,convert_rgb2hue@max+2
  1993   001358  C0A7  F0B3         	movff	_convert_rgb2hue$391+3,convert_rgb2hue@max+3
  1994   00135C                     l5514:
  1995                           
  1996                           ;color.c: 311:     diff = max - min;
  1997   00135C  C0B0  F011         	movff	convert_rgb2hue@max,___flsub@b
  1998   001360  C0B1  F012         	movff	convert_rgb2hue@max+1,___flsub@b+1
  1999   001364  C0B2  F013         	movff	convert_rgb2hue@max+2,___flsub@b+2
  2000   001368  C0B3  F014         	movff	convert_rgb2hue@max+3,___flsub@b+3
  2001   00136C  C0A8  F015         	movff	convert_rgb2hue@min,___flsub@a
  2002   001370  C0A9  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2003   001374  C0AA  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2004   001378  C0AB  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2005   00137C  EC84  F019         	call	___flsub	;wreg free
  2006   001380  C011  F0AC         	movff	?___flsub,convert_rgb2hue@diff
  2007   001384  C012  F0AD         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2008   001388  C013  F0AE         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2009   00138C  C014  F0AF         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2010                           
  2011                           ;color.c: 312:     if (max == min) {
  2012   001390  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2013   001394  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2014   001398  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2015   00139C  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2016   0013A0  C0A8  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2017   0013A4  C0A9  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2018   0013A8  C0AA  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2019   0013AC  C0AB  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2020   0013B0  ECA7  F017         	call	___fleq	;wreg free
  2021   0013B4  A0D8               	btfss	status,0,c
  2022   0013B6  EFDF  F009         	goto	u5441
  2023   0013BA  EFE1  F009         	goto	u5440
  2024   0013BE                     u5441:
  2025   0013BE  EFEC  F009         	goto	l5518
  2026   0013C2                     u5440:
  2027   0013C2                     
  2028                           ;color.c: 313:         hue = 0;
  2029   0013C2  0E00               	movlw	0
  2030   0013C4  0100               	movlb	0	; () banked
  2031   0013C6  6FB4               	movwf	convert_rgb2hue@hue& (0+255),b
  2032   0013C8  0E00               	movlw	0
  2033   0013CA  6FB5               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  2034   0013CC  0E00               	movlw	0
  2035   0013CE  6FB6               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  2036   0013D0  0E00               	movlw	0
  2037   0013D2  6FB7               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  2038                           
  2039                           ;color.c: 314:     } else if (max == r){
  2040   0013D4  EFF5  F00A         	goto	l5530
  2041   0013D8                     l5518:
  2042   0013D8  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2043   0013DC  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2044   0013E0  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2045   0013E4  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2046   0013E8  C0B8  F005         	movff	convert_rgb2hue@r,___fleq@ff2
  2047   0013EC  C0B9  F006         	movff	convert_rgb2hue@r+1,___fleq@ff2+1
  2048   0013F0  C0BA  F007         	movff	convert_rgb2hue@r+2,___fleq@ff2+2
  2049   0013F4  C0BB  F008         	movff	convert_rgb2hue@r+3,___fleq@ff2+3
  2050   0013F8  ECA7  F017         	call	___fleq	;wreg free
  2051   0013FC  A0D8               	btfss	status,0,c
  2052   0013FE  EF03  F00A         	goto	u5451
  2053   001402  EF05  F00A         	goto	u5450
  2054   001406                     u5451:
  2055   001406  EF33  F00A         	goto	l5522
  2056   00140A                     u5450:
  2057   00140A                     
  2058                           ;color.c: 315:         hue = (b - g) / diff;
  2059   00140A  C0BC  F015         	movff	convert_rgb2hue@g,___flsub@a
  2060   00140E  C0BD  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2061   001412  C0BE  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2062   001416  C0BF  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2063   00141A  C0C0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2064   00141E  C0C1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2065   001422  C0C2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2066   001426  C0C3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2067   00142A  EC84  F019         	call	___flsub	;wreg free
  2068   00142E  C011  F019         	movff	?___flsub,___fldiv@b
  2069   001432  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2070   001436  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2071   00143A  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2072   00143E  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2073   001442  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2074   001446  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2075   00144A  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2076   00144E  ECB5  F00F         	call	___fldiv	;wreg free
  2077   001452  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2078   001456  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2079   00145A  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2080   00145E  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2081                           
  2082                           ;color.c: 316:     } else if (max == g){
  2083   001462  EFF5  F00A         	goto	l5530
  2084   001466                     l5522:
  2085   001466  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2086   00146A  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2087   00146E  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2088   001472  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2089   001476  C0BC  F005         	movff	convert_rgb2hue@g,___fleq@ff2
  2090   00147A  C0BD  F006         	movff	convert_rgb2hue@g+1,___fleq@ff2+1
  2091   00147E  C0BE  F007         	movff	convert_rgb2hue@g+2,___fleq@ff2+2
  2092   001482  C0BF  F008         	movff	convert_rgb2hue@g+3,___fleq@ff2+3
  2093   001486  ECA7  F017         	call	___fleq	;wreg free
  2094   00148A  A0D8               	btfss	status,0,c
  2095   00148C  EF4A  F00A         	goto	u5461
  2096   001490  EF4C  F00A         	goto	u5460
  2097   001494                     u5461:
  2098   001494  EF94  F00A         	goto	l5526
  2099   001498                     u5460:
  2100   001498                     
  2101                           ;color.c: 317:         hue = (b - r) / diff;
  2102   001498  C0B8  F015         	movff	convert_rgb2hue@r,___flsub@a
  2103   00149C  C0B9  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2104   0014A0  C0BA  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2105   0014A4  C0BB  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2106   0014A8  C0C0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2107   0014AC  C0C1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2108   0014B0  C0C2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2109   0014B4  C0C3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2110   0014B8  EC84  F019         	call	___flsub	;wreg free
  2111   0014BC  C011  F019         	movff	?___flsub,___fldiv@b
  2112   0014C0  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2113   0014C4  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2114   0014C8  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2115   0014CC  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2116   0014D0  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2117   0014D4  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2118   0014D8  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2119   0014DC  ECB5  F00F         	call	___fldiv	;wreg free
  2120   0014E0  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2121   0014E4  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2122   0014E8  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2123   0014EC  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2124                           
  2125                           ;color.c: 318:         hue = hue + 2;
  2126   0014F0  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2127   0014F4  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2128   0014F8  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2129   0014FC  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2130   001500  0E00               	movlw	0
  2131   001502  6E05               	movwf	___fladd@a^0,c
  2132   001504  0E00               	movlw	0
  2133   001506  6E06               	movwf	(___fladd@a+1)^0,c
  2134   001508  0E00               	movlw	0
  2135   00150A  6E07               	movwf	(___fladd@a+2)^0,c
  2136   00150C  0E40               	movlw	64
  2137   00150E  6E08               	movwf	(___fladd@a+3)^0,c
  2138   001510  EC40  F00B         	call	___fladd	;wreg free
  2139   001514  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2140   001518  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2141   00151C  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2142   001520  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2143                           
  2144                           ;color.c: 319:     } else if (max == b){
  2145   001524  EFF5  F00A         	goto	l5530
  2146   001528                     l5526:
  2147   001528  C0B0  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2148   00152C  C0B1  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2149   001530  C0B2  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2150   001534  C0B3  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2151   001538  C0C0  F005         	movff	convert_rgb2hue@b,___fleq@ff2
  2152   00153C  C0C1  F006         	movff	convert_rgb2hue@b+1,___fleq@ff2+1
  2153   001540  C0C2  F007         	movff	convert_rgb2hue@b+2,___fleq@ff2+2
  2154   001544  C0C3  F008         	movff	convert_rgb2hue@b+3,___fleq@ff2+3
  2155   001548  ECA7  F017         	call	___fleq	;wreg free
  2156   00154C  A0D8               	btfss	status,0,c
  2157   00154E  EFAB  F00A         	goto	u5471
  2158   001552  EFAD  F00A         	goto	u5470
  2159   001556                     u5471:
  2160   001556  EFF5  F00A         	goto	l126
  2161   00155A                     u5470:
  2162   00155A                     
  2163                           ;color.c: 320:         hue = (r - g) / diff;
  2164   00155A  C0BC  F015         	movff	convert_rgb2hue@g,___flsub@a
  2165   00155E  C0BD  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2166   001562  C0BE  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2167   001566  C0BF  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2168   00156A  C0B8  F011         	movff	convert_rgb2hue@r,___flsub@b
  2169   00156E  C0B9  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2170   001572  C0BA  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2171   001576  C0BB  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2172   00157A  EC84  F019         	call	___flsub	;wreg free
  2173   00157E  C011  F019         	movff	?___flsub,___fldiv@b
  2174   001582  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2175   001586  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2176   00158A  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2177   00158E  C0AC  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2178   001592  C0AD  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2179   001596  C0AE  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2180   00159A  C0AF  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2181   00159E  ECB5  F00F         	call	___fldiv	;wreg free
  2182   0015A2  C019  F0B4         	movff	?___fldiv,convert_rgb2hue@hue
  2183   0015A6  C01A  F0B5         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2184   0015AA  C01B  F0B6         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2185   0015AE  C01C  F0B7         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2186                           
  2187                           ;color.c: 321:         hue = hue + 4;
  2188   0015B2  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2189   0015B6  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2190   0015BA  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2191   0015BE  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2192   0015C2  0E00               	movlw	0
  2193   0015C4  6E05               	movwf	___fladd@a^0,c
  2194   0015C6  0E00               	movlw	0
  2195   0015C8  6E06               	movwf	(___fladd@a+1)^0,c
  2196   0015CA  0E80               	movlw	128
  2197   0015CC  6E07               	movwf	(___fladd@a+2)^0,c
  2198   0015CE  0E40               	movlw	64
  2199   0015D0  6E08               	movwf	(___fladd@a+3)^0,c
  2200   0015D2  EC40  F00B         	call	___fladd	;wreg free
  2201   0015D6  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2202   0015DA  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2203   0015DE  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2204   0015E2  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2205   0015E6  EFF5  F00A         	goto	l5530
  2206   0015EA                     l126:
  2207   0015EA                     l5530:
  2208                           
  2209                           ;color.c: 324:     hue = hue * 60;
  2210   0015EA  C0B4  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2211   0015EE  C0B5  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2212   0015F2  C0B6  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2213   0015F6  C0B7  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2214   0015FA  0E00               	movlw	0
  2215   0015FC  6E05               	movwf	___flmul@a^0,c
  2216   0015FE  0E00               	movlw	0
  2217   001600  6E06               	movwf	(___flmul@a+1)^0,c
  2218   001602  0E70               	movlw	112
  2219   001604  6E07               	movwf	(___flmul@a+2)^0,c
  2220   001606  0E42               	movlw	66
  2221   001608  6E08               	movwf	(___flmul@a+3)^0,c
  2222   00160A  ECA0  F00D         	call	___flmul	;wreg free
  2223   00160E  C001  F0B4         	movff	?___flmul,convert_rgb2hue@hue
  2224   001612  C002  F0B5         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2225   001616  C003  F0B6         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2226   00161A  C004  F0B7         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2227   00161E                     
  2228                           ;color.c: 325:     if (hue < 0) {
  2229   00161E  0100               	movlb	0	; () banked
  2230   001620  BFB7               	btfsc	(convert_rgb2hue@hue+3)& (0+255),7,b
  2231   001622  EF17  F00B         	goto	u5480
  2232   001626  EF15  F00B         	goto	u5481
  2233   00162A                     u5481:
  2234   00162A  EF31  F00B         	goto	l130
  2235   00162E                     u5480:
  2236   00162E                     
  2237                           ; BSR set to: 0
  2238                           ;color.c: 326:         hue = hue + 360;
  2239   00162E  C0B4  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2240   001632  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2241   001636  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2242   00163A  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2243   00163E  0E00               	movlw	0
  2244   001640  6E05               	movwf	___fladd@a^0,c
  2245   001642  0E00               	movlw	0
  2246   001644  6E06               	movwf	(___fladd@a+1)^0,c
  2247   001646  0EB4               	movlw	180
  2248   001648  6E07               	movwf	(___fladd@a+2)^0,c
  2249   00164A  0E43               	movlw	67
  2250   00164C  6E08               	movwf	(___fladd@a+3)^0,c
  2251   00164E  EC40  F00B         	call	___fladd	;wreg free
  2252   001652  C001  F0B4         	movff	?___fladd,convert_rgb2hue@hue
  2253   001656  C002  F0B5         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2254   00165A  C003  F0B6         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2255   00165E  C004  F0B7         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2256   001662                     l130:
  2257                           
  2258                           ;color.c: 329:     return (unsigned int)hue;
  2259   001662  C0B4  F001         	movff	convert_rgb2hue@hue,___fltol@f1
  2260   001666  C0B5  F002         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2261   00166A  C0B6  F003         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2262   00166E  C0B7  F004         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2263   001672  ECB2  F014         	call	___fltol	;wreg free
  2264   001676  C001  F044         	movff	?___fltol,?_convert_rgb2hue
  2265   00167A  C002  F045         	movff	?___fltol+1,?_convert_rgb2hue+1
  2266   00167E  0012               	return		;funcret
  2267   001680                     __end_of_convert_rgb2hue:
  2268                           	callstack 0
  2269                           
  2270 ;; *************** function ___xxtofl *****************
  2271 ;; Defined at:
  2272 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  sign            1    wreg     unsigned char 
  2275 ;;  val             4    0[COMRAM] long 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  sign            1    8[COMRAM] unsigned char 
  2278 ;;  arg             4   10[COMRAM] unsigned long 
  2279 ;;  exp             1    9[COMRAM] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  4    0[COMRAM] unsigned char 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;Total ram usage:       14 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_convert_rgb2hue
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text4
  2303   002304                     __ptext4:
  2304                           	callstack 0
  2305   002304                     ___xxtofl:
  2306                           	callstack 28
  2307                           
  2308                           ;incstack = 0
  2309                           ;___xxtofl@sign stored from wreg
  2310   002304  6E09               	movwf	___xxtofl@sign^0,c
  2311   002306  5009               	movf	___xxtofl@sign^0,w,c
  2312   002308  B4D8               	btfsc	status,2,c
  2313   00230A  EF89  F011         	goto	u5281
  2314   00230E  EF8B  F011         	goto	u5280
  2315   002312                     u5281:
  2316   002312  EFAD  F011         	goto	l1191
  2317   002316                     u5280:
  2318   002316  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2319   002318  EF92  F011         	goto	u5290
  2320   00231C  EF90  F011         	goto	u5291
  2321   002320                     u5291:
  2322   002320  EFAD  F011         	goto	l1191
  2323   002324                     u5290:
  2324   002324  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2325   002328  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2326   00232C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2327   002330  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2328   002334  1E05               	comf	??___xxtofl^0,f,c
  2329   002336  1E06               	comf	(??___xxtofl+1)^0,f,c
  2330   002338  1E07               	comf	(??___xxtofl+2)^0,f,c
  2331   00233A  1E08               	comf	(??___xxtofl+3)^0,f,c
  2332   00233C  2A05               	incf	??___xxtofl^0,f,c
  2333   00233E  0E00               	movlw	0
  2334   002340  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2335   002342  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2336   002344  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2337   002346  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2338   00234A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2339   00234E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2340   002352  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2341   002356  EFB5  F011         	goto	l5386
  2342   00235A                     l1191:
  2343   00235A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2344   00235E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2345   002362  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2346   002366  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2347   00236A                     l5386:
  2348   00236A  5001               	movf	___xxtofl@val^0,w,c
  2349   00236C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2350   00236E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2351   002370  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2352   002372  A4D8               	btfss	status,2,c
  2353   002374  EFBE  F011         	goto	u5301
  2354   002378  EFC0  F011         	goto	u5300
  2355   00237C                     u5301:
  2356   00237C  EFCA  F011         	goto	l5392
  2357   002380                     u5300:
  2358   002380  0E00               	movlw	0
  2359   002382  6E01               	movwf	?___xxtofl^0,c
  2360   002384  0E00               	movlw	0
  2361   002386  6E02               	movwf	(?___xxtofl+1)^0,c
  2362   002388  0E00               	movlw	0
  2363   00238A  6E03               	movwf	(?___xxtofl+2)^0,c
  2364   00238C  0E00               	movlw	0
  2365   00238E  6E04               	movwf	(?___xxtofl+3)^0,c
  2366   002390  EF5B  F012         	goto	l1194
  2367   002394                     l5392:
  2368   002394  0E96               	movlw	150
  2369   002396  6E0A               	movwf	___xxtofl@exp^0,c
  2370   002398  EFD4  F011         	goto	l5396
  2371   00239C                     l5394:
  2372   00239C  2A0A               	incf	___xxtofl@exp^0,f,c
  2373   00239E  90D8               	bcf	status,0,c
  2374   0023A0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2375   0023A2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2376   0023A4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2377   0023A6  320B               	rrcf	___xxtofl@arg^0,f,c
  2378   0023A8                     l5396:
  2379   0023A8  0E00               	movlw	0
  2380   0023AA  140B               	andwf	___xxtofl@arg^0,w,c
  2381   0023AC  6E05               	movwf	??___xxtofl^0,c
  2382   0023AE  0E00               	movlw	0
  2383   0023B0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2384   0023B2  6E06               	movwf	(??___xxtofl+1)^0,c
  2385   0023B4  0E00               	movlw	0
  2386   0023B6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2387   0023B8  6E07               	movwf	(??___xxtofl+2)^0,c
  2388   0023BA  0EFE               	movlw	254
  2389   0023BC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2390   0023BE  6E08               	movwf	(??___xxtofl+3)^0,c
  2391   0023C0  5005               	movf	??___xxtofl^0,w,c
  2392   0023C2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2393   0023C4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2394   0023C6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2395   0023C8  A4D8               	btfss	status,2,c
  2396   0023CA  EFE9  F011         	goto	u5311
  2397   0023CE  EFEB  F011         	goto	u5310
  2398   0023D2                     u5311:
  2399   0023D2  EFCE  F011         	goto	l5394
  2400   0023D6                     u5310:
  2401   0023D6  EFF9  F011         	goto	l1198
  2402   0023DA                     l5398:
  2403   0023DA  2A0A               	incf	___xxtofl@exp^0,f,c
  2404   0023DC  0E01               	movlw	1
  2405   0023DE  260B               	addwf	___xxtofl@arg^0,f,c
  2406   0023E0  0E00               	movlw	0
  2407   0023E2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2408   0023E4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2409   0023E6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2410   0023E8  90D8               	bcf	status,0,c
  2411   0023EA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2412   0023EC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2413   0023EE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2414   0023F0  320B               	rrcf	___xxtofl@arg^0,f,c
  2415   0023F2                     l1198:
  2416   0023F2  0E00               	movlw	0
  2417   0023F4  140B               	andwf	___xxtofl@arg^0,w,c
  2418   0023F6  6E05               	movwf	??___xxtofl^0,c
  2419   0023F8  0E00               	movlw	0
  2420   0023FA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2421   0023FC  6E06               	movwf	(??___xxtofl+1)^0,c
  2422   0023FE  0E00               	movlw	0
  2423   002400  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2424   002402  6E07               	movwf	(??___xxtofl+2)^0,c
  2425   002404  0EFF               	movlw	255
  2426   002406  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2427   002408  6E08               	movwf	(??___xxtofl+3)^0,c
  2428   00240A  5005               	movf	??___xxtofl^0,w,c
  2429   00240C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2430   00240E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2431   002410  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2432   002412  A4D8               	btfss	status,2,c
  2433   002414  EF0E  F012         	goto	u5321
  2434   002418  EF10  F012         	goto	u5320
  2435   00241C                     u5321:
  2436   00241C  EFED  F011         	goto	l5398
  2437   002420                     u5320:
  2438   002420  EF18  F012         	goto	l5406
  2439   002424                     l5404:
  2440   002424  060A               	decf	___xxtofl@exp^0,f,c
  2441   002426  90D8               	bcf	status,0,c
  2442   002428  360B               	rlcf	___xxtofl@arg^0,f,c
  2443   00242A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2444   00242C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2445   00242E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2446   002430                     l5406:
  2447   002430  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2448   002432  EF1D  F012         	goto	u5331
  2449   002436  EF1F  F012         	goto	u5330
  2450   00243A                     u5331:
  2451   00243A  EF27  F012         	goto	l1205
  2452   00243E                     u5330:
  2453   00243E  0E02               	movlw	2
  2454   002440  600A               	cpfslt	___xxtofl@exp^0,c
  2455   002442  EF25  F012         	goto	u5341
  2456   002446  EF27  F012         	goto	u5340
  2457   00244A                     u5341:
  2458   00244A  EF12  F012         	goto	l5404
  2459   00244E                     u5340:
  2460   00244E                     l1205:
  2461   00244E  B00A               	btfsc	___xxtofl@exp^0,0,c
  2462   002450  EF2C  F012         	goto	u5351
  2463   002454  EF2E  F012         	goto	u5350
  2464   002458                     u5351:
  2465   002458  EF2F  F012         	goto	l5412
  2466   00245C                     u5350:
  2467   00245C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2468   00245E                     l5412:
  2469   00245E  90D8               	bcf	status,0,c
  2470   002460  320A               	rrcf	___xxtofl@exp^0,f,c
  2471   002462  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2472   002466  6A06               	clrf	(??___xxtofl+1)^0,c
  2473   002468  6A07               	clrf	(??___xxtofl+2)^0,c
  2474   00246A  6A08               	clrf	(??___xxtofl+3)^0,c
  2475   00246C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2476   002470  6A07               	clrf	(??___xxtofl+2)^0,c
  2477   002472  6A06               	clrf	(??___xxtofl+1)^0,c
  2478   002474  6A05               	clrf	??___xxtofl^0,c
  2479   002476  5005               	movf	??___xxtofl^0,w,c
  2480   002478  120B               	iorwf	___xxtofl@arg^0,f,c
  2481   00247A  5006               	movf	(??___xxtofl+1)^0,w,c
  2482   00247C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2483   00247E  5007               	movf	(??___xxtofl+2)^0,w,c
  2484   002480  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2485   002482  5008               	movf	(??___xxtofl+3)^0,w,c
  2486   002484  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2487   002486  5009               	movf	___xxtofl@sign^0,w,c
  2488   002488  B4D8               	btfsc	status,2,c
  2489   00248A  EF49  F012         	goto	u5361
  2490   00248E  EF4B  F012         	goto	u5360
  2491   002492                     u5361:
  2492   002492  EF53  F012         	goto	l5422
  2493   002496                     u5360:
  2494   002496  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2495   002498  EF52  F012         	goto	u5370
  2496   00249C  EF50  F012         	goto	u5371
  2497   0024A0                     u5371:
  2498   0024A0  EF53  F012         	goto	l5422
  2499   0024A4                     u5370:
  2500   0024A4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2501   0024A6                     l5422:
  2502   0024A6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2503   0024AA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2504   0024AE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2505   0024B2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2506   0024B6                     l1194:
  2507   0024B6  0012               	return		;funcret
  2508   0024B8                     __end_of___xxtofl:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function ___fltol *****************
  2512 ;; Defined at:
  2513 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  f1              4    0[COMRAM] unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  exp1            1    9[COMRAM] unsigned char 
  2518 ;;  sign1           1    8[COMRAM] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  4    0[COMRAM] long 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;Total ram usage:       10 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_convert_rgb2hue
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text5
  2542   002964                     __ptext5:
  2543                           	callstack 0
  2544   002964                     ___fltol:
  2545                           	callstack 28
  2546   002964  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2547   002966  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2548   002968  6E0A               	movwf	___fltol@exp1^0,c
  2549   00296A  500A               	movf	___fltol@exp1^0,w,c
  2550   00296C  A4D8               	btfss	status,2,c
  2551   00296E  EFBB  F014         	goto	u5211
  2552   002972  EFBD  F014         	goto	u5210
  2553   002976                     u5211:
  2554   002976  EFC7  F014         	goto	l5342
  2555   00297A                     u5210:
  2556   00297A                     l5338:
  2557   00297A  0E00               	movlw	0
  2558   00297C  6E01               	movwf	?___fltol^0,c
  2559   00297E  0E00               	movlw	0
  2560   002980  6E02               	movwf	(?___fltol+1)^0,c
  2561   002982  0E00               	movlw	0
  2562   002984  6E03               	movwf	(?___fltol+2)^0,c
  2563   002986  0E00               	movlw	0
  2564   002988  6E04               	movwf	(?___fltol+3)^0,c
  2565   00298A  EF34  F015         	goto	l833
  2566   00298E                     l5342:
  2567   00298E  C001  F005         	movff	___fltol@f1,??___fltol
  2568   002992  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2569   002996  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2570   00299A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2571   00299E  0E20               	movlw	32
  2572   0029A0  EFD7  F014         	goto	u5220
  2573   0029A4                     u5225:
  2574   0029A4  90D8               	bcf	status,0,c
  2575   0029A6  3208               	rrcf	(??___fltol+3)^0,f,c
  2576   0029A8  3207               	rrcf	(??___fltol+2)^0,f,c
  2577   0029AA  3206               	rrcf	(??___fltol+1)^0,f,c
  2578   0029AC  3205               	rrcf	??___fltol^0,f,c
  2579   0029AE                     u5220:
  2580   0029AE  2EE8               	decfsz	wreg,f,c
  2581   0029B0  EFD2  F014         	goto	u5225
  2582   0029B4  5005               	movf	??___fltol^0,w,c
  2583   0029B6  6E09               	movwf	___fltol@sign1^0,c
  2584   0029B8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2585   0029BA  0EFF               	movlw	255
  2586   0029BC  1601               	andwf	___fltol@f1^0,f,c
  2587   0029BE  0EFF               	movlw	255
  2588   0029C0  1602               	andwf	(___fltol@f1+1)^0,f,c
  2589   0029C2  0EFF               	movlw	255
  2590   0029C4  1603               	andwf	(___fltol@f1+2)^0,f,c
  2591   0029C6  0E00               	movlw	0
  2592   0029C8  1604               	andwf	(___fltol@f1+3)^0,f,c
  2593   0029CA  0E96               	movlw	150
  2594   0029CC  5E0A               	subwf	___fltol@exp1^0,f,c
  2595   0029CE  BE0A               	btfsc	___fltol@exp1^0,7,c
  2596   0029D0  EFEE  F014         	goto	u5230
  2597   0029D4  EFEC  F014         	goto	u5231
  2598   0029D8                     u5231:
  2599   0029D8  EF04  F015         	goto	l5362
  2600   0029DC                     u5230:
  2601   0029DC  500A               	movf	___fltol@exp1^0,w,c
  2602   0029DE  0A80               	xorlw	128
  2603   0029E0  0F97               	addlw	151
  2604   0029E2  B0D8               	btfsc	status,0,c
  2605   0029E4  EFF6  F014         	goto	u5241
  2606   0029E8  EFF8  F014         	goto	u5240
  2607   0029EC                     u5241:
  2608   0029EC  EFFA  F014         	goto	l5358
  2609   0029F0                     u5240:
  2610   0029F0  EFBD  F014         	goto	l5338
  2611   0029F4                     l5358:
  2612   0029F4  90D8               	bcf	status,0,c
  2613   0029F6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2614   0029F8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2615   0029FA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2616   0029FC  3201               	rrcf	___fltol@f1^0,f,c
  2617   0029FE  3E0A               	incfsz	___fltol@exp1^0,f,c
  2618   002A00  EFFA  F014         	goto	l5358
  2619   002A04  EF1C  F015         	goto	l5372
  2620   002A08                     l5362:
  2621   002A08  0E1F               	movlw	31
  2622   002A0A  640A               	cpfsgt	___fltol@exp1^0,c
  2623   002A0C  EF0A  F015         	goto	u5251
  2624   002A10  EF0C  F015         	goto	u5250
  2625   002A14                     u5251:
  2626   002A14  EF14  F015         	goto	l5370
  2627   002A18                     u5250:
  2628   002A18  EFBD  F014         	goto	l5338
  2629   002A1C                     l5368:
  2630   002A1C  90D8               	bcf	status,0,c
  2631   002A1E  3601               	rlcf	___fltol@f1^0,f,c
  2632   002A20  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2633   002A22  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2634   002A24  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2635   002A26  060A               	decf	___fltol@exp1^0,f,c
  2636   002A28                     l5370:
  2637   002A28  500A               	movf	___fltol@exp1^0,w,c
  2638   002A2A  A4D8               	btfss	status,2,c
  2639   002A2C  EF1A  F015         	goto	u5261
  2640   002A30  EF1C  F015         	goto	u5260
  2641   002A34                     u5261:
  2642   002A34  EF0E  F015         	goto	l5368
  2643   002A38                     u5260:
  2644   002A38                     l5372:
  2645   002A38  5009               	movf	___fltol@sign1^0,w,c
  2646   002A3A  B4D8               	btfsc	status,2,c
  2647   002A3C  EF22  F015         	goto	u5271
  2648   002A40  EF24  F015         	goto	u5270
  2649   002A44                     u5271:
  2650   002A44  EF2C  F015         	goto	l5376
  2651   002A48                     u5270:
  2652   002A48  1E04               	comf	(___fltol@f1+3)^0,f,c
  2653   002A4A  1E03               	comf	(___fltol@f1+2)^0,f,c
  2654   002A4C  1E02               	comf	(___fltol@f1+1)^0,f,c
  2655   002A4E  6C01               	negf	___fltol@f1^0,c
  2656   002A50  0E00               	movlw	0
  2657   002A52  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2658   002A54  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2659   002A56  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2660   002A58                     l5376:
  2661   002A58  C001  F001         	movff	___fltol@f1,?___fltol
  2662   002A5C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2663   002A60  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2664   002A64  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2665   002A68                     l833:
  2666   002A68  0012               	return		;funcret
  2667   002A6A                     __end_of___fltol:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function ___flsub *****************
  2671 ;; Defined at:
  2672 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  b               4   16[COMRAM] long 
  2675 ;;  a               4   20[COMRAM] long 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  4   16[COMRAM] long 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2687 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;Total ram usage:        8 bytes
  2692 ;; Hardware stack levels used: 1
  2693 ;; Hardware stack levels required when called: 1
  2694 ;; This function calls:
  2695 ;;		___fladd
  2696 ;; This function is called by:
  2697 ;;		_convert_rgb2hue
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text6
  2702   003308                     __ptext6:
  2703                           	callstack 0
  2704   003308                     ___flsub:
  2705                           	callstack 27
  2706   003308  0E00               	movlw	0
  2707   00330A  1A15               	xorwf	___flsub@a^0,f,c
  2708   00330C  0E00               	movlw	0
  2709   00330E  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2710   003310  0E00               	movlw	0
  2711   003312  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2712   003314  0E80               	movlw	128
  2713   003316  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2714   003318  C011  F001         	movff	___flsub@b,___fladd@b
  2715   00331C  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2716   003320  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2717   003324  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2718   003328  C015  F005         	movff	___flsub@a,___fladd@a
  2719   00332C  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2720   003330  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2721   003334  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2722   003338  EC40  F00B         	call	___fladd	;wreg free
  2723   00333C  C001  F011         	movff	?___fladd,?___flsub
  2724   003340  C002  F012         	movff	?___fladd+1,?___flsub+1
  2725   003344  C003  F013         	movff	?___fladd+2,?___flsub+2
  2726   003348  C004  F014         	movff	?___fladd+3,?___flsub+3
  2727   00334C  0012               	return		;funcret
  2728   00334E                     __end_of___flsub:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function ___fladd *****************
  2732 ;; Defined at:
  2733 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  b               4    0[COMRAM] long 
  2736 ;;  a               4    4[COMRAM] long 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  grs             1   15[COMRAM] unsigned char 
  2739 ;;  bexp            1   14[COMRAM] unsigned char 
  2740 ;;  aexp            1   13[COMRAM] unsigned char 
  2741 ;;  signs           1   12[COMRAM] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  4    0[COMRAM] unsigned char 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2751 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;Total ram usage:       16 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_convert_rgb2hue
  2761 ;;		___flsub
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text7
  2766   001680                     __ptext7:
  2767                           	callstack 0
  2768   001680                     ___fladd:
  2769                           	callstack 27
  2770   001680  5004               	movf	(___fladd@b+3)^0,w,c
  2771   001682  0B80               	andlw	128
  2772   001684  6E0D               	movwf	___fladd@signs^0,c
  2773   001686  5004               	movf	(___fladd@b+3)^0,w,c
  2774   001688  2404               	addwf	(___fladd@b+3)^0,w,c
  2775   00168A  6E0F               	movwf	___fladd@bexp^0,c
  2776   00168C  AE03               	btfss	(___fladd@b+2)^0,7,c
  2777   00168E  EF4B  F00B         	goto	u4261
  2778   001692  EF4D  F00B         	goto	u4260
  2779   001696                     u4261:
  2780   001696  EF4E  F00B         	goto	l4750
  2781   00169A                     u4260:
  2782   00169A  800F               	bsf	___fladd@bexp^0,0,c
  2783   00169C                     l4750:
  2784   00169C  500F               	movf	___fladd@bexp^0,w,c
  2785   00169E  B4D8               	btfsc	status,2,c
  2786   0016A0  EF54  F00B         	goto	u4271
  2787   0016A4  EF56  F00B         	goto	u4270
  2788   0016A8                     u4271:
  2789   0016A8  EF6B  F00B         	goto	l4760
  2790   0016AC                     u4270:
  2791   0016AC  280F               	incf	___fladd@bexp^0,w,c
  2792   0016AE  A4D8               	btfss	status,2,c
  2793   0016B0  EF5C  F00B         	goto	u4281
  2794   0016B4  EF5E  F00B         	goto	u4280
  2795   0016B8                     u4281:
  2796   0016B8  EF66  F00B         	goto	l4756
  2797   0016BC                     u4280:
  2798   0016BC  0E00               	movlw	0
  2799   0016BE  6E01               	movwf	___fladd@b^0,c
  2800   0016C0  0E00               	movlw	0
  2801   0016C2  6E02               	movwf	(___fladd@b+1)^0,c
  2802   0016C4  0E00               	movlw	0
  2803   0016C6  6E03               	movwf	(___fladd@b+2)^0,c
  2804   0016C8  0E00               	movlw	0
  2805   0016CA  6E04               	movwf	(___fladd@b+3)^0,c
  2806   0016CC                     l4756:
  2807   0016CC  8E03               	bsf	(___fladd@b+2)^0,7,c
  2808   0016CE  0E00               	movlw	0
  2809   0016D0  6E04               	movwf	(___fladd@b+3)^0,c
  2810   0016D2  EF73  F00B         	goto	l4762
  2811   0016D6                     l4760:
  2812   0016D6  0E00               	movlw	0
  2813   0016D8  6E01               	movwf	___fladd@b^0,c
  2814   0016DA  0E00               	movlw	0
  2815   0016DC  6E02               	movwf	(___fladd@b+1)^0,c
  2816   0016DE  0E00               	movlw	0
  2817   0016E0  6E03               	movwf	(___fladd@b+2)^0,c
  2818   0016E2  0E00               	movlw	0
  2819   0016E4  6E04               	movwf	(___fladd@b+3)^0,c
  2820   0016E6                     l4762:
  2821   0016E6  5008               	movf	(___fladd@a+3)^0,w,c
  2822   0016E8  0B80               	andlw	128
  2823   0016EA  6E0E               	movwf	___fladd@aexp^0,c
  2824   0016EC  500D               	movf	___fladd@signs^0,w,c
  2825   0016EE  180E               	xorwf	___fladd@aexp^0,w,c
  2826   0016F0  B4D8               	btfsc	status,2,c
  2827   0016F2  EF7D  F00B         	goto	u4291
  2828   0016F6  EF7F  F00B         	goto	u4290
  2829   0016FA                     u4291:
  2830   0016FA  EF80  F00B         	goto	l4768
  2831   0016FE                     u4290:
  2832   0016FE  8C0D               	bsf	___fladd@signs^0,6,c
  2833   001700                     l4768:
  2834   001700  5008               	movf	(___fladd@a+3)^0,w,c
  2835   001702  2408               	addwf	(___fladd@a+3)^0,w,c
  2836   001704  6E0E               	movwf	___fladd@aexp^0,c
  2837   001706  AE07               	btfss	(___fladd@a+2)^0,7,c
  2838   001708  EF88  F00B         	goto	u4301
  2839   00170C  EF8A  F00B         	goto	u4300
  2840   001710                     u4301:
  2841   001710  EF8B  F00B         	goto	l4774
  2842   001714                     u4300:
  2843   001714  800E               	bsf	___fladd@aexp^0,0,c
  2844   001716                     l4774:
  2845   001716  500E               	movf	___fladd@aexp^0,w,c
  2846   001718  B4D8               	btfsc	status,2,c
  2847   00171A  EF91  F00B         	goto	u4311
  2848   00171E  EF93  F00B         	goto	u4310
  2849   001722                     u4311:
  2850   001722  EFA8  F00B         	goto	l4784
  2851   001726                     u4310:
  2852   001726  280E               	incf	___fladd@aexp^0,w,c
  2853   001728  A4D8               	btfss	status,2,c
  2854   00172A  EF99  F00B         	goto	u4321
  2855   00172E  EF9B  F00B         	goto	u4320
  2856   001732                     u4321:
  2857   001732  EFA3  F00B         	goto	l4780
  2858   001736                     u4320:
  2859   001736  0E00               	movlw	0
  2860   001738  6E05               	movwf	___fladd@a^0,c
  2861   00173A  0E00               	movlw	0
  2862   00173C  6E06               	movwf	(___fladd@a+1)^0,c
  2863   00173E  0E00               	movlw	0
  2864   001740  6E07               	movwf	(___fladd@a+2)^0,c
  2865   001742  0E00               	movlw	0
  2866   001744  6E08               	movwf	(___fladd@a+3)^0,c
  2867   001746                     l4780:
  2868   001746  8E07               	bsf	(___fladd@a+2)^0,7,c
  2869   001748  0E00               	movlw	0
  2870   00174A  6E08               	movwf	(___fladd@a+3)^0,c
  2871   00174C  EFB0  F00B         	goto	l4786
  2872   001750                     l4784:
  2873   001750  0E00               	movlw	0
  2874   001752  6E05               	movwf	___fladd@a^0,c
  2875   001754  0E00               	movlw	0
  2876   001756  6E06               	movwf	(___fladd@a+1)^0,c
  2877   001758  0E00               	movlw	0
  2878   00175A  6E07               	movwf	(___fladd@a+2)^0,c
  2879   00175C  0E00               	movlw	0
  2880   00175E  6E08               	movwf	(___fladd@a+3)^0,c
  2881   001760                     l4786:
  2882   001760  500F               	movf	___fladd@bexp^0,w,c
  2883   001762  5C0E               	subwf	___fladd@aexp^0,w,c
  2884   001764  B0D8               	btfsc	status,0,c
  2885   001766  EFB7  F00B         	goto	u4331
  2886   00176A  EFB9  F00B         	goto	u4330
  2887   00176E                     u4331:
  2888   00176E  EFE0  F00B         	goto	l4822
  2889   001772                     u4330:
  2890   001772  AC0D               	btfss	___fladd@signs^0,6,c
  2891   001774  EFBE  F00B         	goto	u4341
  2892   001778  EFC0  F00B         	goto	u4340
  2893   00177C                     u4341:
  2894   00177C  EFC2  F00B         	goto	l4792
  2895   001780                     u4340:
  2896   001780  0E80               	movlw	128
  2897   001782  1A0D               	xorwf	___fladd@signs^0,f,c
  2898   001784                     l4792:
  2899   001784  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2900   001788  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2901   00178C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2902   001790  C001  F010         	movff	___fladd@b,___fladd@grs
  2903   001794  C005  F001         	movff	___fladd@a,___fladd@b
  2904   001798  C010  F005         	movff	___fladd@grs,___fladd@a
  2905   00179C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2906   0017A0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2907   0017A4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2908   0017A8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2909   0017AC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2910   0017B0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2911   0017B4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2912   0017B8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2913   0017BC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2914   0017C0                     l4822:
  2915   0017C0  0E00               	movlw	0
  2916   0017C2  6E10               	movwf	___fladd@grs^0,c
  2917   0017C4  500F               	movf	___fladd@bexp^0,w,c
  2918   0017C6  C00E  F009         	movff	___fladd@aexp,??___fladd
  2919   0017CA  6A0A               	clrf	(??___fladd+1)^0,c
  2920   0017CC  5E09               	subwf	??___fladd^0,f,c
  2921   0017CE  0E00               	movlw	0
  2922   0017D0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  2923   0017D2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  2924   0017D4  EFF5  F00B         	goto	u4351
  2925   0017D8  500A               	movf	(??___fladd+1)^0,w,c
  2926   0017DA  E109               	bnz	u4350
  2927   0017DC  0E1A               	movlw	26
  2928   0017DE  5C09               	subwf	??___fladd^0,w,c
  2929   0017E0  A0D8               	btfss	status,0,c
  2930   0017E2  EFF5  F00B         	goto	u4351
  2931   0017E6  EFF7  F00B         	goto	u4350
  2932   0017EA                     u4351:
  2933   0017EA  EF2E  F00C         	goto	l1065
  2934   0017EE                     u4350:
  2935   0017EE  5001               	movf	___fladd@b^0,w,c
  2936   0017F0  1002               	iorwf	(___fladd@b+1)^0,w,c
  2937   0017F2  1003               	iorwf	(___fladd@b+2)^0,w,c
  2938   0017F4  1004               	iorwf	(___fladd@b+3)^0,w,c
  2939   0017F6  A4D8               	btfss	status,2,c
  2940   0017F8  EF00  F00C         	goto	u4361
  2941   0017FC  EF03  F00C         	goto	u4360
  2942   001800                     u4361:
  2943   001800  0E01               	movlw	1
  2944   001802  EF04  F00C         	goto	u4370
  2945   001806                     u4360:
  2946   001806  0E00               	movlw	0
  2947   001808                     u4370:
  2948   001808  6E10               	movwf	___fladd@grs^0,c
  2949   00180A  0E00               	movlw	0
  2950   00180C  6E01               	movwf	___fladd@b^0,c
  2951   00180E  0E00               	movlw	0
  2952   001810  6E02               	movwf	(___fladd@b+1)^0,c
  2953   001812  0E00               	movlw	0
  2954   001814  6E03               	movwf	(___fladd@b+2)^0,c
  2955   001816  0E00               	movlw	0
  2956   001818  6E04               	movwf	(___fladd@b+3)^0,c
  2957   00181A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2958   00181E  EF37  F00C         	goto	l1064
  2959   001822                     l1066:
  2960   001822  A010               	btfss	___fladd@grs^0,0,c
  2961   001824  EF16  F00C         	goto	u4381
  2962   001828  EF18  F00C         	goto	u4380
  2963   00182C                     u4381:
  2964   00182C  EF1E  F00C         	goto	l4834
  2965   001830                     u4380:
  2966   001830  90D8               	bcf	status,0,c
  2967   001832  3010               	rrcf	___fladd@grs^0,w,c
  2968   001834  0901               	iorlw	1
  2969   001836  6E10               	movwf	___fladd@grs^0,c
  2970   001838  EF20  F00C         	goto	l4836
  2971   00183C                     l4834:
  2972   00183C  90D8               	bcf	status,0,c
  2973   00183E  3210               	rrcf	___fladd@grs^0,f,c
  2974   001840                     l4836:
  2975   001840  A001               	btfss	___fladd@b^0,0,c
  2976   001842  EF25  F00C         	goto	u4391
  2977   001846  EF27  F00C         	goto	u4390
  2978   00184A                     u4391:
  2979   00184A  EF28  F00C         	goto	l4840
  2980   00184E                     u4390:
  2981   00184E  8E10               	bsf	___fladd@grs^0,7,c
  2982   001850                     l4840:
  2983   001850  3404               	rlcf	(___fladd@b+3)^0,w,c
  2984   001852  3204               	rrcf	(___fladd@b+3)^0,f,c
  2985   001854  3203               	rrcf	(___fladd@b+2)^0,f,c
  2986   001856  3202               	rrcf	(___fladd@b+1)^0,f,c
  2987   001858  3201               	rrcf	___fladd@b^0,f,c
  2988   00185A  2A0F               	incf	___fladd@bexp^0,f,c
  2989   00185C                     l1065:
  2990   00185C  500E               	movf	___fladd@aexp^0,w,c
  2991   00185E  5C0F               	subwf	___fladd@bexp^0,w,c
  2992   001860  A0D8               	btfss	status,0,c
  2993   001862  EF35  F00C         	goto	u4401
  2994   001866  EF37  F00C         	goto	u4400
  2995   00186A                     u4401:
  2996   00186A  EF11  F00C         	goto	l1066
  2997   00186E                     u4400:
  2998   00186E                     l1064:
  2999   00186E  BC0D               	btfsc	___fladd@signs^0,6,c
  3000   001870  EF3C  F00C         	goto	u4411
  3001   001874  EF3E  F00C         	goto	u4410
  3002   001878                     u4411:
  3003   001878  EF7E  F00C         	goto	l4868
  3004   00187C                     u4410:
  3005   00187C  500F               	movf	___fladd@bexp^0,w,c
  3006   00187E  A4D8               	btfss	status,2,c
  3007   001880  EF44  F00C         	goto	u4421
  3008   001884  EF46  F00C         	goto	u4420
  3009   001888                     u4421:
  3010   001888  EF50  F00C         	goto	l4850
  3011   00188C                     u4420:
  3012   00188C  0E00               	movlw	0
  3013   00188E  6E01               	movwf	?___fladd^0,c
  3014   001890  0E00               	movlw	0
  3015   001892  6E02               	movwf	(?___fladd+1)^0,c
  3016   001894  0E00               	movlw	0
  3017   001896  6E03               	movwf	(?___fladd+2)^0,c
  3018   001898  0E00               	movlw	0
  3019   00189A  6E04               	movwf	(?___fladd+3)^0,c
  3020   00189C  EF9F  F00D         	goto	l1073
  3021   0018A0                     l4850:
  3022   0018A0  5005               	movf	___fladd@a^0,w,c
  3023   0018A2  2601               	addwf	___fladd@b^0,f,c
  3024   0018A4  5006               	movf	(___fladd@a+1)^0,w,c
  3025   0018A6  2202               	addwfc	(___fladd@b+1)^0,f,c
  3026   0018A8  5007               	movf	(___fladd@a+2)^0,w,c
  3027   0018AA  2203               	addwfc	(___fladd@b+2)^0,f,c
  3028   0018AC  5008               	movf	(___fladd@a+3)^0,w,c
  3029   0018AE  2204               	addwfc	(___fladd@b+3)^0,f,c
  3030   0018B0  A004               	btfss	(___fladd@b+3)^0,0,c
  3031   0018B2  EF5D  F00C         	goto	u4431
  3032   0018B6  EF5F  F00C         	goto	u4430
  3033   0018BA                     u4431:
  3034   0018BA  EF0B  F00D         	goto	l4904
  3035   0018BE                     u4430:
  3036   0018BE  A010               	btfss	___fladd@grs^0,0,c
  3037   0018C0  EF64  F00C         	goto	u4441
  3038   0018C4  EF66  F00C         	goto	u4440
  3039   0018C8                     u4441:
  3040   0018C8  EF6C  F00C         	goto	l4858
  3041   0018CC                     u4440:
  3042   0018CC  90D8               	bcf	status,0,c
  3043   0018CE  3010               	rrcf	___fladd@grs^0,w,c
  3044   0018D0  0901               	iorlw	1
  3045   0018D2  6E10               	movwf	___fladd@grs^0,c
  3046   0018D4  EF6E  F00C         	goto	l4860
  3047   0018D8                     l4858:
  3048   0018D8  90D8               	bcf	status,0,c
  3049   0018DA  3210               	rrcf	___fladd@grs^0,f,c
  3050   0018DC                     l4860:
  3051   0018DC  A001               	btfss	___fladd@b^0,0,c
  3052   0018DE  EF73  F00C         	goto	u4451
  3053   0018E2  EF75  F00C         	goto	u4450
  3054   0018E6                     u4451:
  3055   0018E6  EF76  F00C         	goto	l4864
  3056   0018EA                     u4450:
  3057   0018EA  8E10               	bsf	___fladd@grs^0,7,c
  3058   0018EC                     l4864:
  3059   0018EC  3404               	rlcf	(___fladd@b+3)^0,w,c
  3060   0018EE  3204               	rrcf	(___fladd@b+3)^0,f,c
  3061   0018F0  3203               	rrcf	(___fladd@b+2)^0,f,c
  3062   0018F2  3202               	rrcf	(___fladd@b+1)^0,f,c
  3063   0018F4  3201               	rrcf	___fladd@b^0,f,c
  3064   0018F6  2A0F               	incf	___fladd@bexp^0,f,c
  3065   0018F8  EF0B  F00D         	goto	l4904
  3066   0018FC                     l4868:
  3067   0018FC  5005               	movf	___fladd@a^0,w,c
  3068   0018FE  5C01               	subwf	___fladd@b^0,w,c
  3069   001900  5006               	movf	(___fladd@a+1)^0,w,c
  3070   001902  5802               	subwfb	(___fladd@b+1)^0,w,c
  3071   001904  5007               	movf	(___fladd@a+2)^0,w,c
  3072   001906  5803               	subwfb	(___fladd@b+2)^0,w,c
  3073   001908  5004               	movf	(___fladd@b+3)^0,w,c
  3074   00190A  0A80               	xorlw	128
  3075   00190C  6E09               	movwf	??___fladd^0,c
  3076   00190E  5008               	movf	(___fladd@a+3)^0,w,c
  3077   001910  0A80               	xorlw	128
  3078   001912  5809               	subwfb	??___fladd^0,w,c
  3079   001914  B0D8               	btfsc	status,0,c
  3080   001916  EF8F  F00C         	goto	u4461
  3081   00191A  EF91  F00C         	goto	u4460
  3082   00191E                     u4461:
  3083   00191E  EFBC  F00C         	goto	l4878
  3084   001922                     u4460:
  3085   001922  5001               	movf	___fladd@b^0,w,c
  3086   001924  5C05               	subwf	___fladd@a^0,w,c
  3087   001926  6E09               	movwf	??___fladd^0,c
  3088   001928  5002               	movf	(___fladd@b+1)^0,w,c
  3089   00192A  5806               	subwfb	(___fladd@a+1)^0,w,c
  3090   00192C  6E0A               	movwf	(??___fladd+1)^0,c
  3091   00192E  5003               	movf	(___fladd@b+2)^0,w,c
  3092   001930  5807               	subwfb	(___fladd@a+2)^0,w,c
  3093   001932  6E0B               	movwf	(??___fladd+2)^0,c
  3094   001934  5004               	movf	(___fladd@b+3)^0,w,c
  3095   001936  5808               	subwfb	(___fladd@a+3)^0,w,c
  3096   001938  6E0C               	movwf	(??___fladd+3)^0,c
  3097   00193A  0EFF               	movlw	255
  3098   00193C  2409               	addwf	??___fladd^0,w,c
  3099   00193E  6E01               	movwf	___fladd@b^0,c
  3100   001940  0EFF               	movlw	255
  3101   001942  200A               	addwfc	(??___fladd+1)^0,w,c
  3102   001944  6E02               	movwf	(___fladd@b+1)^0,c
  3103   001946  0EFF               	movlw	255
  3104   001948  200B               	addwfc	(??___fladd+2)^0,w,c
  3105   00194A  6E03               	movwf	(___fladd@b+2)^0,c
  3106   00194C  0EFF               	movlw	255
  3107   00194E  200C               	addwfc	(??___fladd+3)^0,w,c
  3108   001950  6E04               	movwf	(___fladd@b+3)^0,c
  3109   001952  0E80               	movlw	128
  3110   001954  1A0D               	xorwf	___fladd@signs^0,f,c
  3111   001956  6C10               	negf	___fladd@grs^0,c
  3112   001958  5010               	movf	___fladd@grs^0,w,c
  3113   00195A  A4D8               	btfss	status,2,c
  3114   00195C  EFB2  F00C         	goto	u4471
  3115   001960  EFB4  F00C         	goto	u4470
  3116   001964                     u4471:
  3117   001964  EFC4  F00C         	goto	l1081
  3118   001968                     u4470:
  3119   001968  0E01               	movlw	1
  3120   00196A  2601               	addwf	___fladd@b^0,f,c
  3121   00196C  0E00               	movlw	0
  3122   00196E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3123   001970  2203               	addwfc	(___fladd@b+2)^0,f,c
  3124   001972  2204               	addwfc	(___fladd@b+3)^0,f,c
  3125   001974  EFC4  F00C         	goto	l1081
  3126   001978                     l4878:
  3127   001978  5005               	movf	___fladd@a^0,w,c
  3128   00197A  5E01               	subwf	___fladd@b^0,f,c
  3129   00197C  5006               	movf	(___fladd@a+1)^0,w,c
  3130   00197E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3131   001980  5007               	movf	(___fladd@a+2)^0,w,c
  3132   001982  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3133   001984  5008               	movf	(___fladd@a+3)^0,w,c
  3134   001986  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3135   001988                     l1081:
  3136   001988  5001               	movf	___fladd@b^0,w,c
  3137   00198A  1002               	iorwf	(___fladd@b+1)^0,w,c
  3138   00198C  1003               	iorwf	(___fladd@b+2)^0,w,c
  3139   00198E  1004               	iorwf	(___fladd@b+3)^0,w,c
  3140   001990  A4D8               	btfss	status,2,c
  3141   001992  EFCD  F00C         	goto	u4481
  3142   001996  EFCF  F00C         	goto	u4480
  3143   00199A                     u4481:
  3144   00199A  EF04  F00D         	goto	l4902
  3145   00199E                     u4480:
  3146   00199E  5010               	movf	___fladd@grs^0,w,c
  3147   0019A0  A4D8               	btfss	status,2,c
  3148   0019A2  EFD5  F00C         	goto	u4491
  3149   0019A6  EFD7  F00C         	goto	u4490
  3150   0019AA                     u4491:
  3151   0019AA  EF04  F00D         	goto	l4902
  3152   0019AE                     u4490:
  3153   0019AE  0E00               	movlw	0
  3154   0019B0  6E01               	movwf	?___fladd^0,c
  3155   0019B2  0E00               	movlw	0
  3156   0019B4  6E02               	movwf	(?___fladd+1)^0,c
  3157   0019B6  0E00               	movlw	0
  3158   0019B8  6E03               	movwf	(?___fladd+2)^0,c
  3159   0019BA  0E00               	movlw	0
  3160   0019BC  6E04               	movwf	(?___fladd+3)^0,c
  3161   0019BE  EF9F  F00D         	goto	l1073
  3162   0019C2                     l4886:
  3163   0019C2  90D8               	bcf	status,0,c
  3164   0019C4  3601               	rlcf	___fladd@b^0,f,c
  3165   0019C6  3602               	rlcf	(___fladd@b+1)^0,f,c
  3166   0019C8  3603               	rlcf	(___fladd@b+2)^0,f,c
  3167   0019CA  3604               	rlcf	(___fladd@b+3)^0,f,c
  3168   0019CC  AE10               	btfss	___fladd@grs^0,7,c
  3169   0019CE  EFEB  F00C         	goto	u4501
  3170   0019D2  EFED  F00C         	goto	u4500
  3171   0019D6                     u4501:
  3172   0019D6  EFEE  F00C         	goto	l4892
  3173   0019DA                     u4500:
  3174   0019DA  8001               	bsf	___fladd@b^0,0,c
  3175   0019DC                     l4892:
  3176   0019DC  A010               	btfss	___fladd@grs^0,0,c
  3177   0019DE  EFF3  F00C         	goto	u4511
  3178   0019E2  EFF5  F00C         	goto	u4510
  3179   0019E6                     u4511:
  3180   0019E6  EFF9  F00C         	goto	l4896
  3181   0019EA                     u4510:
  3182   0019EA  80D8               	bsf	status,0,c
  3183   0019EC  3610               	rlcf	___fladd@grs^0,f,c
  3184   0019EE  EFFB  F00C         	goto	l4898
  3185   0019F2                     l4896:
  3186   0019F2  90D8               	bcf	status,0,c
  3187   0019F4  3610               	rlcf	___fladd@grs^0,f,c
  3188   0019F6                     l4898:
  3189   0019F6  500F               	movf	___fladd@bexp^0,w,c
  3190   0019F8  B4D8               	btfsc	status,2,c
  3191   0019FA  EF01  F00D         	goto	u4521
  3192   0019FE  EF03  F00D         	goto	u4520
  3193   001A02                     u4521:
  3194   001A02  EF04  F00D         	goto	l4902
  3195   001A06                     u4520:
  3196   001A06  060F               	decf	___fladd@bexp^0,f,c
  3197   001A08                     l4902:
  3198   001A08  AE03               	btfss	(___fladd@b+2)^0,7,c
  3199   001A0A  EF09  F00D         	goto	u4531
  3200   001A0E  EF0B  F00D         	goto	u4530
  3201   001A12                     u4531:
  3202   001A12  EFE1  F00C         	goto	l4886
  3203   001A16                     u4530:
  3204   001A16                     l4904:
  3205   001A16  0E00               	movlw	0
  3206   001A18  6E0E               	movwf	___fladd@aexp^0,c
  3207   001A1A  AE10               	btfss	___fladd@grs^0,7,c
  3208   001A1C  EF12  F00D         	goto	u4541
  3209   001A20  EF14  F00D         	goto	u4540
  3210   001A24                     u4541:
  3211   001A24  EF2C  F00D         	goto	l1090
  3212   001A28                     u4540:
  3213   001A28  C010  F009         	movff	___fladd@grs,??___fladd
  3214   001A2C  0E7F               	movlw	127
  3215   001A2E  1609               	andwf	??___fladd^0,f,c
  3216   001A30  B4D8               	btfsc	status,2,c
  3217   001A32  EF1D  F00D         	goto	u4551
  3218   001A36  EF1F  F00D         	goto	u4550
  3219   001A3A                     u4551:
  3220   001A3A  EF23  F00D         	goto	l1091
  3221   001A3E                     u4550:
  3222   001A3E                     l4910:
  3223   001A3E  0E01               	movlw	1
  3224   001A40  6E0E               	movwf	___fladd@aexp^0,c
  3225   001A42  EF2C  F00D         	goto	l1090
  3226   001A46                     l1091:
  3227   001A46  A001               	btfss	___fladd@b^0,0,c
  3228   001A48  EF28  F00D         	goto	u4561
  3229   001A4C  EF2A  F00D         	goto	u4560
  3230   001A50                     u4561:
  3231   001A50  EF2C  F00D         	goto	l1090
  3232   001A54                     u4560:
  3233   001A54  EF1F  F00D         	goto	l4910
  3234   001A58                     l1090:
  3235   001A58  500E               	movf	___fladd@aexp^0,w,c
  3236   001A5A  B4D8               	btfsc	status,2,c
  3237   001A5C  EF32  F00D         	goto	u4571
  3238   001A60  EF34  F00D         	goto	u4570
  3239   001A64                     u4571:
  3240   001A64  EF5F  F00D         	goto	l4922
  3241   001A68                     u4570:
  3242   001A68  0E01               	movlw	1
  3243   001A6A  2601               	addwf	___fladd@b^0,f,c
  3244   001A6C  0E00               	movlw	0
  3245   001A6E  2202               	addwfc	(___fladd@b+1)^0,f,c
  3246   001A70  2203               	addwfc	(___fladd@b+2)^0,f,c
  3247   001A72  2204               	addwfc	(___fladd@b+3)^0,f,c
  3248   001A74  A004               	btfss	(___fladd@b+3)^0,0,c
  3249   001A76  EF3F  F00D         	goto	u4581
  3250   001A7A  EF41  F00D         	goto	u4580
  3251   001A7E                     u4581:
  3252   001A7E  EF5F  F00D         	goto	l4922
  3253   001A82                     u4580:
  3254   001A82  C001  F009         	movff	___fladd@b,??___fladd
  3255   001A86  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3256   001A8A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3257   001A8E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3258   001A92  340C               	rlcf	(??___fladd+3)^0,w,c
  3259   001A94  320C               	rrcf	(??___fladd+3)^0,f,c
  3260   001A96  320B               	rrcf	(??___fladd+2)^0,f,c
  3261   001A98  320A               	rrcf	(??___fladd+1)^0,f,c
  3262   001A9A  3209               	rrcf	??___fladd^0,f,c
  3263   001A9C  C009  F001         	movff	??___fladd,___fladd@b
  3264   001AA0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3265   001AA4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3266   001AA8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3267   001AAC  280F               	incf	___fladd@bexp^0,w,c
  3268   001AAE  B4D8               	btfsc	status,2,c
  3269   001AB0  EF5C  F00D         	goto	u4591
  3270   001AB4  EF5E  F00D         	goto	u4590
  3271   001AB8                     u4591:
  3272   001AB8  EF5F  F00D         	goto	l4922
  3273   001ABC                     u4590:
  3274   001ABC  2A0F               	incf	___fladd@bexp^0,f,c
  3275   001ABE                     l4922:
  3276   001ABE  280F               	incf	___fladd@bexp^0,w,c
  3277   001AC0  B4D8               	btfsc	status,2,c
  3278   001AC2  EF65  F00D         	goto	u4601
  3279   001AC6  EF67  F00D         	goto	u4600
  3280   001ACA                     u4601:
  3281   001ACA  EF6F  F00D         	goto	l4926
  3282   001ACE                     u4600:
  3283   001ACE  500F               	movf	___fladd@bexp^0,w,c
  3284   001AD0  A4D8               	btfss	status,2,c
  3285   001AD2  EF6D  F00D         	goto	u4611
  3286   001AD6  EF6F  F00D         	goto	u4610
  3287   001ADA                     u4611:
  3288   001ADA  EF81  F00D         	goto	l4930
  3289   001ADE                     u4610:
  3290   001ADE                     l4926:
  3291   001ADE  0E00               	movlw	0
  3292   001AE0  6E01               	movwf	___fladd@b^0,c
  3293   001AE2  0E00               	movlw	0
  3294   001AE4  6E02               	movwf	(___fladd@b+1)^0,c
  3295   001AE6  0E00               	movlw	0
  3296   001AE8  6E03               	movwf	(___fladd@b+2)^0,c
  3297   001AEA  0E00               	movlw	0
  3298   001AEC  6E04               	movwf	(___fladd@b+3)^0,c
  3299   001AEE  500F               	movf	___fladd@bexp^0,w,c
  3300   001AF0  A4D8               	btfss	status,2,c
  3301   001AF2  EF7D  F00D         	goto	u4621
  3302   001AF6  EF7F  F00D         	goto	u4620
  3303   001AFA                     u4621:
  3304   001AFA  EF81  F00D         	goto	l4930
  3305   001AFE                     u4620:
  3306   001AFE  0E00               	movlw	0
  3307   001B00  6E0D               	movwf	___fladd@signs^0,c
  3308   001B02                     l4930:
  3309   001B02  A00F               	btfss	___fladd@bexp^0,0,c
  3310   001B04  EF86  F00D         	goto	u4631
  3311   001B08  EF88  F00D         	goto	u4630
  3312   001B0C                     u4631:
  3313   001B0C  EF8B  F00D         	goto	l4934
  3314   001B10                     u4630:
  3315   001B10  8E03               	bsf	(___fladd@b+2)^0,7,c
  3316   001B12  EF8C  F00D         	goto	l4936
  3317   001B16                     l4934:
  3318   001B16  9E03               	bcf	(___fladd@b+2)^0,7,c
  3319   001B18                     l4936:
  3320   001B18  90D8               	bcf	status,0,c
  3321   001B1A  300F               	rrcf	___fladd@bexp^0,w,c
  3322   001B1C  6E04               	movwf	(___fladd@b+3)^0,c
  3323   001B1E  AE0D               	btfss	___fladd@signs^0,7,c
  3324   001B20  EF94  F00D         	goto	u4641
  3325   001B24  EF96  F00D         	goto	u4640
  3326   001B28                     u4641:
  3327   001B28  EF97  F00D         	goto	l4942
  3328   001B2C                     u4640:
  3329   001B2C  8E04               	bsf	(___fladd@b+3)^0,7,c
  3330   001B2E                     l4942:
  3331   001B2E  C001  F001         	movff	___fladd@b,?___fladd
  3332   001B32  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3333   001B36  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3334   001B3A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3335   001B3E                     l1073:
  3336   001B3E  0012               	return		;funcret
  3337   001B40                     __end_of___fladd:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function ___flmul *****************
  3341 ;; Defined at:
  3342 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  b               4    0[COMRAM] unsigned char 
  3345 ;;  a               4    4[COMRAM] unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  prod            4   19[COMRAM] struct .
  3348 ;;  grs             4   14[COMRAM] unsigned long 
  3349 ;;  temp            2   23[COMRAM] struct .
  3350 ;;  bexp            1   18[COMRAM] unsigned char 
  3351 ;;  aexp            1   13[COMRAM] unsigned char 
  3352 ;;  sign            1   12[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  4    0[COMRAM] unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, prodl, prodh
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3362 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;Total ram usage:       25 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_convert_rgb2hue
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text8
  3376   001B40                     __ptext8:
  3377                           	callstack 0
  3378   001B40                     ___flmul:
  3379                           	callstack 28
  3380   001B40  5004               	movf	(___flmul@b+3)^0,w,c
  3381   001B42  0B80               	andlw	128
  3382   001B44  6E0D               	movwf	___flmul@sign^0,c
  3383   001B46  5004               	movf	(___flmul@b+3)^0,w,c
  3384   001B48  2404               	addwf	(___flmul@b+3)^0,w,c
  3385   001B4A  6E13               	movwf	___flmul@bexp^0,c
  3386   001B4C  AE03               	btfss	(___flmul@b+2)^0,7,c
  3387   001B4E  EFAB  F00D         	goto	u4941
  3388   001B52  EFAD  F00D         	goto	u4940
  3389   001B56                     u4941:
  3390   001B56  EFAE  F00D         	goto	l5168
  3391   001B5A                     u4940:
  3392   001B5A  8013               	bsf	___flmul@bexp^0,0,c
  3393   001B5C                     l5168:
  3394   001B5C  5013               	movf	___flmul@bexp^0,w,c
  3395   001B5E  B4D8               	btfsc	status,2,c
  3396   001B60  EFB4  F00D         	goto	u4951
  3397   001B64  EFB6  F00D         	goto	u4950
  3398   001B68                     u4951:
  3399   001B68  EFC9  F00D         	goto	l5176
  3400   001B6C                     u4950:
  3401   001B6C  2813               	incf	___flmul@bexp^0,w,c
  3402   001B6E  A4D8               	btfss	status,2,c
  3403   001B70  EFBC  F00D         	goto	u4961
  3404   001B74  EFBE  F00D         	goto	u4960
  3405   001B78                     u4961:
  3406   001B78  EFC6  F00D         	goto	l5174
  3407   001B7C                     u4960:
  3408   001B7C  0E00               	movlw	0
  3409   001B7E  6E01               	movwf	___flmul@b^0,c
  3410   001B80  0E00               	movlw	0
  3411   001B82  6E02               	movwf	(___flmul@b+1)^0,c
  3412   001B84  0E00               	movlw	0
  3413   001B86  6E03               	movwf	(___flmul@b+2)^0,c
  3414   001B88  0E00               	movlw	0
  3415   001B8A  6E04               	movwf	(___flmul@b+3)^0,c
  3416   001B8C                     l5174:
  3417   001B8C  8E03               	bsf	(___flmul@b+2)^0,7,c
  3418   001B8E  EFD1  F00D         	goto	l5178
  3419   001B92                     l5176:
  3420   001B92  0E00               	movlw	0
  3421   001B94  6E01               	movwf	___flmul@b^0,c
  3422   001B96  0E00               	movlw	0
  3423   001B98  6E02               	movwf	(___flmul@b+1)^0,c
  3424   001B9A  0E00               	movlw	0
  3425   001B9C  6E03               	movwf	(___flmul@b+2)^0,c
  3426   001B9E  0E00               	movlw	0
  3427   001BA0  6E04               	movwf	(___flmul@b+3)^0,c
  3428   001BA2                     l5178:
  3429   001BA2  5008               	movf	(___flmul@a+3)^0,w,c
  3430   001BA4  0B80               	andlw	128
  3431   001BA6  1A0D               	xorwf	___flmul@sign^0,f,c
  3432   001BA8  5008               	movf	(___flmul@a+3)^0,w,c
  3433   001BAA  2408               	addwf	(___flmul@a+3)^0,w,c
  3434   001BAC  6E0E               	movwf	___flmul@aexp^0,c
  3435   001BAE  AE07               	btfss	(___flmul@a+2)^0,7,c
  3436   001BB0  EFDC  F00D         	goto	u4971
  3437   001BB4  EFDE  F00D         	goto	u4970
  3438   001BB8                     u4971:
  3439   001BB8  EFDF  F00D         	goto	l5186
  3440   001BBC                     u4970:
  3441   001BBC  800E               	bsf	___flmul@aexp^0,0,c
  3442   001BBE                     l5186:
  3443   001BBE  500E               	movf	___flmul@aexp^0,w,c
  3444   001BC0  B4D8               	btfsc	status,2,c
  3445   001BC2  EFE5  F00D         	goto	u4981
  3446   001BC6  EFE7  F00D         	goto	u4980
  3447   001BCA                     u4981:
  3448   001BCA  EFFA  F00D         	goto	l5194
  3449   001BCE                     u4980:
  3450   001BCE  280E               	incf	___flmul@aexp^0,w,c
  3451   001BD0  A4D8               	btfss	status,2,c
  3452   001BD2  EFED  F00D         	goto	u4991
  3453   001BD6  EFEF  F00D         	goto	u4990
  3454   001BDA                     u4991:
  3455   001BDA  EFF7  F00D         	goto	l5192
  3456   001BDE                     u4990:
  3457   001BDE  0E00               	movlw	0
  3458   001BE0  6E05               	movwf	___flmul@a^0,c
  3459   001BE2  0E00               	movlw	0
  3460   001BE4  6E06               	movwf	(___flmul@a+1)^0,c
  3461   001BE6  0E00               	movlw	0
  3462   001BE8  6E07               	movwf	(___flmul@a+2)^0,c
  3463   001BEA  0E00               	movlw	0
  3464   001BEC  6E08               	movwf	(___flmul@a+3)^0,c
  3465   001BEE                     l5192:
  3466   001BEE  8E07               	bsf	(___flmul@a+2)^0,7,c
  3467   001BF0  EF02  F00E         	goto	l1150
  3468   001BF4                     l5194:
  3469   001BF4  0E00               	movlw	0
  3470   001BF6  6E05               	movwf	___flmul@a^0,c
  3471   001BF8  0E00               	movlw	0
  3472   001BFA  6E06               	movwf	(___flmul@a+1)^0,c
  3473   001BFC  0E00               	movlw	0
  3474   001BFE  6E07               	movwf	(___flmul@a+2)^0,c
  3475   001C00  0E00               	movlw	0
  3476   001C02  6E08               	movwf	(___flmul@a+3)^0,c
  3477   001C04                     l1150:
  3478   001C04  500E               	movf	___flmul@aexp^0,w,c
  3479   001C06  B4D8               	btfsc	status,2,c
  3480   001C08  EF08  F00E         	goto	u5001
  3481   001C0C  EF0A  F00E         	goto	u5000
  3482   001C10                     u5001:
  3483   001C10  EF12  F00E         	goto	l5198
  3484   001C14                     u5000:
  3485   001C14  5013               	movf	___flmul@bexp^0,w,c
  3486   001C16  A4D8               	btfss	status,2,c
  3487   001C18  EF10  F00E         	goto	u5011
  3488   001C1C  EF12  F00E         	goto	u5010
  3489   001C20                     u5011:
  3490   001C20  EF1C  F00E         	goto	l5202
  3491   001C24                     u5010:
  3492   001C24                     l5198:
  3493   001C24  0E00               	movlw	0
  3494   001C26  6E01               	movwf	?___flmul^0,c
  3495   001C28  0E00               	movlw	0
  3496   001C2A  6E02               	movwf	(?___flmul+1)^0,c
  3497   001C2C  0E00               	movlw	0
  3498   001C2E  6E03               	movwf	(?___flmul+2)^0,c
  3499   001C30  0E00               	movlw	0
  3500   001C32  6E04               	movwf	(?___flmul+3)^0,c
  3501   001C34  EFB4  F00F         	goto	l1154
  3502   001C38                     l5202:
  3503   001C38  5007               	movf	(___flmul@a+2)^0,w,c
  3504   001C3A  0201               	mulwf	___flmul@b^0,c
  3505   001C3C  CFF3 F018          	movff	prodl,___flmul@temp
  3506   001C40  CFF4 F019          	movff	prodh,___flmul@temp+1
  3507   001C44  5018               	movf	___flmul@temp^0,w,c
  3508   001C46  6E0F               	movwf	___flmul@grs^0,c
  3509   001C48  6A10               	clrf	(___flmul@grs+1)^0,c
  3510   001C4A  6A11               	clrf	(___flmul@grs+2)^0,c
  3511   001C4C  6A12               	clrf	(___flmul@grs+3)^0,c
  3512   001C4E  5019               	movf	(___flmul@temp+1)^0,w,c
  3513   001C50  6E14               	movwf	___flmul@prod^0,c
  3514   001C52  6A15               	clrf	(___flmul@prod+1)^0,c
  3515   001C54  6A16               	clrf	(___flmul@prod+2)^0,c
  3516   001C56  6A17               	clrf	(___flmul@prod+3)^0,c
  3517   001C58  5006               	movf	(___flmul@a+1)^0,w,c
  3518   001C5A  0202               	mulwf	(___flmul@b+1)^0,c
  3519   001C5C  CFF3 F018          	movff	prodl,___flmul@temp
  3520   001C60  CFF4 F019          	movff	prodh,___flmul@temp+1
  3521   001C64  5018               	movf	___flmul@temp^0,w,c
  3522   001C66  260F               	addwf	___flmul@grs^0,f,c
  3523   001C68  0E00               	movlw	0
  3524   001C6A  2210               	addwfc	(___flmul@grs+1)^0,f,c
  3525   001C6C  2211               	addwfc	(___flmul@grs+2)^0,f,c
  3526   001C6E  2212               	addwfc	(___flmul@grs+3)^0,f,c
  3527   001C70  5019               	movf	(___flmul@temp+1)^0,w,c
  3528   001C72  2614               	addwf	___flmul@prod^0,f,c
  3529   001C74  0E00               	movlw	0
  3530   001C76  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3531   001C78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3532   001C7A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3533   001C7C  5005               	movf	___flmul@a^0,w,c
  3534   001C7E  0203               	mulwf	(___flmul@b+2)^0,c
  3535   001C80  CFF3 F018          	movff	prodl,___flmul@temp
  3536   001C84  CFF4 F019          	movff	prodh,___flmul@temp+1
  3537   001C88  5018               	movf	___flmul@temp^0,w,c
  3538   001C8A  260F               	addwf	___flmul@grs^0,f,c
  3539   001C8C  0E00               	movlw	0
  3540   001C8E  2210               	addwfc	(___flmul@grs+1)^0,f,c
  3541   001C90  2211               	addwfc	(___flmul@grs+2)^0,f,c
  3542   001C92  2212               	addwfc	(___flmul@grs+3)^0,f,c
  3543   001C94  5019               	movf	(___flmul@temp+1)^0,w,c
  3544   001C96  2614               	addwf	___flmul@prod^0,f,c
  3545   001C98  0E00               	movlw	0
  3546   001C9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3547   001C9C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3548   001C9E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3549   001CA0  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  3550   001CA4  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  3551   001CA8  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  3552   001CAC  6A0F               	clrf	___flmul@grs^0,c
  3553   001CAE  5005               	movf	___flmul@a^0,w,c
  3554   001CB0  0202               	mulwf	(___flmul@b+1)^0,c
  3555   001CB2  CFF3 F018          	movff	prodl,___flmul@temp
  3556   001CB6  CFF4 F019          	movff	prodh,___flmul@temp+1
  3557   001CBA  5018               	movf	___flmul@temp^0,w,c
  3558   001CBC  260F               	addwf	___flmul@grs^0,f,c
  3559   001CBE  5019               	movf	(___flmul@temp+1)^0,w,c
  3560   001CC0  2210               	addwfc	(___flmul@grs+1)^0,f,c
  3561   001CC2  0E00               	movlw	0
  3562   001CC4  2211               	addwfc	(___flmul@grs+2)^0,f,c
  3563   001CC6  0E00               	movlw	0
  3564   001CC8  2212               	addwfc	(___flmul@grs+3)^0,f,c
  3565   001CCA  5006               	movf	(___flmul@a+1)^0,w,c
  3566   001CCC  0201               	mulwf	___flmul@b^0,c
  3567   001CCE  CFF3 F018          	movff	prodl,___flmul@temp
  3568   001CD2  CFF4 F019          	movff	prodh,___flmul@temp+1
  3569   001CD6  5018               	movf	___flmul@temp^0,w,c
  3570   001CD8  260F               	addwf	___flmul@grs^0,f,c
  3571   001CDA  5019               	movf	(___flmul@temp+1)^0,w,c
  3572   001CDC  2210               	addwfc	(___flmul@grs+1)^0,f,c
  3573   001CDE  0E00               	movlw	0
  3574   001CE0  2211               	addwfc	(___flmul@grs+2)^0,f,c
  3575   001CE2  0E00               	movlw	0
  3576   001CE4  2212               	addwfc	(___flmul@grs+3)^0,f,c
  3577   001CE6  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  3578   001CEA  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  3579   001CEE  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  3580   001CF2  6A0F               	clrf	___flmul@grs^0,c
  3581   001CF4  5005               	movf	___flmul@a^0,w,c
  3582   001CF6  0201               	mulwf	___flmul@b^0,c
  3583   001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  3584   001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3585   001D00  5018               	movf	___flmul@temp^0,w,c
  3586   001D02  260F               	addwf	___flmul@grs^0,f,c
  3587   001D04  5019               	movf	(___flmul@temp+1)^0,w,c
  3588   001D06  2210               	addwfc	(___flmul@grs+1)^0,f,c
  3589   001D08  0E00               	movlw	0
  3590   001D0A  2211               	addwfc	(___flmul@grs+2)^0,f,c
  3591   001D0C  0E00               	movlw	0
  3592   001D0E  2212               	addwfc	(___flmul@grs+3)^0,f,c
  3593   001D10  5007               	movf	(___flmul@a+2)^0,w,c
  3594   001D12  0202               	mulwf	(___flmul@b+1)^0,c
  3595   001D14  CFF3 F018          	movff	prodl,___flmul@temp
  3596   001D18  CFF4 F019          	movff	prodh,___flmul@temp+1
  3597   001D1C  5018               	movf	___flmul@temp^0,w,c
  3598   001D1E  2614               	addwf	___flmul@prod^0,f,c
  3599   001D20  5019               	movf	(___flmul@temp+1)^0,w,c
  3600   001D22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3601   001D24  0E00               	movlw	0
  3602   001D26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3603   001D28  0E00               	movlw	0
  3604   001D2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3605   001D2C  5006               	movf	(___flmul@a+1)^0,w,c
  3606   001D2E  0203               	mulwf	(___flmul@b+2)^0,c
  3607   001D30  CFF3 F018          	movff	prodl,___flmul@temp
  3608   001D34  CFF4 F019          	movff	prodh,___flmul@temp+1
  3609   001D38  5018               	movf	___flmul@temp^0,w,c
  3610   001D3A  2614               	addwf	___flmul@prod^0,f,c
  3611   001D3C  5019               	movf	(___flmul@temp+1)^0,w,c
  3612   001D3E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3613   001D40  0E00               	movlw	0
  3614   001D42  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3615   001D44  0E00               	movlw	0
  3616   001D46  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3617   001D48  5007               	movf	(___flmul@a+2)^0,w,c
  3618   001D4A  0203               	mulwf	(___flmul@b+2)^0,c
  3619   001D4C  CFF3 F018          	movff	prodl,___flmul@temp
  3620   001D50  CFF4 F019          	movff	prodh,___flmul@temp+1
  3621   001D54  5018               	movf	___flmul@temp^0,w,c
  3622   001D56  6E09               	movwf	??___flmul^0,c
  3623   001D58  5019               	movf	(___flmul@temp+1)^0,w,c
  3624   001D5A  6E0A               	movwf	(??___flmul+1)^0,c
  3625   001D5C  6A0B               	clrf	(??___flmul+2)^0,c
  3626   001D5E  6A0C               	clrf	(??___flmul+3)^0,c
  3627   001D60  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3628   001D64  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3629   001D68  C009  F00A         	movff	??___flmul,??___flmul+1
  3630   001D6C  6A09               	clrf	??___flmul^0,c
  3631   001D6E  5009               	movf	??___flmul^0,w,c
  3632   001D70  2614               	addwf	___flmul@prod^0,f,c
  3633   001D72  500A               	movf	(??___flmul+1)^0,w,c
  3634   001D74  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3635   001D76  500B               	movf	(??___flmul+2)^0,w,c
  3636   001D78  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3637   001D7A  500C               	movf	(??___flmul+3)^0,w,c
  3638   001D7C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3639   001D7E  C00F  F009         	movff	___flmul@grs,??___flmul
  3640   001D82  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
  3641   001D86  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
  3642   001D8A  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
  3643   001D8E  0E19               	movlw	25
  3644   001D90  EFCF  F00E         	goto	u5020
  3645   001D94                     u5025:
  3646   001D94  90D8               	bcf	status,0,c
  3647   001D96  320C               	rrcf	(??___flmul+3)^0,f,c
  3648   001D98  320B               	rrcf	(??___flmul+2)^0,f,c
  3649   001D9A  320A               	rrcf	(??___flmul+1)^0,f,c
  3650   001D9C  3209               	rrcf	??___flmul^0,f,c
  3651   001D9E                     u5020:
  3652   001D9E  2EE8               	decfsz	wreg,f,c
  3653   001DA0  EFCA  F00E         	goto	u5025
  3654   001DA4  5009               	movf	??___flmul^0,w,c
  3655   001DA6  2614               	addwf	___flmul@prod^0,f,c
  3656   001DA8  500A               	movf	(??___flmul+1)^0,w,c
  3657   001DAA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3658   001DAC  500B               	movf	(??___flmul+2)^0,w,c
  3659   001DAE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3660   001DB0  500C               	movf	(??___flmul+3)^0,w,c
  3661   001DB2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3662   001DB4  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  3663   001DB8  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  3664   001DBC  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  3665   001DC0  6A0F               	clrf	___flmul@grs^0,c
  3666   001DC2  500E               	movf	___flmul@aexp^0,w,c
  3667   001DC4  C013  F009         	movff	___flmul@bexp,??___flmul
  3668   001DC8  6A0A               	clrf	(??___flmul+1)^0,c
  3669   001DCA  2609               	addwf	??___flmul^0,f,c
  3670   001DCC  0E00               	movlw	0
  3671   001DCE  220A               	addwfc	(??___flmul+1)^0,f,c
  3672   001DD0  0E82               	movlw	130
  3673   001DD2  2409               	addwf	??___flmul^0,w,c
  3674   001DD4  6E18               	movwf	___flmul@temp^0,c
  3675   001DD6  0EFF               	movlw	255
  3676   001DD8  200A               	addwfc	(??___flmul+1)^0,w,c
  3677   001DDA  6E19               	movwf	(___flmul@temp+1)^0,c
  3678   001DDC  EF05  F00F         	goto	l5250
  3679   001DE0                     l5244:
  3680   001DE0  90D8               	bcf	status,0,c
  3681   001DE2  3614               	rlcf	___flmul@prod^0,f,c
  3682   001DE4  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3683   001DE6  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3684   001DE8  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3685   001DEA  AE12               	btfss	(___flmul@grs+3)^0,7,c
  3686   001DEC  EFFA  F00E         	goto	u5031
  3687   001DF0  EFFC  F00E         	goto	u5030
  3688   001DF4                     u5031:
  3689   001DF4  EFFD  F00E         	goto	l1157
  3690   001DF8                     u5030:
  3691   001DF8  8014               	bsf	___flmul@prod^0,0,c
  3692   001DFA                     l1157:
  3693   001DFA  90D8               	bcf	status,0,c
  3694   001DFC  360F               	rlcf	___flmul@grs^0,f,c
  3695   001DFE  3610               	rlcf	(___flmul@grs+1)^0,f,c
  3696   001E00  3611               	rlcf	(___flmul@grs+2)^0,f,c
  3697   001E02  3612               	rlcf	(___flmul@grs+3)^0,f,c
  3698   001E04  0618               	decf	___flmul@temp^0,f,c
  3699   001E06  A0D8               	btfss	status,0,c
  3700   001E08  0619               	decf	(___flmul@temp+1)^0,f,c
  3701   001E0A                     l5250:
  3702   001E0A  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3703   001E0C  EF0A  F00F         	goto	u5041
  3704   001E10  EF0C  F00F         	goto	u5040
  3705   001E14                     u5041:
  3706   001E14  EFF0  F00E         	goto	l5244
  3707   001E18                     u5040:
  3708   001E18  0E00               	movlw	0
  3709   001E1A  6E0E               	movwf	___flmul@aexp^0,c
  3710   001E1C  AE12               	btfss	(___flmul@grs+3)^0,7,c
  3711   001E1E  EF13  F00F         	goto	u5051
  3712   001E22  EF15  F00F         	goto	u5050
  3713   001E26                     u5051:
  3714   001E26  EF39  F00F         	goto	l1159
  3715   001E2A                     u5050:
  3716   001E2A  0EFF               	movlw	255
  3717   001E2C  140F               	andwf	___flmul@grs^0,w,c
  3718   001E2E  6E09               	movwf	??___flmul^0,c
  3719   001E30  0EFF               	movlw	255
  3720   001E32  1410               	andwf	(___flmul@grs+1)^0,w,c
  3721   001E34  6E0A               	movwf	(??___flmul+1)^0,c
  3722   001E36  0EFF               	movlw	255
  3723   001E38  1411               	andwf	(___flmul@grs+2)^0,w,c
  3724   001E3A  6E0B               	movwf	(??___flmul+2)^0,c
  3725   001E3C  0E7F               	movlw	127
  3726   001E3E  1412               	andwf	(___flmul@grs+3)^0,w,c
  3727   001E40  6E0C               	movwf	(??___flmul+3)^0,c
  3728   001E42  5009               	movf	??___flmul^0,w,c
  3729   001E44  100A               	iorwf	(??___flmul+1)^0,w,c
  3730   001E46  100B               	iorwf	(??___flmul+2)^0,w,c
  3731   001E48  100C               	iorwf	(??___flmul+3)^0,w,c
  3732   001E4A  B4D8               	btfsc	status,2,c
  3733   001E4C  EF2A  F00F         	goto	u5061
  3734   001E50  EF2C  F00F         	goto	u5060
  3735   001E54                     u5061:
  3736   001E54  EF30  F00F         	goto	l1160
  3737   001E58                     u5060:
  3738   001E58                     l5258:
  3739   001E58  0E01               	movlw	1
  3740   001E5A  6E0E               	movwf	___flmul@aexp^0,c
  3741   001E5C  EF39  F00F         	goto	l1159
  3742   001E60                     l1160:
  3743   001E60  A014               	btfss	___flmul@prod^0,0,c
  3744   001E62  EF35  F00F         	goto	u5071
  3745   001E66  EF37  F00F         	goto	u5070
  3746   001E6A                     u5071:
  3747   001E6A  EF39  F00F         	goto	l1159
  3748   001E6E                     u5070:
  3749   001E6E  EF2C  F00F         	goto	l5258
  3750   001E72                     l1159:
  3751   001E72  500E               	movf	___flmul@aexp^0,w,c
  3752   001E74  B4D8               	btfsc	status,2,c
  3753   001E76  EF3F  F00F         	goto	u5081
  3754   001E7A  EF41  F00F         	goto	u5080
  3755   001E7E                     u5081:
  3756   001E7E  EF65  F00F         	goto	l5270
  3757   001E82                     u5080:
  3758   001E82  0E01               	movlw	1
  3759   001E84  2614               	addwf	___flmul@prod^0,f,c
  3760   001E86  0E00               	movlw	0
  3761   001E88  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3762   001E8A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3763   001E8C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3764   001E8E  A017               	btfss	(___flmul@prod+3)^0,0,c
  3765   001E90  EF4C  F00F         	goto	u5091
  3766   001E94  EF4E  F00F         	goto	u5090
  3767   001E98                     u5091:
  3768   001E98  EF65  F00F         	goto	l5270
  3769   001E9C                     u5090:
  3770   001E9C  C014  F009         	movff	___flmul@prod,??___flmul
  3771   001EA0  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3772   001EA4  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3773   001EA8  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3774   001EAC  340C               	rlcf	(??___flmul+3)^0,w,c
  3775   001EAE  320C               	rrcf	(??___flmul+3)^0,f,c
  3776   001EB0  320B               	rrcf	(??___flmul+2)^0,f,c
  3777   001EB2  320A               	rrcf	(??___flmul+1)^0,f,c
  3778   001EB4  3209               	rrcf	??___flmul^0,f,c
  3779   001EB6  C009  F014         	movff	??___flmul,___flmul@prod
  3780   001EBA  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3781   001EBE  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3782   001EC2  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3783   001EC6  4A18               	infsnz	___flmul@temp^0,f,c
  3784   001EC8  2A19               	incf	(___flmul@temp+1)^0,f,c
  3785   001ECA                     l5270:
  3786   001ECA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3787   001ECC  EF70  F00F         	goto	u5101
  3788   001ED0  5019               	movf	(___flmul@temp+1)^0,w,c
  3789   001ED2  E108               	bnz	u5100
  3790   001ED4  2818               	incf	___flmul@temp^0,w,c
  3791   001ED6  A0D8               	btfss	status,0,c
  3792   001ED8  EF70  F00F         	goto	u5101
  3793   001EDC  EF72  F00F         	goto	u5100
  3794   001EE0                     u5101:
  3795   001EE0  EF7C  F00F         	goto	l5274
  3796   001EE4                     u5100:
  3797   001EE4  0E00               	movlw	0
  3798   001EE6  6E14               	movwf	___flmul@prod^0,c
  3799   001EE8  0E00               	movlw	0
  3800   001EEA  6E15               	movwf	(___flmul@prod+1)^0,c
  3801   001EEC  0E80               	movlw	128
  3802   001EEE  6E16               	movwf	(___flmul@prod+2)^0,c
  3803   001EF0  0E7F               	movlw	127
  3804   001EF2  6E17               	movwf	(___flmul@prod+3)^0,c
  3805   001EF4  EFAA  F00F         	goto	l5286
  3806   001EF8                     l5274:
  3807   001EF8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3808   001EFA  EF89  F00F         	goto	u5110
  3809   001EFE  5019               	movf	(___flmul@temp+1)^0,w,c
  3810   001F00  E106               	bnz	u5111
  3811   001F02  0418               	decf	___flmul@temp^0,w,c
  3812   001F04  B0D8               	btfsc	status,0,c
  3813   001F06  EF87  F00F         	goto	u5111
  3814   001F0A  EF89  F00F         	goto	u5110
  3815   001F0E                     u5111:
  3816   001F0E  EF95  F00F         	goto	l1167
  3817   001F12                     u5110:
  3818   001F12  0E00               	movlw	0
  3819   001F14  6E14               	movwf	___flmul@prod^0,c
  3820   001F16  0E00               	movlw	0
  3821   001F18  6E15               	movwf	(___flmul@prod+1)^0,c
  3822   001F1A  0E00               	movlw	0
  3823   001F1C  6E16               	movwf	(___flmul@prod+2)^0,c
  3824   001F1E  0E00               	movlw	0
  3825   001F20  6E17               	movwf	(___flmul@prod+3)^0,c
  3826   001F22  0E00               	movlw	0
  3827   001F24  6E0D               	movwf	___flmul@sign^0,c
  3828   001F26  EFAA  F00F         	goto	l5286
  3829   001F2A                     l1167:
  3830   001F2A  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3831   001F2E  0EFF               	movlw	255
  3832   001F30  1614               	andwf	___flmul@prod^0,f,c
  3833   001F32  0EFF               	movlw	255
  3834   001F34  1615               	andwf	(___flmul@prod+1)^0,f,c
  3835   001F36  0E7F               	movlw	127
  3836   001F38  1616               	andwf	(___flmul@prod+2)^0,f,c
  3837   001F3A  0E00               	movlw	0
  3838   001F3C  1617               	andwf	(___flmul@prod+3)^0,f,c
  3839   001F3E  A013               	btfss	___flmul@bexp^0,0,c
  3840   001F40  EFA4  F00F         	goto	u5121
  3841   001F44  EFA6  F00F         	goto	u5120
  3842   001F48                     u5121:
  3843   001F48  EFA7  F00F         	goto	l5284
  3844   001F4C                     u5120:
  3845   001F4C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3846   001F4E                     l5284:
  3847   001F4E  90D8               	bcf	status,0,c
  3848   001F50  3013               	rrcf	___flmul@bexp^0,w,c
  3849   001F52  6E17               	movwf	(___flmul@prod+3)^0,c
  3850   001F54                     l5286:
  3851   001F54  500D               	movf	___flmul@sign^0,w,c
  3852   001F56  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3853   001F58  C014  F001         	movff	___flmul@prod,?___flmul
  3854   001F5C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3855   001F60  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3856   001F64  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3857   001F68                     l1154:
  3858   001F68  0012               	return		;funcret
  3859   001F6A                     __end_of___flmul:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function ___flge *****************
  3863 ;; Defined at:
  3864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  ff1             4    0[COMRAM] unsigned char 
  3867 ;;  ff2             4    4[COMRAM] unsigned char 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;		None
  3870 ;; Return value:  Size  Location     Type
  3871 ;;		None               void
  3872 ;; Registers used:
  3873 ;;		wreg, status,2, status,0
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3879 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3882 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;Total ram usage:       12 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_convert_rgb2hue
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text9
  3893   002A6A                     __ptext9:
  3894                           	callstack 0
  3895   002A6A                     ___flge:
  3896                           	callstack 28
  3897   002A6A  0E00               	movlw	0
  3898   002A6C  1401               	andwf	___flge@ff1^0,w,c
  3899   002A6E  6E09               	movwf	??___flge^0,c
  3900   002A70  0E00               	movlw	0
  3901   002A72  1402               	andwf	(___flge@ff1+1)^0,w,c
  3902   002A74  6E0A               	movwf	(??___flge+1)^0,c
  3903   002A76  0E80               	movlw	128
  3904   002A78  1403               	andwf	(___flge@ff1+2)^0,w,c
  3905   002A7A  6E0B               	movwf	(??___flge+2)^0,c
  3906   002A7C  0E7F               	movlw	127
  3907   002A7E  1404               	andwf	(___flge@ff1+3)^0,w,c
  3908   002A80  6E0C               	movwf	(??___flge+3)^0,c
  3909   002A82  5009               	movf	??___flge^0,w,c
  3910   002A84  100A               	iorwf	(??___flge+1)^0,w,c
  3911   002A86  100B               	iorwf	(??___flge+2)^0,w,c
  3912   002A88  100C               	iorwf	(??___flge+3)^0,w,c
  3913   002A8A  A4D8               	btfss	status,2,c
  3914   002A8C  EF4A  F015         	goto	u5161
  3915   002A90  EF4C  F015         	goto	u5160
  3916   002A94                     u5161:
  3917   002A94  EF54  F015         	goto	l5318
  3918   002A98                     u5160:
  3919   002A98  0E00               	movlw	0
  3920   002A9A  6E01               	movwf	___flge@ff1^0,c
  3921   002A9C  0E00               	movlw	0
  3922   002A9E  6E02               	movwf	(___flge@ff1+1)^0,c
  3923   002AA0  0E00               	movlw	0
  3924   002AA2  6E03               	movwf	(___flge@ff1+2)^0,c
  3925   002AA4  0E00               	movlw	0
  3926   002AA6  6E04               	movwf	(___flge@ff1+3)^0,c
  3927   002AA8                     l5318:
  3928   002AA8  0E00               	movlw	0
  3929   002AAA  1405               	andwf	___flge@ff2^0,w,c
  3930   002AAC  6E09               	movwf	??___flge^0,c
  3931   002AAE  0E00               	movlw	0
  3932   002AB0  1406               	andwf	(___flge@ff2+1)^0,w,c
  3933   002AB2  6E0A               	movwf	(??___flge+1)^0,c
  3934   002AB4  0E80               	movlw	128
  3935   002AB6  1407               	andwf	(___flge@ff2+2)^0,w,c
  3936   002AB8  6E0B               	movwf	(??___flge+2)^0,c
  3937   002ABA  0E7F               	movlw	127
  3938   002ABC  1408               	andwf	(___flge@ff2+3)^0,w,c
  3939   002ABE  6E0C               	movwf	(??___flge+3)^0,c
  3940   002AC0  5009               	movf	??___flge^0,w,c
  3941   002AC2  100A               	iorwf	(??___flge+1)^0,w,c
  3942   002AC4  100B               	iorwf	(??___flge+2)^0,w,c
  3943   002AC6  100C               	iorwf	(??___flge+3)^0,w,c
  3944   002AC8  A4D8               	btfss	status,2,c
  3945   002ACA  EF69  F015         	goto	u5171
  3946   002ACE  EF6B  F015         	goto	u5170
  3947   002AD2                     u5171:
  3948   002AD2  EF73  F015         	goto	l5322
  3949   002AD6                     u5170:
  3950   002AD6  0E00               	movlw	0
  3951   002AD8  6E05               	movwf	___flge@ff2^0,c
  3952   002ADA  0E00               	movlw	0
  3953   002ADC  6E06               	movwf	(___flge@ff2+1)^0,c
  3954   002ADE  0E00               	movlw	0
  3955   002AE0  6E07               	movwf	(___flge@ff2+2)^0,c
  3956   002AE2  0E00               	movlw	0
  3957   002AE4  6E08               	movwf	(___flge@ff2+3)^0,c
  3958   002AE6                     l5322:
  3959   002AE6  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3960   002AE8  EF78  F015         	goto	u5181
  3961   002AEC  EF7A  F015         	goto	u5180
  3962   002AF0                     u5181:
  3963   002AF0  EF83  F015         	goto	l5326
  3964   002AF4                     u5180:
  3965   002AF4  6C01               	negf	___flge@ff1^0,c
  3966   002AF6  1E02               	comf	(___flge@ff1+1)^0,f,c
  3967   002AF8  B0D8               	btfsc	status,0,c
  3968   002AFA  2A02               	incf	(___flge@ff1+1)^0,f,c
  3969   002AFC  1E03               	comf	(___flge@ff1+2)^0,f,c
  3970   002AFE  B0D8               	btfsc	status,0,c
  3971   002B00  2A03               	incf	(___flge@ff1+2)^0,f,c
  3972   002B02  0E80               	movlw	128
  3973   002B04  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3974   002B06                     l5326:
  3975   002B06  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3976   002B08  EF88  F015         	goto	u5191
  3977   002B0C  EF8A  F015         	goto	u5190
  3978   002B10                     u5191:
  3979   002B10  EF93  F015         	goto	l801
  3980   002B14                     u5190:
  3981   002B14  6C05               	negf	___flge@ff2^0,c
  3982   002B16  1E06               	comf	(___flge@ff2+1)^0,f,c
  3983   002B18  B0D8               	btfsc	status,0,c
  3984   002B1A  2A06               	incf	(___flge@ff2+1)^0,f,c
  3985   002B1C  1E07               	comf	(___flge@ff2+2)^0,f,c
  3986   002B1E  B0D8               	btfsc	status,0,c
  3987   002B20  2A07               	incf	(___flge@ff2+2)^0,f,c
  3988   002B22  0E80               	movlw	128
  3989   002B24  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3990   002B26                     l801:
  3991   002B26  0E00               	movlw	0
  3992   002B28  1A01               	xorwf	___flge@ff1^0,f,c
  3993   002B2A  0E00               	movlw	0
  3994   002B2C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3995   002B2E  0E00               	movlw	0
  3996   002B30  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3997   002B32  0E80               	movlw	128
  3998   002B34  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3999   002B36  0E00               	movlw	0
  4000   002B38  1A05               	xorwf	___flge@ff2^0,f,c
  4001   002B3A  0E00               	movlw	0
  4002   002B3C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4003   002B3E  0E00               	movlw	0
  4004   002B40  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4005   002B42  0E80               	movlw	128
  4006   002B44  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4007   002B46  5005               	movf	___flge@ff2^0,w,c
  4008   002B48  5C01               	subwf	___flge@ff1^0,w,c
  4009   002B4A  5006               	movf	(___flge@ff2+1)^0,w,c
  4010   002B4C  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4011   002B4E  5007               	movf	(___flge@ff2+2)^0,w,c
  4012   002B50  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4013   002B52  5008               	movf	(___flge@ff2+3)^0,w,c
  4014   002B54  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4015   002B56  B0D8               	btfsc	status,0,c
  4016   002B58  EFB0  F015         	goto	u5201
  4017   002B5C  EFB2  F015         	goto	u5200
  4018   002B60                     u5201:
  4019   002B60  EFB5  F015         	goto	l5332
  4020   002B64                     u5200:
  4021   002B64  90D8               	bcf	status,0,c
  4022   002B66  EFB6  F015         	goto	l806
  4023   002B6A                     l5332:
  4024   002B6A  80D8               	bsf	status,0,c
  4025   002B6C                     l806:
  4026   002B6C  0012               	return		;funcret
  4027   002B6E                     __end_of___flge:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function ___fleq *****************
  4031 ;; Defined at:
  4032 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  ff1             4    0[COMRAM] unsigned char 
  4035 ;;  ff2             4    4[COMRAM] unsigned char 
  4036 ;; Auto vars:     Size  Location     Type
  4037 ;;		None
  4038 ;; Return value:  Size  Location     Type
  4039 ;;		None               void
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4047 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4049 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4050 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4051 ;;Total ram usage:       12 bytes
  4052 ;; Hardware stack levels used: 1
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		_convert_rgb2hue
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text10
  4061   002F4E                     __ptext10:
  4062                           	callstack 0
  4063   002F4E                     ___fleq:
  4064                           	callstack 28
  4065   002F4E  0E00               	movlw	0
  4066   002F50  1401               	andwf	___fleq@ff1^0,w,c
  4067   002F52  6E09               	movwf	??___fleq^0,c
  4068   002F54  0E00               	movlw	0
  4069   002F56  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4070   002F58  6E0A               	movwf	(??___fleq+1)^0,c
  4071   002F5A  0E80               	movlw	128
  4072   002F5C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4073   002F5E  6E0B               	movwf	(??___fleq+2)^0,c
  4074   002F60  0E7F               	movlw	127
  4075   002F62  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4076   002F64  6E0C               	movwf	(??___fleq+3)^0,c
  4077   002F66  5009               	movf	??___fleq^0,w,c
  4078   002F68  100A               	iorwf	(??___fleq+1)^0,w,c
  4079   002F6A  100B               	iorwf	(??___fleq+2)^0,w,c
  4080   002F6C  100C               	iorwf	(??___fleq+3)^0,w,c
  4081   002F6E  A4D8               	btfss	status,2,c
  4082   002F70  EFBC  F017         	goto	u5131
  4083   002F74  EFBE  F017         	goto	u5130
  4084   002F78                     u5131:
  4085   002F78  EFC6  F017         	goto	l5302
  4086   002F7C                     u5130:
  4087   002F7C  0E00               	movlw	0
  4088   002F7E  6E01               	movwf	___fleq@ff1^0,c
  4089   002F80  0E00               	movlw	0
  4090   002F82  6E02               	movwf	(___fleq@ff1+1)^0,c
  4091   002F84  0E00               	movlw	0
  4092   002F86  6E03               	movwf	(___fleq@ff1+2)^0,c
  4093   002F88  0E00               	movlw	0
  4094   002F8A  6E04               	movwf	(___fleq@ff1+3)^0,c
  4095   002F8C                     l5302:
  4096   002F8C  0E00               	movlw	0
  4097   002F8E  1405               	andwf	___fleq@ff2^0,w,c
  4098   002F90  6E09               	movwf	??___fleq^0,c
  4099   002F92  0E00               	movlw	0
  4100   002F94  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4101   002F96  6E0A               	movwf	(??___fleq+1)^0,c
  4102   002F98  0E80               	movlw	128
  4103   002F9A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4104   002F9C  6E0B               	movwf	(??___fleq+2)^0,c
  4105   002F9E  0E7F               	movlw	127
  4106   002FA0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4107   002FA2  6E0C               	movwf	(??___fleq+3)^0,c
  4108   002FA4  5009               	movf	??___fleq^0,w,c
  4109   002FA6  100A               	iorwf	(??___fleq+1)^0,w,c
  4110   002FA8  100B               	iorwf	(??___fleq+2)^0,w,c
  4111   002FAA  100C               	iorwf	(??___fleq+3)^0,w,c
  4112   002FAC  A4D8               	btfss	status,2,c
  4113   002FAE  EFDB  F017         	goto	u5141
  4114   002FB2  EFDD  F017         	goto	u5140
  4115   002FB6                     u5141:
  4116   002FB6  EFE5  F017         	goto	l5306
  4117   002FBA                     u5140:
  4118   002FBA  0E00               	movlw	0
  4119   002FBC  6E05               	movwf	___fleq@ff2^0,c
  4120   002FBE  0E00               	movlw	0
  4121   002FC0  6E06               	movwf	(___fleq@ff2+1)^0,c
  4122   002FC2  0E00               	movlw	0
  4123   002FC4  6E07               	movwf	(___fleq@ff2+2)^0,c
  4124   002FC6  0E00               	movlw	0
  4125   002FC8  6E08               	movwf	(___fleq@ff2+3)^0,c
  4126   002FCA                     l5306:
  4127   002FCA  5005               	movf	___fleq@ff2^0,w,c
  4128   002FCC  1801               	xorwf	___fleq@ff1^0,w,c
  4129   002FCE  E10F               	bnz	u5150
  4130   002FD0  5006               	movf	(___fleq@ff2+1)^0,w,c
  4131   002FD2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4132   002FD4  E10C               	bnz	u5150
  4133   002FD6  5007               	movf	(___fleq@ff2+2)^0,w,c
  4134   002FD8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4135   002FDA  E109               	bnz	u5150
  4136   002FDC  5008               	movf	(___fleq@ff2+3)^0,w,c
  4137   002FDE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4138   002FE0  B4D8               	btfsc	status,2,c
  4139   002FE2  EFF5  F017         	goto	u5151
  4140   002FE6  EFF7  F017         	goto	u5150
  4141   002FEA                     u5151:
  4142   002FEA  EFFA  F017         	goto	l5310
  4143   002FEE                     u5150:
  4144   002FEE  90D8               	bcf	status,0,c
  4145   002FF0  EFFB  F017         	goto	l795
  4146   002FF4                     l5310:
  4147   002FF4  80D8               	bsf	status,0,c
  4148   002FF6                     l795:
  4149   002FF6  0012               	return		;funcret
  4150   002FF8                     __end_of___fleq:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function ___fldiv *****************
  4154 ;; Defined at:
  4155 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  b               4   24[COMRAM] unsigned char 
  4158 ;;  a               4   28[COMRAM] unsigned char 
  4159 ;; Auto vars:     Size  Location     Type
  4160 ;;  grs             4   43[COMRAM] unsigned long 
  4161 ;;  rem             4   36[COMRAM] unsigned long 
  4162 ;;  new_exp         2   41[COMRAM] short 
  4163 ;;  aexp            1   48[COMRAM] unsigned char 
  4164 ;;  bexp            1   47[COMRAM] unsigned char 
  4165 ;;  sign            1   40[COMRAM] unsigned char 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  4   24[COMRAM] unsigned char 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:       25 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_convert_rgb2hue
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text11
  4189   001F6A                     __ptext11:
  4190                           	callstack 0
  4191   001F6A                     ___fldiv:
  4192                           	callstack 28
  4193   001F6A  501C               	movf	(___fldiv@b+3)^0,w,c
  4194   001F6C  0B80               	andlw	128
  4195   001F6E  6E29               	movwf	___fldiv@sign^0,c
  4196   001F70  501C               	movf	(___fldiv@b+3)^0,w,c
  4197   001F72  241C               	addwf	(___fldiv@b+3)^0,w,c
  4198   001F74  6E30               	movwf	___fldiv@bexp^0,c
  4199   001F76  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4200   001F78  EFC0  F00F         	goto	u4711
  4201   001F7C  EFC2  F00F         	goto	u4710
  4202   001F80                     u4711:
  4203   001F80  EFC3  F00F         	goto	l5030
  4204   001F84                     u4710:
  4205   001F84  8030               	bsf	___fldiv@bexp^0,0,c
  4206   001F86                     l5030:
  4207   001F86  5030               	movf	___fldiv@bexp^0,w,c
  4208   001F88  B4D8               	btfsc	status,2,c
  4209   001F8A  EFC9  F00F         	goto	u4721
  4210   001F8E  EFCB  F00F         	goto	u4720
  4211   001F92                     u4721:
  4212   001F92  EFE0  F00F         	goto	l5040
  4213   001F96                     u4720:
  4214   001F96  2830               	incf	___fldiv@bexp^0,w,c
  4215   001F98  A4D8               	btfss	status,2,c
  4216   001F9A  EFD1  F00F         	goto	u4731
  4217   001F9E  EFD3  F00F         	goto	u4730
  4218   001FA2                     u4731:
  4219   001FA2  EFDB  F00F         	goto	l5036
  4220   001FA6                     u4730:
  4221   001FA6  0E00               	movlw	0
  4222   001FA8  6E19               	movwf	___fldiv@b^0,c
  4223   001FAA  0E00               	movlw	0
  4224   001FAC  6E1A               	movwf	(___fldiv@b+1)^0,c
  4225   001FAE  0E00               	movlw	0
  4226   001FB0  6E1B               	movwf	(___fldiv@b+2)^0,c
  4227   001FB2  0E00               	movlw	0
  4228   001FB4  6E1C               	movwf	(___fldiv@b+3)^0,c
  4229   001FB6                     l5036:
  4230   001FB6  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4231   001FB8  0E00               	movlw	0
  4232   001FBA  6E1C               	movwf	(___fldiv@b+3)^0,c
  4233   001FBC  EFE8  F00F         	goto	l5042
  4234   001FC0                     l5040:
  4235   001FC0  0E00               	movlw	0
  4236   001FC2  6E19               	movwf	___fldiv@b^0,c
  4237   001FC4  0E00               	movlw	0
  4238   001FC6  6E1A               	movwf	(___fldiv@b+1)^0,c
  4239   001FC8  0E00               	movlw	0
  4240   001FCA  6E1B               	movwf	(___fldiv@b+2)^0,c
  4241   001FCC  0E00               	movlw	0
  4242   001FCE  6E1C               	movwf	(___fldiv@b+3)^0,c
  4243   001FD0                     l5042:
  4244   001FD0  5020               	movf	(___fldiv@a+3)^0,w,c
  4245   001FD2  0B80               	andlw	128
  4246   001FD4  1A29               	xorwf	___fldiv@sign^0,f,c
  4247   001FD6  5020               	movf	(___fldiv@a+3)^0,w,c
  4248   001FD8  2420               	addwf	(___fldiv@a+3)^0,w,c
  4249   001FDA  6E31               	movwf	___fldiv@aexp^0,c
  4250   001FDC  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  4251   001FDE  EFF3  F00F         	goto	u4741
  4252   001FE2  EFF5  F00F         	goto	u4740
  4253   001FE6                     u4741:
  4254   001FE6  EFF6  F00F         	goto	l5050
  4255   001FEA                     u4740:
  4256   001FEA  8031               	bsf	___fldiv@aexp^0,0,c
  4257   001FEC                     l5050:
  4258   001FEC  5031               	movf	___fldiv@aexp^0,w,c
  4259   001FEE  B4D8               	btfsc	status,2,c
  4260   001FF0  EFFC  F00F         	goto	u4751
  4261   001FF4  EFFE  F00F         	goto	u4750
  4262   001FF8                     u4751:
  4263   001FF8  EF13  F010         	goto	l5060
  4264   001FFC                     u4750:
  4265   001FFC  2831               	incf	___fldiv@aexp^0,w,c
  4266   001FFE  A4D8               	btfss	status,2,c
  4267   002000  EF04  F010         	goto	u4761
  4268   002004  EF06  F010         	goto	u4760
  4269   002008                     u4761:
  4270   002008  EF0E  F010         	goto	l5056
  4271   00200C                     u4760:
  4272   00200C  0E00               	movlw	0
  4273   00200E  6E1D               	movwf	___fldiv@a^0,c
  4274   002010  0E00               	movlw	0
  4275   002012  6E1E               	movwf	(___fldiv@a+1)^0,c
  4276   002014  0E00               	movlw	0
  4277   002016  6E1F               	movwf	(___fldiv@a+2)^0,c
  4278   002018  0E00               	movlw	0
  4279   00201A  6E20               	movwf	(___fldiv@a+3)^0,c
  4280   00201C                     l5056:
  4281   00201C  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  4282   00201E  0E00               	movlw	0
  4283   002020  6E20               	movwf	(___fldiv@a+3)^0,c
  4284   002022  EF1B  F010         	goto	l5062
  4285   002026                     l5060:
  4286   002026  0E00               	movlw	0
  4287   002028  6E1D               	movwf	___fldiv@a^0,c
  4288   00202A  0E00               	movlw	0
  4289   00202C  6E1E               	movwf	(___fldiv@a+1)^0,c
  4290   00202E  0E00               	movlw	0
  4291   002030  6E1F               	movwf	(___fldiv@a+2)^0,c
  4292   002032  0E00               	movlw	0
  4293   002034  6E20               	movwf	(___fldiv@a+3)^0,c
  4294   002036                     l5062:
  4295   002036  501D               	movf	___fldiv@a^0,w,c
  4296   002038  101E               	iorwf	(___fldiv@a+1)^0,w,c
  4297   00203A  101F               	iorwf	(___fldiv@a+2)^0,w,c
  4298   00203C  1020               	iorwf	(___fldiv@a+3)^0,w,c
  4299   00203E  A4D8               	btfss	status,2,c
  4300   002040  EF24  F010         	goto	u4771
  4301   002044  EF26  F010         	goto	u4770
  4302   002048                     u4771:
  4303   002048  EF3E  F010         	goto	l5074
  4304   00204C                     u4770:
  4305   00204C  0E00               	movlw	0
  4306   00204E  6E19               	movwf	___fldiv@b^0,c
  4307   002050  0E00               	movlw	0
  4308   002052  6E1A               	movwf	(___fldiv@b+1)^0,c
  4309   002054  0E00               	movlw	0
  4310   002056  6E1B               	movwf	(___fldiv@b+2)^0,c
  4311   002058  0E00               	movlw	0
  4312   00205A  6E1C               	movwf	(___fldiv@b+3)^0,c
  4313   00205C  0E80               	movlw	128
  4314   00205E  121B               	iorwf	(___fldiv@b+2)^0,f,c
  4315   002060  0E7F               	movlw	127
  4316   002062  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4317   002064                     l5068:
  4318   002064  5029               	movf	___fldiv@sign^0,w,c
  4319   002066  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4320   002068  C019  F019         	movff	___fldiv@b,?___fldiv
  4321   00206C  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  4322   002070  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  4323   002074  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  4324   002078  EF81  F011         	goto	l1118
  4325   00207C                     l5074:
  4326   00207C  5030               	movf	___fldiv@bexp^0,w,c
  4327   00207E  A4D8               	btfss	status,2,c
  4328   002080  EF44  F010         	goto	u4781
  4329   002084  EF46  F010         	goto	u4780
  4330   002088                     u4781:
  4331   002088  EF50  F010         	goto	l5082
  4332   00208C                     u4780:
  4333   00208C  0E00               	movlw	0
  4334   00208E  6E19               	movwf	?___fldiv^0,c
  4335   002090  0E00               	movlw	0
  4336   002092  6E1A               	movwf	(?___fldiv+1)^0,c
  4337   002094  0E00               	movlw	0
  4338   002096  6E1B               	movwf	(?___fldiv+2)^0,c
  4339   002098  0E00               	movlw	0
  4340   00209A  6E1C               	movwf	(?___fldiv+3)^0,c
  4341   00209C  EF81  F011         	goto	l1118
  4342   0020A0                     l5082:
  4343   0020A0  5031               	movf	___fldiv@aexp^0,w,c
  4344   0020A2  C030  F021         	movff	___fldiv@bexp,??___fldiv
  4345   0020A6  6A22               	clrf	(??___fldiv+1)^0,c
  4346   0020A8  5E21               	subwf	??___fldiv^0,f,c
  4347   0020AA  0E00               	movlw	0
  4348   0020AC  5A22               	subwfb	(??___fldiv+1)^0,f,c
  4349   0020AE  0E7F               	movlw	127
  4350   0020B0  2421               	addwf	??___fldiv^0,w,c
  4351   0020B2  6E2A               	movwf	___fldiv@new_exp^0,c
  4352   0020B4  0E00               	movlw	0
  4353   0020B6  2022               	addwfc	(??___fldiv+1)^0,w,c
  4354   0020B8  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4355   0020BA  C019  F025         	movff	___fldiv@b,___fldiv@rem
  4356   0020BE  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  4357   0020C2  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  4358   0020C6  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  4359   0020CA  0E00               	movlw	0
  4360   0020CC  6E19               	movwf	___fldiv@b^0,c
  4361   0020CE  0E00               	movlw	0
  4362   0020D0  6E1A               	movwf	(___fldiv@b+1)^0,c
  4363   0020D2  0E00               	movlw	0
  4364   0020D4  6E1B               	movwf	(___fldiv@b+2)^0,c
  4365   0020D6  0E00               	movlw	0
  4366   0020D8  6E1C               	movwf	(___fldiv@b+3)^0,c
  4367   0020DA  0E00               	movlw	0
  4368   0020DC  6E2C               	movwf	___fldiv@grs^0,c
  4369   0020DE  0E00               	movlw	0
  4370   0020E0  6E2D               	movwf	(___fldiv@grs+1)^0,c
  4371   0020E2  0E00               	movlw	0
  4372   0020E4  6E2E               	movwf	(___fldiv@grs+2)^0,c
  4373   0020E6  0E00               	movlw	0
  4374   0020E8  6E2F               	movwf	(___fldiv@grs+3)^0,c
  4375   0020EA  0E00               	movlw	0
  4376   0020EC  6E31               	movwf	___fldiv@aexp^0,c
  4377   0020EE  EFB1  F010         	goto	l1120
  4378   0020F2                     l5092:
  4379   0020F2  5031               	movf	___fldiv@aexp^0,w,c
  4380   0020F4  B4D8               	btfsc	status,2,c
  4381   0020F6  EF7F  F010         	goto	u4791
  4382   0020FA  EF81  F010         	goto	u4790
  4383   0020FE                     u4791:
  4384   0020FE  EF98  F010         	goto	l5100
  4385   002102                     u4790:
  4386   002102  90D8               	bcf	status,0,c
  4387   002104  3625               	rlcf	___fldiv@rem^0,f,c
  4388   002106  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  4389   002108  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  4390   00210A  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  4391   00210C  90D8               	bcf	status,0,c
  4392   00210E  3619               	rlcf	___fldiv@b^0,f,c
  4393   002110  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4394   002112  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4395   002114  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4396   002116  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4397   002118  EF90  F010         	goto	u4801
  4398   00211C  EF92  F010         	goto	u4800
  4399   002120                     u4801:
  4400   002120  EF93  F010         	goto	l1123
  4401   002124                     u4800:
  4402   002124  8019               	bsf	___fldiv@b^0,0,c
  4403   002126                     l1123:
  4404   002126  90D8               	bcf	status,0,c
  4405   002128  362C               	rlcf	___fldiv@grs^0,f,c
  4406   00212A  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4407   00212C  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4408   00212E  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4409   002130                     l5100:
  4410   002130  501D               	movf	___fldiv@a^0,w,c
  4411   002132  5C25               	subwf	___fldiv@rem^0,w,c
  4412   002134  501E               	movf	(___fldiv@a+1)^0,w,c
  4413   002136  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  4414   002138  501F               	movf	(___fldiv@a+2)^0,w,c
  4415   00213A  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  4416   00213C  5020               	movf	(___fldiv@a+3)^0,w,c
  4417   00213E  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  4418   002140  A0D8               	btfss	status,0,c
  4419   002142  EFA5  F010         	goto	u4811
  4420   002146  EFA7  F010         	goto	u4810
  4421   00214A                     u4811:
  4422   00214A  EFB0  F010         	goto	l5106
  4423   00214E                     u4810:
  4424   00214E  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  4425   002150  501D               	movf	___fldiv@a^0,w,c
  4426   002152  5E25               	subwf	___fldiv@rem^0,f,c
  4427   002154  501E               	movf	(___fldiv@a+1)^0,w,c
  4428   002156  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  4429   002158  501F               	movf	(___fldiv@a+2)^0,w,c
  4430   00215A  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  4431   00215C  5020               	movf	(___fldiv@a+3)^0,w,c
  4432   00215E  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  4433   002160                     l5106:
  4434   002160  2A31               	incf	___fldiv@aexp^0,f,c
  4435   002162                     l1120:
  4436   002162  0E19               	movlw	25
  4437   002164  6431               	cpfsgt	___fldiv@aexp^0,c
  4438   002166  EFB7  F010         	goto	u4821
  4439   00216A  EFB9  F010         	goto	u4820
  4440   00216E                     u4821:
  4441   00216E  EF79  F010         	goto	l5092
  4442   002172                     u4820:
  4443   002172  5025               	movf	___fldiv@rem^0,w,c
  4444   002174  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  4445   002176  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  4446   002178  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  4447   00217A  B4D8               	btfsc	status,2,c
  4448   00217C  EFC2  F010         	goto	u4831
  4449   002180  EFC4  F010         	goto	u4830
  4450   002184                     u4831:
  4451   002184  EFDC  F010         	goto	l5118
  4452   002188                     u4830:
  4453   002188  802C               	bsf	___fldiv@grs^0,0,c
  4454   00218A  EFDC  F010         	goto	l5118
  4455   00218E                     l5112:
  4456   00218E  90D8               	bcf	status,0,c
  4457   002190  3619               	rlcf	___fldiv@b^0,f,c
  4458   002192  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4459   002194  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4460   002196  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4461   002198  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4462   00219A  EFD1  F010         	goto	u4841
  4463   00219E  EFD3  F010         	goto	u4840
  4464   0021A2                     u4841:
  4465   0021A2  EFD4  F010         	goto	l1129
  4466   0021A6                     u4840:
  4467   0021A6  8019               	bsf	___fldiv@b^0,0,c
  4468   0021A8                     l1129:
  4469   0021A8  90D8               	bcf	status,0,c
  4470   0021AA  362C               	rlcf	___fldiv@grs^0,f,c
  4471   0021AC  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4472   0021AE  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4473   0021B0  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4474   0021B2  062A               	decf	___fldiv@new_exp^0,f,c
  4475   0021B4  A0D8               	btfss	status,0,c
  4476   0021B6  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  4477   0021B8                     l5118:
  4478   0021B8  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4479   0021BA  EFE1  F010         	goto	u4851
  4480   0021BE  EFE3  F010         	goto	u4850
  4481   0021C2                     u4851:
  4482   0021C2  EFC7  F010         	goto	l5112
  4483   0021C6                     u4850:
  4484   0021C6  0E00               	movlw	0
  4485   0021C8  6E31               	movwf	___fldiv@aexp^0,c
  4486   0021CA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4487   0021CC  EFEA  F010         	goto	u4861
  4488   0021D0  EFEC  F010         	goto	u4860
  4489   0021D4                     u4861:
  4490   0021D4  EF10  F011         	goto	l1131
  4491   0021D8                     u4860:
  4492   0021D8  0EFF               	movlw	255
  4493   0021DA  142C               	andwf	___fldiv@grs^0,w,c
  4494   0021DC  6E21               	movwf	??___fldiv^0,c
  4495   0021DE  0EFF               	movlw	255
  4496   0021E0  142D               	andwf	(___fldiv@grs+1)^0,w,c
  4497   0021E2  6E22               	movwf	(??___fldiv+1)^0,c
  4498   0021E4  0EFF               	movlw	255
  4499   0021E6  142E               	andwf	(___fldiv@grs+2)^0,w,c
  4500   0021E8  6E23               	movwf	(??___fldiv+2)^0,c
  4501   0021EA  0E7F               	movlw	127
  4502   0021EC  142F               	andwf	(___fldiv@grs+3)^0,w,c
  4503   0021EE  6E24               	movwf	(??___fldiv+3)^0,c
  4504   0021F0  5021               	movf	??___fldiv^0,w,c
  4505   0021F2  1022               	iorwf	(??___fldiv+1)^0,w,c
  4506   0021F4  1023               	iorwf	(??___fldiv+2)^0,w,c
  4507   0021F6  1024               	iorwf	(??___fldiv+3)^0,w,c
  4508   0021F8  B4D8               	btfsc	status,2,c
  4509   0021FA  EF01  F011         	goto	u4871
  4510   0021FE  EF03  F011         	goto	u4870
  4511   002202                     u4871:
  4512   002202  EF07  F011         	goto	l1132
  4513   002206                     u4870:
  4514   002206                     l5126:
  4515   002206  0E01               	movlw	1
  4516   002208  6E31               	movwf	___fldiv@aexp^0,c
  4517   00220A  EF10  F011         	goto	l1131
  4518   00220E                     l1132:
  4519   00220E  A019               	btfss	___fldiv@b^0,0,c
  4520   002210  EF0C  F011         	goto	u4881
  4521   002214  EF0E  F011         	goto	u4880
  4522   002218                     u4881:
  4523   002218  EF10  F011         	goto	l1131
  4524   00221C                     u4880:
  4525   00221C  EF03  F011         	goto	l5126
  4526   002220                     l1131:
  4527   002220  5031               	movf	___fldiv@aexp^0,w,c
  4528   002222  B4D8               	btfsc	status,2,c
  4529   002224  EF16  F011         	goto	u4891
  4530   002228  EF18  F011         	goto	u4890
  4531   00222C                     u4891:
  4532   00222C  EF3C  F011         	goto	l5138
  4533   002230                     u4890:
  4534   002230  0E01               	movlw	1
  4535   002232  2619               	addwf	___fldiv@b^0,f,c
  4536   002234  0E00               	movlw	0
  4537   002236  221A               	addwfc	(___fldiv@b+1)^0,f,c
  4538   002238  221B               	addwfc	(___fldiv@b+2)^0,f,c
  4539   00223A  221C               	addwfc	(___fldiv@b+3)^0,f,c
  4540   00223C  A01C               	btfss	(___fldiv@b+3)^0,0,c
  4541   00223E  EF23  F011         	goto	u4901
  4542   002242  EF25  F011         	goto	u4900
  4543   002246                     u4901:
  4544   002246  EF3C  F011         	goto	l5138
  4545   00224A                     u4900:
  4546   00224A  C019  F021         	movff	___fldiv@b,??___fldiv
  4547   00224E  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  4548   002252  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  4549   002256  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  4550   00225A  3424               	rlcf	(??___fldiv+3)^0,w,c
  4551   00225C  3224               	rrcf	(??___fldiv+3)^0,f,c
  4552   00225E  3223               	rrcf	(??___fldiv+2)^0,f,c
  4553   002260  3222               	rrcf	(??___fldiv+1)^0,f,c
  4554   002262  3221               	rrcf	??___fldiv^0,f,c
  4555   002264  C021  F019         	movff	??___fldiv,___fldiv@b
  4556   002268  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  4557   00226C  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  4558   002270  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  4559   002274  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  4560   002276  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  4561   002278                     l5138:
  4562   002278  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4563   00227A  EF47  F011         	goto	u4911
  4564   00227E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4565   002280  E108               	bnz	u4910
  4566   002282  282A               	incf	___fldiv@new_exp^0,w,c
  4567   002284  A0D8               	btfss	status,0,c
  4568   002286  EF47  F011         	goto	u4911
  4569   00228A  EF49  F011         	goto	u4910
  4570   00228E                     u4911:
  4571   00228E  EF54  F011         	goto	l5142
  4572   002292                     u4910:
  4573   002292  0E00               	movlw	0
  4574   002294  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4575   002296  682A               	setf	___fldiv@new_exp^0,c
  4576   002298  0E00               	movlw	0
  4577   00229A  6E19               	movwf	___fldiv@b^0,c
  4578   00229C  0E00               	movlw	0
  4579   00229E  6E1A               	movwf	(___fldiv@b+1)^0,c
  4580   0022A0  0E00               	movlw	0
  4581   0022A2  6E1B               	movwf	(___fldiv@b+2)^0,c
  4582   0022A4  0E00               	movlw	0
  4583   0022A6  6E1C               	movwf	(___fldiv@b+3)^0,c
  4584   0022A8                     l5142:
  4585   0022A8  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4586   0022AA  EF61  F011         	goto	u4920
  4587   0022AE  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4588   0022B0  E106               	bnz	u4921
  4589   0022B2  042A               	decf	___fldiv@new_exp^0,w,c
  4590   0022B4  B0D8               	btfsc	status,0,c
  4591   0022B6  EF5F  F011         	goto	u4921
  4592   0022BA  EF61  F011         	goto	u4920
  4593   0022BE                     u4921:
  4594   0022BE  EF6F  F011         	goto	l5146
  4595   0022C2                     u4920:
  4596   0022C2  0E00               	movlw	0
  4597   0022C4  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4598   0022C6  0E00               	movlw	0
  4599   0022C8  6E2A               	movwf	___fldiv@new_exp^0,c
  4600   0022CA  0E00               	movlw	0
  4601   0022CC  6E19               	movwf	___fldiv@b^0,c
  4602   0022CE  0E00               	movlw	0
  4603   0022D0  6E1A               	movwf	(___fldiv@b+1)^0,c
  4604   0022D2  0E00               	movlw	0
  4605   0022D4  6E1B               	movwf	(___fldiv@b+2)^0,c
  4606   0022D6  0E00               	movlw	0
  4607   0022D8  6E1C               	movwf	(___fldiv@b+3)^0,c
  4608   0022DA  0E00               	movlw	0
  4609   0022DC  6E29               	movwf	___fldiv@sign^0,c
  4610   0022DE                     l5146:
  4611   0022DE  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  4612   0022E2  A030               	btfss	___fldiv@bexp^0,0,c
  4613   0022E4  EF76  F011         	goto	u4931
  4614   0022E8  EF78  F011         	goto	u4930
  4615   0022EC                     u4931:
  4616   0022EC  EF7B  F011         	goto	l5152
  4617   0022F0                     u4930:
  4618   0022F0  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4619   0022F2  EF7C  F011         	goto	l5154
  4620   0022F6                     l5152:
  4621   0022F6  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  4622   0022F8                     l5154:
  4623   0022F8  90D8               	bcf	status,0,c
  4624   0022FA  3030               	rrcf	___fldiv@bexp^0,w,c
  4625   0022FC  6E1C               	movwf	(___fldiv@b+3)^0,c
  4626   0022FE  EF32  F010         	goto	l5068
  4627   002302                     l1118:
  4628   002302  0012               	return		;funcret
  4629   002304                     __end_of___fldiv:
  4630                           	callstack 0
  4631                           
  4632 ;; *************** function _initUSART4 *****************
  4633 ;; Defined at:
  4634 ;;		line 14 in file "serial.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;		None
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text12
  4662   0035CC                     __ptext12:
  4663                           	callstack 0
  4664   0035CC                     _initUSART4:
  4665                           	callstack 30
  4666   0035CC                     
  4667                           ;serial.c: 15:     RC0PPS = 0x12;
  4668   0035CC  0E12               	movlw	18
  4669   0035CE  010E               	movlb	14	; () banked
  4670   0035D0  6F62               	movwf	98,b	;volatile
  4671                           
  4672                           ;serial.c: 16:     RX4PPS = 0x11;
  4673   0035D2  0E11               	movlw	17
  4674   0035D4  6F15               	movwf	21,b	;volatile
  4675   0035D6                     
  4676                           ; BSR set to: 14
  4677                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  4678   0035D6  97E9               	bcf	233,3,b	;volatile
  4679   0035D8                     
  4680                           ; BSR set to: 14
  4681                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  4682   0035D8  95E8               	bcf	232,2,b	;volatile
  4683                           
  4684                           ;serial.c: 19:     SP4BRGL = 51;
  4685   0035DA  0E33               	movlw	51
  4686   0035DC  6FE5               	movwf	229,b	;volatile
  4687                           
  4688                           ;serial.c: 20:     SP4BRGH = 0;
  4689   0035DE  0E00               	movlw	0
  4690   0035E0  6FE6               	movwf	230,b	;volatile
  4691   0035E2                     
  4692                           ; BSR set to: 14
  4693                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4694   0035E2  89E7               	bsf	231,4,b	;volatile
  4695   0035E4                     
  4696                           ; BSR set to: 14
  4697                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4698   0035E4  8BE8               	bsf	232,5,b	;volatile
  4699   0035E6                     
  4700                           ; BSR set to: 14
  4701                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4702   0035E6  8FE7               	bsf	231,7,b	;volatile
  4703   0035E8                     
  4704                           ; BSR set to: 14
  4705   0035E8  0012               	return		;funcret
  4706   0035EA                     __end_of_initUSART4:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _initDCmotorsPWM *****************
  4710 ;; Defined at:
  4711 ;;		line 5 in file "dc_motor.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;Total ram usage:        2 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text13
  4739   003138                     __ptext13:
  4740                           	callstack 0
  4741   003138                     _initDCmotorsPWM:
  4742                           	callstack 30
  4743   003138                     
  4744                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4745   003138  9485               	bcf	133,2,c	;volatile
  4746                           
  4747                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4748   00313A  9E83               	bcf	131,7,c	;volatile
  4749                           
  4750                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4751   00313C  9885               	bcf	133,4,c	;volatile
  4752                           
  4753                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4754   00313E  9C87               	bcf	135,6,c	;volatile
  4755                           
  4756                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4757   003140  947D               	bcf	125,2,c	;volatile
  4758                           
  4759                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4760   003142  9E7B               	bcf	123,7,c	;volatile
  4761                           
  4762                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4763   003144  987D               	bcf	125,4,c	;volatile
  4764                           
  4765                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  4766   003146  9C7F               	bcf	127,6,c	;volatile
  4767   003148                     
  4768                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4769   003148  0E05               	movlw	5
  4770   00314A  010E               	movlb	14	; () banked
  4771   00314C  6F74               	movwf	116,b	;volatile
  4772                           
  4773                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4774   00314E  0E06               	movlw	6
  4775   003150  6F76               	movwf	118,b	;volatile
  4776                           
  4777                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4778   003152  0E07               	movlw	7
  4779   003154  6F69               	movwf	105,b	;volatile
  4780                           
  4781                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4782   003156  0E08               	movlw	8
  4783   003158  6F88               	movwf	136,b	;volatile
  4784                           
  4785                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4786   00315A  50BD               	movf	189,w,c	;volatile
  4787   00315C  0B8F               	andlw	-113
  4788   00315E  0940               	iorlw	64
  4789   003160  6EBD               	movwf	189,c	;volatile
  4790                           
  4791                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4792   003162  0EE0               	movlw	-32
  4793   003164  16BE               	andwf	190,f,c	;volatile
  4794                           
  4795                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4796   003166  50BF               	movf	191,w,c	;volatile
  4797   003168  0BF0               	andlw	-16
  4798   00316A  0901               	iorlw	1
  4799   00316C  6EBF               	movwf	191,c	;volatile
  4800   00316E                     
  4801                           ; BSR set to: 14
  4802                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  4803   00316E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4804   003172                     
  4805                           ; BSR set to: 14
  4806                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4807   003172  8EBD               	bsf	189,7,c	;volatile
  4808                           
  4809                           ;dc_motor.c: 35:     CCPR1H=0;
  4810   003174  0E00               	movlw	0
  4811   003176  6EAA               	movwf	170,c	;volatile
  4812                           
  4813                           ;dc_motor.c: 36:     CCPR2H=0;
  4814   003178  0E00               	movlw	0
  4815   00317A  6EA6               	movwf	166,c	;volatile
  4816                           
  4817                           ;dc_motor.c: 37:     CCPR3H=0;
  4818   00317C  0E00               	movlw	0
  4819   00317E  010F               	movlb	15	; () banked
  4820   003180  6F25               	movwf	37,b	;volatile
  4821                           
  4822                           ;dc_motor.c: 38:     CCPR4H=0;
  4823   003182  0E00               	movlw	0
  4824   003184  6F21               	movwf	33,b	;volatile
  4825                           
  4826                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4827   003186  0EFC               	movlw	-4
  4828   003188  16AD               	andwf	173,f,c	;volatile
  4829                           
  4830                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4831   00318A  0EF3               	movlw	-13
  4832   00318C  16AD               	andwf	173,f,c	;volatile
  4833                           
  4834                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4835   00318E  0ECF               	movlw	-49
  4836   003190  16AD               	andwf	173,f,c	;volatile
  4837                           
  4838                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4839   003192  0E3F               	movlw	-193
  4840   003194  16AD               	andwf	173,f,c	;volatile
  4841   003196                     
  4842                           ; BSR set to: 15
  4843                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4844   003196  88AB               	bsf	171,4,c	;volatile
  4845                           
  4846                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  4847   003198  50AB               	movf	171,w,c	;volatile
  4848   00319A  0BF0               	andlw	-16
  4849   00319C  090C               	iorlw	12
  4850   00319E  6EAB               	movwf	171,c	;volatile
  4851   0031A0                     
  4852                           ; BSR set to: 15
  4853                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  4854   0031A0  8EAB               	bsf	171,7,c	;volatile
  4855   0031A2                     
  4856                           ; BSR set to: 15
  4857                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  4858   0031A2  88A7               	bsf	167,4,c	;volatile
  4859                           
  4860                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  4861   0031A4  50A7               	movf	167,w,c	;volatile
  4862   0031A6  0BF0               	andlw	-16
  4863   0031A8  090C               	iorlw	12
  4864   0031AA  6EA7               	movwf	167,c	;volatile
  4865   0031AC                     
  4866                           ; BSR set to: 15
  4867                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  4868   0031AC  8EA7               	bsf	167,7,c	;volatile
  4869   0031AE                     
  4870                           ; BSR set to: 15
  4871                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  4872   0031AE  8926               	bsf	38,4,b	;volatile
  4873                           
  4874                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  4875   0031B0  5126               	movf	38,w,b	;volatile
  4876   0031B2  0BF0               	andlw	-16
  4877   0031B4  090C               	iorlw	12
  4878   0031B6  6F26               	movwf	38,b	;volatile
  4879   0031B8                     
  4880                           ; BSR set to: 15
  4881                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  4882   0031B8  8F26               	bsf	38,7,b	;volatile
  4883   0031BA                     
  4884                           ; BSR set to: 15
  4885                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  4886   0031BA  8922               	bsf	34,4,b	;volatile
  4887                           
  4888                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  4889   0031BC  5122               	movf	34,w,b	;volatile
  4890   0031BE  0BF0               	andlw	-16
  4891   0031C0  090C               	iorlw	12
  4892   0031C2  6F22               	movwf	34,b	;volatile
  4893   0031C4                     
  4894                           ; BSR set to: 15
  4895                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  4896   0031C4  8F22               	bsf	34,7,b	;volatile
  4897   0031C6                     
  4898                           ; BSR set to: 15
  4899   0031C6  0012               	return		;funcret
  4900   0031C8                     __end_of_initDCmotorsPWM:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _color_click_init *****************
  4904 ;; Defined at:
  4905 ;;		line 8 in file "color.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;Total ram usage:        1 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 3
  4926 ;; This function calls:
  4927 ;;		_I2C_2_Master_Init
  4928 ;;		_color_writetoaddr
  4929 ;; This function is called by:
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text14
  4935   003448                     __ptext14:
  4936                           	callstack 0
  4937   003448                     _color_click_init:
  4938                           	callstack 27
  4939   003448                     
  4940                           ;color.c: 11:     I2C_2_Master_Init();
  4941   003448  EC8B  F01A         	call	_I2C_2_Master_Init	;wreg free
  4942   00344C                     
  4943                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  4944   00344C  0E01               	movlw	1
  4945   00344E  6E03               	movwf	color_writetoaddr@value^0,c
  4946   003450  0E00               	movlw	0
  4947   003452  ECC7  F01A         	call	_color_writetoaddr
  4948   003456                     
  4949                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4950   003456  0E3F               	movlw	63
  4951   003458  6E05               	movwf	??_color_click_init^0,c
  4952   00345A  0E55               	movlw	85
  4953   00345C                     u5707:
  4954   00345C  2EE8               	decfsz	wreg,f,c
  4955   00345E  D7FE               	bra	u5707
  4956   003460  2E05               	decfsz	??_color_click_init^0,f,c
  4957   003462  D7FC               	bra	u5707
  4958   003464  0000               	nop	
  4959   003466                     
  4960                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  4961   003466  0E03               	movlw	3
  4962   003468  6E03               	movwf	color_writetoaddr@value^0,c
  4963   00346A  0E00               	movlw	0
  4964   00346C  ECC7  F01A         	call	_color_writetoaddr
  4965   003470                     
  4966                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  4967   003470  0ED5               	movlw	213
  4968   003472  6E03               	movwf	color_writetoaddr@value^0,c
  4969   003474  0E01               	movlw	1
  4970   003476  ECC7  F01A         	call	_color_writetoaddr
  4971   00347A  0012               	return		;funcret
  4972   00347C                     __end_of_color_click_init:
  4973                           	callstack 0
  4974                           
  4975 ;; *************** function _color_writetoaddr *****************
  4976 ;; Defined at:
  4977 ;;		line 24 in file "color.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  address         1    wreg     unsigned char 
  4980 ;;  value           1    2[COMRAM] unsigned char 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  address         1    3[COMRAM] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, status,2, status,0, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : 0/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4992 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;Total ram usage:        2 bytes
  4997 ;; Hardware stack levels used: 1
  4998 ;; Hardware stack levels required when called: 2
  4999 ;; This function calls:
  5000 ;;		_I2C_2_Master_Start
  5001 ;;		_I2C_2_Master_Stop
  5002 ;;		_I2C_2_Master_Write
  5003 ;; This function is called by:
  5004 ;;		_color_click_init
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text15
  5009   00358E                     __ptext15:
  5010                           	callstack 0
  5011   00358E                     _color_writetoaddr:
  5012                           	callstack 27
  5013                           
  5014                           ;incstack = 0
  5015                           ;color_writetoaddr@address stored from wreg
  5016   00358E  6E04               	movwf	color_writetoaddr@address^0,c
  5017   003590                     
  5018                           ;color.c: 25:     I2C_2_Master_Start();
  5019   003590  EC19  F01B         	call	_I2C_2_Master_Start	;wreg free
  5020                           
  5021                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  5022   003594  0E52               	movlw	82
  5023   003596  EC0E  F01B         	call	_I2C_2_Master_Write
  5024                           
  5025                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  5026   00359A  5004               	movf	color_writetoaddr@address^0,w,c
  5027   00359C  0980               	iorlw	128
  5028   00359E  EC0E  F01B         	call	_I2C_2_Master_Write
  5029                           
  5030                           ;color.c: 28:     I2C_2_Master_Write(value);
  5031   0035A2  5003               	movf	color_writetoaddr@value^0,w,c
  5032   0035A4  EC0E  F01B         	call	_I2C_2_Master_Write
  5033                           
  5034                           ;color.c: 29:     I2C_2_Master_Stop();
  5035   0035A8  EC14  F01B         	call	_I2C_2_Master_Stop	;wreg free
  5036   0035AC  0012               	return		;funcret
  5037   0035AE                     __end_of_color_writetoaddr:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _I2C_2_Master_Init *****************
  5041 ;; Defined at:
  5042 ;;		line 4 in file "i2c.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; This function calls:
  5063 ;;		Nothing
  5064 ;; This function is called by:
  5065 ;;		_color_click_init
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text16
  5070   003516                     __ptext16:
  5071                           	callstack 0
  5072   003516                     _I2C_2_Master_Init:
  5073                           	callstack 29
  5074   003516                     
  5075                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5076   003516  010E               	movlb	14	; () banked
  5077   003518  51D9               	movf	217,w,b	;volatile
  5078   00351A  0BF0               	andlw	-16
  5079   00351C  0908               	iorlw	8
  5080   00351E  6FD9               	movwf	217,b	;volatile
  5081   003520                     
  5082                           ; BSR set to: 14
  5083                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5084   003520  8BD9               	bsf	217,5,b	;volatile
  5085                           
  5086                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5087   003522  0E9F               	movlw	159
  5088   003524  6FD6               	movwf	214,b	;volatile
  5089   003526                     
  5090                           ; BSR set to: 14
  5091                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5092   003526  8A84               	bsf	132,5,c	;volatile
  5093   003528                     
  5094                           ; BSR set to: 14
  5095                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5096   003528  8C84               	bsf	132,6,c	;volatile
  5097   00352A                     
  5098                           ; BSR set to: 14
  5099                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5100   00352A  9BA7               	bcf	167,5,b	;volatile
  5101   00352C                     
  5102                           ; BSR set to: 14
  5103                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5104   00352C  9DA7               	bcf	167,6,b	;volatile
  5105                           
  5106                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5107   00352E  0E1D               	movlw	29
  5108   003530  6F1D               	movwf	29,b	;volatile
  5109                           
  5110                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5111   003532  0E1E               	movlw	30
  5112   003534  6F1C               	movwf	28,b	;volatile
  5113                           
  5114                           ;i2c.c: 18:   RD5PPS=0x1C;
  5115   003536  0E1C               	movlw	28
  5116   003538  6F6F               	movwf	111,b	;volatile
  5117                           
  5118                           ;i2c.c: 19:   RD6PPS=0x1B;
  5119   00353A  0E1B               	movlw	27
  5120   00353C  6F70               	movwf	112,b	;volatile
  5121   00353E                     
  5122                           ; BSR set to: 14
  5123   00353E  0012               	return		;funcret
  5124   003540                     __end_of_I2C_2_Master_Init:
  5125                           	callstack 0
  5126                           
  5127 ;; *************** function _calibration_routine *****************
  5128 ;; Defined at:
  5129 ;;		line 197 in file "color.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  cCal            1   67[COMRAM] PTR struct colors
  5132 ;;		 -> colorCalibration(8), 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  cal_state      20   70[COMRAM] unsigned char [20]
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5145 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;Total ram usage:       23 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; Hardware stack levels required when called: 8
  5151 ;; This function calls:
  5152 ;;		_color_read_Blue
  5153 ;;		_color_read_Clear
  5154 ;;		_color_read_Green
  5155 ;;		_color_read_Red
  5156 ;;		_sendStringSerial4
  5157 ;;		_sprintf
  5158 ;; This function is called by:
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text17
  5164   0024B8                     __ptext17:
  5165                           	callstack 0
  5166   0024B8                     _calibration_routine:
  5167                           	callstack 22
  5168   0024B8                     
  5169                           ;color.c: 197: void calibration_routine(colors *cCal);color.c: 198: {;color.c: 200:     
      +                          LATGbits.LATG0 = 0;
  5170   0024B8  907F               	bcf	127,0,c	;volatile
  5171                           
  5172                           ;color.c: 201:     LATEbits.LATE7 = 0;
  5173   0024BA  9E7D               	bcf	125,7,c	;volatile
  5174                           
  5175                           ;color.c: 202:     LATAbits.LATA3 = 0;
  5176   0024BC  9679               	bcf	121,3,c	;volatile
  5177   0024BE                     
  5178                           ;color.c: 204:     char cal_state[20];;color.c: 208:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  5179   0024BE  0E47               	movlw	low calibration_routine@cal_state
  5180   0024C0  6E31               	movwf	sprintf@s^0,c
  5181   0024C2  0E73               	movlw	low STR_1
  5182   0024C4  6E32               	movwf	sprintf@fmt^0,c
  5183   0024C6  0EB7               	movlw	low STR_2
  5184   0024C8  6E33               	movwf	(?_sprintf+2)^0,c
  5185   0024CA  5033               	movf	(?_sprintf+2)^0,w,c
  5186   0024CC  A4D8               	btfss	status,2,c
  5187   0024CE  0E0E               	movlw	high __smallconst
  5188   0024D0  6E34               	movwf	(?_sprintf+3)^0,c
  5189   0024D2  EC3E  F01A         	call	_sprintf	;wreg free
  5190   0024D6                     
  5191                           ;color.c: 209:     sendStringSerial4(cal_state);
  5192   0024D6  0E47               	movlw	low calibration_routine@cal_state
  5193   0024D8  6E02               	movwf	sendStringSerial4@string^0,c
  5194   0024DA  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5195   0024DE                     l84:
  5196                           
  5197                           ;color.c: 212:     while(PORTFbits.RF2 == 1){
  5198   0024DE  B48E               	btfsc	142,2,c	;volatile
  5199   0024E0  EF74  F012         	goto	u5561
  5200   0024E4  EF76  F012         	goto	u5560
  5201   0024E8                     u5561:
  5202   0024E8  EF6F  F012         	goto	l84
  5203   0024EC                     u5560:
  5204   0024EC                     
  5205                           ;color.c: 216:     LATGbits.LATG0 = 1;
  5206   0024EC  807F               	bsf	127,0,c	;volatile
  5207   0024EE                     
  5208                           ;color.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5209   0024EE  0E29               	movlw	41
  5210   0024F0  6E46               	movwf	(??_calibration_routine+1)^0,c
  5211   0024F2  0E96               	movlw	150
  5212   0024F4  6E45               	movwf	??_calibration_routine^0,c
  5213   0024F6  0E7F               	movlw	127
  5214   0024F8                     u5717:
  5215   0024F8  2EE8               	decfsz	wreg,f,c
  5216   0024FA  D7FE               	bra	u5717
  5217   0024FC  2E45               	decfsz	??_calibration_routine^0,f,c
  5218   0024FE  D7FC               	bra	u5717
  5219   002500  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5220   002502  D7FA               	bra	u5717
  5221   002504  0000               	nop	
  5222   002506                     
  5223                           ;color.c: 218:     (cCal->red) = color_read_Red();
  5224   002506  ECE4  F018         	call	_color_read_Red	;wreg free
  5225   00250A  5044               	movf	calibration_routine@cCal^0,w,c
  5226   00250C  6ED9               	movwf	fsr2l,c
  5227   00250E  6ADA               	clrf	fsr2h,c
  5228   002510  C005  FFDE         	movff	?_color_read_Red,postinc2
  5229   002514  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5230   002518                     
  5231                           ;color.c: 219:     LATGbits.LATG0 = 0;
  5232   002518  907F               	bcf	127,0,c	;volatile
  5233   00251A                     
  5234                           ;color.c: 222:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  5235   00251A  0E47               	movlw	low calibration_routine@cal_state
  5236   00251C  6E31               	movwf	sprintf@s^0,c
  5237   00251E  0E22               	movlw	low STR_3
  5238   002520  6E32               	movwf	sprintf@fmt^0,c
  5239   002522  0EB7               	movlw	low STR_2
  5240   002524  6E33               	movwf	(?_sprintf+2)^0,c
  5241   002526  5033               	movf	(?_sprintf+2)^0,w,c
  5242   002528  A4D8               	btfss	status,2,c
  5243   00252A  0E0E               	movlw	high __smallconst
  5244   00252C  6E34               	movwf	(?_sprintf+3)^0,c
  5245   00252E  EC3E  F01A         	call	_sprintf	;wreg free
  5246   002532                     
  5247                           ;color.c: 223:     sendStringSerial4(&cal_state);
  5248   002532  0E47               	movlw	low calibration_routine@cal_state
  5249   002534  6E02               	movwf	sendStringSerial4@string^0,c
  5250   002536  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5251   00253A                     l87:
  5252                           
  5253                           ;color.c: 225:     while(PORTFbits.RF2 == 1){
  5254   00253A  B48E               	btfsc	142,2,c	;volatile
  5255   00253C  EFA2  F012         	goto	u5571
  5256   002540  EFA4  F012         	goto	u5570
  5257   002544                     u5571:
  5258   002544  EF9D  F012         	goto	l87
  5259   002548                     u5570:
  5260   002548                     
  5261                           ;color.c: 229:     LATEbits.LATE7 = 1;
  5262   002548  8E7D               	bsf	125,7,c	;volatile
  5263   00254A                     
  5264                           ;color.c: 230:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5265   00254A  0E29               	movlw	41
  5266   00254C  6E46               	movwf	(??_calibration_routine+1)^0,c
  5267   00254E  0E96               	movlw	150
  5268   002550  6E45               	movwf	??_calibration_routine^0,c
  5269   002552  0E7F               	movlw	127
  5270   002554                     u5727:
  5271   002554  2EE8               	decfsz	wreg,f,c
  5272   002556  D7FE               	bra	u5727
  5273   002558  2E45               	decfsz	??_calibration_routine^0,f,c
  5274   00255A  D7FC               	bra	u5727
  5275   00255C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5276   00255E  D7FA               	bra	u5727
  5277   002560  0000               	nop	
  5278   002562                     
  5279                           ;color.c: 231:     (cCal->green) = color_read_Green();
  5280   002562  EC0C  F019         	call	_color_read_Green	;wreg free
  5281   002566  5044               	movf	calibration_routine@cCal^0,w,c
  5282   002568  6ED9               	movwf	fsr2l,c
  5283   00256A  6ADA               	clrf	fsr2h,c
  5284   00256C  0E02               	movlw	2
  5285   00256E  26D9               	addwf	fsr2l,f,c
  5286   002570  C005  FFDE         	movff	?_color_read_Green,postinc2
  5287   002574  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5288   002578                     
  5289                           ;color.c: 232:     LATEbits.LATE7 = 0;
  5290   002578  9E7D               	bcf	125,7,c	;volatile
  5291   00257A                     
  5292                           ;color.c: 235:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  5293   00257A  0E47               	movlw	low calibration_routine@cal_state
  5294   00257C  6E31               	movwf	sprintf@s^0,c
  5295   00257E  0E3F               	movlw	low STR_5
  5296   002580  6E32               	movwf	sprintf@fmt^0,c
  5297   002582  0EB7               	movlw	low STR_2
  5298   002584  6E33               	movwf	(?_sprintf+2)^0,c
  5299   002586  5033               	movf	(?_sprintf+2)^0,w,c
  5300   002588  A4D8               	btfss	status,2,c
  5301   00258A  0E0E               	movlw	high __smallconst
  5302   00258C  6E34               	movwf	(?_sprintf+3)^0,c
  5303   00258E  EC3E  F01A         	call	_sprintf	;wreg free
  5304   002592                     
  5305                           ;color.c: 236:     sendStringSerial4(&cal_state);
  5306   002592  0E47               	movlw	low calibration_routine@cal_state
  5307   002594  6E02               	movwf	sendStringSerial4@string^0,c
  5308   002596  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5309   00259A                     l90:
  5310                           
  5311                           ;color.c: 238:     while(PORTFbits.RF2 == 1){
  5312   00259A  B48E               	btfsc	142,2,c	;volatile
  5313   00259C  EFD2  F012         	goto	u5581
  5314   0025A0  EFD4  F012         	goto	u5580
  5315   0025A4                     u5581:
  5316   0025A4  EFCD  F012         	goto	l90
  5317   0025A8                     u5580:
  5318   0025A8                     
  5319                           ;color.c: 242:     LATAbits.LATA3 = 1;
  5320   0025A8  8679               	bsf	121,3,c	;volatile
  5321   0025AA                     
  5322                           ;color.c: 243:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5323   0025AA  0E29               	movlw	41
  5324   0025AC  6E46               	movwf	(??_calibration_routine+1)^0,c
  5325   0025AE  0E96               	movlw	150
  5326   0025B0  6E45               	movwf	??_calibration_routine^0,c
  5327   0025B2  0E7F               	movlw	127
  5328   0025B4                     u5737:
  5329   0025B4  2EE8               	decfsz	wreg,f,c
  5330   0025B6  D7FE               	bra	u5737
  5331   0025B8  2E45               	decfsz	??_calibration_routine^0,f,c
  5332   0025BA  D7FC               	bra	u5737
  5333   0025BC  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5334   0025BE  D7FA               	bra	u5737
  5335   0025C0  0000               	nop	
  5336   0025C2                     
  5337                           ;color.c: 244:     (cCal->blue) = color_read_Blue();
  5338   0025C2  EC5C  F019         	call	_color_read_Blue	;wreg free
  5339   0025C6  5044               	movf	calibration_routine@cCal^0,w,c
  5340   0025C8  6ED9               	movwf	fsr2l,c
  5341   0025CA  6ADA               	clrf	fsr2h,c
  5342   0025CC  0E04               	movlw	4
  5343   0025CE  26D9               	addwf	fsr2l,f,c
  5344   0025D0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5345   0025D4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5346   0025D8                     
  5347                           ;color.c: 245:     LATAbits.LATA3 = 0;
  5348   0025D8  9679               	bcf	121,3,c	;volatile
  5349   0025DA                     
  5350                           ;color.c: 263:      sprintf(cal_state,"Calibration state =  white light", ".");
  5351   0025DA  0E47               	movlw	low calibration_routine@cal_state
  5352   0025DC  6E31               	movwf	sprintf@s^0,c
  5353   0025DE  0E01               	movlw	low STR_7
  5354   0025E0  6E32               	movwf	sprintf@fmt^0,c
  5355   0025E2  0EB7               	movlw	low STR_2
  5356   0025E4  6E33               	movwf	(?_sprintf+2)^0,c
  5357   0025E6  5033               	movf	(?_sprintf+2)^0,w,c
  5358   0025E8  A4D8               	btfss	status,2,c
  5359   0025EA  0E0E               	movlw	high __smallconst
  5360   0025EC  6E34               	movwf	(?_sprintf+3)^0,c
  5361   0025EE  EC3E  F01A         	call	_sprintf	;wreg free
  5362   0025F2                     
  5363                           ;color.c: 264:     sendStringSerial4(&cal_state);
  5364   0025F2  0E47               	movlw	low calibration_routine@cal_state
  5365   0025F4  6E02               	movwf	sendStringSerial4@string^0,c
  5366   0025F6  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5367   0025FA                     l93:
  5368                           
  5369                           ;color.c: 266:     while(PORTFbits.RF2 == 1){
  5370   0025FA  B48E               	btfsc	142,2,c	;volatile
  5371   0025FC  EF02  F013         	goto	u5591
  5372   002600  EF04  F013         	goto	u5590
  5373   002604                     u5591:
  5374   002604  EFFD  F012         	goto	l93
  5375   002608                     u5590:
  5376   002608                     
  5377                           ;color.c: 269:     LATGbits.LATG0 = 1;
  5378   002608  807F               	bsf	127,0,c	;volatile
  5379                           
  5380                           ;color.c: 270:     LATEbits.LATE7 = 1;
  5381   00260A  8E7D               	bsf	125,7,c	;volatile
  5382                           
  5383                           ;color.c: 271:     LATAbits.LATA3 = 1;
  5384   00260C  8679               	bsf	121,3,c	;volatile
  5385   00260E                     
  5386                           ;color.c: 272:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5387   00260E  0E29               	movlw	41
  5388   002610  6E46               	movwf	(??_calibration_routine+1)^0,c
  5389   002612  0E96               	movlw	150
  5390   002614  6E45               	movwf	??_calibration_routine^0,c
  5391   002616  0E7F               	movlw	127
  5392   002618                     u5747:
  5393   002618  2EE8               	decfsz	wreg,f,c
  5394   00261A  D7FE               	bra	u5747
  5395   00261C  2E45               	decfsz	??_calibration_routine^0,f,c
  5396   00261E  D7FC               	bra	u5747
  5397   002620  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5398   002622  D7FA               	bra	u5747
  5399   002624  0000               	nop	
  5400   002626                     
  5401                           ;color.c: 273:     (cCal->clear) = color_read_Clear();
  5402   002626  EC34  F019         	call	_color_read_Clear	;wreg free
  5403   00262A  5044               	movf	calibration_routine@cCal^0,w,c
  5404   00262C  6ED9               	movwf	fsr2l,c
  5405   00262E  6ADA               	clrf	fsr2h,c
  5406   002630  0E06               	movlw	6
  5407   002632  26D9               	addwf	fsr2l,f,c
  5408   002634  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5409   002638  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5410   00263C                     
  5411                           ;color.c: 274:     LATGbits.LATG0 = 0;
  5412   00263C  907F               	bcf	127,0,c	;volatile
  5413   00263E                     
  5414                           ;color.c: 275:     LATEbits.LATE7 = 0;
  5415   00263E  9E7D               	bcf	125,7,c	;volatile
  5416   002640                     
  5417                           ;color.c: 276:     LATAbits.LATA3 = 0;
  5418   002640  9679               	bcf	121,3,c	;volatile
  5419   002642                     
  5420                           ;color.c: 279:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  5421   002642  0E47               	movlw	low calibration_routine@cal_state
  5422   002644  6E31               	movwf	sprintf@s^0,c
  5423   002646  0E5A               	movlw	low STR_9
  5424   002648  6E32               	movwf	sprintf@fmt^0,c
  5425   00264A  0EB7               	movlw	low STR_2
  5426   00264C  6E33               	movwf	(?_sprintf+2)^0,c
  5427   00264E  5033               	movf	(?_sprintf+2)^0,w,c
  5428   002650  A4D8               	btfss	status,2,c
  5429   002652  0E0E               	movlw	high __smallconst
  5430   002654  6E34               	movwf	(?_sprintf+3)^0,c
  5431   002656  EC3E  F01A         	call	_sprintf	;wreg free
  5432   00265A                     
  5433                           ;color.c: 280:     sendStringSerial4(&cal_state);
  5434   00265A  0E47               	movlw	low calibration_routine@cal_state
  5435   00265C  6E02               	movwf	sendStringSerial4@string^0,c
  5436   00265E  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5437   002662  0012               	return		;funcret
  5438   002664                     __end_of_calibration_routine:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _sprintf *****************
  5442 ;; Defined at:
  5443 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  s               1   48[COMRAM] PTR unsigned char 
  5446 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), convert_rgb2hue@c_char(20), calibration_routine@cal_state(2
      +0), 
  5447 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  5448 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  5449 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  f              12   55[COMRAM] struct _IO_FILE
  5452 ;;  ret             2    0        int 
  5453 ;;  ap              1   54[COMRAM] PTR void [1]
  5454 ;;		 -> ?_sprintf(2), 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  2   48[COMRAM] int 
  5457 ;; Registers used:
  5458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5464 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;Total ram usage:       19 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; Hardware stack levels required when called: 7
  5471 ;; This function calls:
  5472 ;;		_vfprintf
  5473 ;; This function is called by:
  5474 ;;		_calibration_routine
  5475 ;;		_convert_rgb2hue
  5476 ;;		_send2USART
  5477 ;;		_ADC2String
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text18
  5482   00347C                     __ptext18:
  5483                           	callstack 0
  5484   00347C                     _sprintf:
  5485                           	callstack 22
  5486   00347C  0E33               	movlw	low (?_sprintf+2)
  5487   00347E  6E37               	movwf	sprintf@ap^0,c
  5488   003480  C031  F038         	movff	sprintf@s,sprintf@f
  5489   003484  0E00               	movlw	0
  5490   003486  6E3C               	movwf	(sprintf@f+4)^0,c
  5491   003488  0E00               	movlw	0
  5492   00348A  6E3B               	movwf	(sprintf@f+3)^0,c
  5493   00348C  0E00               	movlw	0
  5494   00348E  6E43               	movwf	(sprintf@f+11)^0,c
  5495   003490  0E00               	movlw	0
  5496   003492  6E42               	movwf	(sprintf@f+10)^0,c
  5497   003494  0E38               	movlw	low sprintf@f
  5498   003496  6E2D               	movwf	vfprintf@fp^0,c
  5499   003498  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  5500   00349C  0E37               	movlw	low sprintf@ap
  5501   00349E  6E2F               	movwf	vfprintf@ap^0,c
  5502   0034A0  ECA7  F019         	call	_vfprintf	;wreg free
  5503   0034A4  5031               	movf	sprintf@s^0,w,c
  5504   0034A6  243B               	addwf	(sprintf@f+3)^0,w,c
  5505   0034A8  6ED9               	movwf	fsr2l,c
  5506   0034AA  6ADA               	clrf	fsr2h,c
  5507   0034AC  6ADF               	clrf	indf2,c
  5508   0034AE  0012               	return		;funcret
  5509   0034B0                     __end_of_sprintf:
  5510                           	callstack 0
  5511                           
  5512 ;; *************** function _vfprintf *****************
  5513 ;; Defined at:
  5514 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  5517 ;;		 -> sprintf@f(12), 
  5518 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  5519 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  5520 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  5521 ;;  ap              1   46[COMRAM] PTR PTR void 
  5522 ;;		 -> sprintf@ap(1), 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  5525 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  5526 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  2   44[COMRAM] int 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;Total ram usage:        4 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 6
  5543 ;; This function calls:
  5544 ;;		_vfpfcnvrt
  5545 ;; This function is called by:
  5546 ;;		_sprintf
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text19
  5551   00334E                     __ptext19:
  5552                           	callstack 0
  5553   00334E                     _vfprintf:
  5554                           	callstack 22
  5555   00334E                     
  5556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5557   00334E  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  5558                           
  5559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5560   003352  EFB3  F019         	goto	l4950
  5561   003356                     l4948:
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5564   003356  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  5565   00335A  0E30               	movlw	low vfprintf@cfmt
  5566   00335C  6E23               	movwf	vfpfcnvrt@fmt^0,c
  5567   00335E  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  5568   003362  EC32  F013         	call	_vfpfcnvrt	;wreg free
  5569   003366                     l4950:
  5570                           
  5571                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5572   003366  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  5573   00336A                     	if	1	;There is more than 1 active tblptr byte
  5574   00336A  0E0E               	movlw	high __smallconst
  5575   00336C  6EF7               	movwf	tblptrh,c
  5576   00336E                     	endif
  5577   00336E                     	if	0	;tblptru may be non-zero
  5578   00336E                     	endif
  5579   00336E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5580   00336E  0E00               	movlw	low (__smallconst shr (0+16))
  5581   003370  6EF8               	movwf	tblptru,c
  5582   003372                     	endif
  5583   003372  0008               	tblrd		*
  5584   003374  50F5               	movf	tablat,w,c
  5585   003376  0900               	iorlw	0
  5586   003378  A4D8               	btfss	status,2,c
  5587   00337A  EFC1  F019         	goto	u4651
  5588   00337E  EFC3  F019         	goto	u4650
  5589   003382                     u4651:
  5590   003382  EFAB  F019         	goto	l4948
  5591   003386                     u4650:
  5592   003386                     
  5593                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5594   003386  0E00               	movlw	0
  5595   003388  6E2E               	movwf	(?_vfprintf+1)^0,c
  5596   00338A  0E00               	movlw	0
  5597   00338C  6E2D               	movwf	?_vfprintf^0,c
  5598   00338E  0012               	return		;funcret
  5599   003390                     __end_of_vfprintf:
  5600                           	callstack 0
  5601                           
  5602 ;; *************** function _vfpfcnvrt *****************
  5603 ;; Defined at:
  5604 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  5607 ;;		 -> sprintf@f(12), 
  5608 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  5609 ;;		 -> vfprintf@cfmt(1), 
  5610 ;;  ap              1   35[COMRAM] PTR PTR void 
  5611 ;;		 -> sprintf@ap(1), 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;  convarg         4   38[COMRAM] struct .
  5614 ;;  cp              1   43[COMRAM] PTR unsigned char 
  5615 ;;		 -> STR_13(12), STR_12(21), STR_11(11), STR_9(25), 
  5616 ;;		 -> STR_7(33), STR_5(27), STR_3(29), STR_1(24), 
  5617 ;;  done            1   42[COMRAM] _Bool 
  5618 ;;  c               1    0        unsigned char 
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      void 
  5621 ;; Registers used:
  5622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5628 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5629 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;Total ram usage:       11 bytes
  5633 ;; Hardware stack levels used: 1
  5634 ;; Hardware stack levels required when called: 5
  5635 ;; This function calls:
  5636 ;;		_dtoa
  5637 ;;		_fputc
  5638 ;;		_read_prec_or_width
  5639 ;; This function is called by:
  5640 ;;		_vfprintf
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text20
  5645   002664                     __ptext20:
  5646                           	callstack 0
  5647   002664                     _vfpfcnvrt:
  5648                           	callstack 22
  5649   002664                     
  5650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5651   002664  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5652   002666  6ED9               	movwf	fsr2l,c
  5653   002668  6ADA               	clrf	fsr2h,c
  5654   00266A  CFDF FFF6          	movff	indf2,tblptrl
  5655   00266E                     	if	1	;There is more than 1 active tblptr byte
  5656   00266E  0E0E               	movlw	high __smallconst
  5657   002670  6EF7               	movwf	tblptrh,c
  5658   002672                     	endif
  5659   002672                     	if	0	;tblptru may be non-zero
  5660   002672                     	endif
  5661   002672                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5662   002672  0E00               	movlw	low (__smallconst shr (0+16))
  5663   002674  6EF8               	movwf	tblptru,c
  5664   002676                     	endif
  5665   002676  0008               	tblrd		*
  5666   002678  50F5               	movf	tablat,w,c
  5667   00267A  0A25               	xorlw	37
  5668   00267C  A4D8               	btfss	status,2,c
  5669   00267E  EF43  F013         	goto	u4181
  5670   002682  EF45  F013         	goto	u4180
  5671   002686                     u4181:
  5672   002686  EFE2  F013         	goto	l4726
  5673   00268A                     u4180:
  5674   00268A                     
  5675                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5676   00268A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5677   00268C  6ED9               	movwf	fsr2l,c
  5678   00268E  6ADA               	clrf	fsr2h,c
  5679   002690  2ADF               	incf	indf2,f,c
  5680   002692                     
  5681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5682   002692  0E00               	movlw	0
  5683   002694  0100               	movlb	0	; () banked
  5684   002696  6FCF               	movwf	(_width+1)& (0+255),b
  5685   002698  0E00               	movlw	0
  5686   00269A  6FCE               	movwf	_width& (0+255),b
  5687   00269C  C0CE  F0D2         	movff	_width,_flags
  5688   0026A0                     
  5689                           ; BSR set to: 0
  5690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5691   0026A0  69D0               	setf	_prec& (0+255),b
  5692   0026A2  69D1               	setf	(_prec+1)& (0+255),b
  5693   0026A4                     
  5694                           ; BSR set to: 0
  5695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5696   0026A4  0E00               	movlw	0
  5697   0026A6  6E2B               	movwf	vfpfcnvrt@done^0,c
  5698                           
  5699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5700   0026A8  EF7D  F013         	goto	l4700
  5701   0026AC                     l4690:
  5702                           
  5703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5704   0026AC  0100               	movlb	0	; () banked
  5705   0026AE  83D2               	bsf	_flags& (0+255),1,b
  5706   0026B0                     
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5709   0026B0  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5710   0026B2  6ED9               	movwf	fsr2l,c
  5711   0026B4  6ADA               	clrf	fsr2h,c
  5712   0026B6  2ADF               	incf	indf2,f,c
  5713                           
  5714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5715   0026B8  EF7D  F013         	goto	l4700
  5716   0026BC                     l4694:
  5717                           
  5718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5719   0026BC  0E01               	movlw	1
  5720   0026BE  6E2B               	movwf	vfpfcnvrt@done^0,c
  5721                           
  5722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5723   0026C0  EF7D  F013         	goto	l4700
  5724   0026C4                     l4698:
  5725   0026C4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5726   0026C6  6ED9               	movwf	fsr2l,c
  5727   0026C8  6ADA               	clrf	fsr2h,c
  5728   0026CA  CFDF FFF6          	movff	indf2,tblptrl
  5729   0026CE                     	if	1	;There is more than 1 active tblptr byte
  5730   0026CE  0E0E               	movlw	high __smallconst
  5731   0026D0  6EF7               	movwf	tblptrh,c
  5732   0026D2                     	endif
  5733   0026D2                     	if	0	;tblptru may be non-zero
  5734   0026D2                     	endif
  5735   0026D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5736   0026D2  0E00               	movlw	low (__smallconst shr (0+16))
  5737   0026D4  6EF8               	movwf	tblptru,c
  5738   0026D6                     	endif
  5739   0026D6  0008               	tblrd		*
  5740   0026D8  50F5               	movf	tablat,w,c
  5741   0026DA  6E25               	movwf	??_vfpfcnvrt^0,c
  5742   0026DC  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  5743                           
  5744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5745                           ; Switch size 1, requested type "simple"
  5746                           ; Number of cases is 1, Range of values is 0 to 0
  5747                           ; switch strategies available:
  5748                           ; Name         Instructions Cycles
  5749                           ; simple_byte            4     3 (average)
  5750                           ;	Chosen strategy is simple_byte
  5751   0026DE  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  5752   0026E0  0A00               	xorlw	0	; case 0
  5753   0026E2  B4D8               	btfsc	status,2,c
  5754   0026E4  EF76  F013         	goto	l6002
  5755   0026E8  EF5E  F013         	goto	l4694
  5756   0026EC                     l6002:
  5757                           
  5758                           ; Switch size 1, requested type "simple"
  5759                           ; Number of cases is 1, Range of values is 48 to 48
  5760                           ; switch strategies available:
  5761                           ; Name         Instructions Cycles
  5762                           ; simple_byte            4     3 (average)
  5763                           ;	Chosen strategy is simple_byte
  5764   0026EC  5025               	movf	??_vfpfcnvrt^0,w,c
  5765   0026EE  0A30               	xorlw	48	; case 48
  5766   0026F0  B4D8               	btfsc	status,2,c
  5767   0026F2  EF56  F013         	goto	l4690
  5768   0026F6  EF5E  F013         	goto	l4694
  5769   0026FA                     l4700:
  5770                           
  5771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5772   0026FA  502B               	movf	vfpfcnvrt@done^0,w,c
  5773   0026FC  B4D8               	btfsc	status,2,c
  5774   0026FE  EF83  F013         	goto	u4191
  5775   002702  EF85  F013         	goto	u4190
  5776   002706                     u4191:
  5777   002706  EF62  F013         	goto	l4698
  5778   00270A                     u4190:
  5779   00270A                     
  5780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5781   00270A  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5782   00270E  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5783   002712  EC50  F017         	call	_read_prec_or_width	;wreg free
  5784   002716  C007  F0CE         	movff	?_read_prec_or_width,_width
  5785   00271A  C008  F0CF         	movff	?_read_prec_or_width+1,_width+1
  5786   00271E                     
  5787                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5788   00271E  0100               	movlb	0	; () banked
  5789   002720  BFCF               	btfsc	(_width+1)& (0+255),7,b
  5790   002722  EF97  F013         	goto	u4200
  5791   002726  EF95  F013         	goto	u4201
  5792   00272A                     u4201:
  5793   00272A  EF9C  F013         	goto	l4708
  5794   00272E                     u4200:
  5795   00272E                     
  5796                           ; BSR set to: 0
  5797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5798   00272E  81D2               	bsf	_flags& (0+255),0,b
  5799                           
  5800                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5801   002730  6DCE               	negf	_width& (0+255),b
  5802   002732  1FCF               	comf	(_width+1)& (0+255),f,b
  5803   002734  B0D8               	btfsc	status,0,c
  5804   002736  2BCF               	incf	(_width+1)& (0+255),f,b
  5805   002738                     l4708:
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5809   002738  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5810   00273A  6ED9               	movwf	fsr2l,c
  5811   00273C  6ADA               	clrf	fsr2h,c
  5812   00273E  50DF               	movf	indf2,w,c
  5813   002740  6E2C               	movwf	vfpfcnvrt@cp^0,c
  5814   002742                     
  5815                           ; BSR set to: 0
  5816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5817   002742  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5818   002746                     	if	1	;There is more than 1 active tblptr byte
  5819   002746  0E0E               	movlw	high __smallconst
  5820   002748  6EF7               	movwf	tblptrh,c
  5821   00274A                     	endif
  5822   00274A                     	if	0	;tblptru may be non-zero
  5823   00274A                     	endif
  5824   00274A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5825   00274A  0E00               	movlw	low (__smallconst shr (0+16))
  5826   00274C  6EF8               	movwf	tblptru,c
  5827   00274E                     	endif
  5828   00274E  0008               	tblrd		*
  5829   002750  50F5               	movf	tablat,w,c
  5830   002752  0A64               	xorlw	100
  5831   002754  B4D8               	btfsc	status,2,c
  5832   002756  EFAF  F013         	goto	u4211
  5833   00275A  EFB1  F013         	goto	u4210
  5834   00275E                     u4211:
  5835   00275E  EFC1  F013         	goto	l4714
  5836   002762                     u4210:
  5837   002762                     
  5838                           ; BSR set to: 0
  5839   002762  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5840   002766                     	if	1	;There is more than 1 active tblptr byte
  5841   002766  0E0E               	movlw	high __smallconst
  5842   002768  6EF7               	movwf	tblptrh,c
  5843   00276A                     	endif
  5844   00276A                     	if	0	;tblptru may be non-zero
  5845   00276A                     	endif
  5846   00276A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5847   00276A  0E00               	movlw	low (__smallconst shr (0+16))
  5848   00276C  6EF8               	movwf	tblptru,c
  5849   00276E                     	endif
  5850   00276E  0008               	tblrd		*
  5851   002770  50F5               	movf	tablat,w,c
  5852   002772  0A69               	xorlw	105
  5853   002774  A4D8               	btfss	status,2,c
  5854   002776  EFBF  F013         	goto	u4221
  5855   00277A  EFC1  F013         	goto	u4220
  5856   00277E                     u4221:
  5857   00277E  EFDC  F013         	goto	l4722
  5858   002782                     u4220:
  5859   002782                     l4714:
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5863   002782  5024               	movf	vfpfcnvrt@ap^0,w,c
  5864   002784  6ED9               	movwf	fsr2l,c
  5865   002786  6ADA               	clrf	fsr2h,c
  5866   002788  0E02               	movlw	2
  5867   00278A  26DF               	addwf	indf2,f,c
  5868   00278C  5CDF               	subwf	indf2,w,c
  5869   00278E  6ED9               	movwf	fsr2l,c
  5870   002790  6ADA               	clrf	fsr2h,c
  5871   002792  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  5872   002796  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  5873   00279A                     
  5874                           ; BSR set to: 0
  5875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5876   00279A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5877   00279C  6ED9               	movwf	fsr2l,c
  5878   00279E  6ADA               	clrf	fsr2h,c
  5879   0027A0  282C               	incf	vfpfcnvrt@cp^0,w,c
  5880   0027A2  6EDF               	movwf	indf2,c
  5881   0027A4                     
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5884   0027A4  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  5885   0027A8  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  5886   0027AC  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5887   0027B0  ECF6  F013         	call	_dtoa	;wreg free
  5888   0027B4  EFF5  F013         	goto	l1278
  5889   0027B8                     l4722:
  5890                           
  5891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  5892   0027B8  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5893   0027BA  6ED9               	movwf	fsr2l,c
  5894   0027BC  6ADA               	clrf	fsr2h,c
  5895   0027BE  2ADF               	incf	indf2,f,c
  5896   0027C0  EFF5  F013         	goto	l1278
  5897   0027C4                     l4726:
  5898                           
  5899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  5900   0027C4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5901   0027C6  6ED9               	movwf	fsr2l,c
  5902   0027C8  6ADA               	clrf	fsr2h,c
  5903   0027CA  CFDF FFF6          	movff	indf2,tblptrl
  5904   0027CE                     	if	1	;There is more than 1 active tblptr byte
  5905   0027CE  0E0E               	movlw	high __smallconst
  5906   0027D0  6EF7               	movwf	tblptrh,c
  5907   0027D2                     	endif
  5908   0027D2                     	if	0	;tblptru may be non-zero
  5909   0027D2                     	endif
  5910   0027D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5911   0027D2  0E00               	movlw	low (__smallconst shr (0+16))
  5912   0027D4  6EF8               	movwf	tblptru,c
  5913   0027D6                     	endif
  5914   0027D6  0008               	tblrd		*
  5915   0027D8  50F5               	movf	tablat,w,c
  5916   0027DA  6E01               	movwf	fputc@c^0,c
  5917   0027DC  6A02               	clrf	(fputc@c+1)^0,c
  5918   0027DE  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5919   0027E2  ECFC  F017         	call	_fputc	;wreg free
  5920   0027E6  EFDC  F013         	goto	l4722
  5921   0027EA                     l1278:
  5922   0027EA  0012               	return		;funcret
  5923   0027EC                     __end_of_vfpfcnvrt:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _read_prec_or_width *****************
  5927 ;; Defined at:
  5928 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  5931 ;;		 -> vfprintf@cfmt(1), 
  5932 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  5933 ;;		 -> sprintf@ap(1), 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  c               1    8[COMRAM] unsigned char 
  5936 ;;  n               2    9[COMRAM] int 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  2    6[COMRAM] int 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;Total ram usage:        5 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 1
  5953 ;; This function calls:
  5954 ;;		___wmul
  5955 ;; This function is called by:
  5956 ;;		_vfpfcnvrt
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text21
  5961   002EA0                     __ptext21:
  5962                           	callstack 0
  5963   002EA0                     _read_prec_or_width:
  5964                           	callstack 25
  5965   002EA0                     
  5966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  5967   002EA0  0E00               	movlw	0
  5968   002EA2  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  5969   002EA4  0E00               	movlw	0
  5970   002EA6  6E0A               	movwf	read_prec_or_width@n^0,c
  5971   002EA8                     
  5972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  5973   002EA8  5007               	movf	read_prec_or_width@fmt^0,w,c
  5974   002EAA  6ED9               	movwf	fsr2l,c
  5975   002EAC  6ADA               	clrf	fsr2h,c
  5976   002EAE  CFDF FFF6          	movff	indf2,tblptrl
  5977   002EB2                     	if	1	;There is more than 1 active tblptr byte
  5978   002EB2  0E0E               	movlw	high __smallconst
  5979   002EB4  6EF7               	movwf	tblptrh,c
  5980   002EB6                     	endif
  5981   002EB6                     	if	0	;tblptru may be non-zero
  5982   002EB6                     	endif
  5983   002EB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5984   002EB6  0E00               	movlw	low (__smallconst shr (0+16))
  5985   002EB8  6EF8               	movwf	tblptru,c
  5986   002EBA                     	endif
  5987   002EBA  0008               	tblrd		*
  5988   002EBC  50F5               	movf	tablat,w,c
  5989   002EBE  0A2A               	xorlw	42
  5990   002EC0  A4D8               	btfss	status,2,c
  5991   002EC2  EF65  F017         	goto	u4161
  5992   002EC6  EF67  F017         	goto	u4160
  5993   002ECA                     u4161:
  5994   002ECA  EF8D  F017         	goto	l4678
  5995   002ECE                     u4160:
  5996   002ECE                     
  5997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  5998   002ECE  5007               	movf	read_prec_or_width@fmt^0,w,c
  5999   002ED0  6ED9               	movwf	fsr2l,c
  6000   002ED2  6ADA               	clrf	fsr2h,c
  6001   002ED4  2ADF               	incf	indf2,f,c
  6002   002ED6                     
  6003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6004   002ED6  5008               	movf	read_prec_or_width@ap^0,w,c
  6005   002ED8  6ED9               	movwf	fsr2l,c
  6006   002EDA  6ADA               	clrf	fsr2h,c
  6007   002EDC  0E02               	movlw	2
  6008   002EDE  26DF               	addwf	indf2,f,c
  6009   002EE0  5CDF               	subwf	indf2,w,c
  6010   002EE2  6ED9               	movwf	fsr2l,c
  6011   002EE4  6ADA               	clrf	fsr2h,c
  6012   002EE6  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6013   002EEA  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6014                           
  6015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6016   002EEE  EFA2  F017         	goto	l1259
  6017   002EF2                     l4674:
  6018                           
  6019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6020   002EF2  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  6021   002EF6  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6022   002EFA  0E00               	movlw	0
  6023   002EFC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6024   002EFE  0E0A               	movlw	10
  6025   002F00  6E03               	movwf	___wmul@multiplicand^0,c
  6026   002F02  ECB4  F01A         	call	___wmul	;wreg free
  6027   002F06  5009               	movf	read_prec_or_width@c^0,w,c
  6028   002F08  2401               	addwf	?___wmul^0,w,c
  6029   002F0A  6E0A               	movwf	read_prec_or_width@n^0,c
  6030   002F0C  0E00               	movlw	0
  6031   002F0E  2002               	addwfc	(?___wmul+1)^0,w,c
  6032   002F10  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6033   002F12                     
  6034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6035   002F12  5007               	movf	read_prec_or_width@fmt^0,w,c
  6036   002F14  6ED9               	movwf	fsr2l,c
  6037   002F16  6ADA               	clrf	fsr2h,c
  6038   002F18  2ADF               	incf	indf2,f,c
  6039   002F1A                     l4678:
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6042   002F1A  5007               	movf	read_prec_or_width@fmt^0,w,c
  6043   002F1C  6ED9               	movwf	fsr2l,c
  6044   002F1E  6ADA               	clrf	fsr2h,c
  6045   002F20  CFDF FFF6          	movff	indf2,tblptrl
  6046   002F24                     	if	1	;There is more than 1 active tblptr byte
  6047   002F24  0E0E               	movlw	high __smallconst
  6048   002F26  6EF7               	movwf	tblptrh,c
  6049   002F28                     	endif
  6050   002F28                     	if	0	;tblptru may be non-zero
  6051   002F28                     	endif
  6052   002F28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6053   002F28  0E00               	movlw	low (__smallconst shr (0+16))
  6054   002F2A  6EF8               	movwf	tblptru,c
  6055   002F2C                     	endif
  6056   002F2C  0008               	tblrd		*
  6057   002F2E  50F5               	movf	tablat,w,c
  6058   002F30  0FD0               	addlw	208
  6059   002F32  6E09               	movwf	read_prec_or_width@c^0,c
  6060   002F34  0E09               	movlw	9
  6061   002F36  6409               	cpfsgt	read_prec_or_width@c^0,c
  6062   002F38  EFA0  F017         	goto	u4171
  6063   002F3C  EFA2  F017         	goto	u4170
  6064   002F40                     u4171:
  6065   002F40  EF79  F017         	goto	l4674
  6066   002F44                     u4170:
  6067   002F44                     l1259:
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6070   002F44  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  6071   002F48  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6072   002F4C  0012               	return		;funcret
  6073   002F4E                     __end_of_read_prec_or_width:
  6074                           	callstack 0
  6075                           
  6076 ;; *************** function ___wmul *****************
  6077 ;; Defined at:
  6078 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  multiplier      2    0[COMRAM] unsigned int 
  6081 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  product         2    4[COMRAM] unsigned int 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  2    0[COMRAM] unsigned int 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0, prodl, prodh
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6097 ;;Total ram usage:        6 bytes
  6098 ;; Hardware stack levels used: 1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_read_prec_or_width
  6103 ;;		_setMotorPWM
  6104 ;;		_ADC2String
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text22
  6109   003568                     __ptext22:
  6110                           	callstack 0
  6111   003568                     ___wmul:
  6112                           	callstack 25
  6113   003568  5001               	movf	___wmul@multiplier^0,w,c
  6114   00356A  0203               	mulwf	___wmul@multiplicand^0,c
  6115   00356C  CFF3 F005          	movff	prodl,___wmul@product
  6116   003570  CFF4 F006          	movff	prodh,___wmul@product+1
  6117   003574  5001               	movf	___wmul@multiplier^0,w,c
  6118   003576  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6119   003578  50F3               	movf	243,w,c
  6120   00357A  2606               	addwf	(___wmul@product+1)^0,f,c
  6121   00357C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6122   00357E  0203               	mulwf	___wmul@multiplicand^0,c
  6123   003580  50F3               	movf	243,w,c
  6124   003582  2606               	addwf	(___wmul@product+1)^0,f,c
  6125   003584  C005  F001         	movff	___wmul@product,?___wmul
  6126   003588  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6127   00358C  0012               	return		;funcret
  6128   00358E                     __end_of___wmul:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _dtoa *****************
  6132 ;; Defined at:
  6133 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6136 ;;		 -> sprintf@f(12), 
  6137 ;;  d               2   23[COMRAM] int 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  i               2   31[COMRAM] int 
  6140 ;;  w               2   28[COMRAM] int 
  6141 ;;  s               1   30[COMRAM] unsigned char 
  6142 ;;  p               1   27[COMRAM] _Bool 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6152 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6153 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;Total ram usage:       11 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; Hardware stack levels required when called: 4
  6159 ;; This function calls:
  6160 ;;		___awdiv
  6161 ;;		___awmod
  6162 ;;		_abs
  6163 ;;		_pad
  6164 ;; This function is called by:
  6165 ;;		_vfpfcnvrt
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           	psect	text23
  6170   0027EC                     __ptext23:
  6171                           	callstack 0
  6172   0027EC                     _dtoa:
  6173                           	callstack 22
  6174   0027EC                     
  6175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6176   0027EC  0E01               	movlw	1
  6177   0027EE  6E1C               	movwf	dtoa@p^0,c
  6178   0027F0                     
  6179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6180   0027F0  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6181   0027F2  EFFD  F013         	goto	u4061
  6182   0027F6  EF00  F014         	goto	u4060
  6183   0027FA                     u4061:
  6184   0027FA  0E01               	movlw	1
  6185   0027FC  EF01  F014         	goto	u4070
  6186   002800                     u4060:
  6187   002800  0E00               	movlw	0
  6188   002802                     u4070:
  6189   002802  6E1F               	movwf	dtoa@s^0,c
  6190   002804                     
  6191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6192   002804  C0CE  F01D         	movff	_width,dtoa@w
  6193   002808  C0CF  F01E         	movff	_width+1,dtoa@w+1
  6194   00280C                     
  6195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6196   00280C  501F               	movf	dtoa@s^0,w,c
  6197   00280E  B4D8               	btfsc	status,2,c
  6198   002810  EF0C  F014         	goto	u4081
  6199   002814  EF0E  F014         	goto	u4080
  6200   002818                     u4081:
  6201   002818  EF25  F014         	goto	l1242
  6202   00281C                     u4080:
  6203   00281C                     
  6204                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6205   00281C  061D               	decf	dtoa@w^0,f,c
  6206   00281E  A0D8               	btfss	status,0,c
  6207   002820  061E               	decf	(dtoa@w+1)^0,f,c
  6208   002822                     
  6209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6210   002822  501F               	movf	dtoa@s^0,w,c
  6211   002824  A4D8               	btfss	status,2,c
  6212   002826  EF17  F014         	goto	u4091
  6213   00282A  EF19  F014         	goto	u4090
  6214   00282E                     u4091:
  6215   00282E  EF1F  F014         	goto	l4630
  6216   002832                     u4090:
  6217   002832  0E00               	movlw	0
  6218   002834  6E1B               	movwf	(_dtoa$2617+1)^0,c
  6219   002836  0E2B               	movlw	43
  6220   002838  6E1A               	movwf	_dtoa$2617^0,c
  6221   00283A  EF23  F014         	goto	l4632
  6222   00283E                     l4630:
  6223   00283E  0E00               	movlw	0
  6224   002840  6E1B               	movwf	(_dtoa$2617+1)^0,c
  6225   002842  0E2D               	movlw	45
  6226   002844  6E1A               	movwf	_dtoa$2617^0,c
  6227   002846                     l4632:
  6228   002846  C01A  F01F         	movff	_dtoa$2617,dtoa@s
  6229   00284A                     l1242:
  6230                           
  6231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6232   00284A  0E00               	movlw	0
  6233   00284C  6E21               	movwf	(dtoa@i+1)^0,c
  6234   00284E  0E1F               	movlw	31
  6235   002850  6E20               	movwf	dtoa@i^0,c
  6236   002852                     
  6237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6238   002852  0E00               	movlw	0
  6239   002854  0101               	movlb	1	; () banked
  6240   002856  6F83               	movwf	(_dbuf+31)& (0+255),b
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6243   002858  EF5D  F014         	goto	l4646
  6244   00285C                     l4636:
  6245                           
  6246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6247   00285C  0620               	decf	dtoa@i^0,f,c
  6248   00285E  A0D8               	btfss	status,0,c
  6249   002860  0621               	decf	(dtoa@i+1)^0,f,c
  6250   002862                     
  6251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6252   002862  0E64               	movlw	low _dbuf
  6253   002864  2420               	addwf	dtoa@i^0,w,c
  6254   002866  6ED9               	movwf	fsr2l,c
  6255   002868  0E01               	movlw	high _dbuf
  6256   00286A  2021               	addwfc	(dtoa@i+1)^0,w,c
  6257   00286C  6EDA               	movwf	fsr2h,c
  6258   00286E  C018  F001         	movff	dtoa@d,___awmod@dividend
  6259   002872  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6260   002876  0E00               	movlw	0
  6261   002878  6E04               	movwf	(___awmod@divisor+1)^0,c
  6262   00287A  0E0A               	movlw	10
  6263   00287C  6E03               	movwf	___awmod@divisor^0,c
  6264   00287E  ECF8  F016         	call	___awmod	;wreg free
  6265   002882  C001  F007         	movff	?___awmod,abs@a
  6266   002886  C002  F008         	movff	?___awmod+1,abs@a+1
  6267   00288A  EC58  F01A         	call	_abs	;wreg free
  6268   00288E  5007               	movf	?_abs^0,w,c
  6269   002890  0F30               	addlw	48
  6270   002892  6EDF               	movwf	indf2,c
  6271   002894                     
  6272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6273   002894  0E00               	movlw	0
  6274   002896  6E1C               	movwf	dtoa@p^0,c
  6275   002898                     
  6276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6277   002898  061D               	decf	dtoa@w^0,f,c
  6278   00289A  A0D8               	btfss	status,0,c
  6279   00289C  061E               	decf	(dtoa@w+1)^0,f,c
  6280   00289E                     
  6281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6282   00289E  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6283   0028A2  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6284   0028A6  0E00               	movlw	0
  6285   0028A8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6286   0028AA  0E0A               	movlw	10
  6287   0028AC  6E03               	movwf	___awdiv@divisor^0,c
  6288   0028AE  EC96  F016         	call	___awdiv	;wreg free
  6289   0028B2  C001  F018         	movff	?___awdiv,dtoa@d
  6290   0028B6  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6291   0028BA                     l4646:
  6292                           
  6293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6294   0028BA  BE21               	btfsc	(dtoa@i+1)^0,7,c
  6295   0028BC  EF68  F014         	goto	u4101
  6296   0028C0  5021               	movf	(dtoa@i+1)^0,w,c
  6297   0028C2  E108               	bnz	u4100
  6298   0028C4  0420               	decf	dtoa@i^0,w,c
  6299   0028C6  A0D8               	btfss	status,0,c
  6300   0028C8  EF68  F014         	goto	u4101
  6301   0028CC  EF6A  F014         	goto	u4100
  6302   0028D0                     u4101:
  6303   0028D0  EF90  F014         	goto	l4656
  6304   0028D4                     u4100:
  6305   0028D4  5018               	movf	dtoa@d^0,w,c
  6306   0028D6  1019               	iorwf	(dtoa@d+1)^0,w,c
  6307   0028D8  A4D8               	btfss	status,2,c
  6308   0028DA  EF71  F014         	goto	u4111
  6309   0028DE  EF73  F014         	goto	u4110
  6310   0028E2                     u4111:
  6311   0028E2  EF2E  F014         	goto	l4636
  6312   0028E6                     u4110:
  6313   0028E6  501C               	movf	dtoa@p^0,w,c
  6314   0028E8  A4D8               	btfss	status,2,c
  6315   0028EA  EF79  F014         	goto	u4121
  6316   0028EE  EF7B  F014         	goto	u4120
  6317   0028F2                     u4121:
  6318   0028F2  EF2E  F014         	goto	l4636
  6319   0028F6                     u4120:
  6320   0028F6  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  6321   0028F8  EF86  F014         	goto	u4131
  6322   0028FC  501E               	movf	(dtoa@w+1)^0,w,c
  6323   0028FE  E108               	bnz	u4130
  6324   002900  041D               	decf	dtoa@w^0,w,c
  6325   002902  A0D8               	btfss	status,0,c
  6326   002904  EF86  F014         	goto	u4131
  6327   002908  EF88  F014         	goto	u4130
  6328   00290C                     u4131:
  6329   00290C  EF90  F014         	goto	l4656
  6330   002910                     u4130:
  6331   002910  0100               	movlb	0	; () banked
  6332   002912  B3D2               	btfsc	_flags& (0+255),1,b
  6333   002914  EF8E  F014         	goto	u4141
  6334   002918  EF90  F014         	goto	u4140
  6335   00291C                     u4141:
  6336   00291C  EF2E  F014         	goto	l4636
  6337   002920                     u4140:
  6338   002920                     l4656:
  6339                           
  6340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6341   002920  501F               	movf	dtoa@s^0,w,c
  6342   002922  B4D8               	btfsc	status,2,c
  6343   002924  EF96  F014         	goto	u4151
  6344   002928  EF98  F014         	goto	u4150
  6345   00292C                     u4151:
  6346   00292C  EFA3  F014         	goto	l4662
  6347   002930                     u4150:
  6348   002930                     
  6349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6350   002930  0620               	decf	dtoa@i^0,f,c
  6351   002932  A0D8               	btfss	status,0,c
  6352   002934  0621               	decf	(dtoa@i+1)^0,f,c
  6353   002936                     
  6354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6355   002936  0E64               	movlw	low _dbuf
  6356   002938  2420               	addwf	dtoa@i^0,w,c
  6357   00293A  6ED9               	movwf	fsr2l,c
  6358   00293C  0E01               	movlw	high _dbuf
  6359   00293E  2021               	addwfc	(dtoa@i+1)^0,w,c
  6360   002940  6EDA               	movwf	fsr2h,c
  6361   002942  C01F  FFDF         	movff	dtoa@s,indf2
  6362   002946                     l4662:
  6363                           
  6364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6365   002946  C017  F00F         	movff	dtoa@fp,pad@fp
  6366   00294A  0E64               	movlw	low _dbuf
  6367   00294C  2420               	addwf	dtoa@i^0,w,c
  6368   00294E  6E10               	movwf	pad@buf^0,c
  6369   002950  0E01               	movlw	high _dbuf
  6370   002952  2021               	addwfc	(dtoa@i+1)^0,w,c
  6371   002954  6E11               	movwf	(pad@buf+1)^0,c
  6372   002956  C01D  F012         	movff	dtoa@w,pad@p
  6373   00295A  C01E  F013         	movff	dtoa@w+1,pad@p+1
  6374   00295E  EC51  F018         	call	_pad	;wreg free
  6375   002962  0012               	return		;funcret
  6376   002964                     __end_of_dtoa:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _pad *****************
  6380 ;; Defined at:
  6381 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6384 ;;		 -> sprintf@f(12), 
  6385 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6386 ;;		 -> dbuf(32), 
  6387 ;;  p               2   17[COMRAM] int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  i               2   20[COMRAM] int 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6399 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6403 ;;Total ram usage:        8 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 3
  6406 ;; This function calls:
  6407 ;;		_fputc
  6408 ;;		_fputs
  6409 ;; This function is called by:
  6410 ;;		_dtoa
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text24
  6415   0030A2                     __ptext24:
  6416                           	callstack 0
  6417   0030A2                     _pad:
  6418                           	callstack 22
  6419   0030A2                     
  6420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6421   0030A2  0100               	movlb	0	; () banked
  6422   0030A4  A1D2               	btfss	_flags& (0+255),0,b
  6423   0030A6  EF57  F018         	goto	u4011
  6424   0030AA  EF59  F018         	goto	u4010
  6425   0030AE                     u4011:
  6426   0030AE  EF61  F018         	goto	l4600
  6427   0030B2                     u4010:
  6428   0030B2                     
  6429                           ; BSR set to: 0
  6430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6431   0030B2  C010  F009         	movff	pad@buf,fputs@s
  6432   0030B6  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6433   0030BA  C00F  F00B         	movff	pad@fp,fputs@fp
  6434   0030BE  ECE9  F019         	call	_fputs	;wreg free
  6435   0030C2                     l4600:
  6436                           
  6437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6438   0030C2  BE13               	btfsc	(pad@p+1)^0,7,c
  6439   0030C4  EF68  F018         	goto	u4020
  6440   0030C8  EF66  F018         	goto	u4021
  6441   0030CC                     u4021:
  6442   0030CC  EF6C  F018         	goto	l1234
  6443   0030D0                     u4020:
  6444   0030D0                     
  6445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6446   0030D0  0E00               	movlw	0
  6447   0030D2  6E13               	movwf	(pad@p+1)^0,c
  6448   0030D4  0E00               	movlw	0
  6449   0030D6  6E12               	movwf	pad@p^0,c
  6450   0030D8                     l1234:
  6451                           
  6452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6453   0030D8  0E00               	movlw	0
  6454   0030DA  6E16               	movwf	(pad@i+1)^0,c
  6455   0030DC  0E00               	movlw	0
  6456   0030DE  6E15               	movwf	pad@i^0,c
  6457                           
  6458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6459   0030E0  EF7C  F018         	goto	l4608
  6460   0030E4                     l4604:
  6461                           
  6462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6463   0030E4  0E00               	movlw	0
  6464   0030E6  6E02               	movwf	(fputc@c+1)^0,c
  6465   0030E8  0E20               	movlw	32
  6466   0030EA  6E01               	movwf	fputc@c^0,c
  6467   0030EC  C00F  F003         	movff	pad@fp,fputc@fp
  6468   0030F0  ECFC  F017         	call	_fputc	;wreg free
  6469   0030F4                     
  6470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6471   0030F4  4A15               	infsnz	pad@i^0,f,c
  6472   0030F6  2A16               	incf	(pad@i+1)^0,f,c
  6473   0030F8                     l4608:
  6474                           
  6475                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6476   0030F8  5012               	movf	pad@p^0,w,c
  6477   0030FA  5C15               	subwf	pad@i^0,w,c
  6478   0030FC  5016               	movf	(pad@i+1)^0,w,c
  6479   0030FE  0A80               	xorlw	128
  6480   003100  6E14               	movwf	??_pad^0,c
  6481   003102  5013               	movf	(pad@p+1)^0,w,c
  6482   003104  0A80               	xorlw	128
  6483   003106  5814               	subwfb	??_pad^0,w,c
  6484   003108  A0D8               	btfss	status,0,c
  6485   00310A  EF89  F018         	goto	u4031
  6486   00310E  EF8B  F018         	goto	u4030
  6487   003112                     u4031:
  6488   003112  EF72  F018         	goto	l4604
  6489   003116                     u4030:
  6490   003116                     
  6491                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6492   003116  0100               	movlb	0	; () banked
  6493   003118  B1D2               	btfsc	_flags& (0+255),0,b
  6494   00311A  EF91  F018         	goto	u4041
  6495   00311E  EF93  F018         	goto	u4040
  6496   003122                     u4041:
  6497   003122  EF9B  F018         	goto	l1239
  6498   003126                     u4040:
  6499   003126                     
  6500                           ; BSR set to: 0
  6501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6502   003126  C010  F009         	movff	pad@buf,fputs@s
  6503   00312A  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6504   00312E  C00F  F00B         	movff	pad@fp,fputs@fp
  6505   003132  ECE9  F019         	call	_fputs	;wreg free
  6506   003136                     l1239:
  6507   003136  0012               	return		;funcret
  6508   003138                     __end_of_pad:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function _fputs *****************
  6512 ;; Defined at:
  6513 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6516 ;;		 -> dbuf(32), 
  6517 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6518 ;;		 -> sprintf@f(12), 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;  i               2   12[COMRAM] int 
  6521 ;;  c               1   11[COMRAM] unsigned char 
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  2    8[COMRAM] int 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6531 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;Total ram usage:        6 bytes
  6536 ;; Hardware stack levels used: 1
  6537 ;; Hardware stack levels required when called: 2
  6538 ;; This function calls:
  6539 ;;		_fputc
  6540 ;; This function is called by:
  6541 ;;		_pad
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text25
  6546   0033D2                     __ptext25:
  6547                           	callstack 0
  6548   0033D2                     _fputs:
  6549                           	callstack 22
  6550   0033D2  0E00               	movlw	0
  6551   0033D4  6E0E               	movwf	(fputs@i+1)^0,c
  6552   0033D6  0E00               	movlw	0
  6553   0033D8  6E0D               	movwf	fputs@i^0,c
  6554   0033DA  EFF8  F019         	goto	l4508
  6555   0033DE                     l4504:
  6556   0033DE  C00C  F001         	movff	fputs@c,fputc@c
  6557   0033E2  6A02               	clrf	(fputc@c+1)^0,c
  6558   0033E4  C00B  F003         	movff	fputs@fp,fputc@fp
  6559   0033E8  ECFC  F017         	call	_fputc	;wreg free
  6560   0033EC  4A0D               	infsnz	fputs@i^0,f,c
  6561   0033EE  2A0E               	incf	(fputs@i+1)^0,f,c
  6562   0033F0                     l4508:
  6563   0033F0  500D               	movf	fputs@i^0,w,c
  6564   0033F2  2409               	addwf	fputs@s^0,w,c
  6565   0033F4  6ED9               	movwf	fsr2l,c
  6566   0033F6  500E               	movf	(fputs@i+1)^0,w,c
  6567   0033F8  200A               	addwfc	(fputs@s+1)^0,w,c
  6568   0033FA  6EDA               	movwf	fsr2h,c
  6569   0033FC  50DF               	movf	indf2,w,c
  6570   0033FE  6E0C               	movwf	fputs@c^0,c
  6571   003400  500C               	movf	fputs@c^0,w,c
  6572   003402  A4D8               	btfss	status,2,c
  6573   003404  EF06  F01A         	goto	u3881
  6574   003408  EF08  F01A         	goto	u3880
  6575   00340C                     u3881:
  6576   00340C  EFEF  F019         	goto	l4504
  6577   003410                     u3880:
  6578   003410  0012               	return		;funcret
  6579   003412                     __end_of_fputs:
  6580                           	callstack 0
  6581                           
  6582 ;; *************** function _fputc *****************
  6583 ;; Defined at:
  6584 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6585 ;; Parameters:    Size  Location     Type
  6586 ;;  c               2    0[COMRAM] int 
  6587 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6588 ;;		 -> sprintf@f(12), 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;		None
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2    0[COMRAM] int 
  6593 ;; Registers used:
  6594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6600 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6604 ;;Total ram usage:        8 bytes
  6605 ;; Hardware stack levels used: 1
  6606 ;; Hardware stack levels required when called: 1
  6607 ;; This function calls:
  6608 ;;		_putch
  6609 ;; This function is called by:
  6610 ;;		_pad
  6611 ;;		_vfpfcnvrt
  6612 ;;		_fputs
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text26
  6617   002FF8                     __ptext26:
  6618                           	callstack 0
  6619   002FF8                     _fputc:
  6620                           	callstack 25
  6621   002FF8  5003               	movf	fputc@fp^0,w,c
  6622   002FFA  B4D8               	btfsc	status,2,c
  6623   002FFC  EF02  F018         	goto	u3841
  6624   003000  EF04  F018         	goto	u3840
  6625   003004                     u3841:
  6626   003004  EF0C  F018         	goto	l4492
  6627   003008                     u3840:
  6628   003008  5003               	movf	fputc@fp^0,w,c
  6629   00300A  A4D8               	btfss	status,2,c
  6630   00300C  EF0A  F018         	goto	u3851
  6631   003010  EF0C  F018         	goto	u3850
  6632   003014                     u3851:
  6633   003014  EF11  F018         	goto	l4494
  6634   003018                     u3850:
  6635   003018                     l4492:
  6636   003018  5001               	movf	fputc@c^0,w,c
  6637   00301A  EC23  F01B         	call	_putch
  6638   00301E  EF50  F018         	goto	l1303
  6639   003022                     l4494:
  6640   003022  5003               	movf	fputc@fp^0,w,c
  6641   003024  6ED9               	movwf	fsr2l,c
  6642   003026  6ADA               	clrf	fsr2h,c
  6643   003028  0E0A               	movlw	10
  6644   00302A  26D9               	addwf	fsr2l,f,c
  6645   00302C  50DE               	movf	postinc2,w,c
  6646   00302E  10DE               	iorwf	postinc2,w,c
  6647   003030  B4D8               	btfsc	status,2,c
  6648   003032  EF1D  F018         	goto	u3861
  6649   003036  EF1F  F018         	goto	u3860
  6650   00303A                     u3861:
  6651   00303A  EF38  F018         	goto	l4498
  6652   00303E                     u3860:
  6653   00303E  5003               	movf	fputc@fp^0,w,c
  6654   003040  6ED9               	movwf	fsr2l,c
  6655   003042  6ADA               	clrf	fsr2h,c
  6656   003044  0E0A               	movlw	10
  6657   003046  26D9               	addwf	fsr2l,f,c
  6658   003048  5003               	movf	fputc@fp^0,w,c
  6659   00304A  6EE1               	movwf	fsr1l,c
  6660   00304C  6AE2               	clrf	fsr1h,c
  6661   00304E  0E03               	movlw	3
  6662   003050  26E1               	addwf	fsr1l,f,c
  6663   003052  50DE               	movf	postinc2,w,c
  6664   003054  5CE6               	subwf	postinc1,w,c
  6665   003056  50E6               	movf	postinc1,w,c
  6666   003058  0A80               	xorlw	128
  6667   00305A  6E08               	movwf	(??_fputc+4)^0,c
  6668   00305C  50DE               	movf	postinc2,w,c
  6669   00305E  0A80               	xorlw	128
  6670   003060  5808               	subwfb	(??_fputc+4)^0,w,c
  6671   003062  B0D8               	btfsc	status,0,c
  6672   003064  EF36  F018         	goto	u3871
  6673   003068  EF38  F018         	goto	u3870
  6674   00306C                     u3871:
  6675   00306C  EF50  F018         	goto	l1303
  6676   003070                     u3870:
  6677   003070                     l4498:
  6678   003070  5003               	movf	fputc@fp^0,w,c
  6679   003072  6ED9               	movwf	fsr2l,c
  6680   003074  6ADA               	clrf	fsr2h,c
  6681   003076  0E03               	movlw	3
  6682   003078  26D9               	addwf	fsr2l,f,c
  6683   00307A  50DF               	movf	indf2,w,c
  6684   00307C  6E04               	movwf	??_fputc^0,c
  6685   00307E  5003               	movf	fputc@fp^0,w,c
  6686   003080  6ED9               	movwf	fsr2l,c
  6687   003082  6ADA               	clrf	fsr2h,c
  6688   003084  50DF               	movf	indf2,w,c
  6689   003086  2404               	addwf	??_fputc^0,w,c
  6690   003088  6ED9               	movwf	fsr2l,c
  6691   00308A  6ADA               	clrf	fsr2h,c
  6692   00308C  C001  FFDF         	movff	fputc@c,indf2
  6693   003090  5003               	movf	fputc@fp^0,w,c
  6694   003092  6ED9               	movwf	fsr2l,c
  6695   003094  6ADA               	clrf	fsr2h,c
  6696   003096  0E03               	movlw	3
  6697   003098  26D9               	addwf	fsr2l,f,c
  6698   00309A  2ADE               	incf	postinc2,f,c
  6699   00309C  0E00               	movlw	0
  6700   00309E  22DD               	addwfc	postdec2,f,c
  6701   0030A0                     l1303:
  6702   0030A0  0012               	return		;funcret
  6703   0030A2                     __end_of_fputc:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _putch *****************
  6707 ;; Defined at:
  6708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;  c               1    wreg     unsigned char 
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;  c               1    0[COMRAM] unsigned char 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_fputc
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text27
  6736   003646                     __ptext27:
  6737                           	callstack 0
  6738   003646                     _putch:
  6739                           	callstack 25
  6740   003646  0012               	return		;funcret
  6741   003648                     __end_of_putch:
  6742                           	callstack 0
  6743                           
  6744 ;; *************** function _abs *****************
  6745 ;; Defined at:
  6746 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  a               2    6[COMRAM] int 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;		None
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  2    6[COMRAM] int 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6760 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;Total ram usage:        4 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; This function calls:
  6767 ;;		Nothing
  6768 ;; This function is called by:
  6769 ;;		_dtoa
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           	psect	text28
  6774   0034B0                     __ptext28:
  6775                           	callstack 0
  6776   0034B0                     _abs:
  6777                           	callstack 25
  6778   0034B0  BE08               	btfsc	(abs@a+1)^0,7,c
  6779   0034B2  EF5D  F01A         	goto	u4051
  6780   0034B6  EF5F  F01A         	goto	u4050
  6781   0034BA                     u4051:
  6782   0034BA  EF65  F01A         	goto	l1288
  6783   0034BE                     u4050:
  6784   0034BE  C007  F007         	movff	abs@a,?_abs
  6785   0034C2  C008  F008         	movff	abs@a+1,?_abs+1
  6786   0034C6  EF71  F01A         	goto	l1291
  6787   0034CA                     l1288:
  6788   0034CA  C007  F009         	movff	abs@a,??_abs
  6789   0034CE  C008  F00A         	movff	abs@a+1,??_abs+1
  6790   0034D2  1E09               	comf	??_abs^0,f,c
  6791   0034D4  1E0A               	comf	(??_abs+1)^0,f,c
  6792   0034D6  4A09               	infsnz	??_abs^0,f,c
  6793   0034D8  2A0A               	incf	(??_abs+1)^0,f,c
  6794   0034DA  C009  F007         	movff	??_abs,?_abs
  6795   0034DE  C00A  F008         	movff	??_abs+1,?_abs+1
  6796   0034E2                     l1291:
  6797   0034E2  0012               	return		;funcret
  6798   0034E4                     __end_of_abs:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function ___awmod *****************
  6802 ;; Defined at:
  6803 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  dividend        2    0[COMRAM] int 
  6806 ;;  divisor         2    2[COMRAM] int 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  sign            1    5[COMRAM] unsigned char 
  6809 ;;  counter         1    4[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  2    0[COMRAM] int 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;Total ram usage:        6 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_dtoa
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text29
  6833   002DF0                     __ptext29:
  6834                           	callstack 0
  6835   002DF0                     ___awmod:
  6836                           	callstack 25
  6837   002DF0  0E00               	movlw	0
  6838   002DF2  6E06               	movwf	___awmod@sign^0,c
  6839   002DF4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6840   002DF6  EF01  F017         	goto	u3950
  6841   002DFA  EFFF  F016         	goto	u3951
  6842   002DFE                     u3951:
  6843   002DFE  EF07  F017         	goto	l4568
  6844   002E02                     u3950:
  6845   002E02  6C01               	negf	___awmod@dividend^0,c
  6846   002E04  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6847   002E06  B0D8               	btfsc	status,0,c
  6848   002E08  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6849   002E0A  0E01               	movlw	1
  6850   002E0C  6E06               	movwf	___awmod@sign^0,c
  6851   002E0E                     l4568:
  6852   002E0E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6853   002E10  EF0E  F017         	goto	u3960
  6854   002E14  EF0C  F017         	goto	u3961
  6855   002E18                     u3961:
  6856   002E18  EF12  F017         	goto	l4572
  6857   002E1C                     u3960:
  6858   002E1C  6C03               	negf	___awmod@divisor^0,c
  6859   002E1E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6860   002E20  B0D8               	btfsc	status,0,c
  6861   002E22  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6862   002E24                     l4572:
  6863   002E24  5003               	movf	___awmod@divisor^0,w,c
  6864   002E26  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6865   002E28  B4D8               	btfsc	status,2,c
  6866   002E2A  EF19  F017         	goto	u3971
  6867   002E2E  EF1B  F017         	goto	u3970
  6868   002E32                     u3971:
  6869   002E32  EF3F  F017         	goto	l4588
  6870   002E36                     u3970:
  6871   002E36  0E01               	movlw	1
  6872   002E38  6E05               	movwf	___awmod@counter^0,c
  6873   002E3A  EF23  F017         	goto	l4578
  6874   002E3E                     l4576:
  6875   002E3E  90D8               	bcf	status,0,c
  6876   002E40  3603               	rlcf	___awmod@divisor^0,f,c
  6877   002E42  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6878   002E44  2A05               	incf	___awmod@counter^0,f,c
  6879   002E46                     l4578:
  6880   002E46  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6881   002E48  EF28  F017         	goto	u3981
  6882   002E4C  EF2A  F017         	goto	u3980
  6883   002E50                     u3981:
  6884   002E50  EF1F  F017         	goto	l4576
  6885   002E54                     u3980:
  6886   002E54                     l4580:
  6887   002E54  5003               	movf	___awmod@divisor^0,w,c
  6888   002E56  5C01               	subwf	___awmod@dividend^0,w,c
  6889   002E58  5004               	movf	(___awmod@divisor+1)^0,w,c
  6890   002E5A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6891   002E5C  A0D8               	btfss	status,0,c
  6892   002E5E  EF33  F017         	goto	u3991
  6893   002E62  EF35  F017         	goto	u3990
  6894   002E66                     u3991:
  6895   002E66  EF39  F017         	goto	l4584
  6896   002E6A                     u3990:
  6897   002E6A  5003               	movf	___awmod@divisor^0,w,c
  6898   002E6C  5E01               	subwf	___awmod@dividend^0,f,c
  6899   002E6E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6900   002E70  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6901   002E72                     l4584:
  6902   002E72  90D8               	bcf	status,0,c
  6903   002E74  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6904   002E76  3203               	rrcf	___awmod@divisor^0,f,c
  6905   002E78  2E05               	decfsz	___awmod@counter^0,f,c
  6906   002E7A  EF2A  F017         	goto	l4580
  6907   002E7E                     l4588:
  6908   002E7E  5006               	movf	___awmod@sign^0,w,c
  6909   002E80  B4D8               	btfsc	status,2,c
  6910   002E82  EF45  F017         	goto	u4001
  6911   002E86  EF47  F017         	goto	u4000
  6912   002E8A                     u4001:
  6913   002E8A  EF4B  F017         	goto	l4592
  6914   002E8E                     u4000:
  6915   002E8E  6C01               	negf	___awmod@dividend^0,c
  6916   002E90  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6917   002E92  B0D8               	btfsc	status,0,c
  6918   002E94  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6919   002E96                     l4592:
  6920   002E96  C001  F001         	movff	___awmod@dividend,?___awmod
  6921   002E9A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6922   002E9E  0012               	return		;funcret
  6923   002EA0                     __end_of___awmod:
  6924                           	callstack 0
  6925                           
  6926 ;; *************** function ___awdiv *****************
  6927 ;; Defined at:
  6928 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;  dividend        2    0[COMRAM] int 
  6931 ;;  divisor         2    2[COMRAM] int 
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  quotient        2    6[COMRAM] int 
  6934 ;;  sign            1    5[COMRAM] unsigned char 
  6935 ;;  counter         1    4[COMRAM] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  2    0[COMRAM] int 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;Total ram usage:        8 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; This function calls:
  6952 ;;		Nothing
  6953 ;; This function is called by:
  6954 ;;		_dtoa
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text30
  6959   002D2C                     __ptext30:
  6960                           	callstack 0
  6961   002D2C                     ___awdiv:
  6962                           	callstack 25
  6963   002D2C  0E00               	movlw	0
  6964   002D2E  6E06               	movwf	___awdiv@sign^0,c
  6965   002D30  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6966   002D32  EF9F  F016         	goto	u3890
  6967   002D36  EF9D  F016         	goto	u3891
  6968   002D3A                     u3891:
  6969   002D3A  EFA5  F016         	goto	l4524
  6970   002D3E                     u3890:
  6971   002D3E  6C03               	negf	___awdiv@divisor^0,c
  6972   002D40  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6973   002D42  B0D8               	btfsc	status,0,c
  6974   002D44  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6975   002D46  0E01               	movlw	1
  6976   002D48  6E06               	movwf	___awdiv@sign^0,c
  6977   002D4A                     l4524:
  6978   002D4A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6979   002D4C  EFAC  F016         	goto	u3900
  6980   002D50  EFAA  F016         	goto	u3901
  6981   002D54                     u3901:
  6982   002D54  EFB2  F016         	goto	l4530
  6983   002D58                     u3900:
  6984   002D58  6C01               	negf	___awdiv@dividend^0,c
  6985   002D5A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6986   002D5C  B0D8               	btfsc	status,0,c
  6987   002D5E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6988   002D60  0E01               	movlw	1
  6989   002D62  1A06               	xorwf	___awdiv@sign^0,f,c
  6990   002D64                     l4530:
  6991   002D64  0E00               	movlw	0
  6992   002D66  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6993   002D68  0E00               	movlw	0
  6994   002D6A  6E07               	movwf	___awdiv@quotient^0,c
  6995   002D6C  5003               	movf	___awdiv@divisor^0,w,c
  6996   002D6E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6997   002D70  B4D8               	btfsc	status,2,c
  6998   002D72  EFBD  F016         	goto	u3911
  6999   002D76  EFBF  F016         	goto	u3910
  7000   002D7A                     u3911:
  7001   002D7A  EFE7  F016         	goto	l4552
  7002   002D7E                     u3910:
  7003   002D7E  0E01               	movlw	1
  7004   002D80  6E05               	movwf	___awdiv@counter^0,c
  7005   002D82  EFC7  F016         	goto	l4538
  7006   002D86                     l4536:
  7007   002D86  90D8               	bcf	status,0,c
  7008   002D88  3603               	rlcf	___awdiv@divisor^0,f,c
  7009   002D8A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7010   002D8C  2A05               	incf	___awdiv@counter^0,f,c
  7011   002D8E                     l4538:
  7012   002D8E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7013   002D90  EFCC  F016         	goto	u3921
  7014   002D94  EFCE  F016         	goto	u3920
  7015   002D98                     u3921:
  7016   002D98  EFC3  F016         	goto	l4536
  7017   002D9C                     u3920:
  7018   002D9C                     l4540:
  7019   002D9C  90D8               	bcf	status,0,c
  7020   002D9E  3607               	rlcf	___awdiv@quotient^0,f,c
  7021   002DA0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7022   002DA2  5003               	movf	___awdiv@divisor^0,w,c
  7023   002DA4  5C01               	subwf	___awdiv@dividend^0,w,c
  7024   002DA6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7025   002DA8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7026   002DAA  A0D8               	btfss	status,0,c
  7027   002DAC  EFDA  F016         	goto	u3931
  7028   002DB0  EFDC  F016         	goto	u3930
  7029   002DB4                     u3931:
  7030   002DB4  EFE1  F016         	goto	l4548
  7031   002DB8                     u3930:
  7032   002DB8  5003               	movf	___awdiv@divisor^0,w,c
  7033   002DBA  5E01               	subwf	___awdiv@dividend^0,f,c
  7034   002DBC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7035   002DBE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7036   002DC0  8007               	bsf	___awdiv@quotient^0,0,c
  7037   002DC2                     l4548:
  7038   002DC2  90D8               	bcf	status,0,c
  7039   002DC4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7040   002DC6  3203               	rrcf	___awdiv@divisor^0,f,c
  7041   002DC8  2E05               	decfsz	___awdiv@counter^0,f,c
  7042   002DCA  EFCE  F016         	goto	l4540
  7043   002DCE                     l4552:
  7044   002DCE  5006               	movf	___awdiv@sign^0,w,c
  7045   002DD0  B4D8               	btfsc	status,2,c
  7046   002DD2  EFED  F016         	goto	u3941
  7047   002DD6  EFEF  F016         	goto	u3940
  7048   002DDA                     u3941:
  7049   002DDA  EFF3  F016         	goto	l4556
  7050   002DDE                     u3940:
  7051   002DDE  6C07               	negf	___awdiv@quotient^0,c
  7052   002DE0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7053   002DE2  B0D8               	btfsc	status,0,c
  7054   002DE4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7055   002DE6                     l4556:
  7056   002DE6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7057   002DEA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7058   002DEE  0012               	return		;funcret
  7059   002DF0                     __end_of___awdiv:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function _sendStringSerial4 *****************
  7063 ;; Defined at:
  7064 ;;		line 41 in file "serial.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  string          1    1[COMRAM] PTR unsigned char 
  7067 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), convert_rgb2hue@c_char(20), calibration_routine@cal_state(2
      +0), 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;Total ram usage:        1 bytes
  7084 ;; Hardware stack levels used: 1
  7085 ;; Hardware stack levels required when called: 1
  7086 ;; This function calls:
  7087 ;;		_sendCharSerial4
  7088 ;; This function is called by:
  7089 ;;		_calibration_routine
  7090 ;;		_convert_rgb2hue
  7091 ;;		_send2USART
  7092 ;;		_sendAllReadings
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text31
  7097   0034E4                     __ptext31:
  7098                           	callstack 0
  7099   0034E4                     _sendStringSerial4:
  7100                           	callstack 28
  7101   0034E4                     
  7102                           ;serial.c: 44:     while(*string != 0){
  7103   0034E4  EF7F  F01A         	goto	l5006
  7104   0034E8                     l5000:
  7105                           
  7106                           ;serial.c: 46:   sendCharSerial4(*string++);
  7107   0034E8  5002               	movf	sendStringSerial4@string^0,w,c
  7108   0034EA  6ED9               	movwf	fsr2l,c
  7109   0034EC  6ADA               	clrf	fsr2h,c
  7110   0034EE  50DF               	movf	indf2,w,c
  7111   0034F0  EC02  F01B         	call	_sendCharSerial4
  7112   0034F4  2A02               	incf	sendStringSerial4@string^0,f,c
  7113   0034F6                     
  7114                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  7115   0034F6  0E6A               	movlw	106
  7116   0034F8                     u5757:
  7117   0034F8  2EE8               	decfsz	wreg,f,c
  7118   0034FA  D7FE               	bra	u5757
  7119   0034FC  D000               	nop2	
  7120   0034FE                     l5006:
  7121                           
  7122                           ;serial.c: 44:     while(*string != 0){
  7123   0034FE  5002               	movf	sendStringSerial4@string^0,w,c
  7124   003500  6ED9               	movwf	fsr2l,c
  7125   003502  6ADA               	clrf	fsr2h,c
  7126   003504  50DF               	movf	indf2,w,c
  7127   003506  A4D8               	btfss	status,2,c
  7128   003508  EF88  F01A         	goto	u4681
  7129   00350C  EF8A  F01A         	goto	u4680
  7130   003510                     u4681:
  7131   003510  EF74  F01A         	goto	l5000
  7132   003514                     u4680:
  7133   003514  0012               	return		;funcret
  7134   003516                     __end_of_sendStringSerial4:
  7135                           	callstack 0
  7136                           
  7137 ;; *************** function _sendCharSerial4 *****************
  7138 ;; Defined at:
  7139 ;;		line 35 in file "serial.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  charToSend      1    wreg     unsigned char 
  7142 ;; Auto vars:     Size  Location     Type
  7143 ;;  charToSend      1    0[COMRAM] unsigned char 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7157 ;;Total ram usage:        1 bytes
  7158 ;; Hardware stack levels used: 1
  7159 ;; This function calls:
  7160 ;;		Nothing
  7161 ;; This function is called by:
  7162 ;;		_sendStringSerial4
  7163 ;; This function uses a non-reentrant model
  7164 ;;
  7165                           
  7166                           	psect	text32
  7167   003604                     __ptext32:
  7168                           	callstack 0
  7169   003604                     _sendCharSerial4:
  7170                           	callstack 28
  7171                           
  7172                           ;incstack = 0
  7173                           ;sendCharSerial4@charToSend stored from wreg
  7174   003604  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7175   003606                     l479:
  7176   003606  010E               	movlb	14	; () banked
  7177   003608  A537               	btfss	55,2,b	;volatile
  7178   00360A  EF09  F01B         	goto	u4251
  7179   00360E  EF0B  F01B         	goto	u4250
  7180   003612                     u4251:
  7181   003612  EF03  F01B         	goto	l479
  7182   003616                     u4250:
  7183   003616                     
  7184                           ; BSR set to: 14
  7185                           ;serial.c: 37:     TX4REG = charToSend;
  7186   003616  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7187   00361A                     
  7188                           ; BSR set to: 14
  7189   00361A  0012               	return		;funcret
  7190   00361C                     __end_of_sendCharSerial4:
  7191                           	callstack 0
  7192                           
  7193 ;; *************** function _color_read_Red *****************
  7194 ;; Defined at:
  7195 ;;		line 32 in file "color.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  tmp             2    9[COMRAM] unsigned int 
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  2    4[COMRAM] unsigned int 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;Total ram usage:        7 bytes
  7214 ;; Hardware stack levels used: 1
  7215 ;; Hardware stack levels required when called: 2
  7216 ;; This function calls:
  7217 ;;		_I2C_2_Master_Read
  7218 ;;		_I2C_2_Master_RepStart
  7219 ;;		_I2C_2_Master_Start
  7220 ;;		_I2C_2_Master_Stop
  7221 ;;		_I2C_2_Master_Write
  7222 ;; This function is called by:
  7223 ;;		_reading_hue
  7224 ;;		_calibration_routine
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text33
  7229   0031C8                     __ptext33:
  7230                           	callstack 0
  7231   0031C8                     _color_read_Red:
  7232                           	callstack 27
  7233   0031C8                     
  7234                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7235   0031C8  EC19  F01B         	call	_I2C_2_Master_Start	;wreg free
  7236                           
  7237                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7238   0031CC  0E52               	movlw	82
  7239   0031CE  EC0E  F01B         	call	_I2C_2_Master_Write
  7240                           
  7241                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7242   0031D2  0EB6               	movlw	182
  7243   0031D4  EC0E  F01B         	call	_I2C_2_Master_Write
  7244                           
  7245                           ;color.c: 38:  I2C_2_Master_RepStart();
  7246   0031D8  EC1E  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7247                           
  7248                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7249   0031DC  0E53               	movlw	83
  7250   0031DE  EC0E  F01B         	call	_I2C_2_Master_Write
  7251                           
  7252                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7253   0031E2  0E01               	movlw	1
  7254   0031E4  ECC8  F019         	call	_I2C_2_Master_Read
  7255   0031E8  6E07               	movwf	??_color_read_Red^0,c
  7256   0031EA  5007               	movf	??_color_read_Red^0,w,c
  7257   0031EC  6E0A               	movwf	color_read_Red@tmp^0,c
  7258   0031EE  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7259                           
  7260                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7261   0031F0  0E00               	movlw	0
  7262   0031F2  ECC8  F019         	call	_I2C_2_Master_Read
  7263   0031F6  6E07               	movwf	??_color_read_Red^0,c
  7264   0031F8  5007               	movf	??_color_read_Red^0,w,c
  7265   0031FA  6E09               	movwf	(??_color_read_Red+2)^0,c
  7266   0031FC  6A08               	clrf	(??_color_read_Red+1)^0,c
  7267   0031FE  500A               	movf	color_read_Red@tmp^0,w,c
  7268   003200  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7269   003202  6E0A               	movwf	color_read_Red@tmp^0,c
  7270   003204  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7271   003206  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7272   003208  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7273                           
  7274                           ;color.c: 42:  I2C_2_Master_Stop();
  7275   00320A  EC14  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7276   00320E                     
  7277                           ;color.c: 43:  return tmp;
  7278   00320E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7279   003212  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7280   003216  0012               	return		;funcret
  7281   003218                     __end_of_color_read_Red:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _color_read_Green *****************
  7285 ;; Defined at:
  7286 ;;		line 46 in file "color.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  tmp             2    9[COMRAM] unsigned int 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2    4[COMRAM] unsigned int 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;Total ram usage:        7 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; Hardware stack levels required when called: 2
  7307 ;; This function calls:
  7308 ;;		_I2C_2_Master_Read
  7309 ;;		_I2C_2_Master_RepStart
  7310 ;;		_I2C_2_Master_Start
  7311 ;;		_I2C_2_Master_Stop
  7312 ;;		_I2C_2_Master_Write
  7313 ;; This function is called by:
  7314 ;;		_reading_hue
  7315 ;;		_calibration_routine
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	text34
  7320   003218                     __ptext34:
  7321                           	callstack 0
  7322   003218                     _color_read_Green:
  7323                           	callstack 27
  7324   003218                     
  7325                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7326   003218  EC19  F01B         	call	_I2C_2_Master_Start	;wreg free
  7327                           
  7328                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7329   00321C  0E52               	movlw	82
  7330   00321E  EC0E  F01B         	call	_I2C_2_Master_Write
  7331                           
  7332                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7333   003222  0EB8               	movlw	184
  7334   003224  EC0E  F01B         	call	_I2C_2_Master_Write
  7335                           
  7336                           ;color.c: 52:  I2C_2_Master_RepStart();
  7337   003228  EC1E  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7338                           
  7339                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7340   00322C  0E53               	movlw	83
  7341   00322E  EC0E  F01B         	call	_I2C_2_Master_Write
  7342                           
  7343                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7344   003232  0E01               	movlw	1
  7345   003234  ECC8  F019         	call	_I2C_2_Master_Read
  7346   003238  6E07               	movwf	??_color_read_Green^0,c
  7347   00323A  5007               	movf	??_color_read_Green^0,w,c
  7348   00323C  6E0A               	movwf	color_read_Green@tmp^0,c
  7349   00323E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7350                           
  7351                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7352   003240  0E00               	movlw	0
  7353   003242  ECC8  F019         	call	_I2C_2_Master_Read
  7354   003246  6E07               	movwf	??_color_read_Green^0,c
  7355   003248  5007               	movf	??_color_read_Green^0,w,c
  7356   00324A  6E09               	movwf	(??_color_read_Green+2)^0,c
  7357   00324C  6A08               	clrf	(??_color_read_Green+1)^0,c
  7358   00324E  500A               	movf	color_read_Green@tmp^0,w,c
  7359   003250  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7360   003252  6E0A               	movwf	color_read_Green@tmp^0,c
  7361   003254  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7362   003256  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7363   003258  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7364                           
  7365                           ;color.c: 56:  I2C_2_Master_Stop();
  7366   00325A  EC14  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7367   00325E                     
  7368                           ;color.c: 57:  return tmp;
  7369   00325E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7370   003262  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7371   003266  0012               	return		;funcret
  7372   003268                     __end_of_color_read_Green:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _color_read_Clear *****************
  7376 ;; Defined at:
  7377 ;;		line 75 in file "color.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  tmp             2    9[COMRAM] unsigned int 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  2    4[COMRAM] unsigned int 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7391 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;Total ram usage:        7 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 2
  7398 ;; This function calls:
  7399 ;;		_I2C_2_Master_Read
  7400 ;;		_I2C_2_Master_RepStart
  7401 ;;		_I2C_2_Master_Start
  7402 ;;		_I2C_2_Master_Stop
  7403 ;;		_I2C_2_Master_Write
  7404 ;; This function is called by:
  7405 ;;		_reading_hue
  7406 ;;		_calibration_routine
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text35
  7411   003268                     __ptext35:
  7412                           	callstack 0
  7413   003268                     _color_read_Clear:
  7414                           	callstack 27
  7415   003268                     
  7416                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  7417   003268  EC19  F01B         	call	_I2C_2_Master_Start	;wreg free
  7418                           
  7419                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  7420   00326C  0E52               	movlw	82
  7421   00326E  EC0E  F01B         	call	_I2C_2_Master_Write
  7422                           
  7423                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  7424   003272  0EB4               	movlw	180
  7425   003274  EC0E  F01B         	call	_I2C_2_Master_Write
  7426                           
  7427                           ;color.c: 81:  I2C_2_Master_RepStart();
  7428   003278  EC1E  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7429                           
  7430                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  7431   00327C  0E53               	movlw	83
  7432   00327E  EC0E  F01B         	call	_I2C_2_Master_Write
  7433                           
  7434                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  7435   003282  0E01               	movlw	1
  7436   003284  ECC8  F019         	call	_I2C_2_Master_Read
  7437   003288  6E07               	movwf	??_color_read_Clear^0,c
  7438   00328A  5007               	movf	??_color_read_Clear^0,w,c
  7439   00328C  6E0A               	movwf	color_read_Clear@tmp^0,c
  7440   00328E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7441                           
  7442                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7443   003290  0E00               	movlw	0
  7444   003292  ECC8  F019         	call	_I2C_2_Master_Read
  7445   003296  6E07               	movwf	??_color_read_Clear^0,c
  7446   003298  5007               	movf	??_color_read_Clear^0,w,c
  7447   00329A  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7448   00329C  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7449   00329E  500A               	movf	color_read_Clear@tmp^0,w,c
  7450   0032A0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7451   0032A2  6E0A               	movwf	color_read_Clear@tmp^0,c
  7452   0032A4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7453   0032A6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7454   0032A8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7455                           
  7456                           ;color.c: 85:  I2C_2_Master_Stop();
  7457   0032AA  EC14  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7458   0032AE                     
  7459                           ;color.c: 86:  return tmp;
  7460   0032AE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7461   0032B2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7462   0032B6  0012               	return		;funcret
  7463   0032B8                     __end_of_color_read_Clear:
  7464                           	callstack 0
  7465                           
  7466 ;; *************** function _color_read_Blue *****************
  7467 ;; Defined at:
  7468 ;;		line 60 in file "color.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  tmp             2    9[COMRAM] unsigned int 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  2    4[COMRAM] unsigned int 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;Total ram usage:        7 bytes
  7487 ;; Hardware stack levels used: 1
  7488 ;; Hardware stack levels required when called: 2
  7489 ;; This function calls:
  7490 ;;		_I2C_2_Master_Read
  7491 ;;		_I2C_2_Master_RepStart
  7492 ;;		_I2C_2_Master_Start
  7493 ;;		_I2C_2_Master_Stop
  7494 ;;		_I2C_2_Master_Write
  7495 ;; This function is called by:
  7496 ;;		_reading_hue
  7497 ;;		_calibration_routine
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text36
  7502   0032B8                     __ptext36:
  7503                           	callstack 0
  7504   0032B8                     _color_read_Blue:
  7505                           	callstack 27
  7506   0032B8                     
  7507                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7508   0032B8  EC19  F01B         	call	_I2C_2_Master_Start	;wreg free
  7509                           
  7510                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7511   0032BC  0E52               	movlw	82
  7512   0032BE  EC0E  F01B         	call	_I2C_2_Master_Write
  7513                           
  7514                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7515   0032C2  0EBA               	movlw	186
  7516   0032C4  EC0E  F01B         	call	_I2C_2_Master_Write
  7517                           
  7518                           ;color.c: 66:  I2C_2_Master_RepStart();
  7519   0032C8  EC1E  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7520                           
  7521                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7522   0032CC  0E53               	movlw	83
  7523   0032CE  EC0E  F01B         	call	_I2C_2_Master_Write
  7524                           
  7525                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7526   0032D2  0E01               	movlw	1
  7527   0032D4  ECC8  F019         	call	_I2C_2_Master_Read
  7528   0032D8  6E07               	movwf	??_color_read_Blue^0,c
  7529   0032DA  5007               	movf	??_color_read_Blue^0,w,c
  7530   0032DC  6E0A               	movwf	color_read_Blue@tmp^0,c
  7531   0032DE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7532                           
  7533                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7534   0032E0  0E00               	movlw	0
  7535   0032E2  ECC8  F019         	call	_I2C_2_Master_Read
  7536   0032E6  6E07               	movwf	??_color_read_Blue^0,c
  7537   0032E8  5007               	movf	??_color_read_Blue^0,w,c
  7538   0032EA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7539   0032EC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7540   0032EE  500A               	movf	color_read_Blue@tmp^0,w,c
  7541   0032F0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7542   0032F2  6E0A               	movwf	color_read_Blue@tmp^0,c
  7543   0032F4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7544   0032F6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7545   0032F8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7546                           
  7547                           ;color.c: 70:  I2C_2_Master_Stop();
  7548   0032FA  EC14  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7549   0032FE                     
  7550                           ;color.c: 71:  return tmp;
  7551   0032FE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7552   003302  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7553   003306  0012               	return		;funcret
  7554   003308                     __end_of_color_read_Blue:
  7555                           	callstack 0
  7556                           
  7557 ;; *************** function _I2C_2_Master_Write *****************
  7558 ;; Defined at:
  7559 ;;		line 45 in file "i2c.c"
  7560 ;; Parameters:    Size  Location     Type
  7561 ;;  data_byte       1    wreg     unsigned char 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  data_byte       1    1[COMRAM] unsigned char 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, status,2, status,0, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;Total ram usage:        1 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; Hardware stack levels required when called: 1
  7580 ;; This function calls:
  7581 ;;		_I2C_2_Master_Idle
  7582 ;; This function is called by:
  7583 ;;		_color_writetoaddr
  7584 ;;		_color_read_Red
  7585 ;;		_color_read_Green
  7586 ;;		_color_read_Blue
  7587 ;;		_color_read_Clear
  7588 ;; This function uses a non-reentrant model
  7589 ;;
  7590                           
  7591                           	psect	text37
  7592   00361C                     __ptext37:
  7593                           	callstack 0
  7594   00361C                     _I2C_2_Master_Write:
  7595                           	callstack 27
  7596                           
  7597                           ;incstack = 0
  7598                           ;I2C_2_Master_Write@data_byte stored from wreg
  7599   00361C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7600   00361E                     
  7601                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7602   00361E  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7603   003622                     
  7604                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7605   003622  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7606   003626  0012               	return		;funcret
  7607   003628                     __end_of_I2C_2_Master_Write:
  7608                           	callstack 0
  7609                           
  7610 ;; *************** function _I2C_2_Master_Stop *****************
  7611 ;; Defined at:
  7612 ;;		line 39 in file "i2c.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;		None
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;		None
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:        0 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 1
  7633 ;; This function calls:
  7634 ;;		_I2C_2_Master_Idle
  7635 ;; This function is called by:
  7636 ;;		_color_writetoaddr
  7637 ;;		_color_read_Red
  7638 ;;		_color_read_Green
  7639 ;;		_color_read_Blue
  7640 ;;		_color_read_Clear
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text38
  7645   003628                     __ptext38:
  7646                           	callstack 0
  7647   003628                     _I2C_2_Master_Stop:
  7648                           	callstack 27
  7649   003628                     
  7650                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7651   003628  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7652   00362C                     
  7653                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7654   00362C  010E               	movlb	14	; () banked
  7655   00362E  85DA               	bsf	218,2,b	;volatile
  7656   003630                     
  7657                           ; BSR set to: 14
  7658   003630  0012               	return		;funcret
  7659   003632                     __end_of_I2C_2_Master_Stop:
  7660                           	callstack 0
  7661                           
  7662 ;; *************** function _I2C_2_Master_Start *****************
  7663 ;; Defined at:
  7664 ;;		line 27 in file "i2c.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;		None
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, status,2, status,0, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7682 ;;Total ram usage:        0 bytes
  7683 ;; Hardware stack levels used: 1
  7684 ;; Hardware stack levels required when called: 1
  7685 ;; This function calls:
  7686 ;;		_I2C_2_Master_Idle
  7687 ;; This function is called by:
  7688 ;;		_color_writetoaddr
  7689 ;;		_color_read_Red
  7690 ;;		_color_read_Green
  7691 ;;		_color_read_Blue
  7692 ;;		_color_read_Clear
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text39
  7697   003632                     __ptext39:
  7698                           	callstack 0
  7699   003632                     _I2C_2_Master_Start:
  7700                           	callstack 27
  7701   003632                     
  7702                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7703   003632  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7704   003636                     
  7705                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7706   003636  010E               	movlb	14	; () banked
  7707   003638  81DA               	bsf	218,0,b	;volatile
  7708   00363A                     
  7709                           ; BSR set to: 14
  7710   00363A  0012               	return		;funcret
  7711   00363C                     __end_of_I2C_2_Master_Start:
  7712                           	callstack 0
  7713                           
  7714 ;; *************** function _I2C_2_Master_RepStart *****************
  7715 ;; Defined at:
  7716 ;;		line 33 in file "i2c.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;		None
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;		None
  7721 ;; Return value:  Size  Location     Type
  7722 ;;                  1    wreg      void 
  7723 ;; Registers used:
  7724 ;;		wreg, status,2, status,0, cstack
  7725 ;; Tracked objects:
  7726 ;;		On entry : 0/0
  7727 ;;		On exit  : 0/0
  7728 ;;		Unchanged: 0/0
  7729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;Total ram usage:        0 bytes
  7735 ;; Hardware stack levels used: 1
  7736 ;; Hardware stack levels required when called: 1
  7737 ;; This function calls:
  7738 ;;		_I2C_2_Master_Idle
  7739 ;; This function is called by:
  7740 ;;		_color_read_Red
  7741 ;;		_color_read_Green
  7742 ;;		_color_read_Blue
  7743 ;;		_color_read_Clear
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text40
  7748   00363C                     __ptext40:
  7749                           	callstack 0
  7750   00363C                     _I2C_2_Master_RepStart:
  7751                           	callstack 27
  7752   00363C                     
  7753                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7754   00363C  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7755   003640                     
  7756                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7757   003640  010E               	movlb	14	; () banked
  7758   003642  83DA               	bsf	218,1,b	;volatile
  7759   003644                     
  7760                           ; BSR set to: 14
  7761   003644  0012               	return		;funcret
  7762   003646                     __end_of_I2C_2_Master_RepStart:
  7763                           	callstack 0
  7764                           
  7765 ;; *************** function _I2C_2_Master_Read *****************
  7766 ;; Defined at:
  7767 ;;		line 51 in file "i2c.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  ack             1    wreg     unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  ack             1    2[COMRAM] unsigned char 
  7772 ;;  tmp             1    3[COMRAM] unsigned char 
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      unsigned char 
  7775 ;; Registers used:
  7776 ;;		wreg, status,2, status,0, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;Total ram usage:        3 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 1
  7789 ;; This function calls:
  7790 ;;		_I2C_2_Master_Idle
  7791 ;; This function is called by:
  7792 ;;		_color_read_Red
  7793 ;;		_color_read_Green
  7794 ;;		_color_read_Blue
  7795 ;;		_color_read_Clear
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text41
  7800   003390                     __ptext41:
  7801                           	callstack 0
  7802   003390                     _I2C_2_Master_Read:
  7803                           	callstack 27
  7804                           
  7805                           ; BSR set to: 14
  7806                           ;incstack = 0
  7807                           ;I2C_2_Master_Read@ack stored from wreg
  7808   003390  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7809   003392                     
  7810                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7811   003392  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7812   003396                     
  7813                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7814   003396  010E               	movlb	14	; () banked
  7815   003398  87DA               	bsf	218,3,b	;volatile
  7816                           
  7817                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7818   00339A  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7819   00339E                     
  7820                           ;i2c.c: 57:   tmp = SSP2BUF;
  7821   00339E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7822                           
  7823                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7824   0033A2  ECA0  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7825   0033A6                     
  7826                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7827   0033A6  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7828   0033A8  B4D8               	btfsc	status,2,c
  7829   0033AA  EFD9  F019         	goto	u4661
  7830   0033AE  EFDD  F019         	goto	u4660
  7831   0033B2                     u4661:
  7832   0033B2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7833   0033B4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7834   0033B6  EFDE  F019         	goto	u4678
  7835   0033BA                     u4660:
  7836   0033BA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7837   0033BC                     u4678:
  7838   0033BC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7839   0033BE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7840   0033C0  010E               	movlb	14	; () banked
  7841   0033C2  51DA               	movf	218,w,b	;volatile
  7842   0033C4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7843   0033C6  0BDF               	andlw	-33
  7844   0033C8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7845   0033CA  6FDA               	movwf	218,b	;volatile
  7846   0033CC                     
  7847                           ; BSR set to: 14
  7848                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7849   0033CC  89DA               	bsf	218,4,b	;volatile
  7850   0033CE                     
  7851                           ; BSR set to: 14
  7852                           ;i2c.c: 61:   return tmp;
  7853   0033CE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7854   0033D0                     
  7855                           ; BSR set to: 14
  7856   0033D0  0012               	return		;funcret
  7857   0033D2                     __end_of_I2C_2_Master_Read:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _I2C_2_Master_Idle *****************
  7861 ;; Defined at:
  7862 ;;		line 22 in file "i2c.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;Total ram usage:        1 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; This function calls:
  7883 ;;		Nothing
  7884 ;; This function is called by:
  7885 ;;		_I2C_2_Master_Start
  7886 ;;		_I2C_2_Master_RepStart
  7887 ;;		_I2C_2_Master_Stop
  7888 ;;		_I2C_2_Master_Write
  7889 ;;		_I2C_2_Master_Read
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           	psect	text42
  7894   003540                     __ptext42:
  7895                           	callstack 0
  7896   003540                     _I2C_2_Master_Idle:
  7897                           	callstack 27
  7898   003540                     l166:
  7899   003540  010E               	movlb	14	; () banked
  7900   003542  B5D8               	btfsc	216,2,b	;volatile
  7901   003544  EFA6  F01A         	goto	u4231
  7902   003548  EFA8  F01A         	goto	u4230
  7903   00354C                     u4231:
  7904   00354C  EFA0  F01A         	goto	l166
  7905   003550                     u4230:
  7906   003550                     
  7907                           ; BSR set to: 14
  7908   003550  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7909   003554  0E1F               	movlw	31
  7910   003556  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7911   003558  A4D8               	btfss	status,2,c
  7912   00355A  EFB1  F01A         	goto	u4241
  7913   00355E  EFB3  F01A         	goto	u4240
  7914   003562                     u4241:
  7915   003562  EFA0  F01A         	goto	l166
  7916   003566                     u4240:
  7917   003566                     
  7918                           ; BSR set to: 14
  7919   003566  0012               	return		;funcret
  7920   003568                     __end_of_I2C_2_Master_Idle:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function _ADC_init *****************
  7924 ;; Defined at:
  7925 ;;		line 9 in file "ADC.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      void 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_main
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text43
  7953   0035EA                     __ptext43:
  7954                           	callstack 0
  7955   0035EA                     _ADC_init:
  7956                           	callstack 30
  7957   0035EA                     
  7958                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  7959   0035EA  8C86               	bsf	134,6,c	;volatile
  7960                           
  7961                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  7962   0035EC  010E               	movlb	14	; () banked
  7963   0035EE  8DB4               	bsf	180,6,b	;volatile
  7964                           
  7965                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  7966   0035F0  010F               	movlb	15	; () banked
  7967   0035F2  9958               	bcf	88,4,b	;volatile
  7968   0035F4                     
  7969                           ; BSR set to: 15
  7970                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  7971   0035F4  0EFC               	movlw	-4
  7972   0035F6  1758               	andwf	88,f,b	;volatile
  7973                           
  7974                           ;ADC.c: 17:     ADPCH=0b101110;
  7975   0035F8  0E2E               	movlw	46
  7976   0035FA  6F5F               	movwf	95,b	;volatile
  7977   0035FC                     
  7978                           ; BSR set to: 15
  7979                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  7980   0035FC  9460               	bcf	96,2,c	;volatile
  7981   0035FE                     
  7982                           ; BSR set to: 15
  7983                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  7984   0035FE  8860               	bsf	96,4,c	;volatile
  7985   003600                     
  7986                           ; BSR set to: 15
  7987                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  7988   003600  8E60               	bsf	96,7,c	;volatile
  7989   003602                     
  7990                           ; BSR set to: 15
  7991   003602  0012               	return		;funcret
  7992   003604                     __end_of_ADC_init:
  7993                           	callstack 0
  7994                           
  7995                           	psect	rparam
  7996   000000                     
  7997                           	psect	config
  7998                           
  7999                           ;Config register CONFIG1L @ 0x300000
  8000                           ;	External Oscillator mode Selection bits
  8001                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8002                           ;	Power-up default value for COSC bits
  8003                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8004   300000                     	org	3145728
  8005   300000  AA                 	db	170
  8006                           
  8007                           ;Config register CONFIG1H @ 0x300001
  8008                           ;	unspecified, using default values
  8009                           ;	Clock Out Enable bit
  8010                           ;	CLKOUTEN = 0x1, unprogrammed default
  8011                           ;	Clock Switch Enable bit
  8012                           ;	CSWEN = 0x1, unprogrammed default
  8013                           ;	Fail-Safe Clock Monitor Enable bit
  8014                           ;	FCMEN = 0x1, unprogrammed default
  8015   300001                     	org	3145729
  8016   300001  FF                 	db	255
  8017                           
  8018                           ;Config register CONFIG3L @ 0x300004
  8019                           ;	WDT Period Select bits
  8020                           ;	WDTCPS = 0x1F, unprogrammed default
  8021                           ;	WDT operating mode
  8022                           ;	WDTE = OFF, WDT Disabled
  8023   300004                     	org	3145732
  8024   300004  9F                 	db	159
  8025                           
  8026                           ;Config register CONFIG3H @ 0x300005
  8027                           ;	unspecified, using default values
  8028                           ;	WDT Window Select bits
  8029                           ;	WDTCWS = 0x7, unprogrammed default
  8030                           ;	WDT input clock selector
  8031                           ;	WDTCCS = 0x7, unprogrammed default
  8032   300005                     	org	3145733
  8033   300005  FF                 	db	255
  8034                           tosu	equ	0xFFF
  8035                           tosh	equ	0xFFE
  8036                           tosl	equ	0xFFD
  8037                           stkptr	equ	0xFFC
  8038                           pclatu	equ	0xFFB
  8039                           pclath	equ	0xFFA
  8040                           pcl	equ	0xFF9
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           indf0	equ	0xFEF
  8048                           postinc0	equ	0xFEE
  8049                           postdec0	equ	0xFED
  8050                           preinc0	equ	0xFEC
  8051                           plusw0	equ	0xFEB
  8052                           fsr0h	equ	0xFEA
  8053                           fsr0l	equ	0xFE9
  8054                           wreg	equ	0xFE8
  8055                           indf1	equ	0xFE7
  8056                           postinc1	equ	0xFE6
  8057                           postdec1	equ	0xFE5
  8058                           preinc1	equ	0xFE4
  8059                           plusw1	equ	0xFE3
  8060                           fsr1h	equ	0xFE2
  8061                           fsr1l	equ	0xFE1
  8062                           bsr	equ	0xFE0
  8063                           indf2	equ	0xFDF
  8064                           postinc2	equ	0xFDE
  8065                           postdec2	equ	0xFDD
  8066                           preinc2	equ	0xFDC
  8067                           plusw2	equ	0xFDB
  8068                           fsr2h	equ	0xFDA
  8069                           fsr2l	equ	0xFD9
  8070                           status	equ	0xFD8

Data Sizes:
    Strings     184
    Constant    0
    Data        1
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     92      95
    BANK0           160    102     152
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    reading_hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    S2538$buffer	PTR unsigned char  size(2) Largest target is 0

    S2538$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), convert_rgb2hue@c_char(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), convert_rgb2hue@c_char(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[11]), STR_12(CODE[21]), STR_13(CODE[12]), 
		 -> STR_3(CODE[29]), STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_calibration_routine
    _reading_hue->_convert_rgb2hue
    _send2USART->_sprintf
    _convert_rgb2hue->_sprintf
    ___flsub->___fladd
    ___fldiv->___flsub
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _reading_hue->_convert_rgb2hue

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   68421
                                             90 COMRAM     2     2      0
                                            100 BANK0      2     2      0
                           _ADC_init
                _calibration_routine
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                        _reading_hue
                         _send2USART
 ---------------------------------------------------------------------------------
 (1) _reading_hue                                         56    54      2   43968
                                             71 COMRAM     6     4      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _convert_rgb2hue
                         _send2USART
 ---------------------------------------------------------------------------------
 (1) _send2USART                                          52    50      2   11466
                                             67 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                    104   102      2   31567
                                             67 COMRAM     4     2      2
                                              0 BANK0    100   100      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     956
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4727
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    3802
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2513
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1346
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8    1130
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3083
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 23    22      1   12373
                                             67 COMRAM    23    22      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6   10359
                                             48 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    8607
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    8119
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1452
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1012
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     816
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _reading_hue
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _convert_rgb2hue
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
       _sendStringSerial4
       _sprintf
     _send2USART
       _sendStringSerial4
       _sprintf
   _send2USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     66      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5C      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      61        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 23:56:23 2024

               _color_read_Red 31C8                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
                 ___fldiv@sign 0029                _color_read_Blue 32B8                             l63 347A  
                           l72 3266                             l81 2C62                             l90 259A  
                           l66 35AC                             l75 3306                             l92 25A8  
                           l84 24DE                             l69 3216                             l93 25FA  
                           l78 32B6                             l86 24EC                             l95 2608  
                           l87 253A                             l96 2662                             l89 2548  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003             convert_rgb2hue@max 00B0  
           convert_rgb2hue@hue 00B4             convert_rgb2hue@min 00A8               _color_read_Clear 3268  
             _color_read_Green 3218                            l110 124A                            l120 133C  
                          l104 11D0                            l130 1662                            l122 134C  
                          l106 11E0                            l131 167E                            l116 12D2  
                          l108 123A                            l126 15EA                            l118 12E2  
                          l163 353E                            l172 363A                            l181 3626  
                          l166 3540                            l342 31C6                            l175 3644  
                          l184 33D0                            l281 3602                            l169 3566  
                          l178 3630                            l533 35CA                            l470 35E8  
                          l536 358C                            l801 2B26                            l482 361A  
                          l806 2B6C                            l479 3606                            l488 3514  
                          l833 2A68                            l780 2E9E                            l767 2DEE  
                          l795 2FF6                            _abs 34B0                            _pad 30A2  
                          _hue 00C6            convert_rgb2hue@cMax 0044                   ___awmod@sign 0006  
          convert_rgb2hue@diff 00AC                            wreg 0FE8                   ___flmul@aexp 000E  
                 ___flmul@bexp 0013                   ___flmul@sign 000D                   ___flmul@temp 0018  
                 ___flmul@prod 0014                   ___fltol@exp1 000A                           l1120 2162  
                         l1106 334C                           l1131 2220                           l1123 2126  
                         ?_abs 0007                           l1132 220E                           l1205 244E  
                         l1214 34AE                           l1118 2302                           l1150 1C04  
                         l1303 30A0                           l1311 3410                           l1160 1E60  
                         l1064 186E                           l1129 21A8                           l1081 1988  
                         l1073 1B3E                           l1065 185C                           l1314 3646  
                         l1234 30D8                           l1242 284A                           l1154 1F68  
                         l1090 1A58                           l1066 1822                           l1091 1A46  
                         l1237 3116                           l1157 1DFA                           l1239 3136  
                         l1255 2962                           l1263 2F4C                           l1167 1F2A  
                         l1159 1E72                           l1191 235A                           l1194 24B6  
                         l1291 34E2                           l1259 2F44                           l1284 338E  
                         l1278 27EA                           l1198 23F2                           l5000 34E8  
                         l1288 34CA                           l5002 34F4                           l5004 34F6  
                         l5100 2130                           l5006 34FE                           l5110 2188  
                         l5102 214E                           l5030 1F86                           l5120 21C6  
                         l5112 218E                           l5104 2150                           l5032 1F96  
                         l5040 1FC0                           l5024 1F6A                           l6002 26EC  
                         l5130 2230                           l5122 21CA                           l5114 2198  
                         l5106 2160                           l5050 1FEC                           l5042 1FD0  
                         l5034 1FA6                           l5026 1F76                           l5210 1C70  
                         l5202 1C38                           l5140 2292                           l5132 223C  
                         l5124 21D8                           l5116 21A6                           l5108 2172  
                         l5052 1FFC                           l5060 2026                           l5044 1FD6  
                         l5036 1FB6                           l5028 1F84                           l5300 2F7C  
                         l5220 1CBA                           l5212 1C88                           l5204 1C44  
                         l4502 33D2                           l4510 3568                           l5150 22F0  
                         l5142 22A8                           l5134 224A                           l5126 2206  
                         l5118 21B8                           l5070 2068                           l5062 2036  
                         l5054 200C                           l5046 1FDC                           l5038 1FB8  
                         l5310 2FF4                           l5302 2F8C                           l5230 1D10  
                         l5222 1CCA                           l5214 1C94                           l5206 1C4E  
                         l4520 2D3E                           l4504 33DE                           l4600 30C2  
                         l4512 3584                           l5152 22F6                           l5144 22C2  
                         l5136 2274                           l5064 204C                           l5056 201C  
                         l5048 1FEA                           l5304 2FBA                           l5320 2AD6  
                         l5240 1DB4                           l5232 1D2C                           l5224 1CD6  
                         l5216 1CA0                           l5208 1C64                           l5400 23DC  
                         l4530 2D64                           l4522 2D46                           l4506 33EC  
                         l4610 3126                           l4602 30D0                           l5154 22F8  
                         l5146 22DE                           l5138 2278                           l5090 20EA  
                         l5082 20A0                           l5066 205C                           l5074 207C  
                         l5058 201E                           l5306 2FCA                           l5330 2B64  
                         l5322 2AE6                           l5314 2A6A                           l5250 1E0A  
                         l5242 1DC2                           l5234 1D38                           l5226 1CE6  
                         l5218 1CAE                           l5170 1B6C                           l5162 1B40  
                         l5410 245C                           l5402 23E8                           l4540 2D9C  
                         l4532 2D6C                           l4524 2D4A                           l4516 2D2C  
                         l4612 34B0                           l4508 33F0                           l4604 30E4  
                         l4620 2804                           l4700 26FA                           l5148 22E2  
                         l5092 20F2                           l5084 20BA                           l5076 208C  
                         l5068 2064                           l5308 2FEE                           l5332 2B6A  
                         l5324 2AF4                           l5316 2A98                           l5252 1E18  
                         l5244 1DE0                           l5236 1D54                           l5228 1D00  
                         l5180 1BA8                           l5172 1B7C                           l5164 1B4C  
                         l5420 24A4                           l5412 245E                           l5404 2424  
                         l5500 11F4                           l4550 2DC8                           l4542 2DA2  
                         l4534 2D7E                           l4526 2D58                           l4518 2D30  
                         l4614 34BE                           l4606 30F4                           l4630 283E  
                         l4622 280C                           l4710 2742                           l4702 270A  
                         l5430 3526                           l5094 2102                           l5086 20CA  
                         l5078 208C                           l5326 2B06                           l5318 2AA8  
                         l5262 1E82                           l5270 1ECA                           l5254 1E1C  
                         l5246 1DEA                           l5238 1D7E                           l5190 1BDE  
                         l5182 1BAE                           l5174 1B8C                           l5166 1B5A  
                         l5350 29CE                           l5342 298E                           l5422 24A6  
                         l5414 2462                           l5406 2430                           l5510 12F6  
                         l5502 1226                           ?_pad 000F                           l5440 31C8  
                         l4544 2DB8                           l4536 2D86                           l4552 2DCE  
                         l4528 2D60                           l4560 2DF0                           l4608 30F8  
                         l4640 2894                           l4632 2846                           l4624 281C  
                         l4616 27EC                           l4712 2762                           l4704 271E  
                         l5432 3528                           l5096 2116                           l5088 20DA  
                         l5328 2B14                           l5280 1F3E                           l5272 1EE4  
                         l5264 1E8E                           l5256 1E2A                           l5248 1DF8  
                         l5192 1BEE                           l5184 1BBC                           l5176 1B92  
                         l5168 1B5C                           l4800 1794                           l5360 29FE  
                         l5352 29DC                           l5344 29B8                           l5336 2964  
                         l5416 2486                           l5408 243E                           l5520 140A  
                         l5512 1328                           l5504 125A                           l5442 320E  
                         l4554 2DDE                           l4546 2DC0                           l4538 2D8E  
                         l4570 2E1C                           l4562 2DF4                           l4490 3008  
                         l4650 28E6                           l4642 2898                           l4634 2852  
                         l4626 2822                           l4618 27F0                           l4722 27B8  
                         l4714 2782                           l4706 272E                           l5434 352A  
                         l5426 3516                           l5098 2124                           l5282 1F4C  
                         l5274 1EF8                           l5266 1E9C                           l5258 1E58  
                         l5194 1BF4                           l5186 1BBE                           l5178 1BA2  
                         l4810 17A8                           l4802 1798                           l5370 2A28  
                         l5362 2A08                           l5346 29BA                           l5338 297A  
                         l5418 2496                           l5522 1466                           l5530 15EA  
                         l5514 135C                           l5506 128C                           l5452 32B8  
                         l5460 32AE                           l4740 3606                           l4556 2DE6  
                         l4548 2DC2                           l4580 2E54                           l4572 2E24  
                         l4564 2E02                           l4492 3018                           l4660 2936  
                         l4652 28F6                           l4644 289E                           l4636 285C  
                         l4628 2832                           l4716 279A                           l4708 2738  
                         l5700 2578                           l5436 352C                           l5428 3520  
                         l5284 1F4E                           l5276 1F12                           l5268 1EC6  
                         l5196 1C14                           l5188 1BCE                           l4900 1A06  
                         l4820 17BC                           l4812 17AC                           l4804 179C  
                         l5292 3308                           l5372 2A38                           l5348 29CA  
                         l5380 2306                           l5532 161E                           l5524 1498  
                         l5516 13C2                           l5508 12BE                           l5540 35C2  
                         l5454 32FE                           l5446 3218                           l4742 3616  
                         l4590 2E8E                           l4582 2E6A                           l4574 2E36  
                         l4566 2E0A                           l4494 3022                           l4662 2946  
                         l4654 2910                           l4638 2862                           l4646 28BA  
                         l4670 2ECE                           l4718 27A4                           l4726 27C4  
                         l5710 25D8                           l5702 257A                           l5438 3590  
                         l5630 3448                           l5278 1F2E                           l5286 1F54  
                         l5198 1C24                           l4910 1A3E                           l4902 1A08  
                         l4830 181A                           l4814 17B0                           l4806 17A0  
                         l4822 17C0                           l4750 169C                           l5294 3318  
                         l5374 2A48                           l5358 29F4                           l5382 2316  
                         l5534 162E                           l5526 1528                           l5518 13D8  
                         l5470 0F2C                           l4736 3540                           l5448 325E  
                         l4592 2E96                           l4584 2E72                           l4576 2E3E  
                         l4568 2E0E                           l4496 303E                           l4488 2FF8  
                         l4648 28D4                           l4656 2920                           l4672 2ED6  
                         l4680 2664                           l5720 263C                           l5712 25DA  
                         l5704 2592                           l5632 344C                           l5288 1F58  
                         l4920 1ABC                           l4904 1A16                           l4840 1850  
                         l4832 1830                           l4824 17C4                           l4816 17B4  
                         l4808 17A4                           l4752 16AC                           l4760 16D6  
                         l4744 1680                           l5376 2A58                           l5368 2A1C  
                         l5392 2394                           l5384 2324                           l5528 155A  
                         l5480 1030                           l5472 0F60                           l5464 0EBA  
                         l5640 2B6E                           l5730 35EA                           l4738 3550  
                         l5458 3268                           l4586 2E78                           l4578 2E46  
                         l4498 3070                           l4658 2930                           l4674 2EF2  
                         l4666 2EA0                           l4690 26AC                           l4682 268A  
                         l5722 263E                           l5714 25F2                           l5706 25AA  
                         l5634 3456                           l5298 2F4E                           l4930 1B02  
                         l4914 1A68                           l4922 1ABE                           l4906 1A1A  
                         l4850 18A0                           l4842 185A                           l4834 183C  
                         l4826 17EE                           l4818 17B8                           l4770 1706  
                         l4762 16E6                           l4754 16BC                           l4746 168C  
                         l5394 239C                           l5386 236A                           l5490 10F0  
                         l5482 1064                           l5474 0F94                           l5466 0ECC  
                         l5538 35AE                           l5650 2BA2                           l5642 2B74  
                         l5732 35F4                           l4588 2E7E                           l4596 30A2  
                         l4676 2F12                           l4668 2EA8                           l4692 26B0  
                         l4684 2692                           l5724 2640                           l5716 260E  
                         l5708 25C2                           l5636 3466                           l5740 35CC  
                         l4940 1B2C                           l4932 1B10                           l4924 1ACE  
                         l4916 1A74                           l4908 1A28                           l4860 18DC  
                         l4852 18B0                           l4844 187C                           l4836 1840  
                         l4828 180A                           l4780 1746                           l4772 1714  
                         l4764 16EC                           l4756 16CC                           l4748 169A  
                         l5396 23A8                           l5388 2380                           l5492 1124  
                         l5484 1098                           l5476 0FC8                           l5468 0EFC  
                         l5660 2BD8                           l5652 2BA4                           l5644 2B8C  
                         l5900 2CFA                           l5734 35FC                           l4598 30B2  
                         l4678 2F1A                           l4694 26BC                           l4686 26A0  
                         l4950 3366                           l5726 2642                           l5718 2626  
                         l5638 3470                           l5750 35E6                           l5742 35D6  
                         l4942 1B2E                           l4934 1B16                           l4926 1ADE  
                         l4918 1A82                           l4870 1922                           l4862 18EA  
                         l4854 18BE                           l4846 188C                           l4838 184E  
                         l4790 1780                           l4782 1748                           l4774 1716  
                         l4766 16FE                           l4758 16CE                           l5398 23DA  
                         l5494 1158                           l5486 10B4                           l5478 0FFC  
                         l5670 2C24                           l5662 2BF0                           l5654 2BD2  
                         l5646 2B9E                           l5902 2CFC                           l5736 35FE  
                         l4960 361E                           l4688 26A4                           l4952 3386  
                         l5728 265A                           l5680 24B8                           l5760 3196  
                         l5752 3138                           l5744 35D8                           l4936 1B18  
                         l4928 1AFE                           l4880 199E                           l4872 1956  
                         l4864 18EC                           l4856 18CC                           l4792 1784  
                         l4776 1726                           l4784 1750                           l4768 1700  
                         l5496 118A                           l5488 10BC                           l5672 2C3A  
                         l5664 2C06                           l5656 2BD4                           l5648 2BA0  
                         l5904 2D00                           l5840 2C64                           l5738 3600  
                         l4970 3640                           l4962 3622                           l4698 26C4  
                         l4946 334E                           l5690 2518                           l5682 24BE  
                         l5770 31B8                           l5762 31A0                           l5754 3148  
                         l5746 35E2                           l4938 1B1E                           l4890 19DA  
                         l4882 19AE                           l4874 1958                           l4866 18F6  
                         l4858 18D8                           l4794 1788                           l4786 1760  
                         l4778 1736                           l5498 11BC                           l5674 2C4E  
                         l5666 2C08                           l5658 2BD6                           l5906 2D08  
                         l5850 2C7C                           l5842 2C68                           l4980 33CC  
                         l4972 3392                           l4956 3632                           l4964 3628  
                         l4948 3356                           l5692 251A                           l5684 24D6  
                         l5772 31BA                           l5764 31A2                           l5756 316E  
                         l5748 35E4                           l4892 19DC                           l4876 1968  
                         l4868 18FC                           l4796 178C                           l4788 1772  
                         l5676 2C5A                           l5668 2C0A                           l5908 2D18  
                         l5860 2C9A                           l5852 2C82                           l5844 2C6C  
                         l4982 33CE                           l4974 3396                           l4958 3636  
                         l4966 362C                           l4990 348C                           l5694 2532  
                         l5686 24EE                           l5774 31C4                           l5766 31AC  
                         l5758 3172                           l4894 19EA                           l4886 19C2  
                         l4878 1978                           l4798 1790                           l5870 2CC6  
                         l5862 2CA2                           l5854 2C86                           l5846 2C70  
                         l4976 339E                           l4968 363C                           l4992 3494  
                         l5696 254A                           l5688 2506                           l5768 31AE  
                         l4896 19F2                           l4888 19CC                           l5880 2CD0  
                         l5872 2CC8                           l5864 2CA6                           l5856 2C8A  
                         l5848 2C70                           l4978 33A6                           l4994 34A4  
                         l4986 347C                           l5698 2562                           l4898 19F6  
                         l5890 2CDC                           l5882 2CD2                           l5874 2CCA  
                         l5866 2CAA                           l5858 2C92                           l4988 3484  
                         l5892 2CDE                           l5884 2CD4                           l5876 2CCC  
                         l5868 2CAE                           l4998 34E4                           l5894 2CE0  
                         l5886 2CD6                           l5878 2CCE                           l5896 2CF6  
                         l5888 2CD8                           l5898 2CF8                           STR_1 0E73  
                         STR_2 0EB7                           STR_3 0E22                           STR_4 0EB7  
                         STR_5 0E3F                           STR_6 0EB7                           STR_7 0E01  
                         STR_8 0EB7                           STR_9 0E5A                           u4000 2E8E  
                 _BAUD4CONbits 0EE9                           u4001 2E8A                           u4010 30B2  
                         u4011 30AE                           u4020 30D0                           u4100 28D4  
                         u4021 30CC                           u4101 28D0                           u4030 3116  
                         u4110 28E6                           u4031 3112                           u4111 28E2  
                         u4040 3126                           u4120 28F6                           u4200 272E  
                         u5000 1C14                           u4041 3122                           u4121 28F2  
                         u4201 272A                           u5001 1C10                           u4050 34BE  
                         u4130 2910                           u4210 2762                           u5010 1C24  
                         _T2PR 0FBC                           u4051 34BA                           u4131 290C  
                         u4211 275E                           u5011 1C20                           u4140 2920  
                         u4060 2800                           u4220 2782                           u5100 1EE4  
                         u5020 1D9E                           u4300 1714                           u4141 291C  
                         u4061 27FA                           u4221 277E                           u5101 1EE0  
                         u4301 1710                           u4230 3550                           u4150 2930  
                         u4070 2802                           u5110 1F12                           u5030 1DF8  
                         u4310 1726                           u4231 354C                           u4151 292C  
                         u5111 1F0E                           u5031 1DF4                           u4311 1722  
                         u4240 3566                           u4080 281C                           u4160 2ECE  
                         u5200 2B64                           u5120 1F4C                           u5040 1E18  
                         u4400 186E                           u4320 1736                           u4241 3562  
                         u4081 2818                           u4161 2ECA                           u5201 2B60  
                         u5121 1F48                           u5041 1E14                           u5025 1D94  
                         u4401 186A                           u4321 1732                           u4250 3616  
                         u4090 2832                           u4170 2F44                           u5130 2F7C  
                         u5050 1E2A                           u4410 187C                           u4330 1772  
                         u5210 297A                           u4251 3612                           u4091 282E  
                         u4171 2F40                           u5131 2F78                           u5051 1E26  
                         u4411 1878                           u4331 176E                           u5211 2976  
                         u4180 268A                           u5140 2FBA                           u5060 1E58  
                         u4500 19DA                           u4420 188C                           u4340 1780  
                         u4260 169A                           u5220 29AE                           u5300 2380  
                         u4181 2686                           u5141 2FB6                           u5061 1E54  
                         u4501 19D6                           u4421 1888                           u4341 177C  
                         u4261 1696                           u5301 237C                           u4190 270A  
                         u5150 2FEE                           u5070 1E6E                           u4510 19EA  
                         u4430 18BE                           u4350 17EE                           u4270 16AC  
                         u5230 29DC                           u5310 23D6                           u4191 2706  
                         u5151 2FEA                           u5071 1E6A                           u4511 19E6  
                         u4431 18BA                           u4351 17EA                           u4271 16A8  
                         u5231 29D8                           u5311 23D2                           u5160 2A98  
                         u5080 1E82                           u4600 1ACE                           u4520 1A06  
                         u4440 18CC                           u4360 1806                           u4280 16BC  
                         u5240 29F0                           u5320 2420                           u5400 1226  
                         u5161 2A94                           u5081 1E7E                           u4601 1ACA  
                         u4521 1A02                           u4441 18C8                           u4361 1800  
                         u4281 16B8                           u5241 29EC                           u5225 29A4  
                         u5321 241C                           u5401 1222                           u5170 2AD6  
                         u5090 1E9C                           u4610 1ADE                           u4530 1A16  
                         u4450 18EA                           u4370 1808                           u4290 16FE  
                         u5250 2A18                           u5330 243E                           u5410 128C  
                         u5171 2AD2                           u5091 1E98                           u4611 1ADA  
                         u4531 1A12                           u4451 18E6                           u4291 16FA  
                         u5251 2A14                           u5331 243A                           u5411 1288  
                         u3900 2D58                           u5180 2AF4                           u4620 1AFE  
                         u4540 1A28                           u4460 1922                           u4380 1830  
                         u5260 2A38                           u5340 244E                           u5420 12BE  
                         u3901 2D54                           u5181 2AF0                           u4621 1AFA  
                         u4541 1A24                           u4461 191E                           u4381 182C  
                         u5261 2A34                           u5341 244A                           u5421 12BA  
                         u3910 2D7E                           u4710 1F84                           u5190 2B14  
                         u4630 1B10                           u4550 1A3E                           u4470 1968  
                         u4390 184E                           u5270 2A48                           u5350 245C  
                         u5430 1328                           u3911 2D7A                           u4711 1F80  
                         u5191 2B10                           u4631 1B0C                           u4551 1A3A  
                         u4471 1964                           u4391 184A                           u5271 2A44  
                         u5351 2458                           u5431 1324                           u3920 2D9C  
                         u3840 3008                           u4800 2124                           u4720 1F96  
                         u4640 1B2C                           u4560 1A54                           u4480 199E  
                         u5360 2496                           u5280 2316                           u5440 13C2  
                         u3921 2D98                           u3841 3004                           u4801 2120  
                         u4721 1F92                           u4641 1B28                           u4561 1A50  
                         u4481 199A                           u5361 2492                           u5281 2312  
                         u5441 13BE                           u3930 2DB8                           u3850 3018  
                         u4650 3386                           u4810 214E                           u4730 1FA6  
                         u4570 1A68                           u4490 19AE                           u5370 24A4  
                         u5290 2324                           u5450 140A                           u3931 2DB4  
                         u3851 3014                           u4651 3382                           u4811 214A  
                         u4731 1FA2                           u4571 1A64                           u4491 19AA  
                         u5371 24A0                           u5291 2320                           u5451 1406  
                         u4660 33BA                           u3940 2DDE                           u3860 303E  
                         u4900 224A                           u4820 2172                           u4740 1FEA  
                         u4580 1A82                           u5460 1498                           u5380 118A  
                         u4661 33B2                           u3941 2DDA                           u3861 303A  
                         u4901 2246                           u4821 216E                           u4741 1FE6  
                         u4581 1A7E                           u5461 1494                           u5381 1186  
                         u3950 2E02                           u3870 3070                           u4910 2292  
                         u4830 2188                           u4750 1FFC                           u4590 1ABC  
                         u5470 155A                           u5390 11BC                           u3951 2DFE  
                         u3871 306C                           u4911 228E                           u4831 2184  
                         u4751 1FF8                           u4591 1AB8                           u5471 1556  
                         u5391 11B8                           u4680 3514                           u3960 2E1C  
                         u3880 3410                           u5560 24EC                           u4920 22C2  
                         u4840 21A6                           u4760 200C                           u5480 162E  
                         u4681 3510                           u3961 2E18                           u3881 340C  
                         u5561 24E8                           u4921 22BE                           u4841 21A2  
                         u4761 2008                           u5481 162A                           u3890 2D3E  
                         u3970 2E36                           u5570 2548                           u4930 22F0  
                         u4850 21C6                           u4770 204C                           u3891 2D3A  
                         u3971 2E32                           u5571 2544                           u5707 345C  
                         u4931 22EC                           u4851 21C2                           u4771 2048  
                         u3980 2E54                           u5580 25A8                           u4860 21D8  
                         u4780 208C                           u4940 1B5A                           u3981 2E50  
                         u5581 25A4                           u5717 24F8                           u4861 21D4  
                         u4781 2088                           u4941 1B56                           u4678 33BC  
                         u3990 2E6A                           u5590 2608                           u4870 2206  
                         u4790 2102                           u4950 1B6C                           u3991 2E66  
                         u5591 2604                           u5727 2554                           u4871 2202  
                         u4791 20FE                           u4951 1B68                           u4880 221C  
                         u4960 1B7C                           u5737 25B4                           u4881 2218  
                         u4961 1B78                           u5657 2CEA                           u4890 2230  
                         u4970 1BBC                           u5747 2618                           u4891 222C  
                         u4971 1BB8                           u5667 2B7E                           u4980 1BCE  
                         u5757 34F8                           u4981 1BCA                           u5677 2BAE  
                         u4990 1BDE                           u4991 1BDA                           u5687 2BE2  
                         u5697 2C16                           abs@a 0007                           _dbuf 0164  
                         _main 2C64                           _dtoa 27EC           convert_rgb2hue@cCurr 0045  
                         _prec 00D0                           pad@i 0015                           pad@p 0012  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           prodh 0FF4  
                         prodl 0FF3                           start 0000               __end_of_ADC_init 3604  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 3218                   ___param_bank 0000  
               reading_hue@hue 004C                          ??_abs 0009                          ??_pad 0014  
                ___fltol@sign1 0009                __end_of___fladd 1B40                          ?_main 0001  
                        ?_dtoa 0017                          _ADPCH 0F5F                __end_of___fldiv 2304  
              __end_of___awdiv 2DF0                          STR_10 0EB7                          STR_11 0EAC  
                        STR_12 0E8B                          STR_13 0EA0                __end_of___awmod 2EA0  
              __end_of___flmul 1F6A                __end_of___flsub 334E                __end_of___fltol 2A6A  
              ___awdiv@divisor 0003                ___awdiv@counter 0005              ??_convert_rgb2hue 0046  
                 vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 361C     __end_of_I2C_2_Master_Start 363C  
   __end_of_I2C_2_Master_Write 3628                          _flags 00D2            read_prec_or_width@c 0009  
          read_prec_or_width@n 000A                          _fputc 2FF8                          _fputs 33D2  
                        pad@fp 000F                          _width 00CE                          _putch 3646  
                        dtoa@d 0018                          dtoa@i 0020                          dtoa@p 001C  
                        dtoa@s 001F                          dtoa@w 001D                   ?_reading_hue 0048  
        convert_rgb2hue@c_char 0060                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 34B0          convert_rgb2hue@redmax 0078        __end_of_color_read_Blue 3308  
        _I2C_2_Master_RepStart 363C                ?_color_read_Red 0005                __initialization 3412  
                 __end_of_main 2D2C                   __end_of_dtoa 2964                         ??_main 005B  
                       ??_dtoa 001A                  __activetblptr 0003     __end_of_read_prec_or_width 2F4E  
                       ?_fputc 0001                         ?_fputs 0009                         _ADRESH 0F64  
                       _CCPR1H 0FAA                         _CCPR2H 0FA6                         _CCPR3H 0F25  
                       _CCPR4H 0F21               ___awdiv@dividend 0001                         ?_putch 0001  
                       _RC0PPS 0E62                         _RC4REG 0EE3                         _RE2PPS 0E74  
                       _RD5PPS 0E6F                         _RC7PPS 0E69                         _RE4PPS 0E76  
                       _RD6PPS 0E70                         _RG6PPS 0E88                  vfpfcnvrt@done 002B  
     __end_of_color_click_init 347C                         _RX4PPS 0E15                         _TX4REG 0EE4  
             __end_of___xxtofl 24B8    convert_rgb2hue@greencurrent 007C                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 0030                         ___flge 2A6A                         ___fleq 2F4E  
                    ??___fladd 0009                         ___wmul 3568                      ??___fldiv 0021  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___flmul 0009  
                    ??___flsub 0019                      ??___fltol 0005           read_prec_or_width@ap 0008  
                       clear_0 342A                         clear_1 3436               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         _motorL 00DE                         _motorR 00D5  
                       isa$std 0001                ___awmod@counter 0005             send2USART@hue_char 0060  
                       pad@buf 0010                         dtoa@fp 0017                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                         fputs@s 0009  
                 __mediumconst 0000        calibration_routine@cCal 0044                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001         convert_rgb2hue@bluemax 0088                         putch@c 0001  
             __end_of_vfprintf 3390              ??_initDCmotorsPWM 0003                      ??_sprintf 0037  
                   ___flge@ff1 0001                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 3442  
     __end_of_color_read_Clear 32B8       __end_of_color_read_Green 3268         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 3648                  __end_of_fputc 30A2  
                __end_of_fputs 3412                  __end_of_putch 3648               reading_hue@cCurr 0048  
                   ??_ADC_init 0001                        ??_fputc 0004                        ??_fputs 000C  
                      ??_putch 0001                     __pbssBANK0 00C6                     __pbssBANK1 0100  
            _color_writetoaddr 358E                   _T2CLKCONbits 0FBF                _convert_rgb2hue 0EBA  
                      ?___flge 0001                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___wmul 0001            ??_color_writetoaddr 0004                      ?___xxtofl 0001  
          _convert_rgb2hue$390 00A0            _convert_rgb2hue$391 00A4            _convert_rgb2hue$388 0098  
          _convert_rgb2hue$389 009C                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 35AE                      _ADREFbits 0F58  
           _I2C_2_Master_Start 3632                     _initUSART4 35CC             _I2C_2_Master_Write 361C  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___fladd 1680                        ___fldiv 1F6A  
                      ___awdiv 2D2C                        ___awmod 2DF0                        ___flmul 1B40  
                      ___flsub 3308                        ___fltol 2964            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D                   __psmallconst 0E00  
                      __pcinit 3412                        __ramtop 0E00                     _send2USART 35AE  
                      __ptext0 2C64                        __ptext1 2B6E                        __ptext2 35AE  
                      __ptext3 0EBA                        __ptext4 2304                        __ptext5 2964  
                      __ptext6 3308                        __ptext7 1680                        __ptext8 1B40  
                      __ptext9 2A6A                      _T2CONbits 0FBD          read_prec_or_width@fmt 0007  
                   ??___xxtofl 0005               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 005F                        _sprintf 347C                        main@hue 00C4  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 3442  
                      fputc@fp 0003        __end_of_convert_rgb2hue 1680                        fputs@fp 000B  
            ?_color_click_init 0001             _read_prec_or_width 2EA0             ??_color_click_init 0005  
      convert_rgb2hue@clearmax 0090               _colorCalibration 00EF              __end_of_vfpfcnvrt 27EC  
                      postdec2 0FDD            ?_read_prec_or_width 0007                        postinc0 0FEE  
                      postinc1 0FE6                        postinc2 0FDE               vfpfcnvrt@convarg 0027  
                   ??_vfprintf 0030        convert_rgb2hue@greenmax 0080                   _colorCurrent 00E7  
              _initDCmotorsPWM 3138                      _PORTFbits 0F8E                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 0F81                      _TRISCbits 0F83  
                    _TRISDbits 0F84                      _TRISEbits 0F85                      _TRISFbits 0F86  
                    _TRISGbits 0F87                      _TRISHbits 0F88               convert_rgb2hue@b 00C0  
             convert_rgb2hue@c 0094           ??_read_prec_or_width 0009               convert_rgb2hue@g 00BC  
                  ___fldiv@grs 002C               convert_rgb2hue@r 00B8                    ___fldiv@rem 0025  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 000F  
                  _CCP1CONbits 0FAB            _calibration_routine 24B8              ?_color_read_Clear 0005  
                 _EUSART4RXbuf 0150                   _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005     convert_rgb2hue@bluecurrent 0084                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
           ??_color_read_Clear 0007             ??_color_read_Green 0007      convert_rgb2hue@redcurrent 0074  
               __end_of___flge 2B6E                 __end_of___fleq 2FF8                    vfpfcnvrt@ap 0024  
                  vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022                 __end_of___wmul 358E  
                  ?_send2USART 0044           ?_calibration_routine 0044            color_read_Clear@tmp 000A  
          start_initialization 3412   calibration_routine@cal_state 0047                    __end_of_abs 34E4  
                  __end_of_pad 3138                  _TxBufWriteCnt 005E               ?_convert_rgb2hue 0044  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 31C8                    vfprintf@fmt 002E  
                     ??___flge 0009                       ??___fleq 0009                       ??___wmul 0005  
                  __pdataBANK0 00F7          ??_calibration_routine 0045                      ___fladd@a 0005  
                    ___fladd@b 0001                      ___fldiv@a 001D                      ___fldiv@b 0019  
                    ___flmul@a 0005                      ___flmul@b 0001                    __pbssCOMRAM 005D  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
                ??_reading_hue 004A                      _dtoa$2617 001A                       ?___fladd 0001  
                     ?___fldiv 0019                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 0001                       ?___flsub 0011                       ?___fltol 0001  
                 _readingIndex 00D3           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 3540              _I2C_2_Master_Init 3516  
            _I2C_2_Master_Read 3390              _I2C_2_Master_Stop 3628                   _RxBufReadCnt 00D4  
                     _ADC_init 35EA             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0031              _sendStringSerial4 34E4            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D            __end_of_reading_hue 2C64                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0003                       _SSP2STAT 0ED8                      _vfpfcnvrt 2664  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 3568      __end_of_I2C_2_Master_Init 3540  
    __end_of_I2C_2_Master_Read 33D2              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 3632  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 013C              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005D      __end_of_sendStringSerial4 3516  __end_of_I2C_2_Master_RepStart 3646  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 002F                       __Lrparam 0000                     vfprintf@fp 002D  
                   ?_vfpfcnvrt 0022                   ??_send2USART 0046                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 00F7                     sprintf@fmt 0032  
                     ___xxtofl 2304             __end_of_initUSART4 35EA                       __ptext10 2F4E  
                     __ptext11 1F6A                       __ptext20 2664                       __ptext12 35CC  
                     __ptext21 2EA0                       __ptext13 3138                       __ptext30 2D2C  
                     __ptext22 3568                       __ptext14 3448                       __ptext31 34E4  
                     __ptext23 27EC                       __ptext15 358E                       __ptext40 363C  
                     __ptext32 3604                       __ptext24 30A2                       __ptext16 3516  
                     __ptext41 3390                       __ptext33 31C8                       __ptext25 33D2  
                     __ptext17 24B8                       __ptext42 3540                       __ptext34 3218  
                     __ptext26 2FF8                       __ptext18 347C                       __ptext43 35EA  
                     __ptext35 3268                       __ptext27 3646                       __ptext19 334E  
                     __ptext36 32B8                       __ptext28 34B0                       __ptext37 361C  
                     __ptext29 2DF0                       __ptext38 3628                       __ptext39 3632  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                    _reading_hue 2B6E  
           __end_of_send2USART 35CC                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     _vfprintf 334E                      sprintf@ap 0037    __end_of_calibration_routine 2664  
  convert_rgb2hue@clearcurrent 008C                  send2USART@hue 0044                    ??_vfpfcnvrt 0025  
             _color_click_init 3448                       sprintf@f 0038                       sprintf@s 0031  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 3604                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
