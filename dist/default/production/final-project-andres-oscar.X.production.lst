

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 13 15:04:17 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 21/07/2023 GMT
    63                           ; 
    64                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F67K40 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97                           	psect	idataBANK0
    98   003680                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _dataFlag
   102   003680  01                 	db	1
   103   000000                     _TX4REG	set	3812
   104   000000                     _RC4STAbits	set	3815
   105   000000                     _SP4BRGH	set	3814
   106   000000                     _LATFbits	set	3966
   107   000000                     _LATHbits	set	3968
   108   000000                     _TRISFbits	set	3974
   109   000000                     _TRISAbits	set	3969
   110   000000                     _TRISEbits	set	3973
   111   000000                     _TRISGbits	set	3975
   112   000000                     _TRISDbits	set	3972
   113   000000                     _PORTFbits	set	3982
   114   000000                     _SSP2CON2bits	set	3802
   115   000000                     _RX4PPS	set	3605
   116   000000                     _SSP2CLKPPS	set	3612
   117   000000                     _SSP2DATPPS	set	3613
   118   000000                     _ANSELDbits	set	3751
   119   000000                     _SSP2ADD	set	3798
   120   000000                     _SSP2CON1bits	set	3801
   121   000000                     _LATAbits	set	3961
   122   000000                     _LATEbits	set	3965
   123   000000                     _LATGbits	set	3967
   124   000000                     _LATCbits	set	3963
   125   000000                     _LATDbits	set	3964
   126   000000                     _CCPR2H	set	4006
   127   000000                     _CCPR1H	set	4010
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _SSP2CON2	set	3802
   133   000000                     _CCPR4H	set	3873
   134   000000                     _CCPR3H	set	3877
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _ANSELFbits	set	3764
   137   000000                     _SSP2BUF	set	3797
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RC7PPS	set	3689
   142   000000                     _RD5PPS	set	3695
   143   000000                     _RE2PPS	set	3700
   144   000000                     _RD6PPS	set	3696
   145   000000                     _CCP1CONbits	set	4011
   146   000000                     _CCPTMRS0bits	set	4013
   147   000000                     _T2PR	set	4028
   148   000000                     _T2CONbits	set	4029
   149   000000                     _CCP2CONbits	set	4007
   150   000000                     _CCP3CONbits	set	3878
   151   000000                     _ADREFbits	set	3928
   152   000000                     _CCP4CONbits	set	3874
   153   000000                     _TRISHbits	set	3976
   154   000000                     _TRISCbits	set	3971
   155   000000                     _ADPCH	set	3935
   156   000000                     _ADRESH	set	3940
   157   000000                     _ADCON0bits	set	3936
   158   000000                     _RE4PPS	set	3702
   159   000000                     _RG6PPS	set	3720
   160   000000                     _T2CLKCONbits	set	4031
   161   000000                     _T2HLTbits	set	4030
   162                           
   163                           	psect	smallconst
   164   000E00                     __psmallconst:
   165                           	callstack 0
   166   000E00  00                 	db	0
   167   000E01                     STR_7:
   168                           
   169                           ; BSR set to: 15
   170   000E01  43                 	db	67	;'C'
   171   000E02  61                 	db	97	;'a'
   172   000E03  6C                 	db	108	;'l'
   173   000E04  69                 	db	105	;'i'
   174   000E05  62                 	db	98	;'b'
   175   000E06  72                 	db	114	;'r'
   176   000E07  61                 	db	97	;'a'
   177   000E08  74                 	db	116	;'t'
   178   000E09  69                 	db	105	;'i'
   179   000E0A  6F                 	db	111	;'o'
   180   000E0B  6E                 	db	110	;'n'
   181   000E0C  20                 	db	32
   182   000E0D  73                 	db	115	;'s'
   183   000E0E  74                 	db	116	;'t'
   184   000E0F  61                 	db	97	;'a'
   185   000E10  74                 	db	116	;'t'
   186   000E11  65                 	db	101	;'e'
   187   000E12  20                 	db	32
   188   000E13  3D                 	db	61	;'='
   189   000E14  20                 	db	32
   190   000E15  20                 	db	32
   191   000E16  77                 	db	119	;'w'
   192   000E17  68                 	db	104	;'h'
   193   000E18  69                 	db	105	;'i'
   194   000E19  74                 	db	116	;'t'
   195   000E1A  65                 	db	101	;'e'
   196   000E1B  20                 	db	32
   197   000E1C  6C                 	db	108	;'l'
   198   000E1D  69                 	db	105	;'i'
   199   000E1E  67                 	db	103	;'g'
   200   000E1F  68                 	db	104	;'h'
   201   000E20  74                 	db	116	;'t'
   202   000E21  00                 	db	0
   203   000E22                     STR_3:
   204                           
   205                           ; BSR set to: 15
   206   000E22  43                 	db	67	;'C'
   207   000E23  61                 	db	97	;'a'
   208   000E24  6C                 	db	108	;'l'
   209   000E25  69                 	db	105	;'i'
   210   000E26  62                 	db	98	;'b'
   211   000E27  72                 	db	114	;'r'
   212   000E28  61                 	db	97	;'a'
   213   000E29  74                 	db	116	;'t'
   214   000E2A  69                 	db	105	;'i'
   215   000E2B  6F                 	db	111	;'o'
   216   000E2C  6E                 	db	110	;'n'
   217   000E2D  20                 	db	32
   218   000E2E  73                 	db	115	;'s'
   219   000E2F  74                 	db	116	;'t'
   220   000E30  61                 	db	97	;'a'
   221   000E31  74                 	db	116	;'t'
   222   000E32  65                 	db	101	;'e'
   223   000E33  20                 	db	32
   224   000E34  3D                 	db	61	;'='
   225   000E35  20                 	db	32
   226   000E36  67                 	db	103	;'g'
   227   000E37  72                 	db	114	;'r'
   228   000E38  65                 	db	101	;'e'
   229   000E39  65                 	db	101	;'e'
   230   000E3A  6E                 	db	110	;'n'
   231   000E3B  20                 	db	32
   232   000E3C  0A                 	db	10
   233   000E3D  0D                 	db	13
   234   000E3E  00                 	db	0
   235   000E3F                     STR_5:
   236                           
   237                           ; BSR set to: 15
   238   000E3F  43                 	db	67	;'C'
   239   000E40  61                 	db	97	;'a'
   240   000E41  6C                 	db	108	;'l'
   241   000E42  69                 	db	105	;'i'
   242   000E43  62                 	db	98	;'b'
   243   000E44  72                 	db	114	;'r'
   244   000E45  61                 	db	97	;'a'
   245   000E46  74                 	db	116	;'t'
   246   000E47  69                 	db	105	;'i'
   247   000E48  6F                 	db	111	;'o'
   248   000E49  6E                 	db	110	;'n'
   249   000E4A  20                 	db	32
   250   000E4B  73                 	db	115	;'s'
   251   000E4C  74                 	db	116	;'t'
   252   000E4D  61                 	db	97	;'a'
   253   000E4E  74                 	db	116	;'t'
   254   000E4F  65                 	db	101	;'e'
   255   000E50  3D                 	db	61	;'='
   256   000E51  20                 	db	32
   257   000E52  62                 	db	98	;'b'
   258   000E53  6C                 	db	108	;'l'
   259   000E54  75                 	db	117	;'u'
   260   000E55  65                 	db	101	;'e'
   261   000E56  20                 	db	32
   262   000E57  0A                 	db	10
   263   000E58  0D                 	db	13
   264   000E59  00                 	db	0
   265   000E5A                     STR_9:
   266                           
   267                           ; BSR set to: 15
   268   000E5A  43                 	db	67	;'C'
   269   000E5B  41                 	db	65	;'A'
   270   000E5C  4C                 	db	76	;'L'
   271   000E5D  49                 	db	73	;'I'
   272   000E5E  42                 	db	66	;'B'
   273   000E5F  52                 	db	82	;'R'
   274   000E60  41                 	db	65	;'A'
   275   000E61  54                 	db	84	;'T'
   276   000E62  49                 	db	73	;'I'
   277   000E63  4F                 	db	79	;'O'
   278   000E64  4E                 	db	78	;'N'
   279   000E65  20                 	db	32
   280   000E66  43                 	db	67	;'C'
   281   000E67  4F                 	db	79	;'O'
   282   000E68  4D                 	db	77	;'M'
   283   000E69  50                 	db	80	;'P'
   284   000E6A  4C                 	db	76	;'L'
   285   000E6B  45                 	db	69	;'E'
   286   000E6C  54                 	db	84	;'T'
   287   000E6D  45                 	db	69	;'E'
   288   000E6E  44                 	db	68	;'D'
   289   000E6F  20                 	db	32
   290   000E70  0A                 	db	10
   291   000E71  0D                 	db	13
   292   000E72  00                 	db	0
   293   000E73                     STR_1:
   294                           
   295                           ; BSR set to: 15
   296   000E73  43                 	db	67	;'C'
   297   000E74  61                 	db	97	;'a'
   298   000E75  6C                 	db	108	;'l'
   299   000E76  69                 	db	105	;'i'
   300   000E77  62                 	db	98	;'b'
   301   000E78  72                 	db	114	;'r'
   302   000E79  61                 	db	97	;'a'
   303   000E7A  74                 	db	116	;'t'
   304   000E7B  69                 	db	105	;'i'
   305   000E7C  6F                 	db	111	;'o'
   306   000E7D  6E                 	db	110	;'n'
   307   000E7E  20                 	db	32
   308   000E7F  73                 	db	115	;'s'
   309   000E80  74                 	db	116	;'t'
   310   000E81  61                 	db	97	;'a'
   311   000E82  74                 	db	116	;'t'
   312   000E83  65                 	db	101	;'e'
   313   000E84  20                 	db	32
   314   000E85  3D                 	db	61	;'='
   315   000E86  20                 	db	32
   316   000E87  72                 	db	114	;'r'
   317   000E88  65                 	db	101	;'e'
   318   000E89  64                 	db	100	;'d'
   319   000E8A  00                 	db	0
   320   000E8B                     
   321                           ; BSR set to: 15
   322   000E8B  56                 	db	86	;'V'
   323   000E8C  6F                 	db	111	;'o'
   324   000E8D  6C                 	db	108	;'l'
   325   000E8E  74                 	db	116	;'t'
   326   000E8F  61                 	db	97	;'a'
   327   000E90  67                 	db	103	;'g'
   328   000E91  65                 	db	101	;'e'
   329   000E92  20                 	db	32
   330   000E93  3D                 	db	61	;'='
   331   000E94  20                 	db	32
   332   000E95  25                 	db	37
   333   000E96  64                 	db	100	;'d'
   334   000E97  2E                 	db	46
   335   000E98  25                 	db	37
   336   000E99  30                 	db	48	;'0'
   337   000E9A  32                 	db	50	;'2'
   338   000E9B  64                 	db	100	;'d'
   339   000E9C  2C                 	db	44
   340   000E9D  20                 	db	32
   341   000E9E  20                 	db	32
   342   000E9F  00                 	db	0
   343   000EA0                     STR_12:
   344                           
   345                           ; BSR set to: 15
   346   000EA0  68                 	db	104	;'h'
   347   000EA1  75                 	db	117	;'u'
   348   000EA2  65                 	db	101	;'e'
   349   000EA3  3D                 	db	61	;'='
   350   000EA4  25                 	db	37
   351   000EA5  30                 	db	48	;'0'
   352   000EA6  33                 	db	51	;'3'
   353   000EA7  64                 	db	100	;'d'
   354   000EA8  2C                 	db	44
   355   000EA9  20                 	db	32
   356   000EAA  20                 	db	32
   357   000EAB  00                 	db	0
   358   000EAC                     STR_2:
   359                           
   360                           ; BSR set to: 15
   361   000EAC  2E                 	db	46
   362   000EAD  00                 	db	0
   363   000EAE  00                 	db	0	; dummy byte at the end
   364   000000                     
   365                           ; #config settings
   366                           
   367                           	psect	cinit
   368   003446                     __pcinit:
   369                           	callstack 0
   370   003446                     start_initialization:
   371                           	callstack 0
   372   003446                     __initialization:
   373                           	callstack 0
   374                           
   375                           ; Initialize objects allocated to BANK0 (1 bytes)
   376                           ; load TBLPTR registers with __pidataBANK0
   377   003446  0E80               	movlw	low __pidataBANK0
   378   003448  6EF6               	movwf	tblptrl,c
   379   00344A  0E36               	movlw	high __pidataBANK0
   380   00344C  6EF7               	movwf	tblptrh,c
   381   00344E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   382   003450  6EF8               	movwf	tblptru,c
   383   003452  0009               	tblrd		*+	;fetch initializer
   384   003454  CFF5 F0F3          	movff	tablat,__pdataBANK0
   385                           
   386                           ; Clear objects allocated to BANK1 (112 bytes)
   387   003458  EE01  F000         	lfsr	0,__pbssBANK1
   388   00345C  0E70               	movlw	112
   389   00345E                     clear_0:
   390   00345E  6AEE               	clrf	postinc0,c
   391   003460  06E8               	decf	wreg,f,c
   392   003462  E1FD               	bnz	clear_0
   393                           
   394                           ; Clear objects allocated to BANK0 (67 bytes)
   395   003464  EE00  F0B0         	lfsr	0,__pbssBANK0
   396   003468  0E43               	movlw	67
   397   00346A                     clear_1:
   398   00346A  6AEE               	clrf	postinc0,c
   399   00346C  06E8               	decf	wreg,f,c
   400   00346E  E1FD               	bnz	clear_1
   401                           
   402                           ; Clear objects allocated to COMRAM (5 bytes)
   403   003470  6A5F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   404   003472  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   405   003474  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   406   003476  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   407   003478  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   408   00347A                     end_of_initialization:
   409                           	callstack 0
   410   00347A                     __end_of__initialization:
   411                           	callstack 0
   412   00347A  0100               	movlb	0
   413   00347C  EF82  F014         	goto	_main	;jump to C main() function
   414                           
   415                           	psect	bssCOMRAM
   416   00005B                     __pbssCOMRAM:
   417                           	callstack 0
   418   00005B                     _flags:
   419                           	callstack 0
   420   00005B                     	ds	1
   421   00005C                     _TxBufReadCnt:
   422                           	callstack 0
   423   00005C                     	ds	1
   424   00005D                     _TxBufWriteCnt:
   425                           	callstack 0
   426   00005D                     	ds	1
   427   00005E                     _RxBufReadCnt:
   428                           	callstack 0
   429   00005E                     	ds	1
   430   00005F                     _RxBufWriteCnt:
   431                           	callstack 0
   432   00005F                     	ds	1
   433                           
   434                           	psect	bssBANK0
   435   0000B0                     __pbssBANK0:
   436                           	callstack 0
   437   0000B0                     _EUSART4RXbuf:
   438                           	callstack 0
   439   0000B0                     	ds	20
   440   0000C4                     _hue:
   441                           	callstack 0
   442   0000C4                     	ds	8
   443   0000CC                     _width:
   444                           	callstack 0
   445   0000CC                     	ds	2
   446   0000CE                     _prec:
   447                           	callstack 0
   448   0000CE                     	ds	2
   449   0000D0                     _readingIndex:
   450                           	callstack 0
   451   0000D0                     	ds	1
   452   0000D1                     _motorR:
   453                           	callstack 0
   454   0000D1                     	ds	9
   455   0000DA                     _motorL:
   456                           	callstack 0
   457   0000DA                     	ds	9
   458   0000E3                     _colorCurrent:
   459                           	callstack 0
   460   0000E3                     	ds	8
   461   0000EB                     _colorCalibration:
   462                           	callstack 0
   463   0000EB                     	ds	8
   464                           
   465                           	psect	dataBANK0
   466   0000F3                     __pdataBANK0:
   467                           	callstack 0
   468   0000F3                     _dataFlag:
   469                           	callstack 0
   470   0000F3                     	ds	1
   471                           
   472                           	psect	bssBANK1
   473   000100                     __pbssBANK1:
   474                           	callstack 0
   475   000100                     _EUSART4TXbuf:
   476                           	callstack 0
   477   000100                     	ds	60
   478   00013C                     _ldrReadings:
   479                           	callstack 0
   480   00013C                     	ds	20
   481   000150                     _dbuf:
   482                           	callstack 0
   483   000150                     	ds	32
   484                           
   485                           	psect	cstackBANK0
   486   000060                     __pcstackBANK0:
   487                           	callstack 0
   488   000060                     convert_rgb2hue@redcurrent:
   489                           	callstack 0
   490   000060                     send2USART@hue_char:
   491                           	callstack 0
   492                           
   493                           ; 50 bytes @ 0x0
   494   000060                     	ds	4
   495   000064                     convert_rgb2hue@redmax:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x4
   499   000064                     	ds	4
   500   000068                     convert_rgb2hue@greencurrent:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x8
   504   000068                     	ds	4
   505   00006C                     convert_rgb2hue@greenmax:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0xC
   509   00006C                     	ds	4
   510   000070                     convert_rgb2hue@bluecurrent:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x10
   514   000070                     	ds	4
   515   000074                     convert_rgb2hue@bluemax:
   516                           	callstack 0
   517                           
   518                           ; 4 bytes @ 0x14
   519   000074                     	ds	4
   520   000078                     _convert_rgb2hue$411:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x18
   524   000078                     	ds	4
   525   00007C                     _convert_rgb2hue$412:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x1C
   529   00007C                     	ds	4
   530   000080                     _convert_rgb2hue$413:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x20
   534   000080                     	ds	4
   535   000084                     _convert_rgb2hue$414:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x24
   539   000084                     	ds	4
   540   000088                     convert_rgb2hue@min:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x28
   544   000088                     	ds	4
   545   00008C                     convert_rgb2hue@diff:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0x2C
   549   00008C                     	ds	4
   550   000090                     convert_rgb2hue@max:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x30
   554   000090                     	ds	4
   555   000094                     convert_rgb2hue@hue:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x34
   559   000094                     	ds	4
   560   000098                     convert_rgb2hue@r:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x38
   564   000098                     	ds	4
   565   00009C                     convert_rgb2hue@g:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x3C
   569   00009C                     	ds	4
   570   0000A0                     convert_rgb2hue@b:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x40
   574   0000A0                     	ds	4
   575   0000A4                     ??_main:
   576                           
   577                           ; 1 bytes @ 0x44
   578   0000A4                     	ds	2
   579   0000A6                     main@clear_1086:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x46
   583   0000A6                     	ds	4
   584   0000AA                     main@clear_max_1087:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x4A
   588   0000AA                     	ds	4
   589   0000AE                     main@clear_norm:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x4E
   593   0000AE                     	ds	2
   594                           
   595                           	psect	cstackCOMRAM
   596   000001                     __pcstackCOMRAM:
   597                           	callstack 0
   598   000001                     ??_I2C_2_Master_Idle:
   599   000001                     ?___wmul:
   600                           	callstack 0
   601   000001                     ?___awdiv:
   602                           	callstack 0
   603   000001                     ?___awmod:
   604                           	callstack 0
   605   000001                     ?___fladd:
   606                           	callstack 0
   607   000001                     ?___flmul:
   608                           	callstack 0
   609   000001                     ?___xxtofl:
   610                           	callstack 0
   611   000001                     sendCharSerial4@charToSend:
   612                           	callstack 0
   613   000001                     initDCmotorsPWM@PWMperiod:
   614                           	callstack 0
   615   000001                     ___wmul@multiplier:
   616                           	callstack 0
   617   000001                     ___awdiv@dividend:
   618                           	callstack 0
   619   000001                     ___awmod@dividend:
   620                           	callstack 0
   621   000001                     fputc@c:
   622                           	callstack 0
   623   000001                     ___fleq@ff1:
   624                           	callstack 0
   625   000001                     ___flge@ff1:
   626                           	callstack 0
   627   000001                     ___fladd@b:
   628                           	callstack 0
   629   000001                     ___flmul@b:
   630                           	callstack 0
   631   000001                     ___xxtofl@val:
   632                           	callstack 0
   633                           
   634                           ; 4 bytes @ 0x0
   635   000001                     	ds	1
   636   000002                     ??_I2C_2_Master_Read:
   637   000002                     I2C_2_Master_Write@data_byte:
   638                           	callstack 0
   639   000002                     sendStringSerial4@string:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x1
   643   000002                     	ds	1
   644   000003                     color_writetoaddr@value:
   645                           	callstack 0
   646   000003                     I2C_2_Master_Read@ack:
   647                           	callstack 0
   648   000003                     fputc@fp:
   649                           	callstack 0
   650   000003                     ___wmul@multiplicand:
   651                           	callstack 0
   652   000003                     ___awdiv@divisor:
   653                           	callstack 0
   654   000003                     ___awmod@divisor:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x2
   658   000003                     	ds	1
   659   000004                     ??_fputc:
   660   000004                     color_writetoaddr@address:
   661                           	callstack 0
   662   000004                     I2C_2_Master_Read@tmp:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x3
   666   000004                     	ds	1
   667   000005                     ??_color_click_init:
   668   000005                     ??___xxtofl:
   669   000005                     ?_color_read_Red:
   670                           	callstack 0
   671   000005                     ?_color_read_Green:
   672                           	callstack 0
   673   000005                     ?_color_read_Blue:
   674                           	callstack 0
   675   000005                     ?_color_read_Clear:
   676                           	callstack 0
   677   000005                     ___awdiv@counter:
   678                           	callstack 0
   679   000005                     ___awmod@counter:
   680                           	callstack 0
   681   000005                     ___wmul@product:
   682                           	callstack 0
   683   000005                     ___fleq@ff2:
   684                           	callstack 0
   685   000005                     ___flge@ff2:
   686                           	callstack 0
   687   000005                     ___fladd@a:
   688                           	callstack 0
   689   000005                     ___flmul@a:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x4
   693   000005                     	ds	1
   694   000006                     ___awdiv@sign:
   695                           	callstack 0
   696   000006                     ___awmod@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x5
   700   000006                     	ds	1
   701   000007                     ??_color_read_Red:
   702   000007                     ??_color_read_Green:
   703   000007                     ??_color_read_Blue:
   704   000007                     ??_color_read_Clear:
   705   000007                     ?_abs:
   706                           	callstack 0
   707   000007                     ?_read_prec_or_width:
   708                           	callstack 0
   709   000007                     read_prec_or_width@fmt:
   710                           	callstack 0
   711   000007                     ___awdiv@quotient:
   712                           	callstack 0
   713   000007                     abs@a:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x6
   717   000007                     	ds	1
   718   000008                     read_prec_or_width@ap:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x7
   722   000008                     	ds	1
   723   000009                     ??___fladd:
   724   000009                     ??___flmul:
   725   000009                     ??_abs:
   726   000009                     ??___fleq:
   727   000009                     ??___flge:
   728   000009                     ___xxtofl@sign:
   729                           	callstack 0
   730   000009                     read_prec_or_width@c:
   731                           	callstack 0
   732   000009                     fputs@s:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x8
   736   000009                     	ds	1
   737   00000A                     ___xxtofl@exp:
   738                           	callstack 0
   739   00000A                     color_read_Red@tmp:
   740                           	callstack 0
   741   00000A                     color_read_Green@tmp:
   742                           	callstack 0
   743   00000A                     color_read_Blue@tmp:
   744                           	callstack 0
   745   00000A                     color_read_Clear@tmp:
   746                           	callstack 0
   747   00000A                     read_prec_or_width@n:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x9
   751   00000A                     	ds	1
   752   00000B                     fputs@fp:
   753                           	callstack 0
   754   00000B                     ___xxtofl@arg:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0xA
   758   00000B                     	ds	1
   759   00000C                     fputs@c:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0xB
   763   00000C                     	ds	1
   764   00000D                     ___fladd@signs:
   765                           	callstack 0
   766   00000D                     ___flmul@sign:
   767                           	callstack 0
   768   00000D                     fputs@i:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0xC
   772   00000D                     	ds	1
   773   00000E                     ___fladd@aexp:
   774                           	callstack 0
   775   00000E                     ___flmul@grs:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0xD
   779   00000E                     	ds	1
   780   00000F                     ___fladd@bexp:
   781                           	callstack 0
   782   00000F                     pad@fp:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0xE
   786   00000F                     	ds	1
   787   000010                     ___fladd@grs:
   788                           	callstack 0
   789   000010                     pad@buf:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0xF
   793   000010                     	ds	1
   794   000011                     ?___flsub:
   795                           	callstack 0
   796   000011                     ___flsub@b:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x10
   800   000011                     	ds	1
   801   000012                     ___flmul@aexp:
   802                           	callstack 0
   803   000012                     pad@p:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x11
   807   000012                     	ds	1
   808   000013                     ___flmul@bexp:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x12
   812   000013                     	ds	1
   813   000014                     ??_pad:
   814   000014                     ___flmul@prod:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x13
   818   000014                     	ds	1
   819   000015                     pad@i:
   820                           	callstack 0
   821   000015                     ___flsub@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x14
   825   000015                     	ds	2
   826   000017                     dtoa@fp:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x16
   830   000017                     	ds	1
   831   000018                     ___flmul@temp:
   832                           	callstack 0
   833   000018                     dtoa@d:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x17
   837   000018                     	ds	1
   838   000019                     
   839                           ; 1 bytes @ 0x18
   840   000019                     	ds	1
   841   00001A                     ?___fldiv:
   842                           	callstack 0
   843   00001A                     _dtoa$2648:
   844                           	callstack 0
   845   00001A                     ___fldiv@b:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x19
   849   00001A                     	ds	2
   850   00001C                     dtoa@p:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x1B
   854   00001C                     	ds	1
   855   00001D                     dtoa@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x1C
   859   00001D                     	ds	1
   860   00001E                     ___fldiv@a:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x1D
   864   00001E                     	ds	1
   865   00001F                     dtoa@s:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0x1E
   869   00001F                     	ds	1
   870   000020                     dtoa@i:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x1F
   874   000020                     	ds	2
   875   000022                     ??___fldiv:
   876   000022                     vfpfcnvrt@fp:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x21
   880   000022                     	ds	1
   881   000023                     vfpfcnvrt@fmt:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x22
   885   000023                     	ds	1
   886   000024                     vfpfcnvrt@ap:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x23
   890   000024                     	ds	1
   891   000025                     ??_vfpfcnvrt:
   892                           
   893                           ; 1 bytes @ 0x24
   894   000025                     	ds	1
   895   000026                     ___fldiv@rem:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x25
   899   000026                     	ds	1
   900   000027                     vfpfcnvrt@convarg:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x26
   904   000027                     	ds	3
   905   00002A                     ___fldiv@sign:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x29
   909   00002A                     	ds	1
   910   00002B                     vfpfcnvrt@done:
   911                           	callstack 0
   912   00002B                     ___fldiv@new_exp:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x2A
   916   00002B                     	ds	1
   917   00002C                     vfpfcnvrt@cp:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x2B
   921   00002C                     	ds	1
   922   00002D                     ?_vfprintf:
   923                           	callstack 0
   924   00002D                     vfprintf@fp:
   925                           	callstack 0
   926   00002D                     ___fldiv@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x2C
   930   00002D                     	ds	1
   931   00002E                     vfprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x2D
   935   00002E                     	ds	1
   936   00002F                     vfprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x2E
   940   00002F                     	ds	1
   941   000030                     vfprintf@cfmt:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x2F
   945   000030                     	ds	1
   946   000031                     ?_sprintf:
   947                           	callstack 0
   948   000031                     ___fldiv@bexp:
   949                           	callstack 0
   950   000031                     sprintf@s:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x30
   954   000031                     	ds	1
   955   000032                     ___fldiv@aexp:
   956                           	callstack 0
   957   000032                     sprintf@fmt:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x31
   961   000032                     	ds	1
   962   000033                     ?___fltol:
   963                           	callstack 0
   964   000033                     ___fltol@f1:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x32
   968   000033                     	ds	4
   969   000037                     ??___fltol:
   970   000037                     sprintf@ap:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0x36
   974   000037                     	ds	1
   975   000038                     sprintf@f:
   976                           	callstack 0
   977                           
   978                           ; 12 bytes @ 0x37
   979   000038                     	ds	3
   980   00003B                     ___fltol@sign1:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x3A
   984   00003B                     	ds	1
   985   00003C                     ___fltol@exp1:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x3B
   989   00003C                     	ds	1
   990   00003D                     ?_convert_rgb2hue:
   991                           	callstack 0
   992   00003D                     convert_rgb2hue@cMax:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x3C
   996   00003D                     	ds	1
   997   00003E                     convert_rgb2hue@cCurr:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x3D
  1001   00003E                     	ds	1
  1002   00003F                     ??_convert_rgb2hue:
  1003                           
  1004                           ; 1 bytes @ 0x3E
  1005   00003F                     	ds	2
  1006   000041                     ?_reading_hue:
  1007                           	callstack 0
  1008   000041                     reading_hue@cCurr:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x40
  1012   000041                     	ds	2
  1013   000043                     ??_reading_hue:
  1014                           
  1015                           ; 1 bytes @ 0x42
  1016   000043                     	ds	1
  1017   000044                     calibration_routine@cCal:
  1018                           	callstack 0
  1019   000044                     send2USART@hue:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x43
  1023   000044                     	ds	1
  1024   000045                     ??_calibration_routine:
  1025   000045                     reading_hue@hue:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x44
  1029   000045                     	ds	1
  1030   000046                     
  1031                           ; 1 bytes @ 0x45
  1032   000046                     	ds	1
  1033   000047                     calibration_routine@cal_state:
  1034                           	callstack 0
  1035                           
  1036                           ; 20 bytes @ 0x46
  1037   000047                     	ds	20
  1038                           
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 28 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  clear_max       4   74[BANK0 ] float 
  1049 ;;  clear           4   70[BANK0 ] float 
  1050 ;;  clear_norm      2   78[BANK0 ] unsigned int 
  1051 ;;  hue_char       20    0        unsigned char [20]
  1052 ;;  clear_max       4    0        float 
  1053 ;;  clear           4    0        float 
  1054 ;;  PWMcycle        2    0        unsigned int 
  1055 ;;  hue             2    0        unsigned int 
  1056 ;;  green           2    0        unsigned int 
  1057 ;;  blue            2    0        unsigned int 
  1058 ;;  red             2    0        unsigned int 
  1059 ;;  battery_leve    2    0        unsigned int 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1073 ;;Total ram usage:       12 bytes
  1074 ;; Hardware stack levels required when called: 9
  1075 ;; This function calls:
  1076 ;;		_ADC_init
  1077 ;;		___fldiv
  1078 ;;		___flmul
  1079 ;;		___fltol
  1080 ;;		___xxtofl
  1081 ;;		_calibration_routine
  1082 ;;		_color_click_init
  1083 ;;		_initDCmotorsPWM
  1084 ;;		_initUSART4
  1085 ;;		_reading_hue
  1086 ;;		_send2USART
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text0
  1093   002904                     __ptext0:
  1094                           	callstack 0
  1095   002904                     _main:
  1096                           	callstack 22
  1097   002904                     
  1098                           ;main.c: 30:     ADC_init();
  1099   002904  EC11  F01B         	call	_ADC_init	;wreg free
  1100   002908                     
  1101                           ;main.c: 31:     color_click_init();
  1102   002908  EC40  F01A         	call	_color_click_init	;wreg free
  1103   00290C                     
  1104                           ;main.c: 32:     initUSART4();
  1105   00290C  EC02  F01B         	call	_initUSART4	;wreg free
  1106   002910                     
  1107                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1108   002910  0E00               	movlw	0
  1109   002912  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1110   002914  0E63               	movlw	99
  1111   002916  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1112   002918  ECB6  F018         	call	_initDCmotorsPWM	;wreg free
  1113   00291C                     
  1114                           ;main.c: 39:     motorL.power = 0;
  1115   00291C  0E00               	movlw	0
  1116   00291E  0100               	movlb	0	; () banked
  1117   002920  6FDA               	movwf	_motorL& (0+255),b
  1118   002922                     
  1119                           ; BSR set to: 0
  1120                           ;main.c: 40:     motorL.direction = 1;
  1121   002922  0E01               	movlw	1
  1122   002924  6FDB               	movwf	(_motorL+1)& (0+255),b
  1123   002926                     
  1124                           ; BSR set to: 0
  1125                           ;main.c: 41:     motorL.brakemode = 1;
  1126   002926  0E01               	movlw	1
  1127   002928  6FDC               	movwf	(_motorL+2)& (0+255),b
  1128   00292A                     
  1129                           ; BSR set to: 0
  1130                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1131   00292A  0E00               	movlw	0
  1132   00292C  6FDE               	movwf	(_motorL+4)& (0+255),b
  1133   00292E  0E63               	movlw	99
  1134   002930  6FDD               	movwf	(_motorL+3)& (0+255),b
  1135   002932                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1138   002932  0EAA               	movlw	170
  1139   002934  6FDF               	movwf	(_motorL+5)& (0+255),b
  1140   002936  0E0F               	movlw	15
  1141   002938  6FE0               	movwf	(_motorL+6)& (0+255),b
  1142   00293A                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1145   00293A  0EA6               	movlw	166
  1146   00293C  6FE1               	movwf	(_motorL+7)& (0+255),b
  1147   00293E  0E0F               	movlw	15
  1148   002940  6FE2               	movwf	(_motorL+8)& (0+255),b
  1149   002942                     
  1150                           ; BSR set to: 0
  1151                           ;main.c: 46:     motorR.power = 0;
  1152   002942  0E00               	movlw	0
  1153   002944  6FD1               	movwf	_motorR& (0+255),b
  1154   002946                     
  1155                           ; BSR set to: 0
  1156                           ;main.c: 47:     motorR.direction = 1;
  1157   002946  0E01               	movlw	1
  1158   002948  6FD2               	movwf	(_motorR+1)& (0+255),b
  1159   00294A                     
  1160                           ; BSR set to: 0
  1161                           ;main.c: 48:     motorR.brakemode = 1;
  1162   00294A  0E01               	movlw	1
  1163   00294C  6FD3               	movwf	(_motorR+2)& (0+255),b
  1164   00294E                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1167   00294E  0E00               	movlw	0
  1168   002950  6FD5               	movwf	(_motorR+4)& (0+255),b
  1169   002952  0E63               	movlw	99
  1170   002954  6FD4               	movwf	(_motorR+3)& (0+255),b
  1171                           
  1172                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1173   002956  0E25               	movlw	37
  1174   002958  6FD6               	movwf	(_motorR+5)& (0+255),b
  1175   00295A  0E0F               	movlw	15
  1176   00295C  6FD7               	movwf	(_motorR+6)& (0+255),b
  1177                           
  1178                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1179   00295E  0E21               	movlw	33
  1180   002960  6FD8               	movwf	(_motorR+7)& (0+255),b
  1181   002962  0E0F               	movlw	15
  1182   002964  6FD9               	movwf	(_motorR+8)& (0+255),b
  1183   002966                     
  1184                           ; BSR set to: 0
  1185                           ;main.c: 54:     LATDbits.LATD7=0;
  1186   002966  9E7C               	bcf	124,7,c	;volatile
  1187   002968                     
  1188                           ; BSR set to: 0
  1189                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1190   002968  9E84               	bcf	132,7,c	;volatile
  1191   00296A                     
  1192                           ; BSR set to: 0
  1193                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1194   00296A  9087               	bcf	135,0,c	;volatile
  1195   00296C                     
  1196                           ; BSR set to: 0
  1197                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1198   00296C  907F               	bcf	127,0,c	;volatile
  1199   00296E                     
  1200                           ; BSR set to: 0
  1201                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1202   00296E  9E85               	bcf	133,7,c	;volatile
  1203   002970                     
  1204                           ; BSR set to: 0
  1205                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1206   002970  9E7D               	bcf	125,7,c	;volatile
  1207   002972                     
  1208                           ; BSR set to: 0
  1209                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1210   002972  9681               	bcf	129,3,c	;volatile
  1211   002974                     
  1212                           ; BSR set to: 0
  1213                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1214   002974  9679               	bcf	121,3,c	;volatile
  1215   002976                     
  1216                           ; BSR set to: 0
  1217                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1218   002976  8686               	bsf	134,3,c	;volatile
  1219   002978                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1222   002978  010E               	movlb	14	; () banked
  1223   00297A  97B4               	bcf	180,3,b	;volatile
  1224   00297C                     
  1225                           ; BSR set to: 14
  1226                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     float clea
      +                          r;;main.c: 80:     float clear_max;;main.c: 81:     unsigned int hue;;main.c: 82:     ch
      +                          ar hue_char[20];;main.c: 83:     TRISHbits.TRISH3 = 0;
  1227   00297C  9688               	bcf	136,3,c	;volatile
  1228   00297E                     
  1229                           ; BSR set to: 14
  1230                           ;main.c: 84:     LATHbits.LATH3 = 1;
  1231   00297E  8680               	bsf	128,3,c	;volatile
  1232   002980                     
  1233                           ; BSR set to: 14
  1234                           ;main.c: 85:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1235   002980  0E19               	movlw	25
  1236   002982  0100               	movlb	0	; () banked
  1237   002984  6FA5               	movwf	(??_main+1)& (0+255),b
  1238   002986  0E5A               	movlw	90
  1239   002988  6FA4               	movwf	??_main& (0+255),b
  1240   00298A  0EB1               	movlw	177
  1241   00298C                     u4337:
  1242   00298C  2EE8               	decfsz	wreg,f,c
  1243   00298E  D7FE               	bra	u4337
  1244   002990  2FA4               	decfsz	??_main& (0+255),f,b
  1245   002992  D7FC               	bra	u4337
  1246   002994  2FA5               	decfsz	(??_main+1)& (0+255),f,b
  1247   002996  D7FA               	bra	u4337
  1248   002998  D000               	nop2	
  1249   00299A                     
  1250                           ;main.c: 86:     LATHbits.LATH3 = 0;
  1251   00299A  9680               	bcf	128,3,c	;volatile
  1252   00299C                     
  1253                           ;main.c: 87:     LATFbits.LATF2 = 0;
  1254   00299C  947E               	bcf	126,2,c	;volatile
  1255   00299E                     
  1256                           ;main.c: 88:     TRISFbits.TRISF2 = 1;
  1257   00299E  8486               	bsf	134,2,c	;volatile
  1258   0029A0                     
  1259                           ;main.c: 89:     ANSELFbits.ANSELF2 = 0;
  1260   0029A0  010E               	movlb	14	; () banked
  1261   0029A2  95B4               	bcf	180,2,b	;volatile
  1262   0029A4                     
  1263                           ; BSR set to: 14
  1264                           ;main.c: 92:     calibration_routine(&colorCalibration);
  1265   0029A4  0EEB               	movlw	low _colorCalibration
  1266   0029A6  6E44               	movwf	calibration_routine@cCal^0,c
  1267   0029A8  EC41  F011         	call	_calibration_routine	;wreg free
  1268   0029AC                     l4844:
  1269   0029AC  0EE3               	movlw	low _colorCurrent
  1270   0029AE  6E41               	movwf	reading_hue@cCurr^0,c
  1271   0029B0  EC3D  F016         	call	_reading_hue	;wreg free
  1272   0029B4                     
  1273                           ;main.c: 100:         float clear = colorCurrent.clear;
  1274   0029B4  C0E9  F001         	movff	_colorCurrent+6,___xxtofl@val
  1275   0029B8  C0EA  F002         	movff	_colorCurrent+7,___xxtofl@val+1
  1276   0029BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1277   0029BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1278   0029C0  0E00               	movlw	0
  1279   0029C2  EC2A  F012         	call	___xxtofl
  1280   0029C6  C001  F0A6         	movff	?___xxtofl,main@clear_1086
  1281   0029CA  C002  F0A7         	movff	?___xxtofl+1,main@clear_1086+1
  1282   0029CE  C003  F0A8         	movff	?___xxtofl+2,main@clear_1086+2
  1283   0029D2  C004  F0A9         	movff	?___xxtofl+3,main@clear_1086+3
  1284   0029D6                     
  1285                           ;main.c: 101:         float clear_max = colorCalibration.clear;
  1286   0029D6  C0F1  F001         	movff	_colorCalibration+6,___xxtofl@val
  1287   0029DA  C0F2  F002         	movff	_colorCalibration+7,___xxtofl@val+1
  1288   0029DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1289   0029E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1290   0029E2  0E00               	movlw	0
  1291   0029E4  EC2A  F012         	call	___xxtofl
  1292   0029E8  C001  F0AA         	movff	?___xxtofl,main@clear_max_1087
  1293   0029EC  C002  F0AB         	movff	?___xxtofl+1,main@clear_max_1087+1
  1294   0029F0  C003  F0AC         	movff	?___xxtofl+2,main@clear_max_1087+2
  1295   0029F4  C004  F0AD         	movff	?___xxtofl+3,main@clear_max_1087+3
  1296   0029F8                     
  1297                           ;main.c: 103:         unsigned int clear_norm = clear*100/clear_max;
  1298   0029F8  C0AA  F01E         	movff	main@clear_max_1087,___fldiv@a
  1299   0029FC  C0AB  F01F         	movff	main@clear_max_1087+1,___fldiv@a+1
  1300   002A00  C0AC  F020         	movff	main@clear_max_1087+2,___fldiv@a+2
  1301   002A04  C0AD  F021         	movff	main@clear_max_1087+3,___fldiv@a+3
  1302   002A08  0E00               	movlw	0
  1303   002A0A  6E05               	movwf	___flmul@a^0,c
  1304   002A0C  0E00               	movlw	0
  1305   002A0E  6E06               	movwf	(___flmul@a+1)^0,c
  1306   002A10  0EC8               	movlw	200
  1307   002A12  6E07               	movwf	(___flmul@a+2)^0,c
  1308   002A14  0E42               	movlw	66
  1309   002A16  6E08               	movwf	(___flmul@a+3)^0,c
  1310   002A18  C0A6  F001         	movff	main@clear_1086,___flmul@b
  1311   002A1C  C0A7  F002         	movff	main@clear_1086+1,___flmul@b+1
  1312   002A20  C0A8  F003         	movff	main@clear_1086+2,___flmul@b+2
  1313   002A24  C0A9  F004         	movff	main@clear_1086+3,___flmul@b+3
  1314   002A28  EC5F  F00D         	call	___flmul	;wreg free
  1315   002A2C  C001  F01A         	movff	?___flmul,___fldiv@b
  1316   002A30  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
  1317   002A34  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
  1318   002A38  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
  1319   002A3C  EC74  F00F         	call	___fldiv	;wreg free
  1320   002A40  C01A  F033         	movff	?___fldiv,___fltol@f1
  1321   002A44  C01B  F034         	movff	?___fldiv+1,___fltol@f1+1
  1322   002A48  C01C  F035         	movff	?___fldiv+2,___fltol@f1+2
  1323   002A4C  C01D  F036         	movff	?___fldiv+3,___fltol@f1+3
  1324   002A50  EC38  F015         	call	___fltol	;wreg free
  1325   002A54  C033  F0AE         	movff	?___fltol,main@clear_norm
  1326   002A58  C034  F0AF         	movff	?___fltol+1,main@clear_norm+1
  1327   002A5C                     
  1328                           ;main.c: 105:         send2USART(clear_norm);
  1329   002A5C  C0AE  F044         	movff	main@clear_norm,send2USART@hue
  1330   002A60  C0AF  F045         	movff	main@clear_norm+1,send2USART@hue+1
  1331   002A64  ECF3  F01A         	call	_send2USART	;wreg free
  1332   002A68  EFD6  F014         	goto	l4844
  1333   002A6C  EF00  F000         	goto	start
  1334   002A70                     __end_of_main:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _send2USART *****************
  1338 ;; Defined at:
  1339 ;;		line 146 in file "serial.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  hue             2   67[COMRAM] unsigned int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;Total ram usage:       52 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 8
  1360 ;; This function calls:
  1361 ;;		_sendStringSerial4
  1362 ;;		_sprintf
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text1
  1369   0035E6                     __ptext1:
  1370                           	callstack 0
  1371   0035E6                     _send2USART:
  1372                           	callstack 22
  1373   0035E6                     
  1374                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1375   0035E6  0E60               	movlw	low send2USART@hue_char
  1376   0035E8  6E31               	movwf	sprintf@s^0,c
  1377   0035EA  0EA0               	movlw	low STR_12
  1378   0035EC  6E32               	movwf	sprintf@fmt^0,c
  1379   0035EE  C044  F033         	movff	send2USART@hue,?_sprintf+2
  1380   0035F2  C045  F034         	movff	send2USART@hue+1,?_sprintf+3
  1381   0035F6  EC5A  F01A         	call	_sprintf	;wreg free
  1382   0035FA                     
  1383                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1384   0035FA  0E60               	movlw	low send2USART@hue_char
  1385   0035FC  6E02               	movwf	sendStringSerial4@string^0,c
  1386   0035FE  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  1387   003602  0012               	return		;funcret
  1388   003604                     __end_of_send2USART:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _reading_hue *****************
  1392 ;; Defined at:
  1393 ;;		line 136 in file "color.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  cCurr           1   64[COMRAM] PTR struct colors
  1396 ;;		 -> colorCurrent(8), 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  led_state      50    0        unsigned char [50]
  1399 ;;  hue             2   68[COMRAM] unsigned int 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  2   64[COMRAM] unsigned int 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;Total ram usage:        6 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 3
  1416 ;; This function calls:
  1417 ;;		_color_read_Blue
  1418 ;;		_color_read_Clear
  1419 ;;		_color_read_Green
  1420 ;;		_color_read_Red
  1421 ;;		_convert_rgb2hue
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text2
  1428   002C7A                     __ptext2:
  1429                           	callstack 0
  1430   002C7A                     _reading_hue:
  1431                           	callstack 27
  1432   002C7A                     
  1433                           ;color.c: 136:     unsigned int reading_hue(colors *cCurr);color.c: 137: {;color.c: 138:
      +                               unsigned int hue;;color.c: 140:     char led_state[50];;color.c: 145:     LATGbits.
      +                          LATG0 = 1;
  1434   002C7A  807F               	bsf	127,0,c	;volatile
  1435                           
  1436                           ;color.c: 146:     LATEbits.LATE7 = 0;
  1437   002C7C  9E7D               	bcf	125,7,c	;volatile
  1438                           
  1439                           ;color.c: 147:     LATAbits.LATA3 = 0;
  1440   002C7E  9679               	bcf	121,3,c	;volatile
  1441   002C80                     
  1442                           ;color.c: 148:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1443   002C80  0E29               	movlw	41
  1444   002C82  6E44               	movwf	(??_reading_hue+1)^0,c
  1445   002C84  0E96               	movlw	150
  1446   002C86  6E43               	movwf	??_reading_hue^0,c
  1447   002C88  0E7F               	movlw	127
  1448   002C8A                     u4347:
  1449   002C8A  2EE8               	decfsz	wreg,f,c
  1450   002C8C  D7FE               	bra	u4347
  1451   002C8E  2E43               	decfsz	??_reading_hue^0,f,c
  1452   002C90  D7FC               	bra	u4347
  1453   002C92  2E44               	decfsz	(??_reading_hue+1)^0,f,c
  1454   002C94  D7FA               	bra	u4347
  1455   002C96  0000               	nop	
  1456   002C98                     
  1457                           ;color.c: 149:     (cCurr->red)= color_read_Red();
  1458   002C98  ECFE  F018         	call	_color_read_Red	;wreg free
  1459   002C9C  5041               	movf	reading_hue@cCurr^0,w,c
  1460   002C9E  6ED9               	movwf	fsr2l,c
  1461   002CA0  6ADA               	clrf	fsr2h,c
  1462   002CA2  C005  FFDE         	movff	?_color_read_Red,postinc2
  1463   002CA6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1464   002CAA                     
  1465                           ;color.c: 154:     LATGbits.LATG0 = 0;
  1466   002CAA  907F               	bcf	127,0,c	;volatile
  1467   002CAC                     
  1468                           ;color.c: 155:     LATEbits.LATE7 = 1;
  1469   002CAC  8E7D               	bsf	125,7,c	;volatile
  1470   002CAE                     
  1471                           ;color.c: 156:     LATAbits.LATA3 = 0;
  1472   002CAE  9679               	bcf	121,3,c	;volatile
  1473   002CB0                     
  1474                           ;color.c: 157:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1475   002CB0  0E29               	movlw	41
  1476   002CB2  6E44               	movwf	(??_reading_hue+1)^0,c
  1477   002CB4  0E96               	movlw	150
  1478   002CB6  6E43               	movwf	??_reading_hue^0,c
  1479   002CB8  0E7F               	movlw	127
  1480   002CBA                     u4357:
  1481   002CBA  2EE8               	decfsz	wreg,f,c
  1482   002CBC  D7FE               	bra	u4357
  1483   002CBE  2E43               	decfsz	??_reading_hue^0,f,c
  1484   002CC0  D7FC               	bra	u4357
  1485   002CC2  2E44               	decfsz	(??_reading_hue+1)^0,f,c
  1486   002CC4  D7FA               	bra	u4357
  1487   002CC6  0000               	nop	
  1488                           
  1489                           ;color.c: 158:     (cCurr->green) = color_read_Green();
  1490   002CC8  EC26  F019         	call	_color_read_Green	;wreg free
  1491   002CCC  5041               	movf	reading_hue@cCurr^0,w,c
  1492   002CCE  6ED9               	movwf	fsr2l,c
  1493   002CD0  6ADA               	clrf	fsr2h,c
  1494   002CD2  0E02               	movlw	2
  1495   002CD4  26D9               	addwf	fsr2l,f,c
  1496   002CD6  C005  FFDE         	movff	?_color_read_Green,postinc2
  1497   002CDA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1498   002CDE                     
  1499                           ;color.c: 164:     LATGbits.LATG0 = 0;
  1500   002CDE  907F               	bcf	127,0,c	;volatile
  1501   002CE0                     
  1502                           ;color.c: 165:     LATEbits.LATE7 = 0;
  1503   002CE0  9E7D               	bcf	125,7,c	;volatile
  1504   002CE2                     
  1505                           ;color.c: 166:     LATAbits.LATA3 = 1;
  1506   002CE2  8679               	bsf	121,3,c	;volatile
  1507   002CE4                     
  1508                           ;color.c: 167:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1509   002CE4  0E29               	movlw	41
  1510   002CE6  6E44               	movwf	(??_reading_hue+1)^0,c
  1511   002CE8  0E96               	movlw	150
  1512   002CEA  6E43               	movwf	??_reading_hue^0,c
  1513   002CEC  0E7F               	movlw	127
  1514   002CEE                     u4367:
  1515   002CEE  2EE8               	decfsz	wreg,f,c
  1516   002CF0  D7FE               	bra	u4367
  1517   002CF2  2E43               	decfsz	??_reading_hue^0,f,c
  1518   002CF4  D7FC               	bra	u4367
  1519   002CF6  2E44               	decfsz	(??_reading_hue+1)^0,f,c
  1520   002CF8  D7FA               	bra	u4367
  1521   002CFA  0000               	nop	
  1522   002CFC                     
  1523                           ;color.c: 168:     (cCurr->blue) = color_read_Blue();
  1524   002CFC  EC76  F019         	call	_color_read_Blue	;wreg free
  1525   002D00  5041               	movf	reading_hue@cCurr^0,w,c
  1526   002D02  6ED9               	movwf	fsr2l,c
  1527   002D04  6ADA               	clrf	fsr2h,c
  1528   002D06  0E04               	movlw	4
  1529   002D08  26D9               	addwf	fsr2l,f,c
  1530   002D0A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1531   002D0E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1532   002D12                     
  1533                           ;color.c: 173:     LATGbits.LATG0 = 1;
  1534   002D12  807F               	bsf	127,0,c	;volatile
  1535   002D14                     
  1536                           ;color.c: 174:     LATEbits.LATE7 = 1;
  1537   002D14  8E7D               	bsf	125,7,c	;volatile
  1538   002D16                     
  1539                           ;color.c: 175:     LATAbits.LATA3 = 1;
  1540   002D16  8679               	bsf	121,3,c	;volatile
  1541                           
  1542                           ;color.c: 176:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1543   002D18  0E29               	movlw	41
  1544   002D1A  6E44               	movwf	(??_reading_hue+1)^0,c
  1545   002D1C  0E96               	movlw	150
  1546   002D1E  6E43               	movwf	??_reading_hue^0,c
  1547   002D20  0E7F               	movlw	127
  1548   002D22                     u4377:
  1549   002D22  2EE8               	decfsz	wreg,f,c
  1550   002D24  D7FE               	bra	u4377
  1551   002D26  2E43               	decfsz	??_reading_hue^0,f,c
  1552   002D28  D7FC               	bra	u4377
  1553   002D2A  2E44               	decfsz	(??_reading_hue+1)^0,f,c
  1554   002D2C  D7FA               	bra	u4377
  1555   002D2E  0000               	nop	
  1556   002D30                     
  1557                           ;color.c: 177:     (cCurr->clear) = color_read_Clear();
  1558   002D30  EC4E  F019         	call	_color_read_Clear	;wreg free
  1559   002D34  5041               	movf	reading_hue@cCurr^0,w,c
  1560   002D36  6ED9               	movwf	fsr2l,c
  1561   002D38  6ADA               	clrf	fsr2h,c
  1562   002D3A  0E06               	movlw	6
  1563   002D3C  26D9               	addwf	fsr2l,f,c
  1564   002D3E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1565   002D42  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1566   002D46                     
  1567                           ;color.c: 183:     hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1568   002D46  0EEB               	movlw	low _colorCalibration
  1569   002D48  6E3D               	movwf	convert_rgb2hue@cMax^0,c
  1570   002D4A  0EE3               	movlw	low _colorCurrent
  1571   002D4C  6E3E               	movwf	convert_rgb2hue@cCurr^0,c
  1572   002D4E  EC58  F007         	call	_convert_rgb2hue	;wreg free
  1573   002D52  C03D  F045         	movff	?_convert_rgb2hue,reading_hue@hue
  1574   002D56  C03E  F046         	movff	?_convert_rgb2hue+1,reading_hue@hue+1
  1575   002D5A                     
  1576                           ;color.c: 190:     return hue;
  1577   002D5A  C045  F041         	movff	reading_hue@hue,?_reading_hue
  1578   002D5E  C046  F042         	movff	reading_hue@hue+1,?_reading_hue+1
  1579   002D62  0012               	return		;funcret
  1580   002D64                     __end_of_reading_hue:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _convert_rgb2hue *****************
  1584 ;; Defined at:
  1585 ;;		line 273 in file "color.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  cMax            1   60[COMRAM] PTR struct colors
  1588 ;;		 -> colorCalibration(8), 
  1589 ;;  cCurr           1   61[COMRAM] PTR struct colors
  1590 ;;		 -> colorCurrent(8), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  b               4   64[BANK0 ] float 
  1593 ;;  g               4   60[BANK0 ] float 
  1594 ;;  r               4   56[BANK0 ] float 
  1595 ;;  hue             4   52[BANK0 ] float 
  1596 ;;  max             4   48[BANK0 ] float 
  1597 ;;  diff            4   44[BANK0 ] float 
  1598 ;;  min             4   40[BANK0 ] float 
  1599 ;;  bluemax         4   20[BANK0 ] float 
  1600 ;;  bluecurrent     4   16[BANK0 ] float 
  1601 ;;  greenmax        4   12[BANK0 ] float 
  1602 ;;  greencurrent    4    8[BANK0 ] float 
  1603 ;;  redmax          4    4[BANK0 ] float 
  1604 ;;  redcurrent      4    0[BANK0 ] float 
  1605 ;;  clearmax        4    0        float 
  1606 ;;  clearcurrent    4    0        float 
  1607 ;;  c               4    0        float 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  2   60[COMRAM] unsigned int 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1618 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Totals:         4      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;Total ram usage:       72 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 2
  1624 ;; This function calls:
  1625 ;;		___fladd
  1626 ;;		___fldiv
  1627 ;;		___fleq
  1628 ;;		___flge
  1629 ;;		___flmul
  1630 ;;		___flsub
  1631 ;;		___fltol
  1632 ;;		___xxtofl
  1633 ;; This function is called by:
  1634 ;;		_reading_hue
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text3
  1639   000EB0                     __ptext3:
  1640                           	callstack 0
  1641   000EB0                     _convert_rgb2hue:
  1642                           	callstack 27
  1643   000EB0                     
  1644                           ;color.c: 273: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);c
      +                          olor.c: 274: {;color.c: 275:     float redcurrent, redmax, greencurrent, greenmax, bluec
      +                          urrent, bluemax, clearcurrent, clearmax;;color.c: 276:     float r, g, b, c, min, max, d
      +                          iff, hue = 0.0;
  1645   000EB0  0E00               	movlw	0
  1646   000EB2  0100               	movlb	0	; () banked
  1647   000EB4  6F94               	movwf	convert_rgb2hue@hue& (0+255),b
  1648   000EB6  0E00               	movlw	0
  1649   000EB8  6F95               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  1650   000EBA  0E00               	movlw	0
  1651   000EBC  6F96               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  1652   000EBE  0E00               	movlw	0
  1653   000EC0  6F97               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  1654   000EC2                     
  1655                           ; BSR set to: 0
  1656                           ;color.c: 278:     redcurrent = cCurr->red;
  1657   000EC2  503E               	movf	convert_rgb2hue@cCurr^0,w,c
  1658   000EC4  6ED9               	movwf	fsr2l,c
  1659   000EC6  6ADA               	clrf	fsr2h,c
  1660   000EC8  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1661   000ECC  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1662   000ED0  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1663   000ED4  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1664   000ED8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1665   000EDA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1666   000EDC  0E00               	movlw	0
  1667   000EDE  EC2A  F012         	call	___xxtofl
  1668   000EE2  C001  F060         	movff	?___xxtofl,convert_rgb2hue@redcurrent
  1669   000EE6  C002  F061         	movff	?___xxtofl+1,convert_rgb2hue@redcurrent+1
  1670   000EEA  C003  F062         	movff	?___xxtofl+2,convert_rgb2hue@redcurrent+2
  1671   000EEE  C004  F063         	movff	?___xxtofl+3,convert_rgb2hue@redcurrent+3
  1672   000EF2                     
  1673                           ;color.c: 279:     redmax = cMax->red;
  1674   000EF2  503D               	movf	convert_rgb2hue@cMax^0,w,c
  1675   000EF4  6ED9               	movwf	fsr2l,c
  1676   000EF6  6ADA               	clrf	fsr2h,c
  1677   000EF8  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1678   000EFC  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1679   000F00  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1680   000F04  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1681   000F08  6A03               	clrf	(___xxtofl@val+2)^0,c
  1682   000F0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1683   000F0C  0E00               	movlw	0
  1684   000F0E  EC2A  F012         	call	___xxtofl
  1685   000F12  C001  F064         	movff	?___xxtofl,convert_rgb2hue@redmax
  1686   000F16  C002  F065         	movff	?___xxtofl+1,convert_rgb2hue@redmax+1
  1687   000F1A  C003  F066         	movff	?___xxtofl+2,convert_rgb2hue@redmax+2
  1688   000F1E  C004  F067         	movff	?___xxtofl+3,convert_rgb2hue@redmax+3
  1689   000F22                     
  1690                           ;color.c: 280:     greencurrent = cCurr->green;
  1691   000F22  503E               	movf	convert_rgb2hue@cCurr^0,w,c
  1692   000F24  6ED9               	movwf	fsr2l,c
  1693   000F26  6ADA               	clrf	fsr2h,c
  1694   000F28  0E02               	movlw	2
  1695   000F2A  26D9               	addwf	fsr2l,f,c
  1696   000F2C  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1697   000F30  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1698   000F34  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1699   000F38  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1700   000F3C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1701   000F3E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1702   000F40  0E00               	movlw	0
  1703   000F42  EC2A  F012         	call	___xxtofl
  1704   000F46  C001  F068         	movff	?___xxtofl,convert_rgb2hue@greencurrent
  1705   000F4A  C002  F069         	movff	?___xxtofl+1,convert_rgb2hue@greencurrent+1
  1706   000F4E  C003  F06A         	movff	?___xxtofl+2,convert_rgb2hue@greencurrent+2
  1707   000F52  C004  F06B         	movff	?___xxtofl+3,convert_rgb2hue@greencurrent+3
  1708   000F56                     
  1709                           ;color.c: 281:     greenmax = cMax->green;
  1710   000F56  503D               	movf	convert_rgb2hue@cMax^0,w,c
  1711   000F58  6ED9               	movwf	fsr2l,c
  1712   000F5A  6ADA               	clrf	fsr2h,c
  1713   000F5C  0E02               	movlw	2
  1714   000F5E  26D9               	addwf	fsr2l,f,c
  1715   000F60  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1716   000F64  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1717   000F68  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1718   000F6C  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1719   000F70  6A03               	clrf	(___xxtofl@val+2)^0,c
  1720   000F72  6A04               	clrf	(___xxtofl@val+3)^0,c
  1721   000F74  0E00               	movlw	0
  1722   000F76  EC2A  F012         	call	___xxtofl
  1723   000F7A  C001  F06C         	movff	?___xxtofl,convert_rgb2hue@greenmax
  1724   000F7E  C002  F06D         	movff	?___xxtofl+1,convert_rgb2hue@greenmax+1
  1725   000F82  C003  F06E         	movff	?___xxtofl+2,convert_rgb2hue@greenmax+2
  1726   000F86  C004  F06F         	movff	?___xxtofl+3,convert_rgb2hue@greenmax+3
  1727   000F8A                     
  1728                           ;color.c: 282:     bluecurrent = cCurr->blue;
  1729   000F8A  503E               	movf	convert_rgb2hue@cCurr^0,w,c
  1730   000F8C  6ED9               	movwf	fsr2l,c
  1731   000F8E  6ADA               	clrf	fsr2h,c
  1732   000F90  0E04               	movlw	4
  1733   000F92  26D9               	addwf	fsr2l,f,c
  1734   000F94  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1735   000F98  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1736   000F9C  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1737   000FA0  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1738   000FA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  1739   000FA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  1740   000FA8  0E00               	movlw	0
  1741   000FAA  EC2A  F012         	call	___xxtofl
  1742   000FAE  C001  F070         	movff	?___xxtofl,convert_rgb2hue@bluecurrent
  1743   000FB2  C002  F071         	movff	?___xxtofl+1,convert_rgb2hue@bluecurrent+1
  1744   000FB6  C003  F072         	movff	?___xxtofl+2,convert_rgb2hue@bluecurrent+2
  1745   000FBA  C004  F073         	movff	?___xxtofl+3,convert_rgb2hue@bluecurrent+3
  1746   000FBE                     
  1747                           ;color.c: 283:     bluemax = cMax->blue;
  1748   000FBE  503D               	movf	convert_rgb2hue@cMax^0,w,c
  1749   000FC0  6ED9               	movwf	fsr2l,c
  1750   000FC2  6ADA               	clrf	fsr2h,c
  1751   000FC4  0E04               	movlw	4
  1752   000FC6  26D9               	addwf	fsr2l,f,c
  1753   000FC8  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1754   000FCC  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1755   000FD0  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1756   000FD4  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1757   000FD8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1758   000FDA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1759   000FDC  0E00               	movlw	0
  1760   000FDE  EC2A  F012         	call	___xxtofl
  1761   000FE2  C001  F074         	movff	?___xxtofl,convert_rgb2hue@bluemax
  1762   000FE6  C002  F075         	movff	?___xxtofl+1,convert_rgb2hue@bluemax+1
  1763   000FEA  C003  F076         	movff	?___xxtofl+2,convert_rgb2hue@bluemax+2
  1764   000FEE  C004  F077         	movff	?___xxtofl+3,convert_rgb2hue@bluemax+3
  1765   000FF2  503E               	movf	convert_rgb2hue@cCurr^0,w,c
  1766   000FF4  6ED9               	movwf	fsr2l,c
  1767   000FF6  6ADA               	clrf	fsr2h,c
  1768   000FF8  0E06               	movlw	6
  1769   000FFA  26D9               	addwf	fsr2l,f,c
  1770   000FFC  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1771   001000  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1772   001004  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1773   001008  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1774   00100C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1775   00100E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1776   001010  0E00               	movlw	0
  1777   001012  EC2A  F012         	call	___xxtofl
  1778   001016  503D               	movf	convert_rgb2hue@cMax^0,w,c
  1779   001018  6ED9               	movwf	fsr2l,c
  1780   00101A  6ADA               	clrf	fsr2h,c
  1781   00101C  0E06               	movlw	6
  1782   00101E  26D9               	addwf	fsr2l,f,c
  1783   001020  CFDE F03F          	movff	postinc2,??_convert_rgb2hue
  1784   001024  CFDD F040          	movff	postdec2,??_convert_rgb2hue+1
  1785   001028  C03F  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1786   00102C  C040  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1787   001030  6A03               	clrf	(___xxtofl@val+2)^0,c
  1788   001032  6A04               	clrf	(___xxtofl@val+3)^0,c
  1789   001034  0E00               	movlw	0
  1790   001036  EC2A  F012         	call	___xxtofl
  1791   00103A                     
  1792                           ;color.c: 291:     r = redcurrent/redmax;
  1793   00103A  C060  F01A         	movff	convert_rgb2hue@redcurrent,___fldiv@b
  1794   00103E  C061  F01B         	movff	convert_rgb2hue@redcurrent+1,___fldiv@b+1
  1795   001042  C062  F01C         	movff	convert_rgb2hue@redcurrent+2,___fldiv@b+2
  1796   001046  C063  F01D         	movff	convert_rgb2hue@redcurrent+3,___fldiv@b+3
  1797   00104A  C064  F01E         	movff	convert_rgb2hue@redmax,___fldiv@a
  1798   00104E  C065  F01F         	movff	convert_rgb2hue@redmax+1,___fldiv@a+1
  1799   001052  C066  F020         	movff	convert_rgb2hue@redmax+2,___fldiv@a+2
  1800   001056  C067  F021         	movff	convert_rgb2hue@redmax+3,___fldiv@a+3
  1801   00105A  EC74  F00F         	call	___fldiv	;wreg free
  1802   00105E  C01A  F098         	movff	?___fldiv,convert_rgb2hue@r
  1803   001062  C01B  F099         	movff	?___fldiv+1,convert_rgb2hue@r+1
  1804   001066  C01C  F09A         	movff	?___fldiv+2,convert_rgb2hue@r+2
  1805   00106A  C01D  F09B         	movff	?___fldiv+3,convert_rgb2hue@r+3
  1806   00106E                     
  1807                           ;color.c: 292:     g = greencurrent/greenmax;
  1808   00106E  C068  F01A         	movff	convert_rgb2hue@greencurrent,___fldiv@b
  1809   001072  C069  F01B         	movff	convert_rgb2hue@greencurrent+1,___fldiv@b+1
  1810   001076  C06A  F01C         	movff	convert_rgb2hue@greencurrent+2,___fldiv@b+2
  1811   00107A  C06B  F01D         	movff	convert_rgb2hue@greencurrent+3,___fldiv@b+3
  1812   00107E  C06C  F01E         	movff	convert_rgb2hue@greenmax,___fldiv@a
  1813   001082  C06D  F01F         	movff	convert_rgb2hue@greenmax+1,___fldiv@a+1
  1814   001086  C06E  F020         	movff	convert_rgb2hue@greenmax+2,___fldiv@a+2
  1815   00108A  C06F  F021         	movff	convert_rgb2hue@greenmax+3,___fldiv@a+3
  1816   00108E  EC74  F00F         	call	___fldiv	;wreg free
  1817   001092  C01A  F09C         	movff	?___fldiv,convert_rgb2hue@g
  1818   001096  C01B  F09D         	movff	?___fldiv+1,convert_rgb2hue@g+1
  1819   00109A  C01C  F09E         	movff	?___fldiv+2,convert_rgb2hue@g+2
  1820   00109E  C01D  F09F         	movff	?___fldiv+3,convert_rgb2hue@g+3
  1821   0010A2                     
  1822                           ;color.c: 293:     b = bluecurrent/bluemax;
  1823   0010A2  C070  F01A         	movff	convert_rgb2hue@bluecurrent,___fldiv@b
  1824   0010A6  C071  F01B         	movff	convert_rgb2hue@bluecurrent+1,___fldiv@b+1
  1825   0010AA  C072  F01C         	movff	convert_rgb2hue@bluecurrent+2,___fldiv@b+2
  1826   0010AE  C073  F01D         	movff	convert_rgb2hue@bluecurrent+3,___fldiv@b+3
  1827   0010B2  C074  F01E         	movff	convert_rgb2hue@bluemax,___fldiv@a
  1828   0010B6  C075  F01F         	movff	convert_rgb2hue@bluemax+1,___fldiv@a+1
  1829   0010BA  C076  F020         	movff	convert_rgb2hue@bluemax+2,___fldiv@a+2
  1830   0010BE  C077  F021         	movff	convert_rgb2hue@bluemax+3,___fldiv@a+3
  1831   0010C2  EC74  F00F         	call	___fldiv	;wreg free
  1832   0010C6  C01A  F0A0         	movff	?___fldiv,convert_rgb2hue@b
  1833   0010CA  C01B  F0A1         	movff	?___fldiv+1,convert_rgb2hue@b+1
  1834   0010CE  C01C  F0A2         	movff	?___fldiv+2,convert_rgb2hue@b+2
  1835   0010D2  C01D  F0A3         	movff	?___fldiv+3,convert_rgb2hue@b+3
  1836   0010D6                     
  1837                           ;color.c: 295:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  1838   0010D6  C098  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1839   0010DA  C099  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1840   0010DE  C09A  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1841   0010E2  C09B  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1842   0010E6  C09C  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1843   0010EA  C09D  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1844   0010EE  C09E  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1845   0010F2  C09F  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1846   0010F6  ECBB  F015         	call	___flge	;wreg free
  1847   0010FA  A0D8               	btfss	status,0,c
  1848   0010FC  EF82  F008         	goto	u3561
  1849   001100  EF84  F008         	goto	u3560
  1850   001104                     u3561:
  1851   001104  EFB9  F008         	goto	l3934
  1852   001108                     u3560:
  1853   001108  C09C  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1854   00110C  C09D  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1855   001110  C09E  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1856   001114  C09F  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1857   001118  C0A0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1858   00111C  C0A1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1859   001120  C0A2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1860   001124  C0A3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1861   001128  ECBB  F015         	call	___flge	;wreg free
  1862   00112C  A0D8               	btfss	status,0,c
  1863   00112E  EF9B  F008         	goto	u3571
  1864   001132  EF9D  F008         	goto	u3570
  1865   001136                     u3571:
  1866   001136  EFA7  F008         	goto	l115
  1867   00113A                     u3570:
  1868   00113A  C0A0  F078         	movff	convert_rgb2hue@b,_convert_rgb2hue$411
  1869   00113E  C0A1  F079         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$411+1
  1870   001142  C0A2  F07A         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$411+2
  1871   001146  C0A3  F07B         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$411+3
  1872   00114A  EFAF  F008         	goto	l117
  1873   00114E                     l115:
  1874   00114E  C09C  F078         	movff	convert_rgb2hue@g,_convert_rgb2hue$411
  1875   001152  C09D  F079         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$411+1
  1876   001156  C09E  F07A         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$411+2
  1877   00115A  C09F  F07B         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$411+3
  1878   00115E                     l117:
  1879   00115E  C078  F088         	movff	_convert_rgb2hue$411,convert_rgb2hue@min
  1880   001162  C079  F089         	movff	_convert_rgb2hue$411+1,convert_rgb2hue@min+1
  1881   001166  C07A  F08A         	movff	_convert_rgb2hue$411+2,convert_rgb2hue@min+2
  1882   00116A  C07B  F08B         	movff	_convert_rgb2hue$411+3,convert_rgb2hue@min+3
  1883   00116E  EFEC  F008         	goto	l3938
  1884   001172                     l3934:
  1885   001172  C098  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1886   001176  C099  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1887   00117A  C09A  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1888   00117E  C09B  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1889   001182  C0A0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1890   001186  C0A1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1891   00118A  C0A2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1892   00118E  C0A3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1893   001192  ECBB  F015         	call	___flge	;wreg free
  1894   001196  A0D8               	btfss	status,0,c
  1895   001198  EFD0  F008         	goto	u3581
  1896   00119C  EFD2  F008         	goto	u3580
  1897   0011A0                     u3581:
  1898   0011A0  EFDC  F008         	goto	l119
  1899   0011A4                     u3580:
  1900   0011A4  C0A0  F07C         	movff	convert_rgb2hue@b,_convert_rgb2hue$412
  1901   0011A8  C0A1  F07D         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$412+1
  1902   0011AC  C0A2  F07E         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$412+2
  1903   0011B0  C0A3  F07F         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$412+3
  1904   0011B4  EFE4  F008         	goto	l121
  1905   0011B8                     l119:
  1906   0011B8  C098  F07C         	movff	convert_rgb2hue@r,_convert_rgb2hue$412
  1907   0011BC  C099  F07D         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$412+1
  1908   0011C0  C09A  F07E         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$412+2
  1909   0011C4  C09B  F07F         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$412+3
  1910   0011C8                     l121:
  1911   0011C8  C07C  F088         	movff	_convert_rgb2hue$412,convert_rgb2hue@min
  1912   0011CC  C07D  F089         	movff	_convert_rgb2hue$412+1,convert_rgb2hue@min+1
  1913   0011D0  C07E  F08A         	movff	_convert_rgb2hue$412+2,convert_rgb2hue@min+2
  1914   0011D4  C07F  F08B         	movff	_convert_rgb2hue$412+3,convert_rgb2hue@min+3
  1915   0011D8                     l3938:
  1916                           
  1917                           ;color.c: 296:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  1918   0011D8  C09C  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1919   0011DC  C09D  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1920   0011E0  C09E  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1921   0011E4  C09F  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1922   0011E8  C098  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1923   0011EC  C099  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1924   0011F0  C09A  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1925   0011F4  C09B  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1926   0011F8  ECBB  F015         	call	___flge	;wreg free
  1927   0011FC  A0D8               	btfss	status,0,c
  1928   0011FE  EF03  F009         	goto	u3591
  1929   001202  EF05  F009         	goto	u3590
  1930   001206                     u3591:
  1931   001206  EF3A  F009         	goto	l3944
  1932   00120A                     u3590:
  1933   00120A  C0A0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1934   00120E  C0A1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1935   001212  C0A2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1936   001216  C0A3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1937   00121A  C09C  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1938   00121E  C09D  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1939   001222  C09E  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1940   001226  C09F  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1941   00122A  ECBB  F015         	call	___flge	;wreg free
  1942   00122E  A0D8               	btfss	status,0,c
  1943   001230  EF1C  F009         	goto	u3601
  1944   001234  EF1E  F009         	goto	u3600
  1945   001238                     u3601:
  1946   001238  EF28  F009         	goto	l127
  1947   00123C                     u3600:
  1948   00123C  C0A0  F080         	movff	convert_rgb2hue@b,_convert_rgb2hue$413
  1949   001240  C0A1  F081         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$413+1
  1950   001244  C0A2  F082         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$413+2
  1951   001248  C0A3  F083         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$413+3
  1952   00124C  EF30  F009         	goto	l129
  1953   001250                     l127:
  1954   001250  C09C  F080         	movff	convert_rgb2hue@g,_convert_rgb2hue$413
  1955   001254  C09D  F081         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$413+1
  1956   001258  C09E  F082         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$413+2
  1957   00125C  C09F  F083         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$413+3
  1958   001260                     l129:
  1959   001260  C080  F090         	movff	_convert_rgb2hue$413,convert_rgb2hue@max
  1960   001264  C081  F091         	movff	_convert_rgb2hue$413+1,convert_rgb2hue@max+1
  1961   001268  C082  F092         	movff	_convert_rgb2hue$413+2,convert_rgb2hue@max+2
  1962   00126C  C083  F093         	movff	_convert_rgb2hue$413+3,convert_rgb2hue@max+3
  1963   001270  EF6D  F009         	goto	l3948
  1964   001274                     l3944:
  1965   001274  C0A0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1966   001278  C0A1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1967   00127C  C0A2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1968   001280  C0A3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1969   001284  C098  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1970   001288  C099  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1971   00128C  C09A  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1972   001290  C09B  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1973   001294  ECBB  F015         	call	___flge	;wreg free
  1974   001298  A0D8               	btfss	status,0,c
  1975   00129A  EF51  F009         	goto	u3611
  1976   00129E  EF53  F009         	goto	u3610
  1977   0012A2                     u3611:
  1978   0012A2  EF5D  F009         	goto	l131
  1979   0012A6                     u3610:
  1980   0012A6  C0A0  F084         	movff	convert_rgb2hue@b,_convert_rgb2hue$414
  1981   0012AA  C0A1  F085         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$414+1
  1982   0012AE  C0A2  F086         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$414+2
  1983   0012B2  C0A3  F087         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$414+3
  1984   0012B6  EF65  F009         	goto	l133
  1985   0012BA                     l131:
  1986   0012BA  C098  F084         	movff	convert_rgb2hue@r,_convert_rgb2hue$414
  1987   0012BE  C099  F085         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$414+1
  1988   0012C2  C09A  F086         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$414+2
  1989   0012C6  C09B  F087         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$414+3
  1990   0012CA                     l133:
  1991   0012CA  C084  F090         	movff	_convert_rgb2hue$414,convert_rgb2hue@max
  1992   0012CE  C085  F091         	movff	_convert_rgb2hue$414+1,convert_rgb2hue@max+1
  1993   0012D2  C086  F092         	movff	_convert_rgb2hue$414+2,convert_rgb2hue@max+2
  1994   0012D6  C087  F093         	movff	_convert_rgb2hue$414+3,convert_rgb2hue@max+3
  1995   0012DA                     l3948:
  1996                           
  1997                           ;color.c: 297:     diff = max - min;
  1998   0012DA  C090  F011         	movff	convert_rgb2hue@max,___flsub@b
  1999   0012DE  C091  F012         	movff	convert_rgb2hue@max+1,___flsub@b+1
  2000   0012E2  C092  F013         	movff	convert_rgb2hue@max+2,___flsub@b+2
  2001   0012E6  C093  F014         	movff	convert_rgb2hue@max+3,___flsub@b+3
  2002   0012EA  C088  F015         	movff	convert_rgb2hue@min,___flsub@a
  2003   0012EE  C089  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2004   0012F2  C08A  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2005   0012F6  C08B  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2006   0012FA  EC9E  F019         	call	___flsub	;wreg free
  2007   0012FE  C011  F08C         	movff	?___flsub,convert_rgb2hue@diff
  2008   001302  C012  F08D         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2009   001306  C013  F08E         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2010   00130A  C014  F08F         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2011                           
  2012                           ;color.c: 298:     if (max == min) {
  2013   00130E  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2014   001312  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2015   001316  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2016   00131A  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2017   00131E  C088  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2018   001322  C089  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2019   001326  C08A  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2020   00132A  C08B  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2021   00132E  ECC3  F017         	call	___fleq	;wreg free
  2022   001332  A0D8               	btfss	status,0,c
  2023   001334  EF9E  F009         	goto	u3621
  2024   001338  EFA0  F009         	goto	u3620
  2025   00133C                     u3621:
  2026   00133C  EFAB  F009         	goto	l3952
  2027   001340                     u3620:
  2028   001340                     
  2029                           ;color.c: 299:         hue = 0;
  2030   001340  0E00               	movlw	0
  2031   001342  0100               	movlb	0	; () banked
  2032   001344  6F94               	movwf	convert_rgb2hue@hue& (0+255),b
  2033   001346  0E00               	movlw	0
  2034   001348  6F95               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  2035   00134A  0E00               	movlw	0
  2036   00134C  6F96               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  2037   00134E  0E00               	movlw	0
  2038   001350  6F97               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  2039                           
  2040                           ;color.c: 300:     } else if (max == r){
  2041   001352  EFB4  F00A         	goto	l3964
  2042   001356                     l3952:
  2043   001356  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2044   00135A  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2045   00135E  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2046   001362  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2047   001366  C098  F005         	movff	convert_rgb2hue@r,___fleq@ff2
  2048   00136A  C099  F006         	movff	convert_rgb2hue@r+1,___fleq@ff2+1
  2049   00136E  C09A  F007         	movff	convert_rgb2hue@r+2,___fleq@ff2+2
  2050   001372  C09B  F008         	movff	convert_rgb2hue@r+3,___fleq@ff2+3
  2051   001376  ECC3  F017         	call	___fleq	;wreg free
  2052   00137A  A0D8               	btfss	status,0,c
  2053   00137C  EFC2  F009         	goto	u3631
  2054   001380  EFC4  F009         	goto	u3630
  2055   001384                     u3631:
  2056   001384  EFF2  F009         	goto	l3956
  2057   001388                     u3630:
  2058   001388                     
  2059                           ;color.c: 301:         hue = (b - g) / diff;
  2060   001388  C09C  F015         	movff	convert_rgb2hue@g,___flsub@a
  2061   00138C  C09D  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2062   001390  C09E  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2063   001394  C09F  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2064   001398  C0A0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2065   00139C  C0A1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2066   0013A0  C0A2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2067   0013A4  C0A3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2068   0013A8  EC9E  F019         	call	___flsub	;wreg free
  2069   0013AC  C011  F01A         	movff	?___flsub,___fldiv@b
  2070   0013B0  C012  F01B         	movff	?___flsub+1,___fldiv@b+1
  2071   0013B4  C013  F01C         	movff	?___flsub+2,___fldiv@b+2
  2072   0013B8  C014  F01D         	movff	?___flsub+3,___fldiv@b+3
  2073   0013BC  C08C  F01E         	movff	convert_rgb2hue@diff,___fldiv@a
  2074   0013C0  C08D  F01F         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2075   0013C4  C08E  F020         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2076   0013C8  C08F  F021         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2077   0013CC  EC74  F00F         	call	___fldiv	;wreg free
  2078   0013D0  C01A  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2079   0013D4  C01B  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2080   0013D8  C01C  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2081   0013DC  C01D  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2082                           
  2083                           ;color.c: 302:     } else if (max == g){
  2084   0013E0  EFB4  F00A         	goto	l3964
  2085   0013E4                     l3956:
  2086   0013E4  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2087   0013E8  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2088   0013EC  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2089   0013F0  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2090   0013F4  C09C  F005         	movff	convert_rgb2hue@g,___fleq@ff2
  2091   0013F8  C09D  F006         	movff	convert_rgb2hue@g+1,___fleq@ff2+1
  2092   0013FC  C09E  F007         	movff	convert_rgb2hue@g+2,___fleq@ff2+2
  2093   001400  C09F  F008         	movff	convert_rgb2hue@g+3,___fleq@ff2+3
  2094   001404  ECC3  F017         	call	___fleq	;wreg free
  2095   001408  A0D8               	btfss	status,0,c
  2096   00140A  EF09  F00A         	goto	u3641
  2097   00140E  EF0B  F00A         	goto	u3640
  2098   001412                     u3641:
  2099   001412  EF53  F00A         	goto	l3960
  2100   001416                     u3640:
  2101   001416                     
  2102                           ;color.c: 303:         hue = (b - r) / diff;
  2103   001416  C098  F015         	movff	convert_rgb2hue@r,___flsub@a
  2104   00141A  C099  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2105   00141E  C09A  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2106   001422  C09B  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2107   001426  C0A0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2108   00142A  C0A1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2109   00142E  C0A2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2110   001432  C0A3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2111   001436  EC9E  F019         	call	___flsub	;wreg free
  2112   00143A  C011  F01A         	movff	?___flsub,___fldiv@b
  2113   00143E  C012  F01B         	movff	?___flsub+1,___fldiv@b+1
  2114   001442  C013  F01C         	movff	?___flsub+2,___fldiv@b+2
  2115   001446  C014  F01D         	movff	?___flsub+3,___fldiv@b+3
  2116   00144A  C08C  F01E         	movff	convert_rgb2hue@diff,___fldiv@a
  2117   00144E  C08D  F01F         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2118   001452  C08E  F020         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2119   001456  C08F  F021         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2120   00145A  EC74  F00F         	call	___fldiv	;wreg free
  2121   00145E  C01A  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2122   001462  C01B  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2123   001466  C01C  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2124   00146A  C01D  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2125                           
  2126                           ;color.c: 304:         hue = hue + 2;
  2127   00146E  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2128   001472  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2129   001476  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2130   00147A  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2131   00147E  0E00               	movlw	0
  2132   001480  6E05               	movwf	___fladd@a^0,c
  2133   001482  0E00               	movlw	0
  2134   001484  6E06               	movwf	(___fladd@a+1)^0,c
  2135   001486  0E00               	movlw	0
  2136   001488  6E07               	movwf	(___fladd@a+2)^0,c
  2137   00148A  0E40               	movlw	64
  2138   00148C  6E08               	movwf	(___fladd@a+3)^0,c
  2139   00148E  ECFF  F00A         	call	___fladd	;wreg free
  2140   001492  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2141   001496  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2142   00149A  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2143   00149E  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2144                           
  2145                           ;color.c: 305:     } else if (max == b){
  2146   0014A2  EFB4  F00A         	goto	l3964
  2147   0014A6                     l3960:
  2148   0014A6  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2149   0014AA  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2150   0014AE  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2151   0014B2  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2152   0014B6  C0A0  F005         	movff	convert_rgb2hue@b,___fleq@ff2
  2153   0014BA  C0A1  F006         	movff	convert_rgb2hue@b+1,___fleq@ff2+1
  2154   0014BE  C0A2  F007         	movff	convert_rgb2hue@b+2,___fleq@ff2+2
  2155   0014C2  C0A3  F008         	movff	convert_rgb2hue@b+3,___fleq@ff2+3
  2156   0014C6  ECC3  F017         	call	___fleq	;wreg free
  2157   0014CA  A0D8               	btfss	status,0,c
  2158   0014CC  EF6A  F00A         	goto	u3651
  2159   0014D0  EF6C  F00A         	goto	u3650
  2160   0014D4                     u3651:
  2161   0014D4  EFB4  F00A         	goto	l137
  2162   0014D8                     u3650:
  2163   0014D8                     
  2164                           ;color.c: 306:         hue = (r - g) / diff;
  2165   0014D8  C09C  F015         	movff	convert_rgb2hue@g,___flsub@a
  2166   0014DC  C09D  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2167   0014E0  C09E  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2168   0014E4  C09F  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2169   0014E8  C098  F011         	movff	convert_rgb2hue@r,___flsub@b
  2170   0014EC  C099  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2171   0014F0  C09A  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2172   0014F4  C09B  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2173   0014F8  EC9E  F019         	call	___flsub	;wreg free
  2174   0014FC  C011  F01A         	movff	?___flsub,___fldiv@b
  2175   001500  C012  F01B         	movff	?___flsub+1,___fldiv@b+1
  2176   001504  C013  F01C         	movff	?___flsub+2,___fldiv@b+2
  2177   001508  C014  F01D         	movff	?___flsub+3,___fldiv@b+3
  2178   00150C  C08C  F01E         	movff	convert_rgb2hue@diff,___fldiv@a
  2179   001510  C08D  F01F         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2180   001514  C08E  F020         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2181   001518  C08F  F021         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2182   00151C  EC74  F00F         	call	___fldiv	;wreg free
  2183   001520  C01A  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2184   001524  C01B  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2185   001528  C01C  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2186   00152C  C01D  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2187                           
  2188                           ;color.c: 307:         hue = hue + 4;
  2189   001530  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2190   001534  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2191   001538  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2192   00153C  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2193   001540  0E00               	movlw	0
  2194   001542  6E05               	movwf	___fladd@a^0,c
  2195   001544  0E00               	movlw	0
  2196   001546  6E06               	movwf	(___fladd@a+1)^0,c
  2197   001548  0E80               	movlw	128
  2198   00154A  6E07               	movwf	(___fladd@a+2)^0,c
  2199   00154C  0E40               	movlw	64
  2200   00154E  6E08               	movwf	(___fladd@a+3)^0,c
  2201   001550  ECFF  F00A         	call	___fladd	;wreg free
  2202   001554  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2203   001558  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2204   00155C  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2205   001560  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2206   001564  EFB4  F00A         	goto	l3964
  2207   001568                     l137:
  2208   001568                     l3964:
  2209                           
  2210                           ;color.c: 310:     hue = hue * 60;
  2211   001568  C094  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2212   00156C  C095  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2213   001570  C096  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2214   001574  C097  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2215   001578  0E00               	movlw	0
  2216   00157A  6E05               	movwf	___flmul@a^0,c
  2217   00157C  0E00               	movlw	0
  2218   00157E  6E06               	movwf	(___flmul@a+1)^0,c
  2219   001580  0E70               	movlw	112
  2220   001582  6E07               	movwf	(___flmul@a+2)^0,c
  2221   001584  0E42               	movlw	66
  2222   001586  6E08               	movwf	(___flmul@a+3)^0,c
  2223   001588  EC5F  F00D         	call	___flmul	;wreg free
  2224   00158C  C001  F094         	movff	?___flmul,convert_rgb2hue@hue
  2225   001590  C002  F095         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2226   001594  C003  F096         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2227   001598  C004  F097         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2228   00159C                     
  2229                           ;color.c: 311:     if (hue < 0) {
  2230   00159C  0100               	movlb	0	; () banked
  2231   00159E  BF97               	btfsc	(convert_rgb2hue@hue+3)& (0+255),7,b
  2232   0015A0  EFD6  F00A         	goto	u3660
  2233   0015A4  EFD4  F00A         	goto	u3661
  2234   0015A8                     u3661:
  2235   0015A8  EFF0  F00A         	goto	l141
  2236   0015AC                     u3660:
  2237   0015AC                     
  2238                           ; BSR set to: 0
  2239                           ;color.c: 312:         hue = hue + 360;
  2240   0015AC  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2241   0015B0  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2242   0015B4  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2243   0015B8  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2244   0015BC  0E00               	movlw	0
  2245   0015BE  6E05               	movwf	___fladd@a^0,c
  2246   0015C0  0E00               	movlw	0
  2247   0015C2  6E06               	movwf	(___fladd@a+1)^0,c
  2248   0015C4  0EB4               	movlw	180
  2249   0015C6  6E07               	movwf	(___fladd@a+2)^0,c
  2250   0015C8  0E43               	movlw	67
  2251   0015CA  6E08               	movwf	(___fladd@a+3)^0,c
  2252   0015CC  ECFF  F00A         	call	___fladd	;wreg free
  2253   0015D0  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2254   0015D4  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2255   0015D8  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2256   0015DC  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2257   0015E0                     l141:
  2258                           
  2259                           ;color.c: 315:     return (unsigned int)hue;
  2260   0015E0  C094  F033         	movff	convert_rgb2hue@hue,___fltol@f1
  2261   0015E4  C095  F034         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2262   0015E8  C096  F035         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2263   0015EC  C097  F036         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2264   0015F0  EC38  F015         	call	___fltol	;wreg free
  2265   0015F4  C033  F03D         	movff	?___fltol,?_convert_rgb2hue
  2266   0015F8  C034  F03E         	movff	?___fltol+1,?_convert_rgb2hue+1
  2267   0015FC  0012               	return		;funcret
  2268   0015FE                     __end_of_convert_rgb2hue:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function ___xxtofl *****************
  2272 ;; Defined at:
  2273 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  sign            1    wreg     unsigned char 
  2276 ;;  val             4    0[COMRAM] long 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  sign            1    8[COMRAM] unsigned char 
  2279 ;;  arg             4   10[COMRAM] unsigned long 
  2280 ;;  exp             1    9[COMRAM] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  4    0[COMRAM] unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:       14 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_convert_rgb2hue
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text4
  2305   002454                     __ptext4:
  2306                           	callstack 0
  2307   002454                     ___xxtofl:
  2308                           	callstack 28
  2309                           
  2310                           ;incstack = 0
  2311                           ;___xxtofl@sign stored from wreg
  2312   002454  6E09               	movwf	___xxtofl@sign^0,c
  2313   002456  5009               	movf	___xxtofl@sign^0,w,c
  2314   002458  B4D8               	btfsc	status,2,c
  2315   00245A  EF31  F012         	goto	u3451
  2316   00245E  EF33  F012         	goto	u3450
  2317   002462                     u3451:
  2318   002462  EF55  F012         	goto	l1213
  2319   002466                     u3450:
  2320   002466  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2321   002468  EF3A  F012         	goto	u3460
  2322   00246C  EF38  F012         	goto	u3461
  2323   002470                     u3461:
  2324   002470  EF55  F012         	goto	l1213
  2325   002474                     u3460:
  2326   002474  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2327   002478  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2328   00247C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2329   002480  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2330   002484  1E05               	comf	??___xxtofl^0,f,c
  2331   002486  1E06               	comf	(??___xxtofl+1)^0,f,c
  2332   002488  1E07               	comf	(??___xxtofl+2)^0,f,c
  2333   00248A  1E08               	comf	(??___xxtofl+3)^0,f,c
  2334   00248C  2A05               	incf	??___xxtofl^0,f,c
  2335   00248E  0E00               	movlw	0
  2336   002490  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2337   002492  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2338   002494  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2339   002496  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2340   00249A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2341   00249E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2342   0024A2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2343   0024A6  EF5D  F012         	goto	l3816
  2344   0024AA                     l1213:
  2345   0024AA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2346   0024AE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2347   0024B2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2348   0024B6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2349   0024BA                     l3816:
  2350   0024BA  5001               	movf	___xxtofl@val^0,w,c
  2351   0024BC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2352   0024BE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2353   0024C0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2354   0024C2  A4D8               	btfss	status,2,c
  2355   0024C4  EF66  F012         	goto	u3471
  2356   0024C8  EF68  F012         	goto	u3470
  2357   0024CC                     u3471:
  2358   0024CC  EF72  F012         	goto	l3822
  2359   0024D0                     u3470:
  2360   0024D0  0E00               	movlw	0
  2361   0024D2  6E01               	movwf	?___xxtofl^0,c
  2362   0024D4  0E00               	movlw	0
  2363   0024D6  6E02               	movwf	(?___xxtofl+1)^0,c
  2364   0024D8  0E00               	movlw	0
  2365   0024DA  6E03               	movwf	(?___xxtofl+2)^0,c
  2366   0024DC  0E00               	movlw	0
  2367   0024DE  6E04               	movwf	(?___xxtofl+3)^0,c
  2368   0024E0  EF03  F013         	goto	l1216
  2369   0024E4                     l3822:
  2370   0024E4  0E96               	movlw	150
  2371   0024E6  6E0A               	movwf	___xxtofl@exp^0,c
  2372   0024E8  EF7C  F012         	goto	l3826
  2373   0024EC                     l3824:
  2374   0024EC  2A0A               	incf	___xxtofl@exp^0,f,c
  2375   0024EE  90D8               	bcf	status,0,c
  2376   0024F0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2377   0024F2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2378   0024F4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2379   0024F6  320B               	rrcf	___xxtofl@arg^0,f,c
  2380   0024F8                     l3826:
  2381   0024F8  0E00               	movlw	0
  2382   0024FA  140B               	andwf	___xxtofl@arg^0,w,c
  2383   0024FC  6E05               	movwf	??___xxtofl^0,c
  2384   0024FE  0E00               	movlw	0
  2385   002500  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2386   002502  6E06               	movwf	(??___xxtofl+1)^0,c
  2387   002504  0E00               	movlw	0
  2388   002506  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2389   002508  6E07               	movwf	(??___xxtofl+2)^0,c
  2390   00250A  0EFE               	movlw	254
  2391   00250C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2392   00250E  6E08               	movwf	(??___xxtofl+3)^0,c
  2393   002510  5005               	movf	??___xxtofl^0,w,c
  2394   002512  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2395   002514  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2396   002516  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2397   002518  A4D8               	btfss	status,2,c
  2398   00251A  EF91  F012         	goto	u3481
  2399   00251E  EF93  F012         	goto	u3480
  2400   002522                     u3481:
  2401   002522  EF76  F012         	goto	l3824
  2402   002526                     u3480:
  2403   002526  EFA1  F012         	goto	l1220
  2404   00252A                     l3828:
  2405   00252A  2A0A               	incf	___xxtofl@exp^0,f,c
  2406   00252C  0E01               	movlw	1
  2407   00252E  260B               	addwf	___xxtofl@arg^0,f,c
  2408   002530  0E00               	movlw	0
  2409   002532  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2410   002534  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2411   002536  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2412   002538  90D8               	bcf	status,0,c
  2413   00253A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2414   00253C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2415   00253E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2416   002540  320B               	rrcf	___xxtofl@arg^0,f,c
  2417   002542                     l1220:
  2418   002542  0E00               	movlw	0
  2419   002544  140B               	andwf	___xxtofl@arg^0,w,c
  2420   002546  6E05               	movwf	??___xxtofl^0,c
  2421   002548  0E00               	movlw	0
  2422   00254A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2423   00254C  6E06               	movwf	(??___xxtofl+1)^0,c
  2424   00254E  0E00               	movlw	0
  2425   002550  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2426   002552  6E07               	movwf	(??___xxtofl+2)^0,c
  2427   002554  0EFF               	movlw	255
  2428   002556  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2429   002558  6E08               	movwf	(??___xxtofl+3)^0,c
  2430   00255A  5005               	movf	??___xxtofl^0,w,c
  2431   00255C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2432   00255E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2433   002560  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2434   002562  A4D8               	btfss	status,2,c
  2435   002564  EFB6  F012         	goto	u3491
  2436   002568  EFB8  F012         	goto	u3490
  2437   00256C                     u3491:
  2438   00256C  EF95  F012         	goto	l3828
  2439   002570                     u3490:
  2440   002570  EFC0  F012         	goto	l3836
  2441   002574                     l3834:
  2442   002574  060A               	decf	___xxtofl@exp^0,f,c
  2443   002576  90D8               	bcf	status,0,c
  2444   002578  360B               	rlcf	___xxtofl@arg^0,f,c
  2445   00257A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2446   00257C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2447   00257E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2448   002580                     l3836:
  2449   002580  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2450   002582  EFC5  F012         	goto	u3501
  2451   002586  EFC7  F012         	goto	u3500
  2452   00258A                     u3501:
  2453   00258A  EFCF  F012         	goto	l1227
  2454   00258E                     u3500:
  2455   00258E  0E02               	movlw	2
  2456   002590  600A               	cpfslt	___xxtofl@exp^0,c
  2457   002592  EFCD  F012         	goto	u3511
  2458   002596  EFCF  F012         	goto	u3510
  2459   00259A                     u3511:
  2460   00259A  EFBA  F012         	goto	l3834
  2461   00259E                     u3510:
  2462   00259E                     l1227:
  2463   00259E  B00A               	btfsc	___xxtofl@exp^0,0,c
  2464   0025A0  EFD4  F012         	goto	u3521
  2465   0025A4  EFD6  F012         	goto	u3520
  2466   0025A8                     u3521:
  2467   0025A8  EFD7  F012         	goto	l3842
  2468   0025AC                     u3520:
  2469   0025AC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2470   0025AE                     l3842:
  2471   0025AE  90D8               	bcf	status,0,c
  2472   0025B0  320A               	rrcf	___xxtofl@exp^0,f,c
  2473   0025B2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2474   0025B6  6A06               	clrf	(??___xxtofl+1)^0,c
  2475   0025B8  6A07               	clrf	(??___xxtofl+2)^0,c
  2476   0025BA  6A08               	clrf	(??___xxtofl+3)^0,c
  2477   0025BC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2478   0025C0  6A07               	clrf	(??___xxtofl+2)^0,c
  2479   0025C2  6A06               	clrf	(??___xxtofl+1)^0,c
  2480   0025C4  6A05               	clrf	??___xxtofl^0,c
  2481   0025C6  5005               	movf	??___xxtofl^0,w,c
  2482   0025C8  120B               	iorwf	___xxtofl@arg^0,f,c
  2483   0025CA  5006               	movf	(??___xxtofl+1)^0,w,c
  2484   0025CC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2485   0025CE  5007               	movf	(??___xxtofl+2)^0,w,c
  2486   0025D0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2487   0025D2  5008               	movf	(??___xxtofl+3)^0,w,c
  2488   0025D4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2489   0025D6  5009               	movf	___xxtofl@sign^0,w,c
  2490   0025D8  B4D8               	btfsc	status,2,c
  2491   0025DA  EFF1  F012         	goto	u3531
  2492   0025DE  EFF3  F012         	goto	u3530
  2493   0025E2                     u3531:
  2494   0025E2  EFFB  F012         	goto	l3852
  2495   0025E6                     u3530:
  2496   0025E6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2497   0025E8  EFFA  F012         	goto	u3540
  2498   0025EC  EFF8  F012         	goto	u3541
  2499   0025F0                     u3541:
  2500   0025F0  EFFB  F012         	goto	l3852
  2501   0025F4                     u3540:
  2502   0025F4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2503   0025F6                     l3852:
  2504   0025F6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2505   0025FA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2506   0025FE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2507   002602  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2508   002606                     l1216:
  2509   002606  0012               	return		;funcret
  2510   002608                     __end_of___xxtofl:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function ___fltol *****************
  2514 ;; Defined at:
  2515 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  f1              4   50[COMRAM] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  exp1            1   59[COMRAM] unsigned char 
  2520 ;;  sign1           1   58[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  4   50[COMRAM] long 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2532 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;Total ram usage:       10 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_convert_rgb2hue
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text5
  2545   002A70                     __ptext5:
  2546                           	callstack 0
  2547   002A70                     ___fltol:
  2548                           	callstack 28
  2549   002A70  3435               	rlcf	(___fltol@f1+2)^0,w,c
  2550   002A72  3436               	rlcf	(___fltol@f1+3)^0,w,c
  2551   002A74  6E3C               	movwf	___fltol@exp1^0,c
  2552   002A76  503C               	movf	___fltol@exp1^0,w,c
  2553   002A78  A4D8               	btfss	status,2,c
  2554   002A7A  EF41  F015         	goto	u3381
  2555   002A7E  EF43  F015         	goto	u3380
  2556   002A82                     u3381:
  2557   002A82  EF4D  F015         	goto	l3772
  2558   002A86                     u3380:
  2559   002A86                     l3768:
  2560   002A86  0E00               	movlw	0
  2561   002A88  6E33               	movwf	?___fltol^0,c
  2562   002A8A  0E00               	movlw	0
  2563   002A8C  6E34               	movwf	(?___fltol+1)^0,c
  2564   002A8E  0E00               	movlw	0
  2565   002A90  6E35               	movwf	(?___fltol+2)^0,c
  2566   002A92  0E00               	movlw	0
  2567   002A94  6E36               	movwf	(?___fltol+3)^0,c
  2568   002A96  EFBA  F015         	goto	l855
  2569   002A9A                     l3772:
  2570   002A9A  C033  F037         	movff	___fltol@f1,??___fltol
  2571   002A9E  C034  F038         	movff	___fltol@f1+1,??___fltol+1
  2572   002AA2  C035  F039         	movff	___fltol@f1+2,??___fltol+2
  2573   002AA6  C036  F03A         	movff	___fltol@f1+3,??___fltol+3
  2574   002AAA  0E20               	movlw	32
  2575   002AAC  EF5D  F015         	goto	u3390
  2576   002AB0                     u3395:
  2577   002AB0  90D8               	bcf	status,0,c
  2578   002AB2  323A               	rrcf	(??___fltol+3)^0,f,c
  2579   002AB4  3239               	rrcf	(??___fltol+2)^0,f,c
  2580   002AB6  3238               	rrcf	(??___fltol+1)^0,f,c
  2581   002AB8  3237               	rrcf	??___fltol^0,f,c
  2582   002ABA                     u3390:
  2583   002ABA  2EE8               	decfsz	wreg,f,c
  2584   002ABC  EF58  F015         	goto	u3395
  2585   002AC0  5037               	movf	??___fltol^0,w,c
  2586   002AC2  6E3B               	movwf	___fltol@sign1^0,c
  2587   002AC4  8E35               	bsf	(___fltol@f1+2)^0,7,c
  2588   002AC6  0EFF               	movlw	255
  2589   002AC8  1633               	andwf	___fltol@f1^0,f,c
  2590   002ACA  0EFF               	movlw	255
  2591   002ACC  1634               	andwf	(___fltol@f1+1)^0,f,c
  2592   002ACE  0EFF               	movlw	255
  2593   002AD0  1635               	andwf	(___fltol@f1+2)^0,f,c
  2594   002AD2  0E00               	movlw	0
  2595   002AD4  1636               	andwf	(___fltol@f1+3)^0,f,c
  2596   002AD6  0E96               	movlw	150
  2597   002AD8  5E3C               	subwf	___fltol@exp1^0,f,c
  2598   002ADA  BE3C               	btfsc	___fltol@exp1^0,7,c
  2599   002ADC  EF74  F015         	goto	u3400
  2600   002AE0  EF72  F015         	goto	u3401
  2601   002AE4                     u3401:
  2602   002AE4  EF8A  F015         	goto	l3792
  2603   002AE8                     u3400:
  2604   002AE8  503C               	movf	___fltol@exp1^0,w,c
  2605   002AEA  0A80               	xorlw	128
  2606   002AEC  0F97               	addlw	151
  2607   002AEE  B0D8               	btfsc	status,0,c
  2608   002AF0  EF7C  F015         	goto	u3411
  2609   002AF4  EF7E  F015         	goto	u3410
  2610   002AF8                     u3411:
  2611   002AF8  EF80  F015         	goto	l3788
  2612   002AFC                     u3410:
  2613   002AFC  EF43  F015         	goto	l3768
  2614   002B00                     l3788:
  2615   002B00  90D8               	bcf	status,0,c
  2616   002B02  3236               	rrcf	(___fltol@f1+3)^0,f,c
  2617   002B04  3235               	rrcf	(___fltol@f1+2)^0,f,c
  2618   002B06  3234               	rrcf	(___fltol@f1+1)^0,f,c
  2619   002B08  3233               	rrcf	___fltol@f1^0,f,c
  2620   002B0A  3E3C               	incfsz	___fltol@exp1^0,f,c
  2621   002B0C  EF80  F015         	goto	l3788
  2622   002B10  EFA2  F015         	goto	l3802
  2623   002B14                     l3792:
  2624   002B14  0E1F               	movlw	31
  2625   002B16  643C               	cpfsgt	___fltol@exp1^0,c
  2626   002B18  EF90  F015         	goto	u3421
  2627   002B1C  EF92  F015         	goto	u3420
  2628   002B20                     u3421:
  2629   002B20  EF9A  F015         	goto	l3800
  2630   002B24                     u3420:
  2631   002B24  EF43  F015         	goto	l3768
  2632   002B28                     l3798:
  2633   002B28  90D8               	bcf	status,0,c
  2634   002B2A  3633               	rlcf	___fltol@f1^0,f,c
  2635   002B2C  3634               	rlcf	(___fltol@f1+1)^0,f,c
  2636   002B2E  3635               	rlcf	(___fltol@f1+2)^0,f,c
  2637   002B30  3636               	rlcf	(___fltol@f1+3)^0,f,c
  2638   002B32  063C               	decf	___fltol@exp1^0,f,c
  2639   002B34                     l3800:
  2640   002B34  503C               	movf	___fltol@exp1^0,w,c
  2641   002B36  A4D8               	btfss	status,2,c
  2642   002B38  EFA0  F015         	goto	u3431
  2643   002B3C  EFA2  F015         	goto	u3430
  2644   002B40                     u3431:
  2645   002B40  EF94  F015         	goto	l3798
  2646   002B44                     u3430:
  2647   002B44                     l3802:
  2648   002B44  503B               	movf	___fltol@sign1^0,w,c
  2649   002B46  B4D8               	btfsc	status,2,c
  2650   002B48  EFA8  F015         	goto	u3441
  2651   002B4C  EFAA  F015         	goto	u3440
  2652   002B50                     u3441:
  2653   002B50  EFB2  F015         	goto	l3806
  2654   002B54                     u3440:
  2655   002B54  1E36               	comf	(___fltol@f1+3)^0,f,c
  2656   002B56  1E35               	comf	(___fltol@f1+2)^0,f,c
  2657   002B58  1E34               	comf	(___fltol@f1+1)^0,f,c
  2658   002B5A  6C33               	negf	___fltol@f1^0,c
  2659   002B5C  0E00               	movlw	0
  2660   002B5E  2234               	addwfc	(___fltol@f1+1)^0,f,c
  2661   002B60  2235               	addwfc	(___fltol@f1+2)^0,f,c
  2662   002B62  2236               	addwfc	(___fltol@f1+3)^0,f,c
  2663   002B64                     l3806:
  2664   002B64  C033  F033         	movff	___fltol@f1,?___fltol
  2665   002B68  C034  F034         	movff	___fltol@f1+1,?___fltol+1
  2666   002B6C  C035  F035         	movff	___fltol@f1+2,?___fltol+2
  2667   002B70  C036  F036         	movff	___fltol@f1+3,?___fltol+3
  2668   002B74                     l855:
  2669   002B74  0012               	return		;funcret
  2670   002B76                     __end_of___fltol:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function ___flsub *****************
  2674 ;; Defined at:
  2675 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  b               4   16[COMRAM] long 
  2678 ;;  a               4   20[COMRAM] long 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  4   16[COMRAM] long 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2690 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; Hardware stack levels required when called: 1
  2697 ;; This function calls:
  2698 ;;		___fladd
  2699 ;; This function is called by:
  2700 ;;		_convert_rgb2hue
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text6
  2705   00333C                     __ptext6:
  2706                           	callstack 0
  2707   00333C                     ___flsub:
  2708                           	callstack 27
  2709   00333C  0E00               	movlw	0
  2710   00333E  1A15               	xorwf	___flsub@a^0,f,c
  2711   003340  0E00               	movlw	0
  2712   003342  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2713   003344  0E00               	movlw	0
  2714   003346  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2715   003348  0E80               	movlw	128
  2716   00334A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2717   00334C  C011  F001         	movff	___flsub@b,___fladd@b
  2718   003350  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2719   003354  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2720   003358  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2721   00335C  C015  F005         	movff	___flsub@a,___fladd@a
  2722   003360  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2723   003364  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2724   003368  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2725   00336C  ECFF  F00A         	call	___fladd	;wreg free
  2726   003370  C001  F011         	movff	?___fladd,?___flsub
  2727   003374  C002  F012         	movff	?___fladd+1,?___flsub+1
  2728   003378  C003  F013         	movff	?___fladd+2,?___flsub+2
  2729   00337C  C004  F014         	movff	?___fladd+3,?___flsub+3
  2730   003380  0012               	return		;funcret
  2731   003382                     __end_of___flsub:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function ___fladd *****************
  2735 ;; Defined at:
  2736 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  b               4    0[COMRAM] long 
  2739 ;;  a               4    4[COMRAM] long 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  grs             1   15[COMRAM] unsigned char 
  2742 ;;  bexp            1   14[COMRAM] unsigned char 
  2743 ;;  aexp            1   13[COMRAM] unsigned char 
  2744 ;;  signs           1   12[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    0[COMRAM] unsigned char 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2754 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2757 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;Total ram usage:       16 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_convert_rgb2hue
  2764 ;;		___flsub
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text7
  2769   0015FE                     __ptext7:
  2770                           	callstack 0
  2771   0015FE                     ___fladd:
  2772                           	callstack 27
  2773   0015FE  5004               	movf	(___fladd@b+3)^0,w,c
  2774   001600  0B80               	andlw	128
  2775   001602  6E0D               	movwf	___fladd@signs^0,c
  2776   001604  5004               	movf	(___fladd@b+3)^0,w,c
  2777   001606  2404               	addwf	(___fladd@b+3)^0,w,c
  2778   001608  6E0F               	movwf	___fladd@bexp^0,c
  2779   00160A  AE03               	btfss	(___fladd@b+2)^0,7,c
  2780   00160C  EF0A  F00B         	goto	u2391
  2781   001610  EF0C  F00B         	goto	u2390
  2782   001614                     u2391:
  2783   001614  EF0D  F00B         	goto	l3152
  2784   001618                     u2390:
  2785   001618  800F               	bsf	___fladd@bexp^0,0,c
  2786   00161A                     l3152:
  2787   00161A  500F               	movf	___fladd@bexp^0,w,c
  2788   00161C  B4D8               	btfsc	status,2,c
  2789   00161E  EF13  F00B         	goto	u2401
  2790   001622  EF15  F00B         	goto	u2400
  2791   001626                     u2401:
  2792   001626  EF2A  F00B         	goto	l3162
  2793   00162A                     u2400:
  2794   00162A  280F               	incf	___fladd@bexp^0,w,c
  2795   00162C  A4D8               	btfss	status,2,c
  2796   00162E  EF1B  F00B         	goto	u2411
  2797   001632  EF1D  F00B         	goto	u2410
  2798   001636                     u2411:
  2799   001636  EF25  F00B         	goto	l3158
  2800   00163A                     u2410:
  2801   00163A  0E00               	movlw	0
  2802   00163C  6E01               	movwf	___fladd@b^0,c
  2803   00163E  0E00               	movlw	0
  2804   001640  6E02               	movwf	(___fladd@b+1)^0,c
  2805   001642  0E00               	movlw	0
  2806   001644  6E03               	movwf	(___fladd@b+2)^0,c
  2807   001646  0E00               	movlw	0
  2808   001648  6E04               	movwf	(___fladd@b+3)^0,c
  2809   00164A                     l3158:
  2810   00164A  8E03               	bsf	(___fladd@b+2)^0,7,c
  2811   00164C  0E00               	movlw	0
  2812   00164E  6E04               	movwf	(___fladd@b+3)^0,c
  2813   001650  EF32  F00B         	goto	l3164
  2814   001654                     l3162:
  2815   001654  0E00               	movlw	0
  2816   001656  6E01               	movwf	___fladd@b^0,c
  2817   001658  0E00               	movlw	0
  2818   00165A  6E02               	movwf	(___fladd@b+1)^0,c
  2819   00165C  0E00               	movlw	0
  2820   00165E  6E03               	movwf	(___fladd@b+2)^0,c
  2821   001660  0E00               	movlw	0
  2822   001662  6E04               	movwf	(___fladd@b+3)^0,c
  2823   001664                     l3164:
  2824   001664  5008               	movf	(___fladd@a+3)^0,w,c
  2825   001666  0B80               	andlw	128
  2826   001668  6E0E               	movwf	___fladd@aexp^0,c
  2827   00166A  500D               	movf	___fladd@signs^0,w,c
  2828   00166C  180E               	xorwf	___fladd@aexp^0,w,c
  2829   00166E  B4D8               	btfsc	status,2,c
  2830   001670  EF3C  F00B         	goto	u2421
  2831   001674  EF3E  F00B         	goto	u2420
  2832   001678                     u2421:
  2833   001678  EF3F  F00B         	goto	l3170
  2834   00167C                     u2420:
  2835   00167C  8C0D               	bsf	___fladd@signs^0,6,c
  2836   00167E                     l3170:
  2837   00167E  5008               	movf	(___fladd@a+3)^0,w,c
  2838   001680  2408               	addwf	(___fladd@a+3)^0,w,c
  2839   001682  6E0E               	movwf	___fladd@aexp^0,c
  2840   001684  AE07               	btfss	(___fladd@a+2)^0,7,c
  2841   001686  EF47  F00B         	goto	u2431
  2842   00168A  EF49  F00B         	goto	u2430
  2843   00168E                     u2431:
  2844   00168E  EF4A  F00B         	goto	l3176
  2845   001692                     u2430:
  2846   001692  800E               	bsf	___fladd@aexp^0,0,c
  2847   001694                     l3176:
  2848   001694  500E               	movf	___fladd@aexp^0,w,c
  2849   001696  B4D8               	btfsc	status,2,c
  2850   001698  EF50  F00B         	goto	u2441
  2851   00169C  EF52  F00B         	goto	u2440
  2852   0016A0                     u2441:
  2853   0016A0  EF67  F00B         	goto	l3186
  2854   0016A4                     u2440:
  2855   0016A4  280E               	incf	___fladd@aexp^0,w,c
  2856   0016A6  A4D8               	btfss	status,2,c
  2857   0016A8  EF58  F00B         	goto	u2451
  2858   0016AC  EF5A  F00B         	goto	u2450
  2859   0016B0                     u2451:
  2860   0016B0  EF62  F00B         	goto	l3182
  2861   0016B4                     u2450:
  2862   0016B4  0E00               	movlw	0
  2863   0016B6  6E05               	movwf	___fladd@a^0,c
  2864   0016B8  0E00               	movlw	0
  2865   0016BA  6E06               	movwf	(___fladd@a+1)^0,c
  2866   0016BC  0E00               	movlw	0
  2867   0016BE  6E07               	movwf	(___fladd@a+2)^0,c
  2868   0016C0  0E00               	movlw	0
  2869   0016C2  6E08               	movwf	(___fladd@a+3)^0,c
  2870   0016C4                     l3182:
  2871   0016C4  8E07               	bsf	(___fladd@a+2)^0,7,c
  2872   0016C6  0E00               	movlw	0
  2873   0016C8  6E08               	movwf	(___fladd@a+3)^0,c
  2874   0016CA  EF6F  F00B         	goto	l3188
  2875   0016CE                     l3186:
  2876   0016CE  0E00               	movlw	0
  2877   0016D0  6E05               	movwf	___fladd@a^0,c
  2878   0016D2  0E00               	movlw	0
  2879   0016D4  6E06               	movwf	(___fladd@a+1)^0,c
  2880   0016D6  0E00               	movlw	0
  2881   0016D8  6E07               	movwf	(___fladd@a+2)^0,c
  2882   0016DA  0E00               	movlw	0
  2883   0016DC  6E08               	movwf	(___fladd@a+3)^0,c
  2884   0016DE                     l3188:
  2885   0016DE  500F               	movf	___fladd@bexp^0,w,c
  2886   0016E0  5C0E               	subwf	___fladd@aexp^0,w,c
  2887   0016E2  B0D8               	btfsc	status,0,c
  2888   0016E4  EF76  F00B         	goto	u2461
  2889   0016E8  EF78  F00B         	goto	u2460
  2890   0016EC                     u2461:
  2891   0016EC  EF9F  F00B         	goto	l3224
  2892   0016F0                     u2460:
  2893   0016F0  AC0D               	btfss	___fladd@signs^0,6,c
  2894   0016F2  EF7D  F00B         	goto	u2471
  2895   0016F6  EF7F  F00B         	goto	u2470
  2896   0016FA                     u2471:
  2897   0016FA  EF81  F00B         	goto	l3194
  2898   0016FE                     u2470:
  2899   0016FE  0E80               	movlw	128
  2900   001700  1A0D               	xorwf	___fladd@signs^0,f,c
  2901   001702                     l3194:
  2902   001702  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  2903   001706  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2904   00170A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  2905   00170E  C001  F010         	movff	___fladd@b,___fladd@grs
  2906   001712  C005  F001         	movff	___fladd@a,___fladd@b
  2907   001716  C010  F005         	movff	___fladd@grs,___fladd@a
  2908   00171A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  2909   00171E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  2910   001722  C010  F006         	movff	___fladd@grs,___fladd@a+1
  2911   001726  C003  F010         	movff	___fladd@b+2,___fladd@grs
  2912   00172A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  2913   00172E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  2914   001732  C004  F010         	movff	___fladd@b+3,___fladd@grs
  2915   001736  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  2916   00173A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  2917   00173E                     l3224:
  2918   00173E  0E00               	movlw	0
  2919   001740  6E10               	movwf	___fladd@grs^0,c
  2920   001742  500F               	movf	___fladd@bexp^0,w,c
  2921   001744  C00E  F009         	movff	___fladd@aexp,??___fladd
  2922   001748  6A0A               	clrf	(??___fladd+1)^0,c
  2923   00174A  5E09               	subwf	??___fladd^0,f,c
  2924   00174C  0E00               	movlw	0
  2925   00174E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  2926   001750  BE0A               	btfsc	(??___fladd+1)^0,7,c
  2927   001752  EFB4  F00B         	goto	u2481
  2928   001756  500A               	movf	(??___fladd+1)^0,w,c
  2929   001758  E109               	bnz	u2480
  2930   00175A  0E1A               	movlw	26
  2931   00175C  5C09               	subwf	??___fladd^0,w,c
  2932   00175E  A0D8               	btfss	status,0,c
  2933   001760  EFB4  F00B         	goto	u2481
  2934   001764  EFB6  F00B         	goto	u2480
  2935   001768                     u2481:
  2936   001768  EFED  F00B         	goto	l1087
  2937   00176C                     u2480:
  2938   00176C  5001               	movf	___fladd@b^0,w,c
  2939   00176E  1002               	iorwf	(___fladd@b+1)^0,w,c
  2940   001770  1003               	iorwf	(___fladd@b+2)^0,w,c
  2941   001772  1004               	iorwf	(___fladd@b+3)^0,w,c
  2942   001774  A4D8               	btfss	status,2,c
  2943   001776  EFBF  F00B         	goto	u2491
  2944   00177A  EFC2  F00B         	goto	u2490
  2945   00177E                     u2491:
  2946   00177E  0E01               	movlw	1
  2947   001780  EFC3  F00B         	goto	u2500
  2948   001784                     u2490:
  2949   001784  0E00               	movlw	0
  2950   001786                     u2500:
  2951   001786  6E10               	movwf	___fladd@grs^0,c
  2952   001788  0E00               	movlw	0
  2953   00178A  6E01               	movwf	___fladd@b^0,c
  2954   00178C  0E00               	movlw	0
  2955   00178E  6E02               	movwf	(___fladd@b+1)^0,c
  2956   001790  0E00               	movlw	0
  2957   001792  6E03               	movwf	(___fladd@b+2)^0,c
  2958   001794  0E00               	movlw	0
  2959   001796  6E04               	movwf	(___fladd@b+3)^0,c
  2960   001798  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  2961   00179C  EFF6  F00B         	goto	l1086
  2962   0017A0                     l1088:
  2963   0017A0  A010               	btfss	___fladd@grs^0,0,c
  2964   0017A2  EFD5  F00B         	goto	u2511
  2965   0017A6  EFD7  F00B         	goto	u2510
  2966   0017AA                     u2511:
  2967   0017AA  EFDD  F00B         	goto	l3236
  2968   0017AE                     u2510:
  2969   0017AE  90D8               	bcf	status,0,c
  2970   0017B0  3010               	rrcf	___fladd@grs^0,w,c
  2971   0017B2  0901               	iorlw	1
  2972   0017B4  6E10               	movwf	___fladd@grs^0,c
  2973   0017B6  EFDF  F00B         	goto	l3238
  2974   0017BA                     l3236:
  2975   0017BA  90D8               	bcf	status,0,c
  2976   0017BC  3210               	rrcf	___fladd@grs^0,f,c
  2977   0017BE                     l3238:
  2978   0017BE  A001               	btfss	___fladd@b^0,0,c
  2979   0017C0  EFE4  F00B         	goto	u2521
  2980   0017C4  EFE6  F00B         	goto	u2520
  2981   0017C8                     u2521:
  2982   0017C8  EFE7  F00B         	goto	l3242
  2983   0017CC                     u2520:
  2984   0017CC  8E10               	bsf	___fladd@grs^0,7,c
  2985   0017CE                     l3242:
  2986   0017CE  3404               	rlcf	(___fladd@b+3)^0,w,c
  2987   0017D0  3204               	rrcf	(___fladd@b+3)^0,f,c
  2988   0017D2  3203               	rrcf	(___fladd@b+2)^0,f,c
  2989   0017D4  3202               	rrcf	(___fladd@b+1)^0,f,c
  2990   0017D6  3201               	rrcf	___fladd@b^0,f,c
  2991   0017D8  2A0F               	incf	___fladd@bexp^0,f,c
  2992   0017DA                     l1087:
  2993   0017DA  500E               	movf	___fladd@aexp^0,w,c
  2994   0017DC  5C0F               	subwf	___fladd@bexp^0,w,c
  2995   0017DE  A0D8               	btfss	status,0,c
  2996   0017E0  EFF4  F00B         	goto	u2531
  2997   0017E4  EFF6  F00B         	goto	u2530
  2998   0017E8                     u2531:
  2999   0017E8  EFD0  F00B         	goto	l1088
  3000   0017EC                     u2530:
  3001   0017EC                     l1086:
  3002   0017EC  BC0D               	btfsc	___fladd@signs^0,6,c
  3003   0017EE  EFFB  F00B         	goto	u2541
  3004   0017F2  EFFD  F00B         	goto	u2540
  3005   0017F6                     u2541:
  3006   0017F6  EF3D  F00C         	goto	l3270
  3007   0017FA                     u2540:
  3008   0017FA  500F               	movf	___fladd@bexp^0,w,c
  3009   0017FC  A4D8               	btfss	status,2,c
  3010   0017FE  EF03  F00C         	goto	u2551
  3011   001802  EF05  F00C         	goto	u2550
  3012   001806                     u2551:
  3013   001806  EF0F  F00C         	goto	l3252
  3014   00180A                     u2550:
  3015   00180A  0E00               	movlw	0
  3016   00180C  6E01               	movwf	?___fladd^0,c
  3017   00180E  0E00               	movlw	0
  3018   001810  6E02               	movwf	(?___fladd+1)^0,c
  3019   001812  0E00               	movlw	0
  3020   001814  6E03               	movwf	(?___fladd+2)^0,c
  3021   001816  0E00               	movlw	0
  3022   001818  6E04               	movwf	(?___fladd+3)^0,c
  3023   00181A  EF5E  F00D         	goto	l1095
  3024   00181E                     l3252:
  3025   00181E  5005               	movf	___fladd@a^0,w,c
  3026   001820  2601               	addwf	___fladd@b^0,f,c
  3027   001822  5006               	movf	(___fladd@a+1)^0,w,c
  3028   001824  2202               	addwfc	(___fladd@b+1)^0,f,c
  3029   001826  5007               	movf	(___fladd@a+2)^0,w,c
  3030   001828  2203               	addwfc	(___fladd@b+2)^0,f,c
  3031   00182A  5008               	movf	(___fladd@a+3)^0,w,c
  3032   00182C  2204               	addwfc	(___fladd@b+3)^0,f,c
  3033   00182E  A004               	btfss	(___fladd@b+3)^0,0,c
  3034   001830  EF1C  F00C         	goto	u2561
  3035   001834  EF1E  F00C         	goto	u2560
  3036   001838                     u2561:
  3037   001838  EFCA  F00C         	goto	l3306
  3038   00183C                     u2560:
  3039   00183C  A010               	btfss	___fladd@grs^0,0,c
  3040   00183E  EF23  F00C         	goto	u2571
  3041   001842  EF25  F00C         	goto	u2570
  3042   001846                     u2571:
  3043   001846  EF2B  F00C         	goto	l3260
  3044   00184A                     u2570:
  3045   00184A  90D8               	bcf	status,0,c
  3046   00184C  3010               	rrcf	___fladd@grs^0,w,c
  3047   00184E  0901               	iorlw	1
  3048   001850  6E10               	movwf	___fladd@grs^0,c
  3049   001852  EF2D  F00C         	goto	l3262
  3050   001856                     l3260:
  3051   001856  90D8               	bcf	status,0,c
  3052   001858  3210               	rrcf	___fladd@grs^0,f,c
  3053   00185A                     l3262:
  3054   00185A  A001               	btfss	___fladd@b^0,0,c
  3055   00185C  EF32  F00C         	goto	u2581
  3056   001860  EF34  F00C         	goto	u2580
  3057   001864                     u2581:
  3058   001864  EF35  F00C         	goto	l3266
  3059   001868                     u2580:
  3060   001868  8E10               	bsf	___fladd@grs^0,7,c
  3061   00186A                     l3266:
  3062   00186A  3404               	rlcf	(___fladd@b+3)^0,w,c
  3063   00186C  3204               	rrcf	(___fladd@b+3)^0,f,c
  3064   00186E  3203               	rrcf	(___fladd@b+2)^0,f,c
  3065   001870  3202               	rrcf	(___fladd@b+1)^0,f,c
  3066   001872  3201               	rrcf	___fladd@b^0,f,c
  3067   001874  2A0F               	incf	___fladd@bexp^0,f,c
  3068   001876  EFCA  F00C         	goto	l3306
  3069   00187A                     l3270:
  3070   00187A  5005               	movf	___fladd@a^0,w,c
  3071   00187C  5C01               	subwf	___fladd@b^0,w,c
  3072   00187E  5006               	movf	(___fladd@a+1)^0,w,c
  3073   001880  5802               	subwfb	(___fladd@b+1)^0,w,c
  3074   001882  5007               	movf	(___fladd@a+2)^0,w,c
  3075   001884  5803               	subwfb	(___fladd@b+2)^0,w,c
  3076   001886  5004               	movf	(___fladd@b+3)^0,w,c
  3077   001888  0A80               	xorlw	128
  3078   00188A  6E09               	movwf	??___fladd^0,c
  3079   00188C  5008               	movf	(___fladd@a+3)^0,w,c
  3080   00188E  0A80               	xorlw	128
  3081   001890  5809               	subwfb	??___fladd^0,w,c
  3082   001892  B0D8               	btfsc	status,0,c
  3083   001894  EF4E  F00C         	goto	u2591
  3084   001898  EF50  F00C         	goto	u2590
  3085   00189C                     u2591:
  3086   00189C  EF7B  F00C         	goto	l3280
  3087   0018A0                     u2590:
  3088   0018A0  5001               	movf	___fladd@b^0,w,c
  3089   0018A2  5C05               	subwf	___fladd@a^0,w,c
  3090   0018A4  6E09               	movwf	??___fladd^0,c
  3091   0018A6  5002               	movf	(___fladd@b+1)^0,w,c
  3092   0018A8  5806               	subwfb	(___fladd@a+1)^0,w,c
  3093   0018AA  6E0A               	movwf	(??___fladd+1)^0,c
  3094   0018AC  5003               	movf	(___fladd@b+2)^0,w,c
  3095   0018AE  5807               	subwfb	(___fladd@a+2)^0,w,c
  3096   0018B0  6E0B               	movwf	(??___fladd+2)^0,c
  3097   0018B2  5004               	movf	(___fladd@b+3)^0,w,c
  3098   0018B4  5808               	subwfb	(___fladd@a+3)^0,w,c
  3099   0018B6  6E0C               	movwf	(??___fladd+3)^0,c
  3100   0018B8  0EFF               	movlw	255
  3101   0018BA  2409               	addwf	??___fladd^0,w,c
  3102   0018BC  6E01               	movwf	___fladd@b^0,c
  3103   0018BE  0EFF               	movlw	255
  3104   0018C0  200A               	addwfc	(??___fladd+1)^0,w,c
  3105   0018C2  6E02               	movwf	(___fladd@b+1)^0,c
  3106   0018C4  0EFF               	movlw	255
  3107   0018C6  200B               	addwfc	(??___fladd+2)^0,w,c
  3108   0018C8  6E03               	movwf	(___fladd@b+2)^0,c
  3109   0018CA  0EFF               	movlw	255
  3110   0018CC  200C               	addwfc	(??___fladd+3)^0,w,c
  3111   0018CE  6E04               	movwf	(___fladd@b+3)^0,c
  3112   0018D0  0E80               	movlw	128
  3113   0018D2  1A0D               	xorwf	___fladd@signs^0,f,c
  3114   0018D4  6C10               	negf	___fladd@grs^0,c
  3115   0018D6  5010               	movf	___fladd@grs^0,w,c
  3116   0018D8  A4D8               	btfss	status,2,c
  3117   0018DA  EF71  F00C         	goto	u2601
  3118   0018DE  EF73  F00C         	goto	u2600
  3119   0018E2                     u2601:
  3120   0018E2  EF83  F00C         	goto	l1103
  3121   0018E6                     u2600:
  3122   0018E6  0E01               	movlw	1
  3123   0018E8  2601               	addwf	___fladd@b^0,f,c
  3124   0018EA  0E00               	movlw	0
  3125   0018EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  3126   0018EE  2203               	addwfc	(___fladd@b+2)^0,f,c
  3127   0018F0  2204               	addwfc	(___fladd@b+3)^0,f,c
  3128   0018F2  EF83  F00C         	goto	l1103
  3129   0018F6                     l3280:
  3130   0018F6  5005               	movf	___fladd@a^0,w,c
  3131   0018F8  5E01               	subwf	___fladd@b^0,f,c
  3132   0018FA  5006               	movf	(___fladd@a+1)^0,w,c
  3133   0018FC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3134   0018FE  5007               	movf	(___fladd@a+2)^0,w,c
  3135   001900  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3136   001902  5008               	movf	(___fladd@a+3)^0,w,c
  3137   001904  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3138   001906                     l1103:
  3139   001906  5001               	movf	___fladd@b^0,w,c
  3140   001908  1002               	iorwf	(___fladd@b+1)^0,w,c
  3141   00190A  1003               	iorwf	(___fladd@b+2)^0,w,c
  3142   00190C  1004               	iorwf	(___fladd@b+3)^0,w,c
  3143   00190E  A4D8               	btfss	status,2,c
  3144   001910  EF8C  F00C         	goto	u2611
  3145   001914  EF8E  F00C         	goto	u2610
  3146   001918                     u2611:
  3147   001918  EFC3  F00C         	goto	l3304
  3148   00191C                     u2610:
  3149   00191C  5010               	movf	___fladd@grs^0,w,c
  3150   00191E  A4D8               	btfss	status,2,c
  3151   001920  EF94  F00C         	goto	u2621
  3152   001924  EF96  F00C         	goto	u2620
  3153   001928                     u2621:
  3154   001928  EFC3  F00C         	goto	l3304
  3155   00192C                     u2620:
  3156   00192C  0E00               	movlw	0
  3157   00192E  6E01               	movwf	?___fladd^0,c
  3158   001930  0E00               	movlw	0
  3159   001932  6E02               	movwf	(?___fladd+1)^0,c
  3160   001934  0E00               	movlw	0
  3161   001936  6E03               	movwf	(?___fladd+2)^0,c
  3162   001938  0E00               	movlw	0
  3163   00193A  6E04               	movwf	(?___fladd+3)^0,c
  3164   00193C  EF5E  F00D         	goto	l1095
  3165   001940                     l3288:
  3166   001940  90D8               	bcf	status,0,c
  3167   001942  3601               	rlcf	___fladd@b^0,f,c
  3168   001944  3602               	rlcf	(___fladd@b+1)^0,f,c
  3169   001946  3603               	rlcf	(___fladd@b+2)^0,f,c
  3170   001948  3604               	rlcf	(___fladd@b+3)^0,f,c
  3171   00194A  AE10               	btfss	___fladd@grs^0,7,c
  3172   00194C  EFAA  F00C         	goto	u2631
  3173   001950  EFAC  F00C         	goto	u2630
  3174   001954                     u2631:
  3175   001954  EFAD  F00C         	goto	l3294
  3176   001958                     u2630:
  3177   001958  8001               	bsf	___fladd@b^0,0,c
  3178   00195A                     l3294:
  3179   00195A  A010               	btfss	___fladd@grs^0,0,c
  3180   00195C  EFB2  F00C         	goto	u2641
  3181   001960  EFB4  F00C         	goto	u2640
  3182   001964                     u2641:
  3183   001964  EFB8  F00C         	goto	l3298
  3184   001968                     u2640:
  3185   001968  80D8               	bsf	status,0,c
  3186   00196A  3610               	rlcf	___fladd@grs^0,f,c
  3187   00196C  EFBA  F00C         	goto	l3300
  3188   001970                     l3298:
  3189   001970  90D8               	bcf	status,0,c
  3190   001972  3610               	rlcf	___fladd@grs^0,f,c
  3191   001974                     l3300:
  3192   001974  500F               	movf	___fladd@bexp^0,w,c
  3193   001976  B4D8               	btfsc	status,2,c
  3194   001978  EFC0  F00C         	goto	u2651
  3195   00197C  EFC2  F00C         	goto	u2650
  3196   001980                     u2651:
  3197   001980  EFC3  F00C         	goto	l3304
  3198   001984                     u2650:
  3199   001984  060F               	decf	___fladd@bexp^0,f,c
  3200   001986                     l3304:
  3201   001986  AE03               	btfss	(___fladd@b+2)^0,7,c
  3202   001988  EFC8  F00C         	goto	u2661
  3203   00198C  EFCA  F00C         	goto	u2660
  3204   001990                     u2661:
  3205   001990  EFA0  F00C         	goto	l3288
  3206   001994                     u2660:
  3207   001994                     l3306:
  3208   001994  0E00               	movlw	0
  3209   001996  6E0E               	movwf	___fladd@aexp^0,c
  3210   001998  AE10               	btfss	___fladd@grs^0,7,c
  3211   00199A  EFD1  F00C         	goto	u2671
  3212   00199E  EFD3  F00C         	goto	u2670
  3213   0019A2                     u2671:
  3214   0019A2  EFEB  F00C         	goto	l1112
  3215   0019A6                     u2670:
  3216   0019A6  C010  F009         	movff	___fladd@grs,??___fladd
  3217   0019AA  0E7F               	movlw	127
  3218   0019AC  1609               	andwf	??___fladd^0,f,c
  3219   0019AE  B4D8               	btfsc	status,2,c
  3220   0019B0  EFDC  F00C         	goto	u2681
  3221   0019B4  EFDE  F00C         	goto	u2680
  3222   0019B8                     u2681:
  3223   0019B8  EFE2  F00C         	goto	l1113
  3224   0019BC                     u2680:
  3225   0019BC                     l3312:
  3226   0019BC  0E01               	movlw	1
  3227   0019BE  6E0E               	movwf	___fladd@aexp^0,c
  3228   0019C0  EFEB  F00C         	goto	l1112
  3229   0019C4                     l1113:
  3230   0019C4  A001               	btfss	___fladd@b^0,0,c
  3231   0019C6  EFE7  F00C         	goto	u2691
  3232   0019CA  EFE9  F00C         	goto	u2690
  3233   0019CE                     u2691:
  3234   0019CE  EFEB  F00C         	goto	l1112
  3235   0019D2                     u2690:
  3236   0019D2  EFDE  F00C         	goto	l3312
  3237   0019D6                     l1112:
  3238   0019D6  500E               	movf	___fladd@aexp^0,w,c
  3239   0019D8  B4D8               	btfsc	status,2,c
  3240   0019DA  EFF1  F00C         	goto	u2701
  3241   0019DE  EFF3  F00C         	goto	u2700
  3242   0019E2                     u2701:
  3243   0019E2  EF1E  F00D         	goto	l3324
  3244   0019E6                     u2700:
  3245   0019E6  0E01               	movlw	1
  3246   0019E8  2601               	addwf	___fladd@b^0,f,c
  3247   0019EA  0E00               	movlw	0
  3248   0019EC  2202               	addwfc	(___fladd@b+1)^0,f,c
  3249   0019EE  2203               	addwfc	(___fladd@b+2)^0,f,c
  3250   0019F0  2204               	addwfc	(___fladd@b+3)^0,f,c
  3251   0019F2  A004               	btfss	(___fladd@b+3)^0,0,c
  3252   0019F4  EFFE  F00C         	goto	u2711
  3253   0019F8  EF00  F00D         	goto	u2710
  3254   0019FC                     u2711:
  3255   0019FC  EF1E  F00D         	goto	l3324
  3256   001A00                     u2710:
  3257   001A00  C001  F009         	movff	___fladd@b,??___fladd
  3258   001A04  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3259   001A08  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3260   001A0C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3261   001A10  340C               	rlcf	(??___fladd+3)^0,w,c
  3262   001A12  320C               	rrcf	(??___fladd+3)^0,f,c
  3263   001A14  320B               	rrcf	(??___fladd+2)^0,f,c
  3264   001A16  320A               	rrcf	(??___fladd+1)^0,f,c
  3265   001A18  3209               	rrcf	??___fladd^0,f,c
  3266   001A1A  C009  F001         	movff	??___fladd,___fladd@b
  3267   001A1E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3268   001A22  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3269   001A26  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3270   001A2A  280F               	incf	___fladd@bexp^0,w,c
  3271   001A2C  B4D8               	btfsc	status,2,c
  3272   001A2E  EF1B  F00D         	goto	u2721
  3273   001A32  EF1D  F00D         	goto	u2720
  3274   001A36                     u2721:
  3275   001A36  EF1E  F00D         	goto	l3324
  3276   001A3A                     u2720:
  3277   001A3A  2A0F               	incf	___fladd@bexp^0,f,c
  3278   001A3C                     l3324:
  3279   001A3C  280F               	incf	___fladd@bexp^0,w,c
  3280   001A3E  B4D8               	btfsc	status,2,c
  3281   001A40  EF24  F00D         	goto	u2731
  3282   001A44  EF26  F00D         	goto	u2730
  3283   001A48                     u2731:
  3284   001A48  EF2E  F00D         	goto	l3328
  3285   001A4C                     u2730:
  3286   001A4C  500F               	movf	___fladd@bexp^0,w,c
  3287   001A4E  A4D8               	btfss	status,2,c
  3288   001A50  EF2C  F00D         	goto	u2741
  3289   001A54  EF2E  F00D         	goto	u2740
  3290   001A58                     u2741:
  3291   001A58  EF40  F00D         	goto	l3332
  3292   001A5C                     u2740:
  3293   001A5C                     l3328:
  3294   001A5C  0E00               	movlw	0
  3295   001A5E  6E01               	movwf	___fladd@b^0,c
  3296   001A60  0E00               	movlw	0
  3297   001A62  6E02               	movwf	(___fladd@b+1)^0,c
  3298   001A64  0E00               	movlw	0
  3299   001A66  6E03               	movwf	(___fladd@b+2)^0,c
  3300   001A68  0E00               	movlw	0
  3301   001A6A  6E04               	movwf	(___fladd@b+3)^0,c
  3302   001A6C  500F               	movf	___fladd@bexp^0,w,c
  3303   001A6E  A4D8               	btfss	status,2,c
  3304   001A70  EF3C  F00D         	goto	u2751
  3305   001A74  EF3E  F00D         	goto	u2750
  3306   001A78                     u2751:
  3307   001A78  EF40  F00D         	goto	l3332
  3308   001A7C                     u2750:
  3309   001A7C  0E00               	movlw	0
  3310   001A7E  6E0D               	movwf	___fladd@signs^0,c
  3311   001A80                     l3332:
  3312   001A80  A00F               	btfss	___fladd@bexp^0,0,c
  3313   001A82  EF45  F00D         	goto	u2761
  3314   001A86  EF47  F00D         	goto	u2760
  3315   001A8A                     u2761:
  3316   001A8A  EF4A  F00D         	goto	l3336
  3317   001A8E                     u2760:
  3318   001A8E  8E03               	bsf	(___fladd@b+2)^0,7,c
  3319   001A90  EF4B  F00D         	goto	l3338
  3320   001A94                     l3336:
  3321   001A94  9E03               	bcf	(___fladd@b+2)^0,7,c
  3322   001A96                     l3338:
  3323   001A96  90D8               	bcf	status,0,c
  3324   001A98  300F               	rrcf	___fladd@bexp^0,w,c
  3325   001A9A  6E04               	movwf	(___fladd@b+3)^0,c
  3326   001A9C  AE0D               	btfss	___fladd@signs^0,7,c
  3327   001A9E  EF53  F00D         	goto	u2771
  3328   001AA2  EF55  F00D         	goto	u2770
  3329   001AA6                     u2771:
  3330   001AA6  EF56  F00D         	goto	l3344
  3331   001AAA                     u2770:
  3332   001AAA  8E04               	bsf	(___fladd@b+3)^0,7,c
  3333   001AAC                     l3344:
  3334   001AAC  C001  F001         	movff	___fladd@b,?___fladd
  3335   001AB0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3336   001AB4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3337   001AB8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3338   001ABC                     l1095:
  3339   001ABC  0012               	return		;funcret
  3340   001ABE                     __end_of___fladd:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function ___flmul *****************
  3344 ;; Defined at:
  3345 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  b               4    0[COMRAM] unsigned char 
  3348 ;;  a               4    4[COMRAM] unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  prod            4   19[COMRAM] struct .
  3351 ;;  grs             4   13[COMRAM] unsigned long 
  3352 ;;  temp            2   23[COMRAM] struct .
  3353 ;;  bexp            1   18[COMRAM] unsigned char 
  3354 ;;  aexp            1   17[COMRAM] unsigned char 
  3355 ;;  sign            1   12[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  4    0[COMRAM] unsigned char 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, prodl, prodh
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3365 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;Total ram usage:       25 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_convert_rgb2hue
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text8
  3380   001ABE                     __ptext8:
  3381                           	callstack 0
  3382   001ABE                     ___flmul:
  3383                           	callstack 28
  3384   001ABE  5004               	movf	(___flmul@b+3)^0,w,c
  3385   001AC0  0B80               	andlw	128
  3386   001AC2  6E0D               	movwf	___flmul@sign^0,c
  3387   001AC4  5004               	movf	(___flmul@b+3)^0,w,c
  3388   001AC6  2404               	addwf	(___flmul@b+3)^0,w,c
  3389   001AC8  6E13               	movwf	___flmul@bexp^0,c
  3390   001ACA  AE03               	btfss	(___flmul@b+2)^0,7,c
  3391   001ACC  EF6A  F00D         	goto	u3111
  3392   001AD0  EF6C  F00D         	goto	u3110
  3393   001AD4                     u3111:
  3394   001AD4  EF6D  F00D         	goto	l3598
  3395   001AD8                     u3110:
  3396   001AD8  8013               	bsf	___flmul@bexp^0,0,c
  3397   001ADA                     l3598:
  3398   001ADA  5013               	movf	___flmul@bexp^0,w,c
  3399   001ADC  B4D8               	btfsc	status,2,c
  3400   001ADE  EF73  F00D         	goto	u3121
  3401   001AE2  EF75  F00D         	goto	u3120
  3402   001AE6                     u3121:
  3403   001AE6  EF88  F00D         	goto	l3606
  3404   001AEA                     u3120:
  3405   001AEA  2813               	incf	___flmul@bexp^0,w,c
  3406   001AEC  A4D8               	btfss	status,2,c
  3407   001AEE  EF7B  F00D         	goto	u3131
  3408   001AF2  EF7D  F00D         	goto	u3130
  3409   001AF6                     u3131:
  3410   001AF6  EF85  F00D         	goto	l3604
  3411   001AFA                     u3130:
  3412   001AFA  0E00               	movlw	0
  3413   001AFC  6E01               	movwf	___flmul@b^0,c
  3414   001AFE  0E00               	movlw	0
  3415   001B00  6E02               	movwf	(___flmul@b+1)^0,c
  3416   001B02  0E00               	movlw	0
  3417   001B04  6E03               	movwf	(___flmul@b+2)^0,c
  3418   001B06  0E00               	movlw	0
  3419   001B08  6E04               	movwf	(___flmul@b+3)^0,c
  3420   001B0A                     l3604:
  3421   001B0A  8E03               	bsf	(___flmul@b+2)^0,7,c
  3422   001B0C  EF90  F00D         	goto	l3608
  3423   001B10                     l3606:
  3424   001B10  0E00               	movlw	0
  3425   001B12  6E01               	movwf	___flmul@b^0,c
  3426   001B14  0E00               	movlw	0
  3427   001B16  6E02               	movwf	(___flmul@b+1)^0,c
  3428   001B18  0E00               	movlw	0
  3429   001B1A  6E03               	movwf	(___flmul@b+2)^0,c
  3430   001B1C  0E00               	movlw	0
  3431   001B1E  6E04               	movwf	(___flmul@b+3)^0,c
  3432   001B20                     l3608:
  3433   001B20  5008               	movf	(___flmul@a+3)^0,w,c
  3434   001B22  0B80               	andlw	128
  3435   001B24  1A0D               	xorwf	___flmul@sign^0,f,c
  3436   001B26  5008               	movf	(___flmul@a+3)^0,w,c
  3437   001B28  2408               	addwf	(___flmul@a+3)^0,w,c
  3438   001B2A  6E12               	movwf	___flmul@aexp^0,c
  3439   001B2C  AE07               	btfss	(___flmul@a+2)^0,7,c
  3440   001B2E  EF9B  F00D         	goto	u3141
  3441   001B32  EF9D  F00D         	goto	u3140
  3442   001B36                     u3141:
  3443   001B36  EF9E  F00D         	goto	l3616
  3444   001B3A                     u3140:
  3445   001B3A  8012               	bsf	___flmul@aexp^0,0,c
  3446   001B3C                     l3616:
  3447   001B3C  5012               	movf	___flmul@aexp^0,w,c
  3448   001B3E  B4D8               	btfsc	status,2,c
  3449   001B40  EFA4  F00D         	goto	u3151
  3450   001B44  EFA6  F00D         	goto	u3150
  3451   001B48                     u3151:
  3452   001B48  EFB9  F00D         	goto	l3624
  3453   001B4C                     u3150:
  3454   001B4C  2812               	incf	___flmul@aexp^0,w,c
  3455   001B4E  A4D8               	btfss	status,2,c
  3456   001B50  EFAC  F00D         	goto	u3161
  3457   001B54  EFAE  F00D         	goto	u3160
  3458   001B58                     u3161:
  3459   001B58  EFB6  F00D         	goto	l3622
  3460   001B5C                     u3160:
  3461   001B5C  0E00               	movlw	0
  3462   001B5E  6E05               	movwf	___flmul@a^0,c
  3463   001B60  0E00               	movlw	0
  3464   001B62  6E06               	movwf	(___flmul@a+1)^0,c
  3465   001B64  0E00               	movlw	0
  3466   001B66  6E07               	movwf	(___flmul@a+2)^0,c
  3467   001B68  0E00               	movlw	0
  3468   001B6A  6E08               	movwf	(___flmul@a+3)^0,c
  3469   001B6C                     l3622:
  3470   001B6C  8E07               	bsf	(___flmul@a+2)^0,7,c
  3471   001B6E  EFC1  F00D         	goto	l1172
  3472   001B72                     l3624:
  3473   001B72  0E00               	movlw	0
  3474   001B74  6E05               	movwf	___flmul@a^0,c
  3475   001B76  0E00               	movlw	0
  3476   001B78  6E06               	movwf	(___flmul@a+1)^0,c
  3477   001B7A  0E00               	movlw	0
  3478   001B7C  6E07               	movwf	(___flmul@a+2)^0,c
  3479   001B7E  0E00               	movlw	0
  3480   001B80  6E08               	movwf	(___flmul@a+3)^0,c
  3481   001B82                     l1172:
  3482   001B82  5012               	movf	___flmul@aexp^0,w,c
  3483   001B84  B4D8               	btfsc	status,2,c
  3484   001B86  EFC7  F00D         	goto	u3171
  3485   001B8A  EFC9  F00D         	goto	u3170
  3486   001B8E                     u3171:
  3487   001B8E  EFD1  F00D         	goto	l3628
  3488   001B92                     u3170:
  3489   001B92  5013               	movf	___flmul@bexp^0,w,c
  3490   001B94  A4D8               	btfss	status,2,c
  3491   001B96  EFCF  F00D         	goto	u3181
  3492   001B9A  EFD1  F00D         	goto	u3180
  3493   001B9E                     u3181:
  3494   001B9E  EFDB  F00D         	goto	l3632
  3495   001BA2                     u3180:
  3496   001BA2                     l3628:
  3497   001BA2  0E00               	movlw	0
  3498   001BA4  6E01               	movwf	?___flmul^0,c
  3499   001BA6  0E00               	movlw	0
  3500   001BA8  6E02               	movwf	(?___flmul+1)^0,c
  3501   001BAA  0E00               	movlw	0
  3502   001BAC  6E03               	movwf	(?___flmul+2)^0,c
  3503   001BAE  0E00               	movlw	0
  3504   001BB0  6E04               	movwf	(?___flmul+3)^0,c
  3505   001BB2  EF73  F00F         	goto	l1176
  3506   001BB6                     l3632:
  3507   001BB6  5007               	movf	(___flmul@a+2)^0,w,c
  3508   001BB8  0201               	mulwf	___flmul@b^0,c
  3509   001BBA  CFF3 F018          	movff	prodl,___flmul@temp
  3510   001BBE  CFF4 F019          	movff	prodh,___flmul@temp+1
  3511   001BC2  5018               	movf	___flmul@temp^0,w,c
  3512   001BC4  6E0E               	movwf	___flmul@grs^0,c
  3513   001BC6  6A0F               	clrf	(___flmul@grs+1)^0,c
  3514   001BC8  6A10               	clrf	(___flmul@grs+2)^0,c
  3515   001BCA  6A11               	clrf	(___flmul@grs+3)^0,c
  3516   001BCC  5019               	movf	(___flmul@temp+1)^0,w,c
  3517   001BCE  6E14               	movwf	___flmul@prod^0,c
  3518   001BD0  6A15               	clrf	(___flmul@prod+1)^0,c
  3519   001BD2  6A16               	clrf	(___flmul@prod+2)^0,c
  3520   001BD4  6A17               	clrf	(___flmul@prod+3)^0,c
  3521   001BD6  5006               	movf	(___flmul@a+1)^0,w,c
  3522   001BD8  0202               	mulwf	(___flmul@b+1)^0,c
  3523   001BDA  CFF3 F018          	movff	prodl,___flmul@temp
  3524   001BDE  CFF4 F019          	movff	prodh,___flmul@temp+1
  3525   001BE2  5018               	movf	___flmul@temp^0,w,c
  3526   001BE4  260E               	addwf	___flmul@grs^0,f,c
  3527   001BE6  0E00               	movlw	0
  3528   001BE8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3529   001BEA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3530   001BEC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3531   001BEE  5019               	movf	(___flmul@temp+1)^0,w,c
  3532   001BF0  2614               	addwf	___flmul@prod^0,f,c
  3533   001BF2  0E00               	movlw	0
  3534   001BF4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3535   001BF6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3536   001BF8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3537   001BFA  5005               	movf	___flmul@a^0,w,c
  3538   001BFC  0203               	mulwf	(___flmul@b+2)^0,c
  3539   001BFE  CFF3 F018          	movff	prodl,___flmul@temp
  3540   001C02  CFF4 F019          	movff	prodh,___flmul@temp+1
  3541   001C06  5018               	movf	___flmul@temp^0,w,c
  3542   001C08  260E               	addwf	___flmul@grs^0,f,c
  3543   001C0A  0E00               	movlw	0
  3544   001C0C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3545   001C0E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3546   001C10  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3547   001C12  5019               	movf	(___flmul@temp+1)^0,w,c
  3548   001C14  2614               	addwf	___flmul@prod^0,f,c
  3549   001C16  0E00               	movlw	0
  3550   001C18  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3551   001C1A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3552   001C1C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3553   001C1E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3554   001C22  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3555   001C26  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3556   001C2A  6A0E               	clrf	___flmul@grs^0,c
  3557   001C2C  5005               	movf	___flmul@a^0,w,c
  3558   001C2E  0202               	mulwf	(___flmul@b+1)^0,c
  3559   001C30  CFF3 F018          	movff	prodl,___flmul@temp
  3560   001C34  CFF4 F019          	movff	prodh,___flmul@temp+1
  3561   001C38  5018               	movf	___flmul@temp^0,w,c
  3562   001C3A  260E               	addwf	___flmul@grs^0,f,c
  3563   001C3C  5019               	movf	(___flmul@temp+1)^0,w,c
  3564   001C3E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3565   001C40  0E00               	movlw	0
  3566   001C42  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3567   001C44  0E00               	movlw	0
  3568   001C46  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3569   001C48  5006               	movf	(___flmul@a+1)^0,w,c
  3570   001C4A  0201               	mulwf	___flmul@b^0,c
  3571   001C4C  CFF3 F018          	movff	prodl,___flmul@temp
  3572   001C50  CFF4 F019          	movff	prodh,___flmul@temp+1
  3573   001C54  5018               	movf	___flmul@temp^0,w,c
  3574   001C56  260E               	addwf	___flmul@grs^0,f,c
  3575   001C58  5019               	movf	(___flmul@temp+1)^0,w,c
  3576   001C5A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3577   001C5C  0E00               	movlw	0
  3578   001C5E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3579   001C60  0E00               	movlw	0
  3580   001C62  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3581   001C64  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3582   001C68  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3583   001C6C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3584   001C70  6A0E               	clrf	___flmul@grs^0,c
  3585   001C72  5005               	movf	___flmul@a^0,w,c
  3586   001C74  0201               	mulwf	___flmul@b^0,c
  3587   001C76  CFF3 F018          	movff	prodl,___flmul@temp
  3588   001C7A  CFF4 F019          	movff	prodh,___flmul@temp+1
  3589   001C7E  5018               	movf	___flmul@temp^0,w,c
  3590   001C80  260E               	addwf	___flmul@grs^0,f,c
  3591   001C82  5019               	movf	(___flmul@temp+1)^0,w,c
  3592   001C84  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3593   001C86  0E00               	movlw	0
  3594   001C88  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3595   001C8A  0E00               	movlw	0
  3596   001C8C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3597   001C8E  5007               	movf	(___flmul@a+2)^0,w,c
  3598   001C90  0202               	mulwf	(___flmul@b+1)^0,c
  3599   001C92  CFF3 F018          	movff	prodl,___flmul@temp
  3600   001C96  CFF4 F019          	movff	prodh,___flmul@temp+1
  3601   001C9A  5018               	movf	___flmul@temp^0,w,c
  3602   001C9C  2614               	addwf	___flmul@prod^0,f,c
  3603   001C9E  5019               	movf	(___flmul@temp+1)^0,w,c
  3604   001CA0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3605   001CA2  0E00               	movlw	0
  3606   001CA4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3607   001CA6  0E00               	movlw	0
  3608   001CA8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3609   001CAA  5006               	movf	(___flmul@a+1)^0,w,c
  3610   001CAC  0203               	mulwf	(___flmul@b+2)^0,c
  3611   001CAE  CFF3 F018          	movff	prodl,___flmul@temp
  3612   001CB2  CFF4 F019          	movff	prodh,___flmul@temp+1
  3613   001CB6  5018               	movf	___flmul@temp^0,w,c
  3614   001CB8  2614               	addwf	___flmul@prod^0,f,c
  3615   001CBA  5019               	movf	(___flmul@temp+1)^0,w,c
  3616   001CBC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3617   001CBE  0E00               	movlw	0
  3618   001CC0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3619   001CC2  0E00               	movlw	0
  3620   001CC4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3621   001CC6  5007               	movf	(___flmul@a+2)^0,w,c
  3622   001CC8  0203               	mulwf	(___flmul@b+2)^0,c
  3623   001CCA  CFF3 F018          	movff	prodl,___flmul@temp
  3624   001CCE  CFF4 F019          	movff	prodh,___flmul@temp+1
  3625   001CD2  5018               	movf	___flmul@temp^0,w,c
  3626   001CD4  6E09               	movwf	??___flmul^0,c
  3627   001CD6  5019               	movf	(___flmul@temp+1)^0,w,c
  3628   001CD8  6E0A               	movwf	(??___flmul+1)^0,c
  3629   001CDA  6A0B               	clrf	(??___flmul+2)^0,c
  3630   001CDC  6A0C               	clrf	(??___flmul+3)^0,c
  3631   001CDE  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3632   001CE2  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3633   001CE6  C009  F00A         	movff	??___flmul,??___flmul+1
  3634   001CEA  6A09               	clrf	??___flmul^0,c
  3635   001CEC  5009               	movf	??___flmul^0,w,c
  3636   001CEE  2614               	addwf	___flmul@prod^0,f,c
  3637   001CF0  500A               	movf	(??___flmul+1)^0,w,c
  3638   001CF2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3639   001CF4  500B               	movf	(??___flmul+2)^0,w,c
  3640   001CF6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3641   001CF8  500C               	movf	(??___flmul+3)^0,w,c
  3642   001CFA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3643   001CFC  C00E  F009         	movff	___flmul@grs,??___flmul
  3644   001D00  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3645   001D04  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3646   001D08  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3647   001D0C  0E19               	movlw	25
  3648   001D0E  EF8E  F00E         	goto	u3190
  3649   001D12                     u3195:
  3650   001D12  90D8               	bcf	status,0,c
  3651   001D14  320C               	rrcf	(??___flmul+3)^0,f,c
  3652   001D16  320B               	rrcf	(??___flmul+2)^0,f,c
  3653   001D18  320A               	rrcf	(??___flmul+1)^0,f,c
  3654   001D1A  3209               	rrcf	??___flmul^0,f,c
  3655   001D1C                     u3190:
  3656   001D1C  2EE8               	decfsz	wreg,f,c
  3657   001D1E  EF89  F00E         	goto	u3195
  3658   001D22  5009               	movf	??___flmul^0,w,c
  3659   001D24  2614               	addwf	___flmul@prod^0,f,c
  3660   001D26  500A               	movf	(??___flmul+1)^0,w,c
  3661   001D28  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3662   001D2A  500B               	movf	(??___flmul+2)^0,w,c
  3663   001D2C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3664   001D2E  500C               	movf	(??___flmul+3)^0,w,c
  3665   001D30  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3666   001D32  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3667   001D36  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3668   001D3A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3669   001D3E  6A0E               	clrf	___flmul@grs^0,c
  3670   001D40  5012               	movf	___flmul@aexp^0,w,c
  3671   001D42  C013  F009         	movff	___flmul@bexp,??___flmul
  3672   001D46  6A0A               	clrf	(??___flmul+1)^0,c
  3673   001D48  2609               	addwf	??___flmul^0,f,c
  3674   001D4A  0E00               	movlw	0
  3675   001D4C  220A               	addwfc	(??___flmul+1)^0,f,c
  3676   001D4E  0E82               	movlw	130
  3677   001D50  2409               	addwf	??___flmul^0,w,c
  3678   001D52  6E18               	movwf	___flmul@temp^0,c
  3679   001D54  0EFF               	movlw	255
  3680   001D56  200A               	addwfc	(??___flmul+1)^0,w,c
  3681   001D58  6E19               	movwf	(___flmul@temp+1)^0,c
  3682   001D5A  EFC4  F00E         	goto	l3680
  3683   001D5E                     l3674:
  3684   001D5E  90D8               	bcf	status,0,c
  3685   001D60  3614               	rlcf	___flmul@prod^0,f,c
  3686   001D62  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3687   001D64  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3688   001D66  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3689   001D68  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3690   001D6A  EFB9  F00E         	goto	u3201
  3691   001D6E  EFBB  F00E         	goto	u3200
  3692   001D72                     u3201:
  3693   001D72  EFBC  F00E         	goto	l1179
  3694   001D76                     u3200:
  3695   001D76  8014               	bsf	___flmul@prod^0,0,c
  3696   001D78                     l1179:
  3697   001D78  90D8               	bcf	status,0,c
  3698   001D7A  360E               	rlcf	___flmul@grs^0,f,c
  3699   001D7C  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3700   001D7E  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3701   001D80  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3702   001D82  0618               	decf	___flmul@temp^0,f,c
  3703   001D84  A0D8               	btfss	status,0,c
  3704   001D86  0619               	decf	(___flmul@temp+1)^0,f,c
  3705   001D88                     l3680:
  3706   001D88  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3707   001D8A  EFC9  F00E         	goto	u3211
  3708   001D8E  EFCB  F00E         	goto	u3210
  3709   001D92                     u3211:
  3710   001D92  EFAF  F00E         	goto	l3674
  3711   001D96                     u3210:
  3712   001D96  0E00               	movlw	0
  3713   001D98  6E12               	movwf	___flmul@aexp^0,c
  3714   001D9A  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3715   001D9C  EFD2  F00E         	goto	u3221
  3716   001DA0  EFD4  F00E         	goto	u3220
  3717   001DA4                     u3221:
  3718   001DA4  EFF8  F00E         	goto	l1181
  3719   001DA8                     u3220:
  3720   001DA8  0EFF               	movlw	255
  3721   001DAA  140E               	andwf	___flmul@grs^0,w,c
  3722   001DAC  6E09               	movwf	??___flmul^0,c
  3723   001DAE  0EFF               	movlw	255
  3724   001DB0  140F               	andwf	(___flmul@grs+1)^0,w,c
  3725   001DB2  6E0A               	movwf	(??___flmul+1)^0,c
  3726   001DB4  0EFF               	movlw	255
  3727   001DB6  1410               	andwf	(___flmul@grs+2)^0,w,c
  3728   001DB8  6E0B               	movwf	(??___flmul+2)^0,c
  3729   001DBA  0E7F               	movlw	127
  3730   001DBC  1411               	andwf	(___flmul@grs+3)^0,w,c
  3731   001DBE  6E0C               	movwf	(??___flmul+3)^0,c
  3732   001DC0  5009               	movf	??___flmul^0,w,c
  3733   001DC2  100A               	iorwf	(??___flmul+1)^0,w,c
  3734   001DC4  100B               	iorwf	(??___flmul+2)^0,w,c
  3735   001DC6  100C               	iorwf	(??___flmul+3)^0,w,c
  3736   001DC8  B4D8               	btfsc	status,2,c
  3737   001DCA  EFE9  F00E         	goto	u3231
  3738   001DCE  EFEB  F00E         	goto	u3230
  3739   001DD2                     u3231:
  3740   001DD2  EFEF  F00E         	goto	l1182
  3741   001DD6                     u3230:
  3742   001DD6                     l3688:
  3743   001DD6  0E01               	movlw	1
  3744   001DD8  6E12               	movwf	___flmul@aexp^0,c
  3745   001DDA  EFF8  F00E         	goto	l1181
  3746   001DDE                     l1182:
  3747   001DDE  A014               	btfss	___flmul@prod^0,0,c
  3748   001DE0  EFF4  F00E         	goto	u3241
  3749   001DE4  EFF6  F00E         	goto	u3240
  3750   001DE8                     u3241:
  3751   001DE8  EFF8  F00E         	goto	l1181
  3752   001DEC                     u3240:
  3753   001DEC  EFEB  F00E         	goto	l3688
  3754   001DF0                     l1181:
  3755   001DF0  5012               	movf	___flmul@aexp^0,w,c
  3756   001DF2  B4D8               	btfsc	status,2,c
  3757   001DF4  EFFE  F00E         	goto	u3251
  3758   001DF8  EF00  F00F         	goto	u3250
  3759   001DFC                     u3251:
  3760   001DFC  EF24  F00F         	goto	l3700
  3761   001E00                     u3250:
  3762   001E00  0E01               	movlw	1
  3763   001E02  2614               	addwf	___flmul@prod^0,f,c
  3764   001E04  0E00               	movlw	0
  3765   001E06  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3766   001E08  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3767   001E0A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3768   001E0C  A017               	btfss	(___flmul@prod+3)^0,0,c
  3769   001E0E  EF0B  F00F         	goto	u3261
  3770   001E12  EF0D  F00F         	goto	u3260
  3771   001E16                     u3261:
  3772   001E16  EF24  F00F         	goto	l3700
  3773   001E1A                     u3260:
  3774   001E1A  C014  F009         	movff	___flmul@prod,??___flmul
  3775   001E1E  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3776   001E22  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3777   001E26  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3778   001E2A  340C               	rlcf	(??___flmul+3)^0,w,c
  3779   001E2C  320C               	rrcf	(??___flmul+3)^0,f,c
  3780   001E2E  320B               	rrcf	(??___flmul+2)^0,f,c
  3781   001E30  320A               	rrcf	(??___flmul+1)^0,f,c
  3782   001E32  3209               	rrcf	??___flmul^0,f,c
  3783   001E34  C009  F014         	movff	??___flmul,___flmul@prod
  3784   001E38  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3785   001E3C  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3786   001E40  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3787   001E44  4A18               	infsnz	___flmul@temp^0,f,c
  3788   001E46  2A19               	incf	(___flmul@temp+1)^0,f,c
  3789   001E48                     l3700:
  3790   001E48  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3791   001E4A  EF2F  F00F         	goto	u3271
  3792   001E4E  5019               	movf	(___flmul@temp+1)^0,w,c
  3793   001E50  E108               	bnz	u3270
  3794   001E52  2818               	incf	___flmul@temp^0,w,c
  3795   001E54  A0D8               	btfss	status,0,c
  3796   001E56  EF2F  F00F         	goto	u3271
  3797   001E5A  EF31  F00F         	goto	u3270
  3798   001E5E                     u3271:
  3799   001E5E  EF3B  F00F         	goto	l3704
  3800   001E62                     u3270:
  3801   001E62  0E00               	movlw	0
  3802   001E64  6E14               	movwf	___flmul@prod^0,c
  3803   001E66  0E00               	movlw	0
  3804   001E68  6E15               	movwf	(___flmul@prod+1)^0,c
  3805   001E6A  0E80               	movlw	128
  3806   001E6C  6E16               	movwf	(___flmul@prod+2)^0,c
  3807   001E6E  0E7F               	movlw	127
  3808   001E70  6E17               	movwf	(___flmul@prod+3)^0,c
  3809   001E72  EF69  F00F         	goto	l3716
  3810   001E76                     l3704:
  3811   001E76  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3812   001E78  EF48  F00F         	goto	u3280
  3813   001E7C  5019               	movf	(___flmul@temp+1)^0,w,c
  3814   001E7E  E106               	bnz	u3281
  3815   001E80  0418               	decf	___flmul@temp^0,w,c
  3816   001E82  B0D8               	btfsc	status,0,c
  3817   001E84  EF46  F00F         	goto	u3281
  3818   001E88  EF48  F00F         	goto	u3280
  3819   001E8C                     u3281:
  3820   001E8C  EF54  F00F         	goto	l1189
  3821   001E90                     u3280:
  3822   001E90  0E00               	movlw	0
  3823   001E92  6E14               	movwf	___flmul@prod^0,c
  3824   001E94  0E00               	movlw	0
  3825   001E96  6E15               	movwf	(___flmul@prod+1)^0,c
  3826   001E98  0E00               	movlw	0
  3827   001E9A  6E16               	movwf	(___flmul@prod+2)^0,c
  3828   001E9C  0E00               	movlw	0
  3829   001E9E  6E17               	movwf	(___flmul@prod+3)^0,c
  3830   001EA0  0E00               	movlw	0
  3831   001EA2  6E0D               	movwf	___flmul@sign^0,c
  3832   001EA4  EF69  F00F         	goto	l3716
  3833   001EA8                     l1189:
  3834   001EA8  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3835   001EAC  0EFF               	movlw	255
  3836   001EAE  1614               	andwf	___flmul@prod^0,f,c
  3837   001EB0  0EFF               	movlw	255
  3838   001EB2  1615               	andwf	(___flmul@prod+1)^0,f,c
  3839   001EB4  0E7F               	movlw	127
  3840   001EB6  1616               	andwf	(___flmul@prod+2)^0,f,c
  3841   001EB8  0E00               	movlw	0
  3842   001EBA  1617               	andwf	(___flmul@prod+3)^0,f,c
  3843   001EBC  A013               	btfss	___flmul@bexp^0,0,c
  3844   001EBE  EF63  F00F         	goto	u3291
  3845   001EC2  EF65  F00F         	goto	u3290
  3846   001EC6                     u3291:
  3847   001EC6  EF66  F00F         	goto	l3714
  3848   001ECA                     u3290:
  3849   001ECA  8E16               	bsf	(___flmul@prod+2)^0,7,c
  3850   001ECC                     l3714:
  3851   001ECC  90D8               	bcf	status,0,c
  3852   001ECE  3013               	rrcf	___flmul@bexp^0,w,c
  3853   001ED0  6E17               	movwf	(___flmul@prod+3)^0,c
  3854   001ED2                     l3716:
  3855   001ED2  500D               	movf	___flmul@sign^0,w,c
  3856   001ED4  1217               	iorwf	(___flmul@prod+3)^0,f,c
  3857   001ED6  C014  F001         	movff	___flmul@prod,?___flmul
  3858   001EDA  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  3859   001EDE  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  3860   001EE2  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  3861   001EE6                     l1176:
  3862   001EE6  0012               	return		;funcret
  3863   001EE8                     __end_of___flmul:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function ___flge *****************
  3867 ;; Defined at:
  3868 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  ff1             4    0[COMRAM] unsigned char 
  3871 ;;  ff2             4    4[COMRAM] unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;		None               void
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:       12 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_convert_rgb2hue
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text9
  3897   002B76                     __ptext9:
  3898                           	callstack 0
  3899   002B76                     ___flge:
  3900                           	callstack 28
  3901   002B76  0E00               	movlw	0
  3902   002B78  1401               	andwf	___flge@ff1^0,w,c
  3903   002B7A  6E09               	movwf	??___flge^0,c
  3904   002B7C  0E00               	movlw	0
  3905   002B7E  1402               	andwf	(___flge@ff1+1)^0,w,c
  3906   002B80  6E0A               	movwf	(??___flge+1)^0,c
  3907   002B82  0E80               	movlw	128
  3908   002B84  1403               	andwf	(___flge@ff1+2)^0,w,c
  3909   002B86  6E0B               	movwf	(??___flge+2)^0,c
  3910   002B88  0E7F               	movlw	127
  3911   002B8A  1404               	andwf	(___flge@ff1+3)^0,w,c
  3912   002B8C  6E0C               	movwf	(??___flge+3)^0,c
  3913   002B8E  5009               	movf	??___flge^0,w,c
  3914   002B90  100A               	iorwf	(??___flge+1)^0,w,c
  3915   002B92  100B               	iorwf	(??___flge+2)^0,w,c
  3916   002B94  100C               	iorwf	(??___flge+3)^0,w,c
  3917   002B96  A4D8               	btfss	status,2,c
  3918   002B98  EFD0  F015         	goto	u3331
  3919   002B9C  EFD2  F015         	goto	u3330
  3920   002BA0                     u3331:
  3921   002BA0  EFDA  F015         	goto	l3748
  3922   002BA4                     u3330:
  3923   002BA4  0E00               	movlw	0
  3924   002BA6  6E01               	movwf	___flge@ff1^0,c
  3925   002BA8  0E00               	movlw	0
  3926   002BAA  6E02               	movwf	(___flge@ff1+1)^0,c
  3927   002BAC  0E00               	movlw	0
  3928   002BAE  6E03               	movwf	(___flge@ff1+2)^0,c
  3929   002BB0  0E00               	movlw	0
  3930   002BB2  6E04               	movwf	(___flge@ff1+3)^0,c
  3931   002BB4                     l3748:
  3932   002BB4  0E00               	movlw	0
  3933   002BB6  1405               	andwf	___flge@ff2^0,w,c
  3934   002BB8  6E09               	movwf	??___flge^0,c
  3935   002BBA  0E00               	movlw	0
  3936   002BBC  1406               	andwf	(___flge@ff2+1)^0,w,c
  3937   002BBE  6E0A               	movwf	(??___flge+1)^0,c
  3938   002BC0  0E80               	movlw	128
  3939   002BC2  1407               	andwf	(___flge@ff2+2)^0,w,c
  3940   002BC4  6E0B               	movwf	(??___flge+2)^0,c
  3941   002BC6  0E7F               	movlw	127
  3942   002BC8  1408               	andwf	(___flge@ff2+3)^0,w,c
  3943   002BCA  6E0C               	movwf	(??___flge+3)^0,c
  3944   002BCC  5009               	movf	??___flge^0,w,c
  3945   002BCE  100A               	iorwf	(??___flge+1)^0,w,c
  3946   002BD0  100B               	iorwf	(??___flge+2)^0,w,c
  3947   002BD2  100C               	iorwf	(??___flge+3)^0,w,c
  3948   002BD4  A4D8               	btfss	status,2,c
  3949   002BD6  EFEF  F015         	goto	u3341
  3950   002BDA  EFF1  F015         	goto	u3340
  3951   002BDE                     u3341:
  3952   002BDE  EFF9  F015         	goto	l3752
  3953   002BE2                     u3340:
  3954   002BE2  0E00               	movlw	0
  3955   002BE4  6E05               	movwf	___flge@ff2^0,c
  3956   002BE6  0E00               	movlw	0
  3957   002BE8  6E06               	movwf	(___flge@ff2+1)^0,c
  3958   002BEA  0E00               	movlw	0
  3959   002BEC  6E07               	movwf	(___flge@ff2+2)^0,c
  3960   002BEE  0E00               	movlw	0
  3961   002BF0  6E08               	movwf	(___flge@ff2+3)^0,c
  3962   002BF2                     l3752:
  3963   002BF2  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3964   002BF4  EFFE  F015         	goto	u3351
  3965   002BF8  EF00  F016         	goto	u3350
  3966   002BFC                     u3351:
  3967   002BFC  EF09  F016         	goto	l3756
  3968   002C00                     u3350:
  3969   002C00  6C01               	negf	___flge@ff1^0,c
  3970   002C02  1E02               	comf	(___flge@ff1+1)^0,f,c
  3971   002C04  B0D8               	btfsc	status,0,c
  3972   002C06  2A02               	incf	(___flge@ff1+1)^0,f,c
  3973   002C08  1E03               	comf	(___flge@ff1+2)^0,f,c
  3974   002C0A  B0D8               	btfsc	status,0,c
  3975   002C0C  2A03               	incf	(___flge@ff1+2)^0,f,c
  3976   002C0E  0E80               	movlw	128
  3977   002C10  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3978   002C12                     l3756:
  3979   002C12  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3980   002C14  EF0E  F016         	goto	u3361
  3981   002C18  EF10  F016         	goto	u3360
  3982   002C1C                     u3361:
  3983   002C1C  EF19  F016         	goto	l823
  3984   002C20                     u3360:
  3985   002C20  6C05               	negf	___flge@ff2^0,c
  3986   002C22  1E06               	comf	(___flge@ff2+1)^0,f,c
  3987   002C24  B0D8               	btfsc	status,0,c
  3988   002C26  2A06               	incf	(___flge@ff2+1)^0,f,c
  3989   002C28  1E07               	comf	(___flge@ff2+2)^0,f,c
  3990   002C2A  B0D8               	btfsc	status,0,c
  3991   002C2C  2A07               	incf	(___flge@ff2+2)^0,f,c
  3992   002C2E  0E80               	movlw	128
  3993   002C30  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3994   002C32                     l823:
  3995   002C32  0E00               	movlw	0
  3996   002C34  1A01               	xorwf	___flge@ff1^0,f,c
  3997   002C36  0E00               	movlw	0
  3998   002C38  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3999   002C3A  0E00               	movlw	0
  4000   002C3C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4001   002C3E  0E80               	movlw	128
  4002   002C40  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4003   002C42  0E00               	movlw	0
  4004   002C44  1A05               	xorwf	___flge@ff2^0,f,c
  4005   002C46  0E00               	movlw	0
  4006   002C48  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4007   002C4A  0E00               	movlw	0
  4008   002C4C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4009   002C4E  0E80               	movlw	128
  4010   002C50  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4011   002C52  5005               	movf	___flge@ff2^0,w,c
  4012   002C54  5C01               	subwf	___flge@ff1^0,w,c
  4013   002C56  5006               	movf	(___flge@ff2+1)^0,w,c
  4014   002C58  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4015   002C5A  5007               	movf	(___flge@ff2+2)^0,w,c
  4016   002C5C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4017   002C5E  5008               	movf	(___flge@ff2+3)^0,w,c
  4018   002C60  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4019   002C62  B0D8               	btfsc	status,0,c
  4020   002C64  EF36  F016         	goto	u3371
  4021   002C68  EF38  F016         	goto	u3370
  4022   002C6C                     u3371:
  4023   002C6C  EF3B  F016         	goto	l3762
  4024   002C70                     u3370:
  4025   002C70  90D8               	bcf	status,0,c
  4026   002C72  EF3C  F016         	goto	l828
  4027   002C76                     l3762:
  4028   002C76  80D8               	bsf	status,0,c
  4029   002C78                     l828:
  4030   002C78  0012               	return		;funcret
  4031   002C7A                     __end_of___flge:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function ___fleq *****************
  4035 ;; Defined at:
  4036 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  ff1             4    0[COMRAM] unsigned char 
  4039 ;;  ff2             4    4[COMRAM] unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;		None               void
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4051 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;Total ram usage:       12 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_convert_rgb2hue
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text10
  4065   002F86                     __ptext10:
  4066                           	callstack 0
  4067   002F86                     ___fleq:
  4068                           	callstack 28
  4069   002F86  0E00               	movlw	0
  4070   002F88  1401               	andwf	___fleq@ff1^0,w,c
  4071   002F8A  6E09               	movwf	??___fleq^0,c
  4072   002F8C  0E00               	movlw	0
  4073   002F8E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4074   002F90  6E0A               	movwf	(??___fleq+1)^0,c
  4075   002F92  0E80               	movlw	128
  4076   002F94  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4077   002F96  6E0B               	movwf	(??___fleq+2)^0,c
  4078   002F98  0E7F               	movlw	127
  4079   002F9A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4080   002F9C  6E0C               	movwf	(??___fleq+3)^0,c
  4081   002F9E  5009               	movf	??___fleq^0,w,c
  4082   002FA0  100A               	iorwf	(??___fleq+1)^0,w,c
  4083   002FA2  100B               	iorwf	(??___fleq+2)^0,w,c
  4084   002FA4  100C               	iorwf	(??___fleq+3)^0,w,c
  4085   002FA6  A4D8               	btfss	status,2,c
  4086   002FA8  EFD8  F017         	goto	u3301
  4087   002FAC  EFDA  F017         	goto	u3300
  4088   002FB0                     u3301:
  4089   002FB0  EFE2  F017         	goto	l3732
  4090   002FB4                     u3300:
  4091   002FB4  0E00               	movlw	0
  4092   002FB6  6E01               	movwf	___fleq@ff1^0,c
  4093   002FB8  0E00               	movlw	0
  4094   002FBA  6E02               	movwf	(___fleq@ff1+1)^0,c
  4095   002FBC  0E00               	movlw	0
  4096   002FBE  6E03               	movwf	(___fleq@ff1+2)^0,c
  4097   002FC0  0E00               	movlw	0
  4098   002FC2  6E04               	movwf	(___fleq@ff1+3)^0,c
  4099   002FC4                     l3732:
  4100   002FC4  0E00               	movlw	0
  4101   002FC6  1405               	andwf	___fleq@ff2^0,w,c
  4102   002FC8  6E09               	movwf	??___fleq^0,c
  4103   002FCA  0E00               	movlw	0
  4104   002FCC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4105   002FCE  6E0A               	movwf	(??___fleq+1)^0,c
  4106   002FD0  0E80               	movlw	128
  4107   002FD2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4108   002FD4  6E0B               	movwf	(??___fleq+2)^0,c
  4109   002FD6  0E7F               	movlw	127
  4110   002FD8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4111   002FDA  6E0C               	movwf	(??___fleq+3)^0,c
  4112   002FDC  5009               	movf	??___fleq^0,w,c
  4113   002FDE  100A               	iorwf	(??___fleq+1)^0,w,c
  4114   002FE0  100B               	iorwf	(??___fleq+2)^0,w,c
  4115   002FE2  100C               	iorwf	(??___fleq+3)^0,w,c
  4116   002FE4  A4D8               	btfss	status,2,c
  4117   002FE6  EFF7  F017         	goto	u3311
  4118   002FEA  EFF9  F017         	goto	u3310
  4119   002FEE                     u3311:
  4120   002FEE  EF01  F018         	goto	l3736
  4121   002FF2                     u3310:
  4122   002FF2  0E00               	movlw	0
  4123   002FF4  6E05               	movwf	___fleq@ff2^0,c
  4124   002FF6  0E00               	movlw	0
  4125   002FF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  4126   002FFA  0E00               	movlw	0
  4127   002FFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  4128   002FFE  0E00               	movlw	0
  4129   003000  6E08               	movwf	(___fleq@ff2+3)^0,c
  4130   003002                     l3736:
  4131   003002  5005               	movf	___fleq@ff2^0,w,c
  4132   003004  1801               	xorwf	___fleq@ff1^0,w,c
  4133   003006  E10F               	bnz	u3320
  4134   003008  5006               	movf	(___fleq@ff2+1)^0,w,c
  4135   00300A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4136   00300C  E10C               	bnz	u3320
  4137   00300E  5007               	movf	(___fleq@ff2+2)^0,w,c
  4138   003010  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4139   003012  E109               	bnz	u3320
  4140   003014  5008               	movf	(___fleq@ff2+3)^0,w,c
  4141   003016  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4142   003018  B4D8               	btfsc	status,2,c
  4143   00301A  EF11  F018         	goto	u3321
  4144   00301E  EF13  F018         	goto	u3320
  4145   003022                     u3321:
  4146   003022  EF16  F018         	goto	l3740
  4147   003026                     u3320:
  4148   003026  90D8               	bcf	status,0,c
  4149   003028  EF17  F018         	goto	l817
  4150   00302C                     l3740:
  4151   00302C  80D8               	bsf	status,0,c
  4152   00302E                     l817:
  4153   00302E  0012               	return		;funcret
  4154   003030                     __end_of___fleq:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function ___fldiv *****************
  4158 ;; Defined at:
  4159 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  b               4   25[COMRAM] unsigned char 
  4162 ;;  a               4   29[COMRAM] unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  grs             4   44[COMRAM] unsigned long 
  4165 ;;  rem             4   37[COMRAM] unsigned long 
  4166 ;;  new_exp         2   42[COMRAM] short 
  4167 ;;  aexp            1   49[COMRAM] unsigned char 
  4168 ;;  bexp            1   48[COMRAM] unsigned char 
  4169 ;;  sign            1   41[COMRAM] unsigned char 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  4   25[COMRAM] unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4179 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;Total ram usage:       25 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_convert_rgb2hue
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text11
  4194   001EE8                     __ptext11:
  4195                           	callstack 0
  4196   001EE8                     ___fldiv:
  4197                           	callstack 28
  4198   001EE8  501D               	movf	(___fldiv@b+3)^0,w,c
  4199   001EEA  0B80               	andlw	128
  4200   001EEC  6E2A               	movwf	___fldiv@sign^0,c
  4201   001EEE  501D               	movf	(___fldiv@b+3)^0,w,c
  4202   001EF0  241D               	addwf	(___fldiv@b+3)^0,w,c
  4203   001EF2  6E31               	movwf	___fldiv@bexp^0,c
  4204   001EF4  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  4205   001EF6  EF7F  F00F         	goto	u2881
  4206   001EFA  EF81  F00F         	goto	u2880
  4207   001EFE                     u2881:
  4208   001EFE  EF82  F00F         	goto	l3460
  4209   001F02                     u2880:
  4210   001F02  8031               	bsf	___fldiv@bexp^0,0,c
  4211   001F04                     l3460:
  4212   001F04  5031               	movf	___fldiv@bexp^0,w,c
  4213   001F06  B4D8               	btfsc	status,2,c
  4214   001F08  EF88  F00F         	goto	u2891
  4215   001F0C  EF8A  F00F         	goto	u2890
  4216   001F10                     u2891:
  4217   001F10  EF9F  F00F         	goto	l3470
  4218   001F14                     u2890:
  4219   001F14  2831               	incf	___fldiv@bexp^0,w,c
  4220   001F16  A4D8               	btfss	status,2,c
  4221   001F18  EF90  F00F         	goto	u2901
  4222   001F1C  EF92  F00F         	goto	u2900
  4223   001F20                     u2901:
  4224   001F20  EF9A  F00F         	goto	l3466
  4225   001F24                     u2900:
  4226   001F24  0E00               	movlw	0
  4227   001F26  6E1A               	movwf	___fldiv@b^0,c
  4228   001F28  0E00               	movlw	0
  4229   001F2A  6E1B               	movwf	(___fldiv@b+1)^0,c
  4230   001F2C  0E00               	movlw	0
  4231   001F2E  6E1C               	movwf	(___fldiv@b+2)^0,c
  4232   001F30  0E00               	movlw	0
  4233   001F32  6E1D               	movwf	(___fldiv@b+3)^0,c
  4234   001F34                     l3466:
  4235   001F34  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  4236   001F36  0E00               	movlw	0
  4237   001F38  6E1D               	movwf	(___fldiv@b+3)^0,c
  4238   001F3A  EFA7  F00F         	goto	l3472
  4239   001F3E                     l3470:
  4240   001F3E  0E00               	movlw	0
  4241   001F40  6E1A               	movwf	___fldiv@b^0,c
  4242   001F42  0E00               	movlw	0
  4243   001F44  6E1B               	movwf	(___fldiv@b+1)^0,c
  4244   001F46  0E00               	movlw	0
  4245   001F48  6E1C               	movwf	(___fldiv@b+2)^0,c
  4246   001F4A  0E00               	movlw	0
  4247   001F4C  6E1D               	movwf	(___fldiv@b+3)^0,c
  4248   001F4E                     l3472:
  4249   001F4E  5021               	movf	(___fldiv@a+3)^0,w,c
  4250   001F50  0B80               	andlw	128
  4251   001F52  1A2A               	xorwf	___fldiv@sign^0,f,c
  4252   001F54  5021               	movf	(___fldiv@a+3)^0,w,c
  4253   001F56  2421               	addwf	(___fldiv@a+3)^0,w,c
  4254   001F58  6E32               	movwf	___fldiv@aexp^0,c
  4255   001F5A  AE20               	btfss	(___fldiv@a+2)^0,7,c
  4256   001F5C  EFB2  F00F         	goto	u2911
  4257   001F60  EFB4  F00F         	goto	u2910
  4258   001F64                     u2911:
  4259   001F64  EFB5  F00F         	goto	l3480
  4260   001F68                     u2910:
  4261   001F68  8032               	bsf	___fldiv@aexp^0,0,c
  4262   001F6A                     l3480:
  4263   001F6A  5032               	movf	___fldiv@aexp^0,w,c
  4264   001F6C  B4D8               	btfsc	status,2,c
  4265   001F6E  EFBB  F00F         	goto	u2921
  4266   001F72  EFBD  F00F         	goto	u2920
  4267   001F76                     u2921:
  4268   001F76  EFD2  F00F         	goto	l3490
  4269   001F7A                     u2920:
  4270   001F7A  2832               	incf	___fldiv@aexp^0,w,c
  4271   001F7C  A4D8               	btfss	status,2,c
  4272   001F7E  EFC3  F00F         	goto	u2931
  4273   001F82  EFC5  F00F         	goto	u2930
  4274   001F86                     u2931:
  4275   001F86  EFCD  F00F         	goto	l3486
  4276   001F8A                     u2930:
  4277   001F8A  0E00               	movlw	0
  4278   001F8C  6E1E               	movwf	___fldiv@a^0,c
  4279   001F8E  0E00               	movlw	0
  4280   001F90  6E1F               	movwf	(___fldiv@a+1)^0,c
  4281   001F92  0E00               	movlw	0
  4282   001F94  6E20               	movwf	(___fldiv@a+2)^0,c
  4283   001F96  0E00               	movlw	0
  4284   001F98  6E21               	movwf	(___fldiv@a+3)^0,c
  4285   001F9A                     l3486:
  4286   001F9A  8E20               	bsf	(___fldiv@a+2)^0,7,c
  4287   001F9C  0E00               	movlw	0
  4288   001F9E  6E21               	movwf	(___fldiv@a+3)^0,c
  4289   001FA0  EFDA  F00F         	goto	l3492
  4290   001FA4                     l3490:
  4291   001FA4  0E00               	movlw	0
  4292   001FA6  6E1E               	movwf	___fldiv@a^0,c
  4293   001FA8  0E00               	movlw	0
  4294   001FAA  6E1F               	movwf	(___fldiv@a+1)^0,c
  4295   001FAC  0E00               	movlw	0
  4296   001FAE  6E20               	movwf	(___fldiv@a+2)^0,c
  4297   001FB0  0E00               	movlw	0
  4298   001FB2  6E21               	movwf	(___fldiv@a+3)^0,c
  4299   001FB4                     l3492:
  4300   001FB4  501E               	movf	___fldiv@a^0,w,c
  4301   001FB6  101F               	iorwf	(___fldiv@a+1)^0,w,c
  4302   001FB8  1020               	iorwf	(___fldiv@a+2)^0,w,c
  4303   001FBA  1021               	iorwf	(___fldiv@a+3)^0,w,c
  4304   001FBC  A4D8               	btfss	status,2,c
  4305   001FBE  EFE3  F00F         	goto	u2941
  4306   001FC2  EFE5  F00F         	goto	u2940
  4307   001FC6                     u2941:
  4308   001FC6  EFFD  F00F         	goto	l3504
  4309   001FCA                     u2940:
  4310   001FCA  0E00               	movlw	0
  4311   001FCC  6E1A               	movwf	___fldiv@b^0,c
  4312   001FCE  0E00               	movlw	0
  4313   001FD0  6E1B               	movwf	(___fldiv@b+1)^0,c
  4314   001FD2  0E00               	movlw	0
  4315   001FD4  6E1C               	movwf	(___fldiv@b+2)^0,c
  4316   001FD6  0E00               	movlw	0
  4317   001FD8  6E1D               	movwf	(___fldiv@b+3)^0,c
  4318   001FDA  0E80               	movlw	128
  4319   001FDC  121C               	iorwf	(___fldiv@b+2)^0,f,c
  4320   001FDE  0E7F               	movlw	127
  4321   001FE0  121D               	iorwf	(___fldiv@b+3)^0,f,c
  4322   001FE2                     l3498:
  4323   001FE2  502A               	movf	___fldiv@sign^0,w,c
  4324   001FE4  121D               	iorwf	(___fldiv@b+3)^0,f,c
  4325   001FE6  C01A  F01A         	movff	___fldiv@b,?___fldiv
  4326   001FEA  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  4327   001FEE  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  4328   001FF2  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  4329   001FF6  EF40  F011         	goto	l1140
  4330   001FFA                     l3504:
  4331   001FFA  5031               	movf	___fldiv@bexp^0,w,c
  4332   001FFC  A4D8               	btfss	status,2,c
  4333   001FFE  EF03  F010         	goto	u2951
  4334   002002  EF05  F010         	goto	u2950
  4335   002006                     u2951:
  4336   002006  EF0F  F010         	goto	l3512
  4337   00200A                     u2950:
  4338   00200A  0E00               	movlw	0
  4339   00200C  6E1A               	movwf	?___fldiv^0,c
  4340   00200E  0E00               	movlw	0
  4341   002010  6E1B               	movwf	(?___fldiv+1)^0,c
  4342   002012  0E00               	movlw	0
  4343   002014  6E1C               	movwf	(?___fldiv+2)^0,c
  4344   002016  0E00               	movlw	0
  4345   002018  6E1D               	movwf	(?___fldiv+3)^0,c
  4346   00201A  EF40  F011         	goto	l1140
  4347   00201E                     l3512:
  4348   00201E  5032               	movf	___fldiv@aexp^0,w,c
  4349   002020  C031  F022         	movff	___fldiv@bexp,??___fldiv
  4350   002024  6A23               	clrf	(??___fldiv+1)^0,c
  4351   002026  5E22               	subwf	??___fldiv^0,f,c
  4352   002028  0E00               	movlw	0
  4353   00202A  5A23               	subwfb	(??___fldiv+1)^0,f,c
  4354   00202C  0E7F               	movlw	127
  4355   00202E  2422               	addwf	??___fldiv^0,w,c
  4356   002030  6E2B               	movwf	___fldiv@new_exp^0,c
  4357   002032  0E00               	movlw	0
  4358   002034  2023               	addwfc	(??___fldiv+1)^0,w,c
  4359   002036  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  4360   002038  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  4361   00203C  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  4362   002040  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  4363   002044  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  4364   002048  0E00               	movlw	0
  4365   00204A  6E1A               	movwf	___fldiv@b^0,c
  4366   00204C  0E00               	movlw	0
  4367   00204E  6E1B               	movwf	(___fldiv@b+1)^0,c
  4368   002050  0E00               	movlw	0
  4369   002052  6E1C               	movwf	(___fldiv@b+2)^0,c
  4370   002054  0E00               	movlw	0
  4371   002056  6E1D               	movwf	(___fldiv@b+3)^0,c
  4372   002058  0E00               	movlw	0
  4373   00205A  6E2D               	movwf	___fldiv@grs^0,c
  4374   00205C  0E00               	movlw	0
  4375   00205E  6E2E               	movwf	(___fldiv@grs+1)^0,c
  4376   002060  0E00               	movlw	0
  4377   002062  6E2F               	movwf	(___fldiv@grs+2)^0,c
  4378   002064  0E00               	movlw	0
  4379   002066  6E30               	movwf	(___fldiv@grs+3)^0,c
  4380   002068  0E00               	movlw	0
  4381   00206A  6E32               	movwf	___fldiv@aexp^0,c
  4382   00206C  EF70  F010         	goto	l1142
  4383   002070                     l3522:
  4384   002070  5032               	movf	___fldiv@aexp^0,w,c
  4385   002072  B4D8               	btfsc	status,2,c
  4386   002074  EF3E  F010         	goto	u2961
  4387   002078  EF40  F010         	goto	u2960
  4388   00207C                     u2961:
  4389   00207C  EF57  F010         	goto	l3530
  4390   002080                     u2960:
  4391   002080  90D8               	bcf	status,0,c
  4392   002082  3626               	rlcf	___fldiv@rem^0,f,c
  4393   002084  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  4394   002086  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  4395   002088  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  4396   00208A  90D8               	bcf	status,0,c
  4397   00208C  361A               	rlcf	___fldiv@b^0,f,c
  4398   00208E  361B               	rlcf	(___fldiv@b+1)^0,f,c
  4399   002090  361C               	rlcf	(___fldiv@b+2)^0,f,c
  4400   002092  361D               	rlcf	(___fldiv@b+3)^0,f,c
  4401   002094  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  4402   002096  EF4F  F010         	goto	u2971
  4403   00209A  EF51  F010         	goto	u2970
  4404   00209E                     u2971:
  4405   00209E  EF52  F010         	goto	l1145
  4406   0020A2                     u2970:
  4407   0020A2  801A               	bsf	___fldiv@b^0,0,c
  4408   0020A4                     l1145:
  4409   0020A4  90D8               	bcf	status,0,c
  4410   0020A6  362D               	rlcf	___fldiv@grs^0,f,c
  4411   0020A8  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  4412   0020AA  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  4413   0020AC  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  4414   0020AE                     l3530:
  4415   0020AE  501E               	movf	___fldiv@a^0,w,c
  4416   0020B0  5C26               	subwf	___fldiv@rem^0,w,c
  4417   0020B2  501F               	movf	(___fldiv@a+1)^0,w,c
  4418   0020B4  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  4419   0020B6  5020               	movf	(___fldiv@a+2)^0,w,c
  4420   0020B8  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  4421   0020BA  5021               	movf	(___fldiv@a+3)^0,w,c
  4422   0020BC  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  4423   0020BE  A0D8               	btfss	status,0,c
  4424   0020C0  EF64  F010         	goto	u2981
  4425   0020C4  EF66  F010         	goto	u2980
  4426   0020C8                     u2981:
  4427   0020C8  EF6F  F010         	goto	l3536
  4428   0020CC                     u2980:
  4429   0020CC  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  4430   0020CE  501E               	movf	___fldiv@a^0,w,c
  4431   0020D0  5E26               	subwf	___fldiv@rem^0,f,c
  4432   0020D2  501F               	movf	(___fldiv@a+1)^0,w,c
  4433   0020D4  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  4434   0020D6  5020               	movf	(___fldiv@a+2)^0,w,c
  4435   0020D8  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  4436   0020DA  5021               	movf	(___fldiv@a+3)^0,w,c
  4437   0020DC  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  4438   0020DE                     l3536:
  4439   0020DE  2A32               	incf	___fldiv@aexp^0,f,c
  4440   0020E0                     l1142:
  4441   0020E0  0E19               	movlw	25
  4442   0020E2  6432               	cpfsgt	___fldiv@aexp^0,c
  4443   0020E4  EF76  F010         	goto	u2991
  4444   0020E8  EF78  F010         	goto	u2990
  4445   0020EC                     u2991:
  4446   0020EC  EF38  F010         	goto	l3522
  4447   0020F0                     u2990:
  4448   0020F0  5026               	movf	___fldiv@rem^0,w,c
  4449   0020F2  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  4450   0020F4  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  4451   0020F6  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  4452   0020F8  B4D8               	btfsc	status,2,c
  4453   0020FA  EF81  F010         	goto	u3001
  4454   0020FE  EF83  F010         	goto	u3000
  4455   002102                     u3001:
  4456   002102  EF9B  F010         	goto	l3548
  4457   002106                     u3000:
  4458   002106  802D               	bsf	___fldiv@grs^0,0,c
  4459   002108  EF9B  F010         	goto	l3548
  4460   00210C                     l3542:
  4461   00210C  90D8               	bcf	status,0,c
  4462   00210E  361A               	rlcf	___fldiv@b^0,f,c
  4463   002110  361B               	rlcf	(___fldiv@b+1)^0,f,c
  4464   002112  361C               	rlcf	(___fldiv@b+2)^0,f,c
  4465   002114  361D               	rlcf	(___fldiv@b+3)^0,f,c
  4466   002116  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  4467   002118  EF90  F010         	goto	u3011
  4468   00211C  EF92  F010         	goto	u3010
  4469   002120                     u3011:
  4470   002120  EF93  F010         	goto	l1151
  4471   002124                     u3010:
  4472   002124  801A               	bsf	___fldiv@b^0,0,c
  4473   002126                     l1151:
  4474   002126  90D8               	bcf	status,0,c
  4475   002128  362D               	rlcf	___fldiv@grs^0,f,c
  4476   00212A  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  4477   00212C  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  4478   00212E  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  4479   002130  062B               	decf	___fldiv@new_exp^0,f,c
  4480   002132  A0D8               	btfss	status,0,c
  4481   002134  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  4482   002136                     l3548:
  4483   002136  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  4484   002138  EFA0  F010         	goto	u3021
  4485   00213C  EFA2  F010         	goto	u3020
  4486   002140                     u3021:
  4487   002140  EF86  F010         	goto	l3542
  4488   002144                     u3020:
  4489   002144  0E00               	movlw	0
  4490   002146  6E32               	movwf	___fldiv@aexp^0,c
  4491   002148  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  4492   00214A  EFA9  F010         	goto	u3031
  4493   00214E  EFAB  F010         	goto	u3030
  4494   002152                     u3031:
  4495   002152  EFCF  F010         	goto	l1153
  4496   002156                     u3030:
  4497   002156  0EFF               	movlw	255
  4498   002158  142D               	andwf	___fldiv@grs^0,w,c
  4499   00215A  6E22               	movwf	??___fldiv^0,c
  4500   00215C  0EFF               	movlw	255
  4501   00215E  142E               	andwf	(___fldiv@grs+1)^0,w,c
  4502   002160  6E23               	movwf	(??___fldiv+1)^0,c
  4503   002162  0EFF               	movlw	255
  4504   002164  142F               	andwf	(___fldiv@grs+2)^0,w,c
  4505   002166  6E24               	movwf	(??___fldiv+2)^0,c
  4506   002168  0E7F               	movlw	127
  4507   00216A  1430               	andwf	(___fldiv@grs+3)^0,w,c
  4508   00216C  6E25               	movwf	(??___fldiv+3)^0,c
  4509   00216E  5022               	movf	??___fldiv^0,w,c
  4510   002170  1023               	iorwf	(??___fldiv+1)^0,w,c
  4511   002172  1024               	iorwf	(??___fldiv+2)^0,w,c
  4512   002174  1025               	iorwf	(??___fldiv+3)^0,w,c
  4513   002176  B4D8               	btfsc	status,2,c
  4514   002178  EFC0  F010         	goto	u3041
  4515   00217C  EFC2  F010         	goto	u3040
  4516   002180                     u3041:
  4517   002180  EFC6  F010         	goto	l1154
  4518   002184                     u3040:
  4519   002184                     l3556:
  4520   002184  0E01               	movlw	1
  4521   002186  6E32               	movwf	___fldiv@aexp^0,c
  4522   002188  EFCF  F010         	goto	l1153
  4523   00218C                     l1154:
  4524   00218C  A01A               	btfss	___fldiv@b^0,0,c
  4525   00218E  EFCB  F010         	goto	u3051
  4526   002192  EFCD  F010         	goto	u3050
  4527   002196                     u3051:
  4528   002196  EFCF  F010         	goto	l1153
  4529   00219A                     u3050:
  4530   00219A  EFC2  F010         	goto	l3556
  4531   00219E                     l1153:
  4532   00219E  5032               	movf	___fldiv@aexp^0,w,c
  4533   0021A0  B4D8               	btfsc	status,2,c
  4534   0021A2  EFD5  F010         	goto	u3061
  4535   0021A6  EFD7  F010         	goto	u3060
  4536   0021AA                     u3061:
  4537   0021AA  EFFB  F010         	goto	l3568
  4538   0021AE                     u3060:
  4539   0021AE  0E01               	movlw	1
  4540   0021B0  261A               	addwf	___fldiv@b^0,f,c
  4541   0021B2  0E00               	movlw	0
  4542   0021B4  221B               	addwfc	(___fldiv@b+1)^0,f,c
  4543   0021B6  221C               	addwfc	(___fldiv@b+2)^0,f,c
  4544   0021B8  221D               	addwfc	(___fldiv@b+3)^0,f,c
  4545   0021BA  A01D               	btfss	(___fldiv@b+3)^0,0,c
  4546   0021BC  EFE2  F010         	goto	u3071
  4547   0021C0  EFE4  F010         	goto	u3070
  4548   0021C4                     u3071:
  4549   0021C4  EFFB  F010         	goto	l3568
  4550   0021C8                     u3070:
  4551   0021C8  C01A  F022         	movff	___fldiv@b,??___fldiv
  4552   0021CC  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  4553   0021D0  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  4554   0021D4  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  4555   0021D8  3425               	rlcf	(??___fldiv+3)^0,w,c
  4556   0021DA  3225               	rrcf	(??___fldiv+3)^0,f,c
  4557   0021DC  3224               	rrcf	(??___fldiv+2)^0,f,c
  4558   0021DE  3223               	rrcf	(??___fldiv+1)^0,f,c
  4559   0021E0  3222               	rrcf	??___fldiv^0,f,c
  4560   0021E2  C022  F01A         	movff	??___fldiv,___fldiv@b
  4561   0021E6  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  4562   0021EA  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  4563   0021EE  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  4564   0021F2  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  4565   0021F4  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  4566   0021F6                     l3568:
  4567   0021F6  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4568   0021F8  EF06  F011         	goto	u3081
  4569   0021FC  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  4570   0021FE  E108               	bnz	u3080
  4571   002200  282B               	incf	___fldiv@new_exp^0,w,c
  4572   002202  A0D8               	btfss	status,0,c
  4573   002204  EF06  F011         	goto	u3081
  4574   002208  EF08  F011         	goto	u3080
  4575   00220C                     u3081:
  4576   00220C  EF13  F011         	goto	l3572
  4577   002210                     u3080:
  4578   002210  0E00               	movlw	0
  4579   002212  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  4580   002214  682B               	setf	___fldiv@new_exp^0,c
  4581   002216  0E00               	movlw	0
  4582   002218  6E1A               	movwf	___fldiv@b^0,c
  4583   00221A  0E00               	movlw	0
  4584   00221C  6E1B               	movwf	(___fldiv@b+1)^0,c
  4585   00221E  0E00               	movlw	0
  4586   002220  6E1C               	movwf	(___fldiv@b+2)^0,c
  4587   002222  0E00               	movlw	0
  4588   002224  6E1D               	movwf	(___fldiv@b+3)^0,c
  4589   002226                     l3572:
  4590   002226  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4591   002228  EF20  F011         	goto	u3090
  4592   00222C  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  4593   00222E  E106               	bnz	u3091
  4594   002230  042B               	decf	___fldiv@new_exp^0,w,c
  4595   002232  B0D8               	btfsc	status,0,c
  4596   002234  EF1E  F011         	goto	u3091
  4597   002238  EF20  F011         	goto	u3090
  4598   00223C                     u3091:
  4599   00223C  EF2E  F011         	goto	l3576
  4600   002240                     u3090:
  4601   002240  0E00               	movlw	0
  4602   002242  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  4603   002244  0E00               	movlw	0
  4604   002246  6E2B               	movwf	___fldiv@new_exp^0,c
  4605   002248  0E00               	movlw	0
  4606   00224A  6E1A               	movwf	___fldiv@b^0,c
  4607   00224C  0E00               	movlw	0
  4608   00224E  6E1B               	movwf	(___fldiv@b+1)^0,c
  4609   002250  0E00               	movlw	0
  4610   002252  6E1C               	movwf	(___fldiv@b+2)^0,c
  4611   002254  0E00               	movlw	0
  4612   002256  6E1D               	movwf	(___fldiv@b+3)^0,c
  4613   002258  0E00               	movlw	0
  4614   00225A  6E2A               	movwf	___fldiv@sign^0,c
  4615   00225C                     l3576:
  4616   00225C  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  4617   002260  A031               	btfss	___fldiv@bexp^0,0,c
  4618   002262  EF35  F011         	goto	u3101
  4619   002266  EF37  F011         	goto	u3100
  4620   00226A                     u3101:
  4621   00226A  EF3A  F011         	goto	l3582
  4622   00226E                     u3100:
  4623   00226E  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  4624   002270  EF3B  F011         	goto	l3584
  4625   002274                     l3582:
  4626   002274  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  4627   002276                     l3584:
  4628   002276  90D8               	bcf	status,0,c
  4629   002278  3031               	rrcf	___fldiv@bexp^0,w,c
  4630   00227A  6E1D               	movwf	(___fldiv@b+3)^0,c
  4631   00227C  EFF1  F00F         	goto	l3498
  4632   002280                     l1140:
  4633   002280  0012               	return		;funcret
  4634   002282                     __end_of___fldiv:
  4635                           	callstack 0
  4636                           
  4637 ;; *************** function _initUSART4 *****************
  4638 ;; Defined at:
  4639 ;;		line 14 in file "serial.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           	psect	text12
  4667   003604                     __ptext12:
  4668                           	callstack 0
  4669   003604                     _initUSART4:
  4670                           	callstack 30
  4671   003604                     
  4672                           ;serial.c: 15:     RC0PPS = 0x12;
  4673   003604  0E12               	movlw	18
  4674   003606  010E               	movlb	14	; () banked
  4675   003608  6F62               	movwf	98,b	;volatile
  4676                           
  4677                           ;serial.c: 16:     RX4PPS = 0x11;
  4678   00360A  0E11               	movlw	17
  4679   00360C  6F15               	movwf	21,b	;volatile
  4680   00360E                     
  4681                           ; BSR set to: 14
  4682                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  4683   00360E  97E9               	bcf	233,3,b	;volatile
  4684   003610                     
  4685                           ; BSR set to: 14
  4686                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  4687   003610  95E8               	bcf	232,2,b	;volatile
  4688                           
  4689                           ;serial.c: 19:     SP4BRGL = 51;
  4690   003612  0E33               	movlw	51
  4691   003614  6FE5               	movwf	229,b	;volatile
  4692                           
  4693                           ;serial.c: 20:     SP4BRGH = 0;
  4694   003616  0E00               	movlw	0
  4695   003618  6FE6               	movwf	230,b	;volatile
  4696   00361A                     
  4697                           ; BSR set to: 14
  4698                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4699   00361A  89E7               	bsf	231,4,b	;volatile
  4700   00361C                     
  4701                           ; BSR set to: 14
  4702                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4703   00361C  8BE8               	bsf	232,5,b	;volatile
  4704   00361E                     
  4705                           ; BSR set to: 14
  4706                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4707   00361E  8FE7               	bsf	231,7,b	;volatile
  4708   003620                     
  4709                           ; BSR set to: 14
  4710   003620  0012               	return		;funcret
  4711   003622                     __end_of_initUSART4:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _initDCmotorsPWM *****************
  4715 ;; Defined at:
  4716 ;;		line 5 in file "dc_motor.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;Total ram usage:        2 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_main
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text13
  4744   00316C                     __ptext13:
  4745                           	callstack 0
  4746   00316C                     _initDCmotorsPWM:
  4747                           	callstack 30
  4748   00316C                     
  4749                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4750   00316C  9485               	bcf	133,2,c	;volatile
  4751                           
  4752                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4753   00316E  9E83               	bcf	131,7,c	;volatile
  4754                           
  4755                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4756   003170  9885               	bcf	133,4,c	;volatile
  4757                           
  4758                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4759   003172  9C87               	bcf	135,6,c	;volatile
  4760                           
  4761                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4762   003174  947D               	bcf	125,2,c	;volatile
  4763                           
  4764                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4765   003176  9E7B               	bcf	123,7,c	;volatile
  4766                           
  4767                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4768   003178  987D               	bcf	125,4,c	;volatile
  4769                           
  4770                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  4771   00317A  9C7F               	bcf	127,6,c	;volatile
  4772   00317C                     
  4773                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4774   00317C  0E05               	movlw	5
  4775   00317E  010E               	movlb	14	; () banked
  4776   003180  6F74               	movwf	116,b	;volatile
  4777                           
  4778                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4779   003182  0E06               	movlw	6
  4780   003184  6F76               	movwf	118,b	;volatile
  4781                           
  4782                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4783   003186  0E07               	movlw	7
  4784   003188  6F69               	movwf	105,b	;volatile
  4785                           
  4786                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4787   00318A  0E08               	movlw	8
  4788   00318C  6F88               	movwf	136,b	;volatile
  4789                           
  4790                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4791   00318E  50BD               	movf	189,w,c	;volatile
  4792   003190  0B8F               	andlw	-113
  4793   003192  0940               	iorlw	64
  4794   003194  6EBD               	movwf	189,c	;volatile
  4795                           
  4796                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4797   003196  0EE0               	movlw	-32
  4798   003198  16BE               	andwf	190,f,c	;volatile
  4799                           
  4800                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4801   00319A  50BF               	movf	191,w,c	;volatile
  4802   00319C  0BF0               	andlw	-16
  4803   00319E  0901               	iorlw	1
  4804   0031A0  6EBF               	movwf	191,c	;volatile
  4805   0031A2                     
  4806                           ; BSR set to: 14
  4807                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  4808   0031A2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4809   0031A6                     
  4810                           ; BSR set to: 14
  4811                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4812   0031A6  8EBD               	bsf	189,7,c	;volatile
  4813                           
  4814                           ;dc_motor.c: 35:     CCPR1H=0;
  4815   0031A8  0E00               	movlw	0
  4816   0031AA  6EAA               	movwf	170,c	;volatile
  4817                           
  4818                           ;dc_motor.c: 36:     CCPR2H=0;
  4819   0031AC  0E00               	movlw	0
  4820   0031AE  6EA6               	movwf	166,c	;volatile
  4821                           
  4822                           ;dc_motor.c: 37:     CCPR3H=0;
  4823   0031B0  0E00               	movlw	0
  4824   0031B2  010F               	movlb	15	; () banked
  4825   0031B4  6F25               	movwf	37,b	;volatile
  4826                           
  4827                           ;dc_motor.c: 38:     CCPR4H=0;
  4828   0031B6  0E00               	movlw	0
  4829   0031B8  6F21               	movwf	33,b	;volatile
  4830                           
  4831                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4832   0031BA  0EFC               	movlw	-4
  4833   0031BC  16AD               	andwf	173,f,c	;volatile
  4834                           
  4835                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4836   0031BE  0EF3               	movlw	-13
  4837   0031C0  16AD               	andwf	173,f,c	;volatile
  4838                           
  4839                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4840   0031C2  0ECF               	movlw	-49
  4841   0031C4  16AD               	andwf	173,f,c	;volatile
  4842                           
  4843                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4844   0031C6  0E3F               	movlw	-193
  4845   0031C8  16AD               	andwf	173,f,c	;volatile
  4846   0031CA                     
  4847                           ; BSR set to: 15
  4848                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4849   0031CA  88AB               	bsf	171,4,c	;volatile
  4850                           
  4851                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  4852   0031CC  50AB               	movf	171,w,c	;volatile
  4853   0031CE  0BF0               	andlw	-16
  4854   0031D0  090C               	iorlw	12
  4855   0031D2  6EAB               	movwf	171,c	;volatile
  4856   0031D4                     
  4857                           ; BSR set to: 15
  4858                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  4859   0031D4  8EAB               	bsf	171,7,c	;volatile
  4860   0031D6                     
  4861                           ; BSR set to: 15
  4862                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  4863   0031D6  88A7               	bsf	167,4,c	;volatile
  4864                           
  4865                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  4866   0031D8  50A7               	movf	167,w,c	;volatile
  4867   0031DA  0BF0               	andlw	-16
  4868   0031DC  090C               	iorlw	12
  4869   0031DE  6EA7               	movwf	167,c	;volatile
  4870   0031E0                     
  4871                           ; BSR set to: 15
  4872                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  4873   0031E0  8EA7               	bsf	167,7,c	;volatile
  4874   0031E2                     
  4875                           ; BSR set to: 15
  4876                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  4877   0031E2  8926               	bsf	38,4,b	;volatile
  4878                           
  4879                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  4880   0031E4  5126               	movf	38,w,b	;volatile
  4881   0031E6  0BF0               	andlw	-16
  4882   0031E8  090C               	iorlw	12
  4883   0031EA  6F26               	movwf	38,b	;volatile
  4884   0031EC                     
  4885                           ; BSR set to: 15
  4886                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  4887   0031EC  8F26               	bsf	38,7,b	;volatile
  4888   0031EE                     
  4889                           ; BSR set to: 15
  4890                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  4891   0031EE  8922               	bsf	34,4,b	;volatile
  4892                           
  4893                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  4894   0031F0  5122               	movf	34,w,b	;volatile
  4895   0031F2  0BF0               	andlw	-16
  4896   0031F4  090C               	iorlw	12
  4897   0031F6  6F22               	movwf	34,b	;volatile
  4898   0031F8                     
  4899                           ; BSR set to: 15
  4900                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  4901   0031F8  8F22               	bsf	34,7,b	;volatile
  4902   0031FA                     
  4903                           ; BSR set to: 15
  4904   0031FA  0012               	return		;funcret
  4905   0031FC                     __end_of_initDCmotorsPWM:
  4906                           	callstack 0
  4907                           
  4908 ;; *************** function _color_click_init *****************
  4909 ;; Defined at:
  4910 ;;		line 8 in file "color.c"
  4911 ;; Parameters:    Size  Location     Type
  4912 ;;		None
  4913 ;; Auto vars:     Size  Location     Type
  4914 ;;		None
  4915 ;; Return value:  Size  Location     Type
  4916 ;;                  1    wreg      void 
  4917 ;; Registers used:
  4918 ;;		wreg, status,2, status,0, cstack
  4919 ;; Tracked objects:
  4920 ;;		On entry : 0/0
  4921 ;;		On exit  : 0/0
  4922 ;;		Unchanged: 0/0
  4923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;Total ram usage:        1 bytes
  4929 ;; Hardware stack levels used: 1
  4930 ;; Hardware stack levels required when called: 3
  4931 ;; This function calls:
  4932 ;;		_I2C_2_Master_Init
  4933 ;;		_color_writetoaddr
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text14
  4940   003480                     __ptext14:
  4941                           	callstack 0
  4942   003480                     _color_click_init:
  4943                           	callstack 27
  4944   003480                     
  4945                           ;color.c: 11:     I2C_2_Master_Init();
  4946   003480  ECA7  F01A         	call	_I2C_2_Master_Init	;wreg free
  4947   003484                     
  4948                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  4949   003484  0E01               	movlw	1
  4950   003486  6E03               	movwf	color_writetoaddr@value^0,c
  4951   003488  0E00               	movlw	0
  4952   00348A  ECE3  F01A         	call	_color_writetoaddr
  4953   00348E                     
  4954                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4955   00348E  0E3F               	movlw	63
  4956   003490  6E05               	movwf	??_color_click_init^0,c
  4957   003492  0E55               	movlw	85
  4958   003494                     u4387:
  4959   003494  2EE8               	decfsz	wreg,f,c
  4960   003496  D7FE               	bra	u4387
  4961   003498  2E05               	decfsz	??_color_click_init^0,f,c
  4962   00349A  D7FC               	bra	u4387
  4963   00349C  0000               	nop	
  4964   00349E                     
  4965                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  4966   00349E  0E03               	movlw	3
  4967   0034A0  6E03               	movwf	color_writetoaddr@value^0,c
  4968   0034A2  0E00               	movlw	0
  4969   0034A4  ECE3  F01A         	call	_color_writetoaddr
  4970   0034A8                     
  4971                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  4972   0034A8  0ED5               	movlw	213
  4973   0034AA  6E03               	movwf	color_writetoaddr@value^0,c
  4974   0034AC  0E01               	movlw	1
  4975   0034AE  ECE3  F01A         	call	_color_writetoaddr
  4976   0034B2  0012               	return		;funcret
  4977   0034B4                     __end_of_color_click_init:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _color_writetoaddr *****************
  4981 ;; Defined at:
  4982 ;;		line 24 in file "color.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  address         1    wreg     unsigned char 
  4985 ;;  value           1    2[COMRAM] unsigned char 
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;  address         1    3[COMRAM] unsigned char 
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, status,2, status,0, cstack
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4997 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;Total ram usage:        2 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; Hardware stack levels required when called: 2
  5004 ;; This function calls:
  5005 ;;		_I2C_2_Master_Start
  5006 ;;		_I2C_2_Master_Stop
  5007 ;;		_I2C_2_Master_Write
  5008 ;; This function is called by:
  5009 ;;		_color_click_init
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           	psect	text15
  5014   0035C6                     __ptext15:
  5015                           	callstack 0
  5016   0035C6                     _color_writetoaddr:
  5017                           	callstack 27
  5018                           
  5019                           ;incstack = 0
  5020                           ;color_writetoaddr@address stored from wreg
  5021   0035C6  6E04               	movwf	color_writetoaddr@address^0,c
  5022   0035C8                     
  5023                           ;color.c: 25:     I2C_2_Master_Start();
  5024   0035C8  EC35  F01B         	call	_I2C_2_Master_Start	;wreg free
  5025                           
  5026                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  5027   0035CC  0E52               	movlw	82
  5028   0035CE  EC2A  F01B         	call	_I2C_2_Master_Write
  5029                           
  5030                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  5031   0035D2  5004               	movf	color_writetoaddr@address^0,w,c
  5032   0035D4  0980               	iorlw	128
  5033   0035D6  EC2A  F01B         	call	_I2C_2_Master_Write
  5034                           
  5035                           ;color.c: 28:     I2C_2_Master_Write(value);
  5036   0035DA  5003               	movf	color_writetoaddr@value^0,w,c
  5037   0035DC  EC2A  F01B         	call	_I2C_2_Master_Write
  5038                           
  5039                           ;color.c: 29:     I2C_2_Master_Stop();
  5040   0035E0  EC30  F01B         	call	_I2C_2_Master_Stop	;wreg free
  5041   0035E4  0012               	return		;funcret
  5042   0035E6                     __end_of_color_writetoaddr:
  5043                           	callstack 0
  5044                           
  5045 ;; *************** function _I2C_2_Master_Init *****************
  5046 ;; Defined at:
  5047 ;;		line 4 in file "i2c.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;Total ram usage:        0 bytes
  5066 ;; Hardware stack levels used: 1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_color_click_init
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text16
  5075   00354E                     __ptext16:
  5076                           	callstack 0
  5077   00354E                     _I2C_2_Master_Init:
  5078                           	callstack 29
  5079   00354E                     
  5080                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5081   00354E  010E               	movlb	14	; () banked
  5082   003550  51D9               	movf	217,w,b	;volatile
  5083   003552  0BF0               	andlw	-16
  5084   003554  0908               	iorlw	8
  5085   003556  6FD9               	movwf	217,b	;volatile
  5086   003558                     
  5087                           ; BSR set to: 14
  5088                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5089   003558  8BD9               	bsf	217,5,b	;volatile
  5090                           
  5091                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5092   00355A  0E9F               	movlw	159
  5093   00355C  6FD6               	movwf	214,b	;volatile
  5094   00355E                     
  5095                           ; BSR set to: 14
  5096                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5097   00355E  8A84               	bsf	132,5,c	;volatile
  5098   003560                     
  5099                           ; BSR set to: 14
  5100                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5101   003560  8C84               	bsf	132,6,c	;volatile
  5102   003562                     
  5103                           ; BSR set to: 14
  5104                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5105   003562  9BA7               	bcf	167,5,b	;volatile
  5106   003564                     
  5107                           ; BSR set to: 14
  5108                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5109   003564  9DA7               	bcf	167,6,b	;volatile
  5110                           
  5111                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5112   003566  0E1D               	movlw	29
  5113   003568  6F1D               	movwf	29,b	;volatile
  5114                           
  5115                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5116   00356A  0E1E               	movlw	30
  5117   00356C  6F1C               	movwf	28,b	;volatile
  5118                           
  5119                           ;i2c.c: 18:   RD5PPS=0x1C;
  5120   00356E  0E1C               	movlw	28
  5121   003570  6F6F               	movwf	111,b	;volatile
  5122                           
  5123                           ;i2c.c: 19:   RD6PPS=0x1B;
  5124   003572  0E1B               	movlw	27
  5125   003574  6F70               	movwf	112,b	;volatile
  5126   003576                     
  5127                           ; BSR set to: 14
  5128   003576  0012               	return		;funcret
  5129   003578                     __end_of_I2C_2_Master_Init:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _calibration_routine *****************
  5133 ;; Defined at:
  5134 ;;		line 196 in file "color.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  cCal            1   67[COMRAM] PTR struct colors
  5137 ;;		 -> colorCalibration(8), 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;  cal_state      20   70[COMRAM] unsigned char [20]
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;Total ram usage:       23 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 8
  5156 ;; This function calls:
  5157 ;;		_color_read_Blue
  5158 ;;		_color_read_Clear
  5159 ;;		_color_read_Green
  5160 ;;		_color_read_Red
  5161 ;;		_sendStringSerial4
  5162 ;;		_sprintf
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text17
  5169   002282                     __ptext17:
  5170                           	callstack 0
  5171   002282                     _calibration_routine:
  5172                           	callstack 22
  5173   002282                     
  5174                           ;color.c: 196: void calibration_routine(colors *cCal);color.c: 197: {;color.c: 199:     
      +                          LATGbits.LATG0 = 0;
  5175   002282  907F               	bcf	127,0,c	;volatile
  5176                           
  5177                           ;color.c: 200:     LATEbits.LATE7 = 0;
  5178   002284  9E7D               	bcf	125,7,c	;volatile
  5179                           
  5180                           ;color.c: 201:     LATAbits.LATA3 = 0;
  5181   002286  9679               	bcf	121,3,c	;volatile
  5182   002288                     
  5183                           ;color.c: 203:     char cal_state[20];;color.c: 207:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  5184   002288  0E47               	movlw	low calibration_routine@cal_state
  5185   00228A  6E31               	movwf	sprintf@s^0,c
  5186   00228C  0E73               	movlw	low STR_1
  5187   00228E  6E32               	movwf	sprintf@fmt^0,c
  5188   002290  0EAC               	movlw	low STR_2
  5189   002292  6E33               	movwf	(?_sprintf+2)^0,c
  5190   002294  5033               	movf	(?_sprintf+2)^0,w,c
  5191   002296  A4D8               	btfss	status,2,c
  5192   002298  0E0E               	movlw	high __smallconst
  5193   00229A  6E34               	movwf	(?_sprintf+3)^0,c
  5194   00229C  EC5A  F01A         	call	_sprintf	;wreg free
  5195   0022A0                     
  5196                           ;color.c: 208:     sendStringSerial4(cal_state);
  5197   0022A0  0E47               	movlw	low calibration_routine@cal_state
  5198   0022A2  6E02               	movwf	sendStringSerial4@string^0,c
  5199   0022A4  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  5200   0022A8                     l92:
  5201                           
  5202                           ;color.c: 211:     while(PORTFbits.RF2 == 1){
  5203   0022A8  B48E               	btfsc	142,2,c	;volatile
  5204   0022AA  EF59  F011         	goto	u4271
  5205   0022AE  EF5B  F011         	goto	u4270
  5206   0022B2                     u4271:
  5207   0022B2  EF54  F011         	goto	l92
  5208   0022B6                     u4270:
  5209   0022B6                     
  5210                           ;color.c: 215:     LATGbits.LATG0 = 1;
  5211   0022B6  807F               	bsf	127,0,c	;volatile
  5212   0022B8                     
  5213                           ;color.c: 216:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5214   0022B8  0E29               	movlw	41
  5215   0022BA  6E46               	movwf	(??_calibration_routine+1)^0,c
  5216   0022BC  0E96               	movlw	150
  5217   0022BE  6E45               	movwf	??_calibration_routine^0,c
  5218   0022C0  0E7F               	movlw	127
  5219   0022C2                     u4397:
  5220   0022C2  2EE8               	decfsz	wreg,f,c
  5221   0022C4  D7FE               	bra	u4397
  5222   0022C6  2E45               	decfsz	??_calibration_routine^0,f,c
  5223   0022C8  D7FC               	bra	u4397
  5224   0022CA  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5225   0022CC  D7FA               	bra	u4397
  5226   0022CE  0000               	nop	
  5227   0022D0                     
  5228                           ;color.c: 217:     (cCal->red) = color_read_Red();
  5229   0022D0  ECFE  F018         	call	_color_read_Red	;wreg free
  5230   0022D4  5044               	movf	calibration_routine@cCal^0,w,c
  5231   0022D6  6ED9               	movwf	fsr2l,c
  5232   0022D8  6ADA               	clrf	fsr2h,c
  5233   0022DA  C005  FFDE         	movff	?_color_read_Red,postinc2
  5234   0022DE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5235   0022E2                     
  5236                           ;color.c: 218:     LATGbits.LATG0 = 0;
  5237   0022E2  907F               	bcf	127,0,c	;volatile
  5238   0022E4                     
  5239                           ;color.c: 221:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  5240   0022E4  0E47               	movlw	low calibration_routine@cal_state
  5241   0022E6  6E31               	movwf	sprintf@s^0,c
  5242   0022E8  0E22               	movlw	low STR_3
  5243   0022EA  6E32               	movwf	sprintf@fmt^0,c
  5244   0022EC  0EAC               	movlw	low STR_2
  5245   0022EE  6E33               	movwf	(?_sprintf+2)^0,c
  5246   0022F0  5033               	movf	(?_sprintf+2)^0,w,c
  5247   0022F2  A4D8               	btfss	status,2,c
  5248   0022F4  0E0E               	movlw	high __smallconst
  5249   0022F6  6E34               	movwf	(?_sprintf+3)^0,c
  5250   0022F8  EC5A  F01A         	call	_sprintf	;wreg free
  5251   0022FC                     
  5252                           ;color.c: 222:     sendStringSerial4(&cal_state);
  5253   0022FC  0E47               	movlw	low calibration_routine@cal_state
  5254   0022FE  6E02               	movwf	sendStringSerial4@string^0,c
  5255   002300  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  5256   002304                     l95:
  5257                           
  5258                           ;color.c: 224:     while(PORTFbits.RF2 == 1){
  5259   002304  B48E               	btfsc	142,2,c	;volatile
  5260   002306  EF87  F011         	goto	u4281
  5261   00230A  EF89  F011         	goto	u4280
  5262   00230E                     u4281:
  5263   00230E  EF82  F011         	goto	l95
  5264   002312                     u4280:
  5265   002312                     
  5266                           ;color.c: 228:     LATEbits.LATE7 = 1;
  5267   002312  8E7D               	bsf	125,7,c	;volatile
  5268   002314                     
  5269                           ;color.c: 229:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5270   002314  0E29               	movlw	41
  5271   002316  6E46               	movwf	(??_calibration_routine+1)^0,c
  5272   002318  0E96               	movlw	150
  5273   00231A  6E45               	movwf	??_calibration_routine^0,c
  5274   00231C  0E7F               	movlw	127
  5275   00231E                     u4407:
  5276   00231E  2EE8               	decfsz	wreg,f,c
  5277   002320  D7FE               	bra	u4407
  5278   002322  2E45               	decfsz	??_calibration_routine^0,f,c
  5279   002324  D7FC               	bra	u4407
  5280   002326  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5281   002328  D7FA               	bra	u4407
  5282   00232A  0000               	nop	
  5283   00232C                     
  5284                           ;color.c: 230:     (cCal->green) = color_read_Green();
  5285   00232C  EC26  F019         	call	_color_read_Green	;wreg free
  5286   002330  5044               	movf	calibration_routine@cCal^0,w,c
  5287   002332  6ED9               	movwf	fsr2l,c
  5288   002334  6ADA               	clrf	fsr2h,c
  5289   002336  0E02               	movlw	2
  5290   002338  26D9               	addwf	fsr2l,f,c
  5291   00233A  C005  FFDE         	movff	?_color_read_Green,postinc2
  5292   00233E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5293   002342                     
  5294                           ;color.c: 231:     LATEbits.LATE7 = 0;
  5295   002342  9E7D               	bcf	125,7,c	;volatile
  5296   002344                     
  5297                           ;color.c: 234:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  5298   002344  0E47               	movlw	low calibration_routine@cal_state
  5299   002346  6E31               	movwf	sprintf@s^0,c
  5300   002348  0E3F               	movlw	low STR_5
  5301   00234A  6E32               	movwf	sprintf@fmt^0,c
  5302   00234C  0EAC               	movlw	low STR_2
  5303   00234E  6E33               	movwf	(?_sprintf+2)^0,c
  5304   002350  5033               	movf	(?_sprintf+2)^0,w,c
  5305   002352  A4D8               	btfss	status,2,c
  5306   002354  0E0E               	movlw	high __smallconst
  5307   002356  6E34               	movwf	(?_sprintf+3)^0,c
  5308   002358  EC5A  F01A         	call	_sprintf	;wreg free
  5309   00235C                     
  5310                           ;color.c: 235:     sendStringSerial4(&cal_state);
  5311   00235C  0E47               	movlw	low calibration_routine@cal_state
  5312   00235E  6E02               	movwf	sendStringSerial4@string^0,c
  5313   002360  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  5314   002364                     l98:
  5315                           
  5316                           ;color.c: 237:     while(PORTFbits.RF2 == 1){
  5317   002364  B48E               	btfsc	142,2,c	;volatile
  5318   002366  EFB7  F011         	goto	u4291
  5319   00236A  EFB9  F011         	goto	u4290
  5320   00236E                     u4291:
  5321   00236E  EFB2  F011         	goto	l98
  5322   002372                     u4290:
  5323   002372                     
  5324                           ;color.c: 241:     LATAbits.LATA3 = 1;
  5325   002372  8679               	bsf	121,3,c	;volatile
  5326   002374                     
  5327                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5328   002374  0E29               	movlw	41
  5329   002376  6E46               	movwf	(??_calibration_routine+1)^0,c
  5330   002378  0E96               	movlw	150
  5331   00237A  6E45               	movwf	??_calibration_routine^0,c
  5332   00237C  0E7F               	movlw	127
  5333   00237E                     u4417:
  5334   00237E  2EE8               	decfsz	wreg,f,c
  5335   002380  D7FE               	bra	u4417
  5336   002382  2E45               	decfsz	??_calibration_routine^0,f,c
  5337   002384  D7FC               	bra	u4417
  5338   002386  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5339   002388  D7FA               	bra	u4417
  5340   00238A  0000               	nop	
  5341   00238C                     
  5342                           ;color.c: 243:     (cCal->blue) = color_read_Blue();
  5343   00238C  EC76  F019         	call	_color_read_Blue	;wreg free
  5344   002390  5044               	movf	calibration_routine@cCal^0,w,c
  5345   002392  6ED9               	movwf	fsr2l,c
  5346   002394  6ADA               	clrf	fsr2h,c
  5347   002396  0E04               	movlw	4
  5348   002398  26D9               	addwf	fsr2l,f,c
  5349   00239A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5350   00239E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5351   0023A2                     
  5352                           ;color.c: 244:     LATAbits.LATA3 = 0;
  5353   0023A2  9679               	bcf	121,3,c	;volatile
  5354   0023A4                     
  5355                           ;color.c: 247:     sprintf(cal_state,"Calibration state =  white light", ".");
  5356   0023A4  0E47               	movlw	low calibration_routine@cal_state
  5357   0023A6  6E31               	movwf	sprintf@s^0,c
  5358   0023A8  0E01               	movlw	low STR_7
  5359   0023AA  6E32               	movwf	sprintf@fmt^0,c
  5360   0023AC  0EAC               	movlw	low STR_2
  5361   0023AE  6E33               	movwf	(?_sprintf+2)^0,c
  5362   0023B0  5033               	movf	(?_sprintf+2)^0,w,c
  5363   0023B2  A4D8               	btfss	status,2,c
  5364   0023B4  0E0E               	movlw	high __smallconst
  5365   0023B6  6E34               	movwf	(?_sprintf+3)^0,c
  5366   0023B8  EC5A  F01A         	call	_sprintf	;wreg free
  5367   0023BC                     
  5368                           ;color.c: 248:     sendStringSerial4(&cal_state);
  5369   0023BC  0E47               	movlw	low calibration_routine@cal_state
  5370   0023BE  6E02               	movwf	sendStringSerial4@string^0,c
  5371   0023C0  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  5372   0023C4                     l101:
  5373                           
  5374                           ;color.c: 250:     while(PORTFbits.RF2 == 1){
  5375   0023C4  B48E               	btfsc	142,2,c	;volatile
  5376   0023C6  EFE7  F011         	goto	u4301
  5377   0023CA  EFE9  F011         	goto	u4300
  5378   0023CE                     u4301:
  5379   0023CE  EFE2  F011         	goto	l101
  5380   0023D2                     u4300:
  5381   0023D2                     
  5382                           ;color.c: 253:     LATGbits.LATG0 = 1;
  5383   0023D2  807F               	bsf	127,0,c	;volatile
  5384                           
  5385                           ;color.c: 254:     LATEbits.LATE7 = 1;
  5386   0023D4  8E7D               	bsf	125,7,c	;volatile
  5387                           
  5388                           ;color.c: 255:     LATAbits.LATA3 = 1;
  5389   0023D6  8679               	bsf	121,3,c	;volatile
  5390   0023D8                     
  5391                           ;color.c: 256:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5392   0023D8  0E29               	movlw	41
  5393   0023DA  6E46               	movwf	(??_calibration_routine+1)^0,c
  5394   0023DC  0E96               	movlw	150
  5395   0023DE  6E45               	movwf	??_calibration_routine^0,c
  5396   0023E0  0E7F               	movlw	127
  5397   0023E2                     u4427:
  5398   0023E2  2EE8               	decfsz	wreg,f,c
  5399   0023E4  D7FE               	bra	u4427
  5400   0023E6  2E45               	decfsz	??_calibration_routine^0,f,c
  5401   0023E8  D7FC               	bra	u4427
  5402   0023EA  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5403   0023EC  D7FA               	bra	u4427
  5404   0023EE  0000               	nop	
  5405   0023F0                     
  5406                           ;color.c: 257:     (cCal->clear) = color_read_Clear();
  5407   0023F0  EC4E  F019         	call	_color_read_Clear	;wreg free
  5408   0023F4  5044               	movf	calibration_routine@cCal^0,w,c
  5409   0023F6  6ED9               	movwf	fsr2l,c
  5410   0023F8  6ADA               	clrf	fsr2h,c
  5411   0023FA  0E06               	movlw	6
  5412   0023FC  26D9               	addwf	fsr2l,f,c
  5413   0023FE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5414   002402  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5415   002406                     
  5416                           ;color.c: 258:     LATGbits.LATG0 = 0;
  5417   002406  907F               	bcf	127,0,c	;volatile
  5418   002408                     
  5419                           ;color.c: 259:     LATEbits.LATE7 = 0;
  5420   002408  9E7D               	bcf	125,7,c	;volatile
  5421   00240A                     
  5422                           ;color.c: 260:     LATAbits.LATA3 = 0;
  5423   00240A  9679               	bcf	121,3,c	;volatile
  5424   00240C                     
  5425                           ;color.c: 263:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  5426   00240C  0E47               	movlw	low calibration_routine@cal_state
  5427   00240E  6E31               	movwf	sprintf@s^0,c
  5428   002410  0E5A               	movlw	low STR_9
  5429   002412  6E32               	movwf	sprintf@fmt^0,c
  5430   002414  0EAC               	movlw	low STR_2
  5431   002416  6E33               	movwf	(?_sprintf+2)^0,c
  5432   002418  5033               	movf	(?_sprintf+2)^0,w,c
  5433   00241A  A4D8               	btfss	status,2,c
  5434   00241C  0E0E               	movlw	high __smallconst
  5435   00241E  6E34               	movwf	(?_sprintf+3)^0,c
  5436   002420  EC5A  F01A         	call	_sprintf	;wreg free
  5437   002424                     
  5438                           ;color.c: 264:     sendStringSerial4(&cal_state);
  5439   002424  0E47               	movlw	low calibration_routine@cal_state
  5440   002426  6E02               	movwf	sendStringSerial4@string^0,c
  5441   002428  EC8E  F01A         	call	_sendStringSerial4	;wreg free
  5442   00242C                     l104:
  5443                           
  5444                           ;color.c: 266:     while(PORTFbits.RF2 == 1){
  5445   00242C  B48E               	btfsc	142,2,c	;volatile
  5446   00242E  EF1B  F012         	goto	u4311
  5447   002432  EF1D  F012         	goto	u4310
  5448   002436                     u4311:
  5449   002436  EF16  F012         	goto	l104
  5450   00243A                     u4310:
  5451   00243A                     
  5452                           ;color.c: 269:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5453   00243A  0E29               	movlw	41
  5454   00243C  6E46               	movwf	(??_calibration_routine+1)^0,c
  5455   00243E  0E96               	movlw	150
  5456   002440  6E45               	movwf	??_calibration_routine^0,c
  5457   002442  0E7F               	movlw	127
  5458   002444                     u4437:
  5459   002444  2EE8               	decfsz	wreg,f,c
  5460   002446  D7FE               	bra	u4437
  5461   002448  2E45               	decfsz	??_calibration_routine^0,f,c
  5462   00244A  D7FC               	bra	u4437
  5463   00244C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5464   00244E  D7FA               	bra	u4437
  5465   002450  0000               	nop	
  5466   002452  0012               	return		;funcret
  5467   002454                     __end_of_calibration_routine:
  5468                           	callstack 0
  5469                           
  5470 ;; *************** function _sprintf *****************
  5471 ;; Defined at:
  5472 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  s               1   48[COMRAM] PTR unsigned char 
  5475 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), 
  5476 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  5477 ;;		 -> STR_12(12), STR_11(21), STR_9(25), STR_7(33), 
  5478 ;;		 -> STR_5(27), STR_3(29), STR_1(24), 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  f              12   55[COMRAM] struct _IO_FILE
  5481 ;;  ret             2    0        int 
  5482 ;;  ap              1   54[COMRAM] PTR void [1]
  5483 ;;		 -> ?_sprintf(2), 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  2   48[COMRAM] int 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5493 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5494 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;Total ram usage:       19 bytes
  5498 ;; Hardware stack levels used: 1
  5499 ;; Hardware stack levels required when called: 7
  5500 ;; This function calls:
  5501 ;;		_vfprintf
  5502 ;; This function is called by:
  5503 ;;		_calibration_routine
  5504 ;;		_send2USART
  5505 ;;		_ADC2String
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text18
  5510   0034B4                     __ptext18:
  5511                           	callstack 0
  5512   0034B4                     _sprintf:
  5513                           	callstack 22
  5514   0034B4  0E33               	movlw	low (?_sprintf+2)
  5515   0034B6  6E37               	movwf	sprintf@ap^0,c
  5516   0034B8  C031  F038         	movff	sprintf@s,sprintf@f
  5517   0034BC  0E00               	movlw	0
  5518   0034BE  6E3C               	movwf	(sprintf@f+4)^0,c
  5519   0034C0  0E00               	movlw	0
  5520   0034C2  6E3B               	movwf	(sprintf@f+3)^0,c
  5521   0034C4  0E00               	movlw	0
  5522   0034C6  6E43               	movwf	(sprintf@f+11)^0,c
  5523   0034C8  0E00               	movlw	0
  5524   0034CA  6E42               	movwf	(sprintf@f+10)^0,c
  5525   0034CC  0E38               	movlw	low sprintf@f
  5526   0034CE  6E2D               	movwf	vfprintf@fp^0,c
  5527   0034D0  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  5528   0034D4  0E37               	movlw	low sprintf@ap
  5529   0034D6  6E2F               	movwf	vfprintf@ap^0,c
  5530   0034D8  ECC1  F019         	call	_vfprintf	;wreg free
  5531   0034DC  5031               	movf	sprintf@s^0,w,c
  5532   0034DE  243B               	addwf	(sprintf@f+3)^0,w,c
  5533   0034E0  6ED9               	movwf	fsr2l,c
  5534   0034E2  6ADA               	clrf	fsr2h,c
  5535   0034E4  6ADF               	clrf	indf2,c
  5536   0034E6  0012               	return		;funcret
  5537   0034E8                     __end_of_sprintf:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _vfprintf *****************
  5541 ;; Defined at:
  5542 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  5545 ;;		 -> sprintf@f(12), 
  5546 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  5547 ;;		 -> STR_12(12), STR_11(21), STR_9(25), STR_7(33), 
  5548 ;;		 -> STR_5(27), STR_3(29), STR_1(24), 
  5549 ;;  ap              1   46[COMRAM] PTR PTR void 
  5550 ;;		 -> sprintf@ap(1), 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  5553 ;;		 -> STR_12(12), STR_11(21), STR_9(25), STR_7(33), 
  5554 ;;		 -> STR_5(27), STR_3(29), STR_1(24), 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  2   44[COMRAM] int 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5564 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;Total ram usage:        4 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 6
  5571 ;; This function calls:
  5572 ;;		_vfpfcnvrt
  5573 ;; This function is called by:
  5574 ;;		_sprintf
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text19
  5579   003382                     __ptext19:
  5580                           	callstack 0
  5581   003382                     _vfprintf:
  5582                           	callstack 22
  5583   003382                     
  5584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5585   003382  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  5586                           
  5587                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5588   003386  EFCD  F019         	goto	l4704
  5589   00338A                     l4702:
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5592   00338A  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  5593   00338E  0E30               	movlw	low vfprintf@cfmt
  5594   003390  6E23               	movwf	vfpfcnvrt@fmt^0,c
  5595   003392  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  5596   003396  EC04  F013         	call	_vfpfcnvrt	;wreg free
  5597   00339A                     l4704:
  5598                           
  5599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5600   00339A  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  5601   00339E                     	if	1	;There is more than 1 active tblptr byte
  5602   00339E  0E0E               	movlw	high __smallconst
  5603   0033A0  6EF7               	movwf	tblptrh,c
  5604   0033A2                     	endif
  5605   0033A2                     	if	0	;tblptru may be non-zero
  5606   0033A2                     	endif
  5607   0033A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5608   0033A2  0E00               	movlw	low (__smallconst shr (0+16))
  5609   0033A4  6EF8               	movwf	tblptru,c
  5610   0033A6                     	endif
  5611   0033A6  0008               	tblrd		*
  5612   0033A8  50F5               	movf	tablat,w,c
  5613   0033AA  0900               	iorlw	0
  5614   0033AC  A4D8               	btfss	status,2,c
  5615   0033AE  EFDB  F019         	goto	u4261
  5616   0033B2  EFDD  F019         	goto	u4260
  5617   0033B6                     u4261:
  5618   0033B6  EFC5  F019         	goto	l4702
  5619   0033BA                     u4260:
  5620   0033BA                     
  5621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5622   0033BA  0E00               	movlw	0
  5623   0033BC  6E2E               	movwf	(?_vfprintf+1)^0,c
  5624   0033BE  0E00               	movlw	0
  5625   0033C0  6E2D               	movwf	?_vfprintf^0,c
  5626   0033C2  0012               	return		;funcret
  5627   0033C4                     __end_of_vfprintf:
  5628                           	callstack 0
  5629                           
  5630 ;; *************** function _vfpfcnvrt *****************
  5631 ;; Defined at:
  5632 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  5635 ;;		 -> sprintf@f(12), 
  5636 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  5637 ;;		 -> vfprintf@cfmt(1), 
  5638 ;;  ap              1   35[COMRAM] PTR PTR void 
  5639 ;;		 -> sprintf@ap(1), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  convarg         4   38[COMRAM] struct .
  5642 ;;  cp              1   43[COMRAM] PTR unsigned char 
  5643 ;;		 -> STR_12(12), STR_11(21), STR_9(25), STR_7(33), 
  5644 ;;		 -> STR_5(27), STR_3(29), STR_1(24), 
  5645 ;;  done            1   42[COMRAM] _Bool 
  5646 ;;  c               1    0        unsigned char 
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5656 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5660 ;;Total ram usage:       11 bytes
  5661 ;; Hardware stack levels used: 1
  5662 ;; Hardware stack levels required when called: 5
  5663 ;; This function calls:
  5664 ;;		_dtoa
  5665 ;;		_fputc
  5666 ;;		_read_prec_or_width
  5667 ;; This function is called by:
  5668 ;;		_vfprintf
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text20
  5673   002608                     __ptext20:
  5674                           	callstack 0
  5675   002608                     _vfpfcnvrt:
  5676                           	callstack 22
  5677   002608                     
  5678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5679   002608  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5680   00260A  6ED9               	movwf	fsr2l,c
  5681   00260C  6ADA               	clrf	fsr2h,c
  5682   00260E  CFDF FFF6          	movff	indf2,tblptrl
  5683   002612                     	if	1	;There is more than 1 active tblptr byte
  5684   002612  0E0E               	movlw	high __smallconst
  5685   002614  6EF7               	movwf	tblptrh,c
  5686   002616                     	endif
  5687   002616                     	if	0	;tblptru may be non-zero
  5688   002616                     	endif
  5689   002616                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5690   002616  0E00               	movlw	low (__smallconst shr (0+16))
  5691   002618  6EF8               	movwf	tblptru,c
  5692   00261A                     	endif
  5693   00261A  0008               	tblrd		*
  5694   00261C  50F5               	movf	tablat,w,c
  5695   00261E  0A25               	xorlw	37
  5696   002620  A4D8               	btfss	status,2,c
  5697   002622  EF15  F013         	goto	u4211
  5698   002626  EF17  F013         	goto	u4210
  5699   00262A                     u4211:
  5700   00262A  EFB3  F013         	goto	l4690
  5701   00262E                     u4210:
  5702   00262E                     
  5703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5704   00262E  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5705   002630  6ED9               	movwf	fsr2l,c
  5706   002632  6ADA               	clrf	fsr2h,c
  5707   002634  2ADF               	incf	indf2,f,c
  5708   002636                     
  5709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5710   002636  0E00               	movlw	0
  5711   002638  0100               	movlb	0	; () banked
  5712   00263A  6FCD               	movwf	(_width+1)& (0+255),b
  5713   00263C  0E00               	movlw	0
  5714   00263E  6FCC               	movwf	_width& (0+255),b
  5715   002640  C0CC  F05B         	movff	_width,_flags
  5716   002644                     
  5717                           ; BSR set to: 0
  5718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5719   002644  69CE               	setf	_prec& (0+255),b
  5720   002646  69CF               	setf	(_prec+1)& (0+255),b
  5721   002648                     
  5722                           ; BSR set to: 0
  5723                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5724   002648  0E00               	movlw	0
  5725   00264A  6E2B               	movwf	vfpfcnvrt@done^0,c
  5726                           
  5727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5728   00264C  EF4E  F013         	goto	l4664
  5729   002650                     l4654:
  5730                           
  5731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5732   002650  825B               	bsf	_flags^0,1,c
  5733   002652                     
  5734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5735   002652  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5736   002654  6ED9               	movwf	fsr2l,c
  5737   002656  6ADA               	clrf	fsr2h,c
  5738   002658  2ADF               	incf	indf2,f,c
  5739                           
  5740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5741   00265A  EF4E  F013         	goto	l4664
  5742   00265E                     l4658:
  5743                           
  5744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5745   00265E  0E01               	movlw	1
  5746   002660  6E2B               	movwf	vfpfcnvrt@done^0,c
  5747                           
  5748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5749   002662  EF4E  F013         	goto	l4664
  5750   002666                     l4662:
  5751   002666  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5752   002668  6ED9               	movwf	fsr2l,c
  5753   00266A  6ADA               	clrf	fsr2h,c
  5754   00266C  CFDF FFF6          	movff	indf2,tblptrl
  5755   002670                     	if	1	;There is more than 1 active tblptr byte
  5756   002670  0E0E               	movlw	high __smallconst
  5757   002672  6EF7               	movwf	tblptrh,c
  5758   002674                     	endif
  5759   002674                     	if	0	;tblptru may be non-zero
  5760   002674                     	endif
  5761   002674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5762   002674  0E00               	movlw	low (__smallconst shr (0+16))
  5763   002676  6EF8               	movwf	tblptru,c
  5764   002678                     	endif
  5765   002678  0008               	tblrd		*
  5766   00267A  50F5               	movf	tablat,w,c
  5767   00267C  6E25               	movwf	??_vfpfcnvrt^0,c
  5768   00267E  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  5769                           
  5770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5771                           ; Switch size 1, requested type "simple"
  5772                           ; Number of cases is 1, Range of values is 0 to 0
  5773                           ; switch strategies available:
  5774                           ; Name         Instructions Cycles
  5775                           ; simple_byte            4     3 (average)
  5776                           ;	Chosen strategy is simple_byte
  5777   002680  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  5778   002682  0A00               	xorlw	0	; case 0
  5779   002684  B4D8               	btfsc	status,2,c
  5780   002686  EF47  F013         	goto	l4896
  5781   00268A  EF2F  F013         	goto	l4658
  5782   00268E                     l4896:
  5783                           
  5784                           ; Switch size 1, requested type "simple"
  5785                           ; Number of cases is 1, Range of values is 48 to 48
  5786                           ; switch strategies available:
  5787                           ; Name         Instructions Cycles
  5788                           ; simple_byte            4     3 (average)
  5789                           ;	Chosen strategy is simple_byte
  5790   00268E  5025               	movf	??_vfpfcnvrt^0,w,c
  5791   002690  0A30               	xorlw	48	; case 48
  5792   002692  B4D8               	btfsc	status,2,c
  5793   002694  EF28  F013         	goto	l4654
  5794   002698  EF2F  F013         	goto	l4658
  5795   00269C                     l4664:
  5796                           
  5797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5798   00269C  502B               	movf	vfpfcnvrt@done^0,w,c
  5799   00269E  B4D8               	btfsc	status,2,c
  5800   0026A0  EF54  F013         	goto	u4221
  5801   0026A4  EF56  F013         	goto	u4220
  5802   0026A8                     u4221:
  5803   0026A8  EF33  F013         	goto	l4662
  5804   0026AC                     u4220:
  5805   0026AC                     
  5806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5807   0026AC  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5808   0026B0  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5809   0026B4  EC6C  F017         	call	_read_prec_or_width	;wreg free
  5810   0026B8  C007  F0CC         	movff	?_read_prec_or_width,_width
  5811   0026BC  C008  F0CD         	movff	?_read_prec_or_width+1,_width+1
  5812   0026C0                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5814   0026C0  0100               	movlb	0	; () banked
  5815   0026C2  BFCD               	btfsc	(_width+1)& (0+255),7,b
  5816   0026C4  EF68  F013         	goto	u4230
  5817   0026C8  EF66  F013         	goto	u4231
  5818   0026CC                     u4231:
  5819   0026CC  EF6D  F013         	goto	l4672
  5820   0026D0                     u4230:
  5821   0026D0                     
  5822                           ; BSR set to: 0
  5823                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5824   0026D0  805B               	bsf	_flags^0,0,c
  5825                           
  5826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5827   0026D2  6DCC               	negf	_width& (0+255),b
  5828   0026D4  1FCD               	comf	(_width+1)& (0+255),f,b
  5829   0026D6  B0D8               	btfsc	status,0,c
  5830   0026D8  2BCD               	incf	(_width+1)& (0+255),f,b
  5831   0026DA                     l4672:
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5835   0026DA  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5836   0026DC  6ED9               	movwf	fsr2l,c
  5837   0026DE  6ADA               	clrf	fsr2h,c
  5838   0026E0  50DF               	movf	indf2,w,c
  5839   0026E2  6E2C               	movwf	vfpfcnvrt@cp^0,c
  5840   0026E4                     
  5841                           ; BSR set to: 0
  5842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5843   0026E4  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5844   0026E8                     	if	1	;There is more than 1 active tblptr byte
  5845   0026E8  0E0E               	movlw	high __smallconst
  5846   0026EA  6EF7               	movwf	tblptrh,c
  5847   0026EC                     	endif
  5848   0026EC                     	if	0	;tblptru may be non-zero
  5849   0026EC                     	endif
  5850   0026EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5851   0026EC  0E00               	movlw	low (__smallconst shr (0+16))
  5852   0026EE  6EF8               	movwf	tblptru,c
  5853   0026F0                     	endif
  5854   0026F0  0008               	tblrd		*
  5855   0026F2  50F5               	movf	tablat,w,c
  5856   0026F4  0A64               	xorlw	100
  5857   0026F6  B4D8               	btfsc	status,2,c
  5858   0026F8  EF80  F013         	goto	u4241
  5859   0026FC  EF82  F013         	goto	u4240
  5860   002700                     u4241:
  5861   002700  EF92  F013         	goto	l4678
  5862   002704                     u4240:
  5863   002704                     
  5864                           ; BSR set to: 0
  5865   002704  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5866   002708                     	if	1	;There is more than 1 active tblptr byte
  5867   002708  0E0E               	movlw	high __smallconst
  5868   00270A  6EF7               	movwf	tblptrh,c
  5869   00270C                     	endif
  5870   00270C                     	if	0	;tblptru may be non-zero
  5871   00270C                     	endif
  5872   00270C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5873   00270C  0E00               	movlw	low (__smallconst shr (0+16))
  5874   00270E  6EF8               	movwf	tblptru,c
  5875   002710                     	endif
  5876   002710  0008               	tblrd		*
  5877   002712  50F5               	movf	tablat,w,c
  5878   002714  0A69               	xorlw	105
  5879   002716  A4D8               	btfss	status,2,c
  5880   002718  EF90  F013         	goto	u4251
  5881   00271C  EF92  F013         	goto	u4250
  5882   002720                     u4251:
  5883   002720  EFAD  F013         	goto	l4686
  5884   002724                     u4250:
  5885   002724                     l4678:
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5889   002724  5024               	movf	vfpfcnvrt@ap^0,w,c
  5890   002726  6ED9               	movwf	fsr2l,c
  5891   002728  6ADA               	clrf	fsr2h,c
  5892   00272A  0E02               	movlw	2
  5893   00272C  26DF               	addwf	indf2,f,c
  5894   00272E  5CDF               	subwf	indf2,w,c
  5895   002730  6ED9               	movwf	fsr2l,c
  5896   002732  6ADA               	clrf	fsr2h,c
  5897   002734  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  5898   002738  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  5899   00273C                     
  5900                           ; BSR set to: 0
  5901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5902   00273C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5903   00273E  6ED9               	movwf	fsr2l,c
  5904   002740  6ADA               	clrf	fsr2h,c
  5905   002742  282C               	incf	vfpfcnvrt@cp^0,w,c
  5906   002744  6EDF               	movwf	indf2,c
  5907   002746                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5910   002746  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  5911   00274A  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  5912   00274E  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5913   002752  ECC7  F013         	call	_dtoa	;wreg free
  5914   002756  EFC6  F013         	goto	l1300
  5915   00275A                     l4686:
  5916                           
  5917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  5918   00275A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5919   00275C  6ED9               	movwf	fsr2l,c
  5920   00275E  6ADA               	clrf	fsr2h,c
  5921   002760  2ADF               	incf	indf2,f,c
  5922   002762  EFC6  F013         	goto	l1300
  5923   002766                     l4690:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  5926   002766  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5927   002768  6ED9               	movwf	fsr2l,c
  5928   00276A  6ADA               	clrf	fsr2h,c
  5929   00276C  CFDF FFF6          	movff	indf2,tblptrl
  5930   002770                     	if	1	;There is more than 1 active tblptr byte
  5931   002770  0E0E               	movlw	high __smallconst
  5932   002772  6EF7               	movwf	tblptrh,c
  5933   002774                     	endif
  5934   002774                     	if	0	;tblptru may be non-zero
  5935   002774                     	endif
  5936   002774                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5937   002774  0E00               	movlw	low (__smallconst shr (0+16))
  5938   002776  6EF8               	movwf	tblptru,c
  5939   002778                     	endif
  5940   002778  0008               	tblrd		*
  5941   00277A  50F5               	movf	tablat,w,c
  5942   00277C  6E01               	movwf	fputc@c^0,c
  5943   00277E  6A02               	clrf	(fputc@c+1)^0,c
  5944   002780  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5945   002784  EC18  F018         	call	_fputc	;wreg free
  5946   002788  EFAD  F013         	goto	l4686
  5947   00278C                     l1300:
  5948   00278C  0012               	return		;funcret
  5949   00278E                     __end_of_vfpfcnvrt:
  5950                           	callstack 0
  5951                           
  5952 ;; *************** function _read_prec_or_width *****************
  5953 ;; Defined at:
  5954 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  5957 ;;		 -> vfprintf@cfmt(1), 
  5958 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  5959 ;;		 -> sprintf@ap(1), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  c               1    8[COMRAM] unsigned char 
  5962 ;;  n               2    9[COMRAM] int 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2    6[COMRAM] int 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5976 ;;Total ram usage:        5 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 1
  5979 ;; This function calls:
  5980 ;;		___wmul
  5981 ;; This function is called by:
  5982 ;;		_vfpfcnvrt
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text21
  5987   002ED8                     __ptext21:
  5988                           	callstack 0
  5989   002ED8                     _read_prec_or_width:
  5990                           	callstack 25
  5991   002ED8                     
  5992                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  5993   002ED8  0E00               	movlw	0
  5994   002EDA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  5995   002EDC  0E00               	movlw	0
  5996   002EDE  6E0A               	movwf	read_prec_or_width@n^0,c
  5997   002EE0                     
  5998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  5999   002EE0  5007               	movf	read_prec_or_width@fmt^0,w,c
  6000   002EE2  6ED9               	movwf	fsr2l,c
  6001   002EE4  6ADA               	clrf	fsr2h,c
  6002   002EE6  CFDF FFF6          	movff	indf2,tblptrl
  6003   002EEA                     	if	1	;There is more than 1 active tblptr byte
  6004   002EEA  0E0E               	movlw	high __smallconst
  6005   002EEC  6EF7               	movwf	tblptrh,c
  6006   002EEE                     	endif
  6007   002EEE                     	if	0	;tblptru may be non-zero
  6008   002EEE                     	endif
  6009   002EEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6010   002EEE  0E00               	movlw	low (__smallconst shr (0+16))
  6011   002EF0  6EF8               	movwf	tblptru,c
  6012   002EF2                     	endif
  6013   002EF2  0008               	tblrd		*
  6014   002EF4  50F5               	movf	tablat,w,c
  6015   002EF6  0A2A               	xorlw	42
  6016   002EF8  A4D8               	btfss	status,2,c
  6017   002EFA  EF81  F017         	goto	u2351
  6018   002EFE  EF83  F017         	goto	u2350
  6019   002F02                     u2351:
  6020   002F02  EFA9  F017         	goto	l3140
  6021   002F06                     u2350:
  6022   002F06                     
  6023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6024   002F06  5007               	movf	read_prec_or_width@fmt^0,w,c
  6025   002F08  6ED9               	movwf	fsr2l,c
  6026   002F0A  6ADA               	clrf	fsr2h,c
  6027   002F0C  2ADF               	incf	indf2,f,c
  6028   002F0E                     
  6029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6030   002F0E  5008               	movf	read_prec_or_width@ap^0,w,c
  6031   002F10  6ED9               	movwf	fsr2l,c
  6032   002F12  6ADA               	clrf	fsr2h,c
  6033   002F14  0E02               	movlw	2
  6034   002F16  26DF               	addwf	indf2,f,c
  6035   002F18  5CDF               	subwf	indf2,w,c
  6036   002F1A  6ED9               	movwf	fsr2l,c
  6037   002F1C  6ADA               	clrf	fsr2h,c
  6038   002F1E  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6039   002F22  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6040                           
  6041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6042   002F26  EFBE  F017         	goto	l1281
  6043   002F2A                     l3136:
  6044                           
  6045                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6046   002F2A  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  6047   002F2E  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6048   002F32  0E00               	movlw	0
  6049   002F34  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6050   002F36  0E0A               	movlw	10
  6051   002F38  6E03               	movwf	___wmul@multiplicand^0,c
  6052   002F3A  ECD0  F01A         	call	___wmul	;wreg free
  6053   002F3E  5009               	movf	read_prec_or_width@c^0,w,c
  6054   002F40  2401               	addwf	?___wmul^0,w,c
  6055   002F42  6E0A               	movwf	read_prec_or_width@n^0,c
  6056   002F44  0E00               	movlw	0
  6057   002F46  2002               	addwfc	(?___wmul+1)^0,w,c
  6058   002F48  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6059   002F4A                     
  6060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6061   002F4A  5007               	movf	read_prec_or_width@fmt^0,w,c
  6062   002F4C  6ED9               	movwf	fsr2l,c
  6063   002F4E  6ADA               	clrf	fsr2h,c
  6064   002F50  2ADF               	incf	indf2,f,c
  6065   002F52                     l3140:
  6066                           
  6067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6068   002F52  5007               	movf	read_prec_or_width@fmt^0,w,c
  6069   002F54  6ED9               	movwf	fsr2l,c
  6070   002F56  6ADA               	clrf	fsr2h,c
  6071   002F58  CFDF FFF6          	movff	indf2,tblptrl
  6072   002F5C                     	if	1	;There is more than 1 active tblptr byte
  6073   002F5C  0E0E               	movlw	high __smallconst
  6074   002F5E  6EF7               	movwf	tblptrh,c
  6075   002F60                     	endif
  6076   002F60                     	if	0	;tblptru may be non-zero
  6077   002F60                     	endif
  6078   002F60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6079   002F60  0E00               	movlw	low (__smallconst shr (0+16))
  6080   002F62  6EF8               	movwf	tblptru,c
  6081   002F64                     	endif
  6082   002F64  0008               	tblrd		*
  6083   002F66  50F5               	movf	tablat,w,c
  6084   002F68  0FD0               	addlw	208
  6085   002F6A  6E09               	movwf	read_prec_or_width@c^0,c
  6086   002F6C  0E09               	movlw	9
  6087   002F6E  6409               	cpfsgt	read_prec_or_width@c^0,c
  6088   002F70  EFBC  F017         	goto	u2361
  6089   002F74  EFBE  F017         	goto	u2360
  6090   002F78                     u2361:
  6091   002F78  EF95  F017         	goto	l3136
  6092   002F7C                     u2360:
  6093   002F7C                     l1281:
  6094                           
  6095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6096   002F7C  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  6097   002F80  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6098   002F84  0012               	return		;funcret
  6099   002F86                     __end_of_read_prec_or_width:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function ___wmul *****************
  6103 ;; Defined at:
  6104 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  multiplier      2    0[COMRAM] unsigned int 
  6107 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  product         2    4[COMRAM] unsigned int 
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  2    0[COMRAM] unsigned int 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0, prodl, prodh
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;Total ram usage:        6 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_read_prec_or_width
  6129 ;;		_setMotorPWM
  6130 ;;		_ADC2String
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           	psect	text22
  6135   0035A0                     __ptext22:
  6136                           	callstack 0
  6137   0035A0                     ___wmul:
  6138                           	callstack 25
  6139   0035A0  5001               	movf	___wmul@multiplier^0,w,c
  6140   0035A2  0203               	mulwf	___wmul@multiplicand^0,c
  6141   0035A4  CFF3 F005          	movff	prodl,___wmul@product
  6142   0035A8  CFF4 F006          	movff	prodh,___wmul@product+1
  6143   0035AC  5001               	movf	___wmul@multiplier^0,w,c
  6144   0035AE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6145   0035B0  50F3               	movf	243,w,c
  6146   0035B2  2606               	addwf	(___wmul@product+1)^0,f,c
  6147   0035B4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6148   0035B6  0203               	mulwf	___wmul@multiplicand^0,c
  6149   0035B8  50F3               	movf	243,w,c
  6150   0035BA  2606               	addwf	(___wmul@product+1)^0,f,c
  6151   0035BC  C005  F001         	movff	___wmul@product,?___wmul
  6152   0035C0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6153   0035C4  0012               	return		;funcret
  6154   0035C6                     __end_of___wmul:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _dtoa *****************
  6158 ;; Defined at:
  6159 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6162 ;;		 -> sprintf@f(12), 
  6163 ;;  d               2   23[COMRAM] int 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  i               2   31[COMRAM] int 
  6166 ;;  w               2   28[COMRAM] int 
  6167 ;;  s               1   30[COMRAM] unsigned char 
  6168 ;;  p               1   27[COMRAM] _Bool 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6178 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;Total ram usage:       11 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 4
  6185 ;; This function calls:
  6186 ;;		___awdiv
  6187 ;;		___awmod
  6188 ;;		_abs
  6189 ;;		_pad
  6190 ;; This function is called by:
  6191 ;;		_vfpfcnvrt
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text23
  6196   00278E                     __ptext23:
  6197                           	callstack 0
  6198   00278E                     _dtoa:
  6199                           	callstack 22
  6200   00278E                     
  6201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6202   00278E  0E01               	movlw	1
  6203   002790  6E1C               	movwf	dtoa@p^0,c
  6204   002792                     
  6205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6206   002792  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6207   002794  EFCE  F013         	goto	u4111
  6208   002798  EFD1  F013         	goto	u4110
  6209   00279C                     u4111:
  6210   00279C  0E01               	movlw	1
  6211   00279E  EFD2  F013         	goto	u4120
  6212   0027A2                     u4110:
  6213   0027A2  0E00               	movlw	0
  6214   0027A4                     u4120:
  6215   0027A4  6E1F               	movwf	dtoa@s^0,c
  6216   0027A6                     
  6217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6218   0027A6  C0CC  F01D         	movff	_width,dtoa@w
  6219   0027AA  C0CD  F01E         	movff	_width+1,dtoa@w+1
  6220   0027AE                     
  6221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6222   0027AE  501F               	movf	dtoa@s^0,w,c
  6223   0027B0  B4D8               	btfsc	status,2,c
  6224   0027B2  EFDD  F013         	goto	u4131
  6225   0027B6  EFDF  F013         	goto	u4130
  6226   0027BA                     u4131:
  6227   0027BA  EFF6  F013         	goto	l1264
  6228   0027BE                     u4130:
  6229   0027BE                     
  6230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6231   0027BE  061D               	decf	dtoa@w^0,f,c
  6232   0027C0  A0D8               	btfss	status,0,c
  6233   0027C2  061E               	decf	(dtoa@w+1)^0,f,c
  6234   0027C4                     
  6235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6236   0027C4  501F               	movf	dtoa@s^0,w,c
  6237   0027C6  A4D8               	btfss	status,2,c
  6238   0027C8  EFE8  F013         	goto	u4141
  6239   0027CC  EFEA  F013         	goto	u4140
  6240   0027D0                     u4141:
  6241   0027D0  EFF0  F013         	goto	l4608
  6242   0027D4                     u4140:
  6243   0027D4  0E00               	movlw	0
  6244   0027D6  6E1B               	movwf	(_dtoa$2648+1)^0,c
  6245   0027D8  0E2B               	movlw	43
  6246   0027DA  6E1A               	movwf	_dtoa$2648^0,c
  6247   0027DC  EFF4  F013         	goto	l4610
  6248   0027E0                     l4608:
  6249   0027E0  0E00               	movlw	0
  6250   0027E2  6E1B               	movwf	(_dtoa$2648+1)^0,c
  6251   0027E4  0E2D               	movlw	45
  6252   0027E6  6E1A               	movwf	_dtoa$2648^0,c
  6253   0027E8                     l4610:
  6254   0027E8  C01A  F01F         	movff	_dtoa$2648,dtoa@s
  6255   0027EC                     l1264:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6258   0027EC  0E00               	movlw	0
  6259   0027EE  6E21               	movwf	(dtoa@i+1)^0,c
  6260   0027F0  0E1F               	movlw	31
  6261   0027F2  6E20               	movwf	dtoa@i^0,c
  6262   0027F4                     
  6263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6264   0027F4  0E00               	movlw	0
  6265   0027F6  0101               	movlb	1	; () banked
  6266   0027F8  6F6F               	movwf	(_dbuf+31)& (0+255),b
  6267                           
  6268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6269   0027FA  EF2E  F014         	goto	l4624
  6270   0027FE                     l4614:
  6271                           
  6272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6273   0027FE  0620               	decf	dtoa@i^0,f,c
  6274   002800  A0D8               	btfss	status,0,c
  6275   002802  0621               	decf	(dtoa@i+1)^0,f,c
  6276   002804                     
  6277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6278   002804  0E50               	movlw	low _dbuf
  6279   002806  2420               	addwf	dtoa@i^0,w,c
  6280   002808  6ED9               	movwf	fsr2l,c
  6281   00280A  0E01               	movlw	high _dbuf
  6282   00280C  2021               	addwfc	(dtoa@i+1)^0,w,c
  6283   00280E  6EDA               	movwf	fsr2h,c
  6284   002810  C018  F001         	movff	dtoa@d,___awmod@dividend
  6285   002814  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6286   002818  0E00               	movlw	0
  6287   00281A  6E04               	movwf	(___awmod@divisor+1)^0,c
  6288   00281C  0E0A               	movlw	10
  6289   00281E  6E03               	movwf	___awmod@divisor^0,c
  6290   002820  EC14  F017         	call	___awmod	;wreg free
  6291   002824  C001  F007         	movff	?___awmod,abs@a
  6292   002828  C002  F008         	movff	?___awmod+1,abs@a+1
  6293   00282C  EC74  F01A         	call	_abs	;wreg free
  6294   002830  5007               	movf	?_abs^0,w,c
  6295   002832  0F30               	addlw	48
  6296   002834  6EDF               	movwf	indf2,c
  6297   002836                     
  6298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6299   002836  0E00               	movlw	0
  6300   002838  6E1C               	movwf	dtoa@p^0,c
  6301   00283A                     
  6302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6303   00283A  061D               	decf	dtoa@w^0,f,c
  6304   00283C  A0D8               	btfss	status,0,c
  6305   00283E  061E               	decf	(dtoa@w+1)^0,f,c
  6306   002840                     
  6307                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6308   002840  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6309   002844  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6310   002848  0E00               	movlw	0
  6311   00284A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6312   00284C  0E0A               	movlw	10
  6313   00284E  6E03               	movwf	___awdiv@divisor^0,c
  6314   002850  ECB2  F016         	call	___awdiv	;wreg free
  6315   002854  C001  F018         	movff	?___awdiv,dtoa@d
  6316   002858  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6317   00285C                     l4624:
  6318                           
  6319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6320   00285C  BE21               	btfsc	(dtoa@i+1)^0,7,c
  6321   00285E  EF39  F014         	goto	u4151
  6322   002862  5021               	movf	(dtoa@i+1)^0,w,c
  6323   002864  E108               	bnz	u4150
  6324   002866  0420               	decf	dtoa@i^0,w,c
  6325   002868  A0D8               	btfss	status,0,c
  6326   00286A  EF39  F014         	goto	u4151
  6327   00286E  EF3B  F014         	goto	u4150
  6328   002872                     u4151:
  6329   002872  EF60  F014         	goto	l4634
  6330   002876                     u4150:
  6331   002876  5018               	movf	dtoa@d^0,w,c
  6332   002878  1019               	iorwf	(dtoa@d+1)^0,w,c
  6333   00287A  A4D8               	btfss	status,2,c
  6334   00287C  EF42  F014         	goto	u4161
  6335   002880  EF44  F014         	goto	u4160
  6336   002884                     u4161:
  6337   002884  EFFF  F013         	goto	l4614
  6338   002888                     u4160:
  6339   002888  501C               	movf	dtoa@p^0,w,c
  6340   00288A  A4D8               	btfss	status,2,c
  6341   00288C  EF4A  F014         	goto	u4171
  6342   002890  EF4C  F014         	goto	u4170
  6343   002894                     u4171:
  6344   002894  EFFF  F013         	goto	l4614
  6345   002898                     u4170:
  6346   002898  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  6347   00289A  EF57  F014         	goto	u4181
  6348   00289E  501E               	movf	(dtoa@w+1)^0,w,c
  6349   0028A0  E108               	bnz	u4180
  6350   0028A2  041D               	decf	dtoa@w^0,w,c
  6351   0028A4  A0D8               	btfss	status,0,c
  6352   0028A6  EF57  F014         	goto	u4181
  6353   0028AA  EF59  F014         	goto	u4180
  6354   0028AE                     u4181:
  6355   0028AE  EF60  F014         	goto	l4634
  6356   0028B2                     u4180:
  6357   0028B2  B25B               	btfsc	_flags^0,1,c
  6358   0028B4  EF5E  F014         	goto	u4191
  6359   0028B8  EF60  F014         	goto	u4190
  6360   0028BC                     u4191:
  6361   0028BC  EFFF  F013         	goto	l4614
  6362   0028C0                     u4190:
  6363   0028C0                     l4634:
  6364                           
  6365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6366   0028C0  501F               	movf	dtoa@s^0,w,c
  6367   0028C2  B4D8               	btfsc	status,2,c
  6368   0028C4  EF66  F014         	goto	u4201
  6369   0028C8  EF68  F014         	goto	u4200
  6370   0028CC                     u4201:
  6371   0028CC  EF73  F014         	goto	l4640
  6372   0028D0                     u4200:
  6373   0028D0                     
  6374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6375   0028D0  0620               	decf	dtoa@i^0,f,c
  6376   0028D2  A0D8               	btfss	status,0,c
  6377   0028D4  0621               	decf	(dtoa@i+1)^0,f,c
  6378   0028D6                     
  6379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6380   0028D6  0E50               	movlw	low _dbuf
  6381   0028D8  2420               	addwf	dtoa@i^0,w,c
  6382   0028DA  6ED9               	movwf	fsr2l,c
  6383   0028DC  0E01               	movlw	high _dbuf
  6384   0028DE  2021               	addwfc	(dtoa@i+1)^0,w,c
  6385   0028E0  6EDA               	movwf	fsr2h,c
  6386   0028E2  C01F  FFDF         	movff	dtoa@s,indf2
  6387   0028E6                     l4640:
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6390   0028E6  C017  F00F         	movff	dtoa@fp,pad@fp
  6391   0028EA  0E50               	movlw	low _dbuf
  6392   0028EC  2420               	addwf	dtoa@i^0,w,c
  6393   0028EE  6E10               	movwf	pad@buf^0,c
  6394   0028F0  0E01               	movlw	high _dbuf
  6395   0028F2  2021               	addwfc	(dtoa@i+1)^0,w,c
  6396   0028F4  6E11               	movwf	(pad@buf+1)^0,c
  6397   0028F6  C01D  F012         	movff	dtoa@w,pad@p
  6398   0028FA  C01E  F013         	movff	dtoa@w+1,pad@p+1
  6399   0028FE  EC6D  F018         	call	_pad	;wreg free
  6400   002902  0012               	return		;funcret
  6401   002904                     __end_of_dtoa:
  6402                           	callstack 0
  6403                           
  6404 ;; *************** function _pad *****************
  6405 ;; Defined at:
  6406 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6409 ;;		 -> sprintf@f(12), 
  6410 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6411 ;;		 -> dbuf(32), 
  6412 ;;  p               2   17[COMRAM] int 
  6413 ;; Auto vars:     Size  Location     Type
  6414 ;;  i               2   20[COMRAM] int 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  1    wreg      void 
  6417 ;; Registers used:
  6418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 0/0
  6421 ;;		On exit  : 0/0
  6422 ;;		Unchanged: 0/0
  6423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6424 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6425 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6428 ;;Total ram usage:        8 bytes
  6429 ;; Hardware stack levels used: 1
  6430 ;; Hardware stack levels required when called: 3
  6431 ;; This function calls:
  6432 ;;		_fputc
  6433 ;;		_fputs
  6434 ;; This function is called by:
  6435 ;;		_dtoa
  6436 ;; This function uses a non-reentrant model
  6437 ;;
  6438                           
  6439                           	psect	text24
  6440   0030DA                     __ptext24:
  6441                           	callstack 0
  6442   0030DA                     _pad:
  6443                           	callstack 22
  6444   0030DA                     
  6445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6446   0030DA  A05B               	btfss	_flags^0,0,c
  6447   0030DC  EF72  F018         	goto	u4071
  6448   0030E0  EF74  F018         	goto	u4070
  6449   0030E4                     u4071:
  6450   0030E4  EF7C  F018         	goto	l4582
  6451   0030E8                     u4070:
  6452   0030E8                     
  6453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6454   0030E8  C010  F009         	movff	pad@buf,fputs@s
  6455   0030EC  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6456   0030F0  C00F  F00B         	movff	pad@fp,fputs@fp
  6457   0030F4  EC03  F01A         	call	_fputs	;wreg free
  6458   0030F8                     l4582:
  6459                           
  6460                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6461   0030F8  BE13               	btfsc	(pad@p+1)^0,7,c
  6462   0030FA  EF83  F018         	goto	u4080
  6463   0030FE  EF81  F018         	goto	u4081
  6464   003102                     u4081:
  6465   003102  EF87  F018         	goto	l1256
  6466   003106                     u4080:
  6467   003106                     
  6468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6469   003106  0E00               	movlw	0
  6470   003108  6E13               	movwf	(pad@p+1)^0,c
  6471   00310A  0E00               	movlw	0
  6472   00310C  6E12               	movwf	pad@p^0,c
  6473   00310E                     l1256:
  6474                           
  6475                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6476   00310E  0E00               	movlw	0
  6477   003110  6E16               	movwf	(pad@i+1)^0,c
  6478   003112  0E00               	movlw	0
  6479   003114  6E15               	movwf	pad@i^0,c
  6480                           
  6481                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6482   003116  EF97  F018         	goto	l4590
  6483   00311A                     l4586:
  6484                           
  6485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6486   00311A  0E00               	movlw	0
  6487   00311C  6E02               	movwf	(fputc@c+1)^0,c
  6488   00311E  0E20               	movlw	32
  6489   003120  6E01               	movwf	fputc@c^0,c
  6490   003122  C00F  F003         	movff	pad@fp,fputc@fp
  6491   003126  EC18  F018         	call	_fputc	;wreg free
  6492   00312A                     
  6493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6494   00312A  4A15               	infsnz	pad@i^0,f,c
  6495   00312C  2A16               	incf	(pad@i+1)^0,f,c
  6496   00312E                     l4590:
  6497                           
  6498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6499   00312E  5012               	movf	pad@p^0,w,c
  6500   003130  5C15               	subwf	pad@i^0,w,c
  6501   003132  5016               	movf	(pad@i+1)^0,w,c
  6502   003134  0A80               	xorlw	128
  6503   003136  6E14               	movwf	??_pad^0,c
  6504   003138  5013               	movf	(pad@p+1)^0,w,c
  6505   00313A  0A80               	xorlw	128
  6506   00313C  5814               	subwfb	??_pad^0,w,c
  6507   00313E  A0D8               	btfss	status,0,c
  6508   003140  EFA4  F018         	goto	u4091
  6509   003144  EFA6  F018         	goto	u4090
  6510   003148                     u4091:
  6511   003148  EF8D  F018         	goto	l4586
  6512   00314C                     u4090:
  6513   00314C                     
  6514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6515   00314C  B05B               	btfsc	_flags^0,0,c
  6516   00314E  EFAB  F018         	goto	u4101
  6517   003152  EFAD  F018         	goto	u4100
  6518   003156                     u4101:
  6519   003156  EFB5  F018         	goto	l1261
  6520   00315A                     u4100:
  6521   00315A                     
  6522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6523   00315A  C010  F009         	movff	pad@buf,fputs@s
  6524   00315E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6525   003162  C00F  F00B         	movff	pad@fp,fputs@fp
  6526   003166  EC03  F01A         	call	_fputs	;wreg free
  6527   00316A                     l1261:
  6528   00316A  0012               	return		;funcret
  6529   00316C                     __end_of_pad:
  6530                           	callstack 0
  6531                           
  6532 ;; *************** function _fputs *****************
  6533 ;; Defined at:
  6534 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6537 ;;		 -> dbuf(32), 
  6538 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6539 ;;		 -> sprintf@f(12), 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  i               2   12[COMRAM] int 
  6542 ;;  c               1   11[COMRAM] unsigned char 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2    8[COMRAM] int 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;Total ram usage:        6 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 2
  6559 ;; This function calls:
  6560 ;;		_fputc
  6561 ;; This function is called by:
  6562 ;;		_pad
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text25
  6567   003406                     __ptext25:
  6568                           	callstack 0
  6569   003406                     _fputs:
  6570                           	callstack 22
  6571   003406  0E00               	movlw	0
  6572   003408  6E0E               	movwf	(fputs@i+1)^0,c
  6573   00340A  0E00               	movlw	0
  6574   00340C  6E0D               	movwf	fputs@i^0,c
  6575   00340E  EF12  F01A         	goto	l4576
  6576   003412                     l4572:
  6577   003412  C00C  F001         	movff	fputs@c,fputc@c
  6578   003416  6A02               	clrf	(fputc@c+1)^0,c
  6579   003418  C00B  F003         	movff	fputs@fp,fputc@fp
  6580   00341C  EC18  F018         	call	_fputc	;wreg free
  6581   003420  4A0D               	infsnz	fputs@i^0,f,c
  6582   003422  2A0E               	incf	(fputs@i+1)^0,f,c
  6583   003424                     l4576:
  6584   003424  500D               	movf	fputs@i^0,w,c
  6585   003426  2409               	addwf	fputs@s^0,w,c
  6586   003428  6ED9               	movwf	fsr2l,c
  6587   00342A  500E               	movf	(fputs@i+1)^0,w,c
  6588   00342C  200A               	addwfc	(fputs@s+1)^0,w,c
  6589   00342E  6EDA               	movwf	fsr2h,c
  6590   003430  50DF               	movf	indf2,w,c
  6591   003432  6E0C               	movwf	fputs@c^0,c
  6592   003434  500C               	movf	fputs@c^0,w,c
  6593   003436  A4D8               	btfss	status,2,c
  6594   003438  EF20  F01A         	goto	u4061
  6595   00343C  EF22  F01A         	goto	u4060
  6596   003440                     u4061:
  6597   003440  EF09  F01A         	goto	l4572
  6598   003444                     u4060:
  6599   003444  0012               	return		;funcret
  6600   003446                     __end_of_fputs:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _fputc *****************
  6604 ;; Defined at:
  6605 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  c               2    0[COMRAM] int 
  6608 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6609 ;;		 -> sprintf@f(12), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  2    0[COMRAM] int 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6621 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;Total ram usage:        8 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 1
  6628 ;; This function calls:
  6629 ;;		_putch
  6630 ;; This function is called by:
  6631 ;;		_pad
  6632 ;;		_vfpfcnvrt
  6633 ;;		_fputs
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text26
  6638   003030                     __ptext26:
  6639                           	callstack 0
  6640   003030                     _fputc:
  6641                           	callstack 25
  6642   003030  5003               	movf	fputc@fp^0,w,c
  6643   003032  B4D8               	btfsc	status,2,c
  6644   003034  EF1E  F018         	goto	u2031
  6645   003038  EF20  F018         	goto	u2030
  6646   00303C                     u2031:
  6647   00303C  EF28  F018         	goto	l2954
  6648   003040                     u2030:
  6649   003040  5003               	movf	fputc@fp^0,w,c
  6650   003042  A4D8               	btfss	status,2,c
  6651   003044  EF26  F018         	goto	u2041
  6652   003048  EF28  F018         	goto	u2040
  6653   00304C                     u2041:
  6654   00304C  EF2D  F018         	goto	l2956
  6655   003050                     u2040:
  6656   003050                     l2954:
  6657   003050  5001               	movf	fputc@c^0,w,c
  6658   003052  EC3F  F01B         	call	_putch
  6659   003056  EF6C  F018         	goto	l1325
  6660   00305A                     l2956:
  6661   00305A  5003               	movf	fputc@fp^0,w,c
  6662   00305C  6ED9               	movwf	fsr2l,c
  6663   00305E  6ADA               	clrf	fsr2h,c
  6664   003060  0E0A               	movlw	10
  6665   003062  26D9               	addwf	fsr2l,f,c
  6666   003064  50DE               	movf	postinc2,w,c
  6667   003066  10DE               	iorwf	postinc2,w,c
  6668   003068  B4D8               	btfsc	status,2,c
  6669   00306A  EF39  F018         	goto	u2051
  6670   00306E  EF3B  F018         	goto	u2050
  6671   003072                     u2051:
  6672   003072  EF54  F018         	goto	l2960
  6673   003076                     u2050:
  6674   003076  5003               	movf	fputc@fp^0,w,c
  6675   003078  6ED9               	movwf	fsr2l,c
  6676   00307A  6ADA               	clrf	fsr2h,c
  6677   00307C  0E0A               	movlw	10
  6678   00307E  26D9               	addwf	fsr2l,f,c
  6679   003080  5003               	movf	fputc@fp^0,w,c
  6680   003082  6EE1               	movwf	fsr1l,c
  6681   003084  6AE2               	clrf	fsr1h,c
  6682   003086  0E03               	movlw	3
  6683   003088  26E1               	addwf	fsr1l,f,c
  6684   00308A  50DE               	movf	postinc2,w,c
  6685   00308C  5CE6               	subwf	postinc1,w,c
  6686   00308E  50E6               	movf	postinc1,w,c
  6687   003090  0A80               	xorlw	128
  6688   003092  6E08               	movwf	(??_fputc+4)^0,c
  6689   003094  50DE               	movf	postinc2,w,c
  6690   003096  0A80               	xorlw	128
  6691   003098  5808               	subwfb	(??_fputc+4)^0,w,c
  6692   00309A  B0D8               	btfsc	status,0,c
  6693   00309C  EF52  F018         	goto	u2061
  6694   0030A0  EF54  F018         	goto	u2060
  6695   0030A4                     u2061:
  6696   0030A4  EF6C  F018         	goto	l1325
  6697   0030A8                     u2060:
  6698   0030A8                     l2960:
  6699   0030A8  5003               	movf	fputc@fp^0,w,c
  6700   0030AA  6ED9               	movwf	fsr2l,c
  6701   0030AC  6ADA               	clrf	fsr2h,c
  6702   0030AE  0E03               	movlw	3
  6703   0030B0  26D9               	addwf	fsr2l,f,c
  6704   0030B2  50DF               	movf	indf2,w,c
  6705   0030B4  6E04               	movwf	??_fputc^0,c
  6706   0030B6  5003               	movf	fputc@fp^0,w,c
  6707   0030B8  6ED9               	movwf	fsr2l,c
  6708   0030BA  6ADA               	clrf	fsr2h,c
  6709   0030BC  50DF               	movf	indf2,w,c
  6710   0030BE  2404               	addwf	??_fputc^0,w,c
  6711   0030C0  6ED9               	movwf	fsr2l,c
  6712   0030C2  6ADA               	clrf	fsr2h,c
  6713   0030C4  C001  FFDF         	movff	fputc@c,indf2
  6714   0030C8  5003               	movf	fputc@fp^0,w,c
  6715   0030CA  6ED9               	movwf	fsr2l,c
  6716   0030CC  6ADA               	clrf	fsr2h,c
  6717   0030CE  0E03               	movlw	3
  6718   0030D0  26D9               	addwf	fsr2l,f,c
  6719   0030D2  2ADE               	incf	postinc2,f,c
  6720   0030D4  0E00               	movlw	0
  6721   0030D6  22DD               	addwfc	postdec2,f,c
  6722   0030D8                     l1325:
  6723   0030D8  0012               	return		;funcret
  6724   0030DA                     __end_of_fputc:
  6725                           	callstack 0
  6726                           
  6727 ;; *************** function _putch *****************
  6728 ;; Defined at:
  6729 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6730 ;; Parameters:    Size  Location     Type
  6731 ;;  c               1    wreg     unsigned char 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;  c               1    0[COMRAM] unsigned char 
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;Total ram usage:        0 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; This function calls:
  6750 ;;		Nothing
  6751 ;; This function is called by:
  6752 ;;		_fputc
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text27
  6757   00367E                     __ptext27:
  6758                           	callstack 0
  6759   00367E                     _putch:
  6760                           	callstack 25
  6761   00367E  0012               	return		;funcret
  6762   003680                     __end_of_putch:
  6763                           	callstack 0
  6764                           
  6765 ;; *************** function _abs *****************
  6766 ;; Defined at:
  6767 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  a               2    6[COMRAM] int 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    6[COMRAM] int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; This function calls:
  6788 ;;		Nothing
  6789 ;; This function is called by:
  6790 ;;		_dtoa
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text28
  6795   0034E8                     __ptext28:
  6796                           	callstack 0
  6797   0034E8                     _abs:
  6798                           	callstack 25
  6799   0034E8  BE08               	btfsc	(abs@a+1)^0,7,c
  6800   0034EA  EF79  F01A         	goto	u2241
  6801   0034EE  EF7B  F01A         	goto	u2240
  6802   0034F2                     u2241:
  6803   0034F2  EF81  F01A         	goto	l1310
  6804   0034F6                     u2240:
  6805   0034F6  C007  F007         	movff	abs@a,?_abs
  6806   0034FA  C008  F008         	movff	abs@a+1,?_abs+1
  6807   0034FE  EF8D  F01A         	goto	l1313
  6808   003502                     l1310:
  6809   003502  C007  F009         	movff	abs@a,??_abs
  6810   003506  C008  F00A         	movff	abs@a+1,??_abs+1
  6811   00350A  1E09               	comf	??_abs^0,f,c
  6812   00350C  1E0A               	comf	(??_abs+1)^0,f,c
  6813   00350E  4A09               	infsnz	??_abs^0,f,c
  6814   003510  2A0A               	incf	(??_abs+1)^0,f,c
  6815   003512  C009  F007         	movff	??_abs,?_abs
  6816   003516  C00A  F008         	movff	??_abs+1,?_abs+1
  6817   00351A                     l1313:
  6818   00351A  0012               	return		;funcret
  6819   00351C                     __end_of_abs:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function ___awmod *****************
  6823 ;; Defined at:
  6824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  dividend        2    0[COMRAM] int 
  6827 ;;  divisor         2    2[COMRAM] int 
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  sign            1    5[COMRAM] unsigned char 
  6830 ;;  counter         1    4[COMRAM] unsigned char 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  2    0[COMRAM] int 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6844 ;;Total ram usage:        6 bytes
  6845 ;; Hardware stack levels used: 1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_dtoa
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text29
  6854   002E28                     __ptext29:
  6855                           	callstack 0
  6856   002E28                     ___awmod:
  6857                           	callstack 25
  6858   002E28  0E00               	movlw	0
  6859   002E2A  6E06               	movwf	___awmod@sign^0,c
  6860   002E2C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6861   002E2E  EF1D  F017         	goto	u2140
  6862   002E32  EF1B  F017         	goto	u2141
  6863   002E36                     u2141:
  6864   002E36  EF23  F017         	goto	l3030
  6865   002E3A                     u2140:
  6866   002E3A  6C01               	negf	___awmod@dividend^0,c
  6867   002E3C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6868   002E3E  B0D8               	btfsc	status,0,c
  6869   002E40  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6870   002E42  0E01               	movlw	1
  6871   002E44  6E06               	movwf	___awmod@sign^0,c
  6872   002E46                     l3030:
  6873   002E46  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6874   002E48  EF2A  F017         	goto	u2150
  6875   002E4C  EF28  F017         	goto	u2151
  6876   002E50                     u2151:
  6877   002E50  EF2E  F017         	goto	l3034
  6878   002E54                     u2150:
  6879   002E54  6C03               	negf	___awmod@divisor^0,c
  6880   002E56  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6881   002E58  B0D8               	btfsc	status,0,c
  6882   002E5A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6883   002E5C                     l3034:
  6884   002E5C  5003               	movf	___awmod@divisor^0,w,c
  6885   002E5E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6886   002E60  B4D8               	btfsc	status,2,c
  6887   002E62  EF35  F017         	goto	u2161
  6888   002E66  EF37  F017         	goto	u2160
  6889   002E6A                     u2161:
  6890   002E6A  EF5B  F017         	goto	l3050
  6891   002E6E                     u2160:
  6892   002E6E  0E01               	movlw	1
  6893   002E70  6E05               	movwf	___awmod@counter^0,c
  6894   002E72  EF3F  F017         	goto	l3040
  6895   002E76                     l3038:
  6896   002E76  90D8               	bcf	status,0,c
  6897   002E78  3603               	rlcf	___awmod@divisor^0,f,c
  6898   002E7A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6899   002E7C  2A05               	incf	___awmod@counter^0,f,c
  6900   002E7E                     l3040:
  6901   002E7E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6902   002E80  EF44  F017         	goto	u2171
  6903   002E84  EF46  F017         	goto	u2170
  6904   002E88                     u2171:
  6905   002E88  EF3B  F017         	goto	l3038
  6906   002E8C                     u2170:
  6907   002E8C                     l3042:
  6908   002E8C  5003               	movf	___awmod@divisor^0,w,c
  6909   002E8E  5C01               	subwf	___awmod@dividend^0,w,c
  6910   002E90  5004               	movf	(___awmod@divisor+1)^0,w,c
  6911   002E92  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6912   002E94  A0D8               	btfss	status,0,c
  6913   002E96  EF4F  F017         	goto	u2181
  6914   002E9A  EF51  F017         	goto	u2180
  6915   002E9E                     u2181:
  6916   002E9E  EF55  F017         	goto	l3046
  6917   002EA2                     u2180:
  6918   002EA2  5003               	movf	___awmod@divisor^0,w,c
  6919   002EA4  5E01               	subwf	___awmod@dividend^0,f,c
  6920   002EA6  5004               	movf	(___awmod@divisor+1)^0,w,c
  6921   002EA8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6922   002EAA                     l3046:
  6923   002EAA  90D8               	bcf	status,0,c
  6924   002EAC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6925   002EAE  3203               	rrcf	___awmod@divisor^0,f,c
  6926   002EB0  2E05               	decfsz	___awmod@counter^0,f,c
  6927   002EB2  EF46  F017         	goto	l3042
  6928   002EB6                     l3050:
  6929   002EB6  5006               	movf	___awmod@sign^0,w,c
  6930   002EB8  B4D8               	btfsc	status,2,c
  6931   002EBA  EF61  F017         	goto	u2191
  6932   002EBE  EF63  F017         	goto	u2190
  6933   002EC2                     u2191:
  6934   002EC2  EF67  F017         	goto	l3054
  6935   002EC6                     u2190:
  6936   002EC6  6C01               	negf	___awmod@dividend^0,c
  6937   002EC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6938   002ECA  B0D8               	btfsc	status,0,c
  6939   002ECC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6940   002ECE                     l3054:
  6941   002ECE  C001  F001         	movff	___awmod@dividend,?___awmod
  6942   002ED2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6943   002ED6  0012               	return		;funcret
  6944   002ED8                     __end_of___awmod:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function ___awdiv *****************
  6948 ;; Defined at:
  6949 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  dividend        2    0[COMRAM] int 
  6952 ;;  divisor         2    2[COMRAM] int 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  quotient        2    6[COMRAM] int 
  6955 ;;  sign            1    5[COMRAM] unsigned char 
  6956 ;;  counter         1    4[COMRAM] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2    0[COMRAM] int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;Total ram usage:        8 bytes
  6971 ;; Hardware stack levels used: 1
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_dtoa
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text30
  6980   002D64                     __ptext30:
  6981                           	callstack 0
  6982   002D64                     ___awdiv:
  6983                           	callstack 25
  6984   002D64  0E00               	movlw	0
  6985   002D66  6E06               	movwf	___awdiv@sign^0,c
  6986   002D68  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6987   002D6A  EFBB  F016         	goto	u2080
  6988   002D6E  EFB9  F016         	goto	u2081
  6989   002D72                     u2081:
  6990   002D72  EFC1  F016         	goto	l2986
  6991   002D76                     u2080:
  6992   002D76  6C03               	negf	___awdiv@divisor^0,c
  6993   002D78  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6994   002D7A  B0D8               	btfsc	status,0,c
  6995   002D7C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6996   002D7E  0E01               	movlw	1
  6997   002D80  6E06               	movwf	___awdiv@sign^0,c
  6998   002D82                     l2986:
  6999   002D82  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7000   002D84  EFC8  F016         	goto	u2090
  7001   002D88  EFC6  F016         	goto	u2091
  7002   002D8C                     u2091:
  7003   002D8C  EFCE  F016         	goto	l2992
  7004   002D90                     u2090:
  7005   002D90  6C01               	negf	___awdiv@dividend^0,c
  7006   002D92  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7007   002D94  B0D8               	btfsc	status,0,c
  7008   002D96  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7009   002D98  0E01               	movlw	1
  7010   002D9A  1A06               	xorwf	___awdiv@sign^0,f,c
  7011   002D9C                     l2992:
  7012   002D9C  0E00               	movlw	0
  7013   002D9E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7014   002DA0  0E00               	movlw	0
  7015   002DA2  6E07               	movwf	___awdiv@quotient^0,c
  7016   002DA4  5003               	movf	___awdiv@divisor^0,w,c
  7017   002DA6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7018   002DA8  B4D8               	btfsc	status,2,c
  7019   002DAA  EFD9  F016         	goto	u2101
  7020   002DAE  EFDB  F016         	goto	u2100
  7021   002DB2                     u2101:
  7022   002DB2  EF03  F017         	goto	l3014
  7023   002DB6                     u2100:
  7024   002DB6  0E01               	movlw	1
  7025   002DB8  6E05               	movwf	___awdiv@counter^0,c
  7026   002DBA  EFE3  F016         	goto	l3000
  7027   002DBE                     l2998:
  7028   002DBE  90D8               	bcf	status,0,c
  7029   002DC0  3603               	rlcf	___awdiv@divisor^0,f,c
  7030   002DC2  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7031   002DC4  2A05               	incf	___awdiv@counter^0,f,c
  7032   002DC6                     l3000:
  7033   002DC6  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7034   002DC8  EFE8  F016         	goto	u2111
  7035   002DCC  EFEA  F016         	goto	u2110
  7036   002DD0                     u2111:
  7037   002DD0  EFDF  F016         	goto	l2998
  7038   002DD4                     u2110:
  7039   002DD4                     l3002:
  7040   002DD4  90D8               	bcf	status,0,c
  7041   002DD6  3607               	rlcf	___awdiv@quotient^0,f,c
  7042   002DD8  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7043   002DDA  5003               	movf	___awdiv@divisor^0,w,c
  7044   002DDC  5C01               	subwf	___awdiv@dividend^0,w,c
  7045   002DDE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7046   002DE0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7047   002DE2  A0D8               	btfss	status,0,c
  7048   002DE4  EFF6  F016         	goto	u2121
  7049   002DE8  EFF8  F016         	goto	u2120
  7050   002DEC                     u2121:
  7051   002DEC  EFFD  F016         	goto	l3010
  7052   002DF0                     u2120:
  7053   002DF0  5003               	movf	___awdiv@divisor^0,w,c
  7054   002DF2  5E01               	subwf	___awdiv@dividend^0,f,c
  7055   002DF4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7056   002DF6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7057   002DF8  8007               	bsf	___awdiv@quotient^0,0,c
  7058   002DFA                     l3010:
  7059   002DFA  90D8               	bcf	status,0,c
  7060   002DFC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7061   002DFE  3203               	rrcf	___awdiv@divisor^0,f,c
  7062   002E00  2E05               	decfsz	___awdiv@counter^0,f,c
  7063   002E02  EFEA  F016         	goto	l3002
  7064   002E06                     l3014:
  7065   002E06  5006               	movf	___awdiv@sign^0,w,c
  7066   002E08  B4D8               	btfsc	status,2,c
  7067   002E0A  EF09  F017         	goto	u2131
  7068   002E0E  EF0B  F017         	goto	u2130
  7069   002E12                     u2131:
  7070   002E12  EF0F  F017         	goto	l3018
  7071   002E16                     u2130:
  7072   002E16  6C07               	negf	___awdiv@quotient^0,c
  7073   002E18  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7074   002E1A  B0D8               	btfsc	status,0,c
  7075   002E1C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7076   002E1E                     l3018:
  7077   002E1E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7078   002E22  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7079   002E26  0012               	return		;funcret
  7080   002E28                     __end_of___awdiv:
  7081                           	callstack 0
  7082                           
  7083 ;; *************** function _sendStringSerial4 *****************
  7084 ;; Defined at:
  7085 ;;		line 41 in file "serial.c"
  7086 ;; Parameters:    Size  Location     Type
  7087 ;;  string          1    1[COMRAM] PTR unsigned char 
  7088 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), 
  7089 ;; Auto vars:     Size  Location     Type
  7090 ;;		None
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;Total ram usage:        1 bytes
  7105 ;; Hardware stack levels used: 1
  7106 ;; Hardware stack levels required when called: 1
  7107 ;; This function calls:
  7108 ;;		_sendCharSerial4
  7109 ;; This function is called by:
  7110 ;;		_calibration_routine
  7111 ;;		_send2USART
  7112 ;;		_sendAllReadings
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text31
  7117   00351C                     __ptext31:
  7118                           	callstack 0
  7119   00351C                     _sendStringSerial4:
  7120                           	callstack 28
  7121   00351C                     
  7122                           ;serial.c: 44:     while(*string != 0){
  7123   00351C  EF9B  F01A         	goto	l3992
  7124   003520                     l3986:
  7125                           
  7126                           ;serial.c: 46:   sendCharSerial4(*string++);
  7127   003520  5002               	movf	sendStringSerial4@string^0,w,c
  7128   003522  6ED9               	movwf	fsr2l,c
  7129   003524  6ADA               	clrf	fsr2h,c
  7130   003526  50DF               	movf	indf2,w,c
  7131   003528  EC1E  F01B         	call	_sendCharSerial4
  7132   00352C  2A02               	incf	sendStringSerial4@string^0,f,c
  7133   00352E                     
  7134                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  7135   00352E  0E6A               	movlw	106
  7136   003530                     u4447:
  7137   003530  2EE8               	decfsz	wreg,f,c
  7138   003532  D7FE               	bra	u4447
  7139   003534  D000               	nop2	
  7140   003536                     l3992:
  7141                           
  7142                           ;serial.c: 44:     while(*string != 0){
  7143   003536  5002               	movf	sendStringSerial4@string^0,w,c
  7144   003538  6ED9               	movwf	fsr2l,c
  7145   00353A  6ADA               	clrf	fsr2h,c
  7146   00353C  50DF               	movf	indf2,w,c
  7147   00353E  A4D8               	btfss	status,2,c
  7148   003540  EFA4  F01A         	goto	u3671
  7149   003544  EFA6  F01A         	goto	u3670
  7150   003548                     u3671:
  7151   003548  EF90  F01A         	goto	l3986
  7152   00354C                     u3670:
  7153   00354C  0012               	return		;funcret
  7154   00354E                     __end_of_sendStringSerial4:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function _sendCharSerial4 *****************
  7158 ;; Defined at:
  7159 ;;		line 35 in file "serial.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  charToSend      1    wreg     unsigned char 
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;  charToSend      1    0[COMRAM] unsigned char 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;Total ram usage:        1 bytes
  7178 ;; Hardware stack levels used: 1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_sendStringSerial4
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text32
  7187   00363C                     __ptext32:
  7188                           	callstack 0
  7189   00363C                     _sendCharSerial4:
  7190                           	callstack 28
  7191                           
  7192                           ;incstack = 0
  7193                           ;sendCharSerial4@charToSend stored from wreg
  7194   00363C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7195   00363E                     l501:
  7196   00363E  010E               	movlb	14	; () banked
  7197   003640  A537               	btfss	55,2,b	;volatile
  7198   003642  EF25  F01B         	goto	u2871
  7199   003646  EF27  F01B         	goto	u2870
  7200   00364A                     u2871:
  7201   00364A  EF1F  F01B         	goto	l501
  7202   00364E                     u2870:
  7203   00364E                     
  7204                           ; BSR set to: 14
  7205                           ;serial.c: 37:     TX4REG = charToSend;
  7206   00364E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7207   003652                     
  7208                           ; BSR set to: 14
  7209   003652  0012               	return		;funcret
  7210   003654                     __end_of_sendCharSerial4:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _color_read_Red *****************
  7214 ;; Defined at:
  7215 ;;		line 32 in file "color.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;		None
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  tmp             2    9[COMRAM] unsigned int 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  2    4[COMRAM] unsigned int 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;Total ram usage:        7 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 2
  7236 ;; This function calls:
  7237 ;;		_I2C_2_Master_Read
  7238 ;;		_I2C_2_Master_RepStart
  7239 ;;		_I2C_2_Master_Start
  7240 ;;		_I2C_2_Master_Stop
  7241 ;;		_I2C_2_Master_Write
  7242 ;; This function is called by:
  7243 ;;		_reading_hue
  7244 ;;		_calibration_routine
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text33
  7249   0031FC                     __ptext33:
  7250                           	callstack 0
  7251   0031FC                     _color_read_Red:
  7252                           	callstack 27
  7253   0031FC                     
  7254                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7255   0031FC  EC35  F01B         	call	_I2C_2_Master_Start	;wreg free
  7256                           
  7257                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7258   003200  0E52               	movlw	82
  7259   003202  EC2A  F01B         	call	_I2C_2_Master_Write
  7260                           
  7261                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7262   003206  0EB6               	movlw	182
  7263   003208  EC2A  F01B         	call	_I2C_2_Master_Write
  7264                           
  7265                           ;color.c: 38:  I2C_2_Master_RepStart();
  7266   00320C  EC3A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7267                           
  7268                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7269   003210  0E53               	movlw	83
  7270   003212  EC2A  F01B         	call	_I2C_2_Master_Write
  7271                           
  7272                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7273   003216  0E01               	movlw	1
  7274   003218  ECE2  F019         	call	_I2C_2_Master_Read
  7275   00321C  6E07               	movwf	??_color_read_Red^0,c
  7276   00321E  5007               	movf	??_color_read_Red^0,w,c
  7277   003220  6E0A               	movwf	color_read_Red@tmp^0,c
  7278   003222  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7279                           
  7280                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7281   003224  0E00               	movlw	0
  7282   003226  ECE2  F019         	call	_I2C_2_Master_Read
  7283   00322A  6E07               	movwf	??_color_read_Red^0,c
  7284   00322C  5007               	movf	??_color_read_Red^0,w,c
  7285   00322E  6E09               	movwf	(??_color_read_Red+2)^0,c
  7286   003230  6A08               	clrf	(??_color_read_Red+1)^0,c
  7287   003232  500A               	movf	color_read_Red@tmp^0,w,c
  7288   003234  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7289   003236  6E0A               	movwf	color_read_Red@tmp^0,c
  7290   003238  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7291   00323A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7292   00323C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7293                           
  7294                           ;color.c: 42:  I2C_2_Master_Stop();
  7295   00323E  EC30  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7296   003242                     
  7297                           ;color.c: 43:  return tmp;
  7298   003242  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7299   003246  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7300   00324A  0012               	return		;funcret
  7301   00324C                     __end_of_color_read_Red:
  7302                           	callstack 0
  7303                           
  7304 ;; *************** function _color_read_Green *****************
  7305 ;; Defined at:
  7306 ;;		line 46 in file "color.c"
  7307 ;; Parameters:    Size  Location     Type
  7308 ;;		None
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  tmp             2    9[COMRAM] unsigned int 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    4[COMRAM] unsigned int 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, cstack
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;Total ram usage:        7 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 2
  7327 ;; This function calls:
  7328 ;;		_I2C_2_Master_Read
  7329 ;;		_I2C_2_Master_RepStart
  7330 ;;		_I2C_2_Master_Start
  7331 ;;		_I2C_2_Master_Stop
  7332 ;;		_I2C_2_Master_Write
  7333 ;; This function is called by:
  7334 ;;		_reading_hue
  7335 ;;		_calibration_routine
  7336 ;; This function uses a non-reentrant model
  7337 ;;
  7338                           
  7339                           	psect	text34
  7340   00324C                     __ptext34:
  7341                           	callstack 0
  7342   00324C                     _color_read_Green:
  7343                           	callstack 27
  7344   00324C                     
  7345                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7346   00324C  EC35  F01B         	call	_I2C_2_Master_Start	;wreg free
  7347                           
  7348                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7349   003250  0E52               	movlw	82
  7350   003252  EC2A  F01B         	call	_I2C_2_Master_Write
  7351                           
  7352                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7353   003256  0EB8               	movlw	184
  7354   003258  EC2A  F01B         	call	_I2C_2_Master_Write
  7355                           
  7356                           ;color.c: 52:  I2C_2_Master_RepStart();
  7357   00325C  EC3A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7358                           
  7359                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7360   003260  0E53               	movlw	83
  7361   003262  EC2A  F01B         	call	_I2C_2_Master_Write
  7362                           
  7363                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7364   003266  0E01               	movlw	1
  7365   003268  ECE2  F019         	call	_I2C_2_Master_Read
  7366   00326C  6E07               	movwf	??_color_read_Green^0,c
  7367   00326E  5007               	movf	??_color_read_Green^0,w,c
  7368   003270  6E0A               	movwf	color_read_Green@tmp^0,c
  7369   003272  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7370                           
  7371                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7372   003274  0E00               	movlw	0
  7373   003276  ECE2  F019         	call	_I2C_2_Master_Read
  7374   00327A  6E07               	movwf	??_color_read_Green^0,c
  7375   00327C  5007               	movf	??_color_read_Green^0,w,c
  7376   00327E  6E09               	movwf	(??_color_read_Green+2)^0,c
  7377   003280  6A08               	clrf	(??_color_read_Green+1)^0,c
  7378   003282  500A               	movf	color_read_Green@tmp^0,w,c
  7379   003284  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7380   003286  6E0A               	movwf	color_read_Green@tmp^0,c
  7381   003288  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7382   00328A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7383   00328C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7384                           
  7385                           ;color.c: 56:  I2C_2_Master_Stop();
  7386   00328E  EC30  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7387   003292                     
  7388                           ;color.c: 57:  return tmp;
  7389   003292  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7390   003296  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7391   00329A  0012               	return		;funcret
  7392   00329C                     __end_of_color_read_Green:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _color_read_Clear *****************
  7396 ;; Defined at:
  7397 ;;		line 75 in file "color.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;		None
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  tmp             2    9[COMRAM] unsigned int 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  2    4[COMRAM] unsigned int 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0, cstack
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;Total ram usage:        7 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; Hardware stack levels required when called: 2
  7418 ;; This function calls:
  7419 ;;		_I2C_2_Master_Read
  7420 ;;		_I2C_2_Master_RepStart
  7421 ;;		_I2C_2_Master_Start
  7422 ;;		_I2C_2_Master_Stop
  7423 ;;		_I2C_2_Master_Write
  7424 ;; This function is called by:
  7425 ;;		_reading_hue
  7426 ;;		_calibration_routine
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text35
  7431   00329C                     __ptext35:
  7432                           	callstack 0
  7433   00329C                     _color_read_Clear:
  7434                           	callstack 27
  7435   00329C                     
  7436                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  7437   00329C  EC35  F01B         	call	_I2C_2_Master_Start	;wreg free
  7438                           
  7439                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  7440   0032A0  0E52               	movlw	82
  7441   0032A2  EC2A  F01B         	call	_I2C_2_Master_Write
  7442                           
  7443                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  7444   0032A6  0EB4               	movlw	180
  7445   0032A8  EC2A  F01B         	call	_I2C_2_Master_Write
  7446                           
  7447                           ;color.c: 81:  I2C_2_Master_RepStart();
  7448   0032AC  EC3A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7449                           
  7450                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  7451   0032B0  0E53               	movlw	83
  7452   0032B2  EC2A  F01B         	call	_I2C_2_Master_Write
  7453                           
  7454                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  7455   0032B6  0E01               	movlw	1
  7456   0032B8  ECE2  F019         	call	_I2C_2_Master_Read
  7457   0032BC  6E07               	movwf	??_color_read_Clear^0,c
  7458   0032BE  5007               	movf	??_color_read_Clear^0,w,c
  7459   0032C0  6E0A               	movwf	color_read_Clear@tmp^0,c
  7460   0032C2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7461                           
  7462                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7463   0032C4  0E00               	movlw	0
  7464   0032C6  ECE2  F019         	call	_I2C_2_Master_Read
  7465   0032CA  6E07               	movwf	??_color_read_Clear^0,c
  7466   0032CC  5007               	movf	??_color_read_Clear^0,w,c
  7467   0032CE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7468   0032D0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7469   0032D2  500A               	movf	color_read_Clear@tmp^0,w,c
  7470   0032D4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7471   0032D6  6E0A               	movwf	color_read_Clear@tmp^0,c
  7472   0032D8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7473   0032DA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7474   0032DC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7475                           
  7476                           ;color.c: 85:  I2C_2_Master_Stop();
  7477   0032DE  EC30  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7478   0032E2                     
  7479                           ;color.c: 86:  return tmp;
  7480   0032E2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7481   0032E6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7482   0032EA  0012               	return		;funcret
  7483   0032EC                     __end_of_color_read_Clear:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _color_read_Blue *****************
  7487 ;; Defined at:
  7488 ;;		line 60 in file "color.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;		None
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  tmp             2    9[COMRAM] unsigned int 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  2    4[COMRAM] unsigned int 
  7495 ;; Registers used:
  7496 ;;		wreg, status,2, status,0, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7505 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7506 ;;Total ram usage:        7 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 2
  7509 ;; This function calls:
  7510 ;;		_I2C_2_Master_Read
  7511 ;;		_I2C_2_Master_RepStart
  7512 ;;		_I2C_2_Master_Start
  7513 ;;		_I2C_2_Master_Stop
  7514 ;;		_I2C_2_Master_Write
  7515 ;; This function is called by:
  7516 ;;		_reading_hue
  7517 ;;		_calibration_routine
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text36
  7522   0032EC                     __ptext36:
  7523                           	callstack 0
  7524   0032EC                     _color_read_Blue:
  7525                           	callstack 27
  7526   0032EC                     
  7527                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7528   0032EC  EC35  F01B         	call	_I2C_2_Master_Start	;wreg free
  7529                           
  7530                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7531   0032F0  0E52               	movlw	82
  7532   0032F2  EC2A  F01B         	call	_I2C_2_Master_Write
  7533                           
  7534                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7535   0032F6  0EBA               	movlw	186
  7536   0032F8  EC2A  F01B         	call	_I2C_2_Master_Write
  7537                           
  7538                           ;color.c: 66:  I2C_2_Master_RepStart();
  7539   0032FC  EC3A  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7540                           
  7541                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7542   003300  0E53               	movlw	83
  7543   003302  EC2A  F01B         	call	_I2C_2_Master_Write
  7544                           
  7545                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7546   003306  0E01               	movlw	1
  7547   003308  ECE2  F019         	call	_I2C_2_Master_Read
  7548   00330C  6E07               	movwf	??_color_read_Blue^0,c
  7549   00330E  5007               	movf	??_color_read_Blue^0,w,c
  7550   003310  6E0A               	movwf	color_read_Blue@tmp^0,c
  7551   003312  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7552                           
  7553                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7554   003314  0E00               	movlw	0
  7555   003316  ECE2  F019         	call	_I2C_2_Master_Read
  7556   00331A  6E07               	movwf	??_color_read_Blue^0,c
  7557   00331C  5007               	movf	??_color_read_Blue^0,w,c
  7558   00331E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7559   003320  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7560   003322  500A               	movf	color_read_Blue@tmp^0,w,c
  7561   003324  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7562   003326  6E0A               	movwf	color_read_Blue@tmp^0,c
  7563   003328  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7564   00332A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7565   00332C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7566                           
  7567                           ;color.c: 70:  I2C_2_Master_Stop();
  7568   00332E  EC30  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7569   003332                     
  7570                           ;color.c: 71:  return tmp;
  7571   003332  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7572   003336  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7573   00333A  0012               	return		;funcret
  7574   00333C                     __end_of_color_read_Blue:
  7575                           	callstack 0
  7576                           
  7577 ;; *************** function _I2C_2_Master_Write *****************
  7578 ;; Defined at:
  7579 ;;		line 45 in file "i2c.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  data_byte       1    wreg     unsigned char 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  data_byte       1    1[COMRAM] unsigned char 
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		wreg, status,2, status,0, cstack
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7597 ;;Total ram usage:        1 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 1
  7600 ;; This function calls:
  7601 ;;		_I2C_2_Master_Idle
  7602 ;; This function is called by:
  7603 ;;		_color_writetoaddr
  7604 ;;		_color_read_Red
  7605 ;;		_color_read_Green
  7606 ;;		_color_read_Blue
  7607 ;;		_color_read_Clear
  7608 ;; This function uses a non-reentrant model
  7609 ;;
  7610                           
  7611                           	psect	text37
  7612   003654                     __ptext37:
  7613                           	callstack 0
  7614   003654                     _I2C_2_Master_Write:
  7615                           	callstack 27
  7616                           
  7617                           ;incstack = 0
  7618                           ;I2C_2_Master_Write@data_byte stored from wreg
  7619   003654  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7620   003656                     
  7621                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7622   003656  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7623   00365A                     
  7624                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7625   00365A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7626   00365E  0012               	return		;funcret
  7627   003660                     __end_of_I2C_2_Master_Write:
  7628                           	callstack 0
  7629                           
  7630 ;; *************** function _I2C_2_Master_Stop *****************
  7631 ;; Defined at:
  7632 ;;		line 39 in file "i2c.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used: 1
  7652 ;; Hardware stack levels required when called: 1
  7653 ;; This function calls:
  7654 ;;		_I2C_2_Master_Idle
  7655 ;; This function is called by:
  7656 ;;		_color_writetoaddr
  7657 ;;		_color_read_Red
  7658 ;;		_color_read_Green
  7659 ;;		_color_read_Blue
  7660 ;;		_color_read_Clear
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           	psect	text38
  7665   003660                     __ptext38:
  7666                           	callstack 0
  7667   003660                     _I2C_2_Master_Stop:
  7668                           	callstack 27
  7669   003660                     
  7670                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7671   003660  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7672   003664                     
  7673                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7674   003664  010E               	movlb	14	; () banked
  7675   003666  85DA               	bsf	218,2,b	;volatile
  7676   003668                     
  7677                           ; BSR set to: 14
  7678   003668  0012               	return		;funcret
  7679   00366A                     __end_of_I2C_2_Master_Stop:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _I2C_2_Master_Start *****************
  7683 ;; Defined at:
  7684 ;;		line 27 in file "i2c.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7702 ;;Total ram usage:        0 bytes
  7703 ;; Hardware stack levels used: 1
  7704 ;; Hardware stack levels required when called: 1
  7705 ;; This function calls:
  7706 ;;		_I2C_2_Master_Idle
  7707 ;; This function is called by:
  7708 ;;		_color_writetoaddr
  7709 ;;		_color_read_Red
  7710 ;;		_color_read_Green
  7711 ;;		_color_read_Blue
  7712 ;;		_color_read_Clear
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text39
  7717   00366A                     __ptext39:
  7718                           	callstack 0
  7719   00366A                     _I2C_2_Master_Start:
  7720                           	callstack 27
  7721   00366A                     
  7722                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7723   00366A  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7724   00366E                     
  7725                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7726   00366E  010E               	movlb	14	; () banked
  7727   003670  81DA               	bsf	218,0,b	;volatile
  7728   003672                     
  7729                           ; BSR set to: 14
  7730   003672  0012               	return		;funcret
  7731   003674                     __end_of_I2C_2_Master_Start:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _I2C_2_Master_RepStart *****************
  7735 ;; Defined at:
  7736 ;;		line 33 in file "i2c.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;		None
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      void 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0, cstack
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;Total ram usage:        0 bytes
  7755 ;; Hardware stack levels used: 1
  7756 ;; Hardware stack levels required when called: 1
  7757 ;; This function calls:
  7758 ;;		_I2C_2_Master_Idle
  7759 ;; This function is called by:
  7760 ;;		_color_read_Red
  7761 ;;		_color_read_Green
  7762 ;;		_color_read_Blue
  7763 ;;		_color_read_Clear
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text40
  7768   003674                     __ptext40:
  7769                           	callstack 0
  7770   003674                     _I2C_2_Master_RepStart:
  7771                           	callstack 27
  7772   003674                     
  7773                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7774   003674  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7775   003678                     
  7776                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7777   003678  010E               	movlb	14	; () banked
  7778   00367A  83DA               	bsf	218,1,b	;volatile
  7779   00367C                     
  7780                           ; BSR set to: 14
  7781   00367C  0012               	return		;funcret
  7782   00367E                     __end_of_I2C_2_Master_RepStart:
  7783                           	callstack 0
  7784                           
  7785 ;; *************** function _I2C_2_Master_Read *****************
  7786 ;; Defined at:
  7787 ;;		line 51 in file "i2c.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  ack             1    wreg     unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  ack             1    2[COMRAM] unsigned char 
  7792 ;;  tmp             1    3[COMRAM] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      unsigned char 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7805 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;Total ram usage:        3 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 1
  7809 ;; This function calls:
  7810 ;;		_I2C_2_Master_Idle
  7811 ;; This function is called by:
  7812 ;;		_color_read_Red
  7813 ;;		_color_read_Green
  7814 ;;		_color_read_Blue
  7815 ;;		_color_read_Clear
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text41
  7820   0033C4                     __ptext41:
  7821                           	callstack 0
  7822   0033C4                     _I2C_2_Master_Read:
  7823                           	callstack 27
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;incstack = 0
  7827                           ;I2C_2_Master_Read@ack stored from wreg
  7828   0033C4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7829   0033C6                     
  7830                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7831   0033C6  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7832   0033CA                     
  7833                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7834   0033CA  010E               	movlb	14	; () banked
  7835   0033CC  87DA               	bsf	218,3,b	;volatile
  7836                           
  7837                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7838   0033CE  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7839   0033D2                     
  7840                           ;i2c.c: 57:   tmp = SSP2BUF;
  7841   0033D2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7842                           
  7843                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7844   0033D6  ECBC  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7845   0033DA                     
  7846                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7847   0033DA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7848   0033DC  B4D8               	btfsc	status,2,c
  7849   0033DE  EFF3  F019         	goto	u2831
  7850   0033E2  EFF7  F019         	goto	u2830
  7851   0033E6                     u2831:
  7852   0033E6  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7853   0033E8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7854   0033EA  EFF8  F019         	goto	u2848
  7855   0033EE                     u2830:
  7856   0033EE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7857   0033F0                     u2848:
  7858   0033F0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7859   0033F2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7860   0033F4  010E               	movlb	14	; () banked
  7861   0033F6  51DA               	movf	218,w,b	;volatile
  7862   0033F8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7863   0033FA  0BDF               	andlw	-33
  7864   0033FC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7865   0033FE  6FDA               	movwf	218,b	;volatile
  7866   003400                     
  7867                           ; BSR set to: 14
  7868                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7869   003400  89DA               	bsf	218,4,b	;volatile
  7870   003402                     
  7871                           ; BSR set to: 14
  7872                           ;i2c.c: 61:   return tmp;
  7873   003402  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7874   003404                     
  7875                           ; BSR set to: 14
  7876   003404  0012               	return		;funcret
  7877   003406                     __end_of_I2C_2_Master_Read:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _I2C_2_Master_Idle *****************
  7881 ;; Defined at:
  7882 ;;		line 22 in file "i2c.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;		None
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;		None
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;Total ram usage:        1 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_I2C_2_Master_Start
  7906 ;;		_I2C_2_Master_RepStart
  7907 ;;		_I2C_2_Master_Stop
  7908 ;;		_I2C_2_Master_Write
  7909 ;;		_I2C_2_Master_Read
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text42
  7914   003578                     __ptext42:
  7915                           	callstack 0
  7916   003578                     _I2C_2_Master_Idle:
  7917                           	callstack 27
  7918   003578                     l188:
  7919   003578  010E               	movlb	14	; () banked
  7920   00357A  B5D8               	btfsc	216,2,b	;volatile
  7921   00357C  EFC2  F01A         	goto	u2371
  7922   003580  EFC4  F01A         	goto	u2370
  7923   003584                     u2371:
  7924   003584  EFBC  F01A         	goto	l188
  7925   003588                     u2370:
  7926   003588                     
  7927                           ; BSR set to: 14
  7928   003588  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7929   00358C  0E1F               	movlw	31
  7930   00358E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7931   003590  A4D8               	btfss	status,2,c
  7932   003592  EFCD  F01A         	goto	u2381
  7933   003596  EFCF  F01A         	goto	u2380
  7934   00359A                     u2381:
  7935   00359A  EFBC  F01A         	goto	l188
  7936   00359E                     u2380:
  7937   00359E                     
  7938                           ; BSR set to: 14
  7939   00359E  0012               	return		;funcret
  7940   0035A0                     __end_of_I2C_2_Master_Idle:
  7941                           	callstack 0
  7942                           
  7943 ;; *************** function _ADC_init *****************
  7944 ;; Defined at:
  7945 ;;		line 9 in file "ADC.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;		None
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;		None
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;Total ram usage:        0 bytes
  7964 ;; Hardware stack levels used: 1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_main
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text43
  7973   003622                     __ptext43:
  7974                           	callstack 0
  7975   003622                     _ADC_init:
  7976                           	callstack 30
  7977   003622                     
  7978                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  7979   003622  8C86               	bsf	134,6,c	;volatile
  7980                           
  7981                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  7982   003624  010E               	movlb	14	; () banked
  7983   003626  8DB4               	bsf	180,6,b	;volatile
  7984                           
  7985                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  7986   003628  010F               	movlb	15	; () banked
  7987   00362A  9958               	bcf	88,4,b	;volatile
  7988   00362C                     
  7989                           ; BSR set to: 15
  7990                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  7991   00362C  0EFC               	movlw	-4
  7992   00362E  1758               	andwf	88,f,b	;volatile
  7993                           
  7994                           ;ADC.c: 17:     ADPCH=0b101110;
  7995   003630  0E2E               	movlw	46
  7996   003632  6F5F               	movwf	95,b	;volatile
  7997   003634                     
  7998                           ; BSR set to: 15
  7999                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8000   003634  9460               	bcf	96,2,c	;volatile
  8001   003636                     
  8002                           ; BSR set to: 15
  8003                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8004   003636  8860               	bsf	96,4,c	;volatile
  8005   003638                     
  8006                           ; BSR set to: 15
  8007                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8008   003638  8E60               	bsf	96,7,c	;volatile
  8009   00363A                     
  8010                           ; BSR set to: 15
  8011   00363A  0012               	return		;funcret
  8012   00363C                     __end_of_ADC_init:
  8013                           	callstack 0
  8014                           
  8015                           	psect	rparam
  8016   000000                     
  8017                           	psect	config
  8018                           
  8019                           ;Config register CONFIG1L @ 0x300000
  8020                           ;	External Oscillator mode Selection bits
  8021                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8022                           ;	Power-up default value for COSC bits
  8023                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8024   300000                     	org	3145728
  8025   300000  AA                 	db	170
  8026                           
  8027                           ;Config register CONFIG1H @ 0x300001
  8028                           ;	unspecified, using default values
  8029                           ;	Clock Out Enable bit
  8030                           ;	CLKOUTEN = 0x1, unprogrammed default
  8031                           ;	Clock Switch Enable bit
  8032                           ;	CSWEN = 0x1, unprogrammed default
  8033                           ;	Fail-Safe Clock Monitor Enable bit
  8034                           ;	FCMEN = 0x1, unprogrammed default
  8035   300001                     	org	3145729
  8036   300001  FF                 	db	255
  8037                           
  8038                           ;Config register CONFIG3L @ 0x300004
  8039                           ;	WDT Period Select bits
  8040                           ;	WDTCPS = 0x1F, unprogrammed default
  8041                           ;	WDT operating mode
  8042                           ;	WDTE = OFF, WDT Disabled
  8043   300004                     	org	3145732
  8044   300004  9F                 	db	159
  8045                           
  8046                           ;Config register CONFIG3H @ 0x300005
  8047                           ;	unspecified, using default values
  8048                           ;	WDT Window Select bits
  8049                           ;	WDTCWS = 0x7, unprogrammed default
  8050                           ;	WDT input clock selector
  8051                           ;	WDTCCS = 0x7, unprogrammed default
  8052   300005                     	org	3145733
  8053   300005  FF                 	db	255
  8054                           tosu	equ	0xFFF
  8055                           tosh	equ	0xFFE
  8056                           tosl	equ	0xFFD
  8057                           stkptr	equ	0xFFC
  8058                           pclatu	equ	0xFFB
  8059                           pclath	equ	0xFFA
  8060                           pcl	equ	0xFF9
  8061                           tblptru	equ	0xFF8
  8062                           tblptrh	equ	0xFF7
  8063                           tblptrl	equ	0xFF6
  8064                           tablat	equ	0xFF5
  8065                           prodh	equ	0xFF4
  8066                           prodl	equ	0xFF3
  8067                           indf0	equ	0xFEF
  8068                           postinc0	equ	0xFEE
  8069                           postdec0	equ	0xFED
  8070                           preinc0	equ	0xFEC
  8071                           plusw0	equ	0xFEB
  8072                           fsr0h	equ	0xFEA
  8073                           fsr0l	equ	0xFE9
  8074                           wreg	equ	0xFE8
  8075                           indf1	equ	0xFE7
  8076                           postinc1	equ	0xFE6
  8077                           postdec1	equ	0xFE5
  8078                           preinc1	equ	0xFE4
  8079                           plusw1	equ	0xFE3
  8080                           fsr1h	equ	0xFE2
  8081                           fsr1l	equ	0xFE1
  8082                           bsr	equ	0xFE0
  8083                           indf2	equ	0xFDF
  8084                           postinc2	equ	0xFDE
  8085                           postdec2	equ	0xFDD
  8086                           preinc2	equ	0xFDC
  8087                           plusw2	equ	0xFDB
  8088                           fsr2h	equ	0xFDA
  8089                           fsr2l	equ	0xFD9
  8090                           status	equ	0xFD8

Data Sizes:
    Strings     173
    Constant    0
    Data        1
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     90      95
    BANK0           160     80     148
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    reading_hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    S2569$buffer	PTR unsigned char  size(2) Largest target is 0

    S2569$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[21]), STR_12(CODE[12]), STR_3(CODE[29]), 
		 -> STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[21]), STR_12(CODE[12]), STR_3(CODE[29]), 
		 -> STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[21]), STR_12(CODE[12]), STR_3(CODE[29]), 
		 -> STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[24]), STR_11(CODE[21]), STR_12(CODE[12]), STR_3(CODE[29]), 
		 -> STR_5(CODE[27]), STR_7(CODE[33]), STR_9(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_calibration_routine
    _send2USART->_sprintf
    _reading_hue->_convert_rgb2hue
    _convert_rgb2hue->___fltol
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _reading_hue->_convert_rgb2hue

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   42295
                                             68 BANK0     12    12      0
                           _ADC_init
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                _calibration_routine
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                        _reading_hue
                         _send2USART
 ---------------------------------------------------------------------------------
 (1) _send2USART                                          52    50      2    9766
                                             67 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _reading_hue                                         56    54      2   15923
                                             64 COMRAM     6     4      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _convert_rgb2hue
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                     84    82      2   15284
                                             60 COMRAM     4     2      2
                                              0 BANK0     68    68      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     866
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     381
                                             50 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3497
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1896
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     950
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2311
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 23    22      1   10559
                                             67 COMRAM    23    22      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    8966
                                             48 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    7394
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6906
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4210
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     599
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   ___fldiv
     ___flmul (ARG)
     ___flsub (ARG)
       ___fladd
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
   ___xxtofl
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _reading_hue
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
     _convert_rgb2hue
       ___fladd
       ___fldiv
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
   _send2USART
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5A      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     163      61        0.0%
DATA                 0      0     163       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 13 15:04:17 2024

               _color_read_Red 31FC                   ___fldiv@aexp 0032                   ___fldiv@bexp 0031  
                 ___fldiv@sign 002A                _color_read_Blue 32EC                             l71 34B2  
                           l80 329A                             l74 35E4                             l83 333A  
                           l92 22A8                             l77 324A                             l86 32EA  
                           l94 22B6                             l95 2304                             l97 2312  
                           l89 2D62                             l98 2364                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003             convert_rgb2hue@max 0090             convert_rgb2hue@hue 0094  
           convert_rgb2hue@min 0088               _color_read_Clear 329C               _color_read_Green 324C  
                          l100 2372                            l101 23C4                            l103 23D2  
                          l200 3668                            l104 242C                            l121 11C8  
                          l203 365E                            l107 2452                            l131 12BA  
                          l115 114E                            l141 15E0                            l133 12CA  
                          l117 115E                            l206 3404                            l142 15FC  
                          l303 363A                            l127 1250                            l119 11B8  
                          l137 1568                            l129 1260                            l501 363E  
                          l510 354C                            l191 359E                            l504 3652  
                          l185 3576                            l194 3672                            l188 3578  
                          l364 31FA                            l197 367C                            l802 2ED6  
                          l555 3602                            l492 3620                            l558 35C4  
                          l823 2C32                            l817 302E                            l828 2C78  
                          l855 2B74                            l789 2E26                            _abs 34E8  
                          _pad 30DA                            _hue 00C4            convert_rgb2hue@cMax 003D  
                 ___awmod@sign 0006            convert_rgb2hue@diff 008C                            wreg 0FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 003C  
                         l1103 1906                           l1112 19D6                           l1113 19C4  
                         ?_abs 0007                           l1300 278C                           l1140 2280  
                         l1220 2542                           l1213 24AA                           l1310 3502  
                         l1142 20E0                           l1151 2126                           l3000 2DC6  
                         l1128 3380                           l1216 2606                           l1313 351A  
                         l1153 219E                           l1145 20A4                           l3010 2DFA  
                         l3002 2DD4                           l1306 33C2                           l1154 218C  
                         l1227 259E                           l3012 2E00                           l3004 2DDA  
                         l1236 34E6                           l1172 1B82                           l1325 30D8  
                         l1333 3444                           l1261 316A                           l1181 1DF0  
                         l3006 2DF0                           l3014 2E06                           l3030 2E46  
                         l3022 2E28                           l1182 1DDE                           l1086 17EC  
                         l1095 1ABC                           l1087 17DA                           l3016 2E16  
                         l3008 2DF8                           l3040 2E7E                           l3032 2E54  
                         l3024 2E2C                           l1336 367E                           l1256 310E  
                         l1264 27EC                           l1176 1EE6                           l1088 17A0  
                         l3200 170E                           l1281 2F7C                           l3018 2E1E  
                         l3042 2E8C                           l3050 2EB6                           l3034 2E5C  
                         l3026 2E3A                           l3130 2EE0                           l3210 1722  
                         l3202 1712                           l1259 314C                           l1179 1D78  
                         l3052 2EC6                           l3044 2EA2                           l3036 2E6E  
                         l3028 2E42                           l3132 2F06                           l3140 2F52  
                         l3300 1974                           l3220 1736                           l3212 1726  
                         l3204 1716                           l4100 2CAC                           l1277 2902  
                         l1285 2F84                           l1189 1EA8                           l3142 3578  
                         l3054 2ECE                           l3046 2EAA                           l3038 2E76  
                         l3134 2F0E                           l3310 19A6                           l3302 1984  
                         l3230 1788                           l3222 173A                           l3214 172A  
                         l3206 171A                           l3150 1618                           l4110 2CE2  
                         l4102 2CAE                           l3144 3588                           l3048 2EB0  
                         l3136 2F2A                           l3128 2ED8                           l4200 361C  
                         l3320 1A00                           l3312 19BC                           l3304 1986  
                         l3240 17CC                           l3232 1798                           l3216 172E  
                         l3208 171E                           l3224 173E                           l3160 164C  
                         l3152 161A                           l4120 2D16                           l4112 2CE4  
                         l4104 2CB0                           l3410 365A                           l3074 34E8  
                         l3138 2F4A                           l4210 31A6                           l4202 361E  
                         l3330 1A7C                           l3322 1A3A                           l3306 1994  
                         l3242 17CE                           l3234 17AE                           l3226 1742  
                         l3218 1732                           l3170 167E                           l3154 162A  
                         l3162 1654                           l3146 15FE                           l4122 2D30  
                         l4114 2CFC                           l4106 2CDE                           l3420 33C6  
                         l3404 366A                           l3412 3660                           l3076 34F6  
                         l4220 31E2                           l4212 31CA                           l4204 316C  
                         l3500 1FE6                           l3340 1A9C                           l3332 1A80  
                         l3316 19E6                           l3324 1A3C                           l3308 1998  
                         l3260 1856                           l3252 181E                           l3244 17D8  
                         l3236 17BA                           l3228 176C                           l3180 16B4  
                         l3172 1684                           l3164 1664                           l3156 163A  
                         l3148 160A                           l4124 2D46                           l4116 2D12  
                         l4108 2CE0                           l3430 3402                           l3422 33CA  
                         l3406 366E                           l3414 3664                           l4222 31EC  
                         l4214 31D4                           l4206 317C                           l3342 1AAA  
                         l3334 1A8E                           l3326 1A4C                           l3318 19F2  
                         l3262 185A                           l3254 182E                           l3246 17FA  
                         l3270 187A                           l3238 17BE                           l3190 16F0  
                         l3182 16C4                           l3174 1692                           l3166 166A  
                         l3158 164A                           l4126 2D5A                           l4118 2D14  
                         l3424 33D2                           l3416 3674                           l3408 3656  
                         l4224 31EE                           l4216 31D6                           l4208 31A2  
                         l3520 2068                           l3512 201E                           l3504 1FFA  
                         l3600 1AEA                           l3344 1AAC                           l3336 1A94  
                         l3328 1A5C                           l3272 18A0                           l3280 18F6  
                         l3264 1868                           l3256 183C                           l3248 180A  
                         l3192 16FE                           l3184 16C6                           l3176 1694  
                         l3168 167C                           l3426 33DA                           l3418 3678  
                         l3450 363E                           l4090 34A8                           l4082 3480  
                         l4226 31F8                           l4218 31E0                           l3530 20AE  
                         l3522 2070                           l3514 2038                           l3506 200A  
                         l3610 1B26                           l3602 1AFA                           l3338 1A96  
                         l3290 194A                           l3282 191C                           l3274 18D4  
                         l3266 186A                           l3258 184A                           l3194 1702  
                         l3178 16A4                           l3186 16CE                           l3428 3400  
                         l3452 364E                           l4084 3484                           l3540 2106  
                         l3532 20CC                           l3524 2080                           l3516 2048  
                         l3508 200A                           l3460 1F04                           l3700 1E48  
                         l3620 1B5C                           l3612 1B2C                           l3604 1B0A  
                         l3292 1958                           l3284 192C                           l3276 18D6  
                         l3268 1874                           l3196 1706                           l3188 16DE  
                         l4092 2C7A                           l4190 3638                           l4182 3622  
                         l4086 348E                           l3550 2144                           l3542 210C  
                         l3534 20CE                           l3526 2094                           l3518 2058  
                         l3462 1F14                           l3470 1F3E                           l3454 1EE8  
                         l3710 1EBC                           l3702 1E62                           l3622 1B6C  
                         l3614 1B3A                           l3606 1B10                           l3294 195A  
                         l3278 18E6                           l3198 170A                           l4094 2C80  
                         l4184 362C                           l4600 27AE                           l4088 349E  
                         l4192 3604                           l3560 21AE                           l3552 2148  
                         l3544 2116                           l3536 20DE                           l3528 20A2  
                         l3480 1F6A                           l3472 1F4E                           l3464 1F24  
                         l3456 1EF4                           l3712 1ECA                           l3704 1E76  
                         l3640 1BEE                           l3632 1BB6                           l3624 1B72  
                         l3616 1B3C                           l3608 1B20                           l3296 1968  
                         l3288 1940                           l3800 2B34                           l4096 2C98  
                         l4186 3634                           l4610 27E8                           l4602 27BE  
                         l4194 360E                           l3570 2210                           l3562 21BA  
                         l3554 2156                           l3546 2124                           l3538 20F0  
                         l3482 1F7A                           l3490 1FA4                           l3474 1F54  
                         l3466 1F34                           l3458 1F02                           l3730 2FB4  
                         l3714 1ECC                           l3706 1E90                           l3650 1C38  
                         l3642 1C06                           l3634 1BC2                           l3626 1B92  
                         l3618 1B4C                           l3298 1970                           l3722 333C  
                         l3802 2B44                           l3810 2456                           l4098 2CAA  
                         l4188 3636                           l3900 32E2                           l4620 283A  
                         l4612 27F4                           l4604 27C4                           l4700 3382  
                         l4196 3610                           l3580 226E                           l3572 2226  
                         l3564 21C8                           l3556 2184                           l3548 2136  
                         l3492 1FB4                           l3484 1F8A                           l3476 1F5A  
                         l3468 1F36                           l3740 302C                           l3732 2FC4  
                         l3708 1EAC                           l3716 1ED2                           l3660 1C8E  
                         l3652 1C48                           l3644 1C12                           l3636 1BCC  
                         l3628 1BA2                           l3724 334C                           l3804 2B54  
                         l3812 2466                           l2950 3030                           l4630 2898  
                         l4622 2840                           l4614 27FE                           l4606 27D4  
                         l4702 338A                           l4710 34B4                           l4198 361A  
                         l3582 2274                           l3574 2240                           l3566 21F2  
                         l3494 1FCA                           l3486 1F9A                           l3478 1F68  
                         l3734 2FF2                           l3750 2BE2                           l3718 1ED6  
                         l3670 1D32                           l3662 1CAA                           l3654 1C54  
                         l3646 1C1E                           l3638 1BE2                           l3806 2B64  
                         l3830 252C                           l3822 24E4                           l3814 2474  
                         l3910 0F22                           ?_pad 000F                           l2960 30A8  
                         l2952 3040                           l4640 28E6                           l4632 28B2  
                         l4616 2804                           l4624 285C                           l4608 27E0  
                         l4704 339A                           l4712 34BC                           l3584 2276  
                         l3576 225C                           l3568 21F6                           l3496 1FDA  
                         l3488 1F9C                           l3736 3002                           l3728 2F86  
                         l3760 2C70                           l3752 2BF2                           l3744 2B76  
                         l3680 1D88                           l3672 1D40                           l3664 1CB6  
                         l3656 1C64                           l3648 1C2C                           l3592 1ABE  
                         l3840 25AC                           l3832 2538                           l3824 24EC  
                         l3816 24BA                           l3920 1016                           l3912 0F56  
                         l3904 0EB0                           l4800 2942                           l2954 3050  
                         l4570 3406                           l4626 2876                           l4634 28C0  
                         l4618 2836                           l4650 2644                           l4706 33BA  
                         l4714 34C4                           l4730 22D0                           l4722 2282  
                         l3578 2260                           l3498 1FE2                           l3738 3026  
                         l3762 2C76                           l3754 2C00                           l3746 2BA4  
                         l3682 1D96                           l3674 1D5E                           l3666 1CD2  
                         l3658 1C7E                           l3594 1ACA                           l3850 25F4  
                         l3842 25AE                           l3834 2574                           l3826 24F8  
                         l3818 24D0                           l3930 1108                           l3922 103A  
                         l3914 0F8A                           l3906 0EC2                           l4810 2968  
                         l4802 2946                           l2980 2D68                           l2956 305A  
                         l4572 3412                           l4580 30E8                           l4636 28D0  
                         l4628 2888                           l2972 35A0                           l4652 2648  
                         l4644 2608                           l4716 34CC                           l4740 232C  
                         l4732 22E2                           l4724 2288                           l3756 2C12  
                         l3748 2BB4                           l3692 1E00                           l3684 1D9A  
                         l3676 1D68                           l3668 1CFC                           l3596 1AD8  
                         l3780 2ADA                           l3772 2A9A                           l3852 25F6  
                         l3844 25B2                           l3836 2580                           l3828 252A  
                         l3940 120A                           l3932 113A                           l3924 106E  
                         l3916 0FBE                           l3908 0EF2                           l4820 2972  
                         l4812 296A                           l4804 294A                           l2990 2D98  
                         l2982 2D76                           l2958 3076                           l4574 3420  
                         l4590 312E                           l4582 30F8                           l4638 28D6  
                         l2974 35BC                           l4670 26D0                           l4662 2666  
                         l4654 2650                           l4646 262E                           l4718 34DC  
                         l4750 238C                           l4742 2342                           l4734 22E4  
                         l4726 22A0                           l3870 355E                           l3758 2C20  
                         l3694 1E0C                           l3686 1DA8                           l3678 1D76  
                         l3598 1ADA                           l3790 2B0A                           l3782 2AE8  
                         l3774 2AC4                           l3766 2A70                           l3846 25D6  
                         l3838 258E                           l3950 1340                           l3942 123C  
                         l3934 1172                           l3926 10A2                           l3918 0FF2  
                         l4830 297E                           l4822 2974                           l4814 296C  
                         l4806 294E                           l3880 31FC                           l2992 2D9C  
                         l2984 2D7E                           l4576 3424                           l4592 315A  
                         l4584 3106                           l4680 273C                           l4672 26DA  
                         l4656 2652                           l4664 269C                           l4648 2636  
                         l4760 23F0                           l4752 23A2                           l4744 2344  
                         l4736 22FC                           l4728 22B8                           l3872 3560  
                         l3696 1E1A                           l3688 1DD6                           l3792 2B14  
                         l3776 2AC6                           l3768 2A86                           l3848 25E6  
                         l3960 14A6                           l3952 1356                           l3944 1274  
                         l3936 11A4                           l3928 10D6                           l4840 29A0  
                         l4832 2980                           l4824 2976                           l4816 296E  
                         l4808 2966                           l3882 3242                           l2994 2DA4  
                         l2986 2D82                           l2978 2D64                           l4586 311A  
                         l4578 30DA                           l4594 278E                           l4682 2746  
                         l4674 26E4                           l4666 26AC                           l4658 265E  
                         l4690 2766                           l4770 2424                           l4762 2406  
                         l4754 23A4                           l4746 235C                           l4738 2314  
                         l3874 3562                           l3866 354E                           l3698 1E44  
                         l3778 2AD6                           l3962 14D8                           l3954 1388  
                         l3946 12A6                           l3938 11D8                           l4850 29F8  
                         l4842 29A4                           l4834 299A                           l4826 2978  
                         l4818 2970                           l3892 32EC                           l2996 2DB6  
                         l2988 2D90                           l4588 312A                           l4596 2792  
                         l4676 2704                           l4668 26C0                           l4772 243A  
                         l4764 2408                           l4756 23BC                           l4748 2374  
                         l3876 3564                           l3868 3558                           l3788 2B00  
                         l3956 13E4                           l3964 1568                           l3948 12DA  
                         l4852 2A5C                           l4844 29AC                           l4836 299C  
                         l4828 297C                           l4780 2908                           l3894 3332  
                         l3886 324C                           l3990 352E                           l2998 2DBE  
                         l4598 27A6                           l4686 275A                           l4678 2724  
                         l4766 240A                           l4758 23D8                           l3878 35C8  
                         l3798 2B28                           l3966 159C                           l3958 1416  
                         l4774 35E6                           l4846 29B4                           l4838 299E  
                         l4790 2922                           l4782 290C                           l3888 3292  
                         l3992 3536                           l3984 351C                           l4768 240C  
                         l3968 15AC                           l4776 35FA                           l4848 29D6  
                         l4792 2926                           l4784 2910                           l3898 329C  
                         l3986 3520                           l4794 292A                           l4786 2910  
                         l4778 2904                           l3988 352C                           l4796 2932  
                         l4788 291C                           l4798 293A                           l4896 268E  
                         STR_1 0E73                           STR_2 0EAC                           STR_3 0E22  
                         STR_4 0EAC                           STR_5 0E3F                           STR_6 0EAC  
                         STR_7 0E01                           STR_8 0EAC                           STR_9 0E5A  
                         u2100 2DB6                           u2101 2DB2                           u2110 2DD4  
                         u2030 3040                           u2111 2DD0                           u2031 303C  
                         u2120 2DF0                           u2040 3050                           u3000 2106  
                         u2121 2DEC                           u2041 304C                           u3001 2102  
                         u2130 2E16                           u2050 3076                           u3010 2124  
                         u2131 2E12                           u2051 3072                           u3011 2120  
                         u2140 2E3A                           u2060 30A8                           u3100 226E  
                         u3020 2144                           u2141 2E36                           u2061 30A4  
                         u3101 226A                           u3021 2140                           u2150 2E54  
                         u3030 2156                           u3110 1AD8                           u2151 2E50  
                         u3031 2152                           u3111 1AD4                           u2080 2D76  
                         u2160 2E6E                           u2240 34F6                           u3040 2184  
                         u3200 1D76                           u3120 1AEA                           u2400 162A  
                 _BAUD4CONbits 0EE9                           u2081 2D72                           u2161 2E6A  
                         u2241 34F2                           u3041 2180                           u3201 1D72  
                         u3121 1AE6                           u2401 1626                           u2090 2D90  
                         u2170 2E8C                           u3050 219A                           u3210 1D96  
                         u3130 1AFA                           u2410 163A                           u2091 2D8C  
                         u2171 2E88                           u3051 2196                           u3211 1D92  
                         u3131 1AF6                           u2411 1636                           u2180 2EA2  
                         u4100 315A                           u3060 21AE                           u3300 2FB4  
                         u3220 1DA8                           u3140 1B3A                           u2500 1786  
                         u2420 167C                           u2181 2E9E                           u4101 3156  
                         u3061 21AA                           u3301 2FB0                           u3221 1DA4  
                         u3141 1B36                           u2421 1678                           u2190 2EC6  
                         u4110 27A2                           u2350 2F06                           u3070 21C8  
                         u3310 2FF2                           u3230 1DD6                           u3150 1B4C  
                         u2510 17AE                           u2430 1692                           u2191 2EC2  
                         u4111 279C                           u2351 2F02                           u3071 21C4  
                         u3311 2FEE                           u3231 1DD2                           u3151 1B48  
                         u2511 17AA                           u2431 168E                           u4200 28D0  
                         u4120 27A4                           u2360 2F7C                           u3080 2210  
                         u3320 3026                           u3240 1DEC                           u3160 1B5C  
                         u2600 18E6                           u2520 17CC                           u2440 16A4  
                         u3400 2AE8                           u4201 28CC                           u2361 2F78  
                         u3081 220C                           u3321 3022                           u3241 1DE8  
                         u3161 1B58                           u2601 18E2                           u2521 17C8  
                         u2441 16A0                           u3401 2AE4                           u2370 3588  
                         u4130 27BE                           u4210 262E                           u3090 2240  
                         u3330 2BA4                           u3250 1E00                           u3170 1B92  
                         u2610 191C                           u2530 17EC                           u2450 16B4  
                         u3410 2AFC                           _T2PR 0FBC                           u2371 3584  
                         u4131 27BA                           u4211 262A                           u3091 223C  
                         u3331 2BA0                           u3251 1DFC                           u3171 1B8E  
                         u2611 1918                           u2531 17E8                           u2451 16B0  
                         u3411 2AF8                           u2380 359E                           u4060 3444  
                         u4140 27D4                           u4220 26AC                           u4300 23D2  
                         u3340 2BE2                           u3260 1E1A                           u3180 1BA2  
                         u2700 19E6                           u2620 192C                           u2540 17FA  
                         u2460 16F0                           u3420 2B24                           u3500 258E  
                         u2381 359A                           u4061 3440                           u4141 27D0  
                         u4221 26A8                           u4301 23CE                           u3341 2BDE  
                         u3261 1E16                           u3181 1B9E                           u2701 19E2  
                         u2621 1928                           u2541 17F6                           u2461 16EC  
                         u3421 2B20                           u3501 258A                           u4070 30E8  
                         u4150 2876                           u4230 26D0                           u4310 243A  
                         u3350 2C00                           u3270 1E62                           u3190 1D1C  
                         u2710 1A00                           u2630 1958                           u2550 180A  
                         u2470 16FE                           u2390 1618                           u3430 2B44  
                         u3510 259E                           u4071 30E4                           u4151 2872  
                         u4231 26CC                           u4311 2436                           u3351 2BFC  
                         u3271 1E5E                           u2711 19FC                           u2631 1954  
                         u2551 1806                           u2471 16FA                           u2391 1614  
                         u3431 2B40                           u3511 259A                           u4080 3106  
                         u4160 2888                           u4240 2704                           u3360 2C20  
                         u3280 1E90                           u2720 1A3A                           u2640 1968  
                         u2560 183C                           u2480 176C                           u3440 2B54  
                         u3520 25AC                           u3600 123C                           u4081 3102  
                         u4161 2884                           u4241 2700                           u3361 2C1C  
                         u3281 1E8C                           u2721 1A36                           u2641 1964  
                         u2561 1838                           u2481 1768                           u3441 2B50  
                         u3521 25A8                           u3601 1238                           u4090 314C  
                         u4170 2898                           u4250 2724                           u3370 2C70  
                         u3290 1ECA                           u2730 1A4C                           u2650 1984  
                         u2570 184A                           u2490 1784                           u3530 25E6  
                         u3450 2466                           u3610 12A6                           u4091 3148  
                         u4171 2894                           u4251 2720                           u3371 2C6C  
                         u3291 1EC6                           u3195 1D12                           u2731 1A48  
                         u2651 1980                           u2571 1846                           u2491 177E  
                         u3531 25E2                           u3451 2462                           u3611 12A2  
                         u4180 28B2                           u4260 33BA                           u2900 1F24  
                         u2740 1A5C                           u2660 1994                           u2580 1868  
                         u3380 2A86                           u3540 25F4                           u3460 2474  
                         u3620 1340                           u4181 28AE                           u4261 33B6  
                         u2901 1F20                           u2741 1A58                           u2661 1990  
                         u2581 1864                           u3381 2A82                           u3541 25F0  
                         u3461 2470                           u3621 133C                           u2830 33EE  
                         u4190 28C0                           u4270 22B6                           u2910 1F68  
                         u2750 1A7C                           u2670 19A6                           u2590 18A0  
                         u3390 2ABA                           u3470 24D0                           u3630 1388  
                         u2831 33E6                           u4191 28BC                           u4407 231E  
                         u4271 22B2                           u2911 1F64                           u2751 1A78  
                         u2671 19A2                           u2591 189C                           u3471 24CC  
                         u3631 1384                           u4280 2312                           u2920 1F7A  
                         u2760 1A8E                           u2680 19BC                           u3480 2526  
                         u3640 1416                           u3560 1108                           u4417 237E  
                         u4281 230E                           u2921 1F76                           u2761 1A8A  
                         u2681 19B8                           u3481 2522                           u3641 1412  
                         u3561 1104                           u4337 298C                           u4290 2372  
                         u2930 1F8A                           u2770 1AAA                           u2690 19D2  
                         u3490 2570                           u3650 14D8                           u3570 113A  
                         u4427 23E2                           u4291 236E                           u2931 1F86  
                         u2771 1AA6                           u2691 19CE                           u3395 2AB0  
                         u3491 256C                           u3651 14D4                           u3571 1136  
                         u4347 2C8A                           u2940 1FCA                           u3660 15AC  
                         u3580 11A4                           u4437 2444                           u2941 1FC6  
                         u3661 15A8                           u3581 11A0                           u4357 2CBA  
                         u2870 364E                           u3670 354C                           u2950 200A  
                         u3590 120A                           u2871 364A                           u3671 3548  
                         u4447 3530                           u2951 2006                           u3591 1206  
                         u4367 2CEE                           u2848 33F0                           u2960 2080  
                         u2880 1F02                           u2961 207C                           u2881 1EFE  
                         u4377 2D22                           u2970 20A2                           u2890 1F14  
                         u4387 3494                           u2971 209E                           u2891 1F10  
                         u2980 20CC                           u4397 22C2                           u2981 20C8  
                         u2990 20F0                           u2991 20EC                           abs@a 0007  
                         _dbuf 0150                           _main 2904                           _dtoa 278E  
         convert_rgb2hue@cCurr 003E                           _prec 00CE                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 363C                ___fldiv@new_exp 002B         __end_of_color_read_Red 324C  
                 ___param_bank 0000                 reading_hue@hue 0045                          ??_abs 0009  
                        ??_pad 0014                  ___fltol@sign1 003B                __end_of___fladd 1ABE  
                        ?_main 0001                          ?_dtoa 0017                          _ADPCH 0F5F  
              __end_of___fldiv 2282                __end_of___awdiv 2E28                          STR_10 0EAC  
                        STR_11 0E8B                          STR_12 0EA0                __end_of___awmod 2ED8  
              __end_of___flmul 1EE8                __end_of___flsub 3382                __end_of___fltol 2B76  
              ___awdiv@divisor 0003                ___awdiv@counter 0005              ??_convert_rgb2hue 003F  
                 vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 3654     __end_of_I2C_2_Master_Start 3674  
   __end_of_I2C_2_Master_Write 3660                          _flags 005B            read_prec_or_width@c 0009  
          read_prec_or_width@n 000A                          _fputc 3030                          _fputs 3406  
                        pad@fp 000F                          _width 00CC                          _putch 367E  
                        dtoa@d 0018                          dtoa@i 0020                          dtoa@p 001C  
                        dtoa@s 001F                          dtoa@w 001D                   ?_reading_hue 0041  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 34E8  
        convert_rgb2hue@redmax 0064        __end_of_color_read_Blue 333C          _I2C_2_Master_RepStart 3674  
              ?_color_read_Red 0005                __initialization 3446                   __end_of_main 2A70  
                 __end_of_dtoa 2904                         ??_main 00A4                         ??_dtoa 001A  
                __activetblptr 0003     __end_of_read_prec_or_width 2F86                         ?_fputc 0001  
                       ?_fputs 0009                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       _RG6PPS 0E88                  vfpfcnvrt@done 002B       __end_of_color_click_init 34B4  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 2608  
  convert_rgb2hue@greencurrent 0068                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 0030  
                       ___flge 2B76                         ___fleq 2F86                      ??___fladd 0009  
                       ___wmul 35A0                      ??___fldiv 0022                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0009                      ??___flsub 0019  
                    ??___fltol 0037           read_prec_or_width@ap 0008                         clear_0 345E  
                       clear_1 346A               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       _motorL 00DA                         _motorR 00D1                         isa$std 0001  
              ___awmod@counter 0005             send2USART@hue_char 0060                         pad@buf 0010  
                       dtoa@fp 0017                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                   __mediumconst 0000  
      calibration_routine@cCal 0044                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                      ?_ADC_init 0001               ?_sendCharSerial4 0001  
       convert_rgb2hue@bluemax 0074                         putch@c 0001               __end_of_vfprintf 33C4  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0037                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
                   __accesstop 0060        __end_of__initialization 347A       __end_of_color_read_Clear 32EC  
     __end_of_color_read_Green 329C         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
                   ___fltol@f1 0033               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3680                  __end_of_fputc 30DA                  __end_of_fputs 3446  
                __end_of_putch 3680                 main@clear_1086 00A6               reading_hue@cCurr 0041  
                   ??_ADC_init 0001                 main@clear_norm 00AE                        ??_fputc 0004  
                      ??_fputs 000C                        ??_putch 0001                     __pbssBANK0 00B0  
                   __pbssBANK1 0100              _color_writetoaddr 35C6                   _T2CLKCONbits 0FBF  
              _convert_rgb2hue 0EB0                        ?___flge 0001                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001            _convert_rgb2hue$411 0078            _convert_rgb2hue$412 007C  
          _convert_rgb2hue$413 0080            _convert_rgb2hue$414 0084                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 35E6  
                    _ADREFbits 0F58             _I2C_2_Master_Start 366A                     _initUSART4 3604  
           _I2C_2_Master_Write 3654                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___fladd 15FE  
                      ___fldiv 1EE8                        ___awdiv 2D64                        ___awmod 2E28  
                      ___flmul 1ABE                        ___flsub 333C                        ___fltol 2A70  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D  
                 __psmallconst 0E00                        __pcinit 3446                        __ramtop 0E00  
                   _send2USART 35E6                        __ptext0 2904                        __ptext1 35E6  
                      __ptext2 2C7A                        __ptext3 0EB0                        __ptext4 2454  
                      __ptext5 2A70                        __ptext6 333C                        __ptext7 15FE  
                      __ptext8 1ABE                        __ptext9 2B76                      _T2CONbits 0FBD  
        read_prec_or_width@fmt 0007                     ??___xxtofl 0005               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 005F                        _sprintf 34B4  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 347A  
                      fputc@fp 0003        __end_of_convert_rgb2hue 15FE                        fputs@fp 000B  
            ?_color_click_init 0001             _read_prec_or_width 2ED8             ??_color_click_init 0005  
             _colorCalibration 00EB              __end_of_vfpfcnvrt 278E                        postdec2 0FDD  
          ?_read_prec_or_width 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0027                     ??_vfprintf 0030  
      convert_rgb2hue@greenmax 006C                   _colorCurrent 00E3                _initDCmotorsPWM 316C  
                    _PORTFbits 0F8E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               convert_rgb2hue@b 00A0           ??_read_prec_or_width 0009  
             convert_rgb2hue@g 009C                    ___fldiv@grs 002D               convert_rgb2hue@r 0098  
                  ___fldiv@rem 0026       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 000E                    _CCP1CONbits 0FAB            _calibration_routine 2282  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 00B0                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005     convert_rgb2hue@bluecurrent 0070  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
    convert_rgb2hue@redcurrent 0060                 __end_of___flge 2C7A                 __end_of___fleq 3030  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 35C6                    ?_send2USART 0044           ?_calibration_routine 0044  
          color_read_Clear@tmp 000A            start_initialization 3446   calibration_routine@cal_state 0047  
                  __end_of_abs 351C                    __end_of_pad 316C                  _TxBufWriteCnt 005D  
             ?_convert_rgb2hue 003D            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 31FC  
                  vfprintf@fmt 002E                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                    __pdataBANK0 00F3          ??_calibration_routine 0045  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001E  
                    ___fldiv@b 001A                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 005B                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 0060                  ??_reading_hue 0043                      _dtoa$2648 001A  
                     ?___fladd 0001                       ?___fldiv 001A                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 0011  
                     ?___fltol 0033                   _readingIndex 00D0           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 3578  
            _I2C_2_Master_Init 354E              _I2C_2_Master_Read 33C4              _I2C_2_Master_Stop 3660  
                 _RxBufReadCnt 005E                       _ADC_init 3622             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0031              _sendStringSerial4 351C  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 0F79            ??_I2C_2_Master_Stop 0002  
                     _LATCbits 0F7B                       _LATDbits 0F7C                       _LATEbits 0F7D  
                     _LATFbits 0F7E                       _LATGbits 0F7F                       _LATHbits 0F80  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D            __end_of_reading_hue 2D64  
                     _PIR4bits 0E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 0EDA            ??_sendStringSerial4 0003                       _SSP2STAT 0ED8  
                    _vfpfcnvrt 2608                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 35A0  
    __end_of_I2C_2_Master_Init 3578      __end_of_I2C_2_Master_Read 3406              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 366A    I2C_2_Master_Write@data_byte 0002                    _ldrReadings 013C  
            ??_color_read_Blue 0007                   _TxBufReadCnt 005C             main@clear_max_1087 00AA  
    __end_of_sendStringSerial4 354E  __end_of_I2C_2_Master_RepStart 367E             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 002F  
                     __Lrparam 0000                     vfprintf@fp 002D                     ?_vfpfcnvrt 0022  
                 ??_send2USART 0046                     _ANSELDbits 0EA7                     _ANSELFbits 0EB4  
                     _dataFlag 00F3                     sprintf@fmt 0032                       ___xxtofl 2454  
           __end_of_initUSART4 3622                       __ptext10 2F86                       __ptext11 1EE8  
                     __ptext20 2608                       __ptext12 3604                       __ptext21 2ED8  
                     __ptext13 316C                       __ptext30 2D64                       __ptext22 35A0  
                     __ptext14 3480                       __ptext31 351C                       __ptext23 278E  
                     __ptext15 35C6                       __ptext40 3674                       __ptext32 363C  
                     __ptext24 30DA                       __ptext16 354E                       __ptext41 33C4  
                     __ptext33 31FC                       __ptext25 3406                       __ptext17 2282  
                     __ptext42 3578                       __ptext34 324C                       __ptext26 3030  
                     __ptext18 34B4                       __ptext43 3622                       __ptext35 329C  
                     __ptext27 367E                       __ptext19 3382                       __ptext36 32EC  
                     __ptext28 34E8                       __ptext37 3654                       __ptext29 2E28  
                     __ptext38 3660                       __ptext39 366A                   _SSP2CON1bits 0ED9  
                 _SSP2CON2bits 0EDA                    _reading_hue 2C7A             __end_of_send2USART 3604  
                     isa$xinst 0000                     _RC4STAbits 0EE7                       _vfprintf 3382  
                    sprintf@ap 0037    __end_of_calibration_routine 2454                  send2USART@hue 0044  
                  ??_vfpfcnvrt 0025               _color_click_init 3480                       sprintf@f 0038  
                     sprintf@s 0031                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                ___fladd@signs 000D                     _TX4STAbits 0EE8                _sendCharSerial4 363C  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F  
