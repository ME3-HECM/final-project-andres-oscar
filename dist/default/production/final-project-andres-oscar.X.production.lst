

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 12:51:40 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 21/07/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88                           	psect	idataCOMRAM
    89   001B16                     __pidataCOMRAM:
    90                           	callstack 0
    91                           
    92                           ;initializer for _dataFlag
    93   001B16  01                 	db	1
    94   000000                     _TX4REG	set	3812
    95   000000                     _RC4STAbits	set	3815
    96   000000                     _SP4BRGH	set	3814
    97   000000                     _SSP2CON2bits	set	3802
    98   000000                     _RX4PPS	set	3605
    99   000000                     _SSP2CLKPPS	set	3612
   100   000000                     _SSP2DATPPS	set	3613
   101   000000                     _ANSELDbits	set	3751
   102   000000                     _ANSELFbits	set	3764
   103   000000                     _TRISFbits	set	3974
   104   000000                     _SSP2BUF	set	3797
   105   000000                     _SSP2ADD	set	3798
   106   000000                     _SSP2CON1bits	set	3801
   107   000000                     _ADREFbits	set	3928
   108   000000                     _ADPCH	set	3935
   109   000000                     _ADRESH	set	3940
   110   000000                     _ADCON0bits	set	3936
   111   000000                     _LATDbits	set	3964
   112   000000                     _TRISDbits	set	3972
   113   000000                     _RC4REG	set	3811
   114   000000                     _SP4BRGL	set	3813
   115   000000                     _TX4STAbits	set	3816
   116   000000                     _BAUD4CONbits	set	3817
   117   000000                     _SSP2CON2	set	3802
   118   000000                     _SSP2STAT	set	3800
   119   000000                     _PIE4bits	set	3629
   120   000000                     _PIR4bits	set	3639
   121   000000                     _RC0PPS	set	3682
   122   000000                     _RD5PPS	set	3695
   123   000000                     _RD6PPS	set	3696
   124                           
   125                           	psect	smallconst
   126   000E00                     __psmallconst:
   127                           	callstack 0
   128   000E00  00                 	db	0
   129   000E01                     STR_5:
   130   000E01  56                 	db	86	;'V'
   131   000E02  6F                 	db	111	;'o'
   132   000E03  6C                 	db	108	;'l'
   133   000E04  74                 	db	116	;'t'
   134   000E05  61                 	db	97	;'a'
   135   000E06  67                 	db	103	;'g'
   136   000E07  65                 	db	101	;'e'
   137   000E08  20                 	db	32
   138   000E09  3D                 	db	61	;'='
   139   000E0A  20                 	db	32
   140   000E0B  25                 	db	37
   141   000E0C  64                 	db	100	;'d'
   142   000E0D  2E                 	db	46
   143   000E0E  25                 	db	37
   144   000E0F  30                 	db	48	;'0'
   145   000E10  32                 	db	50	;'2'
   146   000E11  64                 	db	100	;'d'
   147   000E12  2C                 	db	44
   148   000E13  20                 	db	32
   149   000E14  20                 	db	32
   150   000E15  00                 	db	0
   151   000E16                     STR_4:
   152   000E16  43                 	db	67	;'C'
   153   000E17  6C                 	db	108	;'l'
   154   000E18  65                 	db	101	;'e'
   155   000E19  61                 	db	97	;'a'
   156   000E1A  72                 	db	114	;'r'
   157   000E1B  3D                 	db	61	;'='
   158   000E1C  25                 	db	37
   159   000E1D  64                 	db	100	;'d'
   160   000E1E  2C                 	db	44
   161   000E1F  20                 	db	32
   162   000E20  20                 	db	32
   163   000E21  0D                 	db	13
   164   000E22  0A                 	db	10
   165   000E23  00                 	db	0
   166   000E24                     STR_3:
   167   000E24  47                 	db	71	;'G'
   168   000E25  72                 	db	114	;'r'
   169   000E26  65                 	db	101	;'e'
   170   000E27  65                 	db	101	;'e'
   171   000E28  6E                 	db	110	;'n'
   172   000E29  3D                 	db	61	;'='
   173   000E2A  25                 	db	37
   174   000E2B  64                 	db	100	;'d'
   175   000E2C  2C                 	db	44
   176   000E2D  20                 	db	32
   177   000E2E  20                 	db	32
   178   000E2F  00                 	db	0
   179   000E30                     STR_2:
   180   000E30  42                 	db	66	;'B'
   181   000E31  6C                 	db	108	;'l'
   182   000E32  75                 	db	117	;'u'
   183   000E33  65                 	db	101	;'e'
   184   000E34  3D                 	db	61	;'='
   185   000E35  25                 	db	37
   186   000E36  64                 	db	100	;'d'
   187   000E37  2C                 	db	44
   188   000E38  20                 	db	32
   189   000E39  20                 	db	32
   190   000E3A  00                 	db	0
   191   000E3B                     STR_1:
   192   000E3B  52                 	db	82	;'R'
   193   000E3C  65                 	db	101	;'e'
   194   000E3D  64                 	db	100	;'d'
   195   000E3E  3D                 	db	61	;'='
   196   000E3F  25                 	db	37
   197   000E40  64                 	db	100	;'d'
   198   000E41  2C                 	db	44
   199   000E42  20                 	db	32
   200   000E43  20                 	db	32
   201   000E44  00                 	db	0
   202   000E45  00                 	db	0	; dummy byte at the end
   203   000000                     
   204                           ; #config settings
   205                           
   206                           	psect	cinit
   207   001934                     __pcinit:
   208                           	callstack 0
   209   001934                     start_initialization:
   210                           	callstack 0
   211   001934                     __initialization:
   212                           	callstack 0
   213                           
   214                           ; Initialize objects allocated to COMRAM (1 bytes)
   215                           ; load TBLPTR registers with __pidataCOMRAM
   216   001934  0E16               	movlw	low __pidataCOMRAM
   217   001936  6EF6               	movwf	tblptrl,c
   218   001938  0E1B               	movlw	high __pidataCOMRAM
   219   00193A  6EF7               	movwf	tblptrh,c
   220   00193C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   221   00193E  6EF8               	movwf	tblptru,c
   222   001940  0009               	tblrd		*+	;fetch initializer
   223   001942  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   224                           
   225                           ; Clear objects allocated to BANK1 (132 bytes)
   226   001946  EE01  F000         	lfsr	0,__pbssBANK1
   227   00194A  0E84               	movlw	132
   228   00194C                     clear_0:
   229   00194C  6AEE               	clrf	postinc0,c
   230   00194E  06E8               	decf	wreg,f,c
   231   001950  E1FD               	bnz	clear_0
   232                           
   233                           ; Clear objects allocated to BANK0 (2 bytes)
   234   001952  0100               	movlb	0
   235   001954  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   236   001956  6BF8               	clrf	__pbssBANK0& (0+255),b
   237                           
   238                           ; Clear objects allocated to COMRAM (8 bytes)
   239   001958  EE00  F056         	lfsr	0,__pbssCOMRAM
   240   00195C  0E08               	movlw	8
   241   00195E                     clear_1:
   242   00195E  6AEE               	clrf	postinc0,c
   243   001960  06E8               	decf	wreg,f,c
   244   001962  E1FD               	bnz	clear_1
   245   001964                     end_of_initialization:
   246                           	callstack 0
   247   001964                     __end_of__initialization:
   248                           	callstack 0
   249   001964  0100               	movlb	0
   250   001966  EFA0  F008         	goto	_main	;jump to C main() function
   251                           
   252                           	psect	bssCOMRAM
   253   000056                     __pbssCOMRAM:
   254                           	callstack 0
   255   000056                     _width:
   256                           	callstack 0
   257   000056                     	ds	2
   258   000058                     _flags:
   259                           	callstack 0
   260   000058                     	ds	1
   261   000059                     _readingIndex:
   262                           	callstack 0
   263   000059                     	ds	1
   264   00005A                     _TxBufReadCnt:
   265                           	callstack 0
   266   00005A                     	ds	1
   267   00005B                     _TxBufWriteCnt:
   268                           	callstack 0
   269   00005B                     	ds	1
   270   00005C                     _RxBufReadCnt:
   271                           	callstack 0
   272   00005C                     	ds	1
   273   00005D                     _RxBufWriteCnt:
   274                           	callstack 0
   275   00005D                     	ds	1
   276                           
   277                           	psect	dataCOMRAM
   278   00005E                     __pdataCOMRAM:
   279                           	callstack 0
   280   00005E                     _dataFlag:
   281                           	callstack 0
   282   00005E                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   0000F8                     __pbssBANK0:
   286                           	callstack 0
   287   0000F8                     _prec:
   288                           	callstack 0
   289   0000F8                     	ds	2
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _ldrReadings:
   298                           	callstack 0
   299   00013C                     	ds	20
   300   000150                     _EUSART4RXbuf:
   301                           	callstack 0
   302   000150                     	ds	20
   303   000164                     _dbuf:
   304                           	callstack 0
   305   000164                     	ds	32
   306                           
   307                           	psect	cstackBANK1
   308   000184                     __pcstackBANK1:
   309                           	callstack 0
   310   000184                     main@green_char:
   311                           	callstack 0
   312                           
   313                           ; 50 bytes @ 0x0
   314   000184                     	ds	50
   315   0001B6                     main@clear_char:
   316                           	callstack 0
   317                           
   318                           ; 50 bytes @ 0x32
   319   0001B6                     	ds	50
   320                           
   321                           	psect	cstackBANK0
   322   000060                     __pcstackBANK0:
   323                           	callstack 0
   324   000060                     main@buf:
   325                           	callstack 0
   326                           
   327                           ; 50 bytes @ 0x0
   328   000060                     	ds	50
   329   000092                     main@red_char:
   330                           	callstack 0
   331                           
   332                           ; 50 bytes @ 0x32
   333   000092                     	ds	50
   334   0000C4                     main@blue_char:
   335                           	callstack 0
   336                           
   337                           ; 50 bytes @ 0x64
   338   0000C4                     	ds	50
   339   0000F6                     main@clear:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x96
   343   0000F6                     	ds	2
   344                           
   345                           	psect	cstackCOMRAM
   346   000001                     __pcstackCOMRAM:
   347                           	callstack 0
   348   000001                     ??_I2C_2_Master_Idle:
   349   000001                     ?_ADC_getval:
   350                           	callstack 0
   351   000001                     ?___wmul:
   352                           	callstack 0
   353   000001                     ?___awdiv:
   354                           	callstack 0
   355   000001                     ?___awmod:
   356                           	callstack 0
   357   000001                     sendCharSerial4@charToSend:
   358                           	callstack 0
   359   000001                     ___wmul@multiplier:
   360                           	callstack 0
   361   000001                     ___awdiv@dividend:
   362                           	callstack 0
   363   000001                     ___awmod@dividend:
   364                           	callstack 0
   365   000001                     fputc@c:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x0
   369   000001                     	ds	1
   370   000002                     ??_I2C_2_Master_Read:
   371   000002                     I2C_2_Master_Write@data_byte:
   372                           	callstack 0
   373   000002                     sendStringSerial4@string:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x1
   377   000002                     	ds	1
   378   000003                     color_writetoaddr@value:
   379                           	callstack 0
   380   000003                     I2C_2_Master_Read@ack:
   381                           	callstack 0
   382   000003                     fputc@fp:
   383                           	callstack 0
   384   000003                     ADC_getval@tmpval:
   385                           	callstack 0
   386   000003                     ___wmul@multiplicand:
   387                           	callstack 0
   388   000003                     ___awdiv@divisor:
   389                           	callstack 0
   390   000003                     ___awmod@divisor:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x2
   394   000003                     	ds	1
   395   000004                     ??_fputc:
   396   000004                     color_writetoaddr@address:
   397                           	callstack 0
   398   000004                     I2C_2_Master_Read@tmp:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x3
   402   000004                     	ds	1
   403   000005                     ??_color_click_init:
   404   000005                     ?_color_read_Red:
   405                           	callstack 0
   406   000005                     ?_color_read_Green:
   407                           	callstack 0
   408   000005                     ?_color_read_Blue:
   409                           	callstack 0
   410   000005                     ?_color_read_Clear:
   411                           	callstack 0
   412   000005                     ___awdiv@counter:
   413                           	callstack 0
   414   000005                     ___awmod@counter:
   415                           	callstack 0
   416   000005                     ___wmul@product:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x4
   420   000005                     	ds	1
   421   000006                     ___awdiv@sign:
   422                           	callstack 0
   423   000006                     ___awmod@sign:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x5
   427   000006                     	ds	1
   428   000007                     ??_color_read_Red:
   429   000007                     ??_color_read_Green:
   430   000007                     ??_color_read_Blue:
   431   000007                     ??_color_read_Clear:
   432   000007                     ?_abs:
   433                           	callstack 0
   434   000007                     ?___lwdiv:
   435                           	callstack 0
   436   000007                     ?_read_prec_or_width:
   437                           	callstack 0
   438   000007                     read_prec_or_width@fmt:
   439                           	callstack 0
   440   000007                     ___awdiv@quotient:
   441                           	callstack 0
   442   000007                     ___lwdiv@dividend:
   443                           	callstack 0
   444   000007                     abs@a:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x6
   448   000007                     	ds	1
   449   000008                     read_prec_or_width@ap:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x7
   453   000008                     	ds	1
   454   000009                     ??_abs:
   455   000009                     read_prec_or_width@c:
   456                           	callstack 0
   457   000009                     ___lwdiv@divisor:
   458                           	callstack 0
   459   000009                     fputs@s:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x8
   463   000009                     	ds	1
   464   00000A                     color_read_Red@tmp:
   465                           	callstack 0
   466   00000A                     color_read_Green@tmp:
   467                           	callstack 0
   468   00000A                     color_read_Blue@tmp:
   469                           	callstack 0
   470   00000A                     color_read_Clear@tmp:
   471                           	callstack 0
   472   00000A                     read_prec_or_width@n:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x9
   476   00000A                     	ds	1
   477   00000B                     ___lwdiv@counter:
   478                           	callstack 0
   479   00000B                     fputs@fp:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0xA
   483   00000B                     	ds	1
   484   00000C                     fputs@c:
   485                           	callstack 0
   486   00000C                     ___lwdiv@quotient:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xB
   490   00000C                     	ds	1
   491   00000D                     fputs@i:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xC
   495   00000D                     	ds	2
   496   00000F                     pad@fp:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0xE
   500   00000F                     	ds	1
   501   000010                     pad@buf:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505   000010                     	ds	2
   506   000012                     pad@p:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x11
   510   000012                     	ds	2
   511   000014                     ??_pad:
   512                           
   513                           ; 1 bytes @ 0x13
   514   000014                     	ds	1
   515   000015                     pad@i:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x14
   519   000015                     	ds	2
   520   000017                     dtoa@fp:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x16
   524   000017                     	ds	1
   525   000018                     dtoa@d:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x17
   529   000018                     	ds	2
   530   00001A                     _dtoa$1251:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x19
   534   00001A                     	ds	2
   535   00001C                     dtoa@p:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x1B
   539   00001C                     	ds	1
   540   00001D                     dtoa@w:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1C
   544   00001D                     	ds	2
   545   00001F                     dtoa@s:
   546                           	callstack 0
   547                           
   548                           ; 1 bytes @ 0x1E
   549   00001F                     	ds	1
   550   000020                     dtoa@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1F
   554   000020                     	ds	2
   555   000022                     vfpfcnvrt@fp:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x21
   559   000022                     	ds	1
   560   000023                     vfpfcnvrt@fmt:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x22
   564   000023                     	ds	1
   565   000024                     vfpfcnvrt@ap:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x23
   569   000024                     	ds	1
   570   000025                     ??_vfpfcnvrt:
   571                           
   572                           ; 1 bytes @ 0x24
   573   000025                     	ds	2
   574   000027                     vfpfcnvrt@convarg:
   575                           	callstack 0
   576                           
   577                           ; 4 bytes @ 0x26
   578   000027                     	ds	4
   579   00002B                     vfpfcnvrt@done:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x2A
   583   00002B                     	ds	1
   584   00002C                     vfpfcnvrt@cp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x2B
   588   00002C                     	ds	1
   589   00002D                     ?_vfprintf:
   590                           	callstack 0
   591   00002D                     vfprintf@fp:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x2C
   595   00002D                     	ds	1
   596   00002E                     vfprintf@fmt:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x2D
   600   00002E                     	ds	1
   601   00002F                     vfprintf@ap:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x2E
   605   00002F                     	ds	1
   606   000030                     vfprintf@cfmt:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x2F
   610   000030                     	ds	1
   611   000031                     ?_sprintf:
   612                           	callstack 0
   613   000031                     sprintf@s:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x30
   617   000031                     	ds	2
   618   000033                     sprintf@fmt:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x32
   622   000033                     	ds	5
   623   000038                     sprintf@ap:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x37
   627   000038                     	ds	1
   628   000039                     sprintf@f:
   629                           	callstack 0
   630                           
   631                           ; 12 bytes @ 0x38
   632   000039                     	ds	12
   633   000045                     ADC2String@buf:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x44
   637   000045                     	ds	1
   638   000046                     ADC2String@ADC_val:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x45
   642   000046                     	ds	2
   643   000048                     ??_ADC2String:
   644                           
   645                           ; 1 bytes @ 0x47
   646   000048                     	ds	2
   647   00004A                     ADC2String@frac_part:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x49
   651   00004A                     	ds	2
   652   00004C                     ADC2String@int_part:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x4B
   656   00004C                     	ds	2
   657   00004E                     main@battery_level:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x4D
   661   00004E                     	ds	2
   662   000050                     main@red:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x4F
   666   000050                     	ds	2
   667   000052                     main@blue:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x51
   671   000052                     	ds	2
   672   000054                     main@green:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x53
   676   000054                     	ds	2
   677                           
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 26 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  clear_char     50   50[BANK1 ] unsigned char [50]
   688 ;;  green_char     50    0[BANK1 ] unsigned char [50]
   689 ;;  blue_char      50  100[BANK0 ] unsigned char [50]
   690 ;;  red_char       50   50[BANK0 ] unsigned char [50]
   691 ;;  buf            50    0[BANK0 ] unsigned char [50]
   692 ;;  clear           2  150[BANK0 ] unsigned int 
   693 ;;  green           2   83[COMRAM] unsigned int 
   694 ;;  blue            2   81[COMRAM] unsigned int 
   695 ;;  red             2   79[COMRAM] unsigned int 
   696 ;;  battery_leve    2   77[COMRAM] unsigned int 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Locals:         8     152     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Totals:         8     152     100       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;Total ram usage:      260 bytes
   711 ;; Hardware stack levels required when called: 9
   712 ;; This function calls:
   713 ;;		_ADC2String
   714 ;;		_ADC_getval
   715 ;;		_ADC_init
   716 ;;		_color_click_init
   717 ;;		_color_read_Blue
   718 ;;		_color_read_Clear
   719 ;;		_color_read_Green
   720 ;;		_color_read_Red
   721 ;;		_initUSART4
   722 ;;		_sendStringSerial4
   723 ;;		_sprintf
   724 ;; This function is called by:
   725 ;;		Startup code after reset
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text0
   730   001140                     __ptext0:
   731                           	callstack 0
   732   001140                     _main:
   733                           	callstack 22
   734   001140                     
   735                           ;main.c: 28:     ADC_init();
   736   001140  EC5C  F00D         	call	_ADC_init	;wreg free
   737   001144                     
   738                           ;main.c: 29:     color_click_init();
   739   001144  ECB5  F00C         	call	_color_click_init	;wreg free
   740   001148                     
   741                           ;main.c: 30:     initUSART4();
   742   001148  EC4D  F00D         	call	_initUSART4	;wreg free
   743   00114C                     
   744                           ;main.c: 34:     LATDbits.LATD7=0;
   745   00114C  9E7C               	bcf	124,7,c	;volatile
   746   00114E                     
   747                           ;main.c: 35:     TRISDbits.TRISD7=0;
   748   00114E  9E84               	bcf	132,7,c	;volatile
   749   001150                     l148:
   750                           
   751                           ;main.c: 54:         battery_level = ADC_getval();
   752   001150  ECE9  F00C         	call	_ADC_getval	;wreg free
   753   001154  C001  F04E         	movff	?_ADC_getval,main@battery_level
   754   001158  C002  F04F         	movff	?_ADC_getval+1,main@battery_level+1
   755                           
   756                           ;main.c: 56:         red = color_read_Red();
   757   00115C  EC5E  F00B         	call	_color_read_Red	;wreg free
   758   001160  C005  F050         	movff	?_color_read_Red,main@red
   759   001164  C006  F051         	movff	?_color_read_Red+1,main@red+1
   760                           
   761                           ;main.c: 57:         blue = color_read_Blue();
   762   001168  ECD6  F00B         	call	_color_read_Blue	;wreg free
   763   00116C  C005  F052         	movff	?_color_read_Blue,main@blue
   764   001170  C006  F053         	movff	?_color_read_Blue+1,main@blue+1
   765                           
   766                           ;main.c: 58:         green = color_read_Green();
   767   001174  EC86  F00B         	call	_color_read_Green	;wreg free
   768   001178  C005  F054         	movff	?_color_read_Green,main@green
   769   00117C  C006  F055         	movff	?_color_read_Green+1,main@green+1
   770                           
   771                           ;main.c: 59:         clear = color_read_Clear();
   772   001180  ECAE  F00B         	call	_color_read_Clear	;wreg free
   773   001184  C005  F0F6         	movff	?_color_read_Clear,main@clear
   774   001188  C006  F0F7         	movff	?_color_read_Clear+1,main@clear+1
   775   00118C                     
   776                           ;main.c: 62:         ADC2String(buf, battery_level);
   777   00118C  0E60               	movlw	low main@buf
   778   00118E  6E45               	movwf	ADC2String@buf^0,c
   779   001190  C04E  F046         	movff	main@battery_level,ADC2String@ADC_val
   780   001194  C04F  F047         	movff	main@battery_level+1,ADC2String@ADC_val+1
   781   001198  EC89  F00A         	call	_ADC2String	;wreg free
   782   00119C                     
   783                           ;main.c: 63:         sprintf(red_char,"Red=%d,  ",red);
   784   00119C  0E92               	movlw	low main@red_char
   785   00119E  6E31               	movwf	sprintf@s^0,c
   786   0011A0  6A32               	clrf	(sprintf@s+1)^0,c
   787   0011A2  0E3B               	movlw	low STR_1
   788   0011A4  6E33               	movwf	sprintf@fmt^0,c
   789   0011A6  C050  F034         	movff	main@red,?_sprintf+3
   790   0011AA  C051  F035         	movff	main@red+1,?_sprintf+4
   791   0011AE  EC60  F00C         	call	_sprintf	;wreg free
   792   0011B2                     
   793                           ;main.c: 64:         sprintf(blue_char,"Blue=%d,  ",blue);
   794   0011B2  0EC4               	movlw	low main@blue_char
   795   0011B4  6E31               	movwf	sprintf@s^0,c
   796   0011B6  6A32               	clrf	(sprintf@s+1)^0,c
   797   0011B8  0E30               	movlw	low STR_2
   798   0011BA  6E33               	movwf	sprintf@fmt^0,c
   799   0011BC  C052  F034         	movff	main@blue,?_sprintf+3
   800   0011C0  C053  F035         	movff	main@blue+1,?_sprintf+4
   801   0011C4  EC60  F00C         	call	_sprintf	;wreg free
   802   0011C8                     
   803                           ;main.c: 65:         sprintf(green_char,"Green=%d,  ",green);
   804   0011C8  0E84               	movlw	low main@green_char
   805   0011CA  6E31               	movwf	sprintf@s^0,c
   806   0011CC  0E01               	movlw	high main@green_char
   807   0011CE  6E32               	movwf	(sprintf@s+1)^0,c
   808   0011D0  0E24               	movlw	low STR_3
   809   0011D2  6E33               	movwf	sprintf@fmt^0,c
   810   0011D4  C054  F034         	movff	main@green,?_sprintf+3
   811   0011D8  C055  F035         	movff	main@green+1,?_sprintf+4
   812   0011DC  EC60  F00C         	call	_sprintf	;wreg free
   813   0011E0                     
   814                           ;main.c: 66:         sprintf(clear_char,"Clear=%d,  \r\n",clear);
   815   0011E0  0EB6               	movlw	low main@clear_char
   816   0011E2  6E31               	movwf	sprintf@s^0,c
   817   0011E4  0E01               	movlw	high main@clear_char
   818   0011E6  6E32               	movwf	(sprintf@s+1)^0,c
   819   0011E8  0E16               	movlw	low STR_4
   820   0011EA  6E33               	movwf	sprintf@fmt^0,c
   821   0011EC  C0F6  F034         	movff	main@clear,?_sprintf+3
   822   0011F0  C0F7  F035         	movff	main@clear+1,?_sprintf+4
   823   0011F4  EC60  F00C         	call	_sprintf	;wreg free
   824   0011F8                     
   825                           ;main.c: 69:         sendStringSerial4(buf);
   826   0011F8  0E60               	movlw	low main@buf
   827   0011FA  6E02               	movwf	sendStringSerial4@string^0,c
   828   0011FC  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   829   0011FE  EC7E  F00C         	call	_sendStringSerial4	;wreg free
   830   001202                     
   831                           ;main.c: 70:         sendStringSerial4(red_char);
   832   001202  0E92               	movlw	low main@red_char
   833   001204  6E02               	movwf	sendStringSerial4@string^0,c
   834   001206  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   835   001208  EC7E  F00C         	call	_sendStringSerial4	;wreg free
   836   00120C                     
   837                           ;main.c: 71:         sendStringSerial4(blue_char);
   838   00120C  0EC4               	movlw	low main@blue_char
   839   00120E  6E02               	movwf	sendStringSerial4@string^0,c
   840   001210  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   841   001212  EC7E  F00C         	call	_sendStringSerial4	;wreg free
   842   001216                     
   843                           ;main.c: 72:         sendStringSerial4(green_char);
   844   001216  0E84               	movlw	low main@green_char
   845   001218  6E02               	movwf	sendStringSerial4@string^0,c
   846   00121A  0E01               	movlw	high main@green_char
   847   00121C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   848   00121E  EC7E  F00C         	call	_sendStringSerial4	;wreg free
   849   001222                     
   850                           ;main.c: 73:         sendStringSerial4(clear_char);
   851   001222  0EB6               	movlw	low main@clear_char
   852   001224  6E02               	movwf	sendStringSerial4@string^0,c
   853   001226  0E01               	movlw	high main@clear_char
   854   001228  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   855   00122A  EC7E  F00C         	call	_sendStringSerial4	;wreg free
   856   00122E  EFA8  F008         	goto	l148
   857   001232  EF00  F000         	goto	start
   858   001236                     __end_of_main:
   859                           	callstack 0
   860                           
   861 ;; *************** function _sendStringSerial4 *****************
   862 ;; Defined at:
   863 ;;		line 41 in file "serial.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;  string          2    1[COMRAM] PTR unsigned char 
   866 ;;		 -> sendAllReadings@buffer(10), main@clear_char(50), main@green_char(50), main@blue_char(50), 
   867 ;;		 -> main@red_char(50), main@buf(50), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   883 ;;Total ram usage:        2 bytes
   884 ;; Hardware stack levels used: 1
   885 ;; Hardware stack levels required when called: 1
   886 ;; This function calls:
   887 ;;		_sendCharSerial4
   888 ;; This function is called by:
   889 ;;		_main
   890 ;;		_sendAllReadings
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895   0018FC                     __ptext1:
   896                           	callstack 0
   897   0018FC                     _sendStringSerial4:
   898                           	callstack 29
   899   0018FC                     
   900                           ;serial.c: 44:     while(*string != 0){
   901   0018FC  EF8D  F00C         	goto	l2557
   902   001900                     l2551:
   903                           
   904                           ;serial.c: 46:   sendCharSerial4(*string++);
   905   001900  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   906   001904  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   907   001908  50DF               	movf	indf2,w,c
   908   00190A  EC69  F00D         	call	_sendCharSerial4
   909   00190E  4A02               	infsnz	sendStringSerial4@string^0,f,c
   910   001910  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
   911   001912                     
   912                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
   913   001912  0E6A               	movlw	106
   914   001914                     u1687:
   915   001914  2EE8               	decfsz	wreg,f,c
   916   001916  D7FE               	bra	u1687
   917   001918  D000               	nop2	
   918   00191A                     l2557:
   919                           
   920                           ;serial.c: 44:     while(*string != 0){
   921   00191A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   922   00191E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   923   001922  50DF               	movf	indf2,w,c
   924   001924  A4D8               	btfss	status,2,c
   925   001926  EF97  F00C         	goto	u1661
   926   00192A  EF99  F00C         	goto	u1660
   927   00192E                     u1661:
   928   00192E  EF80  F00C         	goto	l2551
   929   001932                     u1660:
   930   001932  0012               	return		;funcret
   931   001934                     __end_of_sendStringSerial4:
   932                           	callstack 0
   933                           
   934 ;; *************** function _sendCharSerial4 *****************
   935 ;; Defined at:
   936 ;;		line 35 in file "serial.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  charToSend      1    wreg     unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  charToSend      1    0[COMRAM] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   954 ;;Total ram usage:        1 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_sendStringSerial4
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text2
   964   001AD2                     __ptext2:
   965                           	callstack 0
   966   001AD2                     _sendCharSerial4:
   967                           	callstack 29
   968                           
   969                           ;incstack = 0
   970                           ;sendCharSerial4@charToSend stored from wreg
   971   001AD2  6E01               	movwf	sendCharSerial4@charToSend^0,c
   972   001AD4                     l211:
   973   001AD4  010E               	movlb	14	; () banked
   974   001AD6  A537               	btfss	55,2,b	;volatile
   975   001AD8  EF70  F00D         	goto	u1611
   976   001ADC  EF72  F00D         	goto	u1610
   977   001AE0                     u1611:
   978   001AE0  EF6A  F00D         	goto	l211
   979   001AE4                     u1610:
   980   001AE4                     
   981                           ; BSR set to: 14
   982                           ;serial.c: 37:     TX4REG = charToSend;
   983   001AE4  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
   984   001AE8                     
   985                           ; BSR set to: 14
   986   001AE8  0012               	return		;funcret
   987   001AEA                     __end_of_sendCharSerial4:
   988                           	callstack 0
   989                           
   990 ;; *************** function _initUSART4 *****************
   991 ;; Defined at:
   992 ;;		line 14 in file "serial.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, status,2
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text3
  1020   001A9A                     __ptext3:
  1021                           	callstack 0
  1022   001A9A                     _initUSART4:
  1023                           	callstack 30
  1024   001A9A                     
  1025                           ;serial.c: 15:     RC0PPS = 0x12;
  1026   001A9A  0E12               	movlw	18
  1027   001A9C  010E               	movlb	14	; () banked
  1028   001A9E  6F62               	movwf	98,b	;volatile
  1029                           
  1030                           ;serial.c: 16:     RX4PPS = 0x11;
  1031   001AA0  0E11               	movlw	17
  1032   001AA2  6F15               	movwf	21,b	;volatile
  1033   001AA4                     
  1034                           ; BSR set to: 14
  1035                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  1036   001AA4  97E9               	bcf	233,3,b	;volatile
  1037   001AA6                     
  1038                           ; BSR set to: 14
  1039                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  1040   001AA6  95E8               	bcf	232,2,b	;volatile
  1041                           
  1042                           ;serial.c: 19:     SP4BRGL = 51;
  1043   001AA8  0E33               	movlw	51
  1044   001AAA  6FE5               	movwf	229,b	;volatile
  1045                           
  1046                           ;serial.c: 20:     SP4BRGH = 0;
  1047   001AAC  0E00               	movlw	0
  1048   001AAE  6FE6               	movwf	230,b	;volatile
  1049   001AB0                     
  1050                           ; BSR set to: 14
  1051                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  1052   001AB0  89E7               	bsf	231,4,b	;volatile
  1053   001AB2                     
  1054                           ; BSR set to: 14
  1055                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  1056   001AB2  8BE8               	bsf	232,5,b	;volatile
  1057   001AB4                     
  1058                           ; BSR set to: 14
  1059                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  1060   001AB4  8FE7               	bsf	231,7,b	;volatile
  1061   001AB6                     
  1062                           ; BSR set to: 14
  1063   001AB6  0012               	return		;funcret
  1064   001AB8                     __end_of_initUSART4:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _color_read_Red *****************
  1068 ;; Defined at:
  1069 ;;		line 29 in file "color.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  tmp             2    9[COMRAM] unsigned int 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    4[COMRAM] unsigned int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1085 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;Total ram usage:        7 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 2
  1090 ;; This function calls:
  1091 ;;		_I2C_2_Master_Read
  1092 ;;		_I2C_2_Master_RepStart
  1093 ;;		_I2C_2_Master_Start
  1094 ;;		_I2C_2_Master_Stop
  1095 ;;		_I2C_2_Master_Write
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text4
  1102   0016BC                     __ptext4:
  1103                           	callstack 0
  1104   0016BC                     _color_read_Red:
  1105                           	callstack 28
  1106   0016BC                     
  1107                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1108   0016BC  EC85  F00D         	call	_I2C_2_Master_Start	;wreg free
  1109                           
  1110                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1111   0016C0  0E52               	movlw	82
  1112   0016C2  EC75  F00D         	call	_I2C_2_Master_Write
  1113                           
  1114                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1115   0016C6  0EB6               	movlw	182
  1116   0016C8  EC75  F00D         	call	_I2C_2_Master_Write
  1117                           
  1118                           ;color.c: 35:  I2C_2_Master_RepStart();
  1119   0016CC  EC7B  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1120                           
  1121                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1122   0016D0  0E53               	movlw	83
  1123   0016D2  EC75  F00D         	call	_I2C_2_Master_Write
  1124                           
  1125                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1126   0016D6  0E01               	movlw	1
  1127   0016D8  ECFE  F00B         	call	_I2C_2_Master_Read
  1128   0016DC  6E07               	movwf	??_color_read_Red^0,c
  1129   0016DE  5007               	movf	??_color_read_Red^0,w,c
  1130   0016E0  6E0A               	movwf	color_read_Red@tmp^0,c
  1131   0016E2  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1132                           
  1133                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1134   0016E4  0E00               	movlw	0
  1135   0016E6  ECFE  F00B         	call	_I2C_2_Master_Read
  1136   0016EA  6E07               	movwf	??_color_read_Red^0,c
  1137   0016EC  5007               	movf	??_color_read_Red^0,w,c
  1138   0016EE  6E09               	movwf	(??_color_read_Red+2)^0,c
  1139   0016F0  6A08               	clrf	(??_color_read_Red+1)^0,c
  1140   0016F2  500A               	movf	color_read_Red@tmp^0,w,c
  1141   0016F4  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1142   0016F6  6E0A               	movwf	color_read_Red@tmp^0,c
  1143   0016F8  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1144   0016FA  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1145   0016FC  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1146                           
  1147                           ;color.c: 39:  I2C_2_Master_Stop();
  1148   0016FE  EC80  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1149   001702                     
  1150                           ;color.c: 40:  return tmp;
  1151   001702  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1152   001706  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1153   00170A  0012               	return		;funcret
  1154   00170C                     __end_of_color_read_Red:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _color_read_Green *****************
  1158 ;; Defined at:
  1159 ;;		line 43 in file "color.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  tmp             2    9[COMRAM] unsigned int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2    4[COMRAM] unsigned int 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1175 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1176 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;Total ram usage:        7 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 2
  1180 ;; This function calls:
  1181 ;;		_I2C_2_Master_Read
  1182 ;;		_I2C_2_Master_RepStart
  1183 ;;		_I2C_2_Master_Start
  1184 ;;		_I2C_2_Master_Stop
  1185 ;;		_I2C_2_Master_Write
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text5
  1192   00170C                     __ptext5:
  1193                           	callstack 0
  1194   00170C                     _color_read_Green:
  1195                           	callstack 28
  1196   00170C                     
  1197                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  1198   00170C  EC85  F00D         	call	_I2C_2_Master_Start	;wreg free
  1199                           
  1200                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  1201   001710  0E52               	movlw	82
  1202   001712  EC75  F00D         	call	_I2C_2_Master_Write
  1203                           
  1204                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  1205   001716  0EB8               	movlw	184
  1206   001718  EC75  F00D         	call	_I2C_2_Master_Write
  1207                           
  1208                           ;color.c: 49:  I2C_2_Master_RepStart();
  1209   00171C  EC7B  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1210                           
  1211                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  1212   001720  0E53               	movlw	83
  1213   001722  EC75  F00D         	call	_I2C_2_Master_Write
  1214                           
  1215                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  1216   001726  0E01               	movlw	1
  1217   001728  ECFE  F00B         	call	_I2C_2_Master_Read
  1218   00172C  6E07               	movwf	??_color_read_Green^0,c
  1219   00172E  5007               	movf	??_color_read_Green^0,w,c
  1220   001730  6E0A               	movwf	color_read_Green@tmp^0,c
  1221   001732  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1222                           
  1223                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1224   001734  0E00               	movlw	0
  1225   001736  ECFE  F00B         	call	_I2C_2_Master_Read
  1226   00173A  6E07               	movwf	??_color_read_Green^0,c
  1227   00173C  5007               	movf	??_color_read_Green^0,w,c
  1228   00173E  6E09               	movwf	(??_color_read_Green+2)^0,c
  1229   001740  6A08               	clrf	(??_color_read_Green+1)^0,c
  1230   001742  500A               	movf	color_read_Green@tmp^0,w,c
  1231   001744  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1232   001746  6E0A               	movwf	color_read_Green@tmp^0,c
  1233   001748  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1234   00174A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1235   00174C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1236                           
  1237                           ;color.c: 53:  I2C_2_Master_Stop();
  1238   00174E  EC80  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1239   001752                     
  1240                           ;color.c: 54:  return tmp;
  1241   001752  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1242   001756  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1243   00175A  0012               	return		;funcret
  1244   00175C                     __end_of_color_read_Green:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _color_read_Clear *****************
  1248 ;; Defined at:
  1249 ;;		line 72 in file "color.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  tmp             2    9[COMRAM] unsigned int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  2    4[COMRAM] unsigned int 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;Total ram usage:        7 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 2
  1270 ;; This function calls:
  1271 ;;		_I2C_2_Master_Read
  1272 ;;		_I2C_2_Master_RepStart
  1273 ;;		_I2C_2_Master_Start
  1274 ;;		_I2C_2_Master_Stop
  1275 ;;		_I2C_2_Master_Write
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text6
  1282   00175C                     __ptext6:
  1283                           	callstack 0
  1284   00175C                     _color_read_Clear:
  1285                           	callstack 28
  1286   00175C                     
  1287                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  1288   00175C  EC85  F00D         	call	_I2C_2_Master_Start	;wreg free
  1289                           
  1290                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  1291   001760  0E52               	movlw	82
  1292   001762  EC75  F00D         	call	_I2C_2_Master_Write
  1293                           
  1294                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x14);
  1295   001766  0EB4               	movlw	180
  1296   001768  EC75  F00D         	call	_I2C_2_Master_Write
  1297                           
  1298                           ;color.c: 78:  I2C_2_Master_RepStart();
  1299   00176C  EC7B  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1300                           
  1301                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  1302   001770  0E53               	movlw	83
  1303   001772  EC75  F00D         	call	_I2C_2_Master_Write
  1304                           
  1305                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  1306   001776  0E01               	movlw	1
  1307   001778  ECFE  F00B         	call	_I2C_2_Master_Read
  1308   00177C  6E07               	movwf	??_color_read_Clear^0,c
  1309   00177E  5007               	movf	??_color_read_Clear^0,w,c
  1310   001780  6E0A               	movwf	color_read_Clear@tmp^0,c
  1311   001782  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1312                           
  1313                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1314   001784  0E00               	movlw	0
  1315   001786  ECFE  F00B         	call	_I2C_2_Master_Read
  1316   00178A  6E07               	movwf	??_color_read_Clear^0,c
  1317   00178C  5007               	movf	??_color_read_Clear^0,w,c
  1318   00178E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1319   001790  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1320   001792  500A               	movf	color_read_Clear@tmp^0,w,c
  1321   001794  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1322   001796  6E0A               	movwf	color_read_Clear@tmp^0,c
  1323   001798  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1324   00179A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1325   00179C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1326                           
  1327                           ;color.c: 82:  I2C_2_Master_Stop();
  1328   00179E  EC80  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1329   0017A2                     
  1330                           ;color.c: 83:  return tmp;
  1331   0017A2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1332   0017A6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1333   0017AA  0012               	return		;funcret
  1334   0017AC                     __end_of_color_read_Clear:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _color_read_Blue *****************
  1338 ;; Defined at:
  1339 ;;		line 57 in file "color.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  tmp             2    9[COMRAM] unsigned int 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2    4[COMRAM] unsigned int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;Total ram usage:        7 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 2
  1360 ;; This function calls:
  1361 ;;		_I2C_2_Master_Read
  1362 ;;		_I2C_2_Master_RepStart
  1363 ;;		_I2C_2_Master_Start
  1364 ;;		_I2C_2_Master_Stop
  1365 ;;		_I2C_2_Master_Write
  1366 ;; This function is called by:
  1367 ;;		_main
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text7
  1372   0017AC                     __ptext7:
  1373                           	callstack 0
  1374   0017AC                     _color_read_Blue:
  1375                           	callstack 28
  1376   0017AC                     
  1377                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  1378   0017AC  EC85  F00D         	call	_I2C_2_Master_Start	;wreg free
  1379                           
  1380                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  1381   0017B0  0E52               	movlw	82
  1382   0017B2  EC75  F00D         	call	_I2C_2_Master_Write
  1383                           
  1384                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  1385   0017B6  0EBA               	movlw	186
  1386   0017B8  EC75  F00D         	call	_I2C_2_Master_Write
  1387                           
  1388                           ;color.c: 63:  I2C_2_Master_RepStart();
  1389   0017BC  EC7B  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1390                           
  1391                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  1392   0017C0  0E53               	movlw	83
  1393   0017C2  EC75  F00D         	call	_I2C_2_Master_Write
  1394                           
  1395                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  1396   0017C6  0E01               	movlw	1
  1397   0017C8  ECFE  F00B         	call	_I2C_2_Master_Read
  1398   0017CC  6E07               	movwf	??_color_read_Blue^0,c
  1399   0017CE  5007               	movf	??_color_read_Blue^0,w,c
  1400   0017D0  6E0A               	movwf	color_read_Blue@tmp^0,c
  1401   0017D2  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1402                           
  1403                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1404   0017D4  0E00               	movlw	0
  1405   0017D6  ECFE  F00B         	call	_I2C_2_Master_Read
  1406   0017DA  6E07               	movwf	??_color_read_Blue^0,c
  1407   0017DC  5007               	movf	??_color_read_Blue^0,w,c
  1408   0017DE  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1409   0017E0  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1410   0017E2  500A               	movf	color_read_Blue@tmp^0,w,c
  1411   0017E4  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1412   0017E6  6E0A               	movwf	color_read_Blue@tmp^0,c
  1413   0017E8  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1414   0017EA  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1415   0017EC  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1416                           
  1417                           ;color.c: 67:  I2C_2_Master_Stop();
  1418   0017EE  EC80  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1419   0017F2                     
  1420                           ;color.c: 68:  return tmp;
  1421   0017F2  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1422   0017F6  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1423   0017FA  0012               	return		;funcret
  1424   0017FC                     __end_of_color_read_Blue:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _I2C_2_Master_RepStart *****************
  1428 ;; Defined at:
  1429 ;;		line 33 in file "i2c.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 1
  1450 ;; This function calls:
  1451 ;;		_I2C_2_Master_Idle
  1452 ;; This function is called by:
  1453 ;;		_color_read_Red
  1454 ;;		_color_read_Green
  1455 ;;		_color_read_Blue
  1456 ;;		_color_read_Clear
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text8
  1461   001AF6                     __ptext8:
  1462                           	callstack 0
  1463   001AF6                     _I2C_2_Master_RepStart:
  1464                           	callstack 28
  1465   001AF6                     
  1466                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1467   001AF6  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1468   001AFA                     
  1469                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1470   001AFA  010E               	movlb	14	; () banked
  1471   001AFC  83DA               	bsf	218,1,b	;volatile
  1472   001AFE                     
  1473                           ; BSR set to: 14
  1474   001AFE  0012               	return		;funcret
  1475   001B00                     __end_of_I2C_2_Master_RepStart:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _I2C_2_Master_Read *****************
  1479 ;; Defined at:
  1480 ;;		line 51 in file "i2c.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  ack             1    wreg     unsigned char 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  ack             1    2[COMRAM] unsigned char 
  1485 ;;  tmp             1    3[COMRAM] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      unsigned char 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:        3 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		_I2C_2_Master_Idle
  1504 ;; This function is called by:
  1505 ;;		_color_read_Red
  1506 ;;		_color_read_Green
  1507 ;;		_color_read_Blue
  1508 ;;		_color_read_Clear
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text9
  1513   0017FC                     __ptext9:
  1514                           	callstack 0
  1515   0017FC                     _I2C_2_Master_Read:
  1516                           	callstack 28
  1517                           
  1518                           ; BSR set to: 14
  1519                           ;incstack = 0
  1520                           ;I2C_2_Master_Read@ack stored from wreg
  1521   0017FC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1522   0017FE                     
  1523                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1524   0017FE  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1525   001802                     
  1526                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1527   001802  010E               	movlb	14	; () banked
  1528   001804  87DA               	bsf	218,3,b	;volatile
  1529                           
  1530                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1531   001806  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1532   00180A                     
  1533                           ;i2c.c: 57:   tmp = SSP2BUF;
  1534   00180A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1535                           
  1536                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1537   00180E  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1538   001812                     
  1539                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1540   001812  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1541   001814  B4D8               	btfsc	status,2,c
  1542   001816  EF0F  F00C         	goto	u1591
  1543   00181A  EF13  F00C         	goto	u1590
  1544   00181E                     u1591:
  1545   00181E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1546   001820  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1547   001822  EF14  F00C         	goto	u1608
  1548   001826                     u1590:
  1549   001826  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1550   001828                     u1608:
  1551   001828  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1552   00182A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1553   00182C  010E               	movlb	14	; () banked
  1554   00182E  51DA               	movf	218,w,b	;volatile
  1555   001830  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1556   001832  0BDF               	andlw	-33
  1557   001834  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1558   001836  6FDA               	movwf	218,b	;volatile
  1559   001838                     
  1560                           ; BSR set to: 14
  1561                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1562   001838  89DA               	bsf	218,4,b	;volatile
  1563   00183A                     
  1564                           ; BSR set to: 14
  1565                           ;i2c.c: 61:   return tmp;
  1566   00183A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1567   00183C                     
  1568                           ; BSR set to: 14
  1569   00183C  0012               	return		;funcret
  1570   00183E                     __end_of_I2C_2_Master_Read:
  1571                           	callstack 0
  1572                           
  1573 ;; *************** function _color_click_init *****************
  1574 ;; Defined at:
  1575 ;;		line 5 in file "color.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 3
  1596 ;; This function calls:
  1597 ;;		_I2C_2_Master_Init
  1598 ;;		_color_writetoaddr
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text10
  1605   00196A                     __ptext10:
  1606                           	callstack 0
  1607   00196A                     _color_click_init:
  1608                           	callstack 27
  1609   00196A                     
  1610                           ;color.c: 8:     I2C_2_Master_Init();
  1611   00196A  EC01  F00D         	call	_I2C_2_Master_Init	;wreg free
  1612   00196E                     
  1613                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1614   00196E  0E01               	movlw	1
  1615   001970  6E03               	movwf	color_writetoaddr@value^0,c
  1616   001972  0E00               	movlw	0
  1617   001974  EC3D  F00D         	call	_color_writetoaddr
  1618   001978                     
  1619                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1620   001978  0E3F               	movlw	63
  1621   00197A  6E05               	movwf	??_color_click_init^0,c
  1622   00197C  0E55               	movlw	85
  1623   00197E                     u1697:
  1624   00197E  2EE8               	decfsz	wreg,f,c
  1625   001980  D7FE               	bra	u1697
  1626   001982  2E05               	decfsz	??_color_click_init^0,f,c
  1627   001984  D7FC               	bra	u1697
  1628   001986  0000               	nop	
  1629   001988                     
  1630                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1631   001988  0E03               	movlw	3
  1632   00198A  6E03               	movwf	color_writetoaddr@value^0,c
  1633   00198C  0E00               	movlw	0
  1634   00198E  EC3D  F00D         	call	_color_writetoaddr
  1635   001992                     
  1636                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1637   001992  0ED5               	movlw	213
  1638   001994  6E03               	movwf	color_writetoaddr@value^0,c
  1639   001996  0E01               	movlw	1
  1640   001998  EC3D  F00D         	call	_color_writetoaddr
  1641   00199C  0012               	return		;funcret
  1642   00199E                     __end_of_color_click_init:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _color_writetoaddr *****************
  1646 ;; Defined at:
  1647 ;;		line 21 in file "color.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  address         1    wreg     unsigned char 
  1650 ;;  value           1    2[COMRAM] unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  address         1    3[COMRAM] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1662 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;Total ram usage:        2 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 2
  1669 ;; This function calls:
  1670 ;;		_I2C_2_Master_Start
  1671 ;;		_I2C_2_Master_Stop
  1672 ;;		_I2C_2_Master_Write
  1673 ;; This function is called by:
  1674 ;;		_color_click_init
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text11
  1679   001A7A                     __ptext11:
  1680                           	callstack 0
  1681   001A7A                     _color_writetoaddr:
  1682                           	callstack 27
  1683                           
  1684                           ;incstack = 0
  1685                           ;color_writetoaddr@address stored from wreg
  1686   001A7A  6E04               	movwf	color_writetoaddr@address^0,c
  1687   001A7C                     
  1688                           ;color.c: 22:     I2C_2_Master_Start();
  1689   001A7C  EC85  F00D         	call	_I2C_2_Master_Start	;wreg free
  1690                           
  1691                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1692   001A80  0E52               	movlw	82
  1693   001A82  EC75  F00D         	call	_I2C_2_Master_Write
  1694                           
  1695                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1696   001A86  5004               	movf	color_writetoaddr@address^0,w,c
  1697   001A88  0980               	iorlw	128
  1698   001A8A  EC75  F00D         	call	_I2C_2_Master_Write
  1699                           
  1700                           ;color.c: 25:     I2C_2_Master_Write(value);
  1701   001A8E  5003               	movf	color_writetoaddr@value^0,w,c
  1702   001A90  EC75  F00D         	call	_I2C_2_Master_Write
  1703                           
  1704                           ;color.c: 26:     I2C_2_Master_Stop();
  1705   001A94  EC80  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1706   001A98  0012               	return		;funcret
  1707   001A9A                     __end_of_color_writetoaddr:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _I2C_2_Master_Write *****************
  1711 ;; Defined at:
  1712 ;;		line 45 in file "i2c.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  data_byte       1    wreg     unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  data_byte       1    1[COMRAM] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1729 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1730 ;;Total ram usage:        1 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 1
  1733 ;; This function calls:
  1734 ;;		_I2C_2_Master_Idle
  1735 ;; This function is called by:
  1736 ;;		_color_writetoaddr
  1737 ;;		_color_read_Red
  1738 ;;		_color_read_Green
  1739 ;;		_color_read_Blue
  1740 ;;		_color_read_Clear
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text12
  1745   001AEA                     __ptext12:
  1746                           	callstack 0
  1747   001AEA                     _I2C_2_Master_Write:
  1748                           	callstack 28
  1749                           
  1750                           ;incstack = 0
  1751                           ;I2C_2_Master_Write@data_byte stored from wreg
  1752   001AEA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1753   001AEC                     
  1754                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1755   001AEC  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1756   001AF0                     
  1757                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1758   001AF0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1759   001AF4  0012               	return		;funcret
  1760   001AF6                     __end_of_I2C_2_Master_Write:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _I2C_2_Master_Stop *****************
  1764 ;; Defined at:
  1765 ;;		line 39 in file "i2c.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;Total ram usage:        0 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 1
  1786 ;; This function calls:
  1787 ;;		_I2C_2_Master_Idle
  1788 ;; This function is called by:
  1789 ;;		_color_writetoaddr
  1790 ;;		_color_read_Red
  1791 ;;		_color_read_Green
  1792 ;;		_color_read_Blue
  1793 ;;		_color_read_Clear
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text13
  1798   001B00                     __ptext13:
  1799                           	callstack 0
  1800   001B00                     _I2C_2_Master_Stop:
  1801                           	callstack 28
  1802   001B00                     
  1803                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1804   001B00  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1805   001B04                     
  1806                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1807   001B04  010E               	movlb	14	; () banked
  1808   001B06  85DA               	bsf	218,2,b	;volatile
  1809   001B08                     
  1810                           ; BSR set to: 14
  1811   001B08  0012               	return		;funcret
  1812   001B0A                     __end_of_I2C_2_Master_Stop:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _I2C_2_Master_Start *****************
  1816 ;; Defined at:
  1817 ;;		line 27 in file "i2c.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used: 1
  1837 ;; Hardware stack levels required when called: 1
  1838 ;; This function calls:
  1839 ;;		_I2C_2_Master_Idle
  1840 ;; This function is called by:
  1841 ;;		_color_writetoaddr
  1842 ;;		_color_read_Red
  1843 ;;		_color_read_Green
  1844 ;;		_color_read_Blue
  1845 ;;		_color_read_Clear
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text14
  1850   001B0A                     __ptext14:
  1851                           	callstack 0
  1852   001B0A                     _I2C_2_Master_Start:
  1853                           	callstack 28
  1854   001B0A                     
  1855                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1856   001B0A  EC16  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1857   001B0E                     
  1858                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1859   001B0E  010E               	movlb	14	; () banked
  1860   001B10  81DA               	bsf	218,0,b	;volatile
  1861   001B12                     
  1862                           ; BSR set to: 14
  1863   001B12  0012               	return		;funcret
  1864   001B14                     __end_of_I2C_2_Master_Start:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _I2C_2_Master_Idle *****************
  1868 ;; Defined at:
  1869 ;;		line 22 in file "i2c.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;Total ram usage:        1 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; This function calls:
  1890 ;;		Nothing
  1891 ;; This function is called by:
  1892 ;;		_I2C_2_Master_Start
  1893 ;;		_I2C_2_Master_RepStart
  1894 ;;		_I2C_2_Master_Stop
  1895 ;;		_I2C_2_Master_Write
  1896 ;;		_I2C_2_Master_Read
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text15
  1901   001A2C                     __ptext15:
  1902                           	callstack 0
  1903   001A2C                     _I2C_2_Master_Idle:
  1904                           	callstack 28
  1905   001A2C                     l85:
  1906   001A2C  010E               	movlb	14	; () banked
  1907   001A2E  B5D8               	btfsc	216,2,b	;volatile
  1908   001A30  EF1C  F00D         	goto	u1511
  1909   001A34  EF1E  F00D         	goto	u1510
  1910   001A38                     u1511:
  1911   001A38  EF16  F00D         	goto	l85
  1912   001A3C                     u1510:
  1913   001A3C                     
  1914                           ; BSR set to: 14
  1915   001A3C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1916   001A40  0E1F               	movlw	31
  1917   001A42  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1918   001A44  A4D8               	btfss	status,2,c
  1919   001A46  EF27  F00D         	goto	u1521
  1920   001A4A  EF29  F00D         	goto	u1520
  1921   001A4E                     u1521:
  1922   001A4E  EF16  F00D         	goto	l85
  1923   001A52                     u1520:
  1924   001A52                     
  1925                           ; BSR set to: 14
  1926   001A52  0012               	return		;funcret
  1927   001A54                     __end_of_I2C_2_Master_Idle:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _I2C_2_Master_Init *****************
  1931 ;; Defined at:
  1932 ;;		line 4 in file "i2c.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_color_click_init
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text16
  1960   001A02                     __ptext16:
  1961                           	callstack 0
  1962   001A02                     _I2C_2_Master_Init:
  1963                           	callstack 29
  1964   001A02                     
  1965                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1966   001A02  010E               	movlb	14	; () banked
  1967   001A04  51D9               	movf	217,w,b	;volatile
  1968   001A06  0BF0               	andlw	-16
  1969   001A08  0908               	iorlw	8
  1970   001A0A  6FD9               	movwf	217,b	;volatile
  1971   001A0C                     
  1972                           ; BSR set to: 14
  1973                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1974   001A0C  8BD9               	bsf	217,5,b	;volatile
  1975                           
  1976                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1977   001A0E  0E9F               	movlw	159
  1978   001A10  6FD6               	movwf	214,b	;volatile
  1979   001A12                     
  1980                           ; BSR set to: 14
  1981                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1982   001A12  8A84               	bsf	132,5,c	;volatile
  1983   001A14                     
  1984                           ; BSR set to: 14
  1985                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1986   001A14  8C84               	bsf	132,6,c	;volatile
  1987   001A16                     
  1988                           ; BSR set to: 14
  1989                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1990   001A16  9BA7               	bcf	167,5,b	;volatile
  1991   001A18                     
  1992                           ; BSR set to: 14
  1993                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1994   001A18  9DA7               	bcf	167,6,b	;volatile
  1995                           
  1996                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1997   001A1A  0E1D               	movlw	29
  1998   001A1C  6F1D               	movwf	29,b	;volatile
  1999                           
  2000                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2001   001A1E  0E1E               	movlw	30
  2002   001A20  6F1C               	movwf	28,b	;volatile
  2003                           
  2004                           ;i2c.c: 18:   RD5PPS=0x1C;
  2005   001A22  0E1C               	movlw	28
  2006   001A24  6F6F               	movwf	111,b	;volatile
  2007                           
  2008                           ;i2c.c: 19:   RD6PPS=0x1B;
  2009   001A26  0E1B               	movlw	27
  2010   001A28  6F70               	movwf	112,b	;volatile
  2011   001A2A                     
  2012                           ; BSR set to: 14
  2013   001A2A  0012               	return		;funcret
  2014   001A2C                     __end_of_I2C_2_Master_Init:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _ADC_init *****************
  2018 ;; Defined at:
  2019 ;;		line 9 in file "ADC.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; This function calls:
  2040 ;;		Nothing
  2041 ;; This function is called by:
  2042 ;;		_main
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text17
  2047   001AB8                     __ptext17:
  2048                           	callstack 0
  2049   001AB8                     _ADC_init:
  2050                           	callstack 30
  2051   001AB8                     
  2052                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  2053   001AB8  8C86               	bsf	134,6,c	;volatile
  2054                           
  2055                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  2056   001ABA  010E               	movlb	14	; () banked
  2057   001ABC  8DB4               	bsf	180,6,b	;volatile
  2058                           
  2059                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  2060   001ABE  010F               	movlb	15	; () banked
  2061   001AC0  9958               	bcf	88,4,b	;volatile
  2062   001AC2                     
  2063                           ; BSR set to: 15
  2064                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  2065   001AC2  0EFC               	movlw	-4
  2066   001AC4  1758               	andwf	88,f,b	;volatile
  2067                           
  2068                           ;ADC.c: 17:     ADPCH=0b101110;
  2069   001AC6  0E2E               	movlw	46
  2070   001AC8  6F5F               	movwf	95,b	;volatile
  2071   001ACA                     
  2072                           ; BSR set to: 15
  2073                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  2074   001ACA  9460               	bcf	96,2,c	;volatile
  2075   001ACC                     
  2076                           ; BSR set to: 15
  2077                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  2078   001ACC  8860               	bsf	96,4,c	;volatile
  2079   001ACE                     
  2080                           ; BSR set to: 15
  2081                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  2082   001ACE  8E60               	bsf	96,7,c	;volatile
  2083   001AD0                     
  2084                           ; BSR set to: 15
  2085   001AD0  0012               	return		;funcret
  2086   001AD2                     __end_of_ADC_init:
  2087                           	callstack 0
  2088                           
  2089 ;; *************** function _ADC_getval *****************
  2090 ;; Defined at:
  2091 ;;		line 23 in file "ADC.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  tmpval          2    2[COMRAM] unsigned int 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    0[COMRAM] unsigned int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;Total ram usage:        4 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text18
  2119   0019D2                     __ptext18:
  2120                           	callstack 0
  2121   0019D2                     _ADC_getval:
  2122                           	callstack 30
  2123   0019D2                     
  2124                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  2125   0019D2  8060               	bsf	96,0,c	;volatile
  2126   0019D4                     l18:
  2127   0019D4  B060               	btfsc	96,0,c	;volatile
  2128   0019D6  EFEF  F00C         	goto	u1651
  2129   0019DA  EFF1  F00C         	goto	u1650
  2130   0019DE                     u1651:
  2131   0019DE  EFEA  F00C         	goto	l18
  2132   0019E2                     u1650:
  2133   0019E2                     
  2134                           ;ADC.c: 31:     tmpval = ADRESH;
  2135   0019E2  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  2136   0019E6  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  2137   0019E8                     
  2138                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  2139   0019E8  5003               	movf	ADC_getval@tmpval^0,w,c
  2140   0019EA  08FF               	sublw	255
  2141   0019EC  6E03               	movwf	ADC_getval@tmpval^0,c
  2142   0019EE  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  2143   0019F0  A0D8               	btfss	status,0,c
  2144   0019F2  2AE8               	incf	wreg,f,c
  2145   0019F4  0800               	sublw	0
  2146   0019F6  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  2147   0019F8                     
  2148                           ;ADC.c: 37:     return tmpval;
  2149   0019F8  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  2150   0019FC  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  2151   001A00  0012               	return		;funcret
  2152   001A02                     __end_of_ADC_getval:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _ADC2String *****************
  2156 ;; Defined at:
  2157 ;;		line 133 in file "serial.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  buf             1   68[COMRAM] PTR unsigned char 
  2160 ;;		 -> sendAllReadings@buffer(10), main@buf(50), 
  2161 ;;  ADC_val         2   69[COMRAM] unsigned int 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  int_part        2   75[COMRAM] unsigned int 
  2164 ;;  frac_part       2   73[COMRAM] unsigned int 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2174 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2178 ;;Total ram usage:        9 bytes
  2179 ;; Hardware stack levels used: 1
  2180 ;; Hardware stack levels required when called: 8
  2181 ;; This function calls:
  2182 ;;		___lwdiv
  2183 ;;		___wmul
  2184 ;;		_sprintf
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;;		_sendAllReadings
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text19
  2192   001512                     __ptext19:
  2193                           	callstack 0
  2194   001512                     _ADC2String:
  2195                           	callstack 22
  2196   001512                     
  2197                           ;serial.c: 135:     unsigned int int_part=ADC_val/77;
  2198   001512  C046  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  2199   001516  C047  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  2200   00151A  0E00               	movlw	0
  2201   00151C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2202   00151E  0E4D               	movlw	77
  2203   001520  6E09               	movwf	___lwdiv@divisor^0,c
  2204   001522  EC24  F00B         	call	___lwdiv	;wreg free
  2205   001526  C007  F04C         	movff	?___lwdiv,ADC2String@int_part
  2206   00152A  C008  F04D         	movff	?___lwdiv+1,ADC2String@int_part+1
  2207   00152E                     
  2208                           ;serial.c: 137:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  2209   00152E  C046  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  2210   001532  C047  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  2211   001536  0E00               	movlw	0
  2212   001538  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2213   00153A  0E64               	movlw	100
  2214   00153C  6E03               	movwf	___wmul@multiplicand^0,c
  2215   00153E  EC2A  F00D         	call	___wmul	;wreg free
  2216   001542  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2217   001546  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2218   00154A  0E00               	movlw	0
  2219   00154C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2220   00154E  0E4D               	movlw	77
  2221   001550  6E09               	movwf	___lwdiv@divisor^0,c
  2222   001552  EC24  F00B         	call	___lwdiv	;wreg free
  2223   001556  C007  F048         	movff	?___lwdiv,??_ADC2String
  2224   00155A  C008  F049         	movff	?___lwdiv+1,??_ADC2String+1
  2225   00155E  C04C  F001         	movff	ADC2String@int_part,___wmul@multiplier
  2226   001562  C04D  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  2227   001566  0EFF               	movlw	255
  2228   001568  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2229   00156A  0E9C               	movlw	156
  2230   00156C  6E03               	movwf	___wmul@multiplicand^0,c
  2231   00156E  EC2A  F00D         	call	___wmul	;wreg free
  2232   001572  5001               	movf	?___wmul^0,w,c
  2233   001574  2448               	addwf	??_ADC2String^0,w,c
  2234   001576  6E4A               	movwf	ADC2String@frac_part^0,c
  2235   001578  5002               	movf	(?___wmul+1)^0,w,c
  2236   00157A  2049               	addwfc	(??_ADC2String+1)^0,w,c
  2237   00157C  6E4B               	movwf	(ADC2String@frac_part+1)^0,c
  2238   00157E                     
  2239                           ;serial.c: 139:     sprintf(buf,"Voltage = %d.%02d,  ",int_part,frac_part);
  2240   00157E  C045  F031         	movff	ADC2String@buf,sprintf@s
  2241   001582  6A32               	clrf	(sprintf@s+1)^0,c
  2242   001584  0E01               	movlw	low STR_5
  2243   001586  6E33               	movwf	sprintf@fmt^0,c
  2244   001588  C04C  F034         	movff	ADC2String@int_part,?_sprintf+3
  2245   00158C  C04D  F035         	movff	ADC2String@int_part+1,?_sprintf+4
  2246   001590  C04A  F036         	movff	ADC2String@frac_part,?_sprintf+5
  2247   001594  C04B  F037         	movff	ADC2String@frac_part+1,?_sprintf+6
  2248   001598  EC60  F00C         	call	_sprintf	;wreg free
  2249   00159C                     
  2250                           ;serial.c: 141:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2251   00159C  0E52               	movlw	82
  2252   00159E  6E49               	movwf	(??_ADC2String+1)^0,c
  2253   0015A0  0E2B               	movlw	43
  2254   0015A2  6E48               	movwf	??_ADC2String^0,c
  2255   0015A4  0E00               	movlw	0
  2256   0015A6                     u1707:
  2257   0015A6  2EE8               	decfsz	wreg,f,c
  2258   0015A8  D7FE               	bra	u1707
  2259   0015AA  2E48               	decfsz	??_ADC2String^0,f,c
  2260   0015AC  D7FC               	bra	u1707
  2261   0015AE  2E49               	decfsz	(??_ADC2String+1)^0,f,c
  2262   0015B0  D7FA               	bra	u1707
  2263   0015B2  D000               	nop2	
  2264   0015B4  0012               	return		;funcret
  2265   0015B6                     __end_of_ADC2String:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _sprintf *****************
  2269 ;; Defined at:
  2270 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  s               2   48[COMRAM] PTR unsigned char 
  2273 ;;		 -> sendAllReadings@buffer(10), main@clear_char(50), main@green_char(50), main@blue_char(50), 
  2274 ;;		 -> main@red_char(50), main@buf(50), 
  2275 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
  2276 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2277 ;;		 -> STR_1(10), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  f              12   56[COMRAM] struct _IO_FILE
  2280 ;;  ret             2    0        int 
  2281 ;;  ap              1   55[COMRAM] PTR void [1]
  2282 ;;		 -> ?_sprintf(2), 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2   48[COMRAM] int 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2292 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;Total ram usage:       20 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 7
  2299 ;; This function calls:
  2300 ;;		_vfprintf
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;;		_ADC2String
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text20
  2308   0018C0                     __ptext20:
  2309                           	callstack 0
  2310   0018C0                     _sprintf:
  2311                           	callstack 23
  2312   0018C0  0E34               	movlw	low (?_sprintf+3)
  2313   0018C2  6E38               	movwf	sprintf@ap^0,c
  2314   0018C4  C031  F039         	movff	sprintf@s,sprintf@f
  2315   0018C8  C032  F03A         	movff	sprintf@s+1,sprintf@f+1
  2316   0018CC  0E00               	movlw	0
  2317   0018CE  6E3D               	movwf	(sprintf@f+4)^0,c
  2318   0018D0  0E00               	movlw	0
  2319   0018D2  6E3C               	movwf	(sprintf@f+3)^0,c
  2320   0018D4  0E00               	movlw	0
  2321   0018D6  6E44               	movwf	(sprintf@f+11)^0,c
  2322   0018D8  0E00               	movlw	0
  2323   0018DA  6E43               	movwf	(sprintf@f+10)^0,c
  2324   0018DC  0E39               	movlw	low sprintf@f
  2325   0018DE  6E2D               	movwf	vfprintf@fp^0,c
  2326   0018E0  C033  F02E         	movff	sprintf@fmt,vfprintf@fmt
  2327   0018E4  0E38               	movlw	low sprintf@ap
  2328   0018E6  6E2F               	movwf	vfprintf@ap^0,c
  2329   0018E8  EC1F  F00C         	call	_vfprintf	;wreg free
  2330   0018EC  503C               	movf	(sprintf@f+3)^0,w,c
  2331   0018EE  2431               	addwf	sprintf@s^0,w,c
  2332   0018F0  6ED9               	movwf	fsr2l,c
  2333   0018F2  503D               	movf	(sprintf@f+4)^0,w,c
  2334   0018F4  2032               	addwfc	(sprintf@s+1)^0,w,c
  2335   0018F6  6EDA               	movwf	fsr2h,c
  2336   0018F8  6ADF               	clrf	indf2,c
  2337   0018FA  0012               	return		;funcret
  2338   0018FC                     __end_of_sprintf:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _vfprintf *****************
  2342 ;; Defined at:
  2343 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  2346 ;;		 -> sprintf@f(12), 
  2347 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2348 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2349 ;;		 -> STR_1(10), 
  2350 ;;  ap              1   46[COMRAM] PTR PTR void 
  2351 ;;		 -> sprintf@ap(1), 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  2354 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2355 ;;		 -> STR_1(10), 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2   44[COMRAM] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2365 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2369 ;;Total ram usage:        4 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 6
  2372 ;; This function calls:
  2373 ;;		_vfpfcnvrt
  2374 ;; This function is called by:
  2375 ;;		_sprintf
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text21
  2380   00183E                     __ptext21:
  2381                           	callstack 0
  2382   00183E                     _vfprintf:
  2383                           	callstack 23
  2384   00183E                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2386   00183E  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2389   001842  EF2B  F00C         	goto	l2401
  2390   001846                     l2399:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2393   001846  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  2394   00184A  0E30               	movlw	low vfprintf@cfmt
  2395   00184C  6E23               	movwf	vfpfcnvrt@fmt^0,c
  2396   00184E  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  2397   001852  EC23  F007         	call	_vfpfcnvrt	;wreg free
  2398   001856                     l2401:
  2399                           
  2400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2401   001856  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  2402   00185A                     	if	1	;There is more than 1 active tblptr byte
  2403   00185A  0E0E               	movlw	high __smallconst
  2404   00185C  6EF7               	movwf	tblptrh,c
  2405   00185E                     	endif
  2406   00185E                     	if	0	;tblptru may be non-zero
  2407   00185E                     	endif
  2408   00185E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2409   00185E  0E00               	movlw	low (__smallconst shr (0+16))
  2410   001860  6EF8               	movwf	tblptru,c
  2411   001862                     	endif
  2412   001862  0008               	tblrd		*
  2413   001864  50F5               	movf	tablat,w,c
  2414   001866  0900               	iorlw	0
  2415   001868  A4D8               	btfss	status,2,c
  2416   00186A  EF39  F00C         	goto	u1581
  2417   00186E  EF3B  F00C         	goto	u1580
  2418   001872                     u1581:
  2419   001872  EF23  F00C         	goto	l2399
  2420   001876                     u1580:
  2421   001876                     
  2422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2423   001876  0E00               	movlw	0
  2424   001878  6E2E               	movwf	(?_vfprintf+1)^0,c
  2425   00187A  0E00               	movlw	0
  2426   00187C  6E2D               	movwf	?_vfprintf^0,c
  2427   00187E  0012               	return		;funcret
  2428   001880                     __end_of_vfprintf:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _vfpfcnvrt *****************
  2432 ;; Defined at:
  2433 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  2436 ;;		 -> sprintf@f(12), 
  2437 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  2438 ;;		 -> vfprintf@cfmt(1), 
  2439 ;;  ap              1   35[COMRAM] PTR PTR void 
  2440 ;;		 -> sprintf@ap(1), 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  convarg         4   38[COMRAM] struct .
  2443 ;;  cp              1   43[COMRAM] PTR unsigned char 
  2444 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2445 ;;		 -> STR_1(10), 
  2446 ;;  done            1   42[COMRAM] _Bool 
  2447 ;;  c               1    0        unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2457 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;Total ram usage:       11 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 5
  2464 ;; This function calls:
  2465 ;;		_dtoa
  2466 ;;		_fputc
  2467 ;;		_read_prec_or_width
  2468 ;; This function is called by:
  2469 ;;		_vfprintf
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text22
  2474   000E46                     __ptext22:
  2475                           	callstack 0
  2476   000E46                     _vfpfcnvrt:
  2477                           	callstack 23
  2478   000E46                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2480   000E46  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2481   000E48  6ED9               	movwf	fsr2l,c
  2482   000E4A  6ADA               	clrf	fsr2h,c
  2483   000E4C  CFDF FFF6          	movff	indf2,tblptrl
  2484   000E50                     	if	1	;There is more than 1 active tblptr byte
  2485   000E50  0E0E               	movlw	high __smallconst
  2486   000E52  6EF7               	movwf	tblptrh,c
  2487   000E54                     	endif
  2488   000E54                     	if	0	;tblptru may be non-zero
  2489   000E54                     	endif
  2490   000E54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2491   000E54  0E00               	movlw	low (__smallconst shr (0+16))
  2492   000E56  6EF8               	movwf	tblptru,c
  2493   000E58                     	endif
  2494   000E58  0008               	tblrd		*
  2495   000E5A  50F5               	movf	tablat,w,c
  2496   000E5C  0A25               	xorlw	37
  2497   000E5E  A4D8               	btfss	status,2,c
  2498   000E60  EF34  F007         	goto	u1531
  2499   000E64  EF36  F007         	goto	u1530
  2500   000E68                     u1531:
  2501   000E68  EFD1  F007         	goto	l2375
  2502   000E6C                     u1530:
  2503   000E6C                     
  2504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2505   000E6C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2506   000E6E  6ED9               	movwf	fsr2l,c
  2507   000E70  6ADA               	clrf	fsr2h,c
  2508   000E72  2ADF               	incf	indf2,f,c
  2509   000E74                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2511   000E74  0E00               	movlw	0
  2512   000E76  6E57               	movwf	(_width+1)^0,c
  2513   000E78  0E00               	movlw	0
  2514   000E7A  6E56               	movwf	_width^0,c
  2515   000E7C  C056  F058         	movff	_width,_flags
  2516   000E80                     
  2517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2518   000E80  0100               	movlb	0	; () banked
  2519   000E82  69F8               	setf	_prec& (0+255),b
  2520   000E84  69F9               	setf	(_prec+1)& (0+255),b
  2521   000E86                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2524   000E86  0E00               	movlw	0
  2525   000E88  6E2B               	movwf	vfpfcnvrt@done^0,c
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2528   000E8A  EF6D  F007         	goto	l2349
  2529   000E8E                     l2339:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2532   000E8E  8258               	bsf	_flags^0,1,c
  2533   000E90                     
  2534                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2535   000E90  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2536   000E92  6ED9               	movwf	fsr2l,c
  2537   000E94  6ADA               	clrf	fsr2h,c
  2538   000E96  2ADF               	incf	indf2,f,c
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2541   000E98  EF6D  F007         	goto	l2349
  2542   000E9C                     l2343:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2545   000E9C  0E01               	movlw	1
  2546   000E9E  6E2B               	movwf	vfpfcnvrt@done^0,c
  2547                           
  2548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2549   000EA0  EF6D  F007         	goto	l2349
  2550   000EA4                     l2347:
  2551   000EA4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2552   000EA6  6ED9               	movwf	fsr2l,c
  2553   000EA8  6ADA               	clrf	fsr2h,c
  2554   000EAA  CFDF FFF6          	movff	indf2,tblptrl
  2555   000EAE                     	if	1	;There is more than 1 active tblptr byte
  2556   000EAE  0E0E               	movlw	high __smallconst
  2557   000EB0  6EF7               	movwf	tblptrh,c
  2558   000EB2                     	endif
  2559   000EB2                     	if	0	;tblptru may be non-zero
  2560   000EB2                     	endif
  2561   000EB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2562   000EB2  0E00               	movlw	low (__smallconst shr (0+16))
  2563   000EB4  6EF8               	movwf	tblptru,c
  2564   000EB6                     	endif
  2565   000EB6  0008               	tblrd		*
  2566   000EB8  50F5               	movf	tablat,w,c
  2567   000EBA  6E25               	movwf	??_vfpfcnvrt^0,c
  2568   000EBC  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  2569                           
  2570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2571                           ; Switch size 1, requested type "simple"
  2572                           ; Number of cases is 1, Range of values is 0 to 0
  2573                           ; switch strategies available:
  2574                           ; Name         Instructions Cycles
  2575                           ; simple_byte            4     3 (average)
  2576                           ;	Chosen strategy is simple_byte
  2577   000EBE  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  2578   000EC0  0A00               	xorlw	0	; case 0
  2579   000EC2  B4D8               	btfsc	status,2,c
  2580   000EC4  EF66  F007         	goto	l2623
  2581   000EC8  EF4E  F007         	goto	l2343
  2582   000ECC                     l2623:
  2583                           
  2584                           ; Switch size 1, requested type "simple"
  2585                           ; Number of cases is 1, Range of values is 48 to 48
  2586                           ; switch strategies available:
  2587                           ; Name         Instructions Cycles
  2588                           ; simple_byte            4     3 (average)
  2589                           ;	Chosen strategy is simple_byte
  2590   000ECC  5025               	movf	??_vfpfcnvrt^0,w,c
  2591   000ECE  0A30               	xorlw	48	; case 48
  2592   000ED0  B4D8               	btfsc	status,2,c
  2593   000ED2  EF47  F007         	goto	l2339
  2594   000ED6  EF4E  F007         	goto	l2343
  2595   000EDA                     l2349:
  2596                           
  2597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2598   000EDA  502B               	movf	vfpfcnvrt@done^0,w,c
  2599   000EDC  B4D8               	btfsc	status,2,c
  2600   000EDE  EF73  F007         	goto	u1541
  2601   000EE2  EF75  F007         	goto	u1540
  2602   000EE6                     u1541:
  2603   000EE6  EF52  F007         	goto	l2347
  2604   000EEA                     u1540:
  2605   000EEA                     
  2606                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2607   000EEA  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2608   000EEE  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2609   000EF2  EC32  F00A         	call	_read_prec_or_width	;wreg free
  2610   000EF6  C007  F056         	movff	?_read_prec_or_width,_width
  2611   000EFA  C008  F057         	movff	?_read_prec_or_width+1,_width+1
  2612   000EFE                     
  2613                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2614   000EFE  BE57               	btfsc	(_width+1)^0,7,c
  2615   000F00  EF86  F007         	goto	u1550
  2616   000F04  EF84  F007         	goto	u1551
  2617   000F08                     u1551:
  2618   000F08  EF8B  F007         	goto	l2357
  2619   000F0C                     u1550:
  2620   000F0C                     
  2621                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2622   000F0C  8058               	bsf	_flags^0,0,c
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2625   000F0E  6C56               	negf	_width^0,c
  2626   000F10  1E57               	comf	(_width+1)^0,f,c
  2627   000F12  B0D8               	btfsc	status,0,c
  2628   000F14  2A57               	incf	(_width+1)^0,f,c
  2629   000F16                     l2357:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2632   000F16  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2633   000F18  6ED9               	movwf	fsr2l,c
  2634   000F1A  6ADA               	clrf	fsr2h,c
  2635   000F1C  50DF               	movf	indf2,w,c
  2636   000F1E  6E2C               	movwf	vfpfcnvrt@cp^0,c
  2637   000F20                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2639   000F20  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2640   000F24                     	if	1	;There is more than 1 active tblptr byte
  2641   000F24  0E0E               	movlw	high __smallconst
  2642   000F26  6EF7               	movwf	tblptrh,c
  2643   000F28                     	endif
  2644   000F28                     	if	0	;tblptru may be non-zero
  2645   000F28                     	endif
  2646   000F28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2647   000F28  0E00               	movlw	low (__smallconst shr (0+16))
  2648   000F2A  6EF8               	movwf	tblptru,c
  2649   000F2C                     	endif
  2650   000F2C  0008               	tblrd		*
  2651   000F2E  50F5               	movf	tablat,w,c
  2652   000F30  0A64               	xorlw	100
  2653   000F32  B4D8               	btfsc	status,2,c
  2654   000F34  EF9E  F007         	goto	u1561
  2655   000F38  EFA0  F007         	goto	u1560
  2656   000F3C                     u1561:
  2657   000F3C  EFB0  F007         	goto	l2363
  2658   000F40                     u1560:
  2659   000F40  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2660   000F44                     	if	1	;There is more than 1 active tblptr byte
  2661   000F44  0E0E               	movlw	high __smallconst
  2662   000F46  6EF7               	movwf	tblptrh,c
  2663   000F48                     	endif
  2664   000F48                     	if	0	;tblptru may be non-zero
  2665   000F48                     	endif
  2666   000F48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2667   000F48  0E00               	movlw	low (__smallconst shr (0+16))
  2668   000F4A  6EF8               	movwf	tblptru,c
  2669   000F4C                     	endif
  2670   000F4C  0008               	tblrd		*
  2671   000F4E  50F5               	movf	tablat,w,c
  2672   000F50  0A69               	xorlw	105
  2673   000F52  A4D8               	btfss	status,2,c
  2674   000F54  EFAE  F007         	goto	u1571
  2675   000F58  EFB0  F007         	goto	u1570
  2676   000F5C                     u1571:
  2677   000F5C  EFCB  F007         	goto	l2371
  2678   000F60                     u1570:
  2679   000F60                     l2363:
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2682   000F60  5024               	movf	vfpfcnvrt@ap^0,w,c
  2683   000F62  6ED9               	movwf	fsr2l,c
  2684   000F64  6ADA               	clrf	fsr2h,c
  2685   000F66  0E02               	movlw	2
  2686   000F68  26DF               	addwf	indf2,f,c
  2687   000F6A  5CDF               	subwf	indf2,w,c
  2688   000F6C  6ED9               	movwf	fsr2l,c
  2689   000F6E  6ADA               	clrf	fsr2h,c
  2690   000F70  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  2691   000F74  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  2692   000F78                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2694   000F78  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2695   000F7A  6ED9               	movwf	fsr2l,c
  2696   000F7C  6ADA               	clrf	fsr2h,c
  2697   000F7E  282C               	incf	vfpfcnvrt@cp^0,w,c
  2698   000F80  6EDF               	movwf	indf2,c
  2699   000F82                     
  2700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2701   000F82  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  2702   000F86  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  2703   000F8A  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2704   000F8E  ECE5  F007         	call	_dtoa	;wreg free
  2705   000F92  EFE4  F007         	goto	l1007
  2706   000F96                     l2371:
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2709   000F96  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2710   000F98  6ED9               	movwf	fsr2l,c
  2711   000F9A  6ADA               	clrf	fsr2h,c
  2712   000F9C  2ADF               	incf	indf2,f,c
  2713   000F9E  EFE4  F007         	goto	l1007
  2714   000FA2                     l2375:
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2717   000FA2  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2718   000FA4  6ED9               	movwf	fsr2l,c
  2719   000FA6  6ADA               	clrf	fsr2h,c
  2720   000FA8  CFDF FFF6          	movff	indf2,tblptrl
  2721   000FAC                     	if	1	;There is more than 1 active tblptr byte
  2722   000FAC  0E0E               	movlw	high __smallconst
  2723   000FAE  6EF7               	movwf	tblptrh,c
  2724   000FB0                     	endif
  2725   000FB0                     	if	0	;tblptru may be non-zero
  2726   000FB0                     	endif
  2727   000FB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2728   000FB0  0E00               	movlw	low (__smallconst shr (0+16))
  2729   000FB2  6EF8               	movwf	tblptru,c
  2730   000FB4                     	endif
  2731   000FB4  0008               	tblrd		*
  2732   000FB6  50F5               	movf	tablat,w,c
  2733   000FB8  6E01               	movwf	fputc@c^0,c
  2734   000FBA  6A02               	clrf	(fputc@c+1)^0,c
  2735   000FBC  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2736   000FC0  EC7D  F009         	call	_fputc	;wreg free
  2737   000FC4  EFCB  F007         	goto	l2371
  2738   000FC8                     l1007:
  2739   000FC8  0012               	return		;funcret
  2740   000FCA                     __end_of_vfpfcnvrt:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _read_prec_or_width *****************
  2744 ;; Defined at:
  2745 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2748 ;;		 -> vfprintf@cfmt(1), 
  2749 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2750 ;;		 -> sprintf@ap(1), 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  c               1    8[COMRAM] unsigned char 
  2753 ;;  n               2    9[COMRAM] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  2    6[COMRAM] int 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;Total ram usage:        5 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 1
  2770 ;; This function calls:
  2771 ;;		___wmul
  2772 ;; This function is called by:
  2773 ;;		_vfpfcnvrt
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text23
  2778   001464                     __ptext23:
  2779                           	callstack 0
  2780   001464                     _read_prec_or_width:
  2781                           	callstack 26
  2782   001464                     
  2783                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2784   001464  0E00               	movlw	0
  2785   001466  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2786   001468  0E00               	movlw	0
  2787   00146A  6E0A               	movwf	read_prec_or_width@n^0,c
  2788   00146C                     
  2789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2790   00146C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2791   00146E  6ED9               	movwf	fsr2l,c
  2792   001470  6ADA               	clrf	fsr2h,c
  2793   001472  CFDF FFF6          	movff	indf2,tblptrl
  2794   001476                     	if	1	;There is more than 1 active tblptr byte
  2795   001476  0E0E               	movlw	high __smallconst
  2796   001478  6EF7               	movwf	tblptrh,c
  2797   00147A                     	endif
  2798   00147A                     	if	0	;tblptru may be non-zero
  2799   00147A                     	endif
  2800   00147A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2801   00147A  0E00               	movlw	low (__smallconst shr (0+16))
  2802   00147C  6EF8               	movwf	tblptru,c
  2803   00147E                     	endif
  2804   00147E  0008               	tblrd		*
  2805   001480  50F5               	movf	tablat,w,c
  2806   001482  0A2A               	xorlw	42
  2807   001484  A4D8               	btfss	status,2,c
  2808   001486  EF47  F00A         	goto	u1491
  2809   00148A  EF49  F00A         	goto	u1490
  2810   00148E                     u1491:
  2811   00148E  EF6F  F00A         	goto	l2323
  2812   001492                     u1490:
  2813   001492                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2815   001492  5007               	movf	read_prec_or_width@fmt^0,w,c
  2816   001494  6ED9               	movwf	fsr2l,c
  2817   001496  6ADA               	clrf	fsr2h,c
  2818   001498  2ADF               	incf	indf2,f,c
  2819   00149A                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2821   00149A  5008               	movf	read_prec_or_width@ap^0,w,c
  2822   00149C  6ED9               	movwf	fsr2l,c
  2823   00149E  6ADA               	clrf	fsr2h,c
  2824   0014A0  0E02               	movlw	2
  2825   0014A2  26DF               	addwf	indf2,f,c
  2826   0014A4  5CDF               	subwf	indf2,w,c
  2827   0014A6  6ED9               	movwf	fsr2l,c
  2828   0014A8  6ADA               	clrf	fsr2h,c
  2829   0014AA  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2830   0014AE  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2831                           
  2832                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2833   0014B2  EF84  F00A         	goto	l988
  2834   0014B6                     l2319:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2837   0014B6  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2838   0014BA  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2839   0014BE  0E00               	movlw	0
  2840   0014C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2841   0014C2  0E0A               	movlw	10
  2842   0014C4  6E03               	movwf	___wmul@multiplicand^0,c
  2843   0014C6  EC2A  F00D         	call	___wmul	;wreg free
  2844   0014CA  5009               	movf	read_prec_or_width@c^0,w,c
  2845   0014CC  2401               	addwf	?___wmul^0,w,c
  2846   0014CE  6E0A               	movwf	read_prec_or_width@n^0,c
  2847   0014D0  0E00               	movlw	0
  2848   0014D2  2002               	addwfc	(?___wmul+1)^0,w,c
  2849   0014D4  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2850   0014D6                     
  2851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2852   0014D6  5007               	movf	read_prec_or_width@fmt^0,w,c
  2853   0014D8  6ED9               	movwf	fsr2l,c
  2854   0014DA  6ADA               	clrf	fsr2h,c
  2855   0014DC  2ADF               	incf	indf2,f,c
  2856   0014DE                     l2323:
  2857                           
  2858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2859   0014DE  5007               	movf	read_prec_or_width@fmt^0,w,c
  2860   0014E0  6ED9               	movwf	fsr2l,c
  2861   0014E2  6ADA               	clrf	fsr2h,c
  2862   0014E4  CFDF FFF6          	movff	indf2,tblptrl
  2863   0014E8                     	if	1	;There is more than 1 active tblptr byte
  2864   0014E8  0E0E               	movlw	high __smallconst
  2865   0014EA  6EF7               	movwf	tblptrh,c
  2866   0014EC                     	endif
  2867   0014EC                     	if	0	;tblptru may be non-zero
  2868   0014EC                     	endif
  2869   0014EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2870   0014EC  0E00               	movlw	low (__smallconst shr (0+16))
  2871   0014EE  6EF8               	movwf	tblptru,c
  2872   0014F0                     	endif
  2873   0014F0  0008               	tblrd		*
  2874   0014F2  50F5               	movf	tablat,w,c
  2875   0014F4  0FD0               	addlw	208
  2876   0014F6  6E09               	movwf	read_prec_or_width@c^0,c
  2877   0014F8  0E09               	movlw	9
  2878   0014FA  6409               	cpfsgt	read_prec_or_width@c^0,c
  2879   0014FC  EF82  F00A         	goto	u1501
  2880   001500  EF84  F00A         	goto	u1500
  2881   001504                     u1501:
  2882   001504  EF5B  F00A         	goto	l2319
  2883   001508                     u1500:
  2884   001508                     l988:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2887   001508  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2888   00150C  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2889   001510  0012               	return		;funcret
  2890   001512                     __end_of_read_prec_or_width:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function ___wmul *****************
  2894 ;; Defined at:
  2895 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  multiplier      2    0[COMRAM] unsigned int 
  2898 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  product         2    4[COMRAM] unsigned int 
  2901 ;; Return value:  Size  Location     Type
  2902 ;;                  2    0[COMRAM] unsigned int 
  2903 ;; Registers used:
  2904 ;;		wreg, status,2, status,0, prodl, prodh
  2905 ;; Tracked objects:
  2906 ;;		On entry : 0/0
  2907 ;;		On exit  : 0/0
  2908 ;;		Unchanged: 0/0
  2909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2914 ;;Total ram usage:        6 bytes
  2915 ;; Hardware stack levels used: 1
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_ADC2String
  2920 ;;		_read_prec_or_width
  2921 ;; This function uses a non-reentrant model
  2922 ;;
  2923                           
  2924                           	psect	text24
  2925   001A54                     __ptext24:
  2926                           	callstack 0
  2927   001A54                     ___wmul:
  2928                           	callstack 26
  2929   001A54  5001               	movf	___wmul@multiplier^0,w,c
  2930   001A56  0203               	mulwf	___wmul@multiplicand^0,c
  2931   001A58  CFF3 F005          	movff	prodl,___wmul@product
  2932   001A5C  CFF4 F006          	movff	prodh,___wmul@product+1
  2933   001A60  5001               	movf	___wmul@multiplier^0,w,c
  2934   001A62  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2935   001A64  50F3               	movf	243,w,c
  2936   001A66  2606               	addwf	(___wmul@product+1)^0,f,c
  2937   001A68  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2938   001A6A  0203               	mulwf	___wmul@multiplicand^0,c
  2939   001A6C  50F3               	movf	243,w,c
  2940   001A6E  2606               	addwf	(___wmul@product+1)^0,f,c
  2941   001A70  C005  F001         	movff	___wmul@product,?___wmul
  2942   001A74  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2943   001A78  0012               	return		;funcret
  2944   001A7A                     __end_of___wmul:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _dtoa *****************
  2948 ;; Defined at:
  2949 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  2952 ;;		 -> sprintf@f(12), 
  2953 ;;  d               2   23[COMRAM] int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  i               2   31[COMRAM] int 
  2956 ;;  w               2   28[COMRAM] int 
  2957 ;;  s               1   30[COMRAM] unsigned char 
  2958 ;;  p               1   27[COMRAM] _Bool 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2968 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2971 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2972 ;;Total ram usage:       11 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 4
  2975 ;; This function calls:
  2976 ;;		___awdiv
  2977 ;;		___awmod
  2978 ;;		_abs
  2979 ;;		_pad
  2980 ;; This function is called by:
  2981 ;;		_vfpfcnvrt
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text25
  2986   000FCA                     __ptext25:
  2987                           	callstack 0
  2988   000FCA                     _dtoa:
  2989                           	callstack 23
  2990   000FCA                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2992   000FCA  0E01               	movlw	1
  2993   000FCC  6E1C               	movwf	dtoa@p^0,c
  2994   000FCE                     
  2995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2996   000FCE  BE19               	btfsc	(dtoa@d+1)^0,7,c
  2997   000FD0  EFEC  F007         	goto	u1391
  2998   000FD4  EFEF  F007         	goto	u1390
  2999   000FD8                     u1391:
  3000   000FD8  0E01               	movlw	1
  3001   000FDA  EFF0  F007         	goto	u1400
  3002   000FDE                     u1390:
  3003   000FDE  0E00               	movlw	0
  3004   000FE0                     u1400:
  3005   000FE0  6E1F               	movwf	dtoa@s^0,c
  3006   000FE2                     
  3007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3008   000FE2  C056  F01D         	movff	_width,dtoa@w
  3009   000FE6  C057  F01E         	movff	_width+1,dtoa@w+1
  3010   000FEA                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  3012   000FEA  501F               	movf	dtoa@s^0,w,c
  3013   000FEC  B4D8               	btfsc	status,2,c
  3014   000FEE  EFFB  F007         	goto	u1411
  3015   000FF2  EFFD  F007         	goto	u1410
  3016   000FF6                     u1411:
  3017   000FF6  EF14  F008         	goto	l971
  3018   000FFA                     u1410:
  3019   000FFA                     
  3020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  3021   000FFA  061D               	decf	dtoa@w^0,f,c
  3022   000FFC  A0D8               	btfss	status,0,c
  3023   000FFE  061E               	decf	(dtoa@w+1)^0,f,c
  3024   001000                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3026   001000  501F               	movf	dtoa@s^0,w,c
  3027   001002  A4D8               	btfss	status,2,c
  3028   001004  EF06  F008         	goto	u1421
  3029   001008  EF08  F008         	goto	u1420
  3030   00100C                     u1421:
  3031   00100C  EF0E  F008         	goto	l2275
  3032   001010                     u1420:
  3033   001010  0E00               	movlw	0
  3034   001012  6E1B               	movwf	(_dtoa$1251+1)^0,c
  3035   001014  0E2B               	movlw	43
  3036   001016  6E1A               	movwf	_dtoa$1251^0,c
  3037   001018  EF12  F008         	goto	l2277
  3038   00101C                     l2275:
  3039   00101C  0E00               	movlw	0
  3040   00101E  6E1B               	movwf	(_dtoa$1251+1)^0,c
  3041   001020  0E2D               	movlw	45
  3042   001022  6E1A               	movwf	_dtoa$1251^0,c
  3043   001024                     l2277:
  3044   001024  C01A  F01F         	movff	_dtoa$1251,dtoa@s
  3045   001028                     l971:
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3048   001028  0E00               	movlw	0
  3049   00102A  6E21               	movwf	(dtoa@i+1)^0,c
  3050   00102C  0E1F               	movlw	31
  3051   00102E  6E20               	movwf	dtoa@i^0,c
  3052   001030                     
  3053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3054   001030  0E00               	movlw	0
  3055   001032  0101               	movlb	1	; () banked
  3056   001034  6F83               	movwf	(_dbuf+31)& (0+255),b
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3059   001036  EF4C  F008         	goto	l2291
  3060   00103A                     l2281:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  3063   00103A  0620               	decf	dtoa@i^0,f,c
  3064   00103C  A0D8               	btfss	status,0,c
  3065   00103E  0621               	decf	(dtoa@i+1)^0,f,c
  3066   001040                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3068   001040  0E64               	movlw	low _dbuf
  3069   001042  2420               	addwf	dtoa@i^0,w,c
  3070   001044  6ED9               	movwf	fsr2l,c
  3071   001046  0E01               	movlw	high _dbuf
  3072   001048  2021               	addwfc	(dtoa@i+1)^0,w,c
  3073   00104A  6EDA               	movwf	fsr2h,c
  3074   00104C  C018  F001         	movff	dtoa@d,___awmod@dividend
  3075   001050  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  3076   001054  0E00               	movlw	0
  3077   001056  6E04               	movwf	(___awmod@divisor+1)^0,c
  3078   001058  0E0A               	movlw	10
  3079   00105A  6E03               	movwf	___awmod@divisor^0,c
  3080   00105C  ECDA  F009         	call	___awmod	;wreg free
  3081   001060  C001  F007         	movff	?___awmod,abs@a
  3082   001064  C002  F008         	movff	?___awmod+1,abs@a+1
  3083   001068  ECCF  F00C         	call	_abs	;wreg free
  3084   00106C  5007               	movf	?_abs^0,w,c
  3085   00106E  0F30               	addlw	48
  3086   001070  6EDF               	movwf	indf2,c
  3087   001072                     
  3088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  3089   001072  0E00               	movlw	0
  3090   001074  6E1C               	movwf	dtoa@p^0,c
  3091   001076                     
  3092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  3093   001076  061D               	decf	dtoa@w^0,f,c
  3094   001078  A0D8               	btfss	status,0,c
  3095   00107A  061E               	decf	(dtoa@w+1)^0,f,c
  3096   00107C                     
  3097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3098   00107C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  3099   001080  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  3100   001084  0E00               	movlw	0
  3101   001086  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3102   001088  0E0A               	movlw	10
  3103   00108A  6E03               	movwf	___awdiv@divisor^0,c
  3104   00108C  EC1B  F009         	call	___awdiv	;wreg free
  3105   001090  C001  F018         	movff	?___awdiv,dtoa@d
  3106   001094  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  3107   001098                     l2291:
  3108                           
  3109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3110   001098  BE21               	btfsc	(dtoa@i+1)^0,7,c
  3111   00109A  EF57  F008         	goto	u1431
  3112   00109E  5021               	movf	(dtoa@i+1)^0,w,c
  3113   0010A0  E108               	bnz	u1430
  3114   0010A2  0420               	decf	dtoa@i^0,w,c
  3115   0010A4  A0D8               	btfss	status,0,c
  3116   0010A6  EF57  F008         	goto	u1431
  3117   0010AA  EF59  F008         	goto	u1430
  3118   0010AE                     u1431:
  3119   0010AE  EF7E  F008         	goto	l2301
  3120   0010B2                     u1430:
  3121   0010B2  5018               	movf	dtoa@d^0,w,c
  3122   0010B4  1019               	iorwf	(dtoa@d+1)^0,w,c
  3123   0010B6  A4D8               	btfss	status,2,c
  3124   0010B8  EF60  F008         	goto	u1441
  3125   0010BC  EF62  F008         	goto	u1440
  3126   0010C0                     u1441:
  3127   0010C0  EF1D  F008         	goto	l2281
  3128   0010C4                     u1440:
  3129   0010C4  501C               	movf	dtoa@p^0,w,c
  3130   0010C6  A4D8               	btfss	status,2,c
  3131   0010C8  EF68  F008         	goto	u1451
  3132   0010CC  EF6A  F008         	goto	u1450
  3133   0010D0                     u1451:
  3134   0010D0  EF1D  F008         	goto	l2281
  3135   0010D4                     u1450:
  3136   0010D4  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  3137   0010D6  EF75  F008         	goto	u1461
  3138   0010DA  501E               	movf	(dtoa@w+1)^0,w,c
  3139   0010DC  E108               	bnz	u1460
  3140   0010DE  041D               	decf	dtoa@w^0,w,c
  3141   0010E0  A0D8               	btfss	status,0,c
  3142   0010E2  EF75  F008         	goto	u1461
  3143   0010E6  EF77  F008         	goto	u1460
  3144   0010EA                     u1461:
  3145   0010EA  EF7E  F008         	goto	l2301
  3146   0010EE                     u1460:
  3147   0010EE  B258               	btfsc	_flags^0,1,c
  3148   0010F0  EF7C  F008         	goto	u1471
  3149   0010F4  EF7E  F008         	goto	u1470
  3150   0010F8                     u1471:
  3151   0010F8  EF1D  F008         	goto	l2281
  3152   0010FC                     u1470:
  3153   0010FC                     l2301:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3156   0010FC  501F               	movf	dtoa@s^0,w,c
  3157   0010FE  B4D8               	btfsc	status,2,c
  3158   001100  EF84  F008         	goto	u1481
  3159   001104  EF86  F008         	goto	u1480
  3160   001108                     u1481:
  3161   001108  EF91  F008         	goto	l2307
  3162   00110C                     u1480:
  3163   00110C                     
  3164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  3165   00110C  0620               	decf	dtoa@i^0,f,c
  3166   00110E  A0D8               	btfss	status,0,c
  3167   001110  0621               	decf	(dtoa@i+1)^0,f,c
  3168   001112                     
  3169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3170   001112  0E64               	movlw	low _dbuf
  3171   001114  2420               	addwf	dtoa@i^0,w,c
  3172   001116  6ED9               	movwf	fsr2l,c
  3173   001118  0E01               	movlw	high _dbuf
  3174   00111A  2021               	addwfc	(dtoa@i+1)^0,w,c
  3175   00111C  6EDA               	movwf	fsr2h,c
  3176   00111E  C01F  FFDF         	movff	dtoa@s,indf2
  3177   001122                     l2307:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3180   001122  C017  F00F         	movff	dtoa@fp,pad@fp
  3181   001126  0E64               	movlw	low _dbuf
  3182   001128  2420               	addwf	dtoa@i^0,w,c
  3183   00112A  6E10               	movwf	pad@buf^0,c
  3184   00112C  0E01               	movlw	high _dbuf
  3185   00112E  2021               	addwfc	(dtoa@i+1)^0,w,c
  3186   001130  6E11               	movwf	(pad@buf+1)^0,c
  3187   001132  C01D  F012         	movff	dtoa@w,pad@p
  3188   001136  C01E  F013         	movff	dtoa@w+1,pad@p+1
  3189   00113A  ECDB  F00A         	call	_pad	;wreg free
  3190   00113E  0012               	return		;funcret
  3191   001140                     __end_of_dtoa:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _pad *****************
  3195 ;; Defined at:
  3196 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3199 ;;		 -> sprintf@f(12), 
  3200 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3201 ;;		 -> dbuf(32), 
  3202 ;;  p               2   17[COMRAM] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  i               2   20[COMRAM] int 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3214 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;Total ram usage:        8 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 3
  3221 ;; This function calls:
  3222 ;;		_fputc
  3223 ;;		_fputs
  3224 ;; This function is called by:
  3225 ;;		_dtoa
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text26
  3230   0015B6                     __ptext26:
  3231                           	callstack 0
  3232   0015B6                     _pad:
  3233                           	callstack 23
  3234   0015B6                     
  3235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3236   0015B6  A058               	btfss	_flags^0,0,c
  3237   0015B8  EFE0  F00A         	goto	u1341
  3238   0015BC  EFE2  F00A         	goto	u1340
  3239   0015C0                     u1341:
  3240   0015C0  EFEA  F00A         	goto	l2245
  3241   0015C4                     u1340:
  3242   0015C4                     
  3243                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3244   0015C4  C010  F009         	movff	pad@buf,fputs@s
  3245   0015C8  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3246   0015CC  C00F  F00B         	movff	pad@fp,fputs@fp
  3247   0015D0  EC40  F00C         	call	_fputs	;wreg free
  3248   0015D4                     l2245:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3251   0015D4  BE13               	btfsc	(pad@p+1)^0,7,c
  3252   0015D6  EFF1  F00A         	goto	u1350
  3253   0015DA  EFEF  F00A         	goto	u1351
  3254   0015DE                     u1351:
  3255   0015DE  EFF5  F00A         	goto	l963
  3256   0015E2                     u1350:
  3257   0015E2                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3259   0015E2  0E00               	movlw	0
  3260   0015E4  6E13               	movwf	(pad@p+1)^0,c
  3261   0015E6  0E00               	movlw	0
  3262   0015E8  6E12               	movwf	pad@p^0,c
  3263   0015EA                     l963:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3266   0015EA  0E00               	movlw	0
  3267   0015EC  6E16               	movwf	(pad@i+1)^0,c
  3268   0015EE  0E00               	movlw	0
  3269   0015F0  6E15               	movwf	pad@i^0,c
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3272   0015F2  EF05  F00B         	goto	l2253
  3273   0015F6                     l2249:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3276   0015F6  0E00               	movlw	0
  3277   0015F8  6E02               	movwf	(fputc@c+1)^0,c
  3278   0015FA  0E20               	movlw	32
  3279   0015FC  6E01               	movwf	fputc@c^0,c
  3280   0015FE  C00F  F003         	movff	pad@fp,fputc@fp
  3281   001602  EC7D  F009         	call	_fputc	;wreg free
  3282   001606                     
  3283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3284   001606  4A15               	infsnz	pad@i^0,f,c
  3285   001608  2A16               	incf	(pad@i+1)^0,f,c
  3286   00160A                     l2253:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3289   00160A  5012               	movf	pad@p^0,w,c
  3290   00160C  5C15               	subwf	pad@i^0,w,c
  3291   00160E  5016               	movf	(pad@i+1)^0,w,c
  3292   001610  0A80               	xorlw	128
  3293   001612  6E14               	movwf	??_pad^0,c
  3294   001614  5013               	movf	(pad@p+1)^0,w,c
  3295   001616  0A80               	xorlw	128
  3296   001618  5814               	subwfb	??_pad^0,w,c
  3297   00161A  A0D8               	btfss	status,0,c
  3298   00161C  EF12  F00B         	goto	u1361
  3299   001620  EF14  F00B         	goto	u1360
  3300   001624                     u1361:
  3301   001624  EFFB  F00A         	goto	l2249
  3302   001628                     u1360:
  3303   001628                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3305   001628  B058               	btfsc	_flags^0,0,c
  3306   00162A  EF19  F00B         	goto	u1371
  3307   00162E  EF1B  F00B         	goto	u1370
  3308   001632                     u1371:
  3309   001632  EF23  F00B         	goto	l968
  3310   001636                     u1370:
  3311   001636                     
  3312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3313   001636  C010  F009         	movff	pad@buf,fputs@s
  3314   00163A  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3315   00163E  C00F  F00B         	movff	pad@fp,fputs@fp
  3316   001642  EC40  F00C         	call	_fputs	;wreg free
  3317   001646                     l968:
  3318   001646  0012               	return		;funcret
  3319   001648                     __end_of_pad:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _fputs *****************
  3323 ;; Defined at:
  3324 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3327 ;;		 -> dbuf(32), 
  3328 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3329 ;;		 -> sprintf@f(12), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  i               2   12[COMRAM] int 
  3332 ;;  c               1   11[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  2    8[COMRAM] int 
  3335 ;; Registers used:
  3336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3342 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;Total ram usage:        6 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		_fputc
  3351 ;; This function is called by:
  3352 ;;		_pad
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text27
  3357   001880                     __ptext27:
  3358                           	callstack 0
  3359   001880                     _fputs:
  3360                           	callstack 23
  3361   001880  0E00               	movlw	0
  3362   001882  6E0E               	movwf	(fputs@i+1)^0,c
  3363   001884  0E00               	movlw	0
  3364   001886  6E0D               	movwf	fputs@i^0,c
  3365   001888  EF4F  F00C         	goto	l2153
  3366   00188C                     l2149:
  3367   00188C  C00C  F001         	movff	fputs@c,fputc@c
  3368   001890  6A02               	clrf	(fputc@c+1)^0,c
  3369   001892  C00B  F003         	movff	fputs@fp,fputc@fp
  3370   001896  EC7D  F009         	call	_fputc	;wreg free
  3371   00189A  4A0D               	infsnz	fputs@i^0,f,c
  3372   00189C  2A0E               	incf	(fputs@i+1)^0,f,c
  3373   00189E                     l2153:
  3374   00189E  500D               	movf	fputs@i^0,w,c
  3375   0018A0  2409               	addwf	fputs@s^0,w,c
  3376   0018A2  6ED9               	movwf	fsr2l,c
  3377   0018A4  500E               	movf	(fputs@i+1)^0,w,c
  3378   0018A6  200A               	addwfc	(fputs@s+1)^0,w,c
  3379   0018A8  6EDA               	movwf	fsr2h,c
  3380   0018AA  50DF               	movf	indf2,w,c
  3381   0018AC  6E0C               	movwf	fputs@c^0,c
  3382   0018AE  500C               	movf	fputs@c^0,w,c
  3383   0018B0  A4D8               	btfss	status,2,c
  3384   0018B2  EF5D  F00C         	goto	u1211
  3385   0018B6  EF5F  F00C         	goto	u1210
  3386   0018BA                     u1211:
  3387   0018BA  EF46  F00C         	goto	l2149
  3388   0018BE                     u1210:
  3389   0018BE  0012               	return		;funcret
  3390   0018C0                     __end_of_fputs:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _fputc *****************
  3394 ;; Defined at:
  3395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  c               2    0[COMRAM] int 
  3398 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3399 ;;		 -> sprintf@f(12), 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;		None
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    0[COMRAM] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;Total ram usage:        8 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 1
  3418 ;; This function calls:
  3419 ;;		_putch
  3420 ;; This function is called by:
  3421 ;;		_pad
  3422 ;;		_vfpfcnvrt
  3423 ;;		_fputs
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text28
  3428   0012FA                     __ptext28:
  3429                           	callstack 0
  3430   0012FA                     _fputc:
  3431                           	callstack 26
  3432   0012FA  5003               	movf	fputc@fp^0,w,c
  3433   0012FC  B4D8               	btfsc	status,2,c
  3434   0012FE  EF83  F009         	goto	u1171
  3435   001302  EF85  F009         	goto	u1170
  3436   001306                     u1171:
  3437   001306  EF8D  F009         	goto	l2137
  3438   00130A                     u1170:
  3439   00130A  5003               	movf	fputc@fp^0,w,c
  3440   00130C  A4D8               	btfss	status,2,c
  3441   00130E  EF8B  F009         	goto	u1181
  3442   001312  EF8D  F009         	goto	u1180
  3443   001316                     u1181:
  3444   001316  EF92  F009         	goto	l2139
  3445   00131A                     u1180:
  3446   00131A                     l2137:
  3447   00131A  5001               	movf	fputc@c^0,w,c
  3448   00131C  EC8A  F00D         	call	_putch
  3449   001320  EFD9  F009         	goto	l1032
  3450   001324                     l2139:
  3451   001324  5003               	movf	fputc@fp^0,w,c
  3452   001326  6ED9               	movwf	fsr2l,c
  3453   001328  6ADA               	clrf	fsr2h,c
  3454   00132A  0E0A               	movlw	10
  3455   00132C  26D9               	addwf	fsr2l,f,c
  3456   00132E  50DE               	movf	postinc2,w,c
  3457   001330  10DE               	iorwf	postinc2,w,c
  3458   001332  B4D8               	btfsc	status,2,c
  3459   001334  EF9E  F009         	goto	u1191
  3460   001338  EFA0  F009         	goto	u1190
  3461   00133C                     u1191:
  3462   00133C  EFB9  F009         	goto	l2143
  3463   001340                     u1190:
  3464   001340  5003               	movf	fputc@fp^0,w,c
  3465   001342  6ED9               	movwf	fsr2l,c
  3466   001344  6ADA               	clrf	fsr2h,c
  3467   001346  0E0A               	movlw	10
  3468   001348  26D9               	addwf	fsr2l,f,c
  3469   00134A  5003               	movf	fputc@fp^0,w,c
  3470   00134C  6EE1               	movwf	fsr1l,c
  3471   00134E  6AE2               	clrf	fsr1h,c
  3472   001350  0E03               	movlw	3
  3473   001352  26E1               	addwf	fsr1l,f,c
  3474   001354  50DE               	movf	postinc2,w,c
  3475   001356  5CE6               	subwf	postinc1,w,c
  3476   001358  50E6               	movf	postinc1,w,c
  3477   00135A  0A80               	xorlw	128
  3478   00135C  6E08               	movwf	(??_fputc+4)^0,c
  3479   00135E  50DE               	movf	postinc2,w,c
  3480   001360  0A80               	xorlw	128
  3481   001362  5808               	subwfb	(??_fputc+4)^0,w,c
  3482   001364  B0D8               	btfsc	status,0,c
  3483   001366  EFB7  F009         	goto	u1201
  3484   00136A  EFB9  F009         	goto	u1200
  3485   00136E                     u1201:
  3486   00136E  EFD9  F009         	goto	l1032
  3487   001372                     u1200:
  3488   001372                     l2143:
  3489   001372  5003               	movf	fputc@fp^0,w,c
  3490   001374  6ED9               	movwf	fsr2l,c
  3491   001376  6ADA               	clrf	fsr2h,c
  3492   001378  0E03               	movlw	3
  3493   00137A  26D9               	addwf	fsr2l,f,c
  3494   00137C  CFDE F004          	movff	postinc2,??_fputc
  3495   001380  CFDD F005          	movff	postdec2,??_fputc+1
  3496   001384  5003               	movf	fputc@fp^0,w,c
  3497   001386  6ED9               	movwf	fsr2l,c
  3498   001388  6ADA               	clrf	fsr2h,c
  3499   00138A  CFDE F006          	movff	postinc2,??_fputc+2
  3500   00138E  CFDD F007          	movff	postdec2,??_fputc+3
  3501   001392  5004               	movf	??_fputc^0,w,c
  3502   001394  2406               	addwf	(??_fputc+2)^0,w,c
  3503   001396  6ED9               	movwf	fsr2l,c
  3504   001398  5005               	movf	(??_fputc+1)^0,w,c
  3505   00139A  2007               	addwfc	(??_fputc+3)^0,w,c
  3506   00139C  6EDA               	movwf	fsr2h,c
  3507   00139E  C001  FFDF         	movff	fputc@c,indf2
  3508   0013A2  5003               	movf	fputc@fp^0,w,c
  3509   0013A4  6ED9               	movwf	fsr2l,c
  3510   0013A6  6ADA               	clrf	fsr2h,c
  3511   0013A8  0E03               	movlw	3
  3512   0013AA  26D9               	addwf	fsr2l,f,c
  3513   0013AC  2ADE               	incf	postinc2,f,c
  3514   0013AE  0E00               	movlw	0
  3515   0013B0  22DD               	addwfc	postdec2,f,c
  3516   0013B2                     l1032:
  3517   0013B2  0012               	return		;funcret
  3518   0013B4                     __end_of_fputc:
  3519                           	callstack 0
  3520                           
  3521 ;; *************** function _putch *****************
  3522 ;; Defined at:
  3523 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  c               1    wreg     unsigned char 
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;  c               1    0[COMRAM] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		wreg
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used: 1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_fputc
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           	psect	text29
  3551   001B14                     __ptext29:
  3552                           	callstack 0
  3553   001B14                     _putch:
  3554                           	callstack 26
  3555   001B14  0012               	return		;funcret
  3556   001B16                     __end_of_putch:
  3557                           	callstack 0
  3558                           
  3559 ;; *************** function _abs *****************
  3560 ;; Defined at:
  3561 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  a               2    6[COMRAM] int 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  2    6[COMRAM] int 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;Total ram usage:        4 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_dtoa
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text30
  3589   00199E                     __ptext30:
  3590                           	callstack 0
  3591   00199E                     _abs:
  3592                           	callstack 26
  3593   00199E  BE08               	btfsc	(abs@a+1)^0,7,c
  3594   0019A0  EFD4  F00C         	goto	u1381
  3595   0019A4  EFD6  F00C         	goto	u1380
  3596   0019A8                     u1381:
  3597   0019A8  EFDC  F00C         	goto	l1017
  3598   0019AC                     u1380:
  3599   0019AC  C007  F007         	movff	abs@a,?_abs
  3600   0019B0  C008  F008         	movff	abs@a+1,?_abs+1
  3601   0019B4  EFE8  F00C         	goto	l1020
  3602   0019B8                     l1017:
  3603   0019B8  C007  F009         	movff	abs@a,??_abs
  3604   0019BC  C008  F00A         	movff	abs@a+1,??_abs+1
  3605   0019C0  1E09               	comf	??_abs^0,f,c
  3606   0019C2  1E0A               	comf	(??_abs+1)^0,f,c
  3607   0019C4  4A09               	infsnz	??_abs^0,f,c
  3608   0019C6  2A0A               	incf	(??_abs+1)^0,f,c
  3609   0019C8  C009  F007         	movff	??_abs,?_abs
  3610   0019CC  C00A  F008         	movff	??_abs+1,?_abs+1
  3611   0019D0                     l1020:
  3612   0019D0  0012               	return		;funcret
  3613   0019D2                     __end_of_abs:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function ___awmod *****************
  3617 ;; Defined at:
  3618 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  dividend        2    0[COMRAM] int 
  3621 ;;  divisor         2    2[COMRAM] int 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  sign            1    5[COMRAM] unsigned char 
  3624 ;;  counter         1    4[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    0[COMRAM] int 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;Total ram usage:        6 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_dtoa
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text31
  3648   0013B4                     __ptext31:
  3649                           	callstack 0
  3650   0013B4                     ___awmod:
  3651                           	callstack 26
  3652   0013B4  0E00               	movlw	0
  3653   0013B6  6E06               	movwf	___awmod@sign^0,c
  3654   0013B8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3655   0013BA  EFE3  F009         	goto	u1280
  3656   0013BE  EFE1  F009         	goto	u1281
  3657   0013C2                     u1281:
  3658   0013C2  EFE9  F009         	goto	l2213
  3659   0013C6                     u1280:
  3660   0013C6  6C01               	negf	___awmod@dividend^0,c
  3661   0013C8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3662   0013CA  B0D8               	btfsc	status,0,c
  3663   0013CC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3664   0013CE  0E01               	movlw	1
  3665   0013D0  6E06               	movwf	___awmod@sign^0,c
  3666   0013D2                     l2213:
  3667   0013D2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3668   0013D4  EFF0  F009         	goto	u1290
  3669   0013D8  EFEE  F009         	goto	u1291
  3670   0013DC                     u1291:
  3671   0013DC  EFF4  F009         	goto	l2217
  3672   0013E0                     u1290:
  3673   0013E0  6C03               	negf	___awmod@divisor^0,c
  3674   0013E2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3675   0013E4  B0D8               	btfsc	status,0,c
  3676   0013E6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3677   0013E8                     l2217:
  3678   0013E8  5003               	movf	___awmod@divisor^0,w,c
  3679   0013EA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3680   0013EC  B4D8               	btfsc	status,2,c
  3681   0013EE  EFFB  F009         	goto	u1301
  3682   0013F2  EFFD  F009         	goto	u1300
  3683   0013F6                     u1301:
  3684   0013F6  EF21  F00A         	goto	l2233
  3685   0013FA                     u1300:
  3686   0013FA  0E01               	movlw	1
  3687   0013FC  6E05               	movwf	___awmod@counter^0,c
  3688   0013FE  EF05  F00A         	goto	l2223
  3689   001402                     l2221:
  3690   001402  90D8               	bcf	status,0,c
  3691   001404  3603               	rlcf	___awmod@divisor^0,f,c
  3692   001406  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3693   001408  2A05               	incf	___awmod@counter^0,f,c
  3694   00140A                     l2223:
  3695   00140A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3696   00140C  EF0A  F00A         	goto	u1311
  3697   001410  EF0C  F00A         	goto	u1310
  3698   001414                     u1311:
  3699   001414  EF01  F00A         	goto	l2221
  3700   001418                     u1310:
  3701   001418                     l2225:
  3702   001418  5003               	movf	___awmod@divisor^0,w,c
  3703   00141A  5C01               	subwf	___awmod@dividend^0,w,c
  3704   00141C  5004               	movf	(___awmod@divisor+1)^0,w,c
  3705   00141E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3706   001420  A0D8               	btfss	status,0,c
  3707   001422  EF15  F00A         	goto	u1321
  3708   001426  EF17  F00A         	goto	u1320
  3709   00142A                     u1321:
  3710   00142A  EF1B  F00A         	goto	l2229
  3711   00142E                     u1320:
  3712   00142E  5003               	movf	___awmod@divisor^0,w,c
  3713   001430  5E01               	subwf	___awmod@dividend^0,f,c
  3714   001432  5004               	movf	(___awmod@divisor+1)^0,w,c
  3715   001434  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3716   001436                     l2229:
  3717   001436  90D8               	bcf	status,0,c
  3718   001438  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3719   00143A  3203               	rrcf	___awmod@divisor^0,f,c
  3720   00143C  2E05               	decfsz	___awmod@counter^0,f,c
  3721   00143E  EF0C  F00A         	goto	l2225
  3722   001442                     l2233:
  3723   001442  5006               	movf	___awmod@sign^0,w,c
  3724   001444  B4D8               	btfsc	status,2,c
  3725   001446  EF27  F00A         	goto	u1331
  3726   00144A  EF29  F00A         	goto	u1330
  3727   00144E                     u1331:
  3728   00144E  EF2D  F00A         	goto	l2237
  3729   001452                     u1330:
  3730   001452  6C01               	negf	___awmod@dividend^0,c
  3731   001454  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3732   001456  B0D8               	btfsc	status,0,c
  3733   001458  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3734   00145A                     l2237:
  3735   00145A  C001  F001         	movff	___awmod@dividend,?___awmod
  3736   00145E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3737   001462  0012               	return		;funcret
  3738   001464                     __end_of___awmod:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function ___awdiv *****************
  3742 ;; Defined at:
  3743 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  dividend        2    0[COMRAM] int 
  3746 ;;  divisor         2    2[COMRAM] int 
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  quotient        2    6[COMRAM] int 
  3749 ;;  sign            1    5[COMRAM] unsigned char 
  3750 ;;  counter         1    4[COMRAM] unsigned char 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2    0[COMRAM] int 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;Total ram usage:        8 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_dtoa
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text32
  3774   001236                     __ptext32:
  3775                           	callstack 0
  3776   001236                     ___awdiv:
  3777                           	callstack 26
  3778   001236  0E00               	movlw	0
  3779   001238  6E06               	movwf	___awdiv@sign^0,c
  3780   00123A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3781   00123C  EF24  F009         	goto	u1220
  3782   001240  EF22  F009         	goto	u1221
  3783   001244                     u1221:
  3784   001244  EF2A  F009         	goto	l2169
  3785   001248                     u1220:
  3786   001248  6C03               	negf	___awdiv@divisor^0,c
  3787   00124A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3788   00124C  B0D8               	btfsc	status,0,c
  3789   00124E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3790   001250  0E01               	movlw	1
  3791   001252  6E06               	movwf	___awdiv@sign^0,c
  3792   001254                     l2169:
  3793   001254  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3794   001256  EF31  F009         	goto	u1230
  3795   00125A  EF2F  F009         	goto	u1231
  3796   00125E                     u1231:
  3797   00125E  EF37  F009         	goto	l2175
  3798   001262                     u1230:
  3799   001262  6C01               	negf	___awdiv@dividend^0,c
  3800   001264  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3801   001266  B0D8               	btfsc	status,0,c
  3802   001268  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3803   00126A  0E01               	movlw	1
  3804   00126C  1A06               	xorwf	___awdiv@sign^0,f,c
  3805   00126E                     l2175:
  3806   00126E  0E00               	movlw	0
  3807   001270  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3808   001272  0E00               	movlw	0
  3809   001274  6E07               	movwf	___awdiv@quotient^0,c
  3810   001276  5003               	movf	___awdiv@divisor^0,w,c
  3811   001278  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3812   00127A  B4D8               	btfsc	status,2,c
  3813   00127C  EF42  F009         	goto	u1241
  3814   001280  EF44  F009         	goto	u1240
  3815   001284                     u1241:
  3816   001284  EF6C  F009         	goto	l2197
  3817   001288                     u1240:
  3818   001288  0E01               	movlw	1
  3819   00128A  6E05               	movwf	___awdiv@counter^0,c
  3820   00128C  EF4C  F009         	goto	l2183
  3821   001290                     l2181:
  3822   001290  90D8               	bcf	status,0,c
  3823   001292  3603               	rlcf	___awdiv@divisor^0,f,c
  3824   001294  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3825   001296  2A05               	incf	___awdiv@counter^0,f,c
  3826   001298                     l2183:
  3827   001298  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3828   00129A  EF51  F009         	goto	u1251
  3829   00129E  EF53  F009         	goto	u1250
  3830   0012A2                     u1251:
  3831   0012A2  EF48  F009         	goto	l2181
  3832   0012A6                     u1250:
  3833   0012A6                     l2185:
  3834   0012A6  90D8               	bcf	status,0,c
  3835   0012A8  3607               	rlcf	___awdiv@quotient^0,f,c
  3836   0012AA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3837   0012AC  5003               	movf	___awdiv@divisor^0,w,c
  3838   0012AE  5C01               	subwf	___awdiv@dividend^0,w,c
  3839   0012B0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3840   0012B2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3841   0012B4  A0D8               	btfss	status,0,c
  3842   0012B6  EF5F  F009         	goto	u1261
  3843   0012BA  EF61  F009         	goto	u1260
  3844   0012BE                     u1261:
  3845   0012BE  EF66  F009         	goto	l2193
  3846   0012C2                     u1260:
  3847   0012C2  5003               	movf	___awdiv@divisor^0,w,c
  3848   0012C4  5E01               	subwf	___awdiv@dividend^0,f,c
  3849   0012C6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3850   0012C8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3851   0012CA  8007               	bsf	___awdiv@quotient^0,0,c
  3852   0012CC                     l2193:
  3853   0012CC  90D8               	bcf	status,0,c
  3854   0012CE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3855   0012D0  3203               	rrcf	___awdiv@divisor^0,f,c
  3856   0012D2  2E05               	decfsz	___awdiv@counter^0,f,c
  3857   0012D4  EF53  F009         	goto	l2185
  3858   0012D8                     l2197:
  3859   0012D8  5006               	movf	___awdiv@sign^0,w,c
  3860   0012DA  B4D8               	btfsc	status,2,c
  3861   0012DC  EF72  F009         	goto	u1271
  3862   0012E0  EF74  F009         	goto	u1270
  3863   0012E4                     u1271:
  3864   0012E4  EF78  F009         	goto	l2201
  3865   0012E8                     u1270:
  3866   0012E8  6C07               	negf	___awdiv@quotient^0,c
  3867   0012EA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3868   0012EC  B0D8               	btfsc	status,0,c
  3869   0012EE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3870   0012F0                     l2201:
  3871   0012F0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3872   0012F4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3873   0012F8  0012               	return		;funcret
  3874   0012FA                     __end_of___awdiv:
  3875                           	callstack 0
  3876                           
  3877 ;; *************** function ___lwdiv *****************
  3878 ;; Defined at:
  3879 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  dividend        2    6[COMRAM] unsigned int 
  3882 ;;  divisor         2    8[COMRAM] unsigned int 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  quotient        2   11[COMRAM] unsigned int 
  3885 ;;  counter         1   10[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  2    6[COMRAM] unsigned int 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;Total ram usage:        7 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_ADC2String
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text33
  3909   001648                     __ptext33:
  3910                           	callstack 0
  3911   001648                     ___lwdiv:
  3912                           	callstack 29
  3913   001648  0E00               	movlw	0
  3914   00164A  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  3915   00164C  0E00               	movlw	0
  3916   00164E  6E0C               	movwf	___lwdiv@quotient^0,c
  3917   001650  5009               	movf	___lwdiv@divisor^0,w,c
  3918   001652  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3919   001654  B4D8               	btfsc	status,2,c
  3920   001656  EF2F  F00B         	goto	u1621
  3921   00165A  EF31  F00B         	goto	u1620
  3922   00165E                     u1621:
  3923   00165E  EF59  F00B         	goto	l756
  3924   001662                     u1620:
  3925   001662  0E01               	movlw	1
  3926   001664  6E0B               	movwf	___lwdiv@counter^0,c
  3927   001666  EF39  F00B         	goto	l2463
  3928   00166A                     l2461:
  3929   00166A  90D8               	bcf	status,0,c
  3930   00166C  3609               	rlcf	___lwdiv@divisor^0,f,c
  3931   00166E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3932   001670  2A0B               	incf	___lwdiv@counter^0,f,c
  3933   001672                     l2463:
  3934   001672  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3935   001674  EF3E  F00B         	goto	u1631
  3936   001678  EF40  F00B         	goto	u1630
  3937   00167C                     u1631:
  3938   00167C  EF35  F00B         	goto	l2461
  3939   001680                     u1630:
  3940   001680                     l2465:
  3941   001680  90D8               	bcf	status,0,c
  3942   001682  360C               	rlcf	___lwdiv@quotient^0,f,c
  3943   001684  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3944   001686  5009               	movf	___lwdiv@divisor^0,w,c
  3945   001688  5C07               	subwf	___lwdiv@dividend^0,w,c
  3946   00168A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3947   00168C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3948   00168E  A0D8               	btfss	status,0,c
  3949   001690  EF4C  F00B         	goto	u1641
  3950   001694  EF4E  F00B         	goto	u1640
  3951   001698                     u1641:
  3952   001698  EF53  F00B         	goto	l2473
  3953   00169C                     u1640:
  3954   00169C  5009               	movf	___lwdiv@divisor^0,w,c
  3955   00169E  5E07               	subwf	___lwdiv@dividend^0,f,c
  3956   0016A0  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3957   0016A2  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3958   0016A4  800C               	bsf	___lwdiv@quotient^0,0,c
  3959   0016A6                     l2473:
  3960   0016A6  90D8               	bcf	status,0,c
  3961   0016A8  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3962   0016AA  3209               	rrcf	___lwdiv@divisor^0,f,c
  3963   0016AC  2E0B               	decfsz	___lwdiv@counter^0,f,c
  3964   0016AE  EF40  F00B         	goto	l2465
  3965   0016B2                     l756:
  3966   0016B2  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  3967   0016B6  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3968   0016BA  0012               	return		;funcret
  3969   0016BC                     __end_of___lwdiv:
  3970                           	callstack 0
  3971                           
  3972                           	psect	rparam
  3973   000000                     
  3974                           	psect	config
  3975                           
  3976                           ;Config register CONFIG1L @ 0x300000
  3977                           ;	External Oscillator mode Selection bits
  3978                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3979                           ;	Power-up default value for COSC bits
  3980                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3981   300000                     	org	3145728
  3982   300000  AA                 	db	170
  3983                           
  3984                           ;Config register CONFIG1H @ 0x300001
  3985                           ;	unspecified, using default values
  3986                           ;	Clock Out Enable bit
  3987                           ;	CLKOUTEN = 0x1, unprogrammed default
  3988                           ;	Clock Switch Enable bit
  3989                           ;	CSWEN = 0x1, unprogrammed default
  3990                           ;	Fail-Safe Clock Monitor Enable bit
  3991                           ;	FCMEN = 0x1, unprogrammed default
  3992   300001                     	org	3145729
  3993   300001  FF                 	db	255
  3994                           
  3995                           ;Config register CONFIG3L @ 0x300004
  3996                           ;	WDT Period Select bits
  3997                           ;	WDTCPS = 0x1F, unprogrammed default
  3998                           ;	WDT operating mode
  3999                           ;	WDTE = OFF, WDT Disabled
  4000   300004                     	org	3145732
  4001   300004  9F                 	db	159
  4002                           
  4003                           ;Config register CONFIG3H @ 0x300005
  4004                           ;	unspecified, using default values
  4005                           ;	WDT Window Select bits
  4006                           ;	WDTCWS = 0x7, unprogrammed default
  4007                           ;	WDT input clock selector
  4008                           ;	WDTCCS = 0x7, unprogrammed default
  4009   300005                     	org	3145733
  4010   300005  FF                 	db	255
  4011                           tosu	equ	0xFFF
  4012                           tosh	equ	0xFFE
  4013                           tosl	equ	0xFFD
  4014                           stkptr	equ	0xFFC
  4015                           pclatu	equ	0xFFB
  4016                           pclath	equ	0xFFA
  4017                           pcl	equ	0xFF9
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           prodh	equ	0xFF4
  4023                           prodl	equ	0xFF3
  4024                           indf0	equ	0xFEF
  4025                           postinc0	equ	0xFEE
  4026                           postdec0	equ	0xFED
  4027                           preinc0	equ	0xFEC
  4028                           plusw0	equ	0xFEB
  4029                           fsr0h	equ	0xFEA
  4030                           fsr0l	equ	0xFE9
  4031                           wreg	equ	0xFE8
  4032                           indf1	equ	0xFE7
  4033                           postinc1	equ	0xFE6
  4034                           postdec1	equ	0xFE5
  4035                           preinc1	equ	0xFE4
  4036                           plusw1	equ	0xFE3
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           bsr	equ	0xFE0
  4040                           indf2	equ	0xFDF
  4041                           postinc2	equ	0xFDE
  4042                           postdec2	equ	0xFDD
  4043                           preinc2	equ	0xFDC
  4044                           plusw2	equ	0xFDB
  4045                           fsr2h	equ	0xFDA
  4046                           fsr2l	equ	0xFD9
  4047                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        1
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      94
    BANK0           160    152     154
    BANK1           256    100     232
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@buf(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1172$buffer	PTR unsigned char  size(2) Largest target is 0

    S1172$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK0[50]), main@buf(BANK0[50]), main@clear_char(BANK1[50]), main@green_char(BANK1[50]), 
		 -> main@red_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK0[50]), main@buf(BANK0[50]), main@clear_char(BANK1[50]), main@green_char(BANK1[50]), 
		 -> main@red_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               260   260      0   23376
                                             77 COMRAM     8     8      0
                                              0 BANK0    152   152      0
                                              0 BANK1    100   100      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     636
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                           9     6      3   11504
                                             68 COMRAM     9     6      3
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    9579
                                             48 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    8367
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    7879
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    1212
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     772
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     601
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _ADC_getval
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     64      E8       7       90.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9A       5       96.2%
BITBIGSFRh          79      0       0      32        0.0%
BITBIGSFRlhlhh      6E      0       0      38        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5E       1       98.9%
BITBIGSFRlllhh      36      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      45        0.0%
BITBIGSFRlllll      26      0       0      49        0.0%
BITBIGSFRlhlll      20      0       0      41        0.0%
BITBIGSFRlhhhhl     17      0       0      35        0.0%
BITBIGSFRlllhll      F      0       0      47        0.0%
BITBIGSFRlllhlh      C      0       0      44        0.0%
BITBIGSFRllh         C      0       0      42        0.0%
BITBIGSFRlllhll      9      0       0      46        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRlhhhhl      7      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      48        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRlhhhhh      1      0       0      33        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E0      50        0.0%
DATA                 0      0     1E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 12:51:40 2024

               _color_read_Red 16BC                _color_read_Blue 17AC                             l20 19E2  
                           l21 1A00                             l15 1AD0                             l40 199C  
                           l18 19D4                             l43 1A98                             l52 17FA  
                           l46 170A                             l55 17AA                             l49 175A  
                           l82 1A2A                             l91 1B12                             l85 1A2C  
                           l94 1AFE                             l88 1A52                             l97 1B08  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Clear 175C  
             _color_read_Green 170C                            l100 1AF4                            l103 183C  
                          l202 1AB6                            l211 1AD4                            l220 1932  
                          l214 1AE8                            l148 1150                            l262 15B4  
                          l265 1A78                            l509 1462                            l496 12F8  
                          l763 16BA                            l756 16B2                            l943 18FA  
                          l963 15EA                            l971 1028                            l966 1628  
                          l968 1646                            l984 113E                            l992 1510  
                          l988 1508                            _abs 199E                            _pad 15B6  
                 ___awmod@sign 0006                            wreg 0FE8                           l1020 19D0  
                         l1013 187E                           l1007 0FC8                           l1032 13B2  
                         l1040 18BE                           l1017 19B8                           l1043 1B14  
                         ?_abs 0007                           l2201 12F0                           l2211 13CE  
                         l2221 1402                           l2213 13D2                           l2205 13B4  
                         l2141 1340                           l2133 12FA                           l2301 10FC  
                         l2231 143C                           l2223 140A                           l2215 13E0  
                         l2207 13B8                           l2143 1372                           l2135 130A  
                         l2151 189A                           l2303 110C                           l2311 1464  
                         l2161 1236                           l2225 1418                           l2233 1442  
                         l2217 13E8                           l2209 13C6                           l2137 131A  
                         l2153 189E                           l2241 15B6                           l2305 1112  
                         l2321 14D6                           l2313 146C                           l2401 1856  
                         l2171 1262                           l2163 123A                           l2235 1452  
                         l2227 142E                           l2219 13FA                           l2139 1324  
                         l2147 1880                           l2251 1606                           l2243 15C4  
                         l2307 1122                           l2155 1A54                           l2315 1492  
                         l2323 14DE                           l2331 0E6C                           l2403 1876  
                         l2411 1A12                           l2181 1290                           l2173 126A  
                         l2165 1248                           l2237 145A                           l2229 1436  
                         l2149 188C                           l2253 160A                           l2245 15D4  
                         l2261 0FCA                           l2157 1A70                           l2317 149A  
                         l2341 0E90                           l2333 0E74                           l2413 1A14  
                         l2325 1A2C                           l2501 1988                           l2421 1AF6  
                         l2191 12CA                           l2183 1298                           l2175 126E  
                         l2167 1250                           l2255 1636                           l2247 15E2  
                         l2271 1000                           l2263 0FCE                           l2319 14B6  
                         l2351 0EEA                           l2343 0E9C                           l2335 0E80  
                         l2415 1A16                           l2407 1A02                           l2327 1A3C  
                         l2503 1992                           l2431 1812                           l2423 1AFA  
                         l2511 170C                           l2193 12CC                           l2185 12A6  
                         l2177 1276                           l2169 1254                           l2257 199E  
                         l2249 15F6                           l2281 103A                           l2273 1010  
                         l2265 0FE2                           l2361 0F40                           l2353 0EFE  
                         l2337 0E86                           l2329 0E46                           l2441 18CC  
                         l2417 1A18                           l2409 1A0C                           l2433 1838  
                         l2425 17FE                           l2513 1752                           l2505 16BC  
                         l2195 12D2                           l2187 12AC                           l2179 1288  
                         l2259 19AC                           l2283 1040                           l2291 1098  
                         l2275 101C                           l2267 0FEA                           l2371 0F96  
                         l2363 0F60                           l2355 0F0C                           l2347 0EA4  
                         l2339 0E8E                           l2443 18D4                           l2419 1A7C  
                         l2435 183A                           l2427 1802                           l2523 175C  
                         l2507 1702                           l2531 1AA4                           l2451 1AD4  
                         l2461 166A                           l2189 12C2                           l2197 12D8  
                         l2293 10B2                           l2285 1072                           l2277 1024  
                         l2269 0FFA                           l2365 0F78                           l2357 0F16  
                         l2349 0EDA                           l2445 18DC                           l2541 1512  
                         l2429 180A                           l2517 17AC                           l2525 17A2  
                         l2533 1AA6                           l2453 1AE4                           l2471 16A4  
                         l2463 1672                           l2455 1648                           l2199 12E8  
                         l2295 10C4                           l2287 1076                           l2279 1030  
                         l2367 0F82                           l2359 0F20                           l2623 0ECC  
                         l2375 0FA2                           l2447 18EC                           l2439 18C0  
                         l2543 152E                           l2391 1AF0                           l2519 17F2  
                         l2535 1AB0                           l2551 1900                           l2473 16A6  
                         l2465 1680                           l2457 1650                           l2297 10D4  
                         l2289 107C                           l2545 157E                           l2481 1ACA  
                         l2385 1B0A                           l2393 1B00                           l2537 1AB2  
                         l2529 1A9A                           l2553 190E                           l2561 1144  
                         l2475 16AC                           l2467 1686                           l2459 1662  
                         l2299 10EE                           l2547 159C                           l2491 19F8  
                         l2483 1ACC                           l2387 1B0E                           l2395 1B04  
                         l2539 1AB4                           l2555 1912                           l2571 119C  
                         l2563 1148                           l2469 169C                           l2397 183E  
                         l2485 1ACE                           l2477 1AB8                           l2389 1AEC  
                         l2557 191A                           l2549 18FC                           l2581 1202  
                         l2573 11B2                           l2565 114C                           l2399 1846  
                         l2487 19D2                           l2479 1AC2                           l2495 196A  
                         l2583 120C                           l2575 11C8                           l2567 114E  
                         l2559 1140                           l2489 19E8                           l2497 196E  
                         l2585 1216                           l2577 11E0                           l2569 118C  
                         l2499 1978                           l2587 1222                           l2579 11F8  
                         ?_pad 000F                           STR_1 0E3B                           STR_2 0E30  
                         STR_3 0E24                           STR_4 0E16                           STR_5 0E01  
                         u1200 1372                           u1201 136E                           u1210 18BE  
                         u1211 18BA                           u1220 1248                           u1300 13FA  
                         u1221 1244                           u1301 13F6                           u1230 1262  
                         u1310 1418                           u1231 125E                           u1311 1414  
                         u1240 1288                           u1320 142E                           u1400 0FE0  
                         u1241 1284                           u1321 142A                           u1250 12A6  
                         u1330 1452                           u1170 130A                           u1410 0FFA  
                         u1251 12A2                           u1331 144E                           u1171 1306  
                         u1411 0FF6                           u1260 12C2                           u1180 131A  
                         u1340 15C4                           u1420 1010                           u1500 1508  
                         u1261 12BE                           u1181 1316                           u1341 15C0  
                         u1421 100C                           u1501 1504                           u1270 12E8  
                         u1190 1340                           u1350 15E2                           u1430 10B2  
                         u1510 1A3C                           u1271 12E4                           u1191 133C  
                         u1351 15DE                           u1431 10AE                           u1511 1A38  
                         u1280 13C6                           u1360 1628                           u1440 10C4  
                         u1520 1A52                   _BAUD4CONbits 0EE9                           u1281 13C2  
                         u1361 1624                           u1441 10C0                           u1521 1A4E  
                         u1290 13E0                           u1370 1636                           u1450 10D4  
                         u1530 0E6C                           u1610 1AE4                           u1291 13DC  
                         u1371 1632                           u1451 10D0                           u1531 0E68  
                         u1611 1AE0                           u1620 1662                           u1380 19AC  
                         u1460 10EE                           u1540 0EEA                           u1621 165E  
                         u1381 19A8                           u1461 10EA                           u1541 0EE6  
                         u1630 1680                           u1470 10FC                           u1390 0FDE  
                         u1550 0F0C                           u1631 167C                           u1471 10F8  
                         u1391 0FD8                           u1551 0F08                           u1640 169C  
                         u1480 110C                           u1560 0F40                           u1608 1828  
                         u1641 1698                           u1481 1108                           u1561 0F3C  
                         u1490 1492                           u1570 0F60                           u1650 19E2  
                         u1491 148E                           u1571 0F5C                           u1707 15A6  
                         u1651 19DE                           u1580 1876                           u1660 1932  
                         u1581 1872                           u1661 192E                           u1590 1826  
                         u1591 181E                           u1687 1914                           u1697 197E  
                         abs@a 0007                           _dbuf 0164                           _main 1140  
                         _dtoa 0FCA                           _prec 00F8                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 1AD2         __end_of_color_read_Red 170C                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0014                          ?_main 0001  
                        ?_dtoa 0017                          _ADPCH 0F5F                __end_of___awdiv 12FA  
              __end_of___awmod 1464                ___awdiv@divisor 0003                __end_of___lwdiv 16BC  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0023                   main@red_char 0092  
      __end_of_sendCharSerial4 1AEA     __end_of_I2C_2_Master_Start 1B14     __end_of_I2C_2_Master_Write 1AF6  
                        _flags 0058            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 12FA                          _fputs 1880                          pad@fp 000F  
                        _width 0056                          _putch 1B14                          dtoa@d 0018  
                        dtoa@i 0020                          dtoa@p 001C                          dtoa@s 001F  
                        dtoa@w 001D                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 18FC        __end_of_color_read_Blue 17FC          _I2C_2_Master_RepStart 1AF6  
              ?_color_read_Red 0005                __initialization 1934                   __end_of_main 1236  
                 __end_of_dtoa 1140                   ??_ADC2String 0048                         ??_main 004E  
                       ??_dtoa 001A                  __activetblptr 0003                  main@blue_char 00C4  
   __end_of_read_prec_or_width 1512                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                  ADC2String@buf 0045               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RD5PPS 0E6F            ADC2String@frac_part 004A                         _RD6PPS 0E70  
                vfpfcnvrt@done 002B       __end_of_color_click_init 199E                         _RX4PPS 0E15  
           __end_of_ADC2String 15B6                         _TX4REG 0EE4                   ??_ADC_getval 0003  
                 vfprintf@cfmt 0030                         ___wmul 1A54                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___lwdiv 000B           read_prec_or_width@ap 0008  
                       clear_0 194C                         clear_1 195E               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       pad@buf 0010                         dtoa@fp 0017                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                   __pdataCOMRAM 005E  
                       fputs@s 0009                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1880  
                    ??_sprintf 0038             __end_of_ADC_getval 1A02                     __accesstop 0060  
      __end_of__initialization 1964       __end_of_color_read_Clear 17AC       __end_of_color_read_Green 175C  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                  __end_of_fputc 13B4                  __end_of_fputs 18C0  
                __end_of_putch 1B16                 main@clear_char 01B6                     ??_ADC_init 0001  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK0 00F8                     __pbssBANK1 0100              _color_writetoaddr 1A7A  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
               main@green_char 0184                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
            main@battery_level 004E                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 1A9A  
                    _ADREFbits 0F58             _I2C_2_Master_Start 1B0A                     _initUSART4 1A9A  
           _I2C_2_Master_Write 1AEA                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___awdiv 1236  
                      ___awmod 13B4            ?_I2C_2_Master_Start 0001                        ___lwdiv 1648  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D                   __psmallconst 0E00  
                      __pcinit 1934                        __ramtop 0E00                        __ptext0 1140  
                      __ptext1 18FC                        __ptext2 1AD2                        __ptext3 1A9A  
                      __ptext4 16BC                        __ptext5 170C                        __ptext6 175C  
                      __ptext7 17AC                        __ptext8 1AF6                        __ptext9 17FC  
        read_prec_or_width@fmt 0007               ___awmod@dividend 0001                  _RxBufWriteCnt 005D  
                      main@buf 0060                        _sprintf 18C0                        main@red 0050  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1964  
             ADC_getval@tmpval 0003                        fputc@fp 0003                        fputs@fp 000B  
            ?_color_click_init 0001             _read_prec_or_width 1464             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 0FCA                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0027                     ??_vfprintf 0030                      _TRISDbits 0F84  
                    _TRISFbits 0F86           ??_read_prec_or_width 0009       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002              ?_color_read_Clear 0005                   _EUSART4RXbuf 0150  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0005                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 1A7A                  __pidataCOMRAM 1B16            color_read_Clear@tmp 000A  
          start_initialization 1934                    __end_of_abs 19D2                    __end_of_pad 1648  
                _TxBufWriteCnt 005B            color_read_Green@tmp 000A                    vfprintf@fmt 002E  
           ADC2String@int_part 004C                       ??___wmul 0005                    __pbssCOMRAM 0056  
                __pcstackBANK0 0060                  __pcstackBANK1 0184               ___lwdiv@dividend 0007  
                    _dtoa$1251 001A                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___lwdiv 0007                   _readingIndex 0059           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 1A2C  
            _I2C_2_Master_Init 1A02              _I2C_2_Master_Read 17FC              _I2C_2_Master_Stop 1B00  
                 _RxBufReadCnt 005C                       _ADC_init 1AB8             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000C                       ?_sprintf 0031              _sendStringSerial4 18FC  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005            ??_I2C_2_Master_Stop 0002                       _LATDbits 0F7C  
            ADC2String@ADC_val 0046             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     _PIR4bits 0E37              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                     _ADC2String 1512  
                    _vfpfcnvrt 0E46                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 1A54  
    __end_of_I2C_2_Master_Init 1A2C      __end_of_I2C_2_Master_Read 183E              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 1B0A    I2C_2_Master_Write@data_byte 0002                      main@clear 00F6  
                  _ldrReadings 013C                      main@green 0054              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005A      __end_of_sendStringSerial4 1934  __end_of_I2C_2_Master_RepStart 1B00  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   _ADC_getval 19D2                     vfprintf@ap 002F                       __Lrparam 0000  
                   vfprintf@fp 002D                     ?_vfpfcnvrt 0022                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 005E                     sprintf@fmt 0033  
              ___lwdiv@divisor 0009             __end_of_initUSART4 1AB8                ___lwdiv@counter 000B  
                     __ptext10 196A                       __ptext11 1A7A                       __ptext20 18C0  
                     __ptext12 1AEA                       __ptext21 183E                       __ptext13 1B00  
                     __ptext30 199E                       __ptext22 0E46                       __ptext14 1B0A  
                     __ptext31 13B4                       __ptext23 1464                       __ptext15 1A2C  
                     __ptext32 1236                       __ptext24 1A54                       __ptext16 1A02  
                     __ptext33 1648                       __ptext25 0FCA                       __ptext17 1AB8  
                     __ptext26 15B6                       __ptext18 19D2                       __ptext27 1880  
                     __ptext19 1512                       __ptext28 12FA                       __ptext29 1B14  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                    ?_ADC2String 0045                       _vfprintf 183E  
                     main@blue 0052                      sprintf@ap 0038                    ?_ADC_getval 0001  
                  ??_vfpfcnvrt 0025               _color_click_init 196A                       sprintf@f 0039  
                     sprintf@s 0031                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                   _TX4STAbits 0EE8                _sendCharSerial4 1AD2  
