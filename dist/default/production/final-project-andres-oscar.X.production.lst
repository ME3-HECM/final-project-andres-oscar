

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 13:37:06 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53   000000                     
    54                           ; Generated 21/07/2023 GMT
    55                           ; 
    56                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F67K40 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88   000000                     
    89                           	psect	idataCOMRAM
    90   001C04                     __pidataCOMRAM:
    91                           	callstack 0
    92                           
    93                           ;initializer for _dataFlag
    94   001C04  01                 	db	1
    95   000000                     _TRISEbits	set	3973
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _ANSELFbits	set	3764
   105   000000                     _TRISFbits	set	3974
   106   000000                     _TRISGbits	set	3975
   107   000000                     _CCPR2H	set	4006
   108   000000                     _CCPR1H	set	4010
   109   000000                     _SSP2BUF	set	3797
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _ADREFbits	set	3928
   113   000000                     _ADPCH	set	3935
   114   000000                     _ADRESH	set	3940
   115   000000                     _ADCON0bits	set	3936
   116   000000                     _LATCbits	set	3963
   117   000000                     _LATDbits	set	3964
   118   000000                     _TRISDbits	set	3972
   119   000000                     _RC4REG	set	3811
   120   000000                     _SP4BRGL	set	3813
   121   000000                     _TX4STAbits	set	3816
   122   000000                     _BAUD4CONbits	set	3817
   123   000000                     _SSP2CON2	set	3802
   124   000000                     _CCPR4H	set	3873
   125   000000                     _CCPR3H	set	3877
   126   000000                     _SSP2STAT	set	3800
   127   000000                     _PIE4bits	set	3629
   128   000000                     _PIR4bits	set	3639
   129   000000                     _RC0PPS	set	3682
   130   000000                     _RD5PPS	set	3695
   131   000000                     _RE2PPS	set	3700
   132   000000                     _RD6PPS	set	3696
   133   000000                     _CCP1CONbits	set	4011
   134   000000                     _CCPTMRS0bits	set	4013
   135   000000                     _T2PR	set	4028
   136   000000                     _T2CONbits	set	4029
   137   000000                     _CCP2CONbits	set	4007
   138   000000                     _CCP3CONbits	set	3878
   139   000000                     _CCP4CONbits	set	3874
   140   000000                     _LATGbits	set	3967
   141   000000                     _LATEbits	set	3965
   142   000000                     _TRISCbits	set	3971
   143   000000                     _RC7PPS	set	3689
   144   000000                     _RE4PPS	set	3702
   145   000000                     _RG6PPS	set	3720
   146   000000                     _T2CLKCONbits	set	4031
   147   000000                     _T2HLTbits	set	4030
   148                           
   149                           	psect	smallconst
   150   000E00                     __psmallconst:
   151                           	callstack 0
   152   000E00  00                 	db	0
   153   000E01                     STR_5:
   154   000E01  56                 	db	86	;'V'
   155   000E02  6F                 	db	111	;'o'
   156   000E03  6C                 	db	108	;'l'
   157   000E04  74                 	db	116	;'t'
   158   000E05  61                 	db	97	;'a'
   159   000E06  67                 	db	103	;'g'
   160   000E07  65                 	db	101	;'e'
   161   000E08  20                 	db	32
   162   000E09  3D                 	db	61	;'='
   163   000E0A  20                 	db	32
   164   000E0B  25                 	db	37
   165   000E0C  64                 	db	100	;'d'
   166   000E0D  2E                 	db	46
   167   000E0E  25                 	db	37
   168   000E0F  30                 	db	48	;'0'
   169   000E10  32                 	db	50	;'2'
   170   000E11  64                 	db	100	;'d'
   171   000E12  2C                 	db	44
   172   000E13  20                 	db	32
   173   000E14  20                 	db	32
   174   000E15  00                 	db	0
   175   000E16                     STR_4:
   176   000E16  43                 	db	67	;'C'
   177   000E17  6C                 	db	108	;'l'
   178   000E18  65                 	db	101	;'e'
   179   000E19  61                 	db	97	;'a'
   180   000E1A  72                 	db	114	;'r'
   181   000E1B  3D                 	db	61	;'='
   182   000E1C  25                 	db	37
   183   000E1D  64                 	db	100	;'d'
   184   000E1E  2C                 	db	44
   185   000E1F  20                 	db	32
   186   000E20  20                 	db	32
   187   000E21  0D                 	db	13
   188   000E22  0A                 	db	10
   189   000E23  00                 	db	0
   190   000E24                     STR_3:
   191   000E24  47                 	db	71	;'G'
   192   000E25  72                 	db	114	;'r'
   193   000E26  65                 	db	101	;'e'
   194   000E27  65                 	db	101	;'e'
   195   000E28  6E                 	db	110	;'n'
   196   000E29  3D                 	db	61	;'='
   197   000E2A  25                 	db	37
   198   000E2B  64                 	db	100	;'d'
   199   000E2C  2C                 	db	44
   200   000E2D  20                 	db	32
   201   000E2E  20                 	db	32
   202   000E2F  00                 	db	0
   203   000E30                     STR_2:
   204   000E30  42                 	db	66	;'B'
   205   000E31  6C                 	db	108	;'l'
   206   000E32  75                 	db	117	;'u'
   207   000E33  65                 	db	101	;'e'
   208   000E34  3D                 	db	61	;'='
   209   000E35  25                 	db	37
   210   000E36  64                 	db	100	;'d'
   211   000E37  2C                 	db	44
   212   000E38  20                 	db	32
   213   000E39  20                 	db	32
   214   000E3A  00                 	db	0
   215   000E3B                     STR_1:
   216   000E3B  52                 	db	82	;'R'
   217   000E3C  65                 	db	101	;'e'
   218   000E3D  64                 	db	100	;'d'
   219   000E3E  3D                 	db	61	;'='
   220   000E3F  25                 	db	37
   221   000E40  64                 	db	100	;'d'
   222   000E41  2C                 	db	44
   223   000E42  20                 	db	32
   224   000E43  20                 	db	32
   225   000E44  00                 	db	0
   226   000E45  00                 	db	0	; dummy byte at the end
   227   000000                     
   228                           ; #config settings
   229                           
   230                           	psect	cinit
   231   0019A8                     __pcinit:
   232                           	callstack 0
   233   0019A8                     start_initialization:
   234                           	callstack 0
   235   0019A8                     __initialization:
   236                           	callstack 0
   237                           
   238                           ; Initialize objects allocated to COMRAM (1 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240   0019A8  0E04               	movlw	low __pidataCOMRAM
   241   0019AA  6EF6               	movwf	tblptrl,c
   242   0019AC  0E1C               	movlw	high __pidataCOMRAM
   243   0019AE  6EF7               	movwf	tblptrh,c
   244   0019B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245   0019B2  6EF8               	movwf	tblptru,c
   246   0019B4  0009               	tblrd		*+	;fetch initializer
   247   0019B6  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   248                           
   249                           ; Clear objects allocated to BANK1 (143 bytes)
   250   0019BA  EE01  F000         	lfsr	0,__pbssBANK1
   251   0019BE  0E8F               	movlw	143
   252   0019C0                     clear_0:
   253   0019C0  6AEE               	clrf	postinc0,c
   254   0019C2  06E8               	decf	wreg,f,c
   255   0019C4  E1FD               	bnz	clear_0
   256                           
   257                           ; Clear objects allocated to BANK0 (9 bytes)
   258   0019C6  EE00  F0F6         	lfsr	0,__pbssBANK0
   259   0019CA  0E09               	movlw	9
   260   0019CC                     clear_1:
   261   0019CC  6AEE               	clrf	postinc0,c
   262   0019CE  06E8               	decf	wreg,f,c
   263   0019D0  E1FD               	bnz	clear_1
   264                           
   265                           ; Clear objects allocated to COMRAM (8 bytes)
   266   0019D2  EE00  F056         	lfsr	0,__pbssCOMRAM
   267   0019D6  0E08               	movlw	8
   268   0019D8                     clear_2:
   269   0019D8  6AEE               	clrf	postinc0,c
   270   0019DA  06E8               	decf	wreg,f,c
   271   0019DC  E1FD               	bnz	clear_2
   272   0019DE                     end_of_initialization:
   273                           	callstack 0
   274   0019DE                     __end_of__initialization:
   275                           	callstack 0
   276   0019DE  0100               	movlb	0
   277   0019E0  EFA0  F008         	goto	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMRAM
   280   000056                     __pbssCOMRAM:
   281                           	callstack 0
   282   000056                     _width:
   283                           	callstack 0
   284   000056                     	ds	2
   285   000058                     _flags:
   286                           	callstack 0
   287   000058                     	ds	1
   288   000059                     _readingIndex:
   289                           	callstack 0
   290   000059                     	ds	1
   291   00005A                     _TxBufReadCnt:
   292                           	callstack 0
   293   00005A                     	ds	1
   294   00005B                     _TxBufWriteCnt:
   295                           	callstack 0
   296   00005B                     	ds	1
   297   00005C                     _RxBufReadCnt:
   298                           	callstack 0
   299   00005C                     	ds	1
   300   00005D                     _RxBufWriteCnt:
   301                           	callstack 0
   302   00005D                     	ds	1
   303                           
   304                           	psect	dataCOMRAM
   305   00005E                     __pdataCOMRAM:
   306                           	callstack 0
   307   00005E                     _dataFlag:
   308                           	callstack 0
   309   00005E                     	ds	1
   310                           
   311                           	psect	bssBANK0
   312   0000F6                     __pbssBANK0:
   313                           	callstack 0
   314   0000F6                     _motorL:
   315                           	callstack 0
   316   0000F6                     	ds	9
   317                           
   318                           	psect	bssBANK1
   319   000100                     __pbssBANK1:
   320                           	callstack 0
   321   000100                     _EUSART4TXbuf:
   322                           	callstack 0
   323   000100                     	ds	60
   324   00013C                     _ldrReadings:
   325                           	callstack 0
   326   00013C                     	ds	20
   327   000150                     _EUSART4RXbuf:
   328                           	callstack 0
   329   000150                     	ds	20
   330   000164                     _prec:
   331                           	callstack 0
   332   000164                     	ds	2
   333   000166                     _dbuf:
   334                           	callstack 0
   335   000166                     	ds	32
   336   000186                     _motorR:
   337                           	callstack 0
   338   000186                     	ds	9
   339                           
   340                           	psect	cstackBANK1
   341   00018F                     __pcstackBANK1:
   342                           	callstack 0
   343   00018F                     main@green_char:
   344                           	callstack 0
   345                           
   346                           ; 50 bytes @ 0x0
   347   00018F                     	ds	50
   348   0001C1                     main@clear_char:
   349                           	callstack 0
   350                           
   351                           ; 50 bytes @ 0x32
   352   0001C1                     	ds	50
   353   0001F3                     main@clear:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x64
   357   0001F3                     	ds	2
   358                           
   359                           	psect	cstackBANK0
   360   000060                     __pcstackBANK0:
   361                           	callstack 0
   362   000060                     main@buf:
   363                           	callstack 0
   364                           
   365                           ; 50 bytes @ 0x0
   366   000060                     	ds	50
   367   000092                     main@red_char:
   368                           	callstack 0
   369                           
   370                           ; 50 bytes @ 0x32
   371   000092                     	ds	50
   372   0000C4                     main@blue_char:
   373                           	callstack 0
   374                           
   375                           ; 50 bytes @ 0x64
   376   0000C4                     	ds	50
   377                           
   378                           	psect	cstackCOMRAM
   379   000001                     __pcstackCOMRAM:
   380                           	callstack 0
   381   000001                     ??_I2C_2_Master_Idle:
   382   000001                     ?_ADC_getval:
   383                           	callstack 0
   384   000001                     ?___wmul:
   385                           	callstack 0
   386   000001                     ?___awdiv:
   387                           	callstack 0
   388   000001                     ?___awmod:
   389                           	callstack 0
   390   000001                     sendCharSerial4@charToSend:
   391                           	callstack 0
   392   000001                     initDCmotorsPWM@PWMperiod:
   393                           	callstack 0
   394   000001                     ___wmul@multiplier:
   395                           	callstack 0
   396   000001                     ___awdiv@dividend:
   397                           	callstack 0
   398   000001                     ___awmod@dividend:
   399                           	callstack 0
   400   000001                     fputc@c:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0x0
   404   000001                     	ds	1
   405   000002                     ??_I2C_2_Master_Read:
   406   000002                     I2C_2_Master_Write@data_byte:
   407                           	callstack 0
   408   000002                     sendStringSerial4@string:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x1
   412   000002                     	ds	1
   413   000003                     color_writetoaddr@value:
   414                           	callstack 0
   415   000003                     I2C_2_Master_Read@ack:
   416                           	callstack 0
   417   000003                     fputc@fp:
   418                           	callstack 0
   419   000003                     ADC_getval@tmpval:
   420                           	callstack 0
   421   000003                     ___wmul@multiplicand:
   422                           	callstack 0
   423   000003                     ___awdiv@divisor:
   424                           	callstack 0
   425   000003                     ___awmod@divisor:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x2
   429   000003                     	ds	1
   430   000004                     ??_fputc:
   431   000004                     color_writetoaddr@address:
   432                           	callstack 0
   433   000004                     I2C_2_Master_Read@tmp:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x3
   437   000004                     	ds	1
   438   000005                     ??_color_click_init:
   439   000005                     ?_color_read_Red:
   440                           	callstack 0
   441   000005                     ?_color_read_Green:
   442                           	callstack 0
   443   000005                     ?_color_read_Blue:
   444                           	callstack 0
   445   000005                     ?_color_read_Clear:
   446                           	callstack 0
   447   000005                     ___awdiv@counter:
   448                           	callstack 0
   449   000005                     ___awmod@counter:
   450                           	callstack 0
   451   000005                     ___wmul@product:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x4
   455   000005                     	ds	1
   456   000006                     ___awdiv@sign:
   457                           	callstack 0
   458   000006                     ___awmod@sign:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x5
   462   000006                     	ds	1
   463   000007                     ??_color_read_Red:
   464   000007                     ??_color_read_Green:
   465   000007                     ??_color_read_Blue:
   466   000007                     ??_color_read_Clear:
   467   000007                     ?_abs:
   468                           	callstack 0
   469   000007                     ?___lwdiv:
   470                           	callstack 0
   471   000007                     ?_read_prec_or_width:
   472                           	callstack 0
   473   000007                     read_prec_or_width@fmt:
   474                           	callstack 0
   475   000007                     ___awdiv@quotient:
   476                           	callstack 0
   477   000007                     ___lwdiv@dividend:
   478                           	callstack 0
   479   000007                     abs@a:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6
   483   000007                     	ds	1
   484   000008                     read_prec_or_width@ap:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x7
   488   000008                     	ds	1
   489   000009                     ??_abs:
   490   000009                     read_prec_or_width@c:
   491                           	callstack 0
   492   000009                     ___lwdiv@divisor:
   493                           	callstack 0
   494   000009                     fputs@s:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x8
   498   000009                     	ds	1
   499   00000A                     color_read_Red@tmp:
   500                           	callstack 0
   501   00000A                     color_read_Green@tmp:
   502                           	callstack 0
   503   00000A                     color_read_Blue@tmp:
   504                           	callstack 0
   505   00000A                     color_read_Clear@tmp:
   506                           	callstack 0
   507   00000A                     read_prec_or_width@n:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x9
   511   00000A                     	ds	1
   512   00000B                     ___lwdiv@counter:
   513                           	callstack 0
   514   00000B                     fputs@fp:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0xA
   518   00000B                     	ds	1
   519   00000C                     fputs@c:
   520                           	callstack 0
   521   00000C                     ___lwdiv@quotient:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xB
   525   00000C                     	ds	1
   526   00000D                     fputs@i:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xC
   530   00000D                     	ds	2
   531   00000F                     pad@fp:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0xE
   535   00000F                     	ds	1
   536   000010                     pad@buf:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0xF
   540   000010                     	ds	2
   541   000012                     pad@p:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x11
   545   000012                     	ds	2
   546   000014                     ??_pad:
   547                           
   548                           ; 1 bytes @ 0x13
   549   000014                     	ds	1
   550   000015                     pad@i:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x14
   554   000015                     	ds	2
   555   000017                     dtoa@fp:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x16
   559   000017                     	ds	1
   560   000018                     dtoa@d:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x17
   564   000018                     	ds	2
   565   00001A                     _dtoa$2062:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x19
   569   00001A                     	ds	2
   570   00001C                     dtoa@p:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x1B
   574   00001C                     	ds	1
   575   00001D                     dtoa@w:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1C
   579   00001D                     	ds	2
   580   00001F                     dtoa@s:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1E
   584   00001F                     	ds	1
   585   000020                     dtoa@i:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x1F
   589   000020                     	ds	2
   590   000022                     vfpfcnvrt@fp:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x21
   594   000022                     	ds	1
   595   000023                     vfpfcnvrt@fmt:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x22
   599   000023                     	ds	1
   600   000024                     vfpfcnvrt@ap:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x23
   604   000024                     	ds	1
   605   000025                     ??_vfpfcnvrt:
   606                           
   607                           ; 1 bytes @ 0x24
   608   000025                     	ds	2
   609   000027                     vfpfcnvrt@convarg:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x26
   613   000027                     	ds	4
   614   00002B                     vfpfcnvrt@done:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x2A
   618   00002B                     	ds	1
   619   00002C                     vfpfcnvrt@cp:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x2B
   623   00002C                     	ds	1
   624   00002D                     ?_vfprintf:
   625                           	callstack 0
   626   00002D                     vfprintf@fp:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x2C
   630   00002D                     	ds	1
   631   00002E                     vfprintf@fmt:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x2D
   635   00002E                     	ds	1
   636   00002F                     vfprintf@ap:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x2E
   640   00002F                     	ds	1
   641   000030                     vfprintf@cfmt:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x2F
   645   000030                     	ds	1
   646   000031                     ?_sprintf:
   647                           	callstack 0
   648   000031                     sprintf@s:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x30
   652   000031                     	ds	2
   653   000033                     sprintf@fmt:
   654                           	callstack 0
   655                           
   656                           ; 1 bytes @ 0x32
   657   000033                     	ds	5
   658   000038                     sprintf@ap:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x37
   662   000038                     	ds	1
   663   000039                     sprintf@f:
   664                           	callstack 0
   665                           
   666                           ; 12 bytes @ 0x38
   667   000039                     	ds	12
   668   000045                     ADC2String@buf:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x44
   672   000045                     	ds	1
   673   000046                     ADC2String@ADC_val:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x45
   677   000046                     	ds	2
   678   000048                     ??_ADC2String:
   679                           
   680                           ; 1 bytes @ 0x47
   681   000048                     	ds	2
   682   00004A                     ADC2String@frac_part:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x49
   686   00004A                     	ds	2
   687   00004C                     ADC2String@int_part:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x4B
   691   00004C                     	ds	2
   692   00004E                     main@battery_level:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4D
   696   00004E                     	ds	2
   697   000050                     main@red:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x4F
   701   000050                     	ds	2
   702   000052                     main@blue:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x51
   706   000052                     	ds	2
   707   000054                     main@green:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x53
   711   000054                     	ds	2
   712                           
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 28 in file "main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  clear_char     50   50[BANK1 ] unsigned char [50]
   723 ;;  green_char     50    0[BANK1 ] unsigned char [50]
   724 ;;  blue_char      50  100[BANK0 ] unsigned char [50]
   725 ;;  red_char       50   50[BANK0 ] unsigned char [50]
   726 ;;  buf            50    0[BANK0 ] unsigned char [50]
   727 ;;  PWMcycle        2    0        unsigned int 
   728 ;;  clear           2  100[BANK1 ] unsigned int 
   729 ;;  green           2   83[COMRAM] unsigned int 
   730 ;;  blue            2   81[COMRAM] unsigned int 
   731 ;;  red             2   79[COMRAM] unsigned int 
   732 ;;  battery_leve    2   77[COMRAM] unsigned int 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;      Locals:         8     150     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   745 ;;      Totals:         8     150     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
   746 ;;Total ram usage:      260 bytes
   747 ;; Hardware stack levels required when called: 9
   748 ;; This function calls:
   749 ;;		_ADC2String
   750 ;;		_ADC_getval
   751 ;;		_ADC_init
   752 ;;		_color_click_init
   753 ;;		_color_read_Blue
   754 ;;		_color_read_Clear
   755 ;;		_color_read_Green
   756 ;;		_color_read_Red
   757 ;;		_initDCmotorsPWM
   758 ;;		_initUSART4
   759 ;;		_sendStringSerial4
   760 ;;		_sprintf
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text0
   767   001140                     __ptext0:
   768                           	callstack 0
   769   001140                     _main:
   770                           	callstack 22
   771   001140                     
   772                           ;main.c: 30:     ADC_init();
   773   001140  ECD3  F00D         	call	_ADC_init	;wreg free
   774   001144                     
   775                           ;main.c: 31:     color_click_init();
   776   001144  EC2C  F00D         	call	_color_click_init	;wreg free
   777   001148                     
   778                           ;main.c: 32:     initUSART4();
   779   001148  ECC4  F00D         	call	_initUSART4	;wreg free
   780   00114C                     
   781                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
   782   00114C  0E00               	movlw	0
   783   00114E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   784   001150  0E63               	movlw	99
   785   001152  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   786   001154  EC50  F00B         	call	_initDCmotorsPWM	;wreg free
   787   001158                     
   788                           ;main.c: 39:     motorL.power = 0;
   789   001158  0E00               	movlw	0
   790   00115A  0100               	movlb	0	; () banked
   791   00115C  6FF6               	movwf	_motorL& (0+255),b
   792   00115E                     
   793                           ; BSR set to: 0
   794                           ;main.c: 40:     motorL.direction = 1;
   795   00115E  0E01               	movlw	1
   796   001160  6FF7               	movwf	(_motorL+1)& (0+255),b
   797   001162                     
   798                           ; BSR set to: 0
   799                           ;main.c: 41:     motorL.brakemode = 1;
   800   001162  0E01               	movlw	1
   801   001164  6FF8               	movwf	(_motorL+2)& (0+255),b
   802   001166                     
   803                           ; BSR set to: 0
   804                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
   805   001166  0E00               	movlw	0
   806   001168  6FFA               	movwf	(_motorL+4)& (0+255),b
   807   00116A  0E63               	movlw	99
   808   00116C  6FF9               	movwf	(_motorL+3)& (0+255),b
   809   00116E                     
   810                           ; BSR set to: 0
   811                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
   812   00116E  0EAA               	movlw	170
   813   001170  6FFB               	movwf	(_motorL+5)& (0+255),b
   814   001172  0E0F               	movlw	15
   815   001174  6FFC               	movwf	(_motorL+6)& (0+255),b
   816   001176                     
   817                           ; BSR set to: 0
   818                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
   819   001176  0EA6               	movlw	166
   820   001178  6FFD               	movwf	(_motorL+7)& (0+255),b
   821   00117A  0E0F               	movlw	15
   822   00117C  6FFE               	movwf	(_motorL+8)& (0+255),b
   823   00117E                     
   824                           ; BSR set to: 0
   825                           ;main.c: 46:     motorR.power = 0;
   826   00117E  0E00               	movlw	0
   827   001180  0101               	movlb	1	; () banked
   828   001182  6F86               	movwf	_motorR& (0+255),b
   829   001184                     
   830                           ; BSR set to: 1
   831                           ;main.c: 47:     motorR.direction = 1;
   832   001184  0E01               	movlw	1
   833   001186  6F87               	movwf	(_motorR+1)& (0+255),b
   834   001188                     
   835                           ; BSR set to: 1
   836                           ;main.c: 48:     motorR.brakemode = 1;
   837   001188  0E01               	movlw	1
   838   00118A  6F88               	movwf	(_motorR+2)& (0+255),b
   839   00118C                     
   840                           ; BSR set to: 1
   841                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
   842   00118C  0E00               	movlw	0
   843   00118E  6F8A               	movwf	(_motorR+4)& (0+255),b
   844   001190  0E63               	movlw	99
   845   001192  6F89               	movwf	(_motorR+3)& (0+255),b
   846                           
   847                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
   848   001194  0E25               	movlw	37
   849   001196  6F8B               	movwf	(_motorR+5)& (0+255),b
   850   001198  0E0F               	movlw	15
   851   00119A  6F8C               	movwf	(_motorR+6)& (0+255),b
   852                           
   853                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
   854   00119C  0E21               	movlw	33
   855   00119E  6F8D               	movwf	(_motorR+7)& (0+255),b
   856   0011A0  0E0F               	movlw	15
   857   0011A2  6F8E               	movwf	(_motorR+8)& (0+255),b
   858   0011A4                     
   859                           ; BSR set to: 1
   860                           ;main.c: 54:     LATDbits.LATD7=0;
   861   0011A4  9E7C               	bcf	124,7,c	;volatile
   862   0011A6                     
   863                           ; BSR set to: 1
   864                           ;main.c: 55:     TRISDbits.TRISD7=0;
   865   0011A6  9E84               	bcf	132,7,c	;volatile
   866   0011A8                     l3304:
   867                           
   868                           ;main.c: 74:         battery_level = ADC_getval();
   869   0011A8  EC60  F00D         	call	_ADC_getval	;wreg free
   870   0011AC  C001  F04E         	movff	?_ADC_getval,main@battery_level
   871   0011B0  C002  F04F         	movff	?_ADC_getval+1,main@battery_level+1
   872   0011B4                     
   873                           ;main.c: 76:         red = color_read_Red();
   874   0011B4  ECD2  F00B         	call	_color_read_Red	;wreg free
   875   0011B8  C005  F050         	movff	?_color_read_Red,main@red
   876   0011BC  C006  F051         	movff	?_color_read_Red+1,main@red+1
   877   0011C0                     
   878                           ;main.c: 77:         blue = color_read_Blue();
   879   0011C0  EC4A  F00C         	call	_color_read_Blue	;wreg free
   880   0011C4  C005  F052         	movff	?_color_read_Blue,main@blue
   881   0011C8  C006  F053         	movff	?_color_read_Blue+1,main@blue+1
   882   0011CC                     
   883                           ;main.c: 78:         green = color_read_Green();
   884   0011CC  ECFA  F00B         	call	_color_read_Green	;wreg free
   885   0011D0  C005  F054         	movff	?_color_read_Green,main@green
   886   0011D4  C006  F055         	movff	?_color_read_Green+1,main@green+1
   887   0011D8                     
   888                           ;main.c: 79:         clear = color_read_Clear();
   889   0011D8  EC22  F00C         	call	_color_read_Clear	;wreg free
   890   0011DC  C005  F1F3         	movff	?_color_read_Clear,main@clear
   891   0011E0  C006  F1F4         	movff	?_color_read_Clear+1,main@clear+1
   892   0011E4                     
   893                           ;main.c: 82:         ADC2String(buf, battery_level);
   894   0011E4  0E60               	movlw	low main@buf
   895   0011E6  6E45               	movwf	ADC2String@buf^0,c
   896   0011E8  C04E  F046         	movff	main@battery_level,ADC2String@ADC_val
   897   0011EC  C04F  F047         	movff	main@battery_level+1,ADC2String@ADC_val+1
   898   0011F0  ECB5  F00A         	call	_ADC2String	;wreg free
   899   0011F4                     
   900                           ;main.c: 83:         sprintf(red_char,"Red=%d,  ",red);
   901   0011F4  0E92               	movlw	low main@red_char
   902   0011F6  6E31               	movwf	sprintf@s^0,c
   903   0011F8  6A32               	clrf	(sprintf@s+1)^0,c
   904   0011FA  0E3B               	movlw	low STR_1
   905   0011FC  6E33               	movwf	sprintf@fmt^0,c
   906   0011FE  C050  F034         	movff	main@red,?_sprintf+3
   907   001202  C051  F035         	movff	main@red+1,?_sprintf+4
   908   001206  ECF2  F00C         	call	_sprintf	;wreg free
   909   00120A                     
   910                           ;main.c: 84:         sprintf(blue_char,"Blue=%d,  ",blue);
   911   00120A  0EC4               	movlw	low main@blue_char
   912   00120C  6E31               	movwf	sprintf@s^0,c
   913   00120E  6A32               	clrf	(sprintf@s+1)^0,c
   914   001210  0E30               	movlw	low STR_2
   915   001212  6E33               	movwf	sprintf@fmt^0,c
   916   001214  C052  F034         	movff	main@blue,?_sprintf+3
   917   001218  C053  F035         	movff	main@blue+1,?_sprintf+4
   918   00121C  ECF2  F00C         	call	_sprintf	;wreg free
   919   001220                     
   920                           ;main.c: 85:         sprintf(green_char,"Green=%d,  ",green);
   921   001220  0E8F               	movlw	low main@green_char
   922   001222  6E31               	movwf	sprintf@s^0,c
   923   001224  0E01               	movlw	high main@green_char
   924   001226  6E32               	movwf	(sprintf@s+1)^0,c
   925   001228  0E24               	movlw	low STR_3
   926   00122A  6E33               	movwf	sprintf@fmt^0,c
   927   00122C  C054  F034         	movff	main@green,?_sprintf+3
   928   001230  C055  F035         	movff	main@green+1,?_sprintf+4
   929   001234  ECF2  F00C         	call	_sprintf	;wreg free
   930   001238                     
   931                           ;main.c: 86:         sprintf(clear_char,"Clear=%d,  \r\n",clear);
   932   001238  0EC1               	movlw	low main@clear_char
   933   00123A  6E31               	movwf	sprintf@s^0,c
   934   00123C  0E01               	movlw	high main@clear_char
   935   00123E  6E32               	movwf	(sprintf@s+1)^0,c
   936   001240  0E16               	movlw	low STR_4
   937   001242  6E33               	movwf	sprintf@fmt^0,c
   938   001244  C1F3  F034         	movff	main@clear,?_sprintf+3
   939   001248  C1F4  F035         	movff	main@clear+1,?_sprintf+4
   940   00124C  ECF2  F00C         	call	_sprintf	;wreg free
   941   001250                     
   942                           ;main.c: 90:         sendStringSerial4(buf);
   943   001250  0E60               	movlw	low main@buf
   944   001252  6E02               	movwf	sendStringSerial4@string^0,c
   945   001254  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   946   001256  EC10  F00D         	call	_sendStringSerial4	;wreg free
   947   00125A                     
   948                           ;main.c: 91:         sendStringSerial4(red_char);
   949   00125A  0E92               	movlw	low main@red_char
   950   00125C  6E02               	movwf	sendStringSerial4@string^0,c
   951   00125E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   952   001260  EC10  F00D         	call	_sendStringSerial4	;wreg free
   953   001264                     
   954                           ;main.c: 92:         sendStringSerial4(blue_char);
   955   001264  0EC4               	movlw	low main@blue_char
   956   001266  6E02               	movwf	sendStringSerial4@string^0,c
   957   001268  6A03               	clrf	(sendStringSerial4@string+1)^0,c
   958   00126A  EC10  F00D         	call	_sendStringSerial4	;wreg free
   959   00126E                     
   960                           ;main.c: 93:         sendStringSerial4(green_char);
   961   00126E  0E8F               	movlw	low main@green_char
   962   001270  6E02               	movwf	sendStringSerial4@string^0,c
   963   001272  0E01               	movlw	high main@green_char
   964   001274  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   965   001276  EC10  F00D         	call	_sendStringSerial4	;wreg free
   966   00127A                     
   967                           ;main.c: 94:         sendStringSerial4(clear_char);
   968   00127A  0EC1               	movlw	low main@clear_char
   969   00127C  6E02               	movwf	sendStringSerial4@string^0,c
   970   00127E  0E01               	movlw	high main@clear_char
   971   001280  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   972   001282  EC10  F00D         	call	_sendStringSerial4	;wreg free
   973   001286  EFD4  F008         	goto	l3304
   974   00128A  EF00  F000         	goto	start
   975   00128E                     __end_of_main:
   976                           	callstack 0
   977                           
   978 ;; *************** function _sendStringSerial4 *****************
   979 ;; Defined at:
   980 ;;		line 41 in file "serial.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  string          2    1[COMRAM] PTR unsigned char 
   983 ;;		 -> RAM(3583), sendAllReadings@buffer(10), main@clear_char(50), main@green_char(50), 
   984 ;;		 -> main@blue_char(50), main@red_char(50), main@buf(50), 
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;Total ram usage:        2 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 1
  1003 ;; This function calls:
  1004 ;;		_sendCharSerial4
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;;		_sendAllReadings
  1008 ;;		_write2USART
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text1
  1013   001A20                     __ptext1:
  1014                           	callstack 0
  1015   001A20                     _sendStringSerial4:
  1016                           	callstack 29
  1017   001A20                     
  1018                           ;serial.c: 44:     while(*string != 0){
  1019   001A20  EF1F  F00D         	goto	l3216
  1020   001A24                     l3210:
  1021                           
  1022                           ;serial.c: 46:   sendCharSerial4(*string++);
  1023   001A24  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1024   001A28  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1025   001A2C  50DF               	movf	indf2,w,c
  1026   001A2E  ECE0  F00D         	call	_sendCharSerial4
  1027   001A32  4A02               	infsnz	sendStringSerial4@string^0,f,c
  1028   001A34  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  1029   001A36                     
  1030                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  1031   001A36  0E6A               	movlw	106
  1032   001A38                     u1987:
  1033   001A38  2EE8               	decfsz	wreg,f,c
  1034   001A3A  D7FE               	bra	u1987
  1035   001A3C  D000               	nop2	
  1036   001A3E                     l3216:
  1037                           
  1038                           ;serial.c: 44:     while(*string != 0){
  1039   001A3E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  1040   001A42  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  1041   001A46  50DF               	movf	indf2,w,c
  1042   001A48  A4D8               	btfss	status,2,c
  1043   001A4A  EF29  F00D         	goto	u1931
  1044   001A4E  EF2B  F00D         	goto	u1930
  1045   001A52                     u1931:
  1046   001A52  EF12  F00D         	goto	l3210
  1047   001A56                     u1930:
  1048   001A56  0012               	return		;funcret
  1049   001A58                     __end_of_sendStringSerial4:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _sendCharSerial4 *****************
  1053 ;; Defined at:
  1054 ;;		line 35 in file "serial.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  charToSend      1    wreg     unsigned char 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  charToSend      1    0[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:        1 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_sendStringSerial4
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text2
  1082   001BC0                     __ptext2:
  1083                           	callstack 0
  1084   001BC0                     _sendCharSerial4:
  1085                           	callstack 29
  1086                           
  1087                           ;incstack = 0
  1088                           ;sendCharSerial4@charToSend stored from wreg
  1089   001BC0  6E01               	movwf	sendCharSerial4@charToSend^0,c
  1090   001BC2                     l225:
  1091   001BC2  010E               	movlb	14	; () banked
  1092   001BC4  A537               	btfss	55,2,b	;volatile
  1093   001BC6  EFE7  F00D         	goto	u1831
  1094   001BCA  EFE9  F00D         	goto	u1830
  1095   001BCE                     u1831:
  1096   001BCE  EFE1  F00D         	goto	l225
  1097   001BD2                     u1830:
  1098   001BD2                     
  1099                           ; BSR set to: 14
  1100                           ;serial.c: 37:     TX4REG = charToSend;
  1101   001BD2  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  1102   001BD6                     
  1103                           ; BSR set to: 14
  1104   001BD6  0012               	return		;funcret
  1105   001BD8                     __end_of_sendCharSerial4:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _initUSART4 *****************
  1109 ;; Defined at:
  1110 ;;		line 14 in file "serial.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;Total ram usage:        0 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text3
  1138   001B88                     __ptext3:
  1139                           	callstack 0
  1140   001B88                     _initUSART4:
  1141                           	callstack 30
  1142   001B88                     
  1143                           ;serial.c: 15:     RC0PPS = 0x12;
  1144   001B88  0E12               	movlw	18
  1145   001B8A  010E               	movlb	14	; () banked
  1146   001B8C  6F62               	movwf	98,b	;volatile
  1147                           
  1148                           ;serial.c: 16:     RX4PPS = 0x11;
  1149   001B8E  0E11               	movlw	17
  1150   001B90  6F15               	movwf	21,b	;volatile
  1151   001B92                     
  1152                           ; BSR set to: 14
  1153                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  1154   001B92  97E9               	bcf	233,3,b	;volatile
  1155   001B94                     
  1156                           ; BSR set to: 14
  1157                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  1158   001B94  95E8               	bcf	232,2,b	;volatile
  1159                           
  1160                           ;serial.c: 19:     SP4BRGL = 51;
  1161   001B96  0E33               	movlw	51
  1162   001B98  6FE5               	movwf	229,b	;volatile
  1163                           
  1164                           ;serial.c: 20:     SP4BRGH = 0;
  1165   001B9A  0E00               	movlw	0
  1166   001B9C  6FE6               	movwf	230,b	;volatile
  1167   001B9E                     
  1168                           ; BSR set to: 14
  1169                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  1170   001B9E  89E7               	bsf	231,4,b	;volatile
  1171   001BA0                     
  1172                           ; BSR set to: 14
  1173                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  1174   001BA0  8BE8               	bsf	232,5,b	;volatile
  1175   001BA2                     
  1176                           ; BSR set to: 14
  1177                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  1178   001BA2  8FE7               	bsf	231,7,b	;volatile
  1179   001BA4                     
  1180                           ; BSR set to: 14
  1181   001BA4  0012               	return		;funcret
  1182   001BA6                     __end_of_initUSART4:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _initDCmotorsPWM *****************
  1186 ;; Defined at:
  1187 ;;		line 5 in file "dc_motor.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;Total ram usage:        2 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text4
  1215   0016A0                     __ptext4:
  1216                           	callstack 0
  1217   0016A0                     _initDCmotorsPWM:
  1218                           	callstack 30
  1219   0016A0                     
  1220                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  1221   0016A0  9485               	bcf	133,2,c	;volatile
  1222                           
  1223                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  1224   0016A2  9E83               	bcf	131,7,c	;volatile
  1225                           
  1226                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  1227   0016A4  9885               	bcf	133,4,c	;volatile
  1228                           
  1229                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  1230   0016A6  9C87               	bcf	135,6,c	;volatile
  1231                           
  1232                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  1233   0016A8  947D               	bcf	125,2,c	;volatile
  1234                           
  1235                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  1236   0016AA  9E7B               	bcf	123,7,c	;volatile
  1237                           
  1238                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  1239   0016AC  987D               	bcf	125,4,c	;volatile
  1240                           
  1241                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  1242   0016AE  9C7F               	bcf	127,6,c	;volatile
  1243   0016B0                     
  1244                           ;dc_motor.c: 18:     RE2PPS=0x05;
  1245   0016B0  0E05               	movlw	5
  1246   0016B2  010E               	movlb	14	; () banked
  1247   0016B4  6F74               	movwf	116,b	;volatile
  1248                           
  1249                           ;dc_motor.c: 19:     RE4PPS=0x06;
  1250   0016B6  0E06               	movlw	6
  1251   0016B8  6F76               	movwf	118,b	;volatile
  1252                           
  1253                           ;dc_motor.c: 20:     RC7PPS=0x07;
  1254   0016BA  0E07               	movlw	7
  1255   0016BC  6F69               	movwf	105,b	;volatile
  1256                           
  1257                           ;dc_motor.c: 21:     RG6PPS=0x08;
  1258   0016BE  0E08               	movlw	8
  1259   0016C0  6F88               	movwf	136,b	;volatile
  1260                           
  1261                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  1262   0016C2  50BD               	movf	189,w,c	;volatile
  1263   0016C4  0B8F               	andlw	-113
  1264   0016C6  0940               	iorlw	64
  1265   0016C8  6EBD               	movwf	189,c	;volatile
  1266                           
  1267                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1268   0016CA  0EE0               	movlw	-32
  1269   0016CC  16BE               	andwf	190,f,c	;volatile
  1270                           
  1271                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1272   0016CE  50BF               	movf	191,w,c	;volatile
  1273   0016D0  0BF0               	andlw	-16
  1274   0016D2  0901               	iorlw	1
  1275   0016D4  6EBF               	movwf	191,c	;volatile
  1276   0016D6                     
  1277                           ; BSR set to: 14
  1278                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  1279   0016D6  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1280   0016DA                     
  1281                           ; BSR set to: 14
  1282                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1283   0016DA  8EBD               	bsf	189,7,c	;volatile
  1284                           
  1285                           ;dc_motor.c: 35:     CCPR1H=0;
  1286   0016DC  0E00               	movlw	0
  1287   0016DE  6EAA               	movwf	170,c	;volatile
  1288                           
  1289                           ;dc_motor.c: 36:     CCPR2H=0;
  1290   0016E0  0E00               	movlw	0
  1291   0016E2  6EA6               	movwf	166,c	;volatile
  1292                           
  1293                           ;dc_motor.c: 37:     CCPR3H=0;
  1294   0016E4  0E00               	movlw	0
  1295   0016E6  010F               	movlb	15	; () banked
  1296   0016E8  6F25               	movwf	37,b	;volatile
  1297                           
  1298                           ;dc_motor.c: 38:     CCPR4H=0;
  1299   0016EA  0E00               	movlw	0
  1300   0016EC  6F21               	movwf	33,b	;volatile
  1301                           
  1302                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  1303   0016EE  0EFC               	movlw	-4
  1304   0016F0  16AD               	andwf	173,f,c	;volatile
  1305                           
  1306                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  1307   0016F2  0EF3               	movlw	-13
  1308   0016F4  16AD               	andwf	173,f,c	;volatile
  1309                           
  1310                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  1311   0016F6  0ECF               	movlw	-49
  1312   0016F8  16AD               	andwf	173,f,c	;volatile
  1313                           
  1314                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  1315   0016FA  0E3F               	movlw	-193
  1316   0016FC  16AD               	andwf	173,f,c	;volatile
  1317   0016FE                     
  1318                           ; BSR set to: 15
  1319                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  1320   0016FE  88AB               	bsf	171,4,c	;volatile
  1321                           
  1322                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  1323   001700  50AB               	movf	171,w,c	;volatile
  1324   001702  0BF0               	andlw	-16
  1325   001704  090C               	iorlw	12
  1326   001706  6EAB               	movwf	171,c	;volatile
  1327   001708                     
  1328                           ; BSR set to: 15
  1329                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  1330   001708  8EAB               	bsf	171,7,c	;volatile
  1331   00170A                     
  1332                           ; BSR set to: 15
  1333                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  1334   00170A  88A7               	bsf	167,4,c	;volatile
  1335                           
  1336                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  1337   00170C  50A7               	movf	167,w,c	;volatile
  1338   00170E  0BF0               	andlw	-16
  1339   001710  090C               	iorlw	12
  1340   001712  6EA7               	movwf	167,c	;volatile
  1341   001714                     
  1342                           ; BSR set to: 15
  1343                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  1344   001714  8EA7               	bsf	167,7,c	;volatile
  1345   001716                     
  1346                           ; BSR set to: 15
  1347                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  1348   001716  8926               	bsf	38,4,b	;volatile
  1349                           
  1350                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  1351   001718  5126               	movf	38,w,b	;volatile
  1352   00171A  0BF0               	andlw	-16
  1353   00171C  090C               	iorlw	12
  1354   00171E  6F26               	movwf	38,b	;volatile
  1355   001720                     
  1356                           ; BSR set to: 15
  1357                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  1358   001720  8F26               	bsf	38,7,b	;volatile
  1359   001722                     
  1360                           ; BSR set to: 15
  1361                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  1362   001722  8922               	bsf	34,4,b	;volatile
  1363                           
  1364                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  1365   001724  5122               	movf	34,w,b	;volatile
  1366   001726  0BF0               	andlw	-16
  1367   001728  090C               	iorlw	12
  1368   00172A  6F22               	movwf	34,b	;volatile
  1369   00172C                     
  1370                           ; BSR set to: 15
  1371                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  1372   00172C  8F22               	bsf	34,7,b	;volatile
  1373   00172E                     
  1374                           ; BSR set to: 15
  1375   00172E  0012               	return		;funcret
  1376   001730                     __end_of_initDCmotorsPWM:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _color_read_Red *****************
  1380 ;; Defined at:
  1381 ;;		line 29 in file "color.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  tmp             2    9[COMRAM] unsigned int 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2    4[COMRAM] unsigned int 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;Total ram usage:        7 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		_I2C_2_Master_Read
  1404 ;;		_I2C_2_Master_RepStart
  1405 ;;		_I2C_2_Master_Start
  1406 ;;		_I2C_2_Master_Stop
  1407 ;;		_I2C_2_Master_Write
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text5
  1414   0017A4                     __ptext5:
  1415                           	callstack 0
  1416   0017A4                     _color_read_Red:
  1417                           	callstack 28
  1418   0017A4                     
  1419                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1420   0017A4  ECFC  F00D         	call	_I2C_2_Master_Start	;wreg free
  1421                           
  1422                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1423   0017A8  0E52               	movlw	82
  1424   0017AA  ECEC  F00D         	call	_I2C_2_Master_Write
  1425                           
  1426                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1427   0017AE  0EB6               	movlw	182
  1428   0017B0  ECEC  F00D         	call	_I2C_2_Master_Write
  1429                           
  1430                           ;color.c: 35:  I2C_2_Master_RepStart();
  1431   0017B4  ECF2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1432                           
  1433                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1434   0017B8  0E53               	movlw	83
  1435   0017BA  ECEC  F00D         	call	_I2C_2_Master_Write
  1436                           
  1437                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1438   0017BE  0E01               	movlw	1
  1439   0017C0  EC72  F00C         	call	_I2C_2_Master_Read
  1440   0017C4  6E07               	movwf	??_color_read_Red^0,c
  1441   0017C6  5007               	movf	??_color_read_Red^0,w,c
  1442   0017C8  6E0A               	movwf	color_read_Red@tmp^0,c
  1443   0017CA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1444                           
  1445                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1446   0017CC  0E00               	movlw	0
  1447   0017CE  EC72  F00C         	call	_I2C_2_Master_Read
  1448   0017D2  6E07               	movwf	??_color_read_Red^0,c
  1449   0017D4  5007               	movf	??_color_read_Red^0,w,c
  1450   0017D6  6E09               	movwf	(??_color_read_Red+2)^0,c
  1451   0017D8  6A08               	clrf	(??_color_read_Red+1)^0,c
  1452   0017DA  500A               	movf	color_read_Red@tmp^0,w,c
  1453   0017DC  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1454   0017DE  6E0A               	movwf	color_read_Red@tmp^0,c
  1455   0017E0  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1456   0017E2  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1457   0017E4  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1458                           
  1459                           ;color.c: 39:  I2C_2_Master_Stop();
  1460   0017E6  ECF7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1461   0017EA                     
  1462                           ;color.c: 40:  return tmp;
  1463   0017EA  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1464   0017EE  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1465   0017F2  0012               	return		;funcret
  1466   0017F4                     __end_of_color_read_Red:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _color_read_Green *****************
  1470 ;; Defined at:
  1471 ;;		line 43 in file "color.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;		None
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  tmp             2    9[COMRAM] unsigned int 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    4[COMRAM] unsigned int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;Total ram usage:        7 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 2
  1492 ;; This function calls:
  1493 ;;		_I2C_2_Master_Read
  1494 ;;		_I2C_2_Master_RepStart
  1495 ;;		_I2C_2_Master_Start
  1496 ;;		_I2C_2_Master_Stop
  1497 ;;		_I2C_2_Master_Write
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text6
  1504   0017F4                     __ptext6:
  1505                           	callstack 0
  1506   0017F4                     _color_read_Green:
  1507                           	callstack 28
  1508   0017F4                     
  1509                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  1510   0017F4  ECFC  F00D         	call	_I2C_2_Master_Start	;wreg free
  1511                           
  1512                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  1513   0017F8  0E52               	movlw	82
  1514   0017FA  ECEC  F00D         	call	_I2C_2_Master_Write
  1515                           
  1516                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  1517   0017FE  0EB8               	movlw	184
  1518   001800  ECEC  F00D         	call	_I2C_2_Master_Write
  1519                           
  1520                           ;color.c: 49:  I2C_2_Master_RepStart();
  1521   001804  ECF2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1522                           
  1523                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  1524   001808  0E53               	movlw	83
  1525   00180A  ECEC  F00D         	call	_I2C_2_Master_Write
  1526                           
  1527                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  1528   00180E  0E01               	movlw	1
  1529   001810  EC72  F00C         	call	_I2C_2_Master_Read
  1530   001814  6E07               	movwf	??_color_read_Green^0,c
  1531   001816  5007               	movf	??_color_read_Green^0,w,c
  1532   001818  6E0A               	movwf	color_read_Green@tmp^0,c
  1533   00181A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1534                           
  1535                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1536   00181C  0E00               	movlw	0
  1537   00181E  EC72  F00C         	call	_I2C_2_Master_Read
  1538   001822  6E07               	movwf	??_color_read_Green^0,c
  1539   001824  5007               	movf	??_color_read_Green^0,w,c
  1540   001826  6E09               	movwf	(??_color_read_Green+2)^0,c
  1541   001828  6A08               	clrf	(??_color_read_Green+1)^0,c
  1542   00182A  500A               	movf	color_read_Green@tmp^0,w,c
  1543   00182C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1544   00182E  6E0A               	movwf	color_read_Green@tmp^0,c
  1545   001830  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1546   001832  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1547   001834  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1548                           
  1549                           ;color.c: 53:  I2C_2_Master_Stop();
  1550   001836  ECF7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1551   00183A                     
  1552                           ;color.c: 54:  return tmp;
  1553   00183A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1554   00183E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1555   001842  0012               	return		;funcret
  1556   001844                     __end_of_color_read_Green:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _color_read_Clear *****************
  1560 ;; Defined at:
  1561 ;;		line 72 in file "color.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  tmp             2    9[COMRAM] unsigned int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2    4[COMRAM] unsigned int 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;Total ram usage:        7 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 2
  1582 ;; This function calls:
  1583 ;;		_I2C_2_Master_Read
  1584 ;;		_I2C_2_Master_RepStart
  1585 ;;		_I2C_2_Master_Start
  1586 ;;		_I2C_2_Master_Stop
  1587 ;;		_I2C_2_Master_Write
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text7
  1594   001844                     __ptext7:
  1595                           	callstack 0
  1596   001844                     _color_read_Clear:
  1597                           	callstack 28
  1598   001844                     
  1599                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  1600   001844  ECFC  F00D         	call	_I2C_2_Master_Start	;wreg free
  1601                           
  1602                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  1603   001848  0E52               	movlw	82
  1604   00184A  ECEC  F00D         	call	_I2C_2_Master_Write
  1605                           
  1606                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x14);
  1607   00184E  0EB4               	movlw	180
  1608   001850  ECEC  F00D         	call	_I2C_2_Master_Write
  1609                           
  1610                           ;color.c: 78:  I2C_2_Master_RepStart();
  1611   001854  ECF2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1612                           
  1613                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  1614   001858  0E53               	movlw	83
  1615   00185A  ECEC  F00D         	call	_I2C_2_Master_Write
  1616                           
  1617                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  1618   00185E  0E01               	movlw	1
  1619   001860  EC72  F00C         	call	_I2C_2_Master_Read
  1620   001864  6E07               	movwf	??_color_read_Clear^0,c
  1621   001866  5007               	movf	??_color_read_Clear^0,w,c
  1622   001868  6E0A               	movwf	color_read_Clear@tmp^0,c
  1623   00186A  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1624                           
  1625                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1626   00186C  0E00               	movlw	0
  1627   00186E  EC72  F00C         	call	_I2C_2_Master_Read
  1628   001872  6E07               	movwf	??_color_read_Clear^0,c
  1629   001874  5007               	movf	??_color_read_Clear^0,w,c
  1630   001876  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1631   001878  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1632   00187A  500A               	movf	color_read_Clear@tmp^0,w,c
  1633   00187C  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1634   00187E  6E0A               	movwf	color_read_Clear@tmp^0,c
  1635   001880  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1636   001882  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1637   001884  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1638                           
  1639                           ;color.c: 82:  I2C_2_Master_Stop();
  1640   001886  ECF7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1641   00188A                     
  1642                           ;color.c: 83:  return tmp;
  1643   00188A  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1644   00188E  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1645   001892  0012               	return		;funcret
  1646   001894                     __end_of_color_read_Clear:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _color_read_Blue *****************
  1650 ;; Defined at:
  1651 ;;		line 57 in file "color.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  tmp             2    9[COMRAM] unsigned int 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2    4[COMRAM] unsigned int 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1667 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1668 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;Total ram usage:        7 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 2
  1672 ;; This function calls:
  1673 ;;		_I2C_2_Master_Read
  1674 ;;		_I2C_2_Master_RepStart
  1675 ;;		_I2C_2_Master_Start
  1676 ;;		_I2C_2_Master_Stop
  1677 ;;		_I2C_2_Master_Write
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text8
  1684   001894                     __ptext8:
  1685                           	callstack 0
  1686   001894                     _color_read_Blue:
  1687                           	callstack 28
  1688   001894                     
  1689                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  1690   001894  ECFC  F00D         	call	_I2C_2_Master_Start	;wreg free
  1691                           
  1692                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  1693   001898  0E52               	movlw	82
  1694   00189A  ECEC  F00D         	call	_I2C_2_Master_Write
  1695                           
  1696                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  1697   00189E  0EBA               	movlw	186
  1698   0018A0  ECEC  F00D         	call	_I2C_2_Master_Write
  1699                           
  1700                           ;color.c: 63:  I2C_2_Master_RepStart();
  1701   0018A4  ECF2  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1702                           
  1703                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  1704   0018A8  0E53               	movlw	83
  1705   0018AA  ECEC  F00D         	call	_I2C_2_Master_Write
  1706                           
  1707                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  1708   0018AE  0E01               	movlw	1
  1709   0018B0  EC72  F00C         	call	_I2C_2_Master_Read
  1710   0018B4  6E07               	movwf	??_color_read_Blue^0,c
  1711   0018B6  5007               	movf	??_color_read_Blue^0,w,c
  1712   0018B8  6E0A               	movwf	color_read_Blue@tmp^0,c
  1713   0018BA  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1714                           
  1715                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1716   0018BC  0E00               	movlw	0
  1717   0018BE  EC72  F00C         	call	_I2C_2_Master_Read
  1718   0018C2  6E07               	movwf	??_color_read_Blue^0,c
  1719   0018C4  5007               	movf	??_color_read_Blue^0,w,c
  1720   0018C6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1721   0018C8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1722   0018CA  500A               	movf	color_read_Blue@tmp^0,w,c
  1723   0018CC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1724   0018CE  6E0A               	movwf	color_read_Blue@tmp^0,c
  1725   0018D0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1726   0018D2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1727   0018D4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1728                           
  1729                           ;color.c: 67:  I2C_2_Master_Stop();
  1730   0018D6  ECF7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1731   0018DA                     
  1732                           ;color.c: 68:  return tmp;
  1733   0018DA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1734   0018DE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1735   0018E2  0012               	return		;funcret
  1736   0018E4                     __end_of_color_read_Blue:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _I2C_2_Master_RepStart *****************
  1740 ;; Defined at:
  1741 ;;		line 33 in file "i2c.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;		None
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;		None
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1759 ;;Total ram usage:        0 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 1
  1762 ;; This function calls:
  1763 ;;		_I2C_2_Master_Idle
  1764 ;; This function is called by:
  1765 ;;		_color_read_Red
  1766 ;;		_color_read_Green
  1767 ;;		_color_read_Blue
  1768 ;;		_color_read_Clear
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text9
  1773   001BE4                     __ptext9:
  1774                           	callstack 0
  1775   001BE4                     _I2C_2_Master_RepStart:
  1776                           	callstack 28
  1777   001BE4                     
  1778                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1779   001BE4  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1780   001BE8                     
  1781                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1782   001BE8  010E               	movlb	14	; () banked
  1783   001BEA  83DA               	bsf	218,1,b	;volatile
  1784   001BEC                     
  1785                           ; BSR set to: 14
  1786   001BEC  0012               	return		;funcret
  1787   001BEE                     __end_of_I2C_2_Master_RepStart:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _I2C_2_Master_Read *****************
  1791 ;; Defined at:
  1792 ;;		line 51 in file "i2c.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  ack             1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  ack             1    2[COMRAM] unsigned char 
  1797 ;;  tmp             1    3[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      unsigned char 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;Total ram usage:        3 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		_I2C_2_Master_Idle
  1816 ;; This function is called by:
  1817 ;;		_color_read_Red
  1818 ;;		_color_read_Green
  1819 ;;		_color_read_Blue
  1820 ;;		_color_read_Clear
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text10
  1825   0018E4                     __ptext10:
  1826                           	callstack 0
  1827   0018E4                     _I2C_2_Master_Read:
  1828                           	callstack 28
  1829                           
  1830                           ; BSR set to: 14
  1831                           ;incstack = 0
  1832                           ;I2C_2_Master_Read@ack stored from wreg
  1833   0018E4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1834   0018E6                     
  1835                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1836   0018E6  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1837   0018EA                     
  1838                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1839   0018EA  010E               	movlb	14	; () banked
  1840   0018EC  87DA               	bsf	218,3,b	;volatile
  1841                           
  1842                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1843   0018EE  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1844   0018F2                     
  1845                           ;i2c.c: 57:   tmp = SSP2BUF;
  1846   0018F2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1847                           
  1848                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1849   0018F6  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1850   0018FA                     
  1851                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1852   0018FA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1853   0018FC  B4D8               	btfsc	status,2,c
  1854   0018FE  EF83  F00C         	goto	u1811
  1855   001902  EF87  F00C         	goto	u1810
  1856   001906                     u1811:
  1857   001906  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1858   001908  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1859   00190A  EF88  F00C         	goto	u1828
  1860   00190E                     u1810:
  1861   00190E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1862   001910                     u1828:
  1863   001910  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1864   001912  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1865   001914  010E               	movlb	14	; () banked
  1866   001916  51DA               	movf	218,w,b	;volatile
  1867   001918  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1868   00191A  0BDF               	andlw	-33
  1869   00191C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1870   00191E  6FDA               	movwf	218,b	;volatile
  1871   001920                     
  1872                           ; BSR set to: 14
  1873                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1874   001920  89DA               	bsf	218,4,b	;volatile
  1875   001922                     
  1876                           ; BSR set to: 14
  1877                           ;i2c.c: 61:   return tmp;
  1878   001922  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1879   001924                     
  1880                           ; BSR set to: 14
  1881   001924  0012               	return		;funcret
  1882   001926                     __end_of_I2C_2_Master_Read:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _color_click_init *****************
  1886 ;; Defined at:
  1887 ;;		line 5 in file "color.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;Total ram usage:        1 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 3
  1908 ;; This function calls:
  1909 ;;		_I2C_2_Master_Init
  1910 ;;		_color_writetoaddr
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text11
  1917   001A58                     __ptext11:
  1918                           	callstack 0
  1919   001A58                     _color_click_init:
  1920                           	callstack 27
  1921   001A58                     
  1922                           ;color.c: 8:     I2C_2_Master_Init();
  1923   001A58  EC78  F00D         	call	_I2C_2_Master_Init	;wreg free
  1924   001A5C                     
  1925                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1926   001A5C  0E01               	movlw	1
  1927   001A5E  6E03               	movwf	color_writetoaddr@value^0,c
  1928   001A60  0E00               	movlw	0
  1929   001A62  ECB4  F00D         	call	_color_writetoaddr
  1930   001A66                     
  1931                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1932   001A66  0E3F               	movlw	63
  1933   001A68  6E05               	movwf	??_color_click_init^0,c
  1934   001A6A  0E55               	movlw	85
  1935   001A6C                     u1997:
  1936   001A6C  2EE8               	decfsz	wreg,f,c
  1937   001A6E  D7FE               	bra	u1997
  1938   001A70  2E05               	decfsz	??_color_click_init^0,f,c
  1939   001A72  D7FC               	bra	u1997
  1940   001A74  0000               	nop	
  1941   001A76                     
  1942                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1943   001A76  0E03               	movlw	3
  1944   001A78  6E03               	movwf	color_writetoaddr@value^0,c
  1945   001A7A  0E00               	movlw	0
  1946   001A7C  ECB4  F00D         	call	_color_writetoaddr
  1947   001A80                     
  1948                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1949   001A80  0ED5               	movlw	213
  1950   001A82  6E03               	movwf	color_writetoaddr@value^0,c
  1951   001A84  0E01               	movlw	1
  1952   001A86  ECB4  F00D         	call	_color_writetoaddr
  1953   001A8A  0012               	return		;funcret
  1954   001A8C                     __end_of_color_click_init:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _color_writetoaddr *****************
  1958 ;; Defined at:
  1959 ;;		line 21 in file "color.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  address         1    wreg     unsigned char 
  1962 ;;  value           1    2[COMRAM] unsigned char 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  address         1    3[COMRAM] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      void 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;Total ram usage:        2 bytes
  1979 ;; Hardware stack levels used: 1
  1980 ;; Hardware stack levels required when called: 2
  1981 ;; This function calls:
  1982 ;;		_I2C_2_Master_Start
  1983 ;;		_I2C_2_Master_Stop
  1984 ;;		_I2C_2_Master_Write
  1985 ;; This function is called by:
  1986 ;;		_color_click_init
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text12
  1991   001B68                     __ptext12:
  1992                           	callstack 0
  1993   001B68                     _color_writetoaddr:
  1994                           	callstack 27
  1995                           
  1996                           ;incstack = 0
  1997                           ;color_writetoaddr@address stored from wreg
  1998   001B68  6E04               	movwf	color_writetoaddr@address^0,c
  1999   001B6A                     
  2000                           ;color.c: 22:     I2C_2_Master_Start();
  2001   001B6A  ECFC  F00D         	call	_I2C_2_Master_Start	;wreg free
  2002                           
  2003                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  2004   001B6E  0E52               	movlw	82
  2005   001B70  ECEC  F00D         	call	_I2C_2_Master_Write
  2006                           
  2007                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  2008   001B74  5004               	movf	color_writetoaddr@address^0,w,c
  2009   001B76  0980               	iorlw	128
  2010   001B78  ECEC  F00D         	call	_I2C_2_Master_Write
  2011                           
  2012                           ;color.c: 25:     I2C_2_Master_Write(value);
  2013   001B7C  5003               	movf	color_writetoaddr@value^0,w,c
  2014   001B7E  ECEC  F00D         	call	_I2C_2_Master_Write
  2015                           
  2016                           ;color.c: 26:     I2C_2_Master_Stop();
  2017   001B82  ECF7  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2018   001B86  0012               	return		;funcret
  2019   001B88                     __end_of_color_writetoaddr:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _I2C_2_Master_Write *****************
  2023 ;; Defined at:
  2024 ;;		line 45 in file "i2c.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  data_byte       1    wreg     unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  data_byte       1    1[COMRAM] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;Total ram usage:        1 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 1
  2045 ;; This function calls:
  2046 ;;		_I2C_2_Master_Idle
  2047 ;; This function is called by:
  2048 ;;		_color_writetoaddr
  2049 ;;		_color_read_Red
  2050 ;;		_color_read_Green
  2051 ;;		_color_read_Blue
  2052 ;;		_color_read_Clear
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text13
  2057   001BD8                     __ptext13:
  2058                           	callstack 0
  2059   001BD8                     _I2C_2_Master_Write:
  2060                           	callstack 28
  2061                           
  2062                           ;incstack = 0
  2063                           ;I2C_2_Master_Write@data_byte stored from wreg
  2064   001BD8  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  2065   001BDA                     
  2066                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  2067   001BDA  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2068   001BDE                     
  2069                           ;i2c.c: 48:   SSP2BUF = data_byte;
  2070   001BDE  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  2071   001BE2  0012               	return		;funcret
  2072   001BE4                     __end_of_I2C_2_Master_Write:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _I2C_2_Master_Stop *****************
  2076 ;; Defined at:
  2077 ;;		line 39 in file "i2c.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 1
  2098 ;; This function calls:
  2099 ;;		_I2C_2_Master_Idle
  2100 ;; This function is called by:
  2101 ;;		_color_writetoaddr
  2102 ;;		_color_read_Red
  2103 ;;		_color_read_Green
  2104 ;;		_color_read_Blue
  2105 ;;		_color_read_Clear
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text14
  2110   001BEE                     __ptext14:
  2111                           	callstack 0
  2112   001BEE                     _I2C_2_Master_Stop:
  2113                           	callstack 28
  2114   001BEE                     
  2115                           ;i2c.c: 41:   I2C_2_Master_Idle();
  2116   001BEE  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2117   001BF2                     
  2118                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  2119   001BF2  010E               	movlb	14	; () banked
  2120   001BF4  85DA               	bsf	218,2,b	;volatile
  2121   001BF6                     
  2122                           ; BSR set to: 14
  2123   001BF6  0012               	return		;funcret
  2124   001BF8                     __end_of_I2C_2_Master_Stop:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _I2C_2_Master_Start *****************
  2128 ;; Defined at:
  2129 ;;		line 27 in file "i2c.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		_I2C_2_Master_Idle
  2152 ;; This function is called by:
  2153 ;;		_color_writetoaddr
  2154 ;;		_color_read_Red
  2155 ;;		_color_read_Green
  2156 ;;		_color_read_Blue
  2157 ;;		_color_read_Clear
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text15
  2162   001BF8                     __ptext15:
  2163                           	callstack 0
  2164   001BF8                     _I2C_2_Master_Start:
  2165                           	callstack 28
  2166   001BF8                     
  2167                           ;i2c.c: 29:   I2C_2_Master_Idle();
  2168   001BF8  EC8D  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2169   001BFC                     
  2170                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  2171   001BFC  010E               	movlb	14	; () banked
  2172   001BFE  81DA               	bsf	218,0,b	;volatile
  2173   001C00                     
  2174                           ; BSR set to: 14
  2175   001C00  0012               	return		;funcret
  2176   001C02                     __end_of_I2C_2_Master_Start:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _I2C_2_Master_Idle *****************
  2180 ;; Defined at:
  2181 ;;		line 22 in file "i2c.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_I2C_2_Master_Start
  2205 ;;		_I2C_2_Master_RepStart
  2206 ;;		_I2C_2_Master_Stop
  2207 ;;		_I2C_2_Master_Write
  2208 ;;		_I2C_2_Master_Read
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text16
  2213   001B1A                     __ptext16:
  2214                           	callstack 0
  2215   001B1A                     _I2C_2_Master_Idle:
  2216                           	callstack 28
  2217   001B1A                     l85:
  2218   001B1A  010E               	movlb	14	; () banked
  2219   001B1C  B5D8               	btfsc	216,2,b	;volatile
  2220   001B1E  EF93  F00D         	goto	u1711
  2221   001B22  EF95  F00D         	goto	u1710
  2222   001B26                     u1711:
  2223   001B26  EF8D  F00D         	goto	l85
  2224   001B2A                     u1710:
  2225   001B2A                     
  2226                           ; BSR set to: 14
  2227   001B2A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2228   001B2E  0E1F               	movlw	31
  2229   001B30  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2230   001B32  A4D8               	btfss	status,2,c
  2231   001B34  EF9E  F00D         	goto	u1721
  2232   001B38  EFA0  F00D         	goto	u1720
  2233   001B3C                     u1721:
  2234   001B3C  EF8D  F00D         	goto	l85
  2235   001B40                     u1720:
  2236   001B40                     
  2237                           ; BSR set to: 14
  2238   001B40  0012               	return		;funcret
  2239   001B42                     __end_of_I2C_2_Master_Idle:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _I2C_2_Master_Init *****************
  2243 ;; Defined at:
  2244 ;;		line 4 in file "i2c.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_color_click_init
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text17
  2272   001AF0                     __ptext17:
  2273                           	callstack 0
  2274   001AF0                     _I2C_2_Master_Init:
  2275                           	callstack 29
  2276   001AF0                     
  2277                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2278   001AF0  010E               	movlb	14	; () banked
  2279   001AF2  51D9               	movf	217,w,b	;volatile
  2280   001AF4  0BF0               	andlw	-16
  2281   001AF6  0908               	iorlw	8
  2282   001AF8  6FD9               	movwf	217,b	;volatile
  2283   001AFA                     
  2284                           ; BSR set to: 14
  2285                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2286   001AFA  8BD9               	bsf	217,5,b	;volatile
  2287                           
  2288                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2289   001AFC  0E9F               	movlw	159
  2290   001AFE  6FD6               	movwf	214,b	;volatile
  2291   001B00                     
  2292                           ; BSR set to: 14
  2293                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2294   001B00  8A84               	bsf	132,5,c	;volatile
  2295   001B02                     
  2296                           ; BSR set to: 14
  2297                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2298   001B02  8C84               	bsf	132,6,c	;volatile
  2299   001B04                     
  2300                           ; BSR set to: 14
  2301                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2302   001B04  9BA7               	bcf	167,5,b	;volatile
  2303   001B06                     
  2304                           ; BSR set to: 14
  2305                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2306   001B06  9DA7               	bcf	167,6,b	;volatile
  2307                           
  2308                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2309   001B08  0E1D               	movlw	29
  2310   001B0A  6F1D               	movwf	29,b	;volatile
  2311                           
  2312                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2313   001B0C  0E1E               	movlw	30
  2314   001B0E  6F1C               	movwf	28,b	;volatile
  2315                           
  2316                           ;i2c.c: 18:   RD5PPS=0x1C;
  2317   001B10  0E1C               	movlw	28
  2318   001B12  6F6F               	movwf	111,b	;volatile
  2319                           
  2320                           ;i2c.c: 19:   RD6PPS=0x1B;
  2321   001B14  0E1B               	movlw	27
  2322   001B16  6F70               	movwf	112,b	;volatile
  2323   001B18                     
  2324                           ; BSR set to: 14
  2325   001B18  0012               	return		;funcret
  2326   001B1A                     __end_of_I2C_2_Master_Init:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _ADC_init *****************
  2330 ;; Defined at:
  2331 ;;		line 9 in file "ADC.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text18
  2359   001BA6                     __ptext18:
  2360                           	callstack 0
  2361   001BA6                     _ADC_init:
  2362                           	callstack 30
  2363   001BA6                     
  2364                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  2365   001BA6  8C86               	bsf	134,6,c	;volatile
  2366                           
  2367                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  2368   001BA8  010E               	movlb	14	; () banked
  2369   001BAA  8DB4               	bsf	180,6,b	;volatile
  2370                           
  2371                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  2372   001BAC  010F               	movlb	15	; () banked
  2373   001BAE  9958               	bcf	88,4,b	;volatile
  2374   001BB0                     
  2375                           ; BSR set to: 15
  2376                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  2377   001BB0  0EFC               	movlw	-4
  2378   001BB2  1758               	andwf	88,f,b	;volatile
  2379                           
  2380                           ;ADC.c: 17:     ADPCH=0b101110;
  2381   001BB4  0E2E               	movlw	46
  2382   001BB6  6F5F               	movwf	95,b	;volatile
  2383   001BB8                     
  2384                           ; BSR set to: 15
  2385                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  2386   001BB8  9460               	bcf	96,2,c	;volatile
  2387   001BBA                     
  2388                           ; BSR set to: 15
  2389                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  2390   001BBA  8860               	bsf	96,4,c	;volatile
  2391   001BBC                     
  2392                           ; BSR set to: 15
  2393                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  2394   001BBC  8E60               	bsf	96,7,c	;volatile
  2395   001BBE                     
  2396                           ; BSR set to: 15
  2397   001BBE  0012               	return		;funcret
  2398   001BC0                     __end_of_ADC_init:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _ADC_getval *****************
  2402 ;; Defined at:
  2403 ;;		line 23 in file "ADC.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;		None
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  tmpval          2    2[COMRAM] unsigned int 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  2    0[COMRAM] unsigned int 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;Total ram usage:        4 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text19
  2431   001AC0                     __ptext19:
  2432                           	callstack 0
  2433   001AC0                     _ADC_getval:
  2434                           	callstack 30
  2435   001AC0                     
  2436                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  2437   001AC0  8060               	bsf	96,0,c	;volatile
  2438   001AC2                     l18:
  2439   001AC2  B060               	btfsc	96,0,c	;volatile
  2440   001AC4  EF66  F00D         	goto	u1921
  2441   001AC8  EF68  F00D         	goto	u1920
  2442   001ACC                     u1921:
  2443   001ACC  EF61  F00D         	goto	l18
  2444   001AD0                     u1920:
  2445   001AD0                     
  2446                           ;ADC.c: 31:     tmpval = ADRESH;
  2447   001AD0  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  2448   001AD4  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  2449   001AD6                     
  2450                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  2451   001AD6  5003               	movf	ADC_getval@tmpval^0,w,c
  2452   001AD8  08FF               	sublw	255
  2453   001ADA  6E03               	movwf	ADC_getval@tmpval^0,c
  2454   001ADC  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  2455   001ADE  A0D8               	btfss	status,0,c
  2456   001AE0  2AE8               	incf	wreg,f,c
  2457   001AE2  0800               	sublw	0
  2458   001AE4  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  2459   001AE6                     
  2460                           ;ADC.c: 37:     return tmpval;
  2461   001AE6  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  2462   001AEA  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  2463   001AEE  0012               	return		;funcret
  2464   001AF0                     __end_of_ADC_getval:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _ADC2String *****************
  2468 ;; Defined at:
  2469 ;;		line 133 in file "serial.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;  buf             1   68[COMRAM] PTR unsigned char 
  2472 ;;		 -> sendAllReadings@buffer(10), main@buf(50), 
  2473 ;;  ADC_val         2   69[COMRAM] unsigned int 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  int_part        2   75[COMRAM] unsigned int 
  2476 ;;  frac_part       2   73[COMRAM] unsigned int 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2486 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;Total ram usage:        9 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 8
  2493 ;; This function calls:
  2494 ;;		___lwdiv
  2495 ;;		___wmul
  2496 ;;		_sprintf
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;;		_sendAllReadings
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text20
  2504   00156A                     __ptext20:
  2505                           	callstack 0
  2506   00156A                     _ADC2String:
  2507                           	callstack 22
  2508   00156A                     
  2509                           ;serial.c: 135:     unsigned int int_part=ADC_val/77;
  2510   00156A  C046  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  2511   00156E  C047  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  2512   001572  0E00               	movlw	0
  2513   001574  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2514   001576  0E4D               	movlw	77
  2515   001578  6E09               	movwf	___lwdiv@divisor^0,c
  2516   00157A  EC98  F00B         	call	___lwdiv	;wreg free
  2517   00157E  C007  F04C         	movff	?___lwdiv,ADC2String@int_part
  2518   001582  C008  F04D         	movff	?___lwdiv+1,ADC2String@int_part+1
  2519   001586                     
  2520                           ;serial.c: 137:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  2521   001586  C046  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  2522   00158A  C047  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  2523   00158E  0E00               	movlw	0
  2524   001590  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2525   001592  0E64               	movlw	100
  2526   001594  6E03               	movwf	___wmul@multiplicand^0,c
  2527   001596  ECA1  F00D         	call	___wmul	;wreg free
  2528   00159A  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2529   00159E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2530   0015A2  0E00               	movlw	0
  2531   0015A4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2532   0015A6  0E4D               	movlw	77
  2533   0015A8  6E09               	movwf	___lwdiv@divisor^0,c
  2534   0015AA  EC98  F00B         	call	___lwdiv	;wreg free
  2535   0015AE  C007  F048         	movff	?___lwdiv,??_ADC2String
  2536   0015B2  C008  F049         	movff	?___lwdiv+1,??_ADC2String+1
  2537   0015B6  C04C  F001         	movff	ADC2String@int_part,___wmul@multiplier
  2538   0015BA  C04D  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  2539   0015BE  0EFF               	movlw	255
  2540   0015C0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2541   0015C2  0E9C               	movlw	156
  2542   0015C4  6E03               	movwf	___wmul@multiplicand^0,c
  2543   0015C6  ECA1  F00D         	call	___wmul	;wreg free
  2544   0015CA  5001               	movf	?___wmul^0,w,c
  2545   0015CC  2448               	addwf	??_ADC2String^0,w,c
  2546   0015CE  6E4A               	movwf	ADC2String@frac_part^0,c
  2547   0015D0  5002               	movf	(?___wmul+1)^0,w,c
  2548   0015D2  2049               	addwfc	(??_ADC2String+1)^0,w,c
  2549   0015D4  6E4B               	movwf	(ADC2String@frac_part+1)^0,c
  2550   0015D6                     
  2551                           ;serial.c: 139:     sprintf(buf,"Voltage = %d.%02d,  ",int_part,frac_part);
  2552   0015D6  C045  F031         	movff	ADC2String@buf,sprintf@s
  2553   0015DA  6A32               	clrf	(sprintf@s+1)^0,c
  2554   0015DC  0E01               	movlw	low STR_5
  2555   0015DE  6E33               	movwf	sprintf@fmt^0,c
  2556   0015E0  C04C  F034         	movff	ADC2String@int_part,?_sprintf+3
  2557   0015E4  C04D  F035         	movff	ADC2String@int_part+1,?_sprintf+4
  2558   0015E8  C04A  F036         	movff	ADC2String@frac_part,?_sprintf+5
  2559   0015EC  C04B  F037         	movff	ADC2String@frac_part+1,?_sprintf+6
  2560   0015F0  ECF2  F00C         	call	_sprintf	;wreg free
  2561   0015F4                     
  2562                           ;serial.c: 141:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2563   0015F4  0E52               	movlw	82
  2564   0015F6  6E49               	movwf	(??_ADC2String+1)^0,c
  2565   0015F8  0E2B               	movlw	43
  2566   0015FA  6E48               	movwf	??_ADC2String^0,c
  2567   0015FC  0E00               	movlw	0
  2568   0015FE                     u2007:
  2569   0015FE  2EE8               	decfsz	wreg,f,c
  2570   001600  D7FE               	bra	u2007
  2571   001602  2E48               	decfsz	??_ADC2String^0,f,c
  2572   001604  D7FC               	bra	u2007
  2573   001606  2E49               	decfsz	(??_ADC2String+1)^0,f,c
  2574   001608  D7FA               	bra	u2007
  2575   00160A  D000               	nop2	
  2576   00160C  0012               	return		;funcret
  2577   00160E                     __end_of_ADC2String:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _sprintf *****************
  2581 ;; Defined at:
  2582 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  s               2   48[COMRAM] PTR unsigned char 
  2585 ;;		 -> sendAllReadings@buffer(10), main@clear_char(50), main@green_char(50), main@blue_char(50), 
  2586 ;;		 -> main@red_char(50), main@buf(50), 
  2587 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
  2588 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2589 ;;		 -> STR_1(10), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  f              12   56[COMRAM] struct _IO_FILE
  2592 ;;  ret             2    0        int 
  2593 ;;  ap              1   55[COMRAM] PTR void [1]
  2594 ;;		 -> ?_sprintf(2), 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2   48[COMRAM] int 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2604 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2605 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;Total ram usage:       20 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 7
  2611 ;; This function calls:
  2612 ;;		_vfprintf
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;;		_ADC2String
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text21
  2620   0019E4                     __ptext21:
  2621                           	callstack 0
  2622   0019E4                     _sprintf:
  2623                           	callstack 23
  2624   0019E4  0E34               	movlw	low (?_sprintf+3)
  2625   0019E6  6E38               	movwf	sprintf@ap^0,c
  2626   0019E8  C031  F039         	movff	sprintf@s,sprintf@f
  2627   0019EC  C032  F03A         	movff	sprintf@s+1,sprintf@f+1
  2628   0019F0  0E00               	movlw	0
  2629   0019F2  6E3D               	movwf	(sprintf@f+4)^0,c
  2630   0019F4  0E00               	movlw	0
  2631   0019F6  6E3C               	movwf	(sprintf@f+3)^0,c
  2632   0019F8  0E00               	movlw	0
  2633   0019FA  6E44               	movwf	(sprintf@f+11)^0,c
  2634   0019FC  0E00               	movlw	0
  2635   0019FE  6E43               	movwf	(sprintf@f+10)^0,c
  2636   001A00  0E39               	movlw	low sprintf@f
  2637   001A02  6E2D               	movwf	vfprintf@fp^0,c
  2638   001A04  C033  F02E         	movff	sprintf@fmt,vfprintf@fmt
  2639   001A08  0E38               	movlw	low sprintf@ap
  2640   001A0A  6E2F               	movwf	vfprintf@ap^0,c
  2641   001A0C  EC93  F00C         	call	_vfprintf	;wreg free
  2642   001A10  503C               	movf	(sprintf@f+3)^0,w,c
  2643   001A12  2431               	addwf	sprintf@s^0,w,c
  2644   001A14  6ED9               	movwf	fsr2l,c
  2645   001A16  503D               	movf	(sprintf@f+4)^0,w,c
  2646   001A18  2032               	addwfc	(sprintf@s+1)^0,w,c
  2647   001A1A  6EDA               	movwf	fsr2h,c
  2648   001A1C  6ADF               	clrf	indf2,c
  2649   001A1E  0012               	return		;funcret
  2650   001A20                     __end_of_sprintf:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _vfprintf *****************
  2654 ;; Defined at:
  2655 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  2658 ;;		 -> sprintf@f(12), 
  2659 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2660 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2661 ;;		 -> STR_1(10), 
  2662 ;;  ap              1   46[COMRAM] PTR PTR void 
  2663 ;;		 -> sprintf@ap(1), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  2666 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2667 ;;		 -> STR_1(10), 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2   44[COMRAM] int 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2677 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2680 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2681 ;;Total ram usage:        4 bytes
  2682 ;; Hardware stack levels used: 1
  2683 ;; Hardware stack levels required when called: 6
  2684 ;; This function calls:
  2685 ;;		_vfpfcnvrt
  2686 ;; This function is called by:
  2687 ;;		_sprintf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text22
  2692   001926                     __ptext22:
  2693                           	callstack 0
  2694   001926                     _vfprintf:
  2695                           	callstack 23
  2696   001926                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2698   001926  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2701   00192A  EF9F  F00C         	goto	l2994
  2702   00192E                     l2992:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2705   00192E  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  2706   001932  0E30               	movlw	low vfprintf@cfmt
  2707   001934  6E23               	movwf	vfpfcnvrt@fmt^0,c
  2708   001936  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  2709   00193A  EC23  F007         	call	_vfpfcnvrt	;wreg free
  2710   00193E                     l2994:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2713   00193E  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  2714   001942                     	if	1	;There is more than 1 active tblptr byte
  2715   001942  0E0E               	movlw	high __smallconst
  2716   001944  6EF7               	movwf	tblptrh,c
  2717   001946                     	endif
  2718   001946                     	if	0	;tblptru may be non-zero
  2719   001946                     	endif
  2720   001946                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2721   001946  0E00               	movlw	low (__smallconst shr (0+16))
  2722   001948  6EF8               	movwf	tblptru,c
  2723   00194A                     	endif
  2724   00194A  0008               	tblrd		*
  2725   00194C  50F5               	movf	tablat,w,c
  2726   00194E  0900               	iorlw	0
  2727   001950  A4D8               	btfss	status,2,c
  2728   001952  EFAD  F00C         	goto	u1801
  2729   001956  EFAF  F00C         	goto	u1800
  2730   00195A                     u1801:
  2731   00195A  EF97  F00C         	goto	l2992
  2732   00195E                     u1800:
  2733   00195E                     
  2734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2735   00195E  0E00               	movlw	0
  2736   001960  6E2E               	movwf	(?_vfprintf+1)^0,c
  2737   001962  0E00               	movlw	0
  2738   001964  6E2D               	movwf	?_vfprintf^0,c
  2739   001966  0012               	return		;funcret
  2740   001968                     __end_of_vfprintf:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _vfpfcnvrt *****************
  2744 ;; Defined at:
  2745 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  2748 ;;		 -> sprintf@f(12), 
  2749 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  2750 ;;		 -> vfprintf@cfmt(1), 
  2751 ;;  ap              1   35[COMRAM] PTR PTR void 
  2752 ;;		 -> sprintf@ap(1), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  convarg         4   38[COMRAM] struct .
  2755 ;;  cp              1   43[COMRAM] PTR unsigned char 
  2756 ;;		 -> STR_5(21), STR_4(14), STR_3(12), STR_2(11), 
  2757 ;;		 -> STR_1(10), 
  2758 ;;  done            1   42[COMRAM] _Bool 
  2759 ;;  c               1    0        unsigned char 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:       11 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 5
  2776 ;; This function calls:
  2777 ;;		_dtoa
  2778 ;;		_fputc
  2779 ;;		_read_prec_or_width
  2780 ;; This function is called by:
  2781 ;;		_vfprintf
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text23
  2786   000E46                     __ptext23:
  2787                           	callstack 0
  2788   000E46                     _vfpfcnvrt:
  2789                           	callstack 23
  2790   000E46                     
  2791                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2792   000E46  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2793   000E48  6ED9               	movwf	fsr2l,c
  2794   000E4A  6ADA               	clrf	fsr2h,c
  2795   000E4C  CFDF FFF6          	movff	indf2,tblptrl
  2796   000E50                     	if	1	;There is more than 1 active tblptr byte
  2797   000E50  0E0E               	movlw	high __smallconst
  2798   000E52  6EF7               	movwf	tblptrh,c
  2799   000E54                     	endif
  2800   000E54                     	if	0	;tblptru may be non-zero
  2801   000E54                     	endif
  2802   000E54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2803   000E54  0E00               	movlw	low (__smallconst shr (0+16))
  2804   000E56  6EF8               	movwf	tblptru,c
  2805   000E58                     	endif
  2806   000E58  0008               	tblrd		*
  2807   000E5A  50F5               	movf	tablat,w,c
  2808   000E5C  0A25               	xorlw	37
  2809   000E5E  A4D8               	btfss	status,2,c
  2810   000E60  EF34  F007         	goto	u1731
  2811   000E64  EF36  F007         	goto	u1730
  2812   000E68                     u1731:
  2813   000E68  EFD1  F007         	goto	l2948
  2814   000E6C                     u1730:
  2815   000E6C                     
  2816                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2817   000E6C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2818   000E6E  6ED9               	movwf	fsr2l,c
  2819   000E70  6ADA               	clrf	fsr2h,c
  2820   000E72  2ADF               	incf	indf2,f,c
  2821   000E74                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2823   000E74  0E00               	movlw	0
  2824   000E76  6E57               	movwf	(_width+1)^0,c
  2825   000E78  0E00               	movlw	0
  2826   000E7A  6E56               	movwf	_width^0,c
  2827   000E7C  C056  F058         	movff	_width,_flags
  2828   000E80                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2830   000E80  0101               	movlb	1	; () banked
  2831   000E82  6964               	setf	_prec& (0+255),b
  2832   000E84  6965               	setf	(_prec+1)& (0+255),b
  2833   000E86                     
  2834                           ; BSR set to: 1
  2835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2836   000E86  0E00               	movlw	0
  2837   000E88  6E2B               	movwf	vfpfcnvrt@done^0,c
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2840   000E8A  EF6D  F007         	goto	l2922
  2841   000E8E                     l2912:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2844   000E8E  8258               	bsf	_flags^0,1,c
  2845   000E90                     
  2846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2847   000E90  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2848   000E92  6ED9               	movwf	fsr2l,c
  2849   000E94  6ADA               	clrf	fsr2h,c
  2850   000E96  2ADF               	incf	indf2,f,c
  2851                           
  2852                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2853   000E98  EF6D  F007         	goto	l2922
  2854   000E9C                     l2916:
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2857   000E9C  0E01               	movlw	1
  2858   000E9E  6E2B               	movwf	vfpfcnvrt@done^0,c
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2861   000EA0  EF6D  F007         	goto	l2922
  2862   000EA4                     l2920:
  2863   000EA4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2864   000EA6  6ED9               	movwf	fsr2l,c
  2865   000EA8  6ADA               	clrf	fsr2h,c
  2866   000EAA  CFDF FFF6          	movff	indf2,tblptrl
  2867   000EAE                     	if	1	;There is more than 1 active tblptr byte
  2868   000EAE  0E0E               	movlw	high __smallconst
  2869   000EB0  6EF7               	movwf	tblptrh,c
  2870   000EB2                     	endif
  2871   000EB2                     	if	0	;tblptru may be non-zero
  2872   000EB2                     	endif
  2873   000EB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2874   000EB2  0E00               	movlw	low (__smallconst shr (0+16))
  2875   000EB4  6EF8               	movwf	tblptru,c
  2876   000EB6                     	endif
  2877   000EB6  0008               	tblrd		*
  2878   000EB8  50F5               	movf	tablat,w,c
  2879   000EBA  6E25               	movwf	??_vfpfcnvrt^0,c
  2880   000EBC  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  2881                           
  2882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 1, Range of values is 0 to 0
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte            4     3 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889   000EBE  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  2890   000EC0  0A00               	xorlw	0	; case 0
  2891   000EC2  B4D8               	btfsc	status,2,c
  2892   000EC4  EF66  F007         	goto	l3430
  2893   000EC8  EF4E  F007         	goto	l2916
  2894   000ECC                     l3430:
  2895                           
  2896                           ; Switch size 1, requested type "simple"
  2897                           ; Number of cases is 1, Range of values is 48 to 48
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte            4     3 (average)
  2901                           ;	Chosen strategy is simple_byte
  2902   000ECC  5025               	movf	??_vfpfcnvrt^0,w,c
  2903   000ECE  0A30               	xorlw	48	; case 48
  2904   000ED0  B4D8               	btfsc	status,2,c
  2905   000ED2  EF47  F007         	goto	l2912
  2906   000ED6  EF4E  F007         	goto	l2916
  2907   000EDA                     l2922:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2910   000EDA  502B               	movf	vfpfcnvrt@done^0,w,c
  2911   000EDC  B4D8               	btfsc	status,2,c
  2912   000EDE  EF73  F007         	goto	u1741
  2913   000EE2  EF75  F007         	goto	u1740
  2914   000EE6                     u1741:
  2915   000EE6  EF52  F007         	goto	l2920
  2916   000EEA                     u1740:
  2917   000EEA                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2919   000EEA  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2920   000EEE  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2921   000EF2  EC5E  F00A         	call	_read_prec_or_width	;wreg free
  2922   000EF6  C007  F056         	movff	?_read_prec_or_width,_width
  2923   000EFA  C008  F057         	movff	?_read_prec_or_width+1,_width+1
  2924   000EFE                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2926   000EFE  BE57               	btfsc	(_width+1)^0,7,c
  2927   000F00  EF86  F007         	goto	u1750
  2928   000F04  EF84  F007         	goto	u1751
  2929   000F08                     u1751:
  2930   000F08  EF8B  F007         	goto	l2930
  2931   000F0C                     u1750:
  2932   000F0C                     
  2933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2934   000F0C  8058               	bsf	_flags^0,0,c
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2937   000F0E  6C56               	negf	_width^0,c
  2938   000F10  1E57               	comf	(_width+1)^0,f,c
  2939   000F12  B0D8               	btfsc	status,0,c
  2940   000F14  2A57               	incf	(_width+1)^0,f,c
  2941   000F16                     l2930:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2944   000F16  5023               	movf	vfpfcnvrt@fmt^0,w,c
  2945   000F18  6ED9               	movwf	fsr2l,c
  2946   000F1A  6ADA               	clrf	fsr2h,c
  2947   000F1C  50DF               	movf	indf2,w,c
  2948   000F1E  6E2C               	movwf	vfpfcnvrt@cp^0,c
  2949   000F20                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2951   000F20  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2952   000F24                     	if	1	;There is more than 1 active tblptr byte
  2953   000F24  0E0E               	movlw	high __smallconst
  2954   000F26  6EF7               	movwf	tblptrh,c
  2955   000F28                     	endif
  2956   000F28                     	if	0	;tblptru may be non-zero
  2957   000F28                     	endif
  2958   000F28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2959   000F28  0E00               	movlw	low (__smallconst shr (0+16))
  2960   000F2A  6EF8               	movwf	tblptru,c
  2961   000F2C                     	endif
  2962   000F2C  0008               	tblrd		*
  2963   000F2E  50F5               	movf	tablat,w,c
  2964   000F30  0A64               	xorlw	100
  2965   000F32  B4D8               	btfsc	status,2,c
  2966   000F34  EF9E  F007         	goto	u1761
  2967   000F38  EFA0  F007         	goto	u1760
  2968   000F3C                     u1761:
  2969   000F3C  EFB0  F007         	goto	l2936
  2970   000F40                     u1760:
  2971   000F40  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2972   000F44                     	if	1	;There is more than 1 active tblptr byte
  2973   000F44  0E0E               	movlw	high __smallconst
  2974   000F46  6EF7               	movwf	tblptrh,c
  2975   000F48                     	endif
  2976   000F48                     	if	0	;tblptru may be non-zero
  2977   000F48                     	endif
  2978   000F48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2979   000F48  0E00               	movlw	low (__smallconst shr (0+16))
  2980   000F4A  6EF8               	movwf	tblptru,c
  2981   000F4C                     	endif
  2982   000F4C  0008               	tblrd		*
  2983   000F4E  50F5               	movf	tablat,w,c
  2984   000F50  0A69               	xorlw	105
  2985   000F52  A4D8               	btfss	status,2,c
  2986   000F54  EFAE  F007         	goto	u1771
  2987   000F58  EFB0  F007         	goto	u1770
  2988   000F5C                     u1771:
  2989   000F5C  EFCB  F007         	goto	l2944
  2990   000F60                     u1770:
  2991   000F60                     l2936:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2994   000F60  5024               	movf	vfpfcnvrt@ap^0,w,c
  2995   000F62  6ED9               	movwf	fsr2l,c
  2996   000F64  6ADA               	clrf	fsr2h,c
  2997   000F66  0E02               	movlw	2
  2998   000F68  26DF               	addwf	indf2,f,c
  2999   000F6A  5CDF               	subwf	indf2,w,c
  3000   000F6C  6ED9               	movwf	fsr2l,c
  3001   000F6E  6ADA               	clrf	fsr2h,c
  3002   000F70  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  3003   000F74  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  3004   000F78                     
  3005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3006   000F78  5023               	movf	vfpfcnvrt@fmt^0,w,c
  3007   000F7A  6ED9               	movwf	fsr2l,c
  3008   000F7C  6ADA               	clrf	fsr2h,c
  3009   000F7E  282C               	incf	vfpfcnvrt@cp^0,w,c
  3010   000F80  6EDF               	movwf	indf2,c
  3011   000F82                     
  3012                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3013   000F82  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  3014   000F86  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  3015   000F8A  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3016   000F8E  ECE5  F007         	call	_dtoa	;wreg free
  3017   000F92  EFE4  F007         	goto	l1136
  3018   000F96                     l2944:
  3019                           
  3020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3021   000F96  5023               	movf	vfpfcnvrt@fmt^0,w,c
  3022   000F98  6ED9               	movwf	fsr2l,c
  3023   000F9A  6ADA               	clrf	fsr2h,c
  3024   000F9C  2ADF               	incf	indf2,f,c
  3025   000F9E  EFE4  F007         	goto	l1136
  3026   000FA2                     l2948:
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3029   000FA2  5023               	movf	vfpfcnvrt@fmt^0,w,c
  3030   000FA4  6ED9               	movwf	fsr2l,c
  3031   000FA6  6ADA               	clrf	fsr2h,c
  3032   000FA8  CFDF FFF6          	movff	indf2,tblptrl
  3033   000FAC                     	if	1	;There is more than 1 active tblptr byte
  3034   000FAC  0E0E               	movlw	high __smallconst
  3035   000FAE  6EF7               	movwf	tblptrh,c
  3036   000FB0                     	endif
  3037   000FB0                     	if	0	;tblptru may be non-zero
  3038   000FB0                     	endif
  3039   000FB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3040   000FB0  0E00               	movlw	low (__smallconst shr (0+16))
  3041   000FB2  6EF8               	movwf	tblptru,c
  3042   000FB4                     	endif
  3043   000FB4  0008               	tblrd		*
  3044   000FB6  50F5               	movf	tablat,w,c
  3045   000FB8  6E01               	movwf	fputc@c^0,c
  3046   000FBA  6A02               	clrf	(fputc@c+1)^0,c
  3047   000FBC  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3048   000FC0  ECA9  F009         	call	_fputc	;wreg free
  3049   000FC4  EFCB  F007         	goto	l2944
  3050   000FC8                     l1136:
  3051   000FC8  0012               	return		;funcret
  3052   000FCA                     __end_of_vfpfcnvrt:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _read_prec_or_width *****************
  3056 ;; Defined at:
  3057 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3060 ;;		 -> vfprintf@cfmt(1), 
  3061 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3062 ;;		 -> sprintf@ap(1), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  c               1    8[COMRAM] unsigned char 
  3065 ;;  n               2    9[COMRAM] int 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2    6[COMRAM] int 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;Total ram usage:        5 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 1
  3082 ;; This function calls:
  3083 ;;		___wmul
  3084 ;; This function is called by:
  3085 ;;		_vfpfcnvrt
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text24
  3090   0014BC                     __ptext24:
  3091                           	callstack 0
  3092   0014BC                     _read_prec_or_width:
  3093                           	callstack 26
  3094   0014BC                     
  3095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3096   0014BC  0E00               	movlw	0
  3097   0014BE  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3098   0014C0  0E00               	movlw	0
  3099   0014C2  6E0A               	movwf	read_prec_or_width@n^0,c
  3100   0014C4                     
  3101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3102   0014C4  5007               	movf	read_prec_or_width@fmt^0,w,c
  3103   0014C6  6ED9               	movwf	fsr2l,c
  3104   0014C8  6ADA               	clrf	fsr2h,c
  3105   0014CA  CFDF FFF6          	movff	indf2,tblptrl
  3106   0014CE                     	if	1	;There is more than 1 active tblptr byte
  3107   0014CE  0E0E               	movlw	high __smallconst
  3108   0014D0  6EF7               	movwf	tblptrh,c
  3109   0014D2                     	endif
  3110   0014D2                     	if	0	;tblptru may be non-zero
  3111   0014D2                     	endif
  3112   0014D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3113   0014D2  0E00               	movlw	low (__smallconst shr (0+16))
  3114   0014D4  6EF8               	movwf	tblptru,c
  3115   0014D6                     	endif
  3116   0014D6  0008               	tblrd		*
  3117   0014D8  50F5               	movf	tablat,w,c
  3118   0014DA  0A2A               	xorlw	42
  3119   0014DC  A4D8               	btfss	status,2,c
  3120   0014DE  EF73  F00A         	goto	u1691
  3121   0014E2  EF75  F00A         	goto	u1690
  3122   0014E6                     u1691:
  3123   0014E6  EF9B  F00A         	goto	l2896
  3124   0014EA                     u1690:
  3125   0014EA                     
  3126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3127   0014EA  5007               	movf	read_prec_or_width@fmt^0,w,c
  3128   0014EC  6ED9               	movwf	fsr2l,c
  3129   0014EE  6ADA               	clrf	fsr2h,c
  3130   0014F0  2ADF               	incf	indf2,f,c
  3131   0014F2                     
  3132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3133   0014F2  5008               	movf	read_prec_or_width@ap^0,w,c
  3134   0014F4  6ED9               	movwf	fsr2l,c
  3135   0014F6  6ADA               	clrf	fsr2h,c
  3136   0014F8  0E02               	movlw	2
  3137   0014FA  26DF               	addwf	indf2,f,c
  3138   0014FC  5CDF               	subwf	indf2,w,c
  3139   0014FE  6ED9               	movwf	fsr2l,c
  3140   001500  6ADA               	clrf	fsr2h,c
  3141   001502  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3142   001506  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3145   00150A  EFB0  F00A         	goto	l1117
  3146   00150E                     l2892:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3149   00150E  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3150   001512  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3151   001516  0E00               	movlw	0
  3152   001518  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3153   00151A  0E0A               	movlw	10
  3154   00151C  6E03               	movwf	___wmul@multiplicand^0,c
  3155   00151E  ECA1  F00D         	call	___wmul	;wreg free
  3156   001522  5009               	movf	read_prec_or_width@c^0,w,c
  3157   001524  2401               	addwf	?___wmul^0,w,c
  3158   001526  6E0A               	movwf	read_prec_or_width@n^0,c
  3159   001528  0E00               	movlw	0
  3160   00152A  2002               	addwfc	(?___wmul+1)^0,w,c
  3161   00152C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3162   00152E                     
  3163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3164   00152E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3165   001530  6ED9               	movwf	fsr2l,c
  3166   001532  6ADA               	clrf	fsr2h,c
  3167   001534  2ADF               	incf	indf2,f,c
  3168   001536                     l2896:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3171   001536  5007               	movf	read_prec_or_width@fmt^0,w,c
  3172   001538  6ED9               	movwf	fsr2l,c
  3173   00153A  6ADA               	clrf	fsr2h,c
  3174   00153C  CFDF FFF6          	movff	indf2,tblptrl
  3175   001540                     	if	1	;There is more than 1 active tblptr byte
  3176   001540  0E0E               	movlw	high __smallconst
  3177   001542  6EF7               	movwf	tblptrh,c
  3178   001544                     	endif
  3179   001544                     	if	0	;tblptru may be non-zero
  3180   001544                     	endif
  3181   001544                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3182   001544  0E00               	movlw	low (__smallconst shr (0+16))
  3183   001546  6EF8               	movwf	tblptru,c
  3184   001548                     	endif
  3185   001548  0008               	tblrd		*
  3186   00154A  50F5               	movf	tablat,w,c
  3187   00154C  0FD0               	addlw	208
  3188   00154E  6E09               	movwf	read_prec_or_width@c^0,c
  3189   001550  0E09               	movlw	9
  3190   001552  6409               	cpfsgt	read_prec_or_width@c^0,c
  3191   001554  EFAE  F00A         	goto	u1701
  3192   001558  EFB0  F00A         	goto	u1700
  3193   00155C                     u1701:
  3194   00155C  EF87  F00A         	goto	l2892
  3195   001560                     u1700:
  3196   001560                     l1117:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3199   001560  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3200   001564  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3201   001568  0012               	return		;funcret
  3202   00156A                     __end_of_read_prec_or_width:
  3203                           	callstack 0
  3204                           
  3205 ;; *************** function ___wmul *****************
  3206 ;; Defined at:
  3207 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  multiplier      2    0[COMRAM] unsigned int 
  3210 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;  product         2    4[COMRAM] unsigned int 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    0[COMRAM] unsigned int 
  3215 ;; Registers used:
  3216 ;;		wreg, status,2, status,0, prodl, prodh
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:        6 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_ADC2String
  3232 ;;		_read_prec_or_width
  3233 ;;		_setMotorPWM
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text25
  3238   001B42                     __ptext25:
  3239                           	callstack 0
  3240   001B42                     ___wmul:
  3241                           	callstack 26
  3242   001B42  5001               	movf	___wmul@multiplier^0,w,c
  3243   001B44  0203               	mulwf	___wmul@multiplicand^0,c
  3244   001B46  CFF3 F005          	movff	prodl,___wmul@product
  3245   001B4A  CFF4 F006          	movff	prodh,___wmul@product+1
  3246   001B4E  5001               	movf	___wmul@multiplier^0,w,c
  3247   001B50  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3248   001B52  50F3               	movf	243,w,c
  3249   001B54  2606               	addwf	(___wmul@product+1)^0,f,c
  3250   001B56  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3251   001B58  0203               	mulwf	___wmul@multiplicand^0,c
  3252   001B5A  50F3               	movf	243,w,c
  3253   001B5C  2606               	addwf	(___wmul@product+1)^0,f,c
  3254   001B5E  C005  F001         	movff	___wmul@product,?___wmul
  3255   001B62  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3256   001B66  0012               	return		;funcret
  3257   001B68                     __end_of___wmul:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _dtoa *****************
  3261 ;; Defined at:
  3262 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3265 ;;		 -> sprintf@f(12), 
  3266 ;;  d               2   23[COMRAM] int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  i               2   31[COMRAM] int 
  3269 ;;  w               2   28[COMRAM] int 
  3270 ;;  s               1   30[COMRAM] unsigned char 
  3271 ;;  p               1   27[COMRAM] _Bool 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3281 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;Total ram usage:       11 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 4
  3288 ;; This function calls:
  3289 ;;		___awdiv
  3290 ;;		___awmod
  3291 ;;		_abs
  3292 ;;		_pad
  3293 ;; This function is called by:
  3294 ;;		_vfpfcnvrt
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text26
  3299   000FCA                     __ptext26:
  3300                           	callstack 0
  3301   000FCA                     _dtoa:
  3302                           	callstack 23
  3303   000FCA                     
  3304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  3305   000FCA  0E01               	movlw	1
  3306   000FCC  6E1C               	movwf	dtoa@p^0,c
  3307   000FCE                     
  3308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  3309   000FCE  BE19               	btfsc	(dtoa@d+1)^0,7,c
  3310   000FD0  EFEC  F007         	goto	u1591
  3311   000FD4  EFEF  F007         	goto	u1590
  3312   000FD8                     u1591:
  3313   000FD8  0E01               	movlw	1
  3314   000FDA  EFF0  F007         	goto	u1600
  3315   000FDE                     u1590:
  3316   000FDE  0E00               	movlw	0
  3317   000FE0                     u1600:
  3318   000FE0  6E1F               	movwf	dtoa@s^0,c
  3319   000FE2                     
  3320                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  3321   000FE2  C056  F01D         	movff	_width,dtoa@w
  3322   000FE6  C057  F01E         	movff	_width+1,dtoa@w+1
  3323   000FEA                     
  3324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  3325   000FEA  501F               	movf	dtoa@s^0,w,c
  3326   000FEC  B4D8               	btfsc	status,2,c
  3327   000FEE  EFFB  F007         	goto	u1611
  3328   000FF2  EFFD  F007         	goto	u1610
  3329   000FF6                     u1611:
  3330   000FF6  EF14  F008         	goto	l1100
  3331   000FFA                     u1610:
  3332   000FFA                     
  3333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  3334   000FFA  061D               	decf	dtoa@w^0,f,c
  3335   000FFC  A0D8               	btfss	status,0,c
  3336   000FFE  061E               	decf	(dtoa@w+1)^0,f,c
  3337   001000                     
  3338                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  3339   001000  501F               	movf	dtoa@s^0,w,c
  3340   001002  A4D8               	btfss	status,2,c
  3341   001004  EF06  F008         	goto	u1621
  3342   001008  EF08  F008         	goto	u1620
  3343   00100C                     u1621:
  3344   00100C  EF0E  F008         	goto	l2848
  3345   001010                     u1620:
  3346   001010  0E00               	movlw	0
  3347   001012  6E1B               	movwf	(_dtoa$2062+1)^0,c
  3348   001014  0E2B               	movlw	43
  3349   001016  6E1A               	movwf	_dtoa$2062^0,c
  3350   001018  EF12  F008         	goto	l2850
  3351   00101C                     l2848:
  3352   00101C  0E00               	movlw	0
  3353   00101E  6E1B               	movwf	(_dtoa$2062+1)^0,c
  3354   001020  0E2D               	movlw	45
  3355   001022  6E1A               	movwf	_dtoa$2062^0,c
  3356   001024                     l2850:
  3357   001024  C01A  F01F         	movff	_dtoa$2062,dtoa@s
  3358   001028                     l1100:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  3361   001028  0E00               	movlw	0
  3362   00102A  6E21               	movwf	(dtoa@i+1)^0,c
  3363   00102C  0E1F               	movlw	31
  3364   00102E  6E20               	movwf	dtoa@i^0,c
  3365   001030                     
  3366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  3367   001030  0E00               	movlw	0
  3368   001032  0101               	movlb	1	; () banked
  3369   001034  6F85               	movwf	(_dbuf+31)& (0+255),b
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3372   001036  EF4C  F008         	goto	l2864
  3373   00103A                     l2854:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  3376   00103A  0620               	decf	dtoa@i^0,f,c
  3377   00103C  A0D8               	btfss	status,0,c
  3378   00103E  0621               	decf	(dtoa@i+1)^0,f,c
  3379   001040                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  3381   001040  0E66               	movlw	low _dbuf
  3382   001042  2420               	addwf	dtoa@i^0,w,c
  3383   001044  6ED9               	movwf	fsr2l,c
  3384   001046  0E01               	movlw	high _dbuf
  3385   001048  2021               	addwfc	(dtoa@i+1)^0,w,c
  3386   00104A  6EDA               	movwf	fsr2h,c
  3387   00104C  C018  F001         	movff	dtoa@d,___awmod@dividend
  3388   001050  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  3389   001054  0E00               	movlw	0
  3390   001056  6E04               	movwf	(___awmod@divisor+1)^0,c
  3391   001058  0E0A               	movlw	10
  3392   00105A  6E03               	movwf	___awmod@divisor^0,c
  3393   00105C  EC06  F00A         	call	___awmod	;wreg free
  3394   001060  C001  F007         	movff	?___awmod,abs@a
  3395   001064  C002  F008         	movff	?___awmod+1,abs@a+1
  3396   001068  EC46  F00D         	call	_abs	;wreg free
  3397   00106C  5007               	movf	?_abs^0,w,c
  3398   00106E  0F30               	addlw	48
  3399   001070  6EDF               	movwf	indf2,c
  3400   001072                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  3402   001072  0E00               	movlw	0
  3403   001074  6E1C               	movwf	dtoa@p^0,c
  3404   001076                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  3406   001076  061D               	decf	dtoa@w^0,f,c
  3407   001078  A0D8               	btfss	status,0,c
  3408   00107A  061E               	decf	(dtoa@w+1)^0,f,c
  3409   00107C                     
  3410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  3411   00107C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  3412   001080  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  3413   001084  0E00               	movlw	0
  3414   001086  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3415   001088  0E0A               	movlw	10
  3416   00108A  6E03               	movwf	___awdiv@divisor^0,c
  3417   00108C  EC47  F009         	call	___awdiv	;wreg free
  3418   001090  C001  F018         	movff	?___awdiv,dtoa@d
  3419   001094  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  3420   001098                     l2864:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  3423   001098  BE21               	btfsc	(dtoa@i+1)^0,7,c
  3424   00109A  EF57  F008         	goto	u1631
  3425   00109E  5021               	movf	(dtoa@i+1)^0,w,c
  3426   0010A0  E108               	bnz	u1630
  3427   0010A2  0420               	decf	dtoa@i^0,w,c
  3428   0010A4  A0D8               	btfss	status,0,c
  3429   0010A6  EF57  F008         	goto	u1631
  3430   0010AA  EF59  F008         	goto	u1630
  3431   0010AE                     u1631:
  3432   0010AE  EF7E  F008         	goto	l2874
  3433   0010B2                     u1630:
  3434   0010B2  5018               	movf	dtoa@d^0,w,c
  3435   0010B4  1019               	iorwf	(dtoa@d+1)^0,w,c
  3436   0010B6  A4D8               	btfss	status,2,c
  3437   0010B8  EF60  F008         	goto	u1641
  3438   0010BC  EF62  F008         	goto	u1640
  3439   0010C0                     u1641:
  3440   0010C0  EF1D  F008         	goto	l2854
  3441   0010C4                     u1640:
  3442   0010C4  501C               	movf	dtoa@p^0,w,c
  3443   0010C6  A4D8               	btfss	status,2,c
  3444   0010C8  EF68  F008         	goto	u1651
  3445   0010CC  EF6A  F008         	goto	u1650
  3446   0010D0                     u1651:
  3447   0010D0  EF1D  F008         	goto	l2854
  3448   0010D4                     u1650:
  3449   0010D4  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  3450   0010D6  EF75  F008         	goto	u1661
  3451   0010DA  501E               	movf	(dtoa@w+1)^0,w,c
  3452   0010DC  E108               	bnz	u1660
  3453   0010DE  041D               	decf	dtoa@w^0,w,c
  3454   0010E0  A0D8               	btfss	status,0,c
  3455   0010E2  EF75  F008         	goto	u1661
  3456   0010E6  EF77  F008         	goto	u1660
  3457   0010EA                     u1661:
  3458   0010EA  EF7E  F008         	goto	l2874
  3459   0010EE                     u1660:
  3460   0010EE  B258               	btfsc	_flags^0,1,c
  3461   0010F0  EF7C  F008         	goto	u1671
  3462   0010F4  EF7E  F008         	goto	u1670
  3463   0010F8                     u1671:
  3464   0010F8  EF1D  F008         	goto	l2854
  3465   0010FC                     u1670:
  3466   0010FC                     l2874:
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  3469   0010FC  501F               	movf	dtoa@s^0,w,c
  3470   0010FE  B4D8               	btfsc	status,2,c
  3471   001100  EF84  F008         	goto	u1681
  3472   001104  EF86  F008         	goto	u1680
  3473   001108                     u1681:
  3474   001108  EF91  F008         	goto	l2880
  3475   00110C                     u1680:
  3476   00110C                     
  3477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  3478   00110C  0620               	decf	dtoa@i^0,f,c
  3479   00110E  A0D8               	btfss	status,0,c
  3480   001110  0621               	decf	(dtoa@i+1)^0,f,c
  3481   001112                     
  3482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  3483   001112  0E66               	movlw	low _dbuf
  3484   001114  2420               	addwf	dtoa@i^0,w,c
  3485   001116  6ED9               	movwf	fsr2l,c
  3486   001118  0E01               	movlw	high _dbuf
  3487   00111A  2021               	addwfc	(dtoa@i+1)^0,w,c
  3488   00111C  6EDA               	movwf	fsr2h,c
  3489   00111E  C01F  FFDF         	movff	dtoa@s,indf2
  3490   001122                     l2880:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3493   001122  C017  F00F         	movff	dtoa@fp,pad@fp
  3494   001126  0E66               	movlw	low _dbuf
  3495   001128  2420               	addwf	dtoa@i^0,w,c
  3496   00112A  6E10               	movwf	pad@buf^0,c
  3497   00112C  0E01               	movlw	high _dbuf
  3498   00112E  2021               	addwfc	(dtoa@i+1)^0,w,c
  3499   001130  6E11               	movwf	(pad@buf+1)^0,c
  3500   001132  C01D  F012         	movff	dtoa@w,pad@p
  3501   001136  C01E  F013         	movff	dtoa@w+1,pad@p+1
  3502   00113A  EC07  F00B         	call	_pad	;wreg free
  3503   00113E  0012               	return		;funcret
  3504   001140                     __end_of_dtoa:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _pad *****************
  3508 ;; Defined at:
  3509 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3512 ;;		 -> sprintf@f(12), 
  3513 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3514 ;;		 -> dbuf(32), 
  3515 ;;  p               2   17[COMRAM] int 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  i               2   20[COMRAM] int 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3527 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;Total ram usage:        8 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 3
  3534 ;; This function calls:
  3535 ;;		_fputc
  3536 ;;		_fputs
  3537 ;; This function is called by:
  3538 ;;		_dtoa
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text27
  3543   00160E                     __ptext27:
  3544                           	callstack 0
  3545   00160E                     _pad:
  3546                           	callstack 23
  3547   00160E                     
  3548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3549   00160E  A058               	btfss	_flags^0,0,c
  3550   001610  EF0C  F00B         	goto	u1541
  3551   001614  EF0E  F00B         	goto	u1540
  3552   001618                     u1541:
  3553   001618  EF16  F00B         	goto	l2818
  3554   00161C                     u1540:
  3555   00161C                     
  3556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3557   00161C  C010  F009         	movff	pad@buf,fputs@s
  3558   001620  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3559   001624  C00F  F00B         	movff	pad@fp,fputs@fp
  3560   001628  ECB4  F00C         	call	_fputs	;wreg free
  3561   00162C                     l2818:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3564   00162C  BE13               	btfsc	(pad@p+1)^0,7,c
  3565   00162E  EF1D  F00B         	goto	u1550
  3566   001632  EF1B  F00B         	goto	u1551
  3567   001636                     u1551:
  3568   001636  EF21  F00B         	goto	l1092
  3569   00163A                     u1550:
  3570   00163A                     
  3571                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3572   00163A  0E00               	movlw	0
  3573   00163C  6E13               	movwf	(pad@p+1)^0,c
  3574   00163E  0E00               	movlw	0
  3575   001640  6E12               	movwf	pad@p^0,c
  3576   001642                     l1092:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3579   001642  0E00               	movlw	0
  3580   001644  6E16               	movwf	(pad@i+1)^0,c
  3581   001646  0E00               	movlw	0
  3582   001648  6E15               	movwf	pad@i^0,c
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3585   00164A  EF31  F00B         	goto	l2826
  3586   00164E                     l2822:
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3589   00164E  0E00               	movlw	0
  3590   001650  6E02               	movwf	(fputc@c+1)^0,c
  3591   001652  0E20               	movlw	32
  3592   001654  6E01               	movwf	fputc@c^0,c
  3593   001656  C00F  F003         	movff	pad@fp,fputc@fp
  3594   00165A  ECA9  F009         	call	_fputc	;wreg free
  3595   00165E                     
  3596                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3597   00165E  4A15               	infsnz	pad@i^0,f,c
  3598   001660  2A16               	incf	(pad@i+1)^0,f,c
  3599   001662                     l2826:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3602   001662  5012               	movf	pad@p^0,w,c
  3603   001664  5C15               	subwf	pad@i^0,w,c
  3604   001666  5016               	movf	(pad@i+1)^0,w,c
  3605   001668  0A80               	xorlw	128
  3606   00166A  6E14               	movwf	??_pad^0,c
  3607   00166C  5013               	movf	(pad@p+1)^0,w,c
  3608   00166E  0A80               	xorlw	128
  3609   001670  5814               	subwfb	??_pad^0,w,c
  3610   001672  A0D8               	btfss	status,0,c
  3611   001674  EF3E  F00B         	goto	u1561
  3612   001678  EF40  F00B         	goto	u1560
  3613   00167C                     u1561:
  3614   00167C  EF27  F00B         	goto	l2822
  3615   001680                     u1560:
  3616   001680                     
  3617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3618   001680  B058               	btfsc	_flags^0,0,c
  3619   001682  EF45  F00B         	goto	u1571
  3620   001686  EF47  F00B         	goto	u1570
  3621   00168A                     u1571:
  3622   00168A  EF4F  F00B         	goto	l1097
  3623   00168E                     u1570:
  3624   00168E                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3626   00168E  C010  F009         	movff	pad@buf,fputs@s
  3627   001692  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3628   001696  C00F  F00B         	movff	pad@fp,fputs@fp
  3629   00169A  ECB4  F00C         	call	_fputs	;wreg free
  3630   00169E                     l1097:
  3631   00169E  0012               	return		;funcret
  3632   0016A0                     __end_of_pad:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _fputs *****************
  3636 ;; Defined at:
  3637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3640 ;;		 -> dbuf(32), 
  3641 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3642 ;;		 -> sprintf@f(12), 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  i               2   12[COMRAM] int 
  3645 ;;  c               1   11[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  2    8[COMRAM] int 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3655 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;Total ram usage:        6 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 2
  3662 ;; This function calls:
  3663 ;;		_fputc
  3664 ;; This function is called by:
  3665 ;;		_pad
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text28
  3670   001968                     __ptext28:
  3671                           	callstack 0
  3672   001968                     _fputs:
  3673                           	callstack 23
  3674   001968  0E00               	movlw	0
  3675   00196A  6E0E               	movwf	(fputs@i+1)^0,c
  3676   00196C  0E00               	movlw	0
  3677   00196E  6E0D               	movwf	fputs@i^0,c
  3678   001970  EFC3  F00C         	goto	l2726
  3679   001974                     l2722:
  3680   001974  C00C  F001         	movff	fputs@c,fputc@c
  3681   001978  6A02               	clrf	(fputc@c+1)^0,c
  3682   00197A  C00B  F003         	movff	fputs@fp,fputc@fp
  3683   00197E  ECA9  F009         	call	_fputc	;wreg free
  3684   001982  4A0D               	infsnz	fputs@i^0,f,c
  3685   001984  2A0E               	incf	(fputs@i+1)^0,f,c
  3686   001986                     l2726:
  3687   001986  500D               	movf	fputs@i^0,w,c
  3688   001988  2409               	addwf	fputs@s^0,w,c
  3689   00198A  6ED9               	movwf	fsr2l,c
  3690   00198C  500E               	movf	(fputs@i+1)^0,w,c
  3691   00198E  200A               	addwfc	(fputs@s+1)^0,w,c
  3692   001990  6EDA               	movwf	fsr2h,c
  3693   001992  50DF               	movf	indf2,w,c
  3694   001994  6E0C               	movwf	fputs@c^0,c
  3695   001996  500C               	movf	fputs@c^0,w,c
  3696   001998  A4D8               	btfss	status,2,c
  3697   00199A  EFD1  F00C         	goto	u1411
  3698   00199E  EFD3  F00C         	goto	u1410
  3699   0019A2                     u1411:
  3700   0019A2  EFBA  F00C         	goto	l2722
  3701   0019A6                     u1410:
  3702   0019A6  0012               	return		;funcret
  3703   0019A8                     __end_of_fputs:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function _fputc *****************
  3707 ;; Defined at:
  3708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  c               2    0[COMRAM] int 
  3711 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3712 ;;		 -> sprintf@f(12), 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;		None
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2    0[COMRAM] int 
  3717 ;; Registers used:
  3718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3724 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;Total ram usage:        8 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 1
  3731 ;; This function calls:
  3732 ;;		_putch
  3733 ;; This function is called by:
  3734 ;;		_pad
  3735 ;;		_vfpfcnvrt
  3736 ;;		_fputs
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text29
  3741   001352                     __ptext29:
  3742                           	callstack 0
  3743   001352                     _fputc:
  3744                           	callstack 26
  3745   001352  5003               	movf	fputc@fp^0,w,c
  3746   001354  B4D8               	btfsc	status,2,c
  3747   001356  EFAF  F009         	goto	u1371
  3748   00135A  EFB1  F009         	goto	u1370
  3749   00135E                     u1371:
  3750   00135E  EFB9  F009         	goto	l2710
  3751   001362                     u1370:
  3752   001362  5003               	movf	fputc@fp^0,w,c
  3753   001364  A4D8               	btfss	status,2,c
  3754   001366  EFB7  F009         	goto	u1381
  3755   00136A  EFB9  F009         	goto	u1380
  3756   00136E                     u1381:
  3757   00136E  EFBE  F009         	goto	l2712
  3758   001372                     u1380:
  3759   001372                     l2710:
  3760   001372  5001               	movf	fputc@c^0,w,c
  3761   001374  EC01  F00E         	call	_putch
  3762   001378  EF05  F00A         	goto	l1161
  3763   00137C                     l2712:
  3764   00137C  5003               	movf	fputc@fp^0,w,c
  3765   00137E  6ED9               	movwf	fsr2l,c
  3766   001380  6ADA               	clrf	fsr2h,c
  3767   001382  0E0A               	movlw	10
  3768   001384  26D9               	addwf	fsr2l,f,c
  3769   001386  50DE               	movf	postinc2,w,c
  3770   001388  10DE               	iorwf	postinc2,w,c
  3771   00138A  B4D8               	btfsc	status,2,c
  3772   00138C  EFCA  F009         	goto	u1391
  3773   001390  EFCC  F009         	goto	u1390
  3774   001394                     u1391:
  3775   001394  EFE5  F009         	goto	l2716
  3776   001398                     u1390:
  3777   001398  5003               	movf	fputc@fp^0,w,c
  3778   00139A  6ED9               	movwf	fsr2l,c
  3779   00139C  6ADA               	clrf	fsr2h,c
  3780   00139E  0E0A               	movlw	10
  3781   0013A0  26D9               	addwf	fsr2l,f,c
  3782   0013A2  5003               	movf	fputc@fp^0,w,c
  3783   0013A4  6EE1               	movwf	fsr1l,c
  3784   0013A6  6AE2               	clrf	fsr1h,c
  3785   0013A8  0E03               	movlw	3
  3786   0013AA  26E1               	addwf	fsr1l,f,c
  3787   0013AC  50DE               	movf	postinc2,w,c
  3788   0013AE  5CE6               	subwf	postinc1,w,c
  3789   0013B0  50E6               	movf	postinc1,w,c
  3790   0013B2  0A80               	xorlw	128
  3791   0013B4  6E08               	movwf	(??_fputc+4)^0,c
  3792   0013B6  50DE               	movf	postinc2,w,c
  3793   0013B8  0A80               	xorlw	128
  3794   0013BA  5808               	subwfb	(??_fputc+4)^0,w,c
  3795   0013BC  B0D8               	btfsc	status,0,c
  3796   0013BE  EFE3  F009         	goto	u1401
  3797   0013C2  EFE5  F009         	goto	u1400
  3798   0013C6                     u1401:
  3799   0013C6  EF05  F00A         	goto	l1161
  3800   0013CA                     u1400:
  3801   0013CA                     l2716:
  3802   0013CA  5003               	movf	fputc@fp^0,w,c
  3803   0013CC  6ED9               	movwf	fsr2l,c
  3804   0013CE  6ADA               	clrf	fsr2h,c
  3805   0013D0  0E03               	movlw	3
  3806   0013D2  26D9               	addwf	fsr2l,f,c
  3807   0013D4  CFDE F004          	movff	postinc2,??_fputc
  3808   0013D8  CFDD F005          	movff	postdec2,??_fputc+1
  3809   0013DC  5003               	movf	fputc@fp^0,w,c
  3810   0013DE  6ED9               	movwf	fsr2l,c
  3811   0013E0  6ADA               	clrf	fsr2h,c
  3812   0013E2  CFDE F006          	movff	postinc2,??_fputc+2
  3813   0013E6  CFDD F007          	movff	postdec2,??_fputc+3
  3814   0013EA  5004               	movf	??_fputc^0,w,c
  3815   0013EC  2406               	addwf	(??_fputc+2)^0,w,c
  3816   0013EE  6ED9               	movwf	fsr2l,c
  3817   0013F0  5005               	movf	(??_fputc+1)^0,w,c
  3818   0013F2  2007               	addwfc	(??_fputc+3)^0,w,c
  3819   0013F4  6EDA               	movwf	fsr2h,c
  3820   0013F6  C001  FFDF         	movff	fputc@c,indf2
  3821   0013FA  5003               	movf	fputc@fp^0,w,c
  3822   0013FC  6ED9               	movwf	fsr2l,c
  3823   0013FE  6ADA               	clrf	fsr2h,c
  3824   001400  0E03               	movlw	3
  3825   001402  26D9               	addwf	fsr2l,f,c
  3826   001404  2ADE               	incf	postinc2,f,c
  3827   001406  0E00               	movlw	0
  3828   001408  22DD               	addwfc	postdec2,f,c
  3829   00140A                     l1161:
  3830   00140A  0012               	return		;funcret
  3831   00140C                     __end_of_fputc:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _putch *****************
  3835 ;; Defined at:
  3836 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  c               1    wreg     unsigned char 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  c               1    0[COMRAM] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_fputc
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text30
  3864   001C02                     __ptext30:
  3865                           	callstack 0
  3866   001C02                     _putch:
  3867                           	callstack 26
  3868   001C02  0012               	return		;funcret
  3869   001C04                     __end_of_putch:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _abs *****************
  3873 ;; Defined at:
  3874 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  a               2    6[COMRAM] int 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  2    6[COMRAM] int 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, status,0
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;Total ram usage:        4 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_dtoa
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text31
  3902   001A8C                     __ptext31:
  3903                           	callstack 0
  3904   001A8C                     _abs:
  3905                           	callstack 26
  3906   001A8C  BE08               	btfsc	(abs@a+1)^0,7,c
  3907   001A8E  EF4B  F00D         	goto	u1581
  3908   001A92  EF4D  F00D         	goto	u1580
  3909   001A96                     u1581:
  3910   001A96  EF53  F00D         	goto	l1146
  3911   001A9A                     u1580:
  3912   001A9A  C007  F007         	movff	abs@a,?_abs
  3913   001A9E  C008  F008         	movff	abs@a+1,?_abs+1
  3914   001AA2  EF5F  F00D         	goto	l1149
  3915   001AA6                     l1146:
  3916   001AA6  C007  F009         	movff	abs@a,??_abs
  3917   001AAA  C008  F00A         	movff	abs@a+1,??_abs+1
  3918   001AAE  1E09               	comf	??_abs^0,f,c
  3919   001AB0  1E0A               	comf	(??_abs+1)^0,f,c
  3920   001AB2  4A09               	infsnz	??_abs^0,f,c
  3921   001AB4  2A0A               	incf	(??_abs+1)^0,f,c
  3922   001AB6  C009  F007         	movff	??_abs,?_abs
  3923   001ABA  C00A  F008         	movff	??_abs+1,?_abs+1
  3924   001ABE                     l1149:
  3925   001ABE  0012               	return		;funcret
  3926   001AC0                     __end_of_abs:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function ___awmod *****************
  3930 ;; Defined at:
  3931 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  dividend        2    0[COMRAM] int 
  3934 ;;  divisor         2    2[COMRAM] int 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  sign            1    5[COMRAM] unsigned char 
  3937 ;;  counter         1    4[COMRAM] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  2    0[COMRAM] int 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;Total ram usage:        6 bytes
  3952 ;; Hardware stack levels used: 1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_dtoa
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text32
  3961   00140C                     __ptext32:
  3962                           	callstack 0
  3963   00140C                     ___awmod:
  3964                           	callstack 26
  3965   00140C  0E00               	movlw	0
  3966   00140E  6E06               	movwf	___awmod@sign^0,c
  3967   001410  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3968   001412  EF0F  F00A         	goto	u1480
  3969   001416  EF0D  F00A         	goto	u1481
  3970   00141A                     u1481:
  3971   00141A  EF15  F00A         	goto	l2786
  3972   00141E                     u1480:
  3973   00141E  6C01               	negf	___awmod@dividend^0,c
  3974   001420  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3975   001422  B0D8               	btfsc	status,0,c
  3976   001424  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3977   001426  0E01               	movlw	1
  3978   001428  6E06               	movwf	___awmod@sign^0,c
  3979   00142A                     l2786:
  3980   00142A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3981   00142C  EF1C  F00A         	goto	u1490
  3982   001430  EF1A  F00A         	goto	u1491
  3983   001434                     u1491:
  3984   001434  EF20  F00A         	goto	l2790
  3985   001438                     u1490:
  3986   001438  6C03               	negf	___awmod@divisor^0,c
  3987   00143A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3988   00143C  B0D8               	btfsc	status,0,c
  3989   00143E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3990   001440                     l2790:
  3991   001440  5003               	movf	___awmod@divisor^0,w,c
  3992   001442  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3993   001444  B4D8               	btfsc	status,2,c
  3994   001446  EF27  F00A         	goto	u1501
  3995   00144A  EF29  F00A         	goto	u1500
  3996   00144E                     u1501:
  3997   00144E  EF4D  F00A         	goto	l2806
  3998   001452                     u1500:
  3999   001452  0E01               	movlw	1
  4000   001454  6E05               	movwf	___awmod@counter^0,c
  4001   001456  EF31  F00A         	goto	l2796
  4002   00145A                     l2794:
  4003   00145A  90D8               	bcf	status,0,c
  4004   00145C  3603               	rlcf	___awmod@divisor^0,f,c
  4005   00145E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4006   001460  2A05               	incf	___awmod@counter^0,f,c
  4007   001462                     l2796:
  4008   001462  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4009   001464  EF36  F00A         	goto	u1511
  4010   001468  EF38  F00A         	goto	u1510
  4011   00146C                     u1511:
  4012   00146C  EF2D  F00A         	goto	l2794
  4013   001470                     u1510:
  4014   001470                     l2798:
  4015   001470  5003               	movf	___awmod@divisor^0,w,c
  4016   001472  5C01               	subwf	___awmod@dividend^0,w,c
  4017   001474  5004               	movf	(___awmod@divisor+1)^0,w,c
  4018   001476  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4019   001478  A0D8               	btfss	status,0,c
  4020   00147A  EF41  F00A         	goto	u1521
  4021   00147E  EF43  F00A         	goto	u1520
  4022   001482                     u1521:
  4023   001482  EF47  F00A         	goto	l2802
  4024   001486                     u1520:
  4025   001486  5003               	movf	___awmod@divisor^0,w,c
  4026   001488  5E01               	subwf	___awmod@dividend^0,f,c
  4027   00148A  5004               	movf	(___awmod@divisor+1)^0,w,c
  4028   00148C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4029   00148E                     l2802:
  4030   00148E  90D8               	bcf	status,0,c
  4031   001490  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4032   001492  3203               	rrcf	___awmod@divisor^0,f,c
  4033   001494  2E05               	decfsz	___awmod@counter^0,f,c
  4034   001496  EF38  F00A         	goto	l2798
  4035   00149A                     l2806:
  4036   00149A  5006               	movf	___awmod@sign^0,w,c
  4037   00149C  B4D8               	btfsc	status,2,c
  4038   00149E  EF53  F00A         	goto	u1531
  4039   0014A2  EF55  F00A         	goto	u1530
  4040   0014A6                     u1531:
  4041   0014A6  EF59  F00A         	goto	l2810
  4042   0014AA                     u1530:
  4043   0014AA  6C01               	negf	___awmod@dividend^0,c
  4044   0014AC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4045   0014AE  B0D8               	btfsc	status,0,c
  4046   0014B0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4047   0014B2                     l2810:
  4048   0014B2  C001  F001         	movff	___awmod@dividend,?___awmod
  4049   0014B6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4050   0014BA  0012               	return		;funcret
  4051   0014BC                     __end_of___awmod:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function ___awdiv *****************
  4055 ;; Defined at:
  4056 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  dividend        2    0[COMRAM] int 
  4059 ;;  divisor         2    2[COMRAM] int 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  quotient        2    6[COMRAM] int 
  4062 ;;  sign            1    5[COMRAM] unsigned char 
  4063 ;;  counter         1    4[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2    0[COMRAM] int 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;Total ram usage:        8 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_dtoa
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text33
  4087   00128E                     __ptext33:
  4088                           	callstack 0
  4089   00128E                     ___awdiv:
  4090                           	callstack 26
  4091   00128E  0E00               	movlw	0
  4092   001290  6E06               	movwf	___awdiv@sign^0,c
  4093   001292  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4094   001294  EF50  F009         	goto	u1420
  4095   001298  EF4E  F009         	goto	u1421
  4096   00129C                     u1421:
  4097   00129C  EF56  F009         	goto	l2742
  4098   0012A0                     u1420:
  4099   0012A0  6C03               	negf	___awdiv@divisor^0,c
  4100   0012A2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4101   0012A4  B0D8               	btfsc	status,0,c
  4102   0012A6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4103   0012A8  0E01               	movlw	1
  4104   0012AA  6E06               	movwf	___awdiv@sign^0,c
  4105   0012AC                     l2742:
  4106   0012AC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4107   0012AE  EF5D  F009         	goto	u1430
  4108   0012B2  EF5B  F009         	goto	u1431
  4109   0012B6                     u1431:
  4110   0012B6  EF63  F009         	goto	l2748
  4111   0012BA                     u1430:
  4112   0012BA  6C01               	negf	___awdiv@dividend^0,c
  4113   0012BC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4114   0012BE  B0D8               	btfsc	status,0,c
  4115   0012C0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4116   0012C2  0E01               	movlw	1
  4117   0012C4  1A06               	xorwf	___awdiv@sign^0,f,c
  4118   0012C6                     l2748:
  4119   0012C6  0E00               	movlw	0
  4120   0012C8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4121   0012CA  0E00               	movlw	0
  4122   0012CC  6E07               	movwf	___awdiv@quotient^0,c
  4123   0012CE  5003               	movf	___awdiv@divisor^0,w,c
  4124   0012D0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4125   0012D2  B4D8               	btfsc	status,2,c
  4126   0012D4  EF6E  F009         	goto	u1441
  4127   0012D8  EF70  F009         	goto	u1440
  4128   0012DC                     u1441:
  4129   0012DC  EF98  F009         	goto	l2770
  4130   0012E0                     u1440:
  4131   0012E0  0E01               	movlw	1
  4132   0012E2  6E05               	movwf	___awdiv@counter^0,c
  4133   0012E4  EF78  F009         	goto	l2756
  4134   0012E8                     l2754:
  4135   0012E8  90D8               	bcf	status,0,c
  4136   0012EA  3603               	rlcf	___awdiv@divisor^0,f,c
  4137   0012EC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4138   0012EE  2A05               	incf	___awdiv@counter^0,f,c
  4139   0012F0                     l2756:
  4140   0012F0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4141   0012F2  EF7D  F009         	goto	u1451
  4142   0012F6  EF7F  F009         	goto	u1450
  4143   0012FA                     u1451:
  4144   0012FA  EF74  F009         	goto	l2754
  4145   0012FE                     u1450:
  4146   0012FE                     l2758:
  4147   0012FE  90D8               	bcf	status,0,c
  4148   001300  3607               	rlcf	___awdiv@quotient^0,f,c
  4149   001302  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4150   001304  5003               	movf	___awdiv@divisor^0,w,c
  4151   001306  5C01               	subwf	___awdiv@dividend^0,w,c
  4152   001308  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4153   00130A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4154   00130C  A0D8               	btfss	status,0,c
  4155   00130E  EF8B  F009         	goto	u1461
  4156   001312  EF8D  F009         	goto	u1460
  4157   001316                     u1461:
  4158   001316  EF92  F009         	goto	l2766
  4159   00131A                     u1460:
  4160   00131A  5003               	movf	___awdiv@divisor^0,w,c
  4161   00131C  5E01               	subwf	___awdiv@dividend^0,f,c
  4162   00131E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4163   001320  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4164   001322  8007               	bsf	___awdiv@quotient^0,0,c
  4165   001324                     l2766:
  4166   001324  90D8               	bcf	status,0,c
  4167   001326  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4168   001328  3203               	rrcf	___awdiv@divisor^0,f,c
  4169   00132A  2E05               	decfsz	___awdiv@counter^0,f,c
  4170   00132C  EF7F  F009         	goto	l2758
  4171   001330                     l2770:
  4172   001330  5006               	movf	___awdiv@sign^0,w,c
  4173   001332  B4D8               	btfsc	status,2,c
  4174   001334  EF9E  F009         	goto	u1471
  4175   001338  EFA0  F009         	goto	u1470
  4176   00133C                     u1471:
  4177   00133C  EFA4  F009         	goto	l2774
  4178   001340                     u1470:
  4179   001340  6C07               	negf	___awdiv@quotient^0,c
  4180   001342  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4181   001344  B0D8               	btfsc	status,0,c
  4182   001346  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4183   001348                     l2774:
  4184   001348  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4185   00134C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4186   001350  0012               	return		;funcret
  4187   001352                     __end_of___awdiv:
  4188                           	callstack 0
  4189                           
  4190 ;; *************** function ___lwdiv *****************
  4191 ;; Defined at:
  4192 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  dividend        2    6[COMRAM] unsigned int 
  4195 ;;  divisor         2    8[COMRAM] unsigned int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  quotient        2   11[COMRAM] unsigned int 
  4198 ;;  counter         1   10[COMRAM] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    6[COMRAM] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;Total ram usage:        7 bytes
  4213 ;; Hardware stack levels used: 1
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_ADC2String
  4218 ;;		_setMotorPWM
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text34
  4223   001730                     __ptext34:
  4224                           	callstack 0
  4225   001730                     ___lwdiv:
  4226                           	callstack 29
  4227   001730  0E00               	movlw	0
  4228   001732  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  4229   001734  0E00               	movlw	0
  4230   001736  6E0C               	movwf	___lwdiv@quotient^0,c
  4231   001738  5009               	movf	___lwdiv@divisor^0,w,c
  4232   00173A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4233   00173C  B4D8               	btfsc	status,2,c
  4234   00173E  EFA3  F00B         	goto	u1891
  4235   001742  EFA5  F00B         	goto	u1890
  4236   001746                     u1891:
  4237   001746  EFCD  F00B         	goto	l885
  4238   00174A                     u1890:
  4239   00174A  0E01               	movlw	1
  4240   00174C  6E0B               	movwf	___lwdiv@counter^0,c
  4241   00174E  EFAD  F00B         	goto	l3098
  4242   001752                     l3096:
  4243   001752  90D8               	bcf	status,0,c
  4244   001754  3609               	rlcf	___lwdiv@divisor^0,f,c
  4245   001756  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4246   001758  2A0B               	incf	___lwdiv@counter^0,f,c
  4247   00175A                     l3098:
  4248   00175A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  4249   00175C  EFB2  F00B         	goto	u1901
  4250   001760  EFB4  F00B         	goto	u1900
  4251   001764                     u1901:
  4252   001764  EFA9  F00B         	goto	l3096
  4253   001768                     u1900:
  4254   001768                     l3100:
  4255   001768  90D8               	bcf	status,0,c
  4256   00176A  360C               	rlcf	___lwdiv@quotient^0,f,c
  4257   00176C  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4258   00176E  5009               	movf	___lwdiv@divisor^0,w,c
  4259   001770  5C07               	subwf	___lwdiv@dividend^0,w,c
  4260   001772  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4261   001774  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4262   001776  A0D8               	btfss	status,0,c
  4263   001778  EFC0  F00B         	goto	u1911
  4264   00177C  EFC2  F00B         	goto	u1910
  4265   001780                     u1911:
  4266   001780  EFC7  F00B         	goto	l3108
  4267   001784                     u1910:
  4268   001784  5009               	movf	___lwdiv@divisor^0,w,c
  4269   001786  5E07               	subwf	___lwdiv@dividend^0,f,c
  4270   001788  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  4271   00178A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4272   00178C  800C               	bsf	___lwdiv@quotient^0,0,c
  4273   00178E                     l3108:
  4274   00178E  90D8               	bcf	status,0,c
  4275   001790  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4276   001792  3209               	rrcf	___lwdiv@divisor^0,f,c
  4277   001794  2E0B               	decfsz	___lwdiv@counter^0,f,c
  4278   001796  EFB4  F00B         	goto	l3100
  4279   00179A                     l885:
  4280   00179A  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  4281   00179E  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4282   0017A2  0012               	return		;funcret
  4283   0017A4                     __end_of___lwdiv:
  4284                           	callstack 0
  4285                           
  4286                           	psect	rparam
  4287   000000                     
  4288                           	psect	config
  4289                           
  4290                           ;Config register CONFIG1L @ 0x300000
  4291                           ;	External Oscillator mode Selection bits
  4292                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4293                           ;	Power-up default value for COSC bits
  4294                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4295   300000                     	org	3145728
  4296   300000  AA                 	db	170
  4297                           
  4298                           ;Config register CONFIG1H @ 0x300001
  4299                           ;	unspecified, using default values
  4300                           ;	Clock Out Enable bit
  4301                           ;	CLKOUTEN = 0x1, unprogrammed default
  4302                           ;	Clock Switch Enable bit
  4303                           ;	CSWEN = 0x1, unprogrammed default
  4304                           ;	Fail-Safe Clock Monitor Enable bit
  4305                           ;	FCMEN = 0x1, unprogrammed default
  4306   300001                     	org	3145729
  4307   300001  FF                 	db	255
  4308                           
  4309                           ;Config register CONFIG3L @ 0x300004
  4310                           ;	WDT Period Select bits
  4311                           ;	WDTCPS = 0x1F, unprogrammed default
  4312                           ;	WDT operating mode
  4313                           ;	WDTE = OFF, WDT Disabled
  4314   300004                     	org	3145732
  4315   300004  9F                 	db	159
  4316                           
  4317                           ;Config register CONFIG3H @ 0x300005
  4318                           ;	unspecified, using default values
  4319                           ;	WDT Window Select bits
  4320                           ;	WDTCWS = 0x7, unprogrammed default
  4321                           ;	WDT input clock selector
  4322                           ;	WDTCCS = 0x7, unprogrammed default
  4323   300005                     	org	3145733
  4324   300005  FF                 	db	255
  4325                           tosu	equ	0xFFF
  4326                           tosh	equ	0xFFE
  4327                           tosl	equ	0xFFD
  4328                           stkptr	equ	0xFFC
  4329                           pclatu	equ	0xFFB
  4330                           pclath	equ	0xFFA
  4331                           pcl	equ	0xFF9
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           indf0	equ	0xFEF
  4339                           postinc0	equ	0xFEE
  4340                           postdec0	equ	0xFED
  4341                           preinc0	equ	0xFEC
  4342                           plusw0	equ	0xFEB
  4343                           fsr0h	equ	0xFEA
  4344                           fsr0l	equ	0xFE9
  4345                           wreg	equ	0xFE8
  4346                           indf1	equ	0xFE7
  4347                           postinc1	equ	0xFE6
  4348                           postdec1	equ	0xFE5
  4349                           preinc1	equ	0xFE4
  4350                           plusw1	equ	0xFE3
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           bsr	equ	0xFE0
  4354                           indf2	equ	0xFDF
  4355                           postinc2	equ	0xFDE
  4356                           postdec2	equ	0xFDD
  4357                           preinc2	equ	0xFDC
  4358                           plusw2	equ	0xFDB
  4359                           fsr2h	equ	0xFDA
  4360                           fsr2l	equ	0xFD9
  4361                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        1
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      94
    BANK0           160    150     159
    BANK1           256    102     245
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(1) Largest target is 50
		 -> main@buf(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1983$buffer	PTR unsigned char  size(2) Largest target is 0

    S1983$source	PTR const unsigned char  size(2) Largest target is 0

    S433DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    S433DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 3583
		 -> main@blue_char(BANK0[50]), main@buf(BANK0[50]), main@clear_char(BANK1[50]), main@green_char(BANK1[50]), 
		 -> main@red_char(BANK0[50]), RAM(DATA[3583]), sendAllReadings@buffer(COMRAM[10]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK0[50]), main@buf(BANK0[50]), main@clear_char(BANK1[50]), main@green_char(BANK1[50]), 
		 -> main@red_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhll[1]), CCPR4H(BITBIGSFRlhlhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhll[1]), CCPR3H(BITBIGSFRlhlhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_1(CODE[10]), STR_2(CODE[11]), STR_3(CODE[12]), STR_4(CODE[14]), 
		 -> STR_5(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               262   262      0   25003
                                             77 COMRAM     8     8      0
                                              0 BANK0    150   150      0
                                              0 BANK1    102   102      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                    _initDCmotorsPWM
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2    1086
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      68
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                           9     6      3   12224
                                             68 COMRAM     9     6      3
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    9819
                                             48 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    8607
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    8119
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2    1452
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1012
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     841
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _ADC_getval
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      F5       7       95.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     96      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5E       1       98.9%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRlhlhll     37      0       0      44        0.0%
BITBIGSFRlhlhh      31      0       0      42        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      59        0.0%
BITBIGSFRlhlll      20      0       0      47        0.0%
BITBIGSFRlllhhh     1E      0       0      49        0.0%
BITBIGSFRhll        1E      0       0      36        0.0%
BITBIGSFRlhhhhl     16      0       0      39        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRlllhll      F      0       0      57        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllh         C      0       0      48        0.0%
BITBIGSFRlllhll      9      0       0      56        0.0%
BITBIGSFRlhlhll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      58        0.0%
BITBIGSFRlllhlh      6      0       0      54        0.0%
BITBIGSFRlhhl        6      0       0      41        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRlhhhhl      3      0       0      37        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRlhhhl       3      0       0      40        0.0%
BITBIGSFRlhlhlh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRlhhhhl      1      0       0      38        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlhllh       1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F2      60        0.0%
DATA                 0      0     1F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 13:37:06 2024

               _color_read_Red 17A4                _color_read_Blue 1894                             l20 1AD0  
                           l21 1AEE                             l15 1BBE                             l40 1A8A  
                           l18 1AC2                             l43 1B86                             l52 18E2  
                           l46 17F2                             l55 1892                             l49 1842  
                           l82 1B18                             l91 1C00                             l85 1B1A  
                           l94 1BEC                             l88 1B40                             l97 1BF6  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Clear 1844  
             _color_read_Green 17F4                            l100 1BE2                            l103 1924  
                          l216 1BA4                            l225 1BC2                            l234 1A56  
                          l331 172E                            l228 1BD6                            l276 160C  
                          l625 1350                            l394 1B66                            l638 14BA  
                          l892 17A2                            l885 179A                            _abs 1A8C  
                          _pad 160E                   ___awmod@sign 0006                            wreg 0FE8  
                         l1100 1028                           l1113 113E                           l1121 1568  
                         ?_abs 0007                           l1117 1560                           l1142 1966  
                         l1136 0FC8                           l1072 1A1E                           l3000 1AF0  
                         l1161 140A                           l1146 1AA6                           l3010 1B06  
                         l3002 1AFA                           l3100 1768                           l1172 1C02  
                         l1092 1642                           l3004 1B00                           l3012 1B6A  
                         l3020 18EA                           l1149 1ABE                           l3110 1794  
                         l3102 176E                           l3006 1B02                           l3022 18F2  
                         l3014 1BE4                           l1095 1680                           l3104 1784  
                         l3040 1A10                           l3032 19E4                           l3200 156A  
                         l3120 1BBC                           l3112 1BA6                           l3008 1B04  
                         l3024 18FA                           l3016 1BE8                           l1169 19A6  
                         l1097 169E                           l3106 178C                           l3034 19F0  
                         l3202 1586                           l3122 1AC0                           l3114 1BB0  
                         l3130 1A58                           l3026 1920                           l3018 18E6  
                         l3210 1A24                           l3108 178E                           l3036 19F8  
                         l3204 15D6                           l3124 1AD6                           l3116 1BB8  
                         l3132 1A5C                           l3028 1922                           l3140 17A4  
                         l3044 1BC2                           l3212 1A32                           l3300 11A4  
                         l3038 1A00                           l3206 15F4                           l3126 1AE6  
                         l3118 1BBA                           l3134 1A66                           l3142 17EA  
                         l3046 1BD2                           l3214 1A36                           l3310 11CC  
                         l3302 11A6                           l3136 1A76                           l3152 1894  
                         l3160 188A                           l3216 1A3E                           l3208 1A20  
                         l3320 1220                           l3312 11D8                           l3304 11A8  
                         l3090 1730                           l3138 1A80                           l3154 18DA  
                         l3146 17F4                           l3170 1B9E                           l3330 126E  
                         l3322 1238                           l3314 11E4                           l3306 11B4  
                         l3092 1738                           l3148 183A                           l3180 16D6  
                         l3172 1BA0                           l3164 1B88                           l3332 127A  
                         l3324 1250                           l3316 11F4                           l3308 11C0  
                         l3094 174A                           l2710 1372                           l3430 0ECC  
                         l3158 1844                           l3190 1714                           l3182 16DA  
                         l3174 1BA2                           l3166 1B92                           l3326 125A  
                         l3318 120A                           l3270 1140                           l3096 1752  
                         l2800 1486                           l2712 137C                           l2720 1968  
                         l3192 1716                           l3184 16FE                           l3176 16A0  
                         l3168 1B94                           l3328 1264                           l3280 1158  
                         l3272 1144                           l3098 175A                           l2810 14B2  
                         l2802 148E                           l2714 1398                           l2706 1352  
                         l2722 1974                           l2730 1B5E                           l3194 1720  
                         l3186 1708                           l3178 16B0                           l3290 1176  
                         l3282 115E                           l3274 1148                           l2740 12A8  
                         l2804 1494                           l2716 13CA                           l2708 1362  
                         l2724 1982                           l2820 163A                           l2900 1B2A  
                         l3196 1722                           l3188 170A                           l3292 117E  
                         l3284 1162                           l3276 114C                           l2750 12CE  
                         l2742 12AC                           l2734 128E                           l2806 149A  
                         l2830 1A8C                           l2726 1986                           l2822 164E  
                         l2814 160E                           l2910 0E86                           l2902 0E46  
                         l3198 172C                           l3294 1184                           l3286 1166  
                         l3278 114C                           l2760 1304                           l2752 12E0  
                         l2744 12BA                           l2736 1292                           l2808 14AA  
                         l2832 1A9A                           l2824 165E                           l2816 161C  
                         l2840 0FEA                           l2728 1B42                           l2920 0EA4  
                         l2912 0E8E                           l2904 0E6C                           l3296 1188  
                         l3288 116E                           l2762 131A                           l2754 12E8  
                         l2770 1330                           l2746 12C2                           l2738 12A0  
                         l2826 1662                           l2818 162C                           l2850 1024  
                         l2842 0FFA                           l2834 0FCA                           l2930 0F16  
                         l2914 0E90                           l2922 0EDA                           l2906 0E74  
                         l3298 118C                           l2772 1340                           l2764 1322  
                         l2756 12F0                           l2748 12C6                           l2780 1410  
                         l2828 168E                           l2860 1076                           l2852 1030  
                         l2844 1000                           l2836 0FCE                           l2940 0F82  
                         l2932 0F20                           l2924 0EEA                           l2916 0E9C  
                         l2908 0E80                           l2774 1348                           l2766 1324  
                         l2758 12FE                           l2790 1440                           l2782 141E  
                         l2870 10D4                           l2862 107C                           l2854 103A  
                         l2846 1010                           l2838 0FE2                           l2934 0F40  
                         l2926 0EFE                           ?_pad 000F                           l2768 132A  
                         l2792 1452                           l2784 1426                           l2880 1122  
                         l2872 10EE                           l2856 1040                           l2864 1098  
                         l2848 101C                           l2944 0F96                           l2936 0F60  
                         l2928 0F0C                           l2794 145A                           l2786 142A  
                         l2778 140C                           l2866 10B2                           l2874 10FC  
                         l2858 1072                           l2890 14F2                           l2938 0F78  
                         l2962 1BF8                           l2970 1BEE                           l2796 1462  
                         l2788 1438                           l2876 110C                           l2868 10C4  
                         l2892 150E                           l2884 14BC                           l2948 0FA2  
                         l2964 1BFC                           l2972 1BF2                           l2798 1470  
                         l2878 1112                           l2894 152E                           l2886 14C4  
                         l2990 1926                           l2966 1BDA                           l2888 14EA  
                         l2896 1536                           l2992 192E                           l2968 1BDE  
                         l2994 193E                           l2898 1B1A                           l2996 195E  
                         STR_1 0E3B                           STR_2 0E30                           STR_3 0E24  
                         STR_4 0E16                           STR_5 0E01                           u2007 15FE  
                         u1400 13CA                           u1401 13C6                           u1410 19A6  
                         u1411 19A2                           u1420 12A0                           u1500 1452  
                         u1421 129C                           u1501 144E                           u1430 12BA  
                         u1510 1470                           u1431 12B6                           u1511 146C  
                         u1440 12E0                           u1520 1486                           u1600 0FE0  
                 _BAUD4CONbits 0EE9                           u1441 12DC                           u1521 1482  
                         u1450 12FE                           u1530 14AA                           u1370 1362  
                         u1610 0FFA                           u1451 12FA                           u1531 14A6  
                         u1371 135E                           u1611 0FF6                           u1460 131A  
                         u1380 1372                           u1540 161C                           u1620 1010  
                         u1700 1560                           u1461 1316                           u1381 136E  
                         u1541 1618                           u1621 100C                           u1701 155C  
                         u1470 1340                           u1390 1398                           u1550 163A  
                         u1630 10B2                           u1710 1B2A                           u1471 133C  
                         u1391 1394                           u1551 1636                           u1631 10AE  
                         u1711 1B26                           u1480 141E                           u1560 1680  
                         u1640 10C4                           u1800 195E                           u1720 1B40  
                         u1481 141A                           u1561 167C                           u1641 10C0  
                         u1801 195A                           u1721 1B3C                           u1490 1438  
                         u1570 168E                           u1650 10D4                           u1730 0E6C  
                         u1810 190E                           _T2PR 0FBC                           u1491 1434  
                         u1571 168A                           u1651 10D0                           u1731 0E68  
                         u1811 1906                           u1900 1768                           u1580 1A9A  
                         u1660 10EE                           u1740 0EEA                           u1901 1764  
                         u1581 1A96                           u1661 10EA                           u1741 0EE6  
                         u1910 1784                           u1670 10FC                           u1590 0FDE  
                         u1750 0F0C                           u1830 1BD2                           u1911 1780  
                         u1671 10F8                           u1591 0FD8                           u1751 0F08  
                         u1831 1BCE                           u1680 110C                           u1760 0F40  
                         u1920 1AD0                           u1681 1108                           u1761 0F3C  
                         u1921 1ACC                           u1690 14EA                           u1770 0F60  
                         u1930 1A56                           u1691 14E6                           u1771 0F5C  
                         u1931 1A52                           u1828 1910                           u1890 174A  
                         u1891 1746                           u1987 1A38                           u1997 1A6C  
                         abs@a 0007                           _dbuf 0166                           _main 1140  
                         _dtoa 0FCA                           _prec 0164                           pad@i 0015  
                         pad@p 0012                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 1BC0         __end_of_color_read_Red 17F4                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0014                          ?_main 0001  
                        ?_dtoa 0017                          _ADPCH 0F5F                __end_of___awdiv 1352  
              __end_of___awmod 14BC                ___awdiv@divisor 0003                __end_of___lwdiv 17A4  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0023                   main@red_char 0092  
      __end_of_sendCharSerial4 1BD8     __end_of_I2C_2_Master_Start 1C02     __end_of_I2C_2_Master_Write 1BE4  
                        _flags 0058            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 1352                          _fputs 1968                          pad@fp 000F  
                        _width 0056                          _putch 1C02                          dtoa@d 0018  
                        dtoa@i 0020                          dtoa@p 001C                          dtoa@s 001F  
                        dtoa@w 001D                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 1A20        __end_of_color_read_Blue 18E4          _I2C_2_Master_RepStart 1BE4  
              ?_color_read_Red 0005                __initialization 19A8                   __end_of_main 128E  
                 __end_of_dtoa 1140                   ??_ADC2String 0048                         ??_main 004E  
                       ??_dtoa 001A                  __activetblptr 0003                  main@blue_char 00C4  
   __end_of_read_prec_or_width 156A                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21                  ADC2String@buf 0045  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RC7PPS 0E69  
                       _RD5PPS 0E6F            ADC2String@frac_part 004A                         _RE4PPS 0E76  
                       _RD6PPS 0E70                         _RG6PPS 0E88                  vfpfcnvrt@done 002B  
     __end_of_color_click_init 1A8C                         _RX4PPS 0E15             __end_of_ADC2String 160E  
                       _TX4REG 0EE4                   ??_ADC_getval 0003                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 0030                         ___wmul 1B42                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___lwdiv 000B           read_prec_or_width@ap 0008  
                       clear_0 19C0                         clear_1 19CC                         clear_2 19D8  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         _motorL 00F6  
                       _motorR 0186                         isa$std 0001                ___awmod@counter 0005  
                       pad@buf 0010                         dtoa@fp 0017                         fputc@c 0001  
                       fputs@c 000C                         fputs@i 000D                   __pdataCOMRAM 005E  
                       fputs@s 0009                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 1968  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0038             __end_of_ADC_getval 1AF0  
                   __accesstop 0060        __end_of__initialization 19DE       __end_of_color_read_Clear 1894  
     __end_of_color_read_Green 1844         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                  __end_of_fputc 140C  
                __end_of_fputs 19A8                  __end_of_putch 1C04                 main@clear_char 01C1  
                   ??_ADC_init 0001                        ??_fputc 0004                        ??_fputs 000C  
                      ??_putch 0001                     __pbssBANK0 00F6                     __pbssBANK1 0100  
            _color_writetoaddr 1B68                   _T2CLKCONbits 0FBF             ?_color_writetoaddr 0003  
                      ?___wmul 0001            ??_color_writetoaddr 0004                 main@green_char 018F  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5              main@battery_level 004E  
                      _SSP2ADD 0ED6                        _SSP2BUF 0ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1B88                      _ADREFbits 0F58  
           _I2C_2_Master_Start 1BF8                     _initUSART4 1B88             _I2C_2_Master_Write 1BD8  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000A  
      sendStringSerial4@string 0002                        ___awdiv 128E                        ___awmod 140C  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 1730            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 002D                   __psmallconst 0E00                        __pcinit 19A8  
                      __ramtop 0E00                        __ptext0 1140                        __ptext1 1A20  
                      __ptext2 1BC0                        __ptext3 1B88                        __ptext4 16A0  
                      __ptext5 17A4                        __ptext6 17F4                        __ptext7 1844  
                      __ptext8 1894                        __ptext9 1BE4                      _T2CONbits 0FBD  
        read_prec_or_width@fmt 0007               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 005D                        main@buf 0060                        _sprintf 19E4  
                      main@red 0050           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 19DE               ADC_getval@tmpval 0003                        fputc@fp 0003  
                      fputs@fp 000B              ?_color_click_init 0001             _read_prec_or_width 14BC  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 0FCA                        postdec2 0FDD  
          ?_read_prec_or_width 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0027                     ??_vfprintf 0030  
              _initDCmotorsPWM 16A0                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
         ??_read_prec_or_width 0009       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  _CCP1CONbits 0FAB              ?_color_read_Clear 0005                   _EUSART4RXbuf 0150  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 1B68                  __pidataCOMRAM 1C04            color_read_Clear@tmp 000A  
          start_initialization 19A8                    __end_of_abs 1AC0                    __end_of_pad 16A0  
                _TxBufWriteCnt 005B            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 1730  
                  vfprintf@fmt 002E             ADC2String@int_part 004C                       ??___wmul 0005  
                  __pbssCOMRAM 0056                  __pcstackBANK0 0060                  __pcstackBANK1 018F  
             ___lwdiv@dividend 0007                      _dtoa$2062 001A                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___lwdiv 0007                   _readingIndex 0059  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1B1A              _I2C_2_Master_Init 1AF0              _I2C_2_Master_Read 18E4  
            _I2C_2_Master_Stop 1BEE                   _RxBufReadCnt 005C                       _ADC_init 1BA6  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000C       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0031              _sendStringSerial4 1A20            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATGbits 0F7F              ADC2String@ADC_val 0046  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                       _PIR4bits 0E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                     _ADC2String 156A  
                    _vfpfcnvrt 0E46                     _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 1B42  
    __end_of_I2C_2_Master_Init 1B1A      __end_of_I2C_2_Master_Read 1926              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 1BF8    I2C_2_Master_Write@data_byte 0002                      main@clear 01F3  
                  _ldrReadings 013C                      main@green 0054              ??_color_read_Blue 0007  
                 _TxBufReadCnt 005A      __end_of_sendStringSerial4 1A58  __end_of_I2C_2_Master_RepStart 1BEE  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   _ADC_getval 1AC0                     vfprintf@ap 002F                       __Lrparam 0000  
                   vfprintf@fp 002D                     ?_vfpfcnvrt 0022                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 005E                     sprintf@fmt 0033  
              ___lwdiv@divisor 0009             __end_of_initUSART4 1BA6                ___lwdiv@counter 000B  
                     __ptext10 18E4                       __ptext11 1A58                       __ptext20 156A  
                     __ptext12 1B68                       __ptext21 19E4                       __ptext13 1BD8  
                     __ptext30 1C02                       __ptext22 1926                       __ptext14 1BEE  
                     __ptext31 1A8C                       __ptext23 0E46                       __ptext15 1BF8  
                     __ptext32 140C                       __ptext24 14BC                       __ptext16 1B1A  
                     __ptext33 128E                       __ptext25 1B42                       __ptext17 1AF0  
                     __ptext34 1730                       __ptext26 0FCA                       __ptext18 1BA6  
                     __ptext27 160E                       __ptext19 1AC0                       __ptext28 1968  
                     __ptext29 1352                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
                     isa$xinst 0000                     _RC4STAbits 0EE7                    ?_ADC2String 0045  
                     _vfprintf 1926                       main@blue 0052                      sprintf@ap 0038  
                  ?_ADC_getval 0001                    ??_vfpfcnvrt 0025               _color_click_init 1A58  
                     sprintf@f 0039                       sprintf@s 0031                     _SSP2DATPPS 0E1D  
                   _SSP2CLKPPS 0E1C                     _TX4STAbits 0EE8                _sendCharSerial4 1BC0  
