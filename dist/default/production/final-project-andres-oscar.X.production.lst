

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 16:19:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 21/07/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataBANK0
    99   003678                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _dataFlag
   103   003678  01                 	db	1
   104   000000                     _TX4REG	set	3812
   105   000000                     _RC4STAbits	set	3815
   106   000000                     _SP4BRGH	set	3814
   107   000000                     _LATFbits	set	3966
   108   000000                     _LATHbits	set	3968
   109   000000                     _TRISFbits	set	3974
   110   000000                     _TRISAbits	set	3969
   111   000000                     _TRISEbits	set	3973
   112   000000                     _TRISGbits	set	3975
   113   000000                     _TRISDbits	set	3972
   114   000000                     _PORTFbits	set	3982
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _LATAbits	set	3961
   123   000000                     _LATEbits	set	3965
   124   000000                     _LATGbits	set	3967
   125   000000                     _LATCbits	set	3963
   126   000000                     _LATDbits	set	3964
   127   000000                     _CCPR2H	set	4006
   128   000000                     _CCPR1H	set	4010
   129   000000                     _RC4REG	set	3811
   130   000000                     _SP4BRGL	set	3813
   131   000000                     _TX4STAbits	set	3816
   132   000000                     _BAUD4CONbits	set	3817
   133   000000                     _SSP2CON2	set	3802
   134   000000                     _CCPR4H	set	3873
   135   000000                     _CCPR3H	set	3877
   136   000000                     _SSP2STAT	set	3800
   137   000000                     _ANSELFbits	set	3764
   138   000000                     _SSP2BUF	set	3797
   139   000000                     _PIE4bits	set	3629
   140   000000                     _PIR4bits	set	3639
   141   000000                     _RC0PPS	set	3682
   142   000000                     _RC7PPS	set	3689
   143   000000                     _RD5PPS	set	3695
   144   000000                     _RE2PPS	set	3700
   145   000000                     _RD6PPS	set	3696
   146   000000                     _CCP1CONbits	set	4011
   147   000000                     _CCPTMRS0bits	set	4013
   148   000000                     _T2PR	set	4028
   149   000000                     _T2CONbits	set	4029
   150   000000                     _CCP2CONbits	set	4007
   151   000000                     _CCP3CONbits	set	3878
   152   000000                     _ADREFbits	set	3928
   153   000000                     _CCP4CONbits	set	3874
   154   000000                     _TRISHbits	set	3976
   155   000000                     _TRISCbits	set	3971
   156   000000                     _ADPCH	set	3935
   157   000000                     _ADRESH	set	3940
   158   000000                     _ADCON0bits	set	3936
   159   000000                     _RE4PPS	set	3702
   160   000000                     _RG6PPS	set	3720
   161   000000                     _T2CLKCONbits	set	4031
   162   000000                     _T2HLTbits	set	4030
   163                           
   164                           	psect	smallconst
   165   000E00                     __psmallconst:
   166                           	callstack 0
   167   000E00  00                 	db	0
   168   000E01                     STR_11:
   169                           
   170                           ; BSR set to: 15
   171   000E01  43                 	db	67	;'C'
   172   000E02  61                 	db	97	;'a'
   173   000E03  6C                 	db	108	;'l'
   174   000E04  69                 	db	105	;'i'
   175   000E05  62                 	db	98	;'b'
   176   000E06  72                 	db	114	;'r'
   177   000E07  61                 	db	97	;'a'
   178   000E08  74                 	db	116	;'t'
   179   000E09  69                 	db	105	;'i'
   180   000E0A  6F                 	db	111	;'o'
   181   000E0B  6E                 	db	110	;'n'
   182   000E0C  20                 	db	32
   183   000E0D  73                 	db	115	;'s'
   184   000E0E  74                 	db	116	;'t'
   185   000E0F  61                 	db	97	;'a'
   186   000E10  74                 	db	116	;'t'
   187   000E11  65                 	db	101	;'e'
   188   000E12  20                 	db	32
   189   000E13  3D                 	db	61	;'='
   190   000E14  20                 	db	32
   191   000E15  61                 	db	97	;'a'
   192   000E16  6D                 	db	109	;'m'
   193   000E17  62                 	db	98	;'b'
   194   000E18  69                 	db	105	;'i'
   195   000E19  65                 	db	101	;'e'
   196   000E1A  6E                 	db	110	;'n'
   197   000E1B  74                 	db	116	;'t'
   198   000E1C  20                 	db	32
   199   000E1D  6C                 	db	108	;'l'
   200   000E1E  69                 	db	105	;'i'
   201   000E1F  67                 	db	103	;'g'
   202   000E20  68                 	db	104	;'h'
   203   000E21  74                 	db	116	;'t'
   204   000E22  00                 	db	0
   205   000E23                     STR_7:
   206                           
   207                           ; BSR set to: 15
   208   000E23  43                 	db	67	;'C'
   209   000E24  61                 	db	97	;'a'
   210   000E25  6C                 	db	108	;'l'
   211   000E26  69                 	db	105	;'i'
   212   000E27  62                 	db	98	;'b'
   213   000E28  72                 	db	114	;'r'
   214   000E29  61                 	db	97	;'a'
   215   000E2A  74                 	db	116	;'t'
   216   000E2B  69                 	db	105	;'i'
   217   000E2C  6F                 	db	111	;'o'
   218   000E2D  6E                 	db	110	;'n'
   219   000E2E  20                 	db	32
   220   000E2F  73                 	db	115	;'s'
   221   000E30  74                 	db	116	;'t'
   222   000E31  61                 	db	97	;'a'
   223   000E32  74                 	db	116	;'t'
   224   000E33  65                 	db	101	;'e'
   225   000E34  20                 	db	32
   226   000E35  3D                 	db	61	;'='
   227   000E36  20                 	db	32
   228   000E37  67                 	db	103	;'g'
   229   000E38  72                 	db	114	;'r'
   230   000E39  65                 	db	101	;'e'
   231   000E3A  65                 	db	101	;'e'
   232   000E3B  6E                 	db	110	;'n'
   233   000E3C  20                 	db	32
   234   000E3D  0A                 	db	10
   235   000E3E  0D                 	db	13
   236   000E3F  00                 	db	0
   237   000E40                     STR_9:
   238                           
   239                           ; BSR set to: 15
   240   000E40  43                 	db	67	;'C'
   241   000E41  61                 	db	97	;'a'
   242   000E42  6C                 	db	108	;'l'
   243   000E43  69                 	db	105	;'i'
   244   000E44  62                 	db	98	;'b'
   245   000E45  72                 	db	114	;'r'
   246   000E46  61                 	db	97	;'a'
   247   000E47  74                 	db	116	;'t'
   248   000E48  69                 	db	105	;'i'
   249   000E49  6F                 	db	111	;'o'
   250   000E4A  6E                 	db	110	;'n'
   251   000E4B  20                 	db	32
   252   000E4C  73                 	db	115	;'s'
   253   000E4D  74                 	db	116	;'t'
   254   000E4E  61                 	db	97	;'a'
   255   000E4F  74                 	db	116	;'t'
   256   000E50  65                 	db	101	;'e'
   257   000E51  3D                 	db	61	;'='
   258   000E52  20                 	db	32
   259   000E53  62                 	db	98	;'b'
   260   000E54  6C                 	db	108	;'l'
   261   000E55  75                 	db	117	;'u'
   262   000E56  65                 	db	101	;'e'
   263   000E57  20                 	db	32
   264   000E58  0A                 	db	10
   265   000E59  0D                 	db	13
   266   000E5A  00                 	db	0
   267   000E5B                     STR_13:
   268                           
   269                           ; BSR set to: 15
   270   000E5B  43                 	db	67	;'C'
   271   000E5C  41                 	db	65	;'A'
   272   000E5D  4C                 	db	76	;'L'
   273   000E5E  49                 	db	73	;'I'
   274   000E5F  42                 	db	66	;'B'
   275   000E60  52                 	db	82	;'R'
   276   000E61  41                 	db	65	;'A'
   277   000E62  54                 	db	84	;'T'
   278   000E63  49                 	db	73	;'I'
   279   000E64  4F                 	db	79	;'O'
   280   000E65  4E                 	db	78	;'N'
   281   000E66  20                 	db	32
   282   000E67  43                 	db	67	;'C'
   283   000E68  4F                 	db	79	;'O'
   284   000E69  4D                 	db	77	;'M'
   285   000E6A  50                 	db	80	;'P'
   286   000E6B  4C                 	db	76	;'L'
   287   000E6C  45                 	db	69	;'E'
   288   000E6D  54                 	db	84	;'T'
   289   000E6E  45                 	db	69	;'E'
   290   000E6F  44                 	db	68	;'D'
   291   000E70  20                 	db	32
   292   000E71  0A                 	db	10
   293   000E72  0D                 	db	13
   294   000E73  00                 	db	0
   295   000E74                     STR_5:
   296                           
   297                           ; BSR set to: 15
   298   000E74  43                 	db	67	;'C'
   299   000E75  61                 	db	97	;'a'
   300   000E76  6C                 	db	108	;'l'
   301   000E77  69                 	db	105	;'i'
   302   000E78  62                 	db	98	;'b'
   303   000E79  72                 	db	114	;'r'
   304   000E7A  61                 	db	97	;'a'
   305   000E7B  74                 	db	116	;'t'
   306   000E7C  69                 	db	105	;'i'
   307   000E7D  6F                 	db	111	;'o'
   308   000E7E  6E                 	db	110	;'n'
   309   000E7F  20                 	db	32
   310   000E80  73                 	db	115	;'s'
   311   000E81  74                 	db	116	;'t'
   312   000E82  61                 	db	97	;'a'
   313   000E83  74                 	db	116	;'t'
   314   000E84  65                 	db	101	;'e'
   315   000E85  20                 	db	32
   316   000E86  3D                 	db	61	;'='
   317   000E87  20                 	db	32
   318   000E88  72                 	db	114	;'r'
   319   000E89  65                 	db	101	;'e'
   320   000E8A  64                 	db	100	;'d'
   321   000E8B  00                 	db	0
   322   000E8C                     
   323                           ; BSR set to: 15
   324   000E8C  56                 	db	86	;'V'
   325   000E8D  6F                 	db	111	;'o'
   326   000E8E  6C                 	db	108	;'l'
   327   000E8F  74                 	db	116	;'t'
   328   000E90  61                 	db	97	;'a'
   329   000E91  67                 	db	103	;'g'
   330   000E92  65                 	db	101	;'e'
   331   000E93  20                 	db	32
   332   000E94  3D                 	db	61	;'='
   333   000E95  20                 	db	32
   334   000E96  25                 	db	37
   335   000E97  64                 	db	100	;'d'
   336   000E98  2E                 	db	46
   337   000E99  25                 	db	37
   338   000E9A  30                 	db	48	;'0'
   339   000E9B  32                 	db	50	;'2'
   340   000E9C  64                 	db	100	;'d'
   341   000E9D  2C                 	db	44
   342   000E9E  20                 	db	32
   343   000E9F  20                 	db	32
   344   000EA0  00                 	db	0
   345   000EA1                     STR_2:
   346                           
   347                           ; BSR set to: 15
   348   000EA1  47                 	db	71	;'G'
   349   000EA2  72                 	db	114	;'r'
   350   000EA3  65                 	db	101	;'e'
   351   000EA4  65                 	db	101	;'e'
   352   000EA5  6E                 	db	110	;'n'
   353   000EA6  5F                 	db	95	;'_'
   354   000EA7  6C                 	db	108	;'l'
   355   000EA8  69                 	db	105	;'i'
   356   000EA9  67                 	db	103	;'g'
   357   000EAA  68                 	db	104	;'h'
   358   000EAB  74                 	db	116	;'t'
   359   000EAC  3D                 	db	61	;'='
   360   000EAD  25                 	db	37
   361   000EAE  64                 	db	100	;'d'
   362   000EAF  2C                 	db	44
   363   000EB0  20                 	db	32
   364   000EB1  0A                 	db	10
   365   000EB2  0D                 	db	13
   366   000EB3  00                 	db	0
   367   000EB4                     STR_1:
   368                           
   369                           ; BSR set to: 15
   370   000EB4  52                 	db	82	;'R'
   371   000EB5  65                 	db	101	;'e'
   372   000EB6  64                 	db	100	;'d'
   373   000EB7  5F                 	db	95	;'_'
   374   000EB8  6C                 	db	108	;'l'
   375   000EB9  69                 	db	105	;'i'
   376   000EBA  67                 	db	103	;'g'
   377   000EBB  68                 	db	104	;'h'
   378   000EBC  74                 	db	116	;'t'
   379   000EBD  3D                 	db	61	;'='
   380   000EBE  25                 	db	37
   381   000EBF  64                 	db	100	;'d'
   382   000EC0  2C                 	db	44
   383   000EC1  20                 	db	32
   384   000EC2  0A                 	db	10
   385   000EC3  0D                 	db	13
   386   000EC4  00                 	db	0
   387   000EC5                     STR_4:
   388                           
   389                           ; BSR set to: 15
   390   000EC5  41                 	db	65	;'A'
   391   000EC6  6C                 	db	108	;'l'
   392   000EC7  6C                 	db	108	;'l'
   393   000EC8  5F                 	db	95	;'_'
   394   000EC9  6C                 	db	108	;'l'
   395   000ECA  69                 	db	105	;'i'
   396   000ECB  67                 	db	103	;'g'
   397   000ECC  68                 	db	104	;'h'
   398   000ECD  74                 	db	116	;'t'
   399   000ECE  73                 	db	115	;'s'
   400   000ECF  3D                 	db	61	;'='
   401   000ED0  25                 	db	37
   402   000ED1  64                 	db	100	;'d'
   403   000ED2  20                 	db	32
   404   000ED3  0A                 	db	10
   405   000ED4  0D                 	db	13
   406   000ED5  00                 	db	0
   407   000ED6                     STR_3:
   408                           
   409                           ; BSR set to: 15
   410   000ED6  42                 	db	66	;'B'
   411   000ED7  6C                 	db	108	;'l'
   412   000ED8  75                 	db	117	;'u'
   413   000ED9  65                 	db	101	;'e'
   414   000EDA  5F                 	db	95	;'_'
   415   000EDB  6C                 	db	108	;'l'
   416   000EDC  69                 	db	105	;'i'
   417   000EDD  67                 	db	103	;'g'
   418   000EDE  68                 	db	104	;'h'
   419   000EDF  74                 	db	116	;'t'
   420   000EE0  3D                 	db	61	;'='
   421   000EE1  25                 	db	37
   422   000EE2  64                 	db	100	;'d'
   423   000EE3  20                 	db	32
   424   000EE4  0A                 	db	10
   425   000EE5  0D                 	db	13
   426   000EE6  00                 	db	0
   427   000EE7                     STR_16:
   428                           
   429                           ; BSR set to: 15
   430   000EE7  68                 	db	104	;'h'
   431   000EE8  75                 	db	117	;'u'
   432   000EE9  65                 	db	101	;'e'
   433   000EEA  3D                 	db	61	;'='
   434   000EEB  25                 	db	37
   435   000EEC  30                 	db	48	;'0'
   436   000EED  33                 	db	51	;'3'
   437   000EEE  64                 	db	100	;'d'
   438   000EEF  2C                 	db	44
   439   000EF0  20                 	db	32
   440   000EF1  20                 	db	32
   441   000EF2  00                 	db	0
   442   000EF3                     STR_6:
   443                           
   444                           ; BSR set to: 15
   445   000EF3  2E                 	db	46
   446   000EF4  00                 	db	0
   447   000EF5  00                 	db	0	; dummy byte at the end
   448   000000                     
   449                           ; #config settings
   450                           
   451                           	psect	cinit
   452   003516                     __pcinit:
   453                           	callstack 0
   454   003516                     start_initialization:
   455                           	callstack 0
   456   003516                     __initialization:
   457                           	callstack 0
   458                           
   459                           ; Initialize objects allocated to BANK0 (1 bytes)
   460                           ; load TBLPTR registers with __pidataBANK0
   461   003516  0E78               	movlw	low __pidataBANK0
   462   003518  6EF6               	movwf	tblptrl,c
   463   00351A  0E36               	movlw	high __pidataBANK0
   464   00351C  6EF7               	movwf	tblptrh,c
   465   00351E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   466   003520  6EF8               	movwf	tblptru,c
   467   003522  0009               	tblrd		*+	;fetch initializer
   468   003524  CFF5 F0F8          	movff	tablat,__pdataBANK0
   469                           
   470                           ; Clear objects allocated to BANK1 (132 bytes)
   471   003528  EE01  F000         	lfsr	0,__pbssBANK1
   472   00352C  0E84               	movlw	132
   473   00352E                     clear_0:
   474   00352E  6AEE               	clrf	postinc0,c
   475   003530  06E8               	decf	wreg,f,c
   476   003532  E1FD               	bnz	clear_0
   477                           
   478                           ; Clear objects allocated to BANK0 (44 bytes)
   479   003534  EE00  F0CC         	lfsr	0,__pbssBANK0
   480   003538  0E2C               	movlw	44
   481   00353A                     clear_1:
   482   00353A  6AEE               	clrf	postinc0,c
   483   00353C  06E8               	decf	wreg,f,c
   484   00353E  E1FD               	bnz	clear_1
   485   003540                     end_of_initialization:
   486                           	callstack 0
   487   003540                     __end_of__initialization:
   488                           	callstack 0
   489   003540  0100               	movlb	0
   490   003542  EF52  F016         	goto	_main	;jump to C main() function
   491                           
   492                           	psect	bssBANK0
   493   0000CC                     __pbssBANK0:
   494                           	callstack 0
   495   0000CC                     _width:
   496                           	callstack 0
   497   0000CC                     	ds	2
   498   0000CE                     _prec:
   499                           	callstack 0
   500   0000CE                     	ds	2
   501   0000D0                     _flags:
   502                           	callstack 0
   503   0000D0                     	ds	1
   504   0000D1                     _readingIndex:
   505                           	callstack 0
   506   0000D1                     	ds	1
   507   0000D2                     _TxBufReadCnt:
   508                           	callstack 0
   509   0000D2                     	ds	1
   510   0000D3                     _TxBufWriteCnt:
   511                           	callstack 0
   512   0000D3                     	ds	1
   513   0000D4                     _RxBufReadCnt:
   514                           	callstack 0
   515   0000D4                     	ds	1
   516   0000D5                     _RxBufWriteCnt:
   517                           	callstack 0
   518   0000D5                     	ds	1
   519   0000D6                     _motorR:
   520                           	callstack 0
   521   0000D6                     	ds	9
   522   0000DF                     _motorL:
   523                           	callstack 0
   524   0000DF                     	ds	9
   525   0000E8                     _colorCurrent:
   526                           	callstack 0
   527   0000E8                     	ds	8
   528   0000F0                     _colorCalibration:
   529                           	callstack 0
   530   0000F0                     	ds	8
   531                           
   532                           	psect	dataBANK0
   533   0000F8                     __pdataBANK0:
   534                           	callstack 0
   535   0000F8                     _dataFlag:
   536                           	callstack 0
   537   0000F8                     	ds	1
   538                           
   539                           	psect	bssBANK1
   540   000100                     __pbssBANK1:
   541                           	callstack 0
   542   000100                     _EUSART4TXbuf:
   543                           	callstack 0
   544   000100                     	ds	60
   545   00013C                     _ldrReadings:
   546                           	callstack 0
   547   00013C                     	ds	20
   548   000150                     _EUSART4RXbuf:
   549                           	callstack 0
   550   000150                     	ds	20
   551   000164                     _dbuf:
   552                           	callstack 0
   553   000164                     	ds	32
   554                           
   555                           	psect	cstackBANK0
   556   000060                     __pcstackBANK0:
   557                           	callstack 0
   558   000060                     send2USART@hue_char:
   559                           	callstack 0
   560                           
   561                           ; 50 bytes @ 0x0
   562   000060                     	ds	50
   563   000092                     ??_test:
   564                           
   565                           ; 1 bytes @ 0x32
   566   000092                     	ds	2
   567   000094                     test@led_state:
   568                           	callstack 0
   569                           
   570                           ; 50 bytes @ 0x34
   571   000094                     	ds	50
   572   0000C6                     test@hue:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x66
   576   0000C6                     	ds	2
   577   0000C8                     test@combo:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x68
   581   0000C8                     	ds	2
   582   0000CA                     ??_main:
   583                           
   584                           ; 1 bytes @ 0x6A
   585   0000CA                     	ds	2
   586                           
   587                           	psect	cstackCOMRAM
   588   000001                     __pcstackCOMRAM:
   589                           	callstack 0
   590   000001                     ??_I2C_2_Master_Idle:
   591   000001                     ?___wmul:
   592                           	callstack 0
   593   000001                     ?___awdiv:
   594                           	callstack 0
   595   000001                     ?___awmod:
   596                           	callstack 0
   597   000001                     ?___lwdiv:
   598                           	callstack 0
   599   000001                     ?___fladd:
   600                           	callstack 0
   601   000001                     ?___flmul:
   602                           	callstack 0
   603   000001                     ?___fltol:
   604                           	callstack 0
   605   000001                     sendCharSerial4@charToSend:
   606                           	callstack 0
   607   000001                     initDCmotorsPWM@PWMperiod:
   608                           	callstack 0
   609   000001                     ___wmul@multiplier:
   610                           	callstack 0
   611   000001                     ___awdiv@dividend:
   612                           	callstack 0
   613   000001                     ___awmod@dividend:
   614                           	callstack 0
   615   000001                     ___lwdiv@dividend:
   616                           	callstack 0
   617   000001                     fputc@c:
   618                           	callstack 0
   619   000001                     ___fleq@ff1:
   620                           	callstack 0
   621   000001                     ___flge@ff1:
   622                           	callstack 0
   623   000001                     ___fltol@f1:
   624                           	callstack 0
   625   000001                     ___fladd@b:
   626                           	callstack 0
   627   000001                     ___flmul@b:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631   000001                     	ds	1
   632   000002                     ??_I2C_2_Master_Read:
   633   000002                     I2C_2_Master_Write@data_byte:
   634                           	callstack 0
   635   000002                     sendStringSerial4@string:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x1
   639   000002                     	ds	1
   640   000003                     color_writetoaddr@value:
   641                           	callstack 0
   642   000003                     I2C_2_Master_Read@ack:
   643                           	callstack 0
   644   000003                     fputc@fp:
   645                           	callstack 0
   646   000003                     ___wmul@multiplicand:
   647                           	callstack 0
   648   000003                     ___awdiv@divisor:
   649                           	callstack 0
   650   000003                     ___awmod@divisor:
   651                           	callstack 0
   652   000003                     ___lwdiv@divisor:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x2
   656   000003                     	ds	1
   657   000004                     ??_fputc:
   658   000004                     color_writetoaddr@address:
   659                           	callstack 0
   660   000004                     I2C_2_Master_Read@tmp:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x3
   664   000004                     	ds	1
   665   000005                     ??_color_click_init:
   666   000005                     ??___fltol:
   667   000005                     ?_color_read_Red:
   668                           	callstack 0
   669   000005                     ?_color_read_Green:
   670                           	callstack 0
   671   000005                     ?_color_read_Blue:
   672                           	callstack 0
   673   000005                     ?_color_read_Clear:
   674                           	callstack 0
   675   000005                     ___awdiv@counter:
   676                           	callstack 0
   677   000005                     ___awmod@counter:
   678                           	callstack 0
   679   000005                     ___wmul@product:
   680                           	callstack 0
   681   000005                     ___lwdiv@quotient:
   682                           	callstack 0
   683   000005                     ___fleq@ff2:
   684                           	callstack 0
   685   000005                     ___flge@ff2:
   686                           	callstack 0
   687   000005                     ___fladd@a:
   688                           	callstack 0
   689   000005                     ___flmul@a:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x4
   693   000005                     	ds	1
   694   000006                     ___awdiv@sign:
   695                           	callstack 0
   696   000006                     ___awmod@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x5
   700   000006                     	ds	1
   701   000007                     ??_color_read_Red:
   702   000007                     ??_color_read_Green:
   703   000007                     ??_color_read_Blue:
   704   000007                     ??_color_read_Clear:
   705   000007                     ?_abs:
   706                           	callstack 0
   707   000007                     ?_read_prec_or_width:
   708                           	callstack 0
   709   000007                     ___lwdiv@counter:
   710                           	callstack 0
   711   000007                     read_prec_or_width@fmt:
   712                           	callstack 0
   713   000007                     ___awdiv@quotient:
   714                           	callstack 0
   715   000007                     abs@a:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x6
   719   000007                     	ds	1
   720   000008                     ?___xxtofl:
   721                           	callstack 0
   722   000008                     read_prec_or_width@ap:
   723                           	callstack 0
   724   000008                     ___xxtofl@val:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x7
   728   000008                     	ds	1
   729   000009                     ??___fladd:
   730   000009                     ??___flmul:
   731   000009                     ??_abs:
   732   000009                     ??___fleq:
   733   000009                     ??___flge:
   734   000009                     ___fltol@sign1:
   735                           	callstack 0
   736   000009                     read_prec_or_width@c:
   737                           	callstack 0
   738   000009                     fputs@s:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x8
   742   000009                     	ds	1
   743   00000A                     ___fltol@exp1:
   744                           	callstack 0
   745   00000A                     color_read_Red@tmp:
   746                           	callstack 0
   747   00000A                     color_read_Green@tmp:
   748                           	callstack 0
   749   00000A                     color_read_Blue@tmp:
   750                           	callstack 0
   751   00000A                     color_read_Clear@tmp:
   752                           	callstack 0
   753   00000A                     read_prec_or_width@n:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x9
   757   00000A                     	ds	1
   758   00000B                     fputs@fp:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0xA
   762   00000B                     	ds	1
   763   00000C                     ??___xxtofl:
   764   00000C                     reading_values@cCurr:
   765                           	callstack 0
   766   00000C                     fputs@c:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0xB
   770   00000C                     	ds	1
   771   00000D                     ___fladd@signs:
   772                           	callstack 0
   773   00000D                     ___flmul@sign:
   774                           	callstack 0
   775   00000D                     fputs@i:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0xC
   779   00000D                     	ds	1
   780   00000E                     ___fladd@aexp:
   781                           	callstack 0
   782   00000E                     ___flmul@grs:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0xD
   786   00000E                     	ds	1
   787   00000F                     ___fladd@bexp:
   788                           	callstack 0
   789   00000F                     pad@fp:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0xE
   793   00000F                     	ds	1
   794   000010                     ___fladd@grs:
   795                           	callstack 0
   796   000010                     ___xxtofl@sign:
   797                           	callstack 0
   798   000010                     pad@buf:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0xF
   802   000010                     	ds	1
   803   000011                     ?___flsub:
   804                           	callstack 0
   805   000011                     ___xxtofl@exp:
   806                           	callstack 0
   807   000011                     ___flsub@b:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x10
   811   000011                     	ds	1
   812   000012                     ___flmul@aexp:
   813                           	callstack 0
   814   000012                     pad@p:
   815                           	callstack 0
   816   000012                     ___xxtofl@arg:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x11
   820   000012                     	ds	1
   821   000013                     ___flmul@bexp:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x12
   825   000013                     	ds	1
   826   000014                     ??_pad:
   827   000014                     ___flmul@prod:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x13
   831   000014                     	ds	1
   832   000015                     pad@i:
   833                           	callstack 0
   834   000015                     ___flsub@a:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0x14
   838   000015                     	ds	2
   839   000017                     dtoa@fp:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x16
   843   000017                     	ds	1
   844   000018                     ___flmul@temp:
   845                           	callstack 0
   846   000018                     dtoa@d:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x17
   850   000018                     	ds	1
   851   000019                     ?___fldiv:
   852                           	callstack 0
   853   000019                     ___fldiv@b:
   854                           	callstack 0
   855                           
   856                           ; 4 bytes @ 0x18
   857   000019                     	ds	1
   858   00001A                     _dtoa$2602:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x19
   862   00001A                     	ds	2
   863   00001C                     dtoa@p:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x1B
   867   00001C                     	ds	1
   868   00001D                     dtoa@w:
   869                           	callstack 0
   870   00001D                     ___fldiv@a:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x1C
   874   00001D                     	ds	2
   875   00001F                     dtoa@s:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1E
   879   00001F                     	ds	1
   880   000020                     dtoa@i:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x1F
   884   000020                     	ds	1
   885   000021                     ??___fldiv:
   886                           
   887                           ; 1 bytes @ 0x20
   888   000021                     	ds	1
   889   000022                     vfpfcnvrt@fp:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x21
   893   000022                     	ds	1
   894   000023                     vfpfcnvrt@fmt:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x22
   898   000023                     	ds	1
   899   000024                     vfpfcnvrt@ap:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x23
   903   000024                     	ds	1
   904   000025                     ??_vfpfcnvrt:
   905   000025                     ___fldiv@rem:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0x24
   909   000025                     	ds	2
   910   000027                     vfpfcnvrt@convarg:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x26
   914   000027                     	ds	2
   915   000029                     ___fldiv@sign:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x28
   919   000029                     	ds	1
   920   00002A                     ___fldiv@new_exp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x29
   924   00002A                     	ds	1
   925   00002B                     vfpfcnvrt@done:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x2A
   929   00002B                     	ds	1
   930   00002C                     vfpfcnvrt@cp:
   931                           	callstack 0
   932   00002C                     ___fldiv@grs:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x2B
   936   00002C                     	ds	1
   937   00002D                     ?_vfprintf:
   938                           	callstack 0
   939   00002D                     vfprintf@fp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x2C
   943   00002D                     	ds	1
   944   00002E                     vfprintf@fmt:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x2D
   948   00002E                     	ds	1
   949   00002F                     vfprintf@ap:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x2E
   953   00002F                     	ds	1
   954   000030                     ___fldiv@bexp:
   955                           	callstack 0
   956   000030                     vfprintf@cfmt:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x2F
   960   000030                     	ds	1
   961   000031                     ?_sprintf:
   962                           	callstack 0
   963   000031                     ___fldiv@aexp:
   964                           	callstack 0
   965   000031                     sprintf@s:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x30
   969   000031                     	ds	1
   970   000032                     ?_convert_rgb2hue:
   971                           	callstack 0
   972   000032                     convert_rgb2hue@cMax:
   973                           	callstack 0
   974   000032                     sprintf@fmt:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x31
   978   000032                     	ds	1
   979   000033                     convert_rgb2hue@cCurr:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x32
   983   000033                     	ds	1
   984   000034                     _convert_rgb2hue$304:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x33
   988   000034                     	ds	3
   989   000037                     sprintf@ap:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x36
   993   000037                     	ds	1
   994   000038                     _convert_rgb2hue$305:
   995                           	callstack 0
   996   000038                     sprintf@f:
   997                           	callstack 0
   998                           
   999                           ; 12 bytes @ 0x37
  1000   000038                     	ds	4
  1001   00003C                     _convert_rgb2hue$306:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x3B
  1005   00003C                     	ds	4
  1006   000040                     _convert_rgb2hue$307:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x3F
  1010   000040                     	ds	4
  1011   000044                     calibration_routine@cCal:
  1012                           	callstack 0
  1013   000044                     send2USART@hue:
  1014                           	callstack 0
  1015   000044                     convert_rgb2hue@min:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x43
  1019   000044                     	ds	1
  1020   000045                     ??_calibration_routine:
  1021                           
  1022                           ; 1 bytes @ 0x44
  1023   000045                     	ds	1
  1024   000046                     
  1025                           ; 1 bytes @ 0x45
  1026   000046                     	ds	1
  1027   000047                     calibration_routine@cal_state:
  1028                           	callstack 0
  1029                           
  1030                           ; 20 bytes @ 0x46
  1031   000047                     	ds	1
  1032   000048                     convert_rgb2hue@max:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x47
  1036   000048                     	ds	4
  1037   00004C                     convert_rgb2hue@diff:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x4B
  1041   00004C                     	ds	4
  1042   000050                     convert_rgb2hue@hue:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x4F
  1046   000050                     	ds	4
  1047   000054                     convert_rgb2hue@r:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x53
  1051   000054                     	ds	4
  1052   000058                     convert_rgb2hue@g:
  1053                           	callstack 0
  1054                           
  1055                           ; 4 bytes @ 0x57
  1056   000058                     	ds	4
  1057   00005C                     convert_rgb2hue@b:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x5B
  1061   00005C                     	ds	4
  1062                           
  1063 ;;
  1064 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1065 ;;
  1066 ;; *************** function _main *****************
  1067 ;; Defined at:
  1068 ;;		line 28 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  PWMcycle        2    0        unsigned int 
  1073 ;;  hue             2    0        unsigned int 
  1074 ;;  clear           2    0        unsigned int 
  1075 ;;  green           2    0        unsigned int 
  1076 ;;  blue            2    0        unsigned int 
  1077 ;;  red             2    0        unsigned int 
  1078 ;;  battery_leve    2    0        unsigned int 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels required when called: 10
  1094 ;; This function calls:
  1095 ;;		_ADC_init
  1096 ;;		_calibration_routine
  1097 ;;		_color_click_init
  1098 ;;		_initDCmotorsPWM
  1099 ;;		_initUSART4
  1100 ;;		_test
  1101 ;; This function is called by:
  1102 ;;		Startup code after reset
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text0
  1107   002CA4                     __ptext0:
  1108                           	callstack 0
  1109   002CA4                     _main:
  1110                           	callstack 21
  1111   002CA4                     
  1112                           ;main.c: 30:     ADC_init();
  1113   002CA4  EC0D  F01B         	call	_ADC_init	;wreg free
  1114   002CA8                     
  1115                           ;main.c: 31:     color_click_init();
  1116   002CA8  EC24  F01A         	call	_color_click_init	;wreg free
  1117   002CAC                     
  1118                           ;main.c: 32:     initUSART4();
  1119   002CAC  ECFE  F01A         	call	_initUSART4	;wreg free
  1120   002CB0                     
  1121                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1122   002CB0  0E00               	movlw	0
  1123   002CB2  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1124   002CB4  0E63               	movlw	99
  1125   002CB6  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1126   002CB8  EC52  F018         	call	_initDCmotorsPWM	;wreg free
  1127   002CBC                     
  1128                           ;main.c: 39:     motorL.power = 0;
  1129   002CBC  0E00               	movlw	0
  1130   002CBE  0100               	movlb	0	; () banked
  1131   002CC0  6FDF               	movwf	_motorL& (0+255),b
  1132   002CC2                     
  1133                           ; BSR set to: 0
  1134                           ;main.c: 40:     motorL.direction = 1;
  1135   002CC2  0E01               	movlw	1
  1136   002CC4  6FE0               	movwf	(_motorL+1)& (0+255),b
  1137   002CC6                     
  1138                           ; BSR set to: 0
  1139                           ;main.c: 41:     motorL.brakemode = 1;
  1140   002CC6  0E01               	movlw	1
  1141   002CC8  6FE1               	movwf	(_motorL+2)& (0+255),b
  1142   002CCA                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1145   002CCA  0E00               	movlw	0
  1146   002CCC  6FE3               	movwf	(_motorL+4)& (0+255),b
  1147   002CCE  0E63               	movlw	99
  1148   002CD0  6FE2               	movwf	(_motorL+3)& (0+255),b
  1149   002CD2                     
  1150                           ; BSR set to: 0
  1151                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1152   002CD2  0EAA               	movlw	170
  1153   002CD4  6FE4               	movwf	(_motorL+5)& (0+255),b
  1154   002CD6  0E0F               	movlw	15
  1155   002CD8  6FE5               	movwf	(_motorL+6)& (0+255),b
  1156   002CDA                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1159   002CDA  0EA6               	movlw	166
  1160   002CDC  6FE6               	movwf	(_motorL+7)& (0+255),b
  1161   002CDE  0E0F               	movlw	15
  1162   002CE0  6FE7               	movwf	(_motorL+8)& (0+255),b
  1163   002CE2                     
  1164                           ; BSR set to: 0
  1165                           ;main.c: 46:     motorR.power = 0;
  1166   002CE2  0E00               	movlw	0
  1167   002CE4  6FD6               	movwf	_motorR& (0+255),b
  1168   002CE6                     
  1169                           ; BSR set to: 0
  1170                           ;main.c: 47:     motorR.direction = 1;
  1171   002CE6  0E01               	movlw	1
  1172   002CE8  6FD7               	movwf	(_motorR+1)& (0+255),b
  1173   002CEA                     
  1174                           ; BSR set to: 0
  1175                           ;main.c: 48:     motorR.brakemode = 1;
  1176   002CEA  0E01               	movlw	1
  1177   002CEC  6FD8               	movwf	(_motorR+2)& (0+255),b
  1178   002CEE                     
  1179                           ; BSR set to: 0
  1180                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1181   002CEE  0E00               	movlw	0
  1182   002CF0  6FDA               	movwf	(_motorR+4)& (0+255),b
  1183   002CF2  0E63               	movlw	99
  1184   002CF4  6FD9               	movwf	(_motorR+3)& (0+255),b
  1185                           
  1186                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1187   002CF6  0E25               	movlw	37
  1188   002CF8  6FDB               	movwf	(_motorR+5)& (0+255),b
  1189   002CFA  0E0F               	movlw	15
  1190   002CFC  6FDC               	movwf	(_motorR+6)& (0+255),b
  1191                           
  1192                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1193   002CFE  0E21               	movlw	33
  1194   002D00  6FDD               	movwf	(_motorR+7)& (0+255),b
  1195   002D02  0E0F               	movlw	15
  1196   002D04  6FDE               	movwf	(_motorR+8)& (0+255),b
  1197   002D06                     
  1198                           ; BSR set to: 0
  1199                           ;main.c: 54:     LATDbits.LATD7=0;
  1200   002D06  9E7C               	bcf	124,7,c	;volatile
  1201   002D08                     
  1202                           ; BSR set to: 0
  1203                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1204   002D08  9E84               	bcf	132,7,c	;volatile
  1205   002D0A                     
  1206                           ; BSR set to: 0
  1207                           ;main.c: 58:     TRISDbits.TRISD3 = 0;
  1208   002D0A  9684               	bcf	132,3,c	;volatile
  1209   002D0C                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 59:     LATDbits.LATD3 = 1;
  1212   002D0C  867C               	bsf	124,3,c	;volatile
  1213   002D0E                     
  1214                           ; BSR set to: 0
  1215                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1216   002D0E  9087               	bcf	135,0,c	;volatile
  1217   002D10                     
  1218                           ; BSR set to: 0
  1219                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1220   002D10  907F               	bcf	127,0,c	;volatile
  1221   002D12                     
  1222                           ; BSR set to: 0
  1223                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1224   002D12  9E85               	bcf	133,7,c	;volatile
  1225   002D14                     
  1226                           ; BSR set to: 0
  1227                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1228   002D14  9E7D               	bcf	125,7,c	;volatile
  1229   002D16                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1232   002D16  9681               	bcf	129,3,c	;volatile
  1233   002D18                     
  1234                           ; BSR set to: 0
  1235                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1236   002D18  9679               	bcf	121,3,c	;volatile
  1237   002D1A                     
  1238                           ; BSR set to: 0
  1239                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1240   002D1A  8686               	bsf	134,3,c	;volatile
  1241   002D1C                     
  1242                           ; BSR set to: 0
  1243                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1244   002D1C  010E               	movlb	14	; () banked
  1245   002D1E  97B4               	bcf	180,3,b	;volatile
  1246   002D20                     
  1247                           ; BSR set to: 14
  1248                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     unsigned i
      +                          nt clear;;main.c: 80:     unsigned int hue;;main.c: 81:     TRISHbits.TRISH3 = 0;
  1249   002D20  9688               	bcf	136,3,c	;volatile
  1250   002D22                     
  1251                           ; BSR set to: 14
  1252                           ;main.c: 82:     LATHbits.LATH3 = 1;
  1253   002D22  8680               	bsf	128,3,c	;volatile
  1254   002D24                     
  1255                           ; BSR set to: 14
  1256                           ;main.c: 83:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1257   002D24  0E19               	movlw	25
  1258   002D26  0100               	movlb	0	; () banked
  1259   002D28  6FCB               	movwf	(??_main+1)& (0+255),b
  1260   002D2A  0E5A               	movlw	90
  1261   002D2C  6FCA               	movwf	??_main& (0+255),b
  1262   002D2E  0EB1               	movlw	177
  1263   002D30                     u4397:
  1264   002D30  2EE8               	decfsz	wreg,f,c
  1265   002D32  D7FE               	bra	u4397
  1266   002D34  2FCA               	decfsz	??_main& (0+255),f,b
  1267   002D36  D7FC               	bra	u4397
  1268   002D38  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1269   002D3A  D7FA               	bra	u4397
  1270   002D3C  D000               	nop2	
  1271   002D3E                     
  1272                           ;main.c: 84:     LATHbits.LATH3 = 0;
  1273   002D3E  9680               	bcf	128,3,c	;volatile
  1274   002D40                     
  1275                           ;main.c: 85:     LATFbits.LATF2 = 0;
  1276   002D40  947E               	bcf	126,2,c	;volatile
  1277   002D42                     
  1278                           ;main.c: 86:     TRISFbits.TRISF2 = 1;
  1279   002D42  8486               	bsf	134,2,c	;volatile
  1280   002D44                     
  1281                           ;main.c: 87:     ANSELFbits.ANSELF2 = 0;
  1282   002D44  010E               	movlb	14	; () banked
  1283   002D46  95B4               	bcf	180,2,b	;volatile
  1284   002D48                     
  1285                           ; BSR set to: 14
  1286                           ;main.c: 90:     calibration_routine(&colorCalibration);
  1287   002D48  0EF0               	movlw	low _colorCalibration
  1288   002D4A  6E44               	movwf	calibration_routine@cCal^0,c
  1289   002D4C  ECE2  F011         	call	_calibration_routine	;wreg free
  1290   002D50                     l4796:
  1291                           
  1292                           ;main.c: 97:         test();
  1293   002D50  EC38  F014         	call	_test	;wreg free
  1294   002D54  EFA8  F016         	goto	l4796
  1295   002D58  EF00  F000         	goto	start
  1296   002D5C                     __end_of_main:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function _test *****************
  1300 ;; Defined at:
  1301 ;;		line 158 in file "color.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  combo           2  104[BANK0 ] unsigned int 
  1306 ;;  led_state      50   52[BANK0 ] unsigned char [50]
  1307 ;;  hue             2  102[BANK0 ] unsigned int 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1319 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1320 ;;      Totals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1321 ;;Total ram usage:       56 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 9
  1324 ;; This function calls:
  1325 ;;		_convert_rgb2hue
  1326 ;;		_reading_values
  1327 ;;		_send2USART
  1328 ;;		_sendStringSerial4
  1329 ;;		_sprintf
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text1
  1336   002870                     __ptext1:
  1337                           	callstack 0
  1338   002870                     _test:
  1339                           	callstack 21
  1340   002870                     
  1341                           ;color.c: 160:     unsigned int hue;;color.c: 162:     char led_state[50];;color.c: 165:
      +                               for (unsigned int combo = 0; combo < 4; ++combo) {
  1342   002870  0E00               	movlw	0
  1343   002872  0100               	movlb	0	; () banked
  1344   002874  6FC9               	movwf	(test@combo+1)& (0+255),b
  1345   002876  0E00               	movlw	0
  1346   002878  6FC8               	movwf	test@combo& (0+255),b
  1347   00287A                     l4638:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;color.c: 168:         if (combo == 0) {
  1351   00287A  51C8               	movf	test@combo& (0+255),w,b
  1352   00287C  11C9               	iorwf	(test@combo+1)& (0+255),w,b
  1353   00287E  A4D8               	btfss	status,2,c
  1354   002880  EF44  F014         	goto	u4261
  1355   002884  EF46  F014         	goto	u4260
  1356   002888                     u4261:
  1357   002888  EF5D  F014         	goto	l4644
  1358   00288C                     u4260:
  1359   00288C                     
  1360                           ; BSR set to: 0
  1361                           ;color.c: 170:             LATGbits.LATG0 = 1;
  1362   00288C  807F               	bsf	127,0,c	;volatile
  1363                           
  1364                           ;color.c: 171:             LATEbits.LATE7 = 0;
  1365   00288E  9E7D               	bcf	125,7,c	;volatile
  1366                           
  1367                           ;color.c: 172:             LATAbits.LATA3 = 0;
  1368   002890  9679               	bcf	121,3,c	;volatile
  1369   002892                     
  1370                           ; BSR set to: 0
  1371                           ;color.c: 173:             sprintf(led_state,"Red_light=%d, \n\r", LATGbits.LATG0);
  1372   002892  0E94               	movlw	low test@led_state
  1373   002894  6E31               	movwf	sprintf@s^0,c
  1374   002896  0EB4               	movlw	low STR_1
  1375   002898  6E32               	movwf	sprintf@fmt^0,c
  1376   00289A  B07F               	btfsc	127,0,c	;volatile
  1377   00289C  EF52  F014         	goto	u4271
  1378   0028A0  EF56  F014         	goto	u4270
  1379   0028A4                     u4271:
  1380   0028A4  6B92               	clrf	??_test& (0+255),b
  1381   0028A6  2B92               	incf	??_test& (0+255),f,b
  1382   0028A8  EF58  F014         	goto	u4278
  1383   0028AC                     u4270:
  1384   0028AC  0100               	movlb	0	; () banked
  1385   0028AE  6B92               	clrf	??_test& (0+255),b
  1386   0028B0                     u4278:
  1387   0028B0  5192               	movf	??_test& (0+255),w,b
  1388   0028B2  6E33               	movwf	(?_sprintf+2)^0,c
  1389   0028B4  6A34               	clrf	(?_sprintf+3)^0,c
  1390   0028B6  EC3E  F01A         	call	_sprintf	;wreg free
  1391   0028BA                     l4644:
  1392                           
  1393                           ;color.c: 178:         if (combo == 1) {
  1394   0028BA  0100               	movlb	0	; () banked
  1395   0028BC  05C8               	decf	test@combo& (0+255),w,b
  1396   0028BE  11C9               	iorwf	(test@combo+1)& (0+255),w,b
  1397   0028C0  A4D8               	btfss	status,2,c
  1398   0028C2  EF65  F014         	goto	u4281
  1399   0028C6  EF67  F014         	goto	u4280
  1400   0028CA                     u4281:
  1401   0028CA  EF7E  F014         	goto	l4650
  1402   0028CE                     u4280:
  1403   0028CE                     
  1404                           ; BSR set to: 0
  1405                           ;color.c: 179:             LATGbits.LATG0 = 0;
  1406   0028CE  907F               	bcf	127,0,c	;volatile
  1407                           
  1408                           ;color.c: 180:             LATEbits.LATE7 = 1;
  1409   0028D0  8E7D               	bsf	125,7,c	;volatile
  1410                           
  1411                           ;color.c: 181:             LATAbits.LATA3 = 0;
  1412   0028D2  9679               	bcf	121,3,c	;volatile
  1413   0028D4                     
  1414                           ; BSR set to: 0
  1415                           ;color.c: 182:             sprintf(led_state,"Green_light=%d, \n\r", LATEbits.LATE7);
  1416   0028D4  0E94               	movlw	low test@led_state
  1417   0028D6  6E31               	movwf	sprintf@s^0,c
  1418   0028D8  0EA1               	movlw	low STR_2
  1419   0028DA  6E32               	movwf	sprintf@fmt^0,c
  1420   0028DC  BE7D               	btfsc	125,7,c	;volatile
  1421   0028DE  EF73  F014         	goto	u4291
  1422   0028E2  EF77  F014         	goto	u4290
  1423   0028E6                     u4291:
  1424   0028E6  6B92               	clrf	??_test& (0+255),b
  1425   0028E8  2B92               	incf	??_test& (0+255),f,b
  1426   0028EA  EF79  F014         	goto	u4298
  1427   0028EE                     u4290:
  1428   0028EE  0100               	movlb	0	; () banked
  1429   0028F0  6B92               	clrf	??_test& (0+255),b
  1430   0028F2                     u4298:
  1431   0028F2  5192               	movf	??_test& (0+255),w,b
  1432   0028F4  6E33               	movwf	(?_sprintf+2)^0,c
  1433   0028F6  6A34               	clrf	(?_sprintf+3)^0,c
  1434   0028F8  EC3E  F01A         	call	_sprintf	;wreg free
  1435   0028FC                     l4650:
  1436                           
  1437                           ;color.c: 186:         if (combo == 2) {
  1438   0028FC  0E02               	movlw	2
  1439   0028FE  0100               	movlb	0	; () banked
  1440   002900  19C8               	xorwf	test@combo& (0+255),w,b
  1441   002902  11C9               	iorwf	(test@combo+1)& (0+255),w,b
  1442   002904  A4D8               	btfss	status,2,c
  1443   002906  EF87  F014         	goto	u4301
  1444   00290A  EF89  F014         	goto	u4300
  1445   00290E                     u4301:
  1446   00290E  EFA0  F014         	goto	l4656
  1447   002912                     u4300:
  1448   002912                     
  1449                           ; BSR set to: 0
  1450                           ;color.c: 187:             LATGbits.LATG0 = 0;
  1451   002912  907F               	bcf	127,0,c	;volatile
  1452                           
  1453                           ;color.c: 188:             LATEbits.LATE7 = 0;
  1454   002914  9E7D               	bcf	125,7,c	;volatile
  1455                           
  1456                           ;color.c: 189:             LATAbits.LATA3 = 1;
  1457   002916  8679               	bsf	121,3,c	;volatile
  1458   002918                     
  1459                           ; BSR set to: 0
  1460                           ;color.c: 190:             sprintf(led_state,"Blue_light=%d \n\r", LATAbits.LATA3);
  1461   002918  0E94               	movlw	low test@led_state
  1462   00291A  6E31               	movwf	sprintf@s^0,c
  1463   00291C  0ED6               	movlw	low STR_3
  1464   00291E  6E32               	movwf	sprintf@fmt^0,c
  1465   002920  B679               	btfsc	121,3,c	;volatile
  1466   002922  EF95  F014         	goto	u4311
  1467   002926  EF99  F014         	goto	u4310
  1468   00292A                     u4311:
  1469   00292A  6B92               	clrf	??_test& (0+255),b
  1470   00292C  2B92               	incf	??_test& (0+255),f,b
  1471   00292E  EF9B  F014         	goto	u4318
  1472   002932                     u4310:
  1473   002932  0100               	movlb	0	; () banked
  1474   002934  6B92               	clrf	??_test& (0+255),b
  1475   002936                     u4318:
  1476   002936  5192               	movf	??_test& (0+255),w,b
  1477   002938  6E33               	movwf	(?_sprintf+2)^0,c
  1478   00293A  6A34               	clrf	(?_sprintf+3)^0,c
  1479   00293C  EC3E  F01A         	call	_sprintf	;wreg free
  1480   002940                     l4656:
  1481                           
  1482                           ;color.c: 196:         if (combo == 3) {
  1483   002940  0E03               	movlw	3
  1484   002942  0100               	movlb	0	; () banked
  1485   002944  19C8               	xorwf	test@combo& (0+255),w,b
  1486   002946  11C9               	iorwf	(test@combo+1)& (0+255),w,b
  1487   002948  A4D8               	btfss	status,2,c
  1488   00294A  EFA9  F014         	goto	u4321
  1489   00294E  EFAB  F014         	goto	u4320
  1490   002952                     u4321:
  1491   002952  EFB8  F014         	goto	l4662
  1492   002956                     u4320:
  1493   002956                     
  1494                           ; BSR set to: 0
  1495                           ;color.c: 197:             LATGbits.LATG0 = 1;
  1496   002956  807F               	bsf	127,0,c	;volatile
  1497                           
  1498                           ;color.c: 198:             LATEbits.LATE7 = 1;
  1499   002958  8E7D               	bsf	125,7,c	;volatile
  1500                           
  1501                           ;color.c: 199:             LATAbits.LATA3 = 1;
  1502   00295A  8679               	bsf	121,3,c	;volatile
  1503   00295C                     
  1504                           ; BSR set to: 0
  1505                           ;color.c: 200:             sprintf(led_state,"All_lights=%d \n\r", 1);
  1506   00295C  0E94               	movlw	low test@led_state
  1507   00295E  6E31               	movwf	sprintf@s^0,c
  1508   002960  0EC5               	movlw	low STR_4
  1509   002962  6E32               	movwf	sprintf@fmt^0,c
  1510   002964  0E00               	movlw	0
  1511   002966  6E34               	movwf	(?_sprintf+3)^0,c
  1512   002968  0E01               	movlw	1
  1513   00296A  6E33               	movwf	(?_sprintf+2)^0,c
  1514   00296C  EC3E  F01A         	call	_sprintf	;wreg free
  1515   002970                     l4662:
  1516                           
  1517                           ;color.c: 203:         sendStringSerial4(led_state);
  1518   002970  0E94               	movlw	low test@led_state
  1519   002972  6E02               	movwf	sendStringSerial4@string^0,c
  1520   002974  EC72  F01A         	call	_sendStringSerial4	;wreg free
  1521   002978                     
  1522                           ;color.c: 205:         reading_values(&colorCurrent);
  1523   002978  0EE8               	movlw	low _colorCurrent
  1524   00297A  6E0C               	movwf	reading_values@cCurr^0,c
  1525   00297C  ECD4  F018         	call	_reading_values	;wreg free
  1526   002980                     
  1527                           ;color.c: 207:         hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1528   002980  0EF0               	movlw	low _colorCalibration
  1529   002982  6E32               	movwf	convert_rgb2hue@cMax^0,c
  1530   002984  0EE8               	movlw	low _colorCurrent
  1531   002986  6E33               	movwf	convert_rgb2hue@cCurr^0,c
  1532   002988  EC7B  F007         	call	_convert_rgb2hue	;wreg free
  1533   00298C  C032  F0C6         	movff	?_convert_rgb2hue,test@hue
  1534   002990  C033  F0C7         	movff	?_convert_rgb2hue+1,test@hue+1
  1535   002994                     
  1536                           ;color.c: 213:         send2USART(hue);
  1537   002994  C0C6  F044         	movff	test@hue,send2USART@hue
  1538   002998  C0C7  F045         	movff	test@hue+1,send2USART@hue+1
  1539   00299C  ECEF  F01A         	call	_send2USART	;wreg free
  1540   0029A0                     
  1541                           ;color.c: 216:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1542   0029A0  0E29               	movlw	41
  1543   0029A2  0100               	movlb	0	; () banked
  1544   0029A4  6F93               	movwf	(??_test+1)& (0+255),b
  1545   0029A6  0E96               	movlw	150
  1546   0029A8  6F92               	movwf	??_test& (0+255),b
  1547   0029AA  0E7F               	movlw	127
  1548   0029AC                     u4407:
  1549   0029AC  2EE8               	decfsz	wreg,f,c
  1550   0029AE  D7FE               	bra	u4407
  1551   0029B0  2F92               	decfsz	??_test& (0+255),f,b
  1552   0029B2  D7FC               	bra	u4407
  1553   0029B4  2F93               	decfsz	(??_test+1)& (0+255),f,b
  1554   0029B6  D7FA               	bra	u4407
  1555   0029B8                     
  1556                           ;color.c: 218:     }
  1557   0029B8  0100               	movlb	0	; () banked
  1558   0029BA  4BC8               	infsnz	test@combo& (0+255),f,b
  1559   0029BC  2BC9               	incf	(test@combo+1)& (0+255),f,b
  1560   0029BE                     
  1561                           ; BSR set to: 0
  1562   0029BE  51C9               	movf	(test@combo+1)& (0+255),w,b
  1563   0029C0  E109               	bnz	u4330
  1564   0029C2  0E04               	movlw	4
  1565   0029C4  5DC8               	subwf	test@combo& (0+255),w,b
  1566   0029C6  A0D8               	btfss	status,0,c
  1567   0029C8  EFE8  F014         	goto	u4331
  1568   0029CC  EFEA  F014         	goto	u4330
  1569   0029D0                     u4331:
  1570   0029D0  EF3D  F014         	goto	l4638
  1571   0029D4                     u4330:
  1572   0029D4                     
  1573                           ; BSR set to: 0
  1574   0029D4  0012               	return		;funcret
  1575   0029D6                     __end_of_test:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _send2USART *****************
  1579 ;; Defined at:
  1580 ;;		line 146 in file "serial.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  hue             2   67[COMRAM] unsigned int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;Total ram usage:       52 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 8
  1601 ;; This function calls:
  1602 ;;		_sendStringSerial4
  1603 ;;		_sprintf
  1604 ;; This function is called by:
  1605 ;;		_test
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text2
  1610   0035DE                     __ptext2:
  1611                           	callstack 0
  1612   0035DE                     _send2USART:
  1613                           	callstack 21
  1614   0035DE                     
  1615                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1616   0035DE  0E60               	movlw	low send2USART@hue_char
  1617   0035E0  6E31               	movwf	sprintf@s^0,c
  1618   0035E2  0EE7               	movlw	low STR_16
  1619   0035E4  6E32               	movwf	sprintf@fmt^0,c
  1620   0035E6  C044  F033         	movff	send2USART@hue,?_sprintf+2
  1621   0035EA  C045  F034         	movff	send2USART@hue+1,?_sprintf+3
  1622   0035EE  EC3E  F01A         	call	_sprintf	;wreg free
  1623   0035F2                     
  1624                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1625   0035F2  0E60               	movlw	low send2USART@hue_char
  1626   0035F4  6E02               	movwf	sendStringSerial4@string^0,c
  1627   0035F6  EC72  F01A         	call	_sendStringSerial4	;wreg free
  1628   0035FA  0012               	return		;funcret
  1629   0035FC                     __end_of_send2USART:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _reading_values *****************
  1633 ;; Defined at:
  1634 ;;		line 292 in file "color.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  cCurr           1   11[COMRAM] PTR struct colors
  1637 ;;		 -> colorCurrent(8), 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1649 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;Total ram usage:        1 bytes
  1654 ;; Hardware stack levels used: 1
  1655 ;; Hardware stack levels required when called: 3
  1656 ;; This function calls:
  1657 ;;		_color_read_Blue
  1658 ;;		_color_read_Clear
  1659 ;;		_color_read_Green
  1660 ;;		_color_read_Red
  1661 ;; This function is called by:
  1662 ;;		_test
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text3
  1667   0031A8                     __ptext3:
  1668                           	callstack 0
  1669   0031A8                     _reading_values:
  1670                           	callstack 26
  1671   0031A8                     
  1672                           ;color.c: 292: void reading_values(colors *cCurr);color.c: 293: {;color.c: 296:     (cCu
      +                          rr->red)= color_read_Red();
  1673   0031A8  ECFF  F018         	call	_color_read_Red	;wreg free
  1674   0031AC  500C               	movf	reading_values@cCurr^0,w,c
  1675   0031AE  6ED9               	movwf	fsr2l,c
  1676   0031B0  6ADA               	clrf	fsr2h,c
  1677   0031B2  C005  FFDE         	movff	?_color_read_Red,postinc2
  1678   0031B6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1679                           
  1680                           ;color.c: 297:     (cCurr->blue) = color_read_Blue();
  1681   0031BA  EC77  F019         	call	_color_read_Blue	;wreg free
  1682   0031BE  500C               	movf	reading_values@cCurr^0,w,c
  1683   0031C0  6ED9               	movwf	fsr2l,c
  1684   0031C2  6ADA               	clrf	fsr2h,c
  1685   0031C4  0E04               	movlw	4
  1686   0031C6  26D9               	addwf	fsr2l,f,c
  1687   0031C8  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1688   0031CC  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1689                           
  1690                           ;color.c: 298:     (cCurr->green) = color_read_Green();
  1691   0031D0  EC27  F019         	call	_color_read_Green	;wreg free
  1692   0031D4  500C               	movf	reading_values@cCurr^0,w,c
  1693   0031D6  6ED9               	movwf	fsr2l,c
  1694   0031D8  6ADA               	clrf	fsr2h,c
  1695   0031DA  0E02               	movlw	2
  1696   0031DC  26D9               	addwf	fsr2l,f,c
  1697   0031DE  C005  FFDE         	movff	?_color_read_Green,postinc2
  1698   0031E2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1699                           
  1700                           ;color.c: 299:     (cCurr->clear) = color_read_Clear();
  1701   0031E6  EC4F  F019         	call	_color_read_Clear	;wreg free
  1702   0031EA  500C               	movf	reading_values@cCurr^0,w,c
  1703   0031EC  6ED9               	movwf	fsr2l,c
  1704   0031EE  6ADA               	clrf	fsr2h,c
  1705   0031F0  0E06               	movlw	6
  1706   0031F2  26D9               	addwf	fsr2l,f,c
  1707   0031F4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1708   0031F8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1709   0031FC  0012               	return		;funcret
  1710   0031FE                     __end_of_reading_values:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _convert_rgb2hue *****************
  1714 ;; Defined at:
  1715 ;;		line 99 in file "color.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  cMax            1   49[COMRAM] PTR struct colors
  1718 ;;		 -> colorCalibration(8), 
  1719 ;;  cCurr           1   50[COMRAM] PTR struct colors
  1720 ;;		 -> colorCurrent(8), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  b               4   91[COMRAM] float 
  1723 ;;  g               4   87[COMRAM] float 
  1724 ;;  r               4   83[COMRAM] float 
  1725 ;;  hue             4   79[COMRAM] float 
  1726 ;;  diff            4   75[COMRAM] float 
  1727 ;;  max             4   71[COMRAM] float 
  1728 ;;  min             4   67[COMRAM] float 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  2   49[COMRAM] unsigned int 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Locals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Totals:        46       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;Total ram usage:       46 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 2
  1745 ;; This function calls:
  1746 ;;		___fladd
  1747 ;;		___fldiv
  1748 ;;		___fleq
  1749 ;;		___flge
  1750 ;;		___flmul
  1751 ;;		___flsub
  1752 ;;		___fltol
  1753 ;;		___lwdiv
  1754 ;;		___xxtofl
  1755 ;; This function is called by:
  1756 ;;		_test
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text4
  1761   000EF6                     __ptext4:
  1762                           	callstack 0
  1763   000EF6                     _convert_rgb2hue:
  1764                           	callstack 27
  1765   000EF6                     
  1766                           ;color.c: 99: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);co
      +                          lor.c: 100: {;color.c: 101:     float r, g, b, min, max, diff, hue = 0.0;
  1767   000EF6  0E00               	movlw	0
  1768   000EF8  6E50               	movwf	convert_rgb2hue@hue^0,c
  1769   000EFA  0E00               	movlw	0
  1770   000EFC  6E51               	movwf	(convert_rgb2hue@hue+1)^0,c
  1771   000EFE  0E00               	movlw	0
  1772   000F00  6E52               	movwf	(convert_rgb2hue@hue+2)^0,c
  1773   000F02  0E00               	movlw	0
  1774   000F04  6E53               	movwf	(convert_rgb2hue@hue+3)^0,c
  1775   000F06                     
  1776                           ;color.c: 111:     r = cCurr->red / cMax->red;
  1777   000F06  5032               	movf	convert_rgb2hue@cMax^0,w,c
  1778   000F08  6ED9               	movwf	fsr2l,c
  1779   000F0A  6ADA               	clrf	fsr2h,c
  1780   000F0C  CFDE F003          	movff	postinc2,___lwdiv@divisor
  1781   000F10  CFDD F004          	movff	postdec2,___lwdiv@divisor+1
  1782   000F14  5033               	movf	convert_rgb2hue@cCurr^0,w,c
  1783   000F16  6ED9               	movwf	fsr2l,c
  1784   000F18  6ADA               	clrf	fsr2h,c
  1785   000F1A  CFDE F001          	movff	postinc2,___lwdiv@dividend
  1786   000F1E  CFDD F002          	movff	postdec2,___lwdiv@dividend+1
  1787   000F22  EC9A  F018         	call	___lwdiv	;wreg free
  1788   000F26  C001  F008         	movff	?___lwdiv,___xxtofl@val
  1789   000F2A  C002  F009         	movff	?___lwdiv+1,___xxtofl@val+1
  1790   000F2E  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1791   000F30  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1792   000F32  0E00               	movlw	0
  1793   000F34  EC08  F011         	call	___xxtofl
  1794   000F38  C008  F054         	movff	?___xxtofl,convert_rgb2hue@r
  1795   000F3C  C009  F055         	movff	?___xxtofl+1,convert_rgb2hue@r+1
  1796   000F40  C00A  F056         	movff	?___xxtofl+2,convert_rgb2hue@r+2
  1797   000F44  C00B  F057         	movff	?___xxtofl+3,convert_rgb2hue@r+3
  1798   000F48                     
  1799                           ;color.c: 112:     g = cCurr->green / cMax->green;
  1800   000F48  5032               	movf	convert_rgb2hue@cMax^0,w,c
  1801   000F4A  6ED9               	movwf	fsr2l,c
  1802   000F4C  6ADA               	clrf	fsr2h,c
  1803   000F4E  0E02               	movlw	2
  1804   000F50  26D9               	addwf	fsr2l,f,c
  1805   000F52  CFDE F003          	movff	postinc2,___lwdiv@divisor
  1806   000F56  CFDD F004          	movff	postdec2,___lwdiv@divisor+1
  1807   000F5A  5033               	movf	convert_rgb2hue@cCurr^0,w,c
  1808   000F5C  6ED9               	movwf	fsr2l,c
  1809   000F5E  6ADA               	clrf	fsr2h,c
  1810   000F60  0E02               	movlw	2
  1811   000F62  26D9               	addwf	fsr2l,f,c
  1812   000F64  CFDE F001          	movff	postinc2,___lwdiv@dividend
  1813   000F68  CFDD F002          	movff	postdec2,___lwdiv@dividend+1
  1814   000F6C  EC9A  F018         	call	___lwdiv	;wreg free
  1815   000F70  C001  F008         	movff	?___lwdiv,___xxtofl@val
  1816   000F74  C002  F009         	movff	?___lwdiv+1,___xxtofl@val+1
  1817   000F78  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1818   000F7A  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1819   000F7C  0E00               	movlw	0
  1820   000F7E  EC08  F011         	call	___xxtofl
  1821   000F82  C008  F058         	movff	?___xxtofl,convert_rgb2hue@g
  1822   000F86  C009  F059         	movff	?___xxtofl+1,convert_rgb2hue@g+1
  1823   000F8A  C00A  F05A         	movff	?___xxtofl+2,convert_rgb2hue@g+2
  1824   000F8E  C00B  F05B         	movff	?___xxtofl+3,convert_rgb2hue@g+3
  1825   000F92                     
  1826                           ;color.c: 113:     b = cCurr->blue / cMax->blue;
  1827   000F92  5032               	movf	convert_rgb2hue@cMax^0,w,c
  1828   000F94  6ED9               	movwf	fsr2l,c
  1829   000F96  6ADA               	clrf	fsr2h,c
  1830   000F98  0E04               	movlw	4
  1831   000F9A  26D9               	addwf	fsr2l,f,c
  1832   000F9C  CFDE F003          	movff	postinc2,___lwdiv@divisor
  1833   000FA0  CFDD F004          	movff	postdec2,___lwdiv@divisor+1
  1834   000FA4  5033               	movf	convert_rgb2hue@cCurr^0,w,c
  1835   000FA6  6ED9               	movwf	fsr2l,c
  1836   000FA8  6ADA               	clrf	fsr2h,c
  1837   000FAA  0E04               	movlw	4
  1838   000FAC  26D9               	addwf	fsr2l,f,c
  1839   000FAE  CFDE F001          	movff	postinc2,___lwdiv@dividend
  1840   000FB2  CFDD F002          	movff	postdec2,___lwdiv@dividend+1
  1841   000FB6  EC9A  F018         	call	___lwdiv	;wreg free
  1842   000FBA  C001  F008         	movff	?___lwdiv,___xxtofl@val
  1843   000FBE  C002  F009         	movff	?___lwdiv+1,___xxtofl@val+1
  1844   000FC2  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1845   000FC4  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1846   000FC6  0E00               	movlw	0
  1847   000FC8  EC08  F011         	call	___xxtofl
  1848   000FCC  C008  F05C         	movff	?___xxtofl,convert_rgb2hue@b
  1849   000FD0  C009  F05D         	movff	?___xxtofl+1,convert_rgb2hue@b+1
  1850   000FD4  C00A  F05E         	movff	?___xxtofl+2,convert_rgb2hue@b+2
  1851   000FD8  C00B  F05F         	movff	?___xxtofl+3,convert_rgb2hue@b+3
  1852   000FDC                     
  1853                           ;color.c: 128:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  1854   000FDC  C054  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1855   000FE0  C055  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1856   000FE4  C056  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1857   000FE8  C057  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1858   000FEC  C058  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1859   000FF0  C059  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1860   000FF4  C05A  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1861   000FF8  C05B  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1862   000FFC  EC6E  F015         	call	___flge	;wreg free
  1863   001000  A0D8               	btfss	status,0,c
  1864   001002  EF05  F008         	goto	u3611
  1865   001006  EF07  F008         	goto	u3610
  1866   00100A                     u3611:
  1867   00100A  EF3C  F008         	goto	l3914
  1868   00100E                     u3610:
  1869   00100E  C058  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1870   001012  C059  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1871   001016  C05A  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1872   00101A  C05B  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1873   00101E  C05C  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1874   001022  C05D  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1875   001026  C05E  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1876   00102A  C05F  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1877   00102E  EC6E  F015         	call	___flge	;wreg free
  1878   001032  A0D8               	btfss	status,0,c
  1879   001034  EF1E  F008         	goto	u3621
  1880   001038  EF20  F008         	goto	u3620
  1881   00103C                     u3621:
  1882   00103C  EF2A  F008         	goto	l82
  1883   001040                     u3620:
  1884   001040  C05C  F034         	movff	convert_rgb2hue@b,_convert_rgb2hue$304
  1885   001044  C05D  F035         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$304+1
  1886   001048  C05E  F036         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$304+2
  1887   00104C  C05F  F037         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$304+3
  1888   001050  EF32  F008         	goto	l84
  1889   001054                     l82:
  1890   001054  C058  F034         	movff	convert_rgb2hue@g,_convert_rgb2hue$304
  1891   001058  C059  F035         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$304+1
  1892   00105C  C05A  F036         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$304+2
  1893   001060  C05B  F037         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$304+3
  1894   001064                     l84:
  1895   001064  C034  F044         	movff	_convert_rgb2hue$304,convert_rgb2hue@min
  1896   001068  C035  F045         	movff	_convert_rgb2hue$304+1,convert_rgb2hue@min+1
  1897   00106C  C036  F046         	movff	_convert_rgb2hue$304+2,convert_rgb2hue@min+2
  1898   001070  C037  F047         	movff	_convert_rgb2hue$304+3,convert_rgb2hue@min+3
  1899   001074  EF6F  F008         	goto	l3918
  1900   001078                     l3914:
  1901   001078  C054  F001         	movff	convert_rgb2hue@r,___flge@ff1
  1902   00107C  C055  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  1903   001080  C056  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  1904   001084  C057  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  1905   001088  C05C  F005         	movff	convert_rgb2hue@b,___flge@ff2
  1906   00108C  C05D  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  1907   001090  C05E  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  1908   001094  C05F  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  1909   001098  EC6E  F015         	call	___flge	;wreg free
  1910   00109C  A0D8               	btfss	status,0,c
  1911   00109E  EF53  F008         	goto	u3631
  1912   0010A2  EF55  F008         	goto	u3630
  1913   0010A6                     u3631:
  1914   0010A6  EF5F  F008         	goto	l86
  1915   0010AA                     u3630:
  1916   0010AA  C05C  F038         	movff	convert_rgb2hue@b,_convert_rgb2hue$305
  1917   0010AE  C05D  F039         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$305+1
  1918   0010B2  C05E  F03A         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$305+2
  1919   0010B6  C05F  F03B         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$305+3
  1920   0010BA  EF67  F008         	goto	l88
  1921   0010BE                     l86:
  1922   0010BE  C054  F038         	movff	convert_rgb2hue@r,_convert_rgb2hue$305
  1923   0010C2  C055  F039         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$305+1
  1924   0010C6  C056  F03A         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$305+2
  1925   0010CA  C057  F03B         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$305+3
  1926   0010CE                     l88:
  1927   0010CE  C038  F044         	movff	_convert_rgb2hue$305,convert_rgb2hue@min
  1928   0010D2  C039  F045         	movff	_convert_rgb2hue$305+1,convert_rgb2hue@min+1
  1929   0010D6  C03A  F046         	movff	_convert_rgb2hue$305+2,convert_rgb2hue@min+2
  1930   0010DA  C03B  F047         	movff	_convert_rgb2hue$305+3,convert_rgb2hue@min+3
  1931   0010DE                     l3918:
  1932                           
  1933                           ;color.c: 129:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  1934   0010DE  C058  F001         	movff	convert_rgb2hue@g,___flge@ff1
  1935   0010E2  C059  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  1936   0010E6  C05A  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  1937   0010EA  C05B  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  1938   0010EE  C054  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1939   0010F2  C055  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1940   0010F6  C056  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1941   0010FA  C057  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1942   0010FE  EC6E  F015         	call	___flge	;wreg free
  1943   001102  A0D8               	btfss	status,0,c
  1944   001104  EF86  F008         	goto	u3641
  1945   001108  EF88  F008         	goto	u3640
  1946   00110C                     u3641:
  1947   00110C  EFBD  F008         	goto	l3924
  1948   001110                     u3640:
  1949   001110  C05C  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1950   001114  C05D  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1951   001118  C05E  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1952   00111C  C05F  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1953   001120  C058  F005         	movff	convert_rgb2hue@g,___flge@ff2
  1954   001124  C059  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  1955   001128  C05A  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  1956   00112C  C05B  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  1957   001130  EC6E  F015         	call	___flge	;wreg free
  1958   001134  A0D8               	btfss	status,0,c
  1959   001136  EF9F  F008         	goto	u3651
  1960   00113A  EFA1  F008         	goto	u3650
  1961   00113E                     u3651:
  1962   00113E  EFAB  F008         	goto	l94
  1963   001142                     u3650:
  1964   001142  C05C  F03C         	movff	convert_rgb2hue@b,_convert_rgb2hue$306
  1965   001146  C05D  F03D         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$306+1
  1966   00114A  C05E  F03E         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$306+2
  1967   00114E  C05F  F03F         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$306+3
  1968   001152  EFB3  F008         	goto	l96
  1969   001156                     l94:
  1970   001156  C058  F03C         	movff	convert_rgb2hue@g,_convert_rgb2hue$306
  1971   00115A  C059  F03D         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$306+1
  1972   00115E  C05A  F03E         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$306+2
  1973   001162  C05B  F03F         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$306+3
  1974   001166                     l96:
  1975   001166  C03C  F048         	movff	_convert_rgb2hue$306,convert_rgb2hue@max
  1976   00116A  C03D  F049         	movff	_convert_rgb2hue$306+1,convert_rgb2hue@max+1
  1977   00116E  C03E  F04A         	movff	_convert_rgb2hue$306+2,convert_rgb2hue@max+2
  1978   001172  C03F  F04B         	movff	_convert_rgb2hue$306+3,convert_rgb2hue@max+3
  1979   001176  EFF0  F008         	goto	l3928
  1980   00117A                     l3924:
  1981   00117A  C05C  F001         	movff	convert_rgb2hue@b,___flge@ff1
  1982   00117E  C05D  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  1983   001182  C05E  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  1984   001186  C05F  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  1985   00118A  C054  F005         	movff	convert_rgb2hue@r,___flge@ff2
  1986   00118E  C055  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  1987   001192  C056  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  1988   001196  C057  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  1989   00119A  EC6E  F015         	call	___flge	;wreg free
  1990   00119E  A0D8               	btfss	status,0,c
  1991   0011A0  EFD4  F008         	goto	u3661
  1992   0011A4  EFD6  F008         	goto	u3660
  1993   0011A8                     u3661:
  1994   0011A8  EFE0  F008         	goto	l98
  1995   0011AC                     u3660:
  1996   0011AC  C05C  F040         	movff	convert_rgb2hue@b,_convert_rgb2hue$307
  1997   0011B0  C05D  F041         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$307+1
  1998   0011B4  C05E  F042         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$307+2
  1999   0011B8  C05F  F043         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$307+3
  2000   0011BC  EFE8  F008         	goto	l100
  2001   0011C0                     l98:
  2002   0011C0  C054  F040         	movff	convert_rgb2hue@r,_convert_rgb2hue$307
  2003   0011C4  C055  F041         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$307+1
  2004   0011C8  C056  F042         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$307+2
  2005   0011CC  C057  F043         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$307+3
  2006   0011D0                     l100:
  2007   0011D0  C040  F048         	movff	_convert_rgb2hue$307,convert_rgb2hue@max
  2008   0011D4  C041  F049         	movff	_convert_rgb2hue$307+1,convert_rgb2hue@max+1
  2009   0011D8  C042  F04A         	movff	_convert_rgb2hue$307+2,convert_rgb2hue@max+2
  2010   0011DC  C043  F04B         	movff	_convert_rgb2hue$307+3,convert_rgb2hue@max+3
  2011   0011E0                     l3928:
  2012                           
  2013                           ;color.c: 130:     diff = max - min;
  2014   0011E0  C048  F011         	movff	convert_rgb2hue@max,___flsub@b
  2015   0011E4  C049  F012         	movff	convert_rgb2hue@max+1,___flsub@b+1
  2016   0011E8  C04A  F013         	movff	convert_rgb2hue@max+2,___flsub@b+2
  2017   0011EC  C04B  F014         	movff	convert_rgb2hue@max+3,___flsub@b+3
  2018   0011F0  C044  F015         	movff	convert_rgb2hue@min,___flsub@a
  2019   0011F4  C045  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2020   0011F8  C046  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2021   0011FC  C047  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2022   001200  EC9F  F019         	call	___flsub	;wreg free
  2023   001204  C011  F04C         	movff	?___flsub,convert_rgb2hue@diff
  2024   001208  C012  F04D         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2025   00120C  C013  F04E         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2026   001210  C014  F04F         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2027                           
  2028                           ;color.c: 131:     if (max == min) {
  2029   001214  C048  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2030   001218  C049  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2031   00121C  C04A  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2032   001220  C04B  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2033   001224  C044  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2034   001228  C045  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2035   00122C  C046  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2036   001230  C047  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2037   001234  EC5D  F017         	call	___fleq	;wreg free
  2038   001238  A0D8               	btfss	status,0,c
  2039   00123A  EF21  F009         	goto	u3671
  2040   00123E  EF23  F009         	goto	u3670
  2041   001242                     u3671:
  2042   001242  EF2D  F009         	goto	l3932
  2043   001246                     u3670:
  2044   001246                     
  2045                           ;color.c: 132:         hue = 0;
  2046   001246  0E00               	movlw	0
  2047   001248  6E50               	movwf	convert_rgb2hue@hue^0,c
  2048   00124A  0E00               	movlw	0
  2049   00124C  6E51               	movwf	(convert_rgb2hue@hue+1)^0,c
  2050   00124E  0E00               	movlw	0
  2051   001250  6E52               	movwf	(convert_rgb2hue@hue+2)^0,c
  2052   001252  0E00               	movlw	0
  2053   001254  6E53               	movwf	(convert_rgb2hue@hue+3)^0,c
  2054                           
  2055                           ;color.c: 133:     } else {
  2056   001256  EFB7  F00A         	goto	l102
  2057   00125A                     l3932:
  2058                           
  2059                           ;color.c: 134:         if (max == r){
  2060   00125A  C048  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2061   00125E  C049  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2062   001262  C04A  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2063   001266  C04B  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2064   00126A  C054  F005         	movff	convert_rgb2hue@r,___fleq@ff2
  2065   00126E  C055  F006         	movff	convert_rgb2hue@r+1,___fleq@ff2+1
  2066   001272  C056  F007         	movff	convert_rgb2hue@r+2,___fleq@ff2+2
  2067   001276  C057  F008         	movff	convert_rgb2hue@r+3,___fleq@ff2+3
  2068   00127A  EC5D  F017         	call	___fleq	;wreg free
  2069   00127E  A0D8               	btfss	status,0,c
  2070   001280  EF44  F009         	goto	u3681
  2071   001284  EF46  F009         	goto	u3680
  2072   001288                     u3681:
  2073   001288  EF72  F009         	goto	l103
  2074   00128C                     u3680:
  2075   00128C                     
  2076                           ;color.c: 135:             hue = (b - g) / diff;
  2077   00128C  C058  F015         	movff	convert_rgb2hue@g,___flsub@a
  2078   001290  C059  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2079   001294  C05A  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2080   001298  C05B  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2081   00129C  C05C  F011         	movff	convert_rgb2hue@b,___flsub@b
  2082   0012A0  C05D  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2083   0012A4  C05E  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2084   0012A8  C05F  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2085   0012AC  EC9F  F019         	call	___flsub	;wreg free
  2086   0012B0  C011  F019         	movff	?___flsub,___fldiv@b
  2087   0012B4  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2088   0012B8  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2089   0012BC  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2090   0012C0  C04C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2091   0012C4  C04D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2092   0012C8  C04E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2093   0012CC  C04F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2094   0012D0  EC3B  F00F         	call	___fldiv	;wreg free
  2095   0012D4  C019  F050         	movff	?___fldiv,convert_rgb2hue@hue
  2096   0012D8  C01A  F051         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2097   0012DC  C01B  F052         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2098   0012E0  C01C  F053         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2099   0012E4                     l103:
  2100                           
  2101                           ;color.c: 137:         if (g > r && g > b) {
  2102   0012E4  C054  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2103   0012E8  C055  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2104   0012EC  C056  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2105   0012F0  C057  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2106   0012F4  C058  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2107   0012F8  C059  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2108   0012FC  C05A  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2109   001300  C05B  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2110   001304  EC6E  F015         	call	___flge	;wreg free
  2111   001308  B0D8               	btfsc	status,0,c
  2112   00130A  EF89  F009         	goto	u3691
  2113   00130E  EF8B  F009         	goto	u3690
  2114   001312                     u3691:
  2115   001312  EFEA  F009         	goto	l104
  2116   001316                     u3690:
  2117   001316  C05C  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2118   00131A  C05D  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2119   00131E  C05E  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2120   001322  C05F  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2121   001326  C058  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2122   00132A  C059  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2123   00132E  C05A  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2124   001332  C05B  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2125   001336  EC6E  F015         	call	___flge	;wreg free
  2126   00133A  B0D8               	btfsc	status,0,c
  2127   00133C  EFA2  F009         	goto	u3701
  2128   001340  EFA4  F009         	goto	u3700
  2129   001344                     u3701:
  2130   001344  EFEA  F009         	goto	l104
  2131   001348                     u3700:
  2132   001348                     
  2133                           ;color.c: 139:             hue = (b - r) / diff;
  2134   001348  C054  F015         	movff	convert_rgb2hue@r,___flsub@a
  2135   00134C  C055  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2136   001350  C056  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2137   001354  C057  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2138   001358  C05C  F011         	movff	convert_rgb2hue@b,___flsub@b
  2139   00135C  C05D  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2140   001360  C05E  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2141   001364  C05F  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2142   001368  EC9F  F019         	call	___flsub	;wreg free
  2143   00136C  C011  F019         	movff	?___flsub,___fldiv@b
  2144   001370  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2145   001374  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2146   001378  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2147   00137C  C04C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2148   001380  C04D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2149   001384  C04E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2150   001388  C04F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2151   00138C  EC3B  F00F         	call	___fldiv	;wreg free
  2152   001390  C019  F050         	movff	?___fldiv,convert_rgb2hue@hue
  2153   001394  C01A  F051         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2154   001398  C01B  F052         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2155   00139C  C01C  F053         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2156                           
  2157                           ;color.c: 140:             hue = hue + 2;
  2158   0013A0  C050  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2159   0013A4  C051  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2160   0013A8  C052  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2161   0013AC  C053  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2162   0013B0  0E00               	movlw	0
  2163   0013B2  6E05               	movwf	___fladd@a^0,c
  2164   0013B4  0E00               	movlw	0
  2165   0013B6  6E06               	movwf	(___fladd@a+1)^0,c
  2166   0013B8  0E00               	movlw	0
  2167   0013BA  6E07               	movwf	(___fladd@a+2)^0,c
  2168   0013BC  0E40               	movlw	64
  2169   0013BE  6E08               	movwf	(___fladd@a+3)^0,c
  2170   0013C0  ECC6  F00A         	call	___fladd	;wreg free
  2171   0013C4  C001  F050         	movff	?___fladd,convert_rgb2hue@hue
  2172   0013C8  C002  F051         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2173   0013CC  C003  F052         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2174   0013D0  C004  F053         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2175   0013D4                     l104:
  2176                           
  2177                           ;color.c: 142:         if (b > r && b > g) {
  2178   0013D4  C054  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2179   0013D8  C055  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2180   0013DC  C056  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2181   0013E0  C057  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2182   0013E4  C05C  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2183   0013E8  C05D  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2184   0013EC  C05E  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2185   0013F0  C05F  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2186   0013F4  EC6E  F015         	call	___flge	;wreg free
  2187   0013F8  B0D8               	btfsc	status,0,c
  2188   0013FA  EF01  F00A         	goto	u3711
  2189   0013FE  EF03  F00A         	goto	u3710
  2190   001402                     u3711:
  2191   001402  EF7C  F00A         	goto	l3944
  2192   001406                     u3710:
  2193   001406  C058  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2194   00140A  C059  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2195   00140E  C05A  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2196   001412  C05B  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2197   001416  C05C  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2198   00141A  C05D  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2199   00141E  C05E  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2200   001422  C05F  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2201   001426  EC6E  F015         	call	___flge	;wreg free
  2202   00142A  B0D8               	btfsc	status,0,c
  2203   00142C  EF1A  F00A         	goto	u3721
  2204   001430  EF1C  F00A         	goto	u3720
  2205   001434                     u3721:
  2206   001434  EF7C  F00A         	goto	l3944
  2207   001438                     u3720:
  2208   001438                     
  2209                           ;color.c: 143:             diff = b - min;
  2210   001438  C05C  F011         	movff	convert_rgb2hue@b,___flsub@b
  2211   00143C  C05D  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2212   001440  C05E  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2213   001444  C05F  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2214   001448  C044  F015         	movff	convert_rgb2hue@min,___flsub@a
  2215   00144C  C045  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2216   001450  C046  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2217   001454  C047  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2218   001458  EC9F  F019         	call	___flsub	;wreg free
  2219   00145C  C011  F04C         	movff	?___flsub,convert_rgb2hue@diff
  2220   001460  C012  F04D         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2221   001464  C013  F04E         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2222   001468  C014  F04F         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2223                           
  2224                           ;color.c: 144:             hue = (r - g) / diff;
  2225   00146C  C058  F015         	movff	convert_rgb2hue@g,___flsub@a
  2226   001470  C059  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2227   001474  C05A  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2228   001478  C05B  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2229   00147C  C054  F011         	movff	convert_rgb2hue@r,___flsub@b
  2230   001480  C055  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2231   001484  C056  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2232   001488  C057  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2233   00148C  EC9F  F019         	call	___flsub	;wreg free
  2234   001490  C011  F019         	movff	?___flsub,___fldiv@b
  2235   001494  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2236   001498  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2237   00149C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2238   0014A0  C04C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2239   0014A4  C04D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2240   0014A8  C04E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2241   0014AC  C04F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2242   0014B0  EC3B  F00F         	call	___fldiv	;wreg free
  2243   0014B4  C019  F050         	movff	?___fldiv,convert_rgb2hue@hue
  2244   0014B8  C01A  F051         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2245   0014BC  C01B  F052         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2246   0014C0  C01C  F053         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2247                           
  2248                           ;color.c: 145:             hue = hue + 4;
  2249   0014C4  C050  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2250   0014C8  C051  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2251   0014CC  C052  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2252   0014D0  C053  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2253   0014D4  0E00               	movlw	0
  2254   0014D6  6E05               	movwf	___fladd@a^0,c
  2255   0014D8  0E00               	movlw	0
  2256   0014DA  6E06               	movwf	(___fladd@a+1)^0,c
  2257   0014DC  0E80               	movlw	128
  2258   0014DE  6E07               	movwf	(___fladd@a+2)^0,c
  2259   0014E0  0E40               	movlw	64
  2260   0014E2  6E08               	movwf	(___fladd@a+3)^0,c
  2261   0014E4  ECC6  F00A         	call	___fladd	;wreg free
  2262   0014E8  C001  F050         	movff	?___fladd,convert_rgb2hue@hue
  2263   0014EC  C002  F051         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2264   0014F0  C003  F052         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2265   0014F4  C004  F053         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2266   0014F8                     l3944:
  2267                           
  2268                           ;color.c: 148:         hue = hue * 60;
  2269   0014F8  C050  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2270   0014FC  C051  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2271   001500  C052  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2272   001504  C053  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2273   001508  0E00               	movlw	0
  2274   00150A  6E05               	movwf	___flmul@a^0,c
  2275   00150C  0E00               	movlw	0
  2276   00150E  6E06               	movwf	(___flmul@a+1)^0,c
  2277   001510  0E70               	movlw	112
  2278   001512  6E07               	movwf	(___flmul@a+2)^0,c
  2279   001514  0E42               	movlw	66
  2280   001516  6E08               	movwf	(___flmul@a+3)^0,c
  2281   001518  EC26  F00D         	call	___flmul	;wreg free
  2282   00151C  C001  F050         	movff	?___flmul,convert_rgb2hue@hue
  2283   001520  C002  F051         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2284   001524  C003  F052         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2285   001528  C004  F053         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2286   00152C                     
  2287                           ;color.c: 149:         if (hue < 0) {
  2288   00152C  BE53               	btfsc	(convert_rgb2hue@hue+3)^0,7,c
  2289   00152E  EF9D  F00A         	goto	u3730
  2290   001532  EF9B  F00A         	goto	u3731
  2291   001536                     u3731:
  2292   001536  EFB7  F00A         	goto	l102
  2293   00153A                     u3730:
  2294   00153A                     
  2295                           ;color.c: 150:             hue = hue + 360;
  2296   00153A  C050  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2297   00153E  C051  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2298   001542  C052  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2299   001546  C053  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2300   00154A  0E00               	movlw	0
  2301   00154C  6E05               	movwf	___fladd@a^0,c
  2302   00154E  0E00               	movlw	0
  2303   001550  6E06               	movwf	(___fladd@a+1)^0,c
  2304   001552  0EB4               	movlw	180
  2305   001554  6E07               	movwf	(___fladd@a+2)^0,c
  2306   001556  0E43               	movlw	67
  2307   001558  6E08               	movwf	(___fladd@a+3)^0,c
  2308   00155A  ECC6  F00A         	call	___fladd	;wreg free
  2309   00155E  C001  F050         	movff	?___fladd,convert_rgb2hue@hue
  2310   001562  C002  F051         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2311   001566  C003  F052         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2312   00156A  C004  F053         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2313   00156E                     l102:
  2314                           
  2315                           ;color.c: 153:     return (unsigned int)hue;
  2316   00156E  C050  F001         	movff	convert_rgb2hue@hue,___fltol@f1
  2317   001572  C051  F002         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2318   001576  C052  F003         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2319   00157A  C053  F004         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2320   00157E  ECEB  F014         	call	___fltol	;wreg free
  2321   001582  C001  F032         	movff	?___fltol,?_convert_rgb2hue
  2322   001586  C002  F033         	movff	?___fltol+1,?_convert_rgb2hue+1
  2323   00158A  0012               	return		;funcret
  2324   00158C                     __end_of_convert_rgb2hue:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function ___xxtofl *****************
  2328 ;; Defined at:
  2329 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  sign            1    wreg     unsigned char 
  2332 ;;  val             4    7[COMRAM] long 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  sign            1   15[COMRAM] unsigned char 
  2335 ;;  arg             4   17[COMRAM] unsigned long 
  2336 ;;  exp             1   16[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  4    7[COMRAM] unsigned char 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;Total ram usage:       14 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_convert_rgb2hue
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text5
  2360   002210                     __ptext5:
  2361                           	callstack 0
  2362   002210                     ___xxtofl:
  2363                           	callstack 28
  2364                           
  2365                           ;incstack = 0
  2366                           ;___xxtofl@sign stored from wreg
  2367   002210  6E10               	movwf	___xxtofl@sign^0,c
  2368   002212  5010               	movf	___xxtofl@sign^0,w,c
  2369   002214  B4D8               	btfsc	status,2,c
  2370   002216  EF0F  F011         	goto	u3511
  2371   00221A  EF11  F011         	goto	u3510
  2372   00221E                     u3511:
  2373   00221E  EF33  F011         	goto	l1189
  2374   002222                     u3510:
  2375   002222  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2376   002224  EF18  F011         	goto	u3520
  2377   002228  EF16  F011         	goto	u3521
  2378   00222C                     u3521:
  2379   00222C  EF33  F011         	goto	l1189
  2380   002230                     u3520:
  2381   002230  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  2382   002234  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  2383   002238  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  2384   00223C  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  2385   002240  1E0C               	comf	??___xxtofl^0,f,c
  2386   002242  1E0D               	comf	(??___xxtofl+1)^0,f,c
  2387   002244  1E0E               	comf	(??___xxtofl+2)^0,f,c
  2388   002246  1E0F               	comf	(??___xxtofl+3)^0,f,c
  2389   002248  2A0C               	incf	??___xxtofl^0,f,c
  2390   00224A  0E00               	movlw	0
  2391   00224C  220D               	addwfc	(??___xxtofl+1)^0,f,c
  2392   00224E  220E               	addwfc	(??___xxtofl+2)^0,f,c
  2393   002250  220F               	addwfc	(??___xxtofl+3)^0,f,c
  2394   002252  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  2395   002256  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  2396   00225A  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  2397   00225E  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  2398   002262  EF3B  F011         	goto	l3846
  2399   002266                     l1189:
  2400   002266  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  2401   00226A  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2402   00226E  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2403   002272  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2404   002276                     l3846:
  2405   002276  5008               	movf	___xxtofl@val^0,w,c
  2406   002278  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  2407   00227A  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  2408   00227C  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  2409   00227E  A4D8               	btfss	status,2,c
  2410   002280  EF44  F011         	goto	u3531
  2411   002284  EF46  F011         	goto	u3530
  2412   002288                     u3531:
  2413   002288  EF50  F011         	goto	l3852
  2414   00228C                     u3530:
  2415   00228C  0E00               	movlw	0
  2416   00228E  6E08               	movwf	?___xxtofl^0,c
  2417   002290  0E00               	movlw	0
  2418   002292  6E09               	movwf	(?___xxtofl+1)^0,c
  2419   002294  0E00               	movlw	0
  2420   002296  6E0A               	movwf	(?___xxtofl+2)^0,c
  2421   002298  0E00               	movlw	0
  2422   00229A  6E0B               	movwf	(?___xxtofl+3)^0,c
  2423   00229C  EFE1  F011         	goto	l1192
  2424   0022A0                     l3852:
  2425   0022A0  0E96               	movlw	150
  2426   0022A2  6E11               	movwf	___xxtofl@exp^0,c
  2427   0022A4  EF5A  F011         	goto	l3856
  2428   0022A8                     l3854:
  2429   0022A8  2A11               	incf	___xxtofl@exp^0,f,c
  2430   0022AA  90D8               	bcf	status,0,c
  2431   0022AC  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2432   0022AE  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2433   0022B0  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2434   0022B2  3212               	rrcf	___xxtofl@arg^0,f,c
  2435   0022B4                     l3856:
  2436   0022B4  0E00               	movlw	0
  2437   0022B6  1412               	andwf	___xxtofl@arg^0,w,c
  2438   0022B8  6E0C               	movwf	??___xxtofl^0,c
  2439   0022BA  0E00               	movlw	0
  2440   0022BC  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2441   0022BE  6E0D               	movwf	(??___xxtofl+1)^0,c
  2442   0022C0  0E00               	movlw	0
  2443   0022C2  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2444   0022C4  6E0E               	movwf	(??___xxtofl+2)^0,c
  2445   0022C6  0EFE               	movlw	254
  2446   0022C8  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2447   0022CA  6E0F               	movwf	(??___xxtofl+3)^0,c
  2448   0022CC  500C               	movf	??___xxtofl^0,w,c
  2449   0022CE  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2450   0022D0  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2451   0022D2  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2452   0022D4  A4D8               	btfss	status,2,c
  2453   0022D6  EF6F  F011         	goto	u3541
  2454   0022DA  EF71  F011         	goto	u3540
  2455   0022DE                     u3541:
  2456   0022DE  EF54  F011         	goto	l3854
  2457   0022E2                     u3540:
  2458   0022E2  EF7F  F011         	goto	l1196
  2459   0022E6                     l3858:
  2460   0022E6  2A11               	incf	___xxtofl@exp^0,f,c
  2461   0022E8  0E01               	movlw	1
  2462   0022EA  2612               	addwf	___xxtofl@arg^0,f,c
  2463   0022EC  0E00               	movlw	0
  2464   0022EE  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  2465   0022F0  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  2466   0022F2  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  2467   0022F4  90D8               	bcf	status,0,c
  2468   0022F6  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  2469   0022F8  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  2470   0022FA  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  2471   0022FC  3212               	rrcf	___xxtofl@arg^0,f,c
  2472   0022FE                     l1196:
  2473   0022FE  0E00               	movlw	0
  2474   002300  1412               	andwf	___xxtofl@arg^0,w,c
  2475   002302  6E0C               	movwf	??___xxtofl^0,c
  2476   002304  0E00               	movlw	0
  2477   002306  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  2478   002308  6E0D               	movwf	(??___xxtofl+1)^0,c
  2479   00230A  0E00               	movlw	0
  2480   00230C  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  2481   00230E  6E0E               	movwf	(??___xxtofl+2)^0,c
  2482   002310  0EFF               	movlw	255
  2483   002312  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  2484   002314  6E0F               	movwf	(??___xxtofl+3)^0,c
  2485   002316  500C               	movf	??___xxtofl^0,w,c
  2486   002318  100D               	iorwf	(??___xxtofl+1)^0,w,c
  2487   00231A  100E               	iorwf	(??___xxtofl+2)^0,w,c
  2488   00231C  100F               	iorwf	(??___xxtofl+3)^0,w,c
  2489   00231E  A4D8               	btfss	status,2,c
  2490   002320  EF94  F011         	goto	u3551
  2491   002324  EF96  F011         	goto	u3550
  2492   002328                     u3551:
  2493   002328  EF73  F011         	goto	l3858
  2494   00232C                     u3550:
  2495   00232C  EF9E  F011         	goto	l3866
  2496   002330                     l3864:
  2497   002330  0611               	decf	___xxtofl@exp^0,f,c
  2498   002332  90D8               	bcf	status,0,c
  2499   002334  3612               	rlcf	___xxtofl@arg^0,f,c
  2500   002336  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  2501   002338  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  2502   00233A  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  2503   00233C                     l3866:
  2504   00233C  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  2505   00233E  EFA3  F011         	goto	u3561
  2506   002342  EFA5  F011         	goto	u3560
  2507   002346                     u3561:
  2508   002346  EFAD  F011         	goto	l1203
  2509   00234A                     u3560:
  2510   00234A  0E02               	movlw	2
  2511   00234C  6011               	cpfslt	___xxtofl@exp^0,c
  2512   00234E  EFAB  F011         	goto	u3571
  2513   002352  EFAD  F011         	goto	u3570
  2514   002356                     u3571:
  2515   002356  EF98  F011         	goto	l3864
  2516   00235A                     u3570:
  2517   00235A                     l1203:
  2518   00235A  B011               	btfsc	___xxtofl@exp^0,0,c
  2519   00235C  EFB2  F011         	goto	u3581
  2520   002360  EFB4  F011         	goto	u3580
  2521   002364                     u3581:
  2522   002364  EFB5  F011         	goto	l3872
  2523   002368                     u3580:
  2524   002368  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  2525   00236A                     l3872:
  2526   00236A  90D8               	bcf	status,0,c
  2527   00236C  3211               	rrcf	___xxtofl@exp^0,f,c
  2528   00236E  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  2529   002372  6A0D               	clrf	(??___xxtofl+1)^0,c
  2530   002374  6A0E               	clrf	(??___xxtofl+2)^0,c
  2531   002376  6A0F               	clrf	(??___xxtofl+3)^0,c
  2532   002378  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  2533   00237C  6A0E               	clrf	(??___xxtofl+2)^0,c
  2534   00237E  6A0D               	clrf	(??___xxtofl+1)^0,c
  2535   002380  6A0C               	clrf	??___xxtofl^0,c
  2536   002382  500C               	movf	??___xxtofl^0,w,c
  2537   002384  1212               	iorwf	___xxtofl@arg^0,f,c
  2538   002386  500D               	movf	(??___xxtofl+1)^0,w,c
  2539   002388  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  2540   00238A  500E               	movf	(??___xxtofl+2)^0,w,c
  2541   00238C  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  2542   00238E  500F               	movf	(??___xxtofl+3)^0,w,c
  2543   002390  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  2544   002392  5010               	movf	___xxtofl@sign^0,w,c
  2545   002394  B4D8               	btfsc	status,2,c
  2546   002396  EFCF  F011         	goto	u3591
  2547   00239A  EFD1  F011         	goto	u3590
  2548   00239E                     u3591:
  2549   00239E  EFD9  F011         	goto	l3882
  2550   0023A2                     u3590:
  2551   0023A2  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  2552   0023A4  EFD8  F011         	goto	u3600
  2553   0023A8  EFD6  F011         	goto	u3601
  2554   0023AC                     u3601:
  2555   0023AC  EFD9  F011         	goto	l3882
  2556   0023B0                     u3600:
  2557   0023B0  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  2558   0023B2                     l3882:
  2559   0023B2  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  2560   0023B6  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  2561   0023BA  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  2562   0023BE  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  2563   0023C2                     l1192:
  2564   0023C2  0012               	return		;funcret
  2565   0023C4                     __end_of___xxtofl:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function ___lwdiv *****************
  2569 ;; Defined at:
  2570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  dividend        2    0[COMRAM] unsigned int 
  2573 ;;  divisor         2    2[COMRAM] unsigned int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  quotient        2    4[COMRAM] unsigned int 
  2576 ;;  counter         1    6[COMRAM] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    0[COMRAM] unsigned int 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;Total ram usage:        7 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_convert_rgb2hue
  2596 ;;		_setMotorPWM
  2597 ;;		_ADC2String
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text6
  2602   003134                     __ptext6:
  2603                           	callstack 0
  2604   003134                     ___lwdiv:
  2605                           	callstack 28
  2606   003134  0E00               	movlw	0
  2607   003136  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2608   003138  0E00               	movlw	0
  2609   00313A  6E05               	movwf	___lwdiv@quotient^0,c
  2610   00313C  5003               	movf	___lwdiv@divisor^0,w,c
  2611   00313E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2612   003140  B4D8               	btfsc	status,2,c
  2613   003142  EFA5  F018         	goto	u3481
  2614   003146  EFA7  F018         	goto	u3480
  2615   00314A                     u3481:
  2616   00314A  EFCF  F018         	goto	l1025
  2617   00314E                     u3480:
  2618   00314E  0E01               	movlw	1
  2619   003150  6E07               	movwf	___lwdiv@counter^0,c
  2620   003152  EFAF  F018         	goto	l3826
  2621   003156                     l3824:
  2622   003156  90D8               	bcf	status,0,c
  2623   003158  3603               	rlcf	___lwdiv@divisor^0,f,c
  2624   00315A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2625   00315C  2A07               	incf	___lwdiv@counter^0,f,c
  2626   00315E                     l3826:
  2627   00315E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2628   003160  EFB4  F018         	goto	u3491
  2629   003164  EFB6  F018         	goto	u3490
  2630   003168                     u3491:
  2631   003168  EFAB  F018         	goto	l3824
  2632   00316C                     u3490:
  2633   00316C                     l3828:
  2634   00316C  90D8               	bcf	status,0,c
  2635   00316E  3605               	rlcf	___lwdiv@quotient^0,f,c
  2636   003170  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2637   003172  5003               	movf	___lwdiv@divisor^0,w,c
  2638   003174  5C01               	subwf	___lwdiv@dividend^0,w,c
  2639   003176  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2640   003178  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2641   00317A  A0D8               	btfss	status,0,c
  2642   00317C  EFC2  F018         	goto	u3501
  2643   003180  EFC4  F018         	goto	u3500
  2644   003184                     u3501:
  2645   003184  EFC9  F018         	goto	l3836
  2646   003188                     u3500:
  2647   003188  5003               	movf	___lwdiv@divisor^0,w,c
  2648   00318A  5E01               	subwf	___lwdiv@dividend^0,f,c
  2649   00318C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2650   00318E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2651   003190  8005               	bsf	___lwdiv@quotient^0,0,c
  2652   003192                     l3836:
  2653   003192  90D8               	bcf	status,0,c
  2654   003194  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2655   003196  3203               	rrcf	___lwdiv@divisor^0,f,c
  2656   003198  2E07               	decfsz	___lwdiv@counter^0,f,c
  2657   00319A  EFB6  F018         	goto	l3828
  2658   00319E                     l1025:
  2659   00319E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2660   0031A2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2661   0031A6  0012               	return		;funcret
  2662   0031A8                     __end_of___lwdiv:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function ___fltol *****************
  2666 ;; Defined at:
  2667 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  f1              4    0[COMRAM] unsigned int 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  exp1            1    9[COMRAM] unsigned char 
  2672 ;;  sign1           1    8[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  4    0[COMRAM] long 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;Total ram usage:       10 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_convert_rgb2hue
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text7
  2696   0029D6                     __ptext7:
  2697                           	callstack 0
  2698   0029D6                     ___fltol:
  2699                           	callstack 28
  2700   0029D6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2701   0029D8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2702   0029DA  6E0A               	movwf	___fltol@exp1^0,c
  2703   0029DC  500A               	movf	___fltol@exp1^0,w,c
  2704   0029DE  A4D8               	btfss	status,2,c
  2705   0029E0  EFF4  F014         	goto	u3411
  2706   0029E4  EFF6  F014         	goto	u3410
  2707   0029E8                     u3411:
  2708   0029E8  EF00  F015         	goto	l3780
  2709   0029EC                     u3410:
  2710   0029EC                     l3776:
  2711   0029EC  0E00               	movlw	0
  2712   0029EE  6E01               	movwf	?___fltol^0,c
  2713   0029F0  0E00               	movlw	0
  2714   0029F2  6E02               	movwf	(?___fltol+1)^0,c
  2715   0029F4  0E00               	movlw	0
  2716   0029F6  6E03               	movwf	(?___fltol+2)^0,c
  2717   0029F8  0E00               	movlw	0
  2718   0029FA  6E04               	movwf	(?___fltol+3)^0,c
  2719   0029FC  EF6D  F015         	goto	l831
  2720   002A00                     l3780:
  2721   002A00  C001  F005         	movff	___fltol@f1,??___fltol
  2722   002A04  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2723   002A08  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2724   002A0C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2725   002A10  0E20               	movlw	32
  2726   002A12  EF10  F015         	goto	u3420
  2727   002A16                     u3425:
  2728   002A16  90D8               	bcf	status,0,c
  2729   002A18  3208               	rrcf	(??___fltol+3)^0,f,c
  2730   002A1A  3207               	rrcf	(??___fltol+2)^0,f,c
  2731   002A1C  3206               	rrcf	(??___fltol+1)^0,f,c
  2732   002A1E  3205               	rrcf	??___fltol^0,f,c
  2733   002A20                     u3420:
  2734   002A20  2EE8               	decfsz	wreg,f,c
  2735   002A22  EF0B  F015         	goto	u3425
  2736   002A26  5005               	movf	??___fltol^0,w,c
  2737   002A28  6E09               	movwf	___fltol@sign1^0,c
  2738   002A2A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2739   002A2C  0EFF               	movlw	255
  2740   002A2E  1601               	andwf	___fltol@f1^0,f,c
  2741   002A30  0EFF               	movlw	255
  2742   002A32  1602               	andwf	(___fltol@f1+1)^0,f,c
  2743   002A34  0EFF               	movlw	255
  2744   002A36  1603               	andwf	(___fltol@f1+2)^0,f,c
  2745   002A38  0E00               	movlw	0
  2746   002A3A  1604               	andwf	(___fltol@f1+3)^0,f,c
  2747   002A3C  0E96               	movlw	150
  2748   002A3E  5E0A               	subwf	___fltol@exp1^0,f,c
  2749   002A40  BE0A               	btfsc	___fltol@exp1^0,7,c
  2750   002A42  EF27  F015         	goto	u3430
  2751   002A46  EF25  F015         	goto	u3431
  2752   002A4A                     u3431:
  2753   002A4A  EF3D  F015         	goto	l3800
  2754   002A4E                     u3430:
  2755   002A4E  500A               	movf	___fltol@exp1^0,w,c
  2756   002A50  0A80               	xorlw	128
  2757   002A52  0F97               	addlw	151
  2758   002A54  B0D8               	btfsc	status,0,c
  2759   002A56  EF2F  F015         	goto	u3441
  2760   002A5A  EF31  F015         	goto	u3440
  2761   002A5E                     u3441:
  2762   002A5E  EF33  F015         	goto	l3796
  2763   002A62                     u3440:
  2764   002A62  EFF6  F014         	goto	l3776
  2765   002A66                     l3796:
  2766   002A66  90D8               	bcf	status,0,c
  2767   002A68  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2768   002A6A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2769   002A6C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2770   002A6E  3201               	rrcf	___fltol@f1^0,f,c
  2771   002A70  3E0A               	incfsz	___fltol@exp1^0,f,c
  2772   002A72  EF33  F015         	goto	l3796
  2773   002A76  EF55  F015         	goto	l3810
  2774   002A7A                     l3800:
  2775   002A7A  0E1F               	movlw	31
  2776   002A7C  640A               	cpfsgt	___fltol@exp1^0,c
  2777   002A7E  EF43  F015         	goto	u3451
  2778   002A82  EF45  F015         	goto	u3450
  2779   002A86                     u3451:
  2780   002A86  EF4D  F015         	goto	l3808
  2781   002A8A                     u3450:
  2782   002A8A  EFF6  F014         	goto	l3776
  2783   002A8E                     l3806:
  2784   002A8E  90D8               	bcf	status,0,c
  2785   002A90  3601               	rlcf	___fltol@f1^0,f,c
  2786   002A92  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2787   002A94  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2788   002A96  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2789   002A98  060A               	decf	___fltol@exp1^0,f,c
  2790   002A9A                     l3808:
  2791   002A9A  500A               	movf	___fltol@exp1^0,w,c
  2792   002A9C  A4D8               	btfss	status,2,c
  2793   002A9E  EF53  F015         	goto	u3461
  2794   002AA2  EF55  F015         	goto	u3460
  2795   002AA6                     u3461:
  2796   002AA6  EF47  F015         	goto	l3806
  2797   002AAA                     u3460:
  2798   002AAA                     l3810:
  2799   002AAA  5009               	movf	___fltol@sign1^0,w,c
  2800   002AAC  B4D8               	btfsc	status,2,c
  2801   002AAE  EF5B  F015         	goto	u3471
  2802   002AB2  EF5D  F015         	goto	u3470
  2803   002AB6                     u3471:
  2804   002AB6  EF65  F015         	goto	l3814
  2805   002ABA                     u3470:
  2806   002ABA  1E04               	comf	(___fltol@f1+3)^0,f,c
  2807   002ABC  1E03               	comf	(___fltol@f1+2)^0,f,c
  2808   002ABE  1E02               	comf	(___fltol@f1+1)^0,f,c
  2809   002AC0  6C01               	negf	___fltol@f1^0,c
  2810   002AC2  0E00               	movlw	0
  2811   002AC4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2812   002AC6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2813   002AC8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2814   002ACA                     l3814:
  2815   002ACA  C001  F001         	movff	___fltol@f1,?___fltol
  2816   002ACE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2817   002AD2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2818   002AD6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2819   002ADA                     l831:
  2820   002ADA  0012               	return		;funcret
  2821   002ADC                     __end_of___fltol:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function ___flsub *****************
  2825 ;; Defined at:
  2826 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  b               4   16[COMRAM] long 
  2829 ;;  a               4   20[COMRAM] long 
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  4   16[COMRAM] long 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2841 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2844 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2845 ;;Total ram usage:        8 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 1
  2848 ;; This function calls:
  2849 ;;		___fladd
  2850 ;; This function is called by:
  2851 ;;		_convert_rgb2hue
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text8
  2856   00333E                     __ptext8:
  2857                           	callstack 0
  2858   00333E                     ___flsub:
  2859                           	callstack 27
  2860   00333E  0E00               	movlw	0
  2861   003340  1A15               	xorwf	___flsub@a^0,f,c
  2862   003342  0E00               	movlw	0
  2863   003344  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2864   003346  0E00               	movlw	0
  2865   003348  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2866   00334A  0E80               	movlw	128
  2867   00334C  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2868   00334E  C011  F001         	movff	___flsub@b,___fladd@b
  2869   003352  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2870   003356  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2871   00335A  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2872   00335E  C015  F005         	movff	___flsub@a,___fladd@a
  2873   003362  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2874   003366  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2875   00336A  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2876   00336E  ECC6  F00A         	call	___fladd	;wreg free
  2877   003372  C001  F011         	movff	?___fladd,?___flsub
  2878   003376  C002  F012         	movff	?___fladd+1,?___flsub+1
  2879   00337A  C003  F013         	movff	?___fladd+2,?___flsub+2
  2880   00337E  C004  F014         	movff	?___fladd+3,?___flsub+3
  2881   003382  0012               	return		;funcret
  2882   003384                     __end_of___flsub:
  2883                           	callstack 0
  2884                           
  2885 ;; *************** function ___fladd *****************
  2886 ;; Defined at:
  2887 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  b               4    0[COMRAM] long 
  2890 ;;  a               4    4[COMRAM] long 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  grs             1   15[COMRAM] unsigned char 
  2893 ;;  bexp            1   14[COMRAM] unsigned char 
  2894 ;;  aexp            1   13[COMRAM] unsigned char 
  2895 ;;  signs           1   12[COMRAM] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  4    0[COMRAM] unsigned char 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2905 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;Total ram usage:       16 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; This function calls:
  2912 ;;		Nothing
  2913 ;; This function is called by:
  2914 ;;		_convert_rgb2hue
  2915 ;;		___flsub
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text9
  2920   00158C                     __ptext9:
  2921                           	callstack 0
  2922   00158C                     ___fladd:
  2923                           	callstack 27
  2924   00158C  5004               	movf	(___fladd@b+3)^0,w,c
  2925   00158E  0B80               	andlw	128
  2926   001590  6E0D               	movwf	___fladd@signs^0,c
  2927   001592  5004               	movf	(___fladd@b+3)^0,w,c
  2928   001594  2404               	addwf	(___fladd@b+3)^0,w,c
  2929   001596  6E0F               	movwf	___fladd@bexp^0,c
  2930   001598  AE03               	btfss	(___fladd@b+2)^0,7,c
  2931   00159A  EFD1  F00A         	goto	u2481
  2932   00159E  EFD3  F00A         	goto	u2480
  2933   0015A2                     u2481:
  2934   0015A2  EFD4  F00A         	goto	l3194
  2935   0015A6                     u2480:
  2936   0015A6  800F               	bsf	___fladd@bexp^0,0,c
  2937   0015A8                     l3194:
  2938   0015A8  500F               	movf	___fladd@bexp^0,w,c
  2939   0015AA  B4D8               	btfsc	status,2,c
  2940   0015AC  EFDA  F00A         	goto	u2491
  2941   0015B0  EFDC  F00A         	goto	u2490
  2942   0015B4                     u2491:
  2943   0015B4  EFF1  F00A         	goto	l3204
  2944   0015B8                     u2490:
  2945   0015B8  280F               	incf	___fladd@bexp^0,w,c
  2946   0015BA  A4D8               	btfss	status,2,c
  2947   0015BC  EFE2  F00A         	goto	u2501
  2948   0015C0  EFE4  F00A         	goto	u2500
  2949   0015C4                     u2501:
  2950   0015C4  EFEC  F00A         	goto	l3200
  2951   0015C8                     u2500:
  2952   0015C8  0E00               	movlw	0
  2953   0015CA  6E01               	movwf	___fladd@b^0,c
  2954   0015CC  0E00               	movlw	0
  2955   0015CE  6E02               	movwf	(___fladd@b+1)^0,c
  2956   0015D0  0E00               	movlw	0
  2957   0015D2  6E03               	movwf	(___fladd@b+2)^0,c
  2958   0015D4  0E00               	movlw	0
  2959   0015D6  6E04               	movwf	(___fladd@b+3)^0,c
  2960   0015D8                     l3200:
  2961   0015D8  8E03               	bsf	(___fladd@b+2)^0,7,c
  2962   0015DA  0E00               	movlw	0
  2963   0015DC  6E04               	movwf	(___fladd@b+3)^0,c
  2964   0015DE  EFF9  F00A         	goto	l3206
  2965   0015E2                     l3204:
  2966   0015E2  0E00               	movlw	0
  2967   0015E4  6E01               	movwf	___fladd@b^0,c
  2968   0015E6  0E00               	movlw	0
  2969   0015E8  6E02               	movwf	(___fladd@b+1)^0,c
  2970   0015EA  0E00               	movlw	0
  2971   0015EC  6E03               	movwf	(___fladd@b+2)^0,c
  2972   0015EE  0E00               	movlw	0
  2973   0015F0  6E04               	movwf	(___fladd@b+3)^0,c
  2974   0015F2                     l3206:
  2975   0015F2  5008               	movf	(___fladd@a+3)^0,w,c
  2976   0015F4  0B80               	andlw	128
  2977   0015F6  6E0E               	movwf	___fladd@aexp^0,c
  2978   0015F8  500D               	movf	___fladd@signs^0,w,c
  2979   0015FA  180E               	xorwf	___fladd@aexp^0,w,c
  2980   0015FC  B4D8               	btfsc	status,2,c
  2981   0015FE  EF03  F00B         	goto	u2511
  2982   001602  EF05  F00B         	goto	u2510
  2983   001606                     u2511:
  2984   001606  EF06  F00B         	goto	l3212
  2985   00160A                     u2510:
  2986   00160A  8C0D               	bsf	___fladd@signs^0,6,c
  2987   00160C                     l3212:
  2988   00160C  5008               	movf	(___fladd@a+3)^0,w,c
  2989   00160E  2408               	addwf	(___fladd@a+3)^0,w,c
  2990   001610  6E0E               	movwf	___fladd@aexp^0,c
  2991   001612  AE07               	btfss	(___fladd@a+2)^0,7,c
  2992   001614  EF0E  F00B         	goto	u2521
  2993   001618  EF10  F00B         	goto	u2520
  2994   00161C                     u2521:
  2995   00161C  EF11  F00B         	goto	l3218
  2996   001620                     u2520:
  2997   001620  800E               	bsf	___fladd@aexp^0,0,c
  2998   001622                     l3218:
  2999   001622  500E               	movf	___fladd@aexp^0,w,c
  3000   001624  B4D8               	btfsc	status,2,c
  3001   001626  EF17  F00B         	goto	u2531
  3002   00162A  EF19  F00B         	goto	u2530
  3003   00162E                     u2531:
  3004   00162E  EF2E  F00B         	goto	l3228
  3005   001632                     u2530:
  3006   001632  280E               	incf	___fladd@aexp^0,w,c
  3007   001634  A4D8               	btfss	status,2,c
  3008   001636  EF1F  F00B         	goto	u2541
  3009   00163A  EF21  F00B         	goto	u2540
  3010   00163E                     u2541:
  3011   00163E  EF29  F00B         	goto	l3224
  3012   001642                     u2540:
  3013   001642  0E00               	movlw	0
  3014   001644  6E05               	movwf	___fladd@a^0,c
  3015   001646  0E00               	movlw	0
  3016   001648  6E06               	movwf	(___fladd@a+1)^0,c
  3017   00164A  0E00               	movlw	0
  3018   00164C  6E07               	movwf	(___fladd@a+2)^0,c
  3019   00164E  0E00               	movlw	0
  3020   001650  6E08               	movwf	(___fladd@a+3)^0,c
  3021   001652                     l3224:
  3022   001652  8E07               	bsf	(___fladd@a+2)^0,7,c
  3023   001654  0E00               	movlw	0
  3024   001656  6E08               	movwf	(___fladd@a+3)^0,c
  3025   001658  EF36  F00B         	goto	l3230
  3026   00165C                     l3228:
  3027   00165C  0E00               	movlw	0
  3028   00165E  6E05               	movwf	___fladd@a^0,c
  3029   001660  0E00               	movlw	0
  3030   001662  6E06               	movwf	(___fladd@a+1)^0,c
  3031   001664  0E00               	movlw	0
  3032   001666  6E07               	movwf	(___fladd@a+2)^0,c
  3033   001668  0E00               	movlw	0
  3034   00166A  6E08               	movwf	(___fladd@a+3)^0,c
  3035   00166C                     l3230:
  3036   00166C  500F               	movf	___fladd@bexp^0,w,c
  3037   00166E  5C0E               	subwf	___fladd@aexp^0,w,c
  3038   001670  B0D8               	btfsc	status,0,c
  3039   001672  EF3D  F00B         	goto	u2551
  3040   001676  EF3F  F00B         	goto	u2550
  3041   00167A                     u2551:
  3042   00167A  EF66  F00B         	goto	l3266
  3043   00167E                     u2550:
  3044   00167E  AC0D               	btfss	___fladd@signs^0,6,c
  3045   001680  EF44  F00B         	goto	u2561
  3046   001684  EF46  F00B         	goto	u2560
  3047   001688                     u2561:
  3048   001688  EF48  F00B         	goto	l3236
  3049   00168C                     u2560:
  3050   00168C  0E80               	movlw	128
  3051   00168E  1A0D               	xorwf	___fladd@signs^0,f,c
  3052   001690                     l3236:
  3053   001690  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3054   001694  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3055   001698  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3056   00169C  C001  F010         	movff	___fladd@b,___fladd@grs
  3057   0016A0  C005  F001         	movff	___fladd@a,___fladd@b
  3058   0016A4  C010  F005         	movff	___fladd@grs,___fladd@a
  3059   0016A8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3060   0016AC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3061   0016B0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3062   0016B4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3063   0016B8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3064   0016BC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3065   0016C0  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3066   0016C4  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3067   0016C8  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3068   0016CC                     l3266:
  3069   0016CC  0E00               	movlw	0
  3070   0016CE  6E10               	movwf	___fladd@grs^0,c
  3071   0016D0  500F               	movf	___fladd@bexp^0,w,c
  3072   0016D2  C00E  F009         	movff	___fladd@aexp,??___fladd
  3073   0016D6  6A0A               	clrf	(??___fladd+1)^0,c
  3074   0016D8  5E09               	subwf	??___fladd^0,f,c
  3075   0016DA  0E00               	movlw	0
  3076   0016DC  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3077   0016DE  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3078   0016E0  EF7B  F00B         	goto	u2571
  3079   0016E4  500A               	movf	(??___fladd+1)^0,w,c
  3080   0016E6  E109               	bnz	u2570
  3081   0016E8  0E1A               	movlw	26
  3082   0016EA  5C09               	subwf	??___fladd^0,w,c
  3083   0016EC  A0D8               	btfss	status,0,c
  3084   0016EE  EF7B  F00B         	goto	u2571
  3085   0016F2  EF7D  F00B         	goto	u2570
  3086   0016F6                     u2571:
  3087   0016F6  EFB4  F00B         	goto	l1063
  3088   0016FA                     u2570:
  3089   0016FA  5001               	movf	___fladd@b^0,w,c
  3090   0016FC  1002               	iorwf	(___fladd@b+1)^0,w,c
  3091   0016FE  1003               	iorwf	(___fladd@b+2)^0,w,c
  3092   001700  1004               	iorwf	(___fladd@b+3)^0,w,c
  3093   001702  A4D8               	btfss	status,2,c
  3094   001704  EF86  F00B         	goto	u2581
  3095   001708  EF89  F00B         	goto	u2580
  3096   00170C                     u2581:
  3097   00170C  0E01               	movlw	1
  3098   00170E  EF8A  F00B         	goto	u2590
  3099   001712                     u2580:
  3100   001712  0E00               	movlw	0
  3101   001714                     u2590:
  3102   001714  6E10               	movwf	___fladd@grs^0,c
  3103   001716  0E00               	movlw	0
  3104   001718  6E01               	movwf	___fladd@b^0,c
  3105   00171A  0E00               	movlw	0
  3106   00171C  6E02               	movwf	(___fladd@b+1)^0,c
  3107   00171E  0E00               	movlw	0
  3108   001720  6E03               	movwf	(___fladd@b+2)^0,c
  3109   001722  0E00               	movlw	0
  3110   001724  6E04               	movwf	(___fladd@b+3)^0,c
  3111   001726  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3112   00172A  EFBD  F00B         	goto	l1062
  3113   00172E                     l1064:
  3114   00172E  A010               	btfss	___fladd@grs^0,0,c
  3115   001730  EF9C  F00B         	goto	u2601
  3116   001734  EF9E  F00B         	goto	u2600
  3117   001738                     u2601:
  3118   001738  EFA4  F00B         	goto	l3278
  3119   00173C                     u2600:
  3120   00173C  90D8               	bcf	status,0,c
  3121   00173E  3010               	rrcf	___fladd@grs^0,w,c
  3122   001740  0901               	iorlw	1
  3123   001742  6E10               	movwf	___fladd@grs^0,c
  3124   001744  EFA6  F00B         	goto	l3280
  3125   001748                     l3278:
  3126   001748  90D8               	bcf	status,0,c
  3127   00174A  3210               	rrcf	___fladd@grs^0,f,c
  3128   00174C                     l3280:
  3129   00174C  A001               	btfss	___fladd@b^0,0,c
  3130   00174E  EFAB  F00B         	goto	u2611
  3131   001752  EFAD  F00B         	goto	u2610
  3132   001756                     u2611:
  3133   001756  EFAE  F00B         	goto	l3284
  3134   00175A                     u2610:
  3135   00175A  8E10               	bsf	___fladd@grs^0,7,c
  3136   00175C                     l3284:
  3137   00175C  3404               	rlcf	(___fladd@b+3)^0,w,c
  3138   00175E  3204               	rrcf	(___fladd@b+3)^0,f,c
  3139   001760  3203               	rrcf	(___fladd@b+2)^0,f,c
  3140   001762  3202               	rrcf	(___fladd@b+1)^0,f,c
  3141   001764  3201               	rrcf	___fladd@b^0,f,c
  3142   001766  2A0F               	incf	___fladd@bexp^0,f,c
  3143   001768                     l1063:
  3144   001768  500E               	movf	___fladd@aexp^0,w,c
  3145   00176A  5C0F               	subwf	___fladd@bexp^0,w,c
  3146   00176C  A0D8               	btfss	status,0,c
  3147   00176E  EFBB  F00B         	goto	u2621
  3148   001772  EFBD  F00B         	goto	u2620
  3149   001776                     u2621:
  3150   001776  EF97  F00B         	goto	l1064
  3151   00177A                     u2620:
  3152   00177A                     l1062:
  3153   00177A  BC0D               	btfsc	___fladd@signs^0,6,c
  3154   00177C  EFC2  F00B         	goto	u2631
  3155   001780  EFC4  F00B         	goto	u2630
  3156   001784                     u2631:
  3157   001784  EF04  F00C         	goto	l3312
  3158   001788                     u2630:
  3159   001788  500F               	movf	___fladd@bexp^0,w,c
  3160   00178A  A4D8               	btfss	status,2,c
  3161   00178C  EFCA  F00B         	goto	u2641
  3162   001790  EFCC  F00B         	goto	u2640
  3163   001794                     u2641:
  3164   001794  EFD6  F00B         	goto	l3294
  3165   001798                     u2640:
  3166   001798  0E00               	movlw	0
  3167   00179A  6E01               	movwf	?___fladd^0,c
  3168   00179C  0E00               	movlw	0
  3169   00179E  6E02               	movwf	(?___fladd+1)^0,c
  3170   0017A0  0E00               	movlw	0
  3171   0017A2  6E03               	movwf	(?___fladd+2)^0,c
  3172   0017A4  0E00               	movlw	0
  3173   0017A6  6E04               	movwf	(?___fladd+3)^0,c
  3174   0017A8  EF25  F00D         	goto	l1071
  3175   0017AC                     l3294:
  3176   0017AC  5005               	movf	___fladd@a^0,w,c
  3177   0017AE  2601               	addwf	___fladd@b^0,f,c
  3178   0017B0  5006               	movf	(___fladd@a+1)^0,w,c
  3179   0017B2  2202               	addwfc	(___fladd@b+1)^0,f,c
  3180   0017B4  5007               	movf	(___fladd@a+2)^0,w,c
  3181   0017B6  2203               	addwfc	(___fladd@b+2)^0,f,c
  3182   0017B8  5008               	movf	(___fladd@a+3)^0,w,c
  3183   0017BA  2204               	addwfc	(___fladd@b+3)^0,f,c
  3184   0017BC  A004               	btfss	(___fladd@b+3)^0,0,c
  3185   0017BE  EFE3  F00B         	goto	u2651
  3186   0017C2  EFE5  F00B         	goto	u2650
  3187   0017C6                     u2651:
  3188   0017C6  EF91  F00C         	goto	l3348
  3189   0017CA                     u2650:
  3190   0017CA  A010               	btfss	___fladd@grs^0,0,c
  3191   0017CC  EFEA  F00B         	goto	u2661
  3192   0017D0  EFEC  F00B         	goto	u2660
  3193   0017D4                     u2661:
  3194   0017D4  EFF2  F00B         	goto	l3302
  3195   0017D8                     u2660:
  3196   0017D8  90D8               	bcf	status,0,c
  3197   0017DA  3010               	rrcf	___fladd@grs^0,w,c
  3198   0017DC  0901               	iorlw	1
  3199   0017DE  6E10               	movwf	___fladd@grs^0,c
  3200   0017E0  EFF4  F00B         	goto	l3304
  3201   0017E4                     l3302:
  3202   0017E4  90D8               	bcf	status,0,c
  3203   0017E6  3210               	rrcf	___fladd@grs^0,f,c
  3204   0017E8                     l3304:
  3205   0017E8  A001               	btfss	___fladd@b^0,0,c
  3206   0017EA  EFF9  F00B         	goto	u2671
  3207   0017EE  EFFB  F00B         	goto	u2670
  3208   0017F2                     u2671:
  3209   0017F2  EFFC  F00B         	goto	l3308
  3210   0017F6                     u2670:
  3211   0017F6  8E10               	bsf	___fladd@grs^0,7,c
  3212   0017F8                     l3308:
  3213   0017F8  3404               	rlcf	(___fladd@b+3)^0,w,c
  3214   0017FA  3204               	rrcf	(___fladd@b+3)^0,f,c
  3215   0017FC  3203               	rrcf	(___fladd@b+2)^0,f,c
  3216   0017FE  3202               	rrcf	(___fladd@b+1)^0,f,c
  3217   001800  3201               	rrcf	___fladd@b^0,f,c
  3218   001802  2A0F               	incf	___fladd@bexp^0,f,c
  3219   001804  EF91  F00C         	goto	l3348
  3220   001808                     l3312:
  3221   001808  5005               	movf	___fladd@a^0,w,c
  3222   00180A  5C01               	subwf	___fladd@b^0,w,c
  3223   00180C  5006               	movf	(___fladd@a+1)^0,w,c
  3224   00180E  5802               	subwfb	(___fladd@b+1)^0,w,c
  3225   001810  5007               	movf	(___fladd@a+2)^0,w,c
  3226   001812  5803               	subwfb	(___fladd@b+2)^0,w,c
  3227   001814  5004               	movf	(___fladd@b+3)^0,w,c
  3228   001816  0A80               	xorlw	128
  3229   001818  6E09               	movwf	??___fladd^0,c
  3230   00181A  5008               	movf	(___fladd@a+3)^0,w,c
  3231   00181C  0A80               	xorlw	128
  3232   00181E  5809               	subwfb	??___fladd^0,w,c
  3233   001820  B0D8               	btfsc	status,0,c
  3234   001822  EF15  F00C         	goto	u2681
  3235   001826  EF17  F00C         	goto	u2680
  3236   00182A                     u2681:
  3237   00182A  EF42  F00C         	goto	l3322
  3238   00182E                     u2680:
  3239   00182E  5001               	movf	___fladd@b^0,w,c
  3240   001830  5C05               	subwf	___fladd@a^0,w,c
  3241   001832  6E09               	movwf	??___fladd^0,c
  3242   001834  5002               	movf	(___fladd@b+1)^0,w,c
  3243   001836  5806               	subwfb	(___fladd@a+1)^0,w,c
  3244   001838  6E0A               	movwf	(??___fladd+1)^0,c
  3245   00183A  5003               	movf	(___fladd@b+2)^0,w,c
  3246   00183C  5807               	subwfb	(___fladd@a+2)^0,w,c
  3247   00183E  6E0B               	movwf	(??___fladd+2)^0,c
  3248   001840  5004               	movf	(___fladd@b+3)^0,w,c
  3249   001842  5808               	subwfb	(___fladd@a+3)^0,w,c
  3250   001844  6E0C               	movwf	(??___fladd+3)^0,c
  3251   001846  0EFF               	movlw	255
  3252   001848  2409               	addwf	??___fladd^0,w,c
  3253   00184A  6E01               	movwf	___fladd@b^0,c
  3254   00184C  0EFF               	movlw	255
  3255   00184E  200A               	addwfc	(??___fladd+1)^0,w,c
  3256   001850  6E02               	movwf	(___fladd@b+1)^0,c
  3257   001852  0EFF               	movlw	255
  3258   001854  200B               	addwfc	(??___fladd+2)^0,w,c
  3259   001856  6E03               	movwf	(___fladd@b+2)^0,c
  3260   001858  0EFF               	movlw	255
  3261   00185A  200C               	addwfc	(??___fladd+3)^0,w,c
  3262   00185C  6E04               	movwf	(___fladd@b+3)^0,c
  3263   00185E  0E80               	movlw	128
  3264   001860  1A0D               	xorwf	___fladd@signs^0,f,c
  3265   001862  6C10               	negf	___fladd@grs^0,c
  3266   001864  5010               	movf	___fladd@grs^0,w,c
  3267   001866  A4D8               	btfss	status,2,c
  3268   001868  EF38  F00C         	goto	u2691
  3269   00186C  EF3A  F00C         	goto	u2690
  3270   001870                     u2691:
  3271   001870  EF4A  F00C         	goto	l1079
  3272   001874                     u2690:
  3273   001874  0E01               	movlw	1
  3274   001876  2601               	addwf	___fladd@b^0,f,c
  3275   001878  0E00               	movlw	0
  3276   00187A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3277   00187C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3278   00187E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3279   001880  EF4A  F00C         	goto	l1079
  3280   001884                     l3322:
  3281   001884  5005               	movf	___fladd@a^0,w,c
  3282   001886  5E01               	subwf	___fladd@b^0,f,c
  3283   001888  5006               	movf	(___fladd@a+1)^0,w,c
  3284   00188A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3285   00188C  5007               	movf	(___fladd@a+2)^0,w,c
  3286   00188E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3287   001890  5008               	movf	(___fladd@a+3)^0,w,c
  3288   001892  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3289   001894                     l1079:
  3290   001894  5001               	movf	___fladd@b^0,w,c
  3291   001896  1002               	iorwf	(___fladd@b+1)^0,w,c
  3292   001898  1003               	iorwf	(___fladd@b+2)^0,w,c
  3293   00189A  1004               	iorwf	(___fladd@b+3)^0,w,c
  3294   00189C  A4D8               	btfss	status,2,c
  3295   00189E  EF53  F00C         	goto	u2701
  3296   0018A2  EF55  F00C         	goto	u2700
  3297   0018A6                     u2701:
  3298   0018A6  EF8A  F00C         	goto	l3346
  3299   0018AA                     u2700:
  3300   0018AA  5010               	movf	___fladd@grs^0,w,c
  3301   0018AC  A4D8               	btfss	status,2,c
  3302   0018AE  EF5B  F00C         	goto	u2711
  3303   0018B2  EF5D  F00C         	goto	u2710
  3304   0018B6                     u2711:
  3305   0018B6  EF8A  F00C         	goto	l3346
  3306   0018BA                     u2710:
  3307   0018BA  0E00               	movlw	0
  3308   0018BC  6E01               	movwf	?___fladd^0,c
  3309   0018BE  0E00               	movlw	0
  3310   0018C0  6E02               	movwf	(?___fladd+1)^0,c
  3311   0018C2  0E00               	movlw	0
  3312   0018C4  6E03               	movwf	(?___fladd+2)^0,c
  3313   0018C6  0E00               	movlw	0
  3314   0018C8  6E04               	movwf	(?___fladd+3)^0,c
  3315   0018CA  EF25  F00D         	goto	l1071
  3316   0018CE                     l3330:
  3317   0018CE  90D8               	bcf	status,0,c
  3318   0018D0  3601               	rlcf	___fladd@b^0,f,c
  3319   0018D2  3602               	rlcf	(___fladd@b+1)^0,f,c
  3320   0018D4  3603               	rlcf	(___fladd@b+2)^0,f,c
  3321   0018D6  3604               	rlcf	(___fladd@b+3)^0,f,c
  3322   0018D8  AE10               	btfss	___fladd@grs^0,7,c
  3323   0018DA  EF71  F00C         	goto	u2721
  3324   0018DE  EF73  F00C         	goto	u2720
  3325   0018E2                     u2721:
  3326   0018E2  EF74  F00C         	goto	l3336
  3327   0018E6                     u2720:
  3328   0018E6  8001               	bsf	___fladd@b^0,0,c
  3329   0018E8                     l3336:
  3330   0018E8  A010               	btfss	___fladd@grs^0,0,c
  3331   0018EA  EF79  F00C         	goto	u2731
  3332   0018EE  EF7B  F00C         	goto	u2730
  3333   0018F2                     u2731:
  3334   0018F2  EF7F  F00C         	goto	l3340
  3335   0018F6                     u2730:
  3336   0018F6  80D8               	bsf	status,0,c
  3337   0018F8  3610               	rlcf	___fladd@grs^0,f,c
  3338   0018FA  EF81  F00C         	goto	l3342
  3339   0018FE                     l3340:
  3340   0018FE  90D8               	bcf	status,0,c
  3341   001900  3610               	rlcf	___fladd@grs^0,f,c
  3342   001902                     l3342:
  3343   001902  500F               	movf	___fladd@bexp^0,w,c
  3344   001904  B4D8               	btfsc	status,2,c
  3345   001906  EF87  F00C         	goto	u2741
  3346   00190A  EF89  F00C         	goto	u2740
  3347   00190E                     u2741:
  3348   00190E  EF8A  F00C         	goto	l3346
  3349   001912                     u2740:
  3350   001912  060F               	decf	___fladd@bexp^0,f,c
  3351   001914                     l3346:
  3352   001914  AE03               	btfss	(___fladd@b+2)^0,7,c
  3353   001916  EF8F  F00C         	goto	u2751
  3354   00191A  EF91  F00C         	goto	u2750
  3355   00191E                     u2751:
  3356   00191E  EF67  F00C         	goto	l3330
  3357   001922                     u2750:
  3358   001922                     l3348:
  3359   001922  0E00               	movlw	0
  3360   001924  6E0E               	movwf	___fladd@aexp^0,c
  3361   001926  AE10               	btfss	___fladd@grs^0,7,c
  3362   001928  EF98  F00C         	goto	u2761
  3363   00192C  EF9A  F00C         	goto	u2760
  3364   001930                     u2761:
  3365   001930  EFB2  F00C         	goto	l1088
  3366   001934                     u2760:
  3367   001934  C010  F009         	movff	___fladd@grs,??___fladd
  3368   001938  0E7F               	movlw	127
  3369   00193A  1609               	andwf	??___fladd^0,f,c
  3370   00193C  B4D8               	btfsc	status,2,c
  3371   00193E  EFA3  F00C         	goto	u2771
  3372   001942  EFA5  F00C         	goto	u2770
  3373   001946                     u2771:
  3374   001946  EFA9  F00C         	goto	l1089
  3375   00194A                     u2770:
  3376   00194A                     l3354:
  3377   00194A  0E01               	movlw	1
  3378   00194C  6E0E               	movwf	___fladd@aexp^0,c
  3379   00194E  EFB2  F00C         	goto	l1088
  3380   001952                     l1089:
  3381   001952  A001               	btfss	___fladd@b^0,0,c
  3382   001954  EFAE  F00C         	goto	u2781
  3383   001958  EFB0  F00C         	goto	u2780
  3384   00195C                     u2781:
  3385   00195C  EFB2  F00C         	goto	l1088
  3386   001960                     u2780:
  3387   001960  EFA5  F00C         	goto	l3354
  3388   001964                     l1088:
  3389   001964  500E               	movf	___fladd@aexp^0,w,c
  3390   001966  B4D8               	btfsc	status,2,c
  3391   001968  EFB8  F00C         	goto	u2791
  3392   00196C  EFBA  F00C         	goto	u2790
  3393   001970                     u2791:
  3394   001970  EFE5  F00C         	goto	l3366
  3395   001974                     u2790:
  3396   001974  0E01               	movlw	1
  3397   001976  2601               	addwf	___fladd@b^0,f,c
  3398   001978  0E00               	movlw	0
  3399   00197A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3400   00197C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3401   00197E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3402   001980  A004               	btfss	(___fladd@b+3)^0,0,c
  3403   001982  EFC5  F00C         	goto	u2801
  3404   001986  EFC7  F00C         	goto	u2800
  3405   00198A                     u2801:
  3406   00198A  EFE5  F00C         	goto	l3366
  3407   00198E                     u2800:
  3408   00198E  C001  F009         	movff	___fladd@b,??___fladd
  3409   001992  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3410   001996  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3411   00199A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3412   00199E  340C               	rlcf	(??___fladd+3)^0,w,c
  3413   0019A0  320C               	rrcf	(??___fladd+3)^0,f,c
  3414   0019A2  320B               	rrcf	(??___fladd+2)^0,f,c
  3415   0019A4  320A               	rrcf	(??___fladd+1)^0,f,c
  3416   0019A6  3209               	rrcf	??___fladd^0,f,c
  3417   0019A8  C009  F001         	movff	??___fladd,___fladd@b
  3418   0019AC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3419   0019B0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3420   0019B4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3421   0019B8  280F               	incf	___fladd@bexp^0,w,c
  3422   0019BA  B4D8               	btfsc	status,2,c
  3423   0019BC  EFE2  F00C         	goto	u2811
  3424   0019C0  EFE4  F00C         	goto	u2810
  3425   0019C4                     u2811:
  3426   0019C4  EFE5  F00C         	goto	l3366
  3427   0019C8                     u2810:
  3428   0019C8  2A0F               	incf	___fladd@bexp^0,f,c
  3429   0019CA                     l3366:
  3430   0019CA  280F               	incf	___fladd@bexp^0,w,c
  3431   0019CC  B4D8               	btfsc	status,2,c
  3432   0019CE  EFEB  F00C         	goto	u2821
  3433   0019D2  EFED  F00C         	goto	u2820
  3434   0019D6                     u2821:
  3435   0019D6  EFF5  F00C         	goto	l3370
  3436   0019DA                     u2820:
  3437   0019DA  500F               	movf	___fladd@bexp^0,w,c
  3438   0019DC  A4D8               	btfss	status,2,c
  3439   0019DE  EFF3  F00C         	goto	u2831
  3440   0019E2  EFF5  F00C         	goto	u2830
  3441   0019E6                     u2831:
  3442   0019E6  EF07  F00D         	goto	l3374
  3443   0019EA                     u2830:
  3444   0019EA                     l3370:
  3445   0019EA  0E00               	movlw	0
  3446   0019EC  6E01               	movwf	___fladd@b^0,c
  3447   0019EE  0E00               	movlw	0
  3448   0019F0  6E02               	movwf	(___fladd@b+1)^0,c
  3449   0019F2  0E00               	movlw	0
  3450   0019F4  6E03               	movwf	(___fladd@b+2)^0,c
  3451   0019F6  0E00               	movlw	0
  3452   0019F8  6E04               	movwf	(___fladd@b+3)^0,c
  3453   0019FA  500F               	movf	___fladd@bexp^0,w,c
  3454   0019FC  A4D8               	btfss	status,2,c
  3455   0019FE  EF03  F00D         	goto	u2841
  3456   001A02  EF05  F00D         	goto	u2840
  3457   001A06                     u2841:
  3458   001A06  EF07  F00D         	goto	l3374
  3459   001A0A                     u2840:
  3460   001A0A  0E00               	movlw	0
  3461   001A0C  6E0D               	movwf	___fladd@signs^0,c
  3462   001A0E                     l3374:
  3463   001A0E  A00F               	btfss	___fladd@bexp^0,0,c
  3464   001A10  EF0C  F00D         	goto	u2851
  3465   001A14  EF0E  F00D         	goto	u2850
  3466   001A18                     u2851:
  3467   001A18  EF11  F00D         	goto	l3378
  3468   001A1C                     u2850:
  3469   001A1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  3470   001A1E  EF12  F00D         	goto	l3380
  3471   001A22                     l3378:
  3472   001A22  9E03               	bcf	(___fladd@b+2)^0,7,c
  3473   001A24                     l3380:
  3474   001A24  90D8               	bcf	status,0,c
  3475   001A26  300F               	rrcf	___fladd@bexp^0,w,c
  3476   001A28  6E04               	movwf	(___fladd@b+3)^0,c
  3477   001A2A  AE0D               	btfss	___fladd@signs^0,7,c
  3478   001A2C  EF1A  F00D         	goto	u2861
  3479   001A30  EF1C  F00D         	goto	u2860
  3480   001A34                     u2861:
  3481   001A34  EF1D  F00D         	goto	l3386
  3482   001A38                     u2860:
  3483   001A38  8E04               	bsf	(___fladd@b+3)^0,7,c
  3484   001A3A                     l3386:
  3485   001A3A  C001  F001         	movff	___fladd@b,?___fladd
  3486   001A3E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3487   001A42  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3488   001A46  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3489   001A4A                     l1071:
  3490   001A4A  0012               	return		;funcret
  3491   001A4C                     __end_of___fladd:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function ___flmul *****************
  3495 ;; Defined at:
  3496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  b               4    0[COMRAM] unsigned char 
  3499 ;;  a               4    4[COMRAM] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  prod            4   19[COMRAM] struct .
  3502 ;;  grs             4   13[COMRAM] unsigned long 
  3503 ;;  temp            2   23[COMRAM] struct .
  3504 ;;  bexp            1   18[COMRAM] unsigned char 
  3505 ;;  aexp            1   17[COMRAM] unsigned char 
  3506 ;;  sign            1   12[COMRAM] unsigned char 
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  4    0[COMRAM] unsigned char 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, prodl, prodh
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3516 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3519 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3520 ;;Total ram usage:       25 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_convert_rgb2hue
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text10
  3530   001A4C                     __ptext10:
  3531                           	callstack 0
  3532   001A4C                     ___flmul:
  3533                           	callstack 28
  3534   001A4C  5004               	movf	(___flmul@b+3)^0,w,c
  3535   001A4E  0B80               	andlw	128
  3536   001A50  6E0D               	movwf	___flmul@sign^0,c
  3537   001A52  5004               	movf	(___flmul@b+3)^0,w,c
  3538   001A54  2404               	addwf	(___flmul@b+3)^0,w,c
  3539   001A56  6E13               	movwf	___flmul@bexp^0,c
  3540   001A58  AE03               	btfss	(___flmul@b+2)^0,7,c
  3541   001A5A  EF31  F00D         	goto	u3141
  3542   001A5E  EF33  F00D         	goto	u3140
  3543   001A62                     u3141:
  3544   001A62  EF34  F00D         	goto	l3606
  3545   001A66                     u3140:
  3546   001A66  8013               	bsf	___flmul@bexp^0,0,c
  3547   001A68                     l3606:
  3548   001A68  5013               	movf	___flmul@bexp^0,w,c
  3549   001A6A  B4D8               	btfsc	status,2,c
  3550   001A6C  EF3A  F00D         	goto	u3151
  3551   001A70  EF3C  F00D         	goto	u3150
  3552   001A74                     u3151:
  3553   001A74  EF4F  F00D         	goto	l3614
  3554   001A78                     u3150:
  3555   001A78  2813               	incf	___flmul@bexp^0,w,c
  3556   001A7A  A4D8               	btfss	status,2,c
  3557   001A7C  EF42  F00D         	goto	u3161
  3558   001A80  EF44  F00D         	goto	u3160
  3559   001A84                     u3161:
  3560   001A84  EF4C  F00D         	goto	l3612
  3561   001A88                     u3160:
  3562   001A88  0E00               	movlw	0
  3563   001A8A  6E01               	movwf	___flmul@b^0,c
  3564   001A8C  0E00               	movlw	0
  3565   001A8E  6E02               	movwf	(___flmul@b+1)^0,c
  3566   001A90  0E00               	movlw	0
  3567   001A92  6E03               	movwf	(___flmul@b+2)^0,c
  3568   001A94  0E00               	movlw	0
  3569   001A96  6E04               	movwf	(___flmul@b+3)^0,c
  3570   001A98                     l3612:
  3571   001A98  8E03               	bsf	(___flmul@b+2)^0,7,c
  3572   001A9A  EF57  F00D         	goto	l3616
  3573   001A9E                     l3614:
  3574   001A9E  0E00               	movlw	0
  3575   001AA0  6E01               	movwf	___flmul@b^0,c
  3576   001AA2  0E00               	movlw	0
  3577   001AA4  6E02               	movwf	(___flmul@b+1)^0,c
  3578   001AA6  0E00               	movlw	0
  3579   001AA8  6E03               	movwf	(___flmul@b+2)^0,c
  3580   001AAA  0E00               	movlw	0
  3581   001AAC  6E04               	movwf	(___flmul@b+3)^0,c
  3582   001AAE                     l3616:
  3583   001AAE  5008               	movf	(___flmul@a+3)^0,w,c
  3584   001AB0  0B80               	andlw	128
  3585   001AB2  1A0D               	xorwf	___flmul@sign^0,f,c
  3586   001AB4  5008               	movf	(___flmul@a+3)^0,w,c
  3587   001AB6  2408               	addwf	(___flmul@a+3)^0,w,c
  3588   001AB8  6E12               	movwf	___flmul@aexp^0,c
  3589   001ABA  AE07               	btfss	(___flmul@a+2)^0,7,c
  3590   001ABC  EF62  F00D         	goto	u3171
  3591   001AC0  EF64  F00D         	goto	u3170
  3592   001AC4                     u3171:
  3593   001AC4  EF65  F00D         	goto	l3624
  3594   001AC8                     u3170:
  3595   001AC8  8012               	bsf	___flmul@aexp^0,0,c
  3596   001ACA                     l3624:
  3597   001ACA  5012               	movf	___flmul@aexp^0,w,c
  3598   001ACC  B4D8               	btfsc	status,2,c
  3599   001ACE  EF6B  F00D         	goto	u3181
  3600   001AD2  EF6D  F00D         	goto	u3180
  3601   001AD6                     u3181:
  3602   001AD6  EF80  F00D         	goto	l3632
  3603   001ADA                     u3180:
  3604   001ADA  2812               	incf	___flmul@aexp^0,w,c
  3605   001ADC  A4D8               	btfss	status,2,c
  3606   001ADE  EF73  F00D         	goto	u3191
  3607   001AE2  EF75  F00D         	goto	u3190
  3608   001AE6                     u3191:
  3609   001AE6  EF7D  F00D         	goto	l3630
  3610   001AEA                     u3190:
  3611   001AEA  0E00               	movlw	0
  3612   001AEC  6E05               	movwf	___flmul@a^0,c
  3613   001AEE  0E00               	movlw	0
  3614   001AF0  6E06               	movwf	(___flmul@a+1)^0,c
  3615   001AF2  0E00               	movlw	0
  3616   001AF4  6E07               	movwf	(___flmul@a+2)^0,c
  3617   001AF6  0E00               	movlw	0
  3618   001AF8  6E08               	movwf	(___flmul@a+3)^0,c
  3619   001AFA                     l3630:
  3620   001AFA  8E07               	bsf	(___flmul@a+2)^0,7,c
  3621   001AFC  EF88  F00D         	goto	l1148
  3622   001B00                     l3632:
  3623   001B00  0E00               	movlw	0
  3624   001B02  6E05               	movwf	___flmul@a^0,c
  3625   001B04  0E00               	movlw	0
  3626   001B06  6E06               	movwf	(___flmul@a+1)^0,c
  3627   001B08  0E00               	movlw	0
  3628   001B0A  6E07               	movwf	(___flmul@a+2)^0,c
  3629   001B0C  0E00               	movlw	0
  3630   001B0E  6E08               	movwf	(___flmul@a+3)^0,c
  3631   001B10                     l1148:
  3632   001B10  5012               	movf	___flmul@aexp^0,w,c
  3633   001B12  B4D8               	btfsc	status,2,c
  3634   001B14  EF8E  F00D         	goto	u3201
  3635   001B18  EF90  F00D         	goto	u3200
  3636   001B1C                     u3201:
  3637   001B1C  EF98  F00D         	goto	l3636
  3638   001B20                     u3200:
  3639   001B20  5013               	movf	___flmul@bexp^0,w,c
  3640   001B22  A4D8               	btfss	status,2,c
  3641   001B24  EF96  F00D         	goto	u3211
  3642   001B28  EF98  F00D         	goto	u3210
  3643   001B2C                     u3211:
  3644   001B2C  EFA2  F00D         	goto	l3640
  3645   001B30                     u3210:
  3646   001B30                     l3636:
  3647   001B30  0E00               	movlw	0
  3648   001B32  6E01               	movwf	?___flmul^0,c
  3649   001B34  0E00               	movlw	0
  3650   001B36  6E02               	movwf	(?___flmul+1)^0,c
  3651   001B38  0E00               	movlw	0
  3652   001B3A  6E03               	movwf	(?___flmul+2)^0,c
  3653   001B3C  0E00               	movlw	0
  3654   001B3E  6E04               	movwf	(?___flmul+3)^0,c
  3655   001B40  EF3A  F00F         	goto	l1152
  3656   001B44                     l3640:
  3657   001B44  5007               	movf	(___flmul@a+2)^0,w,c
  3658   001B46  0201               	mulwf	___flmul@b^0,c
  3659   001B48  CFF3 F018          	movff	prodl,___flmul@temp
  3660   001B4C  CFF4 F019          	movff	prodh,___flmul@temp+1
  3661   001B50  5018               	movf	___flmul@temp^0,w,c
  3662   001B52  6E0E               	movwf	___flmul@grs^0,c
  3663   001B54  6A0F               	clrf	(___flmul@grs+1)^0,c
  3664   001B56  6A10               	clrf	(___flmul@grs+2)^0,c
  3665   001B58  6A11               	clrf	(___flmul@grs+3)^0,c
  3666   001B5A  5019               	movf	(___flmul@temp+1)^0,w,c
  3667   001B5C  6E14               	movwf	___flmul@prod^0,c
  3668   001B5E  6A15               	clrf	(___flmul@prod+1)^0,c
  3669   001B60  6A16               	clrf	(___flmul@prod+2)^0,c
  3670   001B62  6A17               	clrf	(___flmul@prod+3)^0,c
  3671   001B64  5006               	movf	(___flmul@a+1)^0,w,c
  3672   001B66  0202               	mulwf	(___flmul@b+1)^0,c
  3673   001B68  CFF3 F018          	movff	prodl,___flmul@temp
  3674   001B6C  CFF4 F019          	movff	prodh,___flmul@temp+1
  3675   001B70  5018               	movf	___flmul@temp^0,w,c
  3676   001B72  260E               	addwf	___flmul@grs^0,f,c
  3677   001B74  0E00               	movlw	0
  3678   001B76  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3679   001B78  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3680   001B7A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3681   001B7C  5019               	movf	(___flmul@temp+1)^0,w,c
  3682   001B7E  2614               	addwf	___flmul@prod^0,f,c
  3683   001B80  0E00               	movlw	0
  3684   001B82  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3685   001B84  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3686   001B86  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3687   001B88  5005               	movf	___flmul@a^0,w,c
  3688   001B8A  0203               	mulwf	(___flmul@b+2)^0,c
  3689   001B8C  CFF3 F018          	movff	prodl,___flmul@temp
  3690   001B90  CFF4 F019          	movff	prodh,___flmul@temp+1
  3691   001B94  5018               	movf	___flmul@temp^0,w,c
  3692   001B96  260E               	addwf	___flmul@grs^0,f,c
  3693   001B98  0E00               	movlw	0
  3694   001B9A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3695   001B9C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3696   001B9E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3697   001BA0  5019               	movf	(___flmul@temp+1)^0,w,c
  3698   001BA2  2614               	addwf	___flmul@prod^0,f,c
  3699   001BA4  0E00               	movlw	0
  3700   001BA6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3701   001BA8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3702   001BAA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3703   001BAC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3704   001BB0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3705   001BB4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3706   001BB8  6A0E               	clrf	___flmul@grs^0,c
  3707   001BBA  5005               	movf	___flmul@a^0,w,c
  3708   001BBC  0202               	mulwf	(___flmul@b+1)^0,c
  3709   001BBE  CFF3 F018          	movff	prodl,___flmul@temp
  3710   001BC2  CFF4 F019          	movff	prodh,___flmul@temp+1
  3711   001BC6  5018               	movf	___flmul@temp^0,w,c
  3712   001BC8  260E               	addwf	___flmul@grs^0,f,c
  3713   001BCA  5019               	movf	(___flmul@temp+1)^0,w,c
  3714   001BCC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3715   001BCE  0E00               	movlw	0
  3716   001BD0  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3717   001BD2  0E00               	movlw	0
  3718   001BD4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3719   001BD6  5006               	movf	(___flmul@a+1)^0,w,c
  3720   001BD8  0201               	mulwf	___flmul@b^0,c
  3721   001BDA  CFF3 F018          	movff	prodl,___flmul@temp
  3722   001BDE  CFF4 F019          	movff	prodh,___flmul@temp+1
  3723   001BE2  5018               	movf	___flmul@temp^0,w,c
  3724   001BE4  260E               	addwf	___flmul@grs^0,f,c
  3725   001BE6  5019               	movf	(___flmul@temp+1)^0,w,c
  3726   001BE8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3727   001BEA  0E00               	movlw	0
  3728   001BEC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3729   001BEE  0E00               	movlw	0
  3730   001BF0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3731   001BF2  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3732   001BF6  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3733   001BFA  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3734   001BFE  6A0E               	clrf	___flmul@grs^0,c
  3735   001C00  5005               	movf	___flmul@a^0,w,c
  3736   001C02  0201               	mulwf	___flmul@b^0,c
  3737   001C04  CFF3 F018          	movff	prodl,___flmul@temp
  3738   001C08  CFF4 F019          	movff	prodh,___flmul@temp+1
  3739   001C0C  5018               	movf	___flmul@temp^0,w,c
  3740   001C0E  260E               	addwf	___flmul@grs^0,f,c
  3741   001C10  5019               	movf	(___flmul@temp+1)^0,w,c
  3742   001C12  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3743   001C14  0E00               	movlw	0
  3744   001C16  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3745   001C18  0E00               	movlw	0
  3746   001C1A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3747   001C1C  5007               	movf	(___flmul@a+2)^0,w,c
  3748   001C1E  0202               	mulwf	(___flmul@b+1)^0,c
  3749   001C20  CFF3 F018          	movff	prodl,___flmul@temp
  3750   001C24  CFF4 F019          	movff	prodh,___flmul@temp+1
  3751   001C28  5018               	movf	___flmul@temp^0,w,c
  3752   001C2A  2614               	addwf	___flmul@prod^0,f,c
  3753   001C2C  5019               	movf	(___flmul@temp+1)^0,w,c
  3754   001C2E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3755   001C30  0E00               	movlw	0
  3756   001C32  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3757   001C34  0E00               	movlw	0
  3758   001C36  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3759   001C38  5006               	movf	(___flmul@a+1)^0,w,c
  3760   001C3A  0203               	mulwf	(___flmul@b+2)^0,c
  3761   001C3C  CFF3 F018          	movff	prodl,___flmul@temp
  3762   001C40  CFF4 F019          	movff	prodh,___flmul@temp+1
  3763   001C44  5018               	movf	___flmul@temp^0,w,c
  3764   001C46  2614               	addwf	___flmul@prod^0,f,c
  3765   001C48  5019               	movf	(___flmul@temp+1)^0,w,c
  3766   001C4A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3767   001C4C  0E00               	movlw	0
  3768   001C4E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3769   001C50  0E00               	movlw	0
  3770   001C52  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3771   001C54  5007               	movf	(___flmul@a+2)^0,w,c
  3772   001C56  0203               	mulwf	(___flmul@b+2)^0,c
  3773   001C58  CFF3 F018          	movff	prodl,___flmul@temp
  3774   001C5C  CFF4 F019          	movff	prodh,___flmul@temp+1
  3775   001C60  5018               	movf	___flmul@temp^0,w,c
  3776   001C62  6E09               	movwf	??___flmul^0,c
  3777   001C64  5019               	movf	(___flmul@temp+1)^0,w,c
  3778   001C66  6E0A               	movwf	(??___flmul+1)^0,c
  3779   001C68  6A0B               	clrf	(??___flmul+2)^0,c
  3780   001C6A  6A0C               	clrf	(??___flmul+3)^0,c
  3781   001C6C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3782   001C70  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3783   001C74  C009  F00A         	movff	??___flmul,??___flmul+1
  3784   001C78  6A09               	clrf	??___flmul^0,c
  3785   001C7A  5009               	movf	??___flmul^0,w,c
  3786   001C7C  2614               	addwf	___flmul@prod^0,f,c
  3787   001C7E  500A               	movf	(??___flmul+1)^0,w,c
  3788   001C80  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3789   001C82  500B               	movf	(??___flmul+2)^0,w,c
  3790   001C84  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3791   001C86  500C               	movf	(??___flmul+3)^0,w,c
  3792   001C88  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3793   001C8A  C00E  F009         	movff	___flmul@grs,??___flmul
  3794   001C8E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3795   001C92  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3796   001C96  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3797   001C9A  0E19               	movlw	25
  3798   001C9C  EF55  F00E         	goto	u3220
  3799   001CA0                     u3225:
  3800   001CA0  90D8               	bcf	status,0,c
  3801   001CA2  320C               	rrcf	(??___flmul+3)^0,f,c
  3802   001CA4  320B               	rrcf	(??___flmul+2)^0,f,c
  3803   001CA6  320A               	rrcf	(??___flmul+1)^0,f,c
  3804   001CA8  3209               	rrcf	??___flmul^0,f,c
  3805   001CAA                     u3220:
  3806   001CAA  2EE8               	decfsz	wreg,f,c
  3807   001CAC  EF50  F00E         	goto	u3225
  3808   001CB0  5009               	movf	??___flmul^0,w,c
  3809   001CB2  2614               	addwf	___flmul@prod^0,f,c
  3810   001CB4  500A               	movf	(??___flmul+1)^0,w,c
  3811   001CB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3812   001CB8  500B               	movf	(??___flmul+2)^0,w,c
  3813   001CBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3814   001CBC  500C               	movf	(??___flmul+3)^0,w,c
  3815   001CBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3816   001CC0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3817   001CC4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3818   001CC8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3819   001CCC  6A0E               	clrf	___flmul@grs^0,c
  3820   001CCE  5012               	movf	___flmul@aexp^0,w,c
  3821   001CD0  C013  F009         	movff	___flmul@bexp,??___flmul
  3822   001CD4  6A0A               	clrf	(??___flmul+1)^0,c
  3823   001CD6  2609               	addwf	??___flmul^0,f,c
  3824   001CD8  0E00               	movlw	0
  3825   001CDA  220A               	addwfc	(??___flmul+1)^0,f,c
  3826   001CDC  0E82               	movlw	130
  3827   001CDE  2409               	addwf	??___flmul^0,w,c
  3828   001CE0  6E18               	movwf	___flmul@temp^0,c
  3829   001CE2  0EFF               	movlw	255
  3830   001CE4  200A               	addwfc	(??___flmul+1)^0,w,c
  3831   001CE6  6E19               	movwf	(___flmul@temp+1)^0,c
  3832   001CE8  EF8B  F00E         	goto	l3688
  3833   001CEC                     l3682:
  3834   001CEC  90D8               	bcf	status,0,c
  3835   001CEE  3614               	rlcf	___flmul@prod^0,f,c
  3836   001CF0  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3837   001CF2  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3838   001CF4  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3839   001CF6  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3840   001CF8  EF80  F00E         	goto	u3231
  3841   001CFC  EF82  F00E         	goto	u3230
  3842   001D00                     u3231:
  3843   001D00  EF83  F00E         	goto	l1155
  3844   001D04                     u3230:
  3845   001D04  8014               	bsf	___flmul@prod^0,0,c
  3846   001D06                     l1155:
  3847   001D06  90D8               	bcf	status,0,c
  3848   001D08  360E               	rlcf	___flmul@grs^0,f,c
  3849   001D0A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3850   001D0C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3851   001D0E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3852   001D10  0618               	decf	___flmul@temp^0,f,c
  3853   001D12  A0D8               	btfss	status,0,c
  3854   001D14  0619               	decf	(___flmul@temp+1)^0,f,c
  3855   001D16                     l3688:
  3856   001D16  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3857   001D18  EF90  F00E         	goto	u3241
  3858   001D1C  EF92  F00E         	goto	u3240
  3859   001D20                     u3241:
  3860   001D20  EF76  F00E         	goto	l3682
  3861   001D24                     u3240:
  3862   001D24  0E00               	movlw	0
  3863   001D26  6E12               	movwf	___flmul@aexp^0,c
  3864   001D28  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3865   001D2A  EF99  F00E         	goto	u3251
  3866   001D2E  EF9B  F00E         	goto	u3250
  3867   001D32                     u3251:
  3868   001D32  EFBF  F00E         	goto	l1157
  3869   001D36                     u3250:
  3870   001D36  0EFF               	movlw	255
  3871   001D38  140E               	andwf	___flmul@grs^0,w,c
  3872   001D3A  6E09               	movwf	??___flmul^0,c
  3873   001D3C  0EFF               	movlw	255
  3874   001D3E  140F               	andwf	(___flmul@grs+1)^0,w,c
  3875   001D40  6E0A               	movwf	(??___flmul+1)^0,c
  3876   001D42  0EFF               	movlw	255
  3877   001D44  1410               	andwf	(___flmul@grs+2)^0,w,c
  3878   001D46  6E0B               	movwf	(??___flmul+2)^0,c
  3879   001D48  0E7F               	movlw	127
  3880   001D4A  1411               	andwf	(___flmul@grs+3)^0,w,c
  3881   001D4C  6E0C               	movwf	(??___flmul+3)^0,c
  3882   001D4E  5009               	movf	??___flmul^0,w,c
  3883   001D50  100A               	iorwf	(??___flmul+1)^0,w,c
  3884   001D52  100B               	iorwf	(??___flmul+2)^0,w,c
  3885   001D54  100C               	iorwf	(??___flmul+3)^0,w,c
  3886   001D56  B4D8               	btfsc	status,2,c
  3887   001D58  EFB0  F00E         	goto	u3261
  3888   001D5C  EFB2  F00E         	goto	u3260
  3889   001D60                     u3261:
  3890   001D60  EFB6  F00E         	goto	l1158
  3891   001D64                     u3260:
  3892   001D64                     l3696:
  3893   001D64  0E01               	movlw	1
  3894   001D66  6E12               	movwf	___flmul@aexp^0,c
  3895   001D68  EFBF  F00E         	goto	l1157
  3896   001D6C                     l1158:
  3897   001D6C  A014               	btfss	___flmul@prod^0,0,c
  3898   001D6E  EFBB  F00E         	goto	u3271
  3899   001D72  EFBD  F00E         	goto	u3270
  3900   001D76                     u3271:
  3901   001D76  EFBF  F00E         	goto	l1157
  3902   001D7A                     u3270:
  3903   001D7A  EFB2  F00E         	goto	l3696
  3904   001D7E                     l1157:
  3905   001D7E  5012               	movf	___flmul@aexp^0,w,c
  3906   001D80  B4D8               	btfsc	status,2,c
  3907   001D82  EFC5  F00E         	goto	u3281
  3908   001D86  EFC7  F00E         	goto	u3280
  3909   001D8A                     u3281:
  3910   001D8A  EFEB  F00E         	goto	l3708
  3911   001D8E                     u3280:
  3912   001D8E  0E01               	movlw	1
  3913   001D90  2614               	addwf	___flmul@prod^0,f,c
  3914   001D92  0E00               	movlw	0
  3915   001D94  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3916   001D96  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3917   001D98  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3918   001D9A  A017               	btfss	(___flmul@prod+3)^0,0,c
  3919   001D9C  EFD2  F00E         	goto	u3291
  3920   001DA0  EFD4  F00E         	goto	u3290
  3921   001DA4                     u3291:
  3922   001DA4  EFEB  F00E         	goto	l3708
  3923   001DA8                     u3290:
  3924   001DA8  C014  F009         	movff	___flmul@prod,??___flmul
  3925   001DAC  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  3926   001DB0  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  3927   001DB4  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  3928   001DB8  340C               	rlcf	(??___flmul+3)^0,w,c
  3929   001DBA  320C               	rrcf	(??___flmul+3)^0,f,c
  3930   001DBC  320B               	rrcf	(??___flmul+2)^0,f,c
  3931   001DBE  320A               	rrcf	(??___flmul+1)^0,f,c
  3932   001DC0  3209               	rrcf	??___flmul^0,f,c
  3933   001DC2  C009  F014         	movff	??___flmul,___flmul@prod
  3934   001DC6  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  3935   001DCA  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  3936   001DCE  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  3937   001DD2  4A18               	infsnz	___flmul@temp^0,f,c
  3938   001DD4  2A19               	incf	(___flmul@temp+1)^0,f,c
  3939   001DD6                     l3708:
  3940   001DD6  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3941   001DD8  EFF6  F00E         	goto	u3301
  3942   001DDC  5019               	movf	(___flmul@temp+1)^0,w,c
  3943   001DDE  E108               	bnz	u3300
  3944   001DE0  2818               	incf	___flmul@temp^0,w,c
  3945   001DE2  A0D8               	btfss	status,0,c
  3946   001DE4  EFF6  F00E         	goto	u3301
  3947   001DE8  EFF8  F00E         	goto	u3300
  3948   001DEC                     u3301:
  3949   001DEC  EF02  F00F         	goto	l3712
  3950   001DF0                     u3300:
  3951   001DF0  0E00               	movlw	0
  3952   001DF2  6E14               	movwf	___flmul@prod^0,c
  3953   001DF4  0E00               	movlw	0
  3954   001DF6  6E15               	movwf	(___flmul@prod+1)^0,c
  3955   001DF8  0E80               	movlw	128
  3956   001DFA  6E16               	movwf	(___flmul@prod+2)^0,c
  3957   001DFC  0E7F               	movlw	127
  3958   001DFE  6E17               	movwf	(___flmul@prod+3)^0,c
  3959   001E00  EF30  F00F         	goto	l3724
  3960   001E04                     l3712:
  3961   001E04  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  3962   001E06  EF0F  F00F         	goto	u3310
  3963   001E0A  5019               	movf	(___flmul@temp+1)^0,w,c
  3964   001E0C  E106               	bnz	u3311
  3965   001E0E  0418               	decf	___flmul@temp^0,w,c
  3966   001E10  B0D8               	btfsc	status,0,c
  3967   001E12  EF0D  F00F         	goto	u3311
  3968   001E16  EF0F  F00F         	goto	u3310
  3969   001E1A                     u3311:
  3970   001E1A  EF1B  F00F         	goto	l1165
  3971   001E1E                     u3310:
  3972   001E1E  0E00               	movlw	0
  3973   001E20  6E14               	movwf	___flmul@prod^0,c
  3974   001E22  0E00               	movlw	0
  3975   001E24  6E15               	movwf	(___flmul@prod+1)^0,c
  3976   001E26  0E00               	movlw	0
  3977   001E28  6E16               	movwf	(___flmul@prod+2)^0,c
  3978   001E2A  0E00               	movlw	0
  3979   001E2C  6E17               	movwf	(___flmul@prod+3)^0,c
  3980   001E2E  0E00               	movlw	0
  3981   001E30  6E0D               	movwf	___flmul@sign^0,c
  3982   001E32  EF30  F00F         	goto	l3724
  3983   001E36                     l1165:
  3984   001E36  C018  F013         	movff	___flmul@temp,___flmul@bexp
  3985   001E3A  0EFF               	movlw	255
  3986   001E3C  1614               	andwf	___flmul@prod^0,f,c
  3987   001E3E  0EFF               	movlw	255
  3988   001E40  1615               	andwf	(___flmul@prod+1)^0,f,c
  3989   001E42  0E7F               	movlw	127
  3990   001E44  1616               	andwf	(___flmul@prod+2)^0,f,c
  3991   001E46  0E00               	movlw	0
  3992   001E48  1617               	andwf	(___flmul@prod+3)^0,f,c
  3993   001E4A  A013               	btfss	___flmul@bexp^0,0,c
  3994   001E4C  EF2A  F00F         	goto	u3321
  3995   001E50  EF2C  F00F         	goto	u3320
  3996   001E54                     u3321:
  3997   001E54  EF2D  F00F         	goto	l3722
  3998   001E58                     u3320:
  3999   001E58  8E16               	bsf	(___flmul@prod+2)^0,7,c
  4000   001E5A                     l3722:
  4001   001E5A  90D8               	bcf	status,0,c
  4002   001E5C  3013               	rrcf	___flmul@bexp^0,w,c
  4003   001E5E  6E17               	movwf	(___flmul@prod+3)^0,c
  4004   001E60                     l3724:
  4005   001E60  500D               	movf	___flmul@sign^0,w,c
  4006   001E62  1217               	iorwf	(___flmul@prod+3)^0,f,c
  4007   001E64  C014  F001         	movff	___flmul@prod,?___flmul
  4008   001E68  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  4009   001E6C  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  4010   001E70  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  4011   001E74                     l1152:
  4012   001E74  0012               	return		;funcret
  4013   001E76                     __end_of___flmul:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function ___flge *****************
  4017 ;; Defined at:
  4018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  ff1             4    0[COMRAM] unsigned char 
  4021 ;;  ff2             4    4[COMRAM] unsigned char 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;		None               void
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4033 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;Total ram usage:       12 bytes
  4038 ;; Hardware stack levels used: 1
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_convert_rgb2hue
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text11
  4047   002ADC                     __ptext11:
  4048                           	callstack 0
  4049   002ADC                     ___flge:
  4050                           	callstack 28
  4051   002ADC  0E00               	movlw	0
  4052   002ADE  1401               	andwf	___flge@ff1^0,w,c
  4053   002AE0  6E09               	movwf	??___flge^0,c
  4054   002AE2  0E00               	movlw	0
  4055   002AE4  1402               	andwf	(___flge@ff1+1)^0,w,c
  4056   002AE6  6E0A               	movwf	(??___flge+1)^0,c
  4057   002AE8  0E80               	movlw	128
  4058   002AEA  1403               	andwf	(___flge@ff1+2)^0,w,c
  4059   002AEC  6E0B               	movwf	(??___flge+2)^0,c
  4060   002AEE  0E7F               	movlw	127
  4061   002AF0  1404               	andwf	(___flge@ff1+3)^0,w,c
  4062   002AF2  6E0C               	movwf	(??___flge+3)^0,c
  4063   002AF4  5009               	movf	??___flge^0,w,c
  4064   002AF6  100A               	iorwf	(??___flge+1)^0,w,c
  4065   002AF8  100B               	iorwf	(??___flge+2)^0,w,c
  4066   002AFA  100C               	iorwf	(??___flge+3)^0,w,c
  4067   002AFC  A4D8               	btfss	status,2,c
  4068   002AFE  EF83  F015         	goto	u3361
  4069   002B02  EF85  F015         	goto	u3360
  4070   002B06                     u3361:
  4071   002B06  EF8D  F015         	goto	l3756
  4072   002B0A                     u3360:
  4073   002B0A  0E00               	movlw	0
  4074   002B0C  6E01               	movwf	___flge@ff1^0,c
  4075   002B0E  0E00               	movlw	0
  4076   002B10  6E02               	movwf	(___flge@ff1+1)^0,c
  4077   002B12  0E00               	movlw	0
  4078   002B14  6E03               	movwf	(___flge@ff1+2)^0,c
  4079   002B16  0E00               	movlw	0
  4080   002B18  6E04               	movwf	(___flge@ff1+3)^0,c
  4081   002B1A                     l3756:
  4082   002B1A  0E00               	movlw	0
  4083   002B1C  1405               	andwf	___flge@ff2^0,w,c
  4084   002B1E  6E09               	movwf	??___flge^0,c
  4085   002B20  0E00               	movlw	0
  4086   002B22  1406               	andwf	(___flge@ff2+1)^0,w,c
  4087   002B24  6E0A               	movwf	(??___flge+1)^0,c
  4088   002B26  0E80               	movlw	128
  4089   002B28  1407               	andwf	(___flge@ff2+2)^0,w,c
  4090   002B2A  6E0B               	movwf	(??___flge+2)^0,c
  4091   002B2C  0E7F               	movlw	127
  4092   002B2E  1408               	andwf	(___flge@ff2+3)^0,w,c
  4093   002B30  6E0C               	movwf	(??___flge+3)^0,c
  4094   002B32  5009               	movf	??___flge^0,w,c
  4095   002B34  100A               	iorwf	(??___flge+1)^0,w,c
  4096   002B36  100B               	iorwf	(??___flge+2)^0,w,c
  4097   002B38  100C               	iorwf	(??___flge+3)^0,w,c
  4098   002B3A  A4D8               	btfss	status,2,c
  4099   002B3C  EFA2  F015         	goto	u3371
  4100   002B40  EFA4  F015         	goto	u3370
  4101   002B44                     u3371:
  4102   002B44  EFAC  F015         	goto	l3760
  4103   002B48                     u3370:
  4104   002B48  0E00               	movlw	0
  4105   002B4A  6E05               	movwf	___flge@ff2^0,c
  4106   002B4C  0E00               	movlw	0
  4107   002B4E  6E06               	movwf	(___flge@ff2+1)^0,c
  4108   002B50  0E00               	movlw	0
  4109   002B52  6E07               	movwf	(___flge@ff2+2)^0,c
  4110   002B54  0E00               	movlw	0
  4111   002B56  6E08               	movwf	(___flge@ff2+3)^0,c
  4112   002B58                     l3760:
  4113   002B58  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4114   002B5A  EFB1  F015         	goto	u3381
  4115   002B5E  EFB3  F015         	goto	u3380
  4116   002B62                     u3381:
  4117   002B62  EFBC  F015         	goto	l3764
  4118   002B66                     u3380:
  4119   002B66  6C01               	negf	___flge@ff1^0,c
  4120   002B68  1E02               	comf	(___flge@ff1+1)^0,f,c
  4121   002B6A  B0D8               	btfsc	status,0,c
  4122   002B6C  2A02               	incf	(___flge@ff1+1)^0,f,c
  4123   002B6E  1E03               	comf	(___flge@ff1+2)^0,f,c
  4124   002B70  B0D8               	btfsc	status,0,c
  4125   002B72  2A03               	incf	(___flge@ff1+2)^0,f,c
  4126   002B74  0E80               	movlw	128
  4127   002B76  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4128   002B78                     l3764:
  4129   002B78  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4130   002B7A  EFC1  F015         	goto	u3391
  4131   002B7E  EFC3  F015         	goto	u3390
  4132   002B82                     u3391:
  4133   002B82  EFCC  F015         	goto	l799
  4134   002B86                     u3390:
  4135   002B86  6C05               	negf	___flge@ff2^0,c
  4136   002B88  1E06               	comf	(___flge@ff2+1)^0,f,c
  4137   002B8A  B0D8               	btfsc	status,0,c
  4138   002B8C  2A06               	incf	(___flge@ff2+1)^0,f,c
  4139   002B8E  1E07               	comf	(___flge@ff2+2)^0,f,c
  4140   002B90  B0D8               	btfsc	status,0,c
  4141   002B92  2A07               	incf	(___flge@ff2+2)^0,f,c
  4142   002B94  0E80               	movlw	128
  4143   002B96  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4144   002B98                     l799:
  4145   002B98  0E00               	movlw	0
  4146   002B9A  1A01               	xorwf	___flge@ff1^0,f,c
  4147   002B9C  0E00               	movlw	0
  4148   002B9E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4149   002BA0  0E00               	movlw	0
  4150   002BA2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4151   002BA4  0E80               	movlw	128
  4152   002BA6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4153   002BA8  0E00               	movlw	0
  4154   002BAA  1A05               	xorwf	___flge@ff2^0,f,c
  4155   002BAC  0E00               	movlw	0
  4156   002BAE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4157   002BB0  0E00               	movlw	0
  4158   002BB2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4159   002BB4  0E80               	movlw	128
  4160   002BB6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4161   002BB8  5005               	movf	___flge@ff2^0,w,c
  4162   002BBA  5C01               	subwf	___flge@ff1^0,w,c
  4163   002BBC  5006               	movf	(___flge@ff2+1)^0,w,c
  4164   002BBE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4165   002BC0  5007               	movf	(___flge@ff2+2)^0,w,c
  4166   002BC2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4167   002BC4  5008               	movf	(___flge@ff2+3)^0,w,c
  4168   002BC6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4169   002BC8  B0D8               	btfsc	status,0,c
  4170   002BCA  EFE9  F015         	goto	u3401
  4171   002BCE  EFEB  F015         	goto	u3400
  4172   002BD2                     u3401:
  4173   002BD2  EFEE  F015         	goto	l3770
  4174   002BD6                     u3400:
  4175   002BD6  90D8               	bcf	status,0,c
  4176   002BD8  EFEF  F015         	goto	l804
  4177   002BDC                     l3770:
  4178   002BDC  80D8               	bsf	status,0,c
  4179   002BDE                     l804:
  4180   002BDE  0012               	return		;funcret
  4181   002BE0                     __end_of___flge:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function ___fleq *****************
  4185 ;; Defined at:
  4186 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  ff1             4    0[COMRAM] unsigned char 
  4189 ;;  ff2             4    4[COMRAM] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;		None               void
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;Total ram usage:       12 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_convert_rgb2hue
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text12
  4215   002EBA                     __ptext12:
  4216                           	callstack 0
  4217   002EBA                     ___fleq:
  4218                           	callstack 28
  4219   002EBA  0E00               	movlw	0
  4220   002EBC  1401               	andwf	___fleq@ff1^0,w,c
  4221   002EBE  6E09               	movwf	??___fleq^0,c
  4222   002EC0  0E00               	movlw	0
  4223   002EC2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4224   002EC4  6E0A               	movwf	(??___fleq+1)^0,c
  4225   002EC6  0E80               	movlw	128
  4226   002EC8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4227   002ECA  6E0B               	movwf	(??___fleq+2)^0,c
  4228   002ECC  0E7F               	movlw	127
  4229   002ECE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4230   002ED0  6E0C               	movwf	(??___fleq+3)^0,c
  4231   002ED2  5009               	movf	??___fleq^0,w,c
  4232   002ED4  100A               	iorwf	(??___fleq+1)^0,w,c
  4233   002ED6  100B               	iorwf	(??___fleq+2)^0,w,c
  4234   002ED8  100C               	iorwf	(??___fleq+3)^0,w,c
  4235   002EDA  A4D8               	btfss	status,2,c
  4236   002EDC  EF72  F017         	goto	u3331
  4237   002EE0  EF74  F017         	goto	u3330
  4238   002EE4                     u3331:
  4239   002EE4  EF7C  F017         	goto	l3740
  4240   002EE8                     u3330:
  4241   002EE8  0E00               	movlw	0
  4242   002EEA  6E01               	movwf	___fleq@ff1^0,c
  4243   002EEC  0E00               	movlw	0
  4244   002EEE  6E02               	movwf	(___fleq@ff1+1)^0,c
  4245   002EF0  0E00               	movlw	0
  4246   002EF2  6E03               	movwf	(___fleq@ff1+2)^0,c
  4247   002EF4  0E00               	movlw	0
  4248   002EF6  6E04               	movwf	(___fleq@ff1+3)^0,c
  4249   002EF8                     l3740:
  4250   002EF8  0E00               	movlw	0
  4251   002EFA  1405               	andwf	___fleq@ff2^0,w,c
  4252   002EFC  6E09               	movwf	??___fleq^0,c
  4253   002EFE  0E00               	movlw	0
  4254   002F00  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4255   002F02  6E0A               	movwf	(??___fleq+1)^0,c
  4256   002F04  0E80               	movlw	128
  4257   002F06  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4258   002F08  6E0B               	movwf	(??___fleq+2)^0,c
  4259   002F0A  0E7F               	movlw	127
  4260   002F0C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4261   002F0E  6E0C               	movwf	(??___fleq+3)^0,c
  4262   002F10  5009               	movf	??___fleq^0,w,c
  4263   002F12  100A               	iorwf	(??___fleq+1)^0,w,c
  4264   002F14  100B               	iorwf	(??___fleq+2)^0,w,c
  4265   002F16  100C               	iorwf	(??___fleq+3)^0,w,c
  4266   002F18  A4D8               	btfss	status,2,c
  4267   002F1A  EF91  F017         	goto	u3341
  4268   002F1E  EF93  F017         	goto	u3340
  4269   002F22                     u3341:
  4270   002F22  EF9B  F017         	goto	l3744
  4271   002F26                     u3340:
  4272   002F26  0E00               	movlw	0
  4273   002F28  6E05               	movwf	___fleq@ff2^0,c
  4274   002F2A  0E00               	movlw	0
  4275   002F2C  6E06               	movwf	(___fleq@ff2+1)^0,c
  4276   002F2E  0E00               	movlw	0
  4277   002F30  6E07               	movwf	(___fleq@ff2+2)^0,c
  4278   002F32  0E00               	movlw	0
  4279   002F34  6E08               	movwf	(___fleq@ff2+3)^0,c
  4280   002F36                     l3744:
  4281   002F36  5005               	movf	___fleq@ff2^0,w,c
  4282   002F38  1801               	xorwf	___fleq@ff1^0,w,c
  4283   002F3A  E10F               	bnz	u3350
  4284   002F3C  5006               	movf	(___fleq@ff2+1)^0,w,c
  4285   002F3E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4286   002F40  E10C               	bnz	u3350
  4287   002F42  5007               	movf	(___fleq@ff2+2)^0,w,c
  4288   002F44  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4289   002F46  E109               	bnz	u3350
  4290   002F48  5008               	movf	(___fleq@ff2+3)^0,w,c
  4291   002F4A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4292   002F4C  B4D8               	btfsc	status,2,c
  4293   002F4E  EFAB  F017         	goto	u3351
  4294   002F52  EFAD  F017         	goto	u3350
  4295   002F56                     u3351:
  4296   002F56  EFB0  F017         	goto	l3748
  4297   002F5A                     u3350:
  4298   002F5A  90D8               	bcf	status,0,c
  4299   002F5C  EFB1  F017         	goto	l793
  4300   002F60                     l3748:
  4301   002F60  80D8               	bsf	status,0,c
  4302   002F62                     l793:
  4303   002F62  0012               	return		;funcret
  4304   002F64                     __end_of___fleq:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function ___fldiv *****************
  4308 ;; Defined at:
  4309 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  b               4   24[COMRAM] unsigned char 
  4312 ;;  a               4   28[COMRAM] unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  grs             4   43[COMRAM] unsigned long 
  4315 ;;  rem             4   36[COMRAM] unsigned long 
  4316 ;;  new_exp         2   41[COMRAM] short 
  4317 ;;  aexp            1   48[COMRAM] unsigned char 
  4318 ;;  bexp            1   47[COMRAM] unsigned char 
  4319 ;;  sign            1   40[COMRAM] unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  4   24[COMRAM] unsigned char 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;Total ram usage:       25 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_convert_rgb2hue
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text13
  4343   001E76                     __ptext13:
  4344                           	callstack 0
  4345   001E76                     ___fldiv:
  4346                           	callstack 28
  4347   001E76  501C               	movf	(___fldiv@b+3)^0,w,c
  4348   001E78  0B80               	andlw	128
  4349   001E7A  6E29               	movwf	___fldiv@sign^0,c
  4350   001E7C  501C               	movf	(___fldiv@b+3)^0,w,c
  4351   001E7E  241C               	addwf	(___fldiv@b+3)^0,w,c
  4352   001E80  6E30               	movwf	___fldiv@bexp^0,c
  4353   001E82  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4354   001E84  EF46  F00F         	goto	u2911
  4355   001E88  EF48  F00F         	goto	u2910
  4356   001E8C                     u2911:
  4357   001E8C  EF49  F00F         	goto	l3468
  4358   001E90                     u2910:
  4359   001E90  8030               	bsf	___fldiv@bexp^0,0,c
  4360   001E92                     l3468:
  4361   001E92  5030               	movf	___fldiv@bexp^0,w,c
  4362   001E94  B4D8               	btfsc	status,2,c
  4363   001E96  EF4F  F00F         	goto	u2921
  4364   001E9A  EF51  F00F         	goto	u2920
  4365   001E9E                     u2921:
  4366   001E9E  EF66  F00F         	goto	l3478
  4367   001EA2                     u2920:
  4368   001EA2  2830               	incf	___fldiv@bexp^0,w,c
  4369   001EA4  A4D8               	btfss	status,2,c
  4370   001EA6  EF57  F00F         	goto	u2931
  4371   001EAA  EF59  F00F         	goto	u2930
  4372   001EAE                     u2931:
  4373   001EAE  EF61  F00F         	goto	l3474
  4374   001EB2                     u2930:
  4375   001EB2  0E00               	movlw	0
  4376   001EB4  6E19               	movwf	___fldiv@b^0,c
  4377   001EB6  0E00               	movlw	0
  4378   001EB8  6E1A               	movwf	(___fldiv@b+1)^0,c
  4379   001EBA  0E00               	movlw	0
  4380   001EBC  6E1B               	movwf	(___fldiv@b+2)^0,c
  4381   001EBE  0E00               	movlw	0
  4382   001EC0  6E1C               	movwf	(___fldiv@b+3)^0,c
  4383   001EC2                     l3474:
  4384   001EC2  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4385   001EC4  0E00               	movlw	0
  4386   001EC6  6E1C               	movwf	(___fldiv@b+3)^0,c
  4387   001EC8  EF6E  F00F         	goto	l3480
  4388   001ECC                     l3478:
  4389   001ECC  0E00               	movlw	0
  4390   001ECE  6E19               	movwf	___fldiv@b^0,c
  4391   001ED0  0E00               	movlw	0
  4392   001ED2  6E1A               	movwf	(___fldiv@b+1)^0,c
  4393   001ED4  0E00               	movlw	0
  4394   001ED6  6E1B               	movwf	(___fldiv@b+2)^0,c
  4395   001ED8  0E00               	movlw	0
  4396   001EDA  6E1C               	movwf	(___fldiv@b+3)^0,c
  4397   001EDC                     l3480:
  4398   001EDC  5020               	movf	(___fldiv@a+3)^0,w,c
  4399   001EDE  0B80               	andlw	128
  4400   001EE0  1A29               	xorwf	___fldiv@sign^0,f,c
  4401   001EE2  5020               	movf	(___fldiv@a+3)^0,w,c
  4402   001EE4  2420               	addwf	(___fldiv@a+3)^0,w,c
  4403   001EE6  6E31               	movwf	___fldiv@aexp^0,c
  4404   001EE8  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  4405   001EEA  EF79  F00F         	goto	u2941
  4406   001EEE  EF7B  F00F         	goto	u2940
  4407   001EF2                     u2941:
  4408   001EF2  EF7C  F00F         	goto	l3488
  4409   001EF6                     u2940:
  4410   001EF6  8031               	bsf	___fldiv@aexp^0,0,c
  4411   001EF8                     l3488:
  4412   001EF8  5031               	movf	___fldiv@aexp^0,w,c
  4413   001EFA  B4D8               	btfsc	status,2,c
  4414   001EFC  EF82  F00F         	goto	u2951
  4415   001F00  EF84  F00F         	goto	u2950
  4416   001F04                     u2951:
  4417   001F04  EF99  F00F         	goto	l3498
  4418   001F08                     u2950:
  4419   001F08  2831               	incf	___fldiv@aexp^0,w,c
  4420   001F0A  A4D8               	btfss	status,2,c
  4421   001F0C  EF8A  F00F         	goto	u2961
  4422   001F10  EF8C  F00F         	goto	u2960
  4423   001F14                     u2961:
  4424   001F14  EF94  F00F         	goto	l3494
  4425   001F18                     u2960:
  4426   001F18  0E00               	movlw	0
  4427   001F1A  6E1D               	movwf	___fldiv@a^0,c
  4428   001F1C  0E00               	movlw	0
  4429   001F1E  6E1E               	movwf	(___fldiv@a+1)^0,c
  4430   001F20  0E00               	movlw	0
  4431   001F22  6E1F               	movwf	(___fldiv@a+2)^0,c
  4432   001F24  0E00               	movlw	0
  4433   001F26  6E20               	movwf	(___fldiv@a+3)^0,c
  4434   001F28                     l3494:
  4435   001F28  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  4436   001F2A  0E00               	movlw	0
  4437   001F2C  6E20               	movwf	(___fldiv@a+3)^0,c
  4438   001F2E  EFA1  F00F         	goto	l3500
  4439   001F32                     l3498:
  4440   001F32  0E00               	movlw	0
  4441   001F34  6E1D               	movwf	___fldiv@a^0,c
  4442   001F36  0E00               	movlw	0
  4443   001F38  6E1E               	movwf	(___fldiv@a+1)^0,c
  4444   001F3A  0E00               	movlw	0
  4445   001F3C  6E1F               	movwf	(___fldiv@a+2)^0,c
  4446   001F3E  0E00               	movlw	0
  4447   001F40  6E20               	movwf	(___fldiv@a+3)^0,c
  4448   001F42                     l3500:
  4449   001F42  501D               	movf	___fldiv@a^0,w,c
  4450   001F44  101E               	iorwf	(___fldiv@a+1)^0,w,c
  4451   001F46  101F               	iorwf	(___fldiv@a+2)^0,w,c
  4452   001F48  1020               	iorwf	(___fldiv@a+3)^0,w,c
  4453   001F4A  A4D8               	btfss	status,2,c
  4454   001F4C  EFAA  F00F         	goto	u2971
  4455   001F50  EFAC  F00F         	goto	u2970
  4456   001F54                     u2971:
  4457   001F54  EFC4  F00F         	goto	l3512
  4458   001F58                     u2970:
  4459   001F58  0E00               	movlw	0
  4460   001F5A  6E19               	movwf	___fldiv@b^0,c
  4461   001F5C  0E00               	movlw	0
  4462   001F5E  6E1A               	movwf	(___fldiv@b+1)^0,c
  4463   001F60  0E00               	movlw	0
  4464   001F62  6E1B               	movwf	(___fldiv@b+2)^0,c
  4465   001F64  0E00               	movlw	0
  4466   001F66  6E1C               	movwf	(___fldiv@b+3)^0,c
  4467   001F68  0E80               	movlw	128
  4468   001F6A  121B               	iorwf	(___fldiv@b+2)^0,f,c
  4469   001F6C  0E7F               	movlw	127
  4470   001F6E  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4471   001F70                     l3506:
  4472   001F70  5029               	movf	___fldiv@sign^0,w,c
  4473   001F72  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4474   001F74  C019  F019         	movff	___fldiv@b,?___fldiv
  4475   001F78  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  4476   001F7C  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  4477   001F80  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  4478   001F84  EF07  F011         	goto	l1116
  4479   001F88                     l3512:
  4480   001F88  5030               	movf	___fldiv@bexp^0,w,c
  4481   001F8A  A4D8               	btfss	status,2,c
  4482   001F8C  EFCA  F00F         	goto	u2981
  4483   001F90  EFCC  F00F         	goto	u2980
  4484   001F94                     u2981:
  4485   001F94  EFD6  F00F         	goto	l3520
  4486   001F98                     u2980:
  4487   001F98  0E00               	movlw	0
  4488   001F9A  6E19               	movwf	?___fldiv^0,c
  4489   001F9C  0E00               	movlw	0
  4490   001F9E  6E1A               	movwf	(?___fldiv+1)^0,c
  4491   001FA0  0E00               	movlw	0
  4492   001FA2  6E1B               	movwf	(?___fldiv+2)^0,c
  4493   001FA4  0E00               	movlw	0
  4494   001FA6  6E1C               	movwf	(?___fldiv+3)^0,c
  4495   001FA8  EF07  F011         	goto	l1116
  4496   001FAC                     l3520:
  4497   001FAC  5031               	movf	___fldiv@aexp^0,w,c
  4498   001FAE  C030  F021         	movff	___fldiv@bexp,??___fldiv
  4499   001FB2  6A22               	clrf	(??___fldiv+1)^0,c
  4500   001FB4  5E21               	subwf	??___fldiv^0,f,c
  4501   001FB6  0E00               	movlw	0
  4502   001FB8  5A22               	subwfb	(??___fldiv+1)^0,f,c
  4503   001FBA  0E7F               	movlw	127
  4504   001FBC  2421               	addwf	??___fldiv^0,w,c
  4505   001FBE  6E2A               	movwf	___fldiv@new_exp^0,c
  4506   001FC0  0E00               	movlw	0
  4507   001FC2  2022               	addwfc	(??___fldiv+1)^0,w,c
  4508   001FC4  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4509   001FC6  C019  F025         	movff	___fldiv@b,___fldiv@rem
  4510   001FCA  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  4511   001FCE  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  4512   001FD2  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  4513   001FD6  0E00               	movlw	0
  4514   001FD8  6E19               	movwf	___fldiv@b^0,c
  4515   001FDA  0E00               	movlw	0
  4516   001FDC  6E1A               	movwf	(___fldiv@b+1)^0,c
  4517   001FDE  0E00               	movlw	0
  4518   001FE0  6E1B               	movwf	(___fldiv@b+2)^0,c
  4519   001FE2  0E00               	movlw	0
  4520   001FE4  6E1C               	movwf	(___fldiv@b+3)^0,c
  4521   001FE6  0E00               	movlw	0
  4522   001FE8  6E2C               	movwf	___fldiv@grs^0,c
  4523   001FEA  0E00               	movlw	0
  4524   001FEC  6E2D               	movwf	(___fldiv@grs+1)^0,c
  4525   001FEE  0E00               	movlw	0
  4526   001FF0  6E2E               	movwf	(___fldiv@grs+2)^0,c
  4527   001FF2  0E00               	movlw	0
  4528   001FF4  6E2F               	movwf	(___fldiv@grs+3)^0,c
  4529   001FF6  0E00               	movlw	0
  4530   001FF8  6E31               	movwf	___fldiv@aexp^0,c
  4531   001FFA  EF37  F010         	goto	l1118
  4532   001FFE                     l3530:
  4533   001FFE  5031               	movf	___fldiv@aexp^0,w,c
  4534   002000  B4D8               	btfsc	status,2,c
  4535   002002  EF05  F010         	goto	u2991
  4536   002006  EF07  F010         	goto	u2990
  4537   00200A                     u2991:
  4538   00200A  EF1E  F010         	goto	l3538
  4539   00200E                     u2990:
  4540   00200E  90D8               	bcf	status,0,c
  4541   002010  3625               	rlcf	___fldiv@rem^0,f,c
  4542   002012  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  4543   002014  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  4544   002016  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  4545   002018  90D8               	bcf	status,0,c
  4546   00201A  3619               	rlcf	___fldiv@b^0,f,c
  4547   00201C  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4548   00201E  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4549   002020  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4550   002022  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4551   002024  EF16  F010         	goto	u3001
  4552   002028  EF18  F010         	goto	u3000
  4553   00202C                     u3001:
  4554   00202C  EF19  F010         	goto	l1121
  4555   002030                     u3000:
  4556   002030  8019               	bsf	___fldiv@b^0,0,c
  4557   002032                     l1121:
  4558   002032  90D8               	bcf	status,0,c
  4559   002034  362C               	rlcf	___fldiv@grs^0,f,c
  4560   002036  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4561   002038  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4562   00203A  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4563   00203C                     l3538:
  4564   00203C  501D               	movf	___fldiv@a^0,w,c
  4565   00203E  5C25               	subwf	___fldiv@rem^0,w,c
  4566   002040  501E               	movf	(___fldiv@a+1)^0,w,c
  4567   002042  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  4568   002044  501F               	movf	(___fldiv@a+2)^0,w,c
  4569   002046  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  4570   002048  5020               	movf	(___fldiv@a+3)^0,w,c
  4571   00204A  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  4572   00204C  A0D8               	btfss	status,0,c
  4573   00204E  EF2B  F010         	goto	u3011
  4574   002052  EF2D  F010         	goto	u3010
  4575   002056                     u3011:
  4576   002056  EF36  F010         	goto	l3544
  4577   00205A                     u3010:
  4578   00205A  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  4579   00205C  501D               	movf	___fldiv@a^0,w,c
  4580   00205E  5E25               	subwf	___fldiv@rem^0,f,c
  4581   002060  501E               	movf	(___fldiv@a+1)^0,w,c
  4582   002062  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  4583   002064  501F               	movf	(___fldiv@a+2)^0,w,c
  4584   002066  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  4585   002068  5020               	movf	(___fldiv@a+3)^0,w,c
  4586   00206A  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  4587   00206C                     l3544:
  4588   00206C  2A31               	incf	___fldiv@aexp^0,f,c
  4589   00206E                     l1118:
  4590   00206E  0E19               	movlw	25
  4591   002070  6431               	cpfsgt	___fldiv@aexp^0,c
  4592   002072  EF3D  F010         	goto	u3021
  4593   002076  EF3F  F010         	goto	u3020
  4594   00207A                     u3021:
  4595   00207A  EFFF  F00F         	goto	l3530
  4596   00207E                     u3020:
  4597   00207E  5025               	movf	___fldiv@rem^0,w,c
  4598   002080  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  4599   002082  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  4600   002084  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  4601   002086  B4D8               	btfsc	status,2,c
  4602   002088  EF48  F010         	goto	u3031
  4603   00208C  EF4A  F010         	goto	u3030
  4604   002090                     u3031:
  4605   002090  EF62  F010         	goto	l3556
  4606   002094                     u3030:
  4607   002094  802C               	bsf	___fldiv@grs^0,0,c
  4608   002096  EF62  F010         	goto	l3556
  4609   00209A                     l3550:
  4610   00209A  90D8               	bcf	status,0,c
  4611   00209C  3619               	rlcf	___fldiv@b^0,f,c
  4612   00209E  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4613   0020A0  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4614   0020A2  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4615   0020A4  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4616   0020A6  EF57  F010         	goto	u3041
  4617   0020AA  EF59  F010         	goto	u3040
  4618   0020AE                     u3041:
  4619   0020AE  EF5A  F010         	goto	l1127
  4620   0020B2                     u3040:
  4621   0020B2  8019               	bsf	___fldiv@b^0,0,c
  4622   0020B4                     l1127:
  4623   0020B4  90D8               	bcf	status,0,c
  4624   0020B6  362C               	rlcf	___fldiv@grs^0,f,c
  4625   0020B8  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4626   0020BA  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4627   0020BC  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4628   0020BE  062A               	decf	___fldiv@new_exp^0,f,c
  4629   0020C0  A0D8               	btfss	status,0,c
  4630   0020C2  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  4631   0020C4                     l3556:
  4632   0020C4  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4633   0020C6  EF67  F010         	goto	u3051
  4634   0020CA  EF69  F010         	goto	u3050
  4635   0020CE                     u3051:
  4636   0020CE  EF4D  F010         	goto	l3550
  4637   0020D2                     u3050:
  4638   0020D2  0E00               	movlw	0
  4639   0020D4  6E31               	movwf	___fldiv@aexp^0,c
  4640   0020D6  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4641   0020D8  EF70  F010         	goto	u3061
  4642   0020DC  EF72  F010         	goto	u3060
  4643   0020E0                     u3061:
  4644   0020E0  EF96  F010         	goto	l1129
  4645   0020E4                     u3060:
  4646   0020E4  0EFF               	movlw	255
  4647   0020E6  142C               	andwf	___fldiv@grs^0,w,c
  4648   0020E8  6E21               	movwf	??___fldiv^0,c
  4649   0020EA  0EFF               	movlw	255
  4650   0020EC  142D               	andwf	(___fldiv@grs+1)^0,w,c
  4651   0020EE  6E22               	movwf	(??___fldiv+1)^0,c
  4652   0020F0  0EFF               	movlw	255
  4653   0020F2  142E               	andwf	(___fldiv@grs+2)^0,w,c
  4654   0020F4  6E23               	movwf	(??___fldiv+2)^0,c
  4655   0020F6  0E7F               	movlw	127
  4656   0020F8  142F               	andwf	(___fldiv@grs+3)^0,w,c
  4657   0020FA  6E24               	movwf	(??___fldiv+3)^0,c
  4658   0020FC  5021               	movf	??___fldiv^0,w,c
  4659   0020FE  1022               	iorwf	(??___fldiv+1)^0,w,c
  4660   002100  1023               	iorwf	(??___fldiv+2)^0,w,c
  4661   002102  1024               	iorwf	(??___fldiv+3)^0,w,c
  4662   002104  B4D8               	btfsc	status,2,c
  4663   002106  EF87  F010         	goto	u3071
  4664   00210A  EF89  F010         	goto	u3070
  4665   00210E                     u3071:
  4666   00210E  EF8D  F010         	goto	l1130
  4667   002112                     u3070:
  4668   002112                     l3564:
  4669   002112  0E01               	movlw	1
  4670   002114  6E31               	movwf	___fldiv@aexp^0,c
  4671   002116  EF96  F010         	goto	l1129
  4672   00211A                     l1130:
  4673   00211A  A019               	btfss	___fldiv@b^0,0,c
  4674   00211C  EF92  F010         	goto	u3081
  4675   002120  EF94  F010         	goto	u3080
  4676   002124                     u3081:
  4677   002124  EF96  F010         	goto	l1129
  4678   002128                     u3080:
  4679   002128  EF89  F010         	goto	l3564
  4680   00212C                     l1129:
  4681   00212C  5031               	movf	___fldiv@aexp^0,w,c
  4682   00212E  B4D8               	btfsc	status,2,c
  4683   002130  EF9C  F010         	goto	u3091
  4684   002134  EF9E  F010         	goto	u3090
  4685   002138                     u3091:
  4686   002138  EFC2  F010         	goto	l3576
  4687   00213C                     u3090:
  4688   00213C  0E01               	movlw	1
  4689   00213E  2619               	addwf	___fldiv@b^0,f,c
  4690   002140  0E00               	movlw	0
  4691   002142  221A               	addwfc	(___fldiv@b+1)^0,f,c
  4692   002144  221B               	addwfc	(___fldiv@b+2)^0,f,c
  4693   002146  221C               	addwfc	(___fldiv@b+3)^0,f,c
  4694   002148  A01C               	btfss	(___fldiv@b+3)^0,0,c
  4695   00214A  EFA9  F010         	goto	u3101
  4696   00214E  EFAB  F010         	goto	u3100
  4697   002152                     u3101:
  4698   002152  EFC2  F010         	goto	l3576
  4699   002156                     u3100:
  4700   002156  C019  F021         	movff	___fldiv@b,??___fldiv
  4701   00215A  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  4702   00215E  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  4703   002162  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  4704   002166  3424               	rlcf	(??___fldiv+3)^0,w,c
  4705   002168  3224               	rrcf	(??___fldiv+3)^0,f,c
  4706   00216A  3223               	rrcf	(??___fldiv+2)^0,f,c
  4707   00216C  3222               	rrcf	(??___fldiv+1)^0,f,c
  4708   00216E  3221               	rrcf	??___fldiv^0,f,c
  4709   002170  C021  F019         	movff	??___fldiv,___fldiv@b
  4710   002174  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  4711   002178  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  4712   00217C  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  4713   002180  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  4714   002182  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  4715   002184                     l3576:
  4716   002184  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4717   002186  EFCD  F010         	goto	u3111
  4718   00218A  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4719   00218C  E108               	bnz	u3110
  4720   00218E  282A               	incf	___fldiv@new_exp^0,w,c
  4721   002190  A0D8               	btfss	status,0,c
  4722   002192  EFCD  F010         	goto	u3111
  4723   002196  EFCF  F010         	goto	u3110
  4724   00219A                     u3111:
  4725   00219A  EFDA  F010         	goto	l3580
  4726   00219E                     u3110:
  4727   00219E  0E00               	movlw	0
  4728   0021A0  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4729   0021A2  682A               	setf	___fldiv@new_exp^0,c
  4730   0021A4  0E00               	movlw	0
  4731   0021A6  6E19               	movwf	___fldiv@b^0,c
  4732   0021A8  0E00               	movlw	0
  4733   0021AA  6E1A               	movwf	(___fldiv@b+1)^0,c
  4734   0021AC  0E00               	movlw	0
  4735   0021AE  6E1B               	movwf	(___fldiv@b+2)^0,c
  4736   0021B0  0E00               	movlw	0
  4737   0021B2  6E1C               	movwf	(___fldiv@b+3)^0,c
  4738   0021B4                     l3580:
  4739   0021B4  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4740   0021B6  EFE7  F010         	goto	u3120
  4741   0021BA  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4742   0021BC  E106               	bnz	u3121
  4743   0021BE  042A               	decf	___fldiv@new_exp^0,w,c
  4744   0021C0  B0D8               	btfsc	status,0,c
  4745   0021C2  EFE5  F010         	goto	u3121
  4746   0021C6  EFE7  F010         	goto	u3120
  4747   0021CA                     u3121:
  4748   0021CA  EFF5  F010         	goto	l3584
  4749   0021CE                     u3120:
  4750   0021CE  0E00               	movlw	0
  4751   0021D0  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4752   0021D2  0E00               	movlw	0
  4753   0021D4  6E2A               	movwf	___fldiv@new_exp^0,c
  4754   0021D6  0E00               	movlw	0
  4755   0021D8  6E19               	movwf	___fldiv@b^0,c
  4756   0021DA  0E00               	movlw	0
  4757   0021DC  6E1A               	movwf	(___fldiv@b+1)^0,c
  4758   0021DE  0E00               	movlw	0
  4759   0021E0  6E1B               	movwf	(___fldiv@b+2)^0,c
  4760   0021E2  0E00               	movlw	0
  4761   0021E4  6E1C               	movwf	(___fldiv@b+3)^0,c
  4762   0021E6  0E00               	movlw	0
  4763   0021E8  6E29               	movwf	___fldiv@sign^0,c
  4764   0021EA                     l3584:
  4765   0021EA  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  4766   0021EE  A030               	btfss	___fldiv@bexp^0,0,c
  4767   0021F0  EFFC  F010         	goto	u3131
  4768   0021F4  EFFE  F010         	goto	u3130
  4769   0021F8                     u3131:
  4770   0021F8  EF01  F011         	goto	l3590
  4771   0021FC                     u3130:
  4772   0021FC  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4773   0021FE  EF02  F011         	goto	l3592
  4774   002202                     l3590:
  4775   002202  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  4776   002204                     l3592:
  4777   002204  90D8               	bcf	status,0,c
  4778   002206  3030               	rrcf	___fldiv@bexp^0,w,c
  4779   002208  6E1C               	movwf	(___fldiv@b+3)^0,c
  4780   00220A  EFB8  F00F         	goto	l3506
  4781   00220E                     l1116:
  4782   00220E  0012               	return		;funcret
  4783   002210                     __end_of___fldiv:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _initUSART4 *****************
  4787 ;; Defined at:
  4788 ;;		line 14 in file "serial.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text14
  4816   0035FC                     __ptext14:
  4817                           	callstack 0
  4818   0035FC                     _initUSART4:
  4819                           	callstack 30
  4820   0035FC                     
  4821                           ;serial.c: 15:     RC0PPS = 0x12;
  4822   0035FC  0E12               	movlw	18
  4823   0035FE  010E               	movlb	14	; () banked
  4824   003600  6F62               	movwf	98,b	;volatile
  4825                           
  4826                           ;serial.c: 16:     RX4PPS = 0x11;
  4827   003602  0E11               	movlw	17
  4828   003604  6F15               	movwf	21,b	;volatile
  4829   003606                     
  4830                           ; BSR set to: 14
  4831                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  4832   003606  97E9               	bcf	233,3,b	;volatile
  4833   003608                     
  4834                           ; BSR set to: 14
  4835                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  4836   003608  95E8               	bcf	232,2,b	;volatile
  4837                           
  4838                           ;serial.c: 19:     SP4BRGL = 51;
  4839   00360A  0E33               	movlw	51
  4840   00360C  6FE5               	movwf	229,b	;volatile
  4841                           
  4842                           ;serial.c: 20:     SP4BRGH = 0;
  4843   00360E  0E00               	movlw	0
  4844   003610  6FE6               	movwf	230,b	;volatile
  4845   003612                     
  4846                           ; BSR set to: 14
  4847                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4848   003612  89E7               	bsf	231,4,b	;volatile
  4849   003614                     
  4850                           ; BSR set to: 14
  4851                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4852   003614  8BE8               	bsf	232,5,b	;volatile
  4853   003616                     
  4854                           ; BSR set to: 14
  4855                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4856   003616  8FE7               	bsf	231,7,b	;volatile
  4857   003618                     
  4858                           ; BSR set to: 14
  4859   003618  0012               	return		;funcret
  4860   00361A                     __end_of_initUSART4:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _initDCmotorsPWM *****************
  4864 ;; Defined at:
  4865 ;;		line 5 in file "dc_motor.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used: 1
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text15
  4893   0030A4                     __ptext15:
  4894                           	callstack 0
  4895   0030A4                     _initDCmotorsPWM:
  4896                           	callstack 30
  4897   0030A4                     
  4898                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4899   0030A4  9485               	bcf	133,2,c	;volatile
  4900                           
  4901                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4902   0030A6  9E83               	bcf	131,7,c	;volatile
  4903                           
  4904                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4905   0030A8  9885               	bcf	133,4,c	;volatile
  4906                           
  4907                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4908   0030AA  9C87               	bcf	135,6,c	;volatile
  4909                           
  4910                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4911   0030AC  947D               	bcf	125,2,c	;volatile
  4912                           
  4913                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4914   0030AE  9E7B               	bcf	123,7,c	;volatile
  4915                           
  4916                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4917   0030B0  987D               	bcf	125,4,c	;volatile
  4918                           
  4919                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  4920   0030B2  9C7F               	bcf	127,6,c	;volatile
  4921   0030B4                     
  4922                           ;dc_motor.c: 18:     RE2PPS=0x05;
  4923   0030B4  0E05               	movlw	5
  4924   0030B6  010E               	movlb	14	; () banked
  4925   0030B8  6F74               	movwf	116,b	;volatile
  4926                           
  4927                           ;dc_motor.c: 19:     RE4PPS=0x06;
  4928   0030BA  0E06               	movlw	6
  4929   0030BC  6F76               	movwf	118,b	;volatile
  4930                           
  4931                           ;dc_motor.c: 20:     RC7PPS=0x07;
  4932   0030BE  0E07               	movlw	7
  4933   0030C0  6F69               	movwf	105,b	;volatile
  4934                           
  4935                           ;dc_motor.c: 21:     RG6PPS=0x08;
  4936   0030C2  0E08               	movlw	8
  4937   0030C4  6F88               	movwf	136,b	;volatile
  4938                           
  4939                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  4940   0030C6  50BD               	movf	189,w,c	;volatile
  4941   0030C8  0B8F               	andlw	-113
  4942   0030CA  0940               	iorlw	64
  4943   0030CC  6EBD               	movwf	189,c	;volatile
  4944                           
  4945                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  4946   0030CE  0EE0               	movlw	-32
  4947   0030D0  16BE               	andwf	190,f,c	;volatile
  4948                           
  4949                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  4950   0030D2  50BF               	movf	191,w,c	;volatile
  4951   0030D4  0BF0               	andlw	-16
  4952   0030D6  0901               	iorlw	1
  4953   0030D8  6EBF               	movwf	191,c	;volatile
  4954   0030DA                     
  4955                           ; BSR set to: 14
  4956                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  4957   0030DA  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4958   0030DE                     
  4959                           ; BSR set to: 14
  4960                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  4961   0030DE  8EBD               	bsf	189,7,c	;volatile
  4962                           
  4963                           ;dc_motor.c: 35:     CCPR1H=0;
  4964   0030E0  0E00               	movlw	0
  4965   0030E2  6EAA               	movwf	170,c	;volatile
  4966                           
  4967                           ;dc_motor.c: 36:     CCPR2H=0;
  4968   0030E4  0E00               	movlw	0
  4969   0030E6  6EA6               	movwf	166,c	;volatile
  4970                           
  4971                           ;dc_motor.c: 37:     CCPR3H=0;
  4972   0030E8  0E00               	movlw	0
  4973   0030EA  010F               	movlb	15	; () banked
  4974   0030EC  6F25               	movwf	37,b	;volatile
  4975                           
  4976                           ;dc_motor.c: 38:     CCPR4H=0;
  4977   0030EE  0E00               	movlw	0
  4978   0030F0  6F21               	movwf	33,b	;volatile
  4979                           
  4980                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  4981   0030F2  0EFC               	movlw	-4
  4982   0030F4  16AD               	andwf	173,f,c	;volatile
  4983                           
  4984                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  4985   0030F6  0EF3               	movlw	-13
  4986   0030F8  16AD               	andwf	173,f,c	;volatile
  4987                           
  4988                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  4989   0030FA  0ECF               	movlw	-49
  4990   0030FC  16AD               	andwf	173,f,c	;volatile
  4991                           
  4992                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  4993   0030FE  0E3F               	movlw	-193
  4994   003100  16AD               	andwf	173,f,c	;volatile
  4995   003102                     
  4996                           ; BSR set to: 15
  4997                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  4998   003102  88AB               	bsf	171,4,c	;volatile
  4999                           
  5000                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  5001   003104  50AB               	movf	171,w,c	;volatile
  5002   003106  0BF0               	andlw	-16
  5003   003108  090C               	iorlw	12
  5004   00310A  6EAB               	movwf	171,c	;volatile
  5005   00310C                     
  5006                           ; BSR set to: 15
  5007                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  5008   00310C  8EAB               	bsf	171,7,c	;volatile
  5009   00310E                     
  5010                           ; BSR set to: 15
  5011                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  5012   00310E  88A7               	bsf	167,4,c	;volatile
  5013                           
  5014                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  5015   003110  50A7               	movf	167,w,c	;volatile
  5016   003112  0BF0               	andlw	-16
  5017   003114  090C               	iorlw	12
  5018   003116  6EA7               	movwf	167,c	;volatile
  5019   003118                     
  5020                           ; BSR set to: 15
  5021                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  5022   003118  8EA7               	bsf	167,7,c	;volatile
  5023   00311A                     
  5024                           ; BSR set to: 15
  5025                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  5026   00311A  8926               	bsf	38,4,b	;volatile
  5027                           
  5028                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  5029   00311C  5126               	movf	38,w,b	;volatile
  5030   00311E  0BF0               	andlw	-16
  5031   003120  090C               	iorlw	12
  5032   003122  6F26               	movwf	38,b	;volatile
  5033   003124                     
  5034                           ; BSR set to: 15
  5035                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  5036   003124  8F26               	bsf	38,7,b	;volatile
  5037   003126                     
  5038                           ; BSR set to: 15
  5039                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  5040   003126  8922               	bsf	34,4,b	;volatile
  5041                           
  5042                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  5043   003128  5122               	movf	34,w,b	;volatile
  5044   00312A  0BF0               	andlw	-16
  5045   00312C  090C               	iorlw	12
  5046   00312E  6F22               	movwf	34,b	;volatile
  5047   003130                     
  5048                           ; BSR set to: 15
  5049                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  5050   003130  8F22               	bsf	34,7,b	;volatile
  5051   003132                     
  5052                           ; BSR set to: 15
  5053   003132  0012               	return		;funcret
  5054   003134                     __end_of_initDCmotorsPWM:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _color_click_init *****************
  5058 ;; Defined at:
  5059 ;;		line 7 in file "color.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0, cstack
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        1 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 3
  5080 ;; This function calls:
  5081 ;;		_I2C_2_Master_Init
  5082 ;;		_color_writetoaddr
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text16
  5089   003448                     __ptext16:
  5090                           	callstack 0
  5091   003448                     _color_click_init:
  5092                           	callstack 27
  5093   003448                     
  5094                           ;color.c: 10:     I2C_2_Master_Init();
  5095   003448  ECA3  F01A         	call	_I2C_2_Master_Init	;wreg free
  5096   00344C                     
  5097                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  5098   00344C  0E01               	movlw	1
  5099   00344E  6E03               	movwf	color_writetoaddr@value^0,c
  5100   003450  0E00               	movlw	0
  5101   003452  ECDF  F01A         	call	_color_writetoaddr
  5102   003456                     
  5103                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5104   003456  0E3F               	movlw	63
  5105   003458  6E05               	movwf	??_color_click_init^0,c
  5106   00345A  0E55               	movlw	85
  5107   00345C                     u4417:
  5108   00345C  2EE8               	decfsz	wreg,f,c
  5109   00345E  D7FE               	bra	u4417
  5110   003460  2E05               	decfsz	??_color_click_init^0,f,c
  5111   003462  D7FC               	bra	u4417
  5112   003464  0000               	nop	
  5113   003466                     
  5114                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5115   003466  0E03               	movlw	3
  5116   003468  6E03               	movwf	color_writetoaddr@value^0,c
  5117   00346A  0E00               	movlw	0
  5118   00346C  ECDF  F01A         	call	_color_writetoaddr
  5119   003470                     
  5120                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5121   003470  0ED5               	movlw	213
  5122   003472  6E03               	movwf	color_writetoaddr@value^0,c
  5123   003474  0E01               	movlw	1
  5124   003476  ECDF  F01A         	call	_color_writetoaddr
  5125   00347A  0012               	return		;funcret
  5126   00347C                     __end_of_color_click_init:
  5127                           	callstack 0
  5128                           
  5129 ;; *************** function _color_writetoaddr *****************
  5130 ;; Defined at:
  5131 ;;		line 23 in file "color.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  address         1    wreg     unsigned char 
  5134 ;;  value           1    2[COMRAM] unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  address         1    3[COMRAM] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5146 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 2
  5153 ;; This function calls:
  5154 ;;		_I2C_2_Master_Start
  5155 ;;		_I2C_2_Master_Stop
  5156 ;;		_I2C_2_Master_Write
  5157 ;; This function is called by:
  5158 ;;		_color_click_init
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text17
  5163   0035BE                     __ptext17:
  5164                           	callstack 0
  5165   0035BE                     _color_writetoaddr:
  5166                           	callstack 27
  5167                           
  5168                           ;incstack = 0
  5169                           ;color_writetoaddr@address stored from wreg
  5170   0035BE  6E04               	movwf	color_writetoaddr@address^0,c
  5171   0035C0                     
  5172                           ;color.c: 24:     I2C_2_Master_Start();
  5173   0035C0  EC31  F01B         	call	_I2C_2_Master_Start	;wreg free
  5174                           
  5175                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  5176   0035C4  0E52               	movlw	82
  5177   0035C6  EC26  F01B         	call	_I2C_2_Master_Write
  5178                           
  5179                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  5180   0035CA  5004               	movf	color_writetoaddr@address^0,w,c
  5181   0035CC  0980               	iorlw	128
  5182   0035CE  EC26  F01B         	call	_I2C_2_Master_Write
  5183                           
  5184                           ;color.c: 27:     I2C_2_Master_Write(value);
  5185   0035D2  5003               	movf	color_writetoaddr@value^0,w,c
  5186   0035D4  EC26  F01B         	call	_I2C_2_Master_Write
  5187                           
  5188                           ;color.c: 28:     I2C_2_Master_Stop();
  5189   0035D8  EC2C  F01B         	call	_I2C_2_Master_Stop	;wreg free
  5190   0035DC  0012               	return		;funcret
  5191   0035DE                     __end_of_color_writetoaddr:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function _I2C_2_Master_Init *****************
  5195 ;; Defined at:
  5196 ;;		line 4 in file "i2c.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        0 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_color_click_init
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text18
  5224   003546                     __ptext18:
  5225                           	callstack 0
  5226   003546                     _I2C_2_Master_Init:
  5227                           	callstack 29
  5228   003546                     
  5229                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5230   003546  010E               	movlb	14	; () banked
  5231   003548  51D9               	movf	217,w,b	;volatile
  5232   00354A  0BF0               	andlw	-16
  5233   00354C  0908               	iorlw	8
  5234   00354E  6FD9               	movwf	217,b	;volatile
  5235   003550                     
  5236                           ; BSR set to: 14
  5237                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5238   003550  8BD9               	bsf	217,5,b	;volatile
  5239                           
  5240                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5241   003552  0E9F               	movlw	159
  5242   003554  6FD6               	movwf	214,b	;volatile
  5243   003556                     
  5244                           ; BSR set to: 14
  5245                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5246   003556  8A84               	bsf	132,5,c	;volatile
  5247   003558                     
  5248                           ; BSR set to: 14
  5249                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5250   003558  8C84               	bsf	132,6,c	;volatile
  5251   00355A                     
  5252                           ; BSR set to: 14
  5253                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5254   00355A  9BA7               	bcf	167,5,b	;volatile
  5255   00355C                     
  5256                           ; BSR set to: 14
  5257                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5258   00355C  9DA7               	bcf	167,6,b	;volatile
  5259                           
  5260                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5261   00355E  0E1D               	movlw	29
  5262   003560  6F1D               	movwf	29,b	;volatile
  5263                           
  5264                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5265   003562  0E1E               	movlw	30
  5266   003564  6F1C               	movwf	28,b	;volatile
  5267                           
  5268                           ;i2c.c: 18:   RD5PPS=0x1C;
  5269   003566  0E1C               	movlw	28
  5270   003568  6F6F               	movwf	111,b	;volatile
  5271                           
  5272                           ;i2c.c: 19:   RD6PPS=0x1B;
  5273   00356A  0E1B               	movlw	27
  5274   00356C  6F70               	movwf	112,b	;volatile
  5275   00356E                     
  5276                           ; BSR set to: 14
  5277   00356E  0012               	return		;funcret
  5278   003570                     __end_of_I2C_2_Master_Init:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function _calibration_routine *****************
  5282 ;; Defined at:
  5283 ;;		line 221 in file "color.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  cCal            1   67[COMRAM] PTR struct colors
  5286 ;;		 -> colorCalibration(8), 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  cal_state      20   70[COMRAM] unsigned char [20]
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5298 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5302 ;;Total ram usage:       23 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; Hardware stack levels required when called: 8
  5305 ;; This function calls:
  5306 ;;		_color_read_Blue
  5307 ;;		_color_read_Clear
  5308 ;;		_color_read_Green
  5309 ;;		_color_read_Red
  5310 ;;		_sendStringSerial4
  5311 ;;		_sprintf
  5312 ;; This function is called by:
  5313 ;;		_main
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text19
  5318   0023C4                     __ptext19:
  5319                           	callstack 0
  5320   0023C4                     _calibration_routine:
  5321                           	callstack 22
  5322   0023C4                     
  5323                           ;color.c: 221: void calibration_routine(colors *cCal);color.c: 222: {;color.c: 224:     
      +                          LATGbits.LATG0 = 0;
  5324   0023C4  907F               	bcf	127,0,c	;volatile
  5325                           
  5326                           ;color.c: 225:     LATEbits.LATE7 = 0;
  5327   0023C6  9E7D               	bcf	125,7,c	;volatile
  5328                           
  5329                           ;color.c: 226:     LATAbits.LATA3 = 0;
  5330   0023C8  9679               	bcf	121,3,c	;volatile
  5331   0023CA                     
  5332                           ;color.c: 228:     char cal_state[20];;color.c: 232:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  5333   0023CA  0E47               	movlw	low calibration_routine@cal_state
  5334   0023CC  6E31               	movwf	sprintf@s^0,c
  5335   0023CE  0E74               	movlw	low STR_5
  5336   0023D0  6E32               	movwf	sprintf@fmt^0,c
  5337   0023D2  0EF3               	movlw	low STR_6
  5338   0023D4  6E33               	movwf	(?_sprintf+2)^0,c
  5339   0023D6  5033               	movf	(?_sprintf+2)^0,w,c
  5340   0023D8  A4D8               	btfss	status,2,c
  5341   0023DA  0E0E               	movlw	high __smallconst
  5342   0023DC  6E34               	movwf	(?_sprintf+3)^0,c
  5343   0023DE  EC3E  F01A         	call	_sprintf	;wreg free
  5344   0023E2                     
  5345                           ;color.c: 233:     sendStringSerial4(cal_state);
  5346   0023E2  0E47               	movlw	low calibration_routine@cal_state
  5347   0023E4  6E02               	movwf	sendStringSerial4@string^0,c
  5348   0023E6  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5349   0023EA                     l119:
  5350                           
  5351                           ;color.c: 236:     while(PORTFbits.RF2 == 1){
  5352   0023EA  B48E               	btfsc	142,2,c	;volatile
  5353   0023EC  EFFA  F011         	goto	u4341
  5354   0023F0  EFFC  F011         	goto	u4340
  5355   0023F4                     u4341:
  5356   0023F4  EFF5  F011         	goto	l119
  5357   0023F8                     u4340:
  5358   0023F8                     
  5359                           ;color.c: 240:     LATGbits.LATG0 = 1;
  5360   0023F8  807F               	bsf	127,0,c	;volatile
  5361   0023FA                     
  5362                           ;color.c: 241:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5363   0023FA  0E29               	movlw	41
  5364   0023FC  6E46               	movwf	(??_calibration_routine+1)^0,c
  5365   0023FE  0E96               	movlw	150
  5366   002400  6E45               	movwf	??_calibration_routine^0,c
  5367   002402  0E7F               	movlw	127
  5368   002404                     u4427:
  5369   002404  2EE8               	decfsz	wreg,f,c
  5370   002406  D7FE               	bra	u4427
  5371   002408  2E45               	decfsz	??_calibration_routine^0,f,c
  5372   00240A  D7FC               	bra	u4427
  5373   00240C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5374   00240E  D7FA               	bra	u4427
  5375   002410  0000               	nop	
  5376   002412                     
  5377                           ;color.c: 242:     (cCal->red) = color_read_Red();
  5378   002412  ECFF  F018         	call	_color_read_Red	;wreg free
  5379   002416  5044               	movf	calibration_routine@cCal^0,w,c
  5380   002418  6ED9               	movwf	fsr2l,c
  5381   00241A  6ADA               	clrf	fsr2h,c
  5382   00241C  C005  FFDE         	movff	?_color_read_Red,postinc2
  5383   002420  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5384   002424                     
  5385                           ;color.c: 243:     LATGbits.LATG0 = 0;
  5386   002424  907F               	bcf	127,0,c	;volatile
  5387   002426                     
  5388                           ;color.c: 246:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  5389   002426  0E47               	movlw	low calibration_routine@cal_state
  5390   002428  6E31               	movwf	sprintf@s^0,c
  5391   00242A  0E23               	movlw	low STR_7
  5392   00242C  6E32               	movwf	sprintf@fmt^0,c
  5393   00242E  0EF3               	movlw	low STR_6
  5394   002430  6E33               	movwf	(?_sprintf+2)^0,c
  5395   002432  5033               	movf	(?_sprintf+2)^0,w,c
  5396   002434  A4D8               	btfss	status,2,c
  5397   002436  0E0E               	movlw	high __smallconst
  5398   002438  6E34               	movwf	(?_sprintf+3)^0,c
  5399   00243A  EC3E  F01A         	call	_sprintf	;wreg free
  5400   00243E                     
  5401                           ;color.c: 247:     sendStringSerial4(&cal_state);
  5402   00243E  0E47               	movlw	low calibration_routine@cal_state
  5403   002440  6E02               	movwf	sendStringSerial4@string^0,c
  5404   002442  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5405   002446                     l122:
  5406                           
  5407                           ;color.c: 249:     while(PORTFbits.RF2 == 1){
  5408   002446  B48E               	btfsc	142,2,c	;volatile
  5409   002448  EF28  F012         	goto	u4351
  5410   00244C  EF2A  F012         	goto	u4350
  5411   002450                     u4351:
  5412   002450  EF23  F012         	goto	l122
  5413   002454                     u4350:
  5414   002454                     
  5415                           ;color.c: 253:     LATEbits.LATE7 = 1;
  5416   002454  8E7D               	bsf	125,7,c	;volatile
  5417   002456                     
  5418                           ;color.c: 254:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5419   002456  0E29               	movlw	41
  5420   002458  6E46               	movwf	(??_calibration_routine+1)^0,c
  5421   00245A  0E96               	movlw	150
  5422   00245C  6E45               	movwf	??_calibration_routine^0,c
  5423   00245E  0E7F               	movlw	127
  5424   002460                     u4437:
  5425   002460  2EE8               	decfsz	wreg,f,c
  5426   002462  D7FE               	bra	u4437
  5427   002464  2E45               	decfsz	??_calibration_routine^0,f,c
  5428   002466  D7FC               	bra	u4437
  5429   002468  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5430   00246A  D7FA               	bra	u4437
  5431   00246C  0000               	nop	
  5432   00246E                     
  5433                           ;color.c: 255:     (cCal->green) = color_read_Green();
  5434   00246E  EC27  F019         	call	_color_read_Green	;wreg free
  5435   002472  5044               	movf	calibration_routine@cCal^0,w,c
  5436   002474  6ED9               	movwf	fsr2l,c
  5437   002476  6ADA               	clrf	fsr2h,c
  5438   002478  0E02               	movlw	2
  5439   00247A  26D9               	addwf	fsr2l,f,c
  5440   00247C  C005  FFDE         	movff	?_color_read_Green,postinc2
  5441   002480  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5442   002484                     
  5443                           ;color.c: 256:     LATEbits.LATE7 = 0;
  5444   002484  9E7D               	bcf	125,7,c	;volatile
  5445   002486                     
  5446                           ;color.c: 259:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  5447   002486  0E47               	movlw	low calibration_routine@cal_state
  5448   002488  6E31               	movwf	sprintf@s^0,c
  5449   00248A  0E40               	movlw	low STR_9
  5450   00248C  6E32               	movwf	sprintf@fmt^0,c
  5451   00248E  0EF3               	movlw	low STR_6
  5452   002490  6E33               	movwf	(?_sprintf+2)^0,c
  5453   002492  5033               	movf	(?_sprintf+2)^0,w,c
  5454   002494  A4D8               	btfss	status,2,c
  5455   002496  0E0E               	movlw	high __smallconst
  5456   002498  6E34               	movwf	(?_sprintf+3)^0,c
  5457   00249A  EC3E  F01A         	call	_sprintf	;wreg free
  5458   00249E                     
  5459                           ;color.c: 260:     sendStringSerial4(&cal_state);
  5460   00249E  0E47               	movlw	low calibration_routine@cal_state
  5461   0024A0  6E02               	movwf	sendStringSerial4@string^0,c
  5462   0024A2  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5463   0024A6                     l125:
  5464                           
  5465                           ;color.c: 262:     while(PORTFbits.RF2 == 1){
  5466   0024A6  B48E               	btfsc	142,2,c	;volatile
  5467   0024A8  EF58  F012         	goto	u4361
  5468   0024AC  EF5A  F012         	goto	u4360
  5469   0024B0                     u4361:
  5470   0024B0  EF53  F012         	goto	l125
  5471   0024B4                     u4360:
  5472   0024B4                     
  5473                           ;color.c: 266:     LATAbits.LATA3 = 1;
  5474   0024B4  8679               	bsf	121,3,c	;volatile
  5475   0024B6                     
  5476                           ;color.c: 267:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5477   0024B6  0E29               	movlw	41
  5478   0024B8  6E46               	movwf	(??_calibration_routine+1)^0,c
  5479   0024BA  0E96               	movlw	150
  5480   0024BC  6E45               	movwf	??_calibration_routine^0,c
  5481   0024BE  0E7F               	movlw	127
  5482   0024C0                     u4447:
  5483   0024C0  2EE8               	decfsz	wreg,f,c
  5484   0024C2  D7FE               	bra	u4447
  5485   0024C4  2E45               	decfsz	??_calibration_routine^0,f,c
  5486   0024C6  D7FC               	bra	u4447
  5487   0024C8  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5488   0024CA  D7FA               	bra	u4447
  5489   0024CC  0000               	nop	
  5490   0024CE                     
  5491                           ;color.c: 268:     (cCal->blue) = color_read_Blue();
  5492   0024CE  EC77  F019         	call	_color_read_Blue	;wreg free
  5493   0024D2  5044               	movf	calibration_routine@cCal^0,w,c
  5494   0024D4  6ED9               	movwf	fsr2l,c
  5495   0024D6  6ADA               	clrf	fsr2h,c
  5496   0024D8  0E04               	movlw	4
  5497   0024DA  26D9               	addwf	fsr2l,f,c
  5498   0024DC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5499   0024E0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5500   0024E4                     
  5501                           ;color.c: 269:     LATAbits.LATA3 = 0;
  5502   0024E4  9679               	bcf	121,3,c	;volatile
  5503   0024E6                     
  5504                           ;color.c: 272:     sprintf(cal_state,"Calibration state = ambient light", ".");
  5505   0024E6  0E47               	movlw	low calibration_routine@cal_state
  5506   0024E8  6E31               	movwf	sprintf@s^0,c
  5507   0024EA  0E01               	movlw	low STR_11
  5508   0024EC  6E32               	movwf	sprintf@fmt^0,c
  5509   0024EE  0EF3               	movlw	low STR_6
  5510   0024F0  6E33               	movwf	(?_sprintf+2)^0,c
  5511   0024F2  5033               	movf	(?_sprintf+2)^0,w,c
  5512   0024F4  A4D8               	btfss	status,2,c
  5513   0024F6  0E0E               	movlw	high __smallconst
  5514   0024F8  6E34               	movwf	(?_sprintf+3)^0,c
  5515   0024FA  EC3E  F01A         	call	_sprintf	;wreg free
  5516   0024FE                     
  5517                           ;color.c: 273:     sendStringSerial4(&cal_state);
  5518   0024FE  0E47               	movlw	low calibration_routine@cal_state
  5519   002500  6E02               	movwf	sendStringSerial4@string^0,c
  5520   002502  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5521   002506                     l128:
  5522                           
  5523                           ;color.c: 275:     while(PORTFbits.RF2 == 1){
  5524   002506  B48E               	btfsc	142,2,c	;volatile
  5525   002508  EF88  F012         	goto	u4371
  5526   00250C  EF8A  F012         	goto	u4370
  5527   002510                     u4371:
  5528   002510  EF83  F012         	goto	l128
  5529   002514                     u4370:
  5530   002514                     
  5531                           ;color.c: 278:     LATGbits.LATG0 = 1;
  5532   002514  807F               	bsf	127,0,c	;volatile
  5533                           
  5534                           ;color.c: 279:     LATEbits.LATE7 = 1;
  5535   002516  8E7D               	bsf	125,7,c	;volatile
  5536                           
  5537                           ;color.c: 280:     LATAbits.LATA3 = 1;
  5538   002518  8679               	bsf	121,3,c	;volatile
  5539   00251A                     
  5540                           ;color.c: 281:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5541   00251A  0E29               	movlw	41
  5542   00251C  6E46               	movwf	(??_calibration_routine+1)^0,c
  5543   00251E  0E96               	movlw	150
  5544   002520  6E45               	movwf	??_calibration_routine^0,c
  5545   002522  0E7F               	movlw	127
  5546   002524                     u4457:
  5547   002524  2EE8               	decfsz	wreg,f,c
  5548   002526  D7FE               	bra	u4457
  5549   002528  2E45               	decfsz	??_calibration_routine^0,f,c
  5550   00252A  D7FC               	bra	u4457
  5551   00252C  2E46               	decfsz	(??_calibration_routine+1)^0,f,c
  5552   00252E  D7FA               	bra	u4457
  5553   002530  0000               	nop	
  5554   002532                     
  5555                           ;color.c: 282:     (cCal->clear) = color_read_Clear();
  5556   002532  EC4F  F019         	call	_color_read_Clear	;wreg free
  5557   002536  5044               	movf	calibration_routine@cCal^0,w,c
  5558   002538  6ED9               	movwf	fsr2l,c
  5559   00253A  6ADA               	clrf	fsr2h,c
  5560   00253C  0E06               	movlw	6
  5561   00253E  26D9               	addwf	fsr2l,f,c
  5562   002540  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5563   002544  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5564   002548                     
  5565                           ;color.c: 283:     LATGbits.LATG0 = 0;
  5566   002548  907F               	bcf	127,0,c	;volatile
  5567   00254A                     
  5568                           ;color.c: 284:     LATEbits.LATE7 = 0;
  5569   00254A  9E7D               	bcf	125,7,c	;volatile
  5570   00254C                     
  5571                           ;color.c: 285:     LATAbits.LATA3 = 0;
  5572   00254C  9679               	bcf	121,3,c	;volatile
  5573   00254E                     
  5574                           ;color.c: 288:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  5575   00254E  0E47               	movlw	low calibration_routine@cal_state
  5576   002550  6E31               	movwf	sprintf@s^0,c
  5577   002552  0E5B               	movlw	low STR_13
  5578   002554  6E32               	movwf	sprintf@fmt^0,c
  5579   002556  0EF3               	movlw	low STR_6
  5580   002558  6E33               	movwf	(?_sprintf+2)^0,c
  5581   00255A  5033               	movf	(?_sprintf+2)^0,w,c
  5582   00255C  A4D8               	btfss	status,2,c
  5583   00255E  0E0E               	movlw	high __smallconst
  5584   002560  6E34               	movwf	(?_sprintf+3)^0,c
  5585   002562  EC3E  F01A         	call	_sprintf	;wreg free
  5586   002566                     
  5587                           ;color.c: 289:     sendStringSerial4(&cal_state);
  5588   002566  0E47               	movlw	low calibration_routine@cal_state
  5589   002568  6E02               	movwf	sendStringSerial4@string^0,c
  5590   00256A  EC72  F01A         	call	_sendStringSerial4	;wreg free
  5591   00256E  0012               	return		;funcret
  5592   002570                     __end_of_calibration_routine:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function _sprintf *****************
  5596 ;; Defined at:
  5597 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  s               1   48[COMRAM] PTR unsigned char 
  5600 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), test@led_state(50), 
  5601 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  5602 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  5603 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5604 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  f              12   55[COMRAM] struct _IO_FILE
  5607 ;;  ret             2    0        int 
  5608 ;;  ap              1   54[COMRAM] PTR void [1]
  5609 ;;		 -> ?_sprintf(2), 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  2   48[COMRAM] int 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5619 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;Total ram usage:       19 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 7
  5626 ;; This function calls:
  5627 ;;		_vfprintf
  5628 ;; This function is called by:
  5629 ;;		_test
  5630 ;;		_calibration_routine
  5631 ;;		_send2USART
  5632 ;;		_ADC2String
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text20
  5637   00347C                     __ptext20:
  5638                           	callstack 0
  5639   00347C                     _sprintf:
  5640                           	callstack 22
  5641   00347C  0E33               	movlw	low (?_sprintf+2)
  5642   00347E  6E37               	movwf	sprintf@ap^0,c
  5643   003480  C031  F038         	movff	sprintf@s,sprintf@f
  5644   003484  0E00               	movlw	0
  5645   003486  6E3C               	movwf	(sprintf@f+4)^0,c
  5646   003488  0E00               	movlw	0
  5647   00348A  6E3B               	movwf	(sprintf@f+3)^0,c
  5648   00348C  0E00               	movlw	0
  5649   00348E  6E43               	movwf	(sprintf@f+11)^0,c
  5650   003490  0E00               	movlw	0
  5651   003492  6E42               	movwf	(sprintf@f+10)^0,c
  5652   003494  0E38               	movlw	low sprintf@f
  5653   003496  6E2D               	movwf	vfprintf@fp^0,c
  5654   003498  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  5655   00349C  0E37               	movlw	low sprintf@ap
  5656   00349E  6E2F               	movwf	vfprintf@ap^0,c
  5657   0034A0  ECC2  F019         	call	_vfprintf	;wreg free
  5658   0034A4  5031               	movf	sprintf@s^0,w,c
  5659   0034A6  243B               	addwf	(sprintf@f+3)^0,w,c
  5660   0034A8  6ED9               	movwf	fsr2l,c
  5661   0034AA  6ADA               	clrf	fsr2h,c
  5662   0034AC  6ADF               	clrf	indf2,c
  5663   0034AE  0012               	return		;funcret
  5664   0034B0                     __end_of_sprintf:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _vfprintf *****************
  5668 ;; Defined at:
  5669 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  5672 ;;		 -> sprintf@f(12), 
  5673 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  5674 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  5675 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5676 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5677 ;;  ap              1   46[COMRAM] PTR PTR void 
  5678 ;;		 -> sprintf@ap(1), 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  5681 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  5682 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5683 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  2   44[COMRAM] int 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;Total ram usage:        4 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 6
  5700 ;; This function calls:
  5701 ;;		_vfpfcnvrt
  5702 ;; This function is called by:
  5703 ;;		_sprintf
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text21
  5708   003384                     __ptext21:
  5709                           	callstack 0
  5710   003384                     _vfprintf:
  5711                           	callstack 22
  5712   003384                     
  5713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5714   003384  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  5715                           
  5716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5717   003388  EFCE  F019         	goto	l4610
  5718   00338C                     l4608:
  5719                           
  5720                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5721   00338C  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  5722   003390  0E30               	movlw	low vfprintf@cfmt
  5723   003392  6E23               	movwf	vfpfcnvrt@fmt^0,c
  5724   003394  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  5725   003398  ECB8  F012         	call	_vfpfcnvrt	;wreg free
  5726   00339C                     l4610:
  5727                           
  5728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5729   00339C  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  5730   0033A0                     	if	1	;There is more than 1 active tblptr byte
  5731   0033A0  0E0E               	movlw	high __smallconst
  5732   0033A2  6EF7               	movwf	tblptrh,c
  5733   0033A4                     	endif
  5734   0033A4                     	if	0	;tblptru may be non-zero
  5735   0033A4                     	endif
  5736   0033A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5737   0033A4  0E00               	movlw	low (__smallconst shr (0+16))
  5738   0033A6  6EF8               	movwf	tblptru,c
  5739   0033A8                     	endif
  5740   0033A8  0008               	tblrd		*
  5741   0033AA  50F5               	movf	tablat,w,c
  5742   0033AC  0900               	iorlw	0
  5743   0033AE  A4D8               	btfss	status,2,c
  5744   0033B0  EFDC  F019         	goto	u4251
  5745   0033B4  EFDE  F019         	goto	u4250
  5746   0033B8                     u4251:
  5747   0033B8  EFC6  F019         	goto	l4608
  5748   0033BC                     u4250:
  5749   0033BC                     
  5750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5751   0033BC  0E00               	movlw	0
  5752   0033BE  6E2E               	movwf	(?_vfprintf+1)^0,c
  5753   0033C0  0E00               	movlw	0
  5754   0033C2  6E2D               	movwf	?_vfprintf^0,c
  5755   0033C4  0012               	return		;funcret
  5756   0033C6                     __end_of_vfprintf:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _vfpfcnvrt *****************
  5760 ;; Defined at:
  5761 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  5764 ;;		 -> sprintf@f(12), 
  5765 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  5766 ;;		 -> vfprintf@cfmt(1), 
  5767 ;;  ap              1   35[COMRAM] PTR PTR void 
  5768 ;;		 -> sprintf@ap(1), 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  convarg         4   38[COMRAM] struct .
  5771 ;;  cp              1   43[COMRAM] PTR unsigned char 
  5772 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  5773 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5774 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5775 ;;  done            1   42[COMRAM] _Bool 
  5776 ;;  c               1    0        unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5786 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;Total ram usage:       11 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 5
  5793 ;; This function calls:
  5794 ;;		_dtoa
  5795 ;;		_fputc
  5796 ;;		_read_prec_or_width
  5797 ;; This function is called by:
  5798 ;;		_vfprintf
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text22
  5803   002570                     __ptext22:
  5804                           	callstack 0
  5805   002570                     _vfpfcnvrt:
  5806                           	callstack 22
  5807   002570                     
  5808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5809   002570  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5810   002572  6ED9               	movwf	fsr2l,c
  5811   002574  6ADA               	clrf	fsr2h,c
  5812   002576  CFDF FFF6          	movff	indf2,tblptrl
  5813   00257A                     	if	1	;There is more than 1 active tblptr byte
  5814   00257A  0E0E               	movlw	high __smallconst
  5815   00257C  6EF7               	movwf	tblptrh,c
  5816   00257E                     	endif
  5817   00257E                     	if	0	;tblptru may be non-zero
  5818   00257E                     	endif
  5819   00257E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5820   00257E  0E00               	movlw	low (__smallconst shr (0+16))
  5821   002580  6EF8               	movwf	tblptru,c
  5822   002582                     	endif
  5823   002582  0008               	tblrd		*
  5824   002584  50F5               	movf	tablat,w,c
  5825   002586  0A25               	xorlw	37
  5826   002588  A4D8               	btfss	status,2,c
  5827   00258A  EFC9  F012         	goto	u4201
  5828   00258E  EFCB  F012         	goto	u4200
  5829   002592                     u4201:
  5830   002592  EF68  F013         	goto	l4596
  5831   002596                     u4200:
  5832   002596                     
  5833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5834   002596  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5835   002598  6ED9               	movwf	fsr2l,c
  5836   00259A  6ADA               	clrf	fsr2h,c
  5837   00259C  2ADF               	incf	indf2,f,c
  5838   00259E                     
  5839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5840   00259E  0E00               	movlw	0
  5841   0025A0  0100               	movlb	0	; () banked
  5842   0025A2  6FCD               	movwf	(_width+1)& (0+255),b
  5843   0025A4  0E00               	movlw	0
  5844   0025A6  6FCC               	movwf	_width& (0+255),b
  5845   0025A8  C0CC  F0D0         	movff	_width,_flags
  5846   0025AC                     
  5847                           ; BSR set to: 0
  5848                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5849   0025AC  69CE               	setf	_prec& (0+255),b
  5850   0025AE  69CF               	setf	(_prec+1)& (0+255),b
  5851   0025B0                     
  5852                           ; BSR set to: 0
  5853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5854   0025B0  0E00               	movlw	0
  5855   0025B2  6E2B               	movwf	vfpfcnvrt@done^0,c
  5856                           
  5857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5858   0025B4  EF03  F013         	goto	l4570
  5859   0025B8                     l4560:
  5860                           
  5861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5862   0025B8  0100               	movlb	0	; () banked
  5863   0025BA  83D0               	bsf	_flags& (0+255),1,b
  5864   0025BC                     
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5867   0025BC  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5868   0025BE  6ED9               	movwf	fsr2l,c
  5869   0025C0  6ADA               	clrf	fsr2h,c
  5870   0025C2  2ADF               	incf	indf2,f,c
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5873   0025C4  EF03  F013         	goto	l4570
  5874   0025C8                     l4564:
  5875                           
  5876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5877   0025C8  0E01               	movlw	1
  5878   0025CA  6E2B               	movwf	vfpfcnvrt@done^0,c
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5881   0025CC  EF03  F013         	goto	l4570
  5882   0025D0                     l4568:
  5883   0025D0  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5884   0025D2  6ED9               	movwf	fsr2l,c
  5885   0025D4  6ADA               	clrf	fsr2h,c
  5886   0025D6  CFDF FFF6          	movff	indf2,tblptrl
  5887   0025DA                     	if	1	;There is more than 1 active tblptr byte
  5888   0025DA  0E0E               	movlw	high __smallconst
  5889   0025DC  6EF7               	movwf	tblptrh,c
  5890   0025DE                     	endif
  5891   0025DE                     	if	0	;tblptru may be non-zero
  5892   0025DE                     	endif
  5893   0025DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5894   0025DE  0E00               	movlw	low (__smallconst shr (0+16))
  5895   0025E0  6EF8               	movwf	tblptru,c
  5896   0025E2                     	endif
  5897   0025E2  0008               	tblrd		*
  5898   0025E4  50F5               	movf	tablat,w,c
  5899   0025E6  6E25               	movwf	??_vfpfcnvrt^0,c
  5900   0025E8  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  5901                           
  5902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5903                           ; Switch size 1, requested type "simple"
  5904                           ; Number of cases is 1, Range of values is 0 to 0
  5905                           ; switch strategies available:
  5906                           ; Name         Instructions Cycles
  5907                           ; simple_byte            4     3 (average)
  5908                           ;	Chosen strategy is simple_byte
  5909   0025EA  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  5910   0025EC  0A00               	xorlw	0	; case 0
  5911   0025EE  B4D8               	btfsc	status,2,c
  5912   0025F0  EFFC  F012         	goto	l4840
  5913   0025F4  EFE4  F012         	goto	l4564
  5914   0025F8                     l4840:
  5915                           
  5916                           ; Switch size 1, requested type "simple"
  5917                           ; Number of cases is 1, Range of values is 48 to 48
  5918                           ; switch strategies available:
  5919                           ; Name         Instructions Cycles
  5920                           ; simple_byte            4     3 (average)
  5921                           ;	Chosen strategy is simple_byte
  5922   0025F8  5025               	movf	??_vfpfcnvrt^0,w,c
  5923   0025FA  0A30               	xorlw	48	; case 48
  5924   0025FC  B4D8               	btfsc	status,2,c
  5925   0025FE  EFDC  F012         	goto	l4560
  5926   002602  EFE4  F012         	goto	l4564
  5927   002606                     l4570:
  5928                           
  5929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5930   002606  502B               	movf	vfpfcnvrt@done^0,w,c
  5931   002608  B4D8               	btfsc	status,2,c
  5932   00260A  EF09  F013         	goto	u4211
  5933   00260E  EF0B  F013         	goto	u4210
  5934   002612                     u4211:
  5935   002612  EFE8  F012         	goto	l4568
  5936   002616                     u4210:
  5937   002616                     
  5938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5939   002616  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5940   00261A  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5941   00261E  EC06  F017         	call	_read_prec_or_width	;wreg free
  5942   002622  C007  F0CC         	movff	?_read_prec_or_width,_width
  5943   002626  C008  F0CD         	movff	?_read_prec_or_width+1,_width+1
  5944   00262A                     
  5945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5946   00262A  0100               	movlb	0	; () banked
  5947   00262C  BFCD               	btfsc	(_width+1)& (0+255),7,b
  5948   00262E  EF1D  F013         	goto	u4220
  5949   002632  EF1B  F013         	goto	u4221
  5950   002636                     u4221:
  5951   002636  EF22  F013         	goto	l4578
  5952   00263A                     u4220:
  5953   00263A                     
  5954                           ; BSR set to: 0
  5955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5956   00263A  81D0               	bsf	_flags& (0+255),0,b
  5957                           
  5958                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5959   00263C  6DCC               	negf	_width& (0+255),b
  5960   00263E  1FCD               	comf	(_width+1)& (0+255),f,b
  5961   002640  B0D8               	btfsc	status,0,c
  5962   002642  2BCD               	incf	(_width+1)& (0+255),f,b
  5963   002644                     l4578:
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5967   002644  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5968   002646  6ED9               	movwf	fsr2l,c
  5969   002648  6ADA               	clrf	fsr2h,c
  5970   00264A  50DF               	movf	indf2,w,c
  5971   00264C  6E2C               	movwf	vfpfcnvrt@cp^0,c
  5972   00264E                     
  5973                           ; BSR set to: 0
  5974                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5975   00264E  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5976   002652                     	if	1	;There is more than 1 active tblptr byte
  5977   002652  0E0E               	movlw	high __smallconst
  5978   002654  6EF7               	movwf	tblptrh,c
  5979   002656                     	endif
  5980   002656                     	if	0	;tblptru may be non-zero
  5981   002656                     	endif
  5982   002656                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5983   002656  0E00               	movlw	low (__smallconst shr (0+16))
  5984   002658  6EF8               	movwf	tblptru,c
  5985   00265A                     	endif
  5986   00265A  0008               	tblrd		*
  5987   00265C  50F5               	movf	tablat,w,c
  5988   00265E  0A64               	xorlw	100
  5989   002660  B4D8               	btfsc	status,2,c
  5990   002662  EF35  F013         	goto	u4231
  5991   002666  EF37  F013         	goto	u4230
  5992   00266A                     u4231:
  5993   00266A  EF47  F013         	goto	l4584
  5994   00266E                     u4230:
  5995   00266E                     
  5996                           ; BSR set to: 0
  5997   00266E  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5998   002672                     	if	1	;There is more than 1 active tblptr byte
  5999   002672  0E0E               	movlw	high __smallconst
  6000   002674  6EF7               	movwf	tblptrh,c
  6001   002676                     	endif
  6002   002676                     	if	0	;tblptru may be non-zero
  6003   002676                     	endif
  6004   002676                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6005   002676  0E00               	movlw	low (__smallconst shr (0+16))
  6006   002678  6EF8               	movwf	tblptru,c
  6007   00267A                     	endif
  6008   00267A  0008               	tblrd		*
  6009   00267C  50F5               	movf	tablat,w,c
  6010   00267E  0A69               	xorlw	105
  6011   002680  A4D8               	btfss	status,2,c
  6012   002682  EF45  F013         	goto	u4241
  6013   002686  EF47  F013         	goto	u4240
  6014   00268A                     u4241:
  6015   00268A  EF62  F013         	goto	l4592
  6016   00268E                     u4240:
  6017   00268E                     l4584:
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6021   00268E  5024               	movf	vfpfcnvrt@ap^0,w,c
  6022   002690  6ED9               	movwf	fsr2l,c
  6023   002692  6ADA               	clrf	fsr2h,c
  6024   002694  0E02               	movlw	2
  6025   002696  26DF               	addwf	indf2,f,c
  6026   002698  5CDF               	subwf	indf2,w,c
  6027   00269A  6ED9               	movwf	fsr2l,c
  6028   00269C  6ADA               	clrf	fsr2h,c
  6029   00269E  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  6030   0026A2  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  6031   0026A6                     
  6032                           ; BSR set to: 0
  6033                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6034   0026A6  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6035   0026A8  6ED9               	movwf	fsr2l,c
  6036   0026AA  6ADA               	clrf	fsr2h,c
  6037   0026AC  282C               	incf	vfpfcnvrt@cp^0,w,c
  6038   0026AE  6EDF               	movwf	indf2,c
  6039   0026B0                     
  6040                           ; BSR set to: 0
  6041                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6042   0026B0  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  6043   0026B4  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  6044   0026B8  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6045   0026BC  EC7C  F013         	call	_dtoa	;wreg free
  6046   0026C0  EF7B  F013         	goto	l1276
  6047   0026C4                     l4592:
  6048                           
  6049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6050   0026C4  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6051   0026C6  6ED9               	movwf	fsr2l,c
  6052   0026C8  6ADA               	clrf	fsr2h,c
  6053   0026CA  2ADF               	incf	indf2,f,c
  6054   0026CC  EF7B  F013         	goto	l1276
  6055   0026D0                     l4596:
  6056                           
  6057                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6058   0026D0  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6059   0026D2  6ED9               	movwf	fsr2l,c
  6060   0026D4  6ADA               	clrf	fsr2h,c
  6061   0026D6  CFDF FFF6          	movff	indf2,tblptrl
  6062   0026DA                     	if	1	;There is more than 1 active tblptr byte
  6063   0026DA  0E0E               	movlw	high __smallconst
  6064   0026DC  6EF7               	movwf	tblptrh,c
  6065   0026DE                     	endif
  6066   0026DE                     	if	0	;tblptru may be non-zero
  6067   0026DE                     	endif
  6068   0026DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6069   0026DE  0E00               	movlw	low (__smallconst shr (0+16))
  6070   0026E0  6EF8               	movwf	tblptru,c
  6071   0026E2                     	endif
  6072   0026E2  0008               	tblrd		*
  6073   0026E4  50F5               	movf	tablat,w,c
  6074   0026E6  6E01               	movwf	fputc@c^0,c
  6075   0026E8  6A02               	clrf	(fputc@c+1)^0,c
  6076   0026EA  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6077   0026EE  ECB2  F017         	call	_fputc	;wreg free
  6078   0026F2  EF62  F013         	goto	l4592
  6079   0026F6                     l1276:
  6080   0026F6  0012               	return		;funcret
  6081   0026F8                     __end_of_vfpfcnvrt:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function _read_prec_or_width *****************
  6085 ;; Defined at:
  6086 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  6089 ;;		 -> vfprintf@cfmt(1), 
  6090 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  6091 ;;		 -> sprintf@ap(1), 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  c               1    8[COMRAM] unsigned char 
  6094 ;;  n               2    9[COMRAM] int 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2    6[COMRAM] int 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6105 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;Total ram usage:        5 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; Hardware stack levels required when called: 1
  6111 ;; This function calls:
  6112 ;;		___wmul
  6113 ;; This function is called by:
  6114 ;;		_vfpfcnvrt
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text23
  6119   002E0C                     __ptext23:
  6120                           	callstack 0
  6121   002E0C                     _read_prec_or_width:
  6122                           	callstack 25
  6123   002E0C                     
  6124                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6125   002E0C  0E00               	movlw	0
  6126   002E0E  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6127   002E10  0E00               	movlw	0
  6128   002E12  6E0A               	movwf	read_prec_or_width@n^0,c
  6129   002E14                     
  6130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6131   002E14  5007               	movf	read_prec_or_width@fmt^0,w,c
  6132   002E16  6ED9               	movwf	fsr2l,c
  6133   002E18  6ADA               	clrf	fsr2h,c
  6134   002E1A  CFDF FFF6          	movff	indf2,tblptrl
  6135   002E1E                     	if	1	;There is more than 1 active tblptr byte
  6136   002E1E  0E0E               	movlw	high __smallconst
  6137   002E20  6EF7               	movwf	tblptrh,c
  6138   002E22                     	endif
  6139   002E22                     	if	0	;tblptru may be non-zero
  6140   002E22                     	endif
  6141   002E22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6142   002E22  0E00               	movlw	low (__smallconst shr (0+16))
  6143   002E24  6EF8               	movwf	tblptru,c
  6144   002E26                     	endif
  6145   002E26  0008               	tblrd		*
  6146   002E28  50F5               	movf	tablat,w,c
  6147   002E2A  0A2A               	xorlw	42
  6148   002E2C  A4D8               	btfss	status,2,c
  6149   002E2E  EF1B  F017         	goto	u2361
  6150   002E32  EF1D  F017         	goto	u2360
  6151   002E36                     u2361:
  6152   002E36  EF43  F017         	goto	l3092
  6153   002E3A                     u2360:
  6154   002E3A                     
  6155                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6156   002E3A  5007               	movf	read_prec_or_width@fmt^0,w,c
  6157   002E3C  6ED9               	movwf	fsr2l,c
  6158   002E3E  6ADA               	clrf	fsr2h,c
  6159   002E40  2ADF               	incf	indf2,f,c
  6160   002E42                     
  6161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6162   002E42  5008               	movf	read_prec_or_width@ap^0,w,c
  6163   002E44  6ED9               	movwf	fsr2l,c
  6164   002E46  6ADA               	clrf	fsr2h,c
  6165   002E48  0E02               	movlw	2
  6166   002E4A  26DF               	addwf	indf2,f,c
  6167   002E4C  5CDF               	subwf	indf2,w,c
  6168   002E4E  6ED9               	movwf	fsr2l,c
  6169   002E50  6ADA               	clrf	fsr2h,c
  6170   002E52  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6171   002E56  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6172                           
  6173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6174   002E5A  EF58  F017         	goto	l1257
  6175   002E5E                     l3088:
  6176                           
  6177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6178   002E5E  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  6179   002E62  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6180   002E66  0E00               	movlw	0
  6181   002E68  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6182   002E6A  0E0A               	movlw	10
  6183   002E6C  6E03               	movwf	___wmul@multiplicand^0,c
  6184   002E6E  ECCC  F01A         	call	___wmul	;wreg free
  6185   002E72  5009               	movf	read_prec_or_width@c^0,w,c
  6186   002E74  2401               	addwf	?___wmul^0,w,c
  6187   002E76  6E0A               	movwf	read_prec_or_width@n^0,c
  6188   002E78  0E00               	movlw	0
  6189   002E7A  2002               	addwfc	(?___wmul+1)^0,w,c
  6190   002E7C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6191   002E7E                     
  6192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6193   002E7E  5007               	movf	read_prec_or_width@fmt^0,w,c
  6194   002E80  6ED9               	movwf	fsr2l,c
  6195   002E82  6ADA               	clrf	fsr2h,c
  6196   002E84  2ADF               	incf	indf2,f,c
  6197   002E86                     l3092:
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6200   002E86  5007               	movf	read_prec_or_width@fmt^0,w,c
  6201   002E88  6ED9               	movwf	fsr2l,c
  6202   002E8A  6ADA               	clrf	fsr2h,c
  6203   002E8C  CFDF FFF6          	movff	indf2,tblptrl
  6204   002E90                     	if	1	;There is more than 1 active tblptr byte
  6205   002E90  0E0E               	movlw	high __smallconst
  6206   002E92  6EF7               	movwf	tblptrh,c
  6207   002E94                     	endif
  6208   002E94                     	if	0	;tblptru may be non-zero
  6209   002E94                     	endif
  6210   002E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6211   002E94  0E00               	movlw	low (__smallconst shr (0+16))
  6212   002E96  6EF8               	movwf	tblptru,c
  6213   002E98                     	endif
  6214   002E98  0008               	tblrd		*
  6215   002E9A  50F5               	movf	tablat,w,c
  6216   002E9C  0FD0               	addlw	208
  6217   002E9E  6E09               	movwf	read_prec_or_width@c^0,c
  6218   002EA0  0E09               	movlw	9
  6219   002EA2  6409               	cpfsgt	read_prec_or_width@c^0,c
  6220   002EA4  EF56  F017         	goto	u2371
  6221   002EA8  EF58  F017         	goto	u2370
  6222   002EAC                     u2371:
  6223   002EAC  EF2F  F017         	goto	l3088
  6224   002EB0                     u2370:
  6225   002EB0                     l1257:
  6226                           
  6227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6228   002EB0  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  6229   002EB4  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6230   002EB8  0012               	return		;funcret
  6231   002EBA                     __end_of_read_prec_or_width:
  6232                           	callstack 0
  6233                           
  6234 ;; *************** function ___wmul *****************
  6235 ;; Defined at:
  6236 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  multiplier      2    0[COMRAM] unsigned int 
  6239 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;  product         2    4[COMRAM] unsigned int 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  2    0[COMRAM] unsigned int 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0, prodl, prodh
  6246 ;; Tracked objects:
  6247 ;;		On entry : 0/0
  6248 ;;		On exit  : 0/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;Total ram usage:        6 bytes
  6256 ;; Hardware stack levels used: 1
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_read_prec_or_width
  6261 ;;		_setMotorPWM
  6262 ;;		_ADC2String
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text24
  6267   003598                     __ptext24:
  6268                           	callstack 0
  6269   003598                     ___wmul:
  6270                           	callstack 25
  6271   003598  5001               	movf	___wmul@multiplier^0,w,c
  6272   00359A  0203               	mulwf	___wmul@multiplicand^0,c
  6273   00359C  CFF3 F005          	movff	prodl,___wmul@product
  6274   0035A0  CFF4 F006          	movff	prodh,___wmul@product+1
  6275   0035A4  5001               	movf	___wmul@multiplier^0,w,c
  6276   0035A6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6277   0035A8  50F3               	movf	243,w,c
  6278   0035AA  2606               	addwf	(___wmul@product+1)^0,f,c
  6279   0035AC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6280   0035AE  0203               	mulwf	___wmul@multiplicand^0,c
  6281   0035B0  50F3               	movf	243,w,c
  6282   0035B2  2606               	addwf	(___wmul@product+1)^0,f,c
  6283   0035B4  C005  F001         	movff	___wmul@product,?___wmul
  6284   0035B8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6285   0035BC  0012               	return		;funcret
  6286   0035BE                     __end_of___wmul:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _dtoa *****************
  6290 ;; Defined at:
  6291 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6294 ;;		 -> sprintf@f(12), 
  6295 ;;  d               2   23[COMRAM] int 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  i               2   31[COMRAM] int 
  6298 ;;  w               2   28[COMRAM] int 
  6299 ;;  s               1   30[COMRAM] unsigned char 
  6300 ;;  p               1   27[COMRAM] _Bool 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6310 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6311 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6313 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;Total ram usage:       11 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 4
  6317 ;; This function calls:
  6318 ;;		___awdiv
  6319 ;;		___awmod
  6320 ;;		_abs
  6321 ;;		_pad
  6322 ;; This function is called by:
  6323 ;;		_vfpfcnvrt
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text25
  6328   0026F8                     __ptext25:
  6329                           	callstack 0
  6330   0026F8                     _dtoa:
  6331                           	callstack 22
  6332   0026F8                     
  6333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6334   0026F8  0E01               	movlw	1
  6335   0026FA  6E1C               	movwf	dtoa@p^0,c
  6336   0026FC                     
  6337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6338   0026FC  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6339   0026FE  EF83  F013         	goto	u4101
  6340   002702  EF86  F013         	goto	u4100
  6341   002706                     u4101:
  6342   002706  0E01               	movlw	1
  6343   002708  EF87  F013         	goto	u4110
  6344   00270C                     u4100:
  6345   00270C  0E00               	movlw	0
  6346   00270E                     u4110:
  6347   00270E  6E1F               	movwf	dtoa@s^0,c
  6348   002710                     
  6349                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6350   002710  C0CC  F01D         	movff	_width,dtoa@w
  6351   002714  C0CD  F01E         	movff	_width+1,dtoa@w+1
  6352   002718                     
  6353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6354   002718  501F               	movf	dtoa@s^0,w,c
  6355   00271A  B4D8               	btfsc	status,2,c
  6356   00271C  EF92  F013         	goto	u4121
  6357   002720  EF94  F013         	goto	u4120
  6358   002724                     u4121:
  6359   002724  EFAB  F013         	goto	l1240
  6360   002728                     u4120:
  6361   002728                     
  6362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6363   002728  061D               	decf	dtoa@w^0,f,c
  6364   00272A  A0D8               	btfss	status,0,c
  6365   00272C  061E               	decf	(dtoa@w+1)^0,f,c
  6366   00272E                     
  6367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6368   00272E  501F               	movf	dtoa@s^0,w,c
  6369   002730  A4D8               	btfss	status,2,c
  6370   002732  EF9D  F013         	goto	u4131
  6371   002736  EF9F  F013         	goto	u4130
  6372   00273A                     u4131:
  6373   00273A  EFA5  F013         	goto	l4514
  6374   00273E                     u4130:
  6375   00273E  0E00               	movlw	0
  6376   002740  6E1B               	movwf	(_dtoa$2602+1)^0,c
  6377   002742  0E2B               	movlw	43
  6378   002744  6E1A               	movwf	_dtoa$2602^0,c
  6379   002746  EFA9  F013         	goto	l4516
  6380   00274A                     l4514:
  6381   00274A  0E00               	movlw	0
  6382   00274C  6E1B               	movwf	(_dtoa$2602+1)^0,c
  6383   00274E  0E2D               	movlw	45
  6384   002750  6E1A               	movwf	_dtoa$2602^0,c
  6385   002752                     l4516:
  6386   002752  C01A  F01F         	movff	_dtoa$2602,dtoa@s
  6387   002756                     l1240:
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6390   002756  0E00               	movlw	0
  6391   002758  6E21               	movwf	(dtoa@i+1)^0,c
  6392   00275A  0E1F               	movlw	31
  6393   00275C  6E20               	movwf	dtoa@i^0,c
  6394   00275E                     
  6395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6396   00275E  0E00               	movlw	0
  6397   002760  0101               	movlb	1	; () banked
  6398   002762  6F83               	movwf	(_dbuf+31)& (0+255),b
  6399                           
  6400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6401   002764  EFE3  F013         	goto	l4530
  6402   002768                     l4520:
  6403                           
  6404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6405   002768  0620               	decf	dtoa@i^0,f,c
  6406   00276A  A0D8               	btfss	status,0,c
  6407   00276C  0621               	decf	(dtoa@i+1)^0,f,c
  6408   00276E                     
  6409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6410   00276E  0E64               	movlw	low _dbuf
  6411   002770  2420               	addwf	dtoa@i^0,w,c
  6412   002772  6ED9               	movwf	fsr2l,c
  6413   002774  0E01               	movlw	high _dbuf
  6414   002776  2021               	addwfc	(dtoa@i+1)^0,w,c
  6415   002778  6EDA               	movwf	fsr2h,c
  6416   00277A  C018  F001         	movff	dtoa@d,___awmod@dividend
  6417   00277E  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6418   002782  0E00               	movlw	0
  6419   002784  6E04               	movwf	(___awmod@divisor+1)^0,c
  6420   002786  0E0A               	movlw	10
  6421   002788  6E03               	movwf	___awmod@divisor^0,c
  6422   00278A  ECAE  F016         	call	___awmod	;wreg free
  6423   00278E  C001  F007         	movff	?___awmod,abs@a
  6424   002792  C002  F008         	movff	?___awmod+1,abs@a+1
  6425   002796  EC58  F01A         	call	_abs	;wreg free
  6426   00279A  5007               	movf	?_abs^0,w,c
  6427   00279C  0F30               	addlw	48
  6428   00279E  6EDF               	movwf	indf2,c
  6429   0027A0                     
  6430                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6431   0027A0  0E00               	movlw	0
  6432   0027A2  6E1C               	movwf	dtoa@p^0,c
  6433   0027A4                     
  6434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6435   0027A4  061D               	decf	dtoa@w^0,f,c
  6436   0027A6  A0D8               	btfss	status,0,c
  6437   0027A8  061E               	decf	(dtoa@w+1)^0,f,c
  6438   0027AA                     
  6439                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6440   0027AA  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6441   0027AE  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6442   0027B2  0E00               	movlw	0
  6443   0027B4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6444   0027B6  0E0A               	movlw	10
  6445   0027B8  6E03               	movwf	___awdiv@divisor^0,c
  6446   0027BA  ECF0  F015         	call	___awdiv	;wreg free
  6447   0027BE  C001  F018         	movff	?___awdiv,dtoa@d
  6448   0027C2  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6449   0027C6                     l4530:
  6450                           
  6451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6452   0027C6  BE21               	btfsc	(dtoa@i+1)^0,7,c
  6453   0027C8  EFEE  F013         	goto	u4141
  6454   0027CC  5021               	movf	(dtoa@i+1)^0,w,c
  6455   0027CE  E108               	bnz	u4140
  6456   0027D0  0420               	decf	dtoa@i^0,w,c
  6457   0027D2  A0D8               	btfss	status,0,c
  6458   0027D4  EFEE  F013         	goto	u4141
  6459   0027D8  EFF0  F013         	goto	u4140
  6460   0027DC                     u4141:
  6461   0027DC  EF16  F014         	goto	l4540
  6462   0027E0                     u4140:
  6463   0027E0  5018               	movf	dtoa@d^0,w,c
  6464   0027E2  1019               	iorwf	(dtoa@d+1)^0,w,c
  6465   0027E4  A4D8               	btfss	status,2,c
  6466   0027E6  EFF7  F013         	goto	u4151
  6467   0027EA  EFF9  F013         	goto	u4150
  6468   0027EE                     u4151:
  6469   0027EE  EFB4  F013         	goto	l4520
  6470   0027F2                     u4150:
  6471   0027F2  501C               	movf	dtoa@p^0,w,c
  6472   0027F4  A4D8               	btfss	status,2,c
  6473   0027F6  EFFF  F013         	goto	u4161
  6474   0027FA  EF01  F014         	goto	u4160
  6475   0027FE                     u4161:
  6476   0027FE  EFB4  F013         	goto	l4520
  6477   002802                     u4160:
  6478   002802  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  6479   002804  EF0C  F014         	goto	u4171
  6480   002808  501E               	movf	(dtoa@w+1)^0,w,c
  6481   00280A  E108               	bnz	u4170
  6482   00280C  041D               	decf	dtoa@w^0,w,c
  6483   00280E  A0D8               	btfss	status,0,c
  6484   002810  EF0C  F014         	goto	u4171
  6485   002814  EF0E  F014         	goto	u4170
  6486   002818                     u4171:
  6487   002818  EF16  F014         	goto	l4540
  6488   00281C                     u4170:
  6489   00281C  0100               	movlb	0	; () banked
  6490   00281E  B3D0               	btfsc	_flags& (0+255),1,b
  6491   002820  EF14  F014         	goto	u4181
  6492   002824  EF16  F014         	goto	u4180
  6493   002828                     u4181:
  6494   002828  EFB4  F013         	goto	l4520
  6495   00282C                     u4180:
  6496   00282C                     l4540:
  6497                           
  6498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6499   00282C  501F               	movf	dtoa@s^0,w,c
  6500   00282E  B4D8               	btfsc	status,2,c
  6501   002830  EF1C  F014         	goto	u4191
  6502   002834  EF1E  F014         	goto	u4190
  6503   002838                     u4191:
  6504   002838  EF29  F014         	goto	l4546
  6505   00283C                     u4190:
  6506   00283C                     
  6507                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6508   00283C  0620               	decf	dtoa@i^0,f,c
  6509   00283E  A0D8               	btfss	status,0,c
  6510   002840  0621               	decf	(dtoa@i+1)^0,f,c
  6511   002842                     
  6512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6513   002842  0E64               	movlw	low _dbuf
  6514   002844  2420               	addwf	dtoa@i^0,w,c
  6515   002846  6ED9               	movwf	fsr2l,c
  6516   002848  0E01               	movlw	high _dbuf
  6517   00284A  2021               	addwfc	(dtoa@i+1)^0,w,c
  6518   00284C  6EDA               	movwf	fsr2h,c
  6519   00284E  C01F  FFDF         	movff	dtoa@s,indf2
  6520   002852                     l4546:
  6521                           
  6522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6523   002852  C017  F00F         	movff	dtoa@fp,pad@fp
  6524   002856  0E64               	movlw	low _dbuf
  6525   002858  2420               	addwf	dtoa@i^0,w,c
  6526   00285A  6E10               	movwf	pad@buf^0,c
  6527   00285C  0E01               	movlw	high _dbuf
  6528   00285E  2021               	addwfc	(dtoa@i+1)^0,w,c
  6529   002860  6E11               	movwf	(pad@buf+1)^0,c
  6530   002862  C01D  F012         	movff	dtoa@w,pad@p
  6531   002866  C01E  F013         	movff	dtoa@w+1,pad@p+1
  6532   00286A  EC07  F018         	call	_pad	;wreg free
  6533   00286E  0012               	return		;funcret
  6534   002870                     __end_of_dtoa:
  6535                           	callstack 0
  6536                           
  6537 ;; *************** function _pad *****************
  6538 ;; Defined at:
  6539 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6542 ;;		 -> sprintf@f(12), 
  6543 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6544 ;;		 -> dbuf(32), 
  6545 ;;  p               2   17[COMRAM] int 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  i               2   20[COMRAM] int 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      void 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6557 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;Total ram usage:        8 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 3
  6564 ;; This function calls:
  6565 ;;		_fputc
  6566 ;;		_fputs
  6567 ;; This function is called by:
  6568 ;;		_dtoa
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text26
  6573   00300E                     __ptext26:
  6574                           	callstack 0
  6575   00300E                     _pad:
  6576                           	callstack 22
  6577   00300E                     
  6578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6579   00300E  0100               	movlb	0	; () banked
  6580   003010  A1D0               	btfss	_flags& (0+255),0,b
  6581   003012  EF0D  F018         	goto	u4061
  6582   003016  EF0F  F018         	goto	u4060
  6583   00301A                     u4061:
  6584   00301A  EF17  F018         	goto	l4488
  6585   00301E                     u4060:
  6586   00301E                     
  6587                           ; BSR set to: 0
  6588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6589   00301E  C010  F009         	movff	pad@buf,fputs@s
  6590   003022  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6591   003026  C00F  F00B         	movff	pad@fp,fputs@fp
  6592   00302A  EC04  F01A         	call	_fputs	;wreg free
  6593   00302E                     l4488:
  6594                           
  6595                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6596   00302E  BE13               	btfsc	(pad@p+1)^0,7,c
  6597   003030  EF1E  F018         	goto	u4070
  6598   003034  EF1C  F018         	goto	u4071
  6599   003038                     u4071:
  6600   003038  EF22  F018         	goto	l1232
  6601   00303C                     u4070:
  6602   00303C                     
  6603                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6604   00303C  0E00               	movlw	0
  6605   00303E  6E13               	movwf	(pad@p+1)^0,c
  6606   003040  0E00               	movlw	0
  6607   003042  6E12               	movwf	pad@p^0,c
  6608   003044                     l1232:
  6609                           
  6610                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6611   003044  0E00               	movlw	0
  6612   003046  6E16               	movwf	(pad@i+1)^0,c
  6613   003048  0E00               	movlw	0
  6614   00304A  6E15               	movwf	pad@i^0,c
  6615                           
  6616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6617   00304C  EF32  F018         	goto	l4496
  6618   003050                     l4492:
  6619                           
  6620                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6621   003050  0E00               	movlw	0
  6622   003052  6E02               	movwf	(fputc@c+1)^0,c
  6623   003054  0E20               	movlw	32
  6624   003056  6E01               	movwf	fputc@c^0,c
  6625   003058  C00F  F003         	movff	pad@fp,fputc@fp
  6626   00305C  ECB2  F017         	call	_fputc	;wreg free
  6627   003060                     
  6628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6629   003060  4A15               	infsnz	pad@i^0,f,c
  6630   003062  2A16               	incf	(pad@i+1)^0,f,c
  6631   003064                     l4496:
  6632                           
  6633                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6634   003064  5012               	movf	pad@p^0,w,c
  6635   003066  5C15               	subwf	pad@i^0,w,c
  6636   003068  5016               	movf	(pad@i+1)^0,w,c
  6637   00306A  0A80               	xorlw	128
  6638   00306C  6E14               	movwf	??_pad^0,c
  6639   00306E  5013               	movf	(pad@p+1)^0,w,c
  6640   003070  0A80               	xorlw	128
  6641   003072  5814               	subwfb	??_pad^0,w,c
  6642   003074  A0D8               	btfss	status,0,c
  6643   003076  EF3F  F018         	goto	u4081
  6644   00307A  EF41  F018         	goto	u4080
  6645   00307E                     u4081:
  6646   00307E  EF28  F018         	goto	l4492
  6647   003082                     u4080:
  6648   003082                     
  6649                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6650   003082  0100               	movlb	0	; () banked
  6651   003084  B1D0               	btfsc	_flags& (0+255),0,b
  6652   003086  EF47  F018         	goto	u4091
  6653   00308A  EF49  F018         	goto	u4090
  6654   00308E                     u4091:
  6655   00308E  EF51  F018         	goto	l1237
  6656   003092                     u4090:
  6657   003092                     
  6658                           ; BSR set to: 0
  6659                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6660   003092  C010  F009         	movff	pad@buf,fputs@s
  6661   003096  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6662   00309A  C00F  F00B         	movff	pad@fp,fputs@fp
  6663   00309E  EC04  F01A         	call	_fputs	;wreg free
  6664   0030A2                     l1237:
  6665   0030A2  0012               	return		;funcret
  6666   0030A4                     __end_of_pad:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function _fputs *****************
  6670 ;; Defined at:
  6671 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6674 ;;		 -> dbuf(32), 
  6675 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6676 ;;		 -> sprintf@f(12), 
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  i               2   12[COMRAM] int 
  6679 ;;  c               1   11[COMRAM] unsigned char 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2    8[COMRAM] int 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6689 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6690 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;Total ram usage:        6 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 2
  6696 ;; This function calls:
  6697 ;;		_fputc
  6698 ;; This function is called by:
  6699 ;;		_pad
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text27
  6704   003408                     __ptext27:
  6705                           	callstack 0
  6706   003408                     _fputs:
  6707                           	callstack 22
  6708   003408  0E00               	movlw	0
  6709   00340A  6E0E               	movwf	(fputs@i+1)^0,c
  6710   00340C  0E00               	movlw	0
  6711   00340E  6E0D               	movwf	fputs@i^0,c
  6712   003410  EF13  F01A         	goto	l4482
  6713   003414                     l4478:
  6714   003414  C00C  F001         	movff	fputs@c,fputc@c
  6715   003418  6A02               	clrf	(fputc@c+1)^0,c
  6716   00341A  C00B  F003         	movff	fputs@fp,fputc@fp
  6717   00341E  ECB2  F017         	call	_fputc	;wreg free
  6718   003422  4A0D               	infsnz	fputs@i^0,f,c
  6719   003424  2A0E               	incf	(fputs@i+1)^0,f,c
  6720   003426                     l4482:
  6721   003426  500D               	movf	fputs@i^0,w,c
  6722   003428  2409               	addwf	fputs@s^0,w,c
  6723   00342A  6ED9               	movwf	fsr2l,c
  6724   00342C  500E               	movf	(fputs@i+1)^0,w,c
  6725   00342E  200A               	addwfc	(fputs@s+1)^0,w,c
  6726   003430  6EDA               	movwf	fsr2h,c
  6727   003432  50DF               	movf	indf2,w,c
  6728   003434  6E0C               	movwf	fputs@c^0,c
  6729   003436  500C               	movf	fputs@c^0,w,c
  6730   003438  A4D8               	btfss	status,2,c
  6731   00343A  EF21  F01A         	goto	u4051
  6732   00343E  EF23  F01A         	goto	u4050
  6733   003442                     u4051:
  6734   003442  EF0A  F01A         	goto	l4478
  6735   003446                     u4050:
  6736   003446  0012               	return		;funcret
  6737   003448                     __end_of_fputs:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function _fputc *****************
  6741 ;; Defined at:
  6742 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  c               2    0[COMRAM] int 
  6745 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6746 ;;		 -> sprintf@f(12), 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    0[COMRAM] int 
  6751 ;; Registers used:
  6752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6760 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6761 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;Total ram usage:        8 bytes
  6763 ;; Hardware stack levels used: 1
  6764 ;; Hardware stack levels required when called: 1
  6765 ;; This function calls:
  6766 ;;		_putch
  6767 ;; This function is called by:
  6768 ;;		_pad
  6769 ;;		_vfpfcnvrt
  6770 ;;		_fputs
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           
  6774                           	psect	text28
  6775   002F64                     __ptext28:
  6776                           	callstack 0
  6777   002F64                     _fputc:
  6778                           	callstack 25
  6779   002F64  5003               	movf	fputc@fp^0,w,c
  6780   002F66  B4D8               	btfsc	status,2,c
  6781   002F68  EFB8  F017         	goto	u2041
  6782   002F6C  EFBA  F017         	goto	u2040
  6783   002F70                     u2041:
  6784   002F70  EFC2  F017         	goto	l2906
  6785   002F74                     u2040:
  6786   002F74  5003               	movf	fputc@fp^0,w,c
  6787   002F76  A4D8               	btfss	status,2,c
  6788   002F78  EFC0  F017         	goto	u2051
  6789   002F7C  EFC2  F017         	goto	u2050
  6790   002F80                     u2051:
  6791   002F80  EFC7  F017         	goto	l2908
  6792   002F84                     u2050:
  6793   002F84                     l2906:
  6794   002F84  5001               	movf	fputc@c^0,w,c
  6795   002F86  EC3B  F01B         	call	_putch
  6796   002F8A  EF06  F018         	goto	l1301
  6797   002F8E                     l2908:
  6798   002F8E  5003               	movf	fputc@fp^0,w,c
  6799   002F90  6ED9               	movwf	fsr2l,c
  6800   002F92  6ADA               	clrf	fsr2h,c
  6801   002F94  0E0A               	movlw	10
  6802   002F96  26D9               	addwf	fsr2l,f,c
  6803   002F98  50DE               	movf	postinc2,w,c
  6804   002F9A  10DE               	iorwf	postinc2,w,c
  6805   002F9C  B4D8               	btfsc	status,2,c
  6806   002F9E  EFD3  F017         	goto	u2061
  6807   002FA2  EFD5  F017         	goto	u2060
  6808   002FA6                     u2061:
  6809   002FA6  EFEE  F017         	goto	l2912
  6810   002FAA                     u2060:
  6811   002FAA  5003               	movf	fputc@fp^0,w,c
  6812   002FAC  6ED9               	movwf	fsr2l,c
  6813   002FAE  6ADA               	clrf	fsr2h,c
  6814   002FB0  0E0A               	movlw	10
  6815   002FB2  26D9               	addwf	fsr2l,f,c
  6816   002FB4  5003               	movf	fputc@fp^0,w,c
  6817   002FB6  6EE1               	movwf	fsr1l,c
  6818   002FB8  6AE2               	clrf	fsr1h,c
  6819   002FBA  0E03               	movlw	3
  6820   002FBC  26E1               	addwf	fsr1l,f,c
  6821   002FBE  50DE               	movf	postinc2,w,c
  6822   002FC0  5CE6               	subwf	postinc1,w,c
  6823   002FC2  50E6               	movf	postinc1,w,c
  6824   002FC4  0A80               	xorlw	128
  6825   002FC6  6E08               	movwf	(??_fputc+4)^0,c
  6826   002FC8  50DE               	movf	postinc2,w,c
  6827   002FCA  0A80               	xorlw	128
  6828   002FCC  5808               	subwfb	(??_fputc+4)^0,w,c
  6829   002FCE  B0D8               	btfsc	status,0,c
  6830   002FD0  EFEC  F017         	goto	u2071
  6831   002FD4  EFEE  F017         	goto	u2070
  6832   002FD8                     u2071:
  6833   002FD8  EF06  F018         	goto	l1301
  6834   002FDC                     u2070:
  6835   002FDC                     l2912:
  6836   002FDC  5003               	movf	fputc@fp^0,w,c
  6837   002FDE  6ED9               	movwf	fsr2l,c
  6838   002FE0  6ADA               	clrf	fsr2h,c
  6839   002FE2  0E03               	movlw	3
  6840   002FE4  26D9               	addwf	fsr2l,f,c
  6841   002FE6  50DF               	movf	indf2,w,c
  6842   002FE8  6E04               	movwf	??_fputc^0,c
  6843   002FEA  5003               	movf	fputc@fp^0,w,c
  6844   002FEC  6ED9               	movwf	fsr2l,c
  6845   002FEE  6ADA               	clrf	fsr2h,c
  6846   002FF0  50DF               	movf	indf2,w,c
  6847   002FF2  2404               	addwf	??_fputc^0,w,c
  6848   002FF4  6ED9               	movwf	fsr2l,c
  6849   002FF6  6ADA               	clrf	fsr2h,c
  6850   002FF8  C001  FFDF         	movff	fputc@c,indf2
  6851   002FFC  5003               	movf	fputc@fp^0,w,c
  6852   002FFE  6ED9               	movwf	fsr2l,c
  6853   003000  6ADA               	clrf	fsr2h,c
  6854   003002  0E03               	movlw	3
  6855   003004  26D9               	addwf	fsr2l,f,c
  6856   003006  2ADE               	incf	postinc2,f,c
  6857   003008  0E00               	movlw	0
  6858   00300A  22DD               	addwfc	postdec2,f,c
  6859   00300C                     l1301:
  6860   00300C  0012               	return		;funcret
  6861   00300E                     __end_of_fputc:
  6862                           	callstack 0
  6863                           
  6864 ;; *************** function _putch *****************
  6865 ;; Defined at:
  6866 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  c               1    wreg     unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  c               1    0[COMRAM] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;Total ram usage:        0 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_fputc
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text29
  6894   003676                     __ptext29:
  6895                           	callstack 0
  6896   003676                     _putch:
  6897                           	callstack 25
  6898   003676  0012               	return		;funcret
  6899   003678                     __end_of_putch:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _abs *****************
  6903 ;; Defined at:
  6904 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  a               2    6[COMRAM] int 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  2    6[COMRAM] int 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;Total ram usage:        4 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_dtoa
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text30
  6932   0034B0                     __ptext30:
  6933                           	callstack 0
  6934   0034B0                     _abs:
  6935                           	callstack 25
  6936   0034B0  BE08               	btfsc	(abs@a+1)^0,7,c
  6937   0034B2  EF5D  F01A         	goto	u2251
  6938   0034B6  EF5F  F01A         	goto	u2250
  6939   0034BA                     u2251:
  6940   0034BA  EF65  F01A         	goto	l1286
  6941   0034BE                     u2250:
  6942   0034BE  C007  F007         	movff	abs@a,?_abs
  6943   0034C2  C008  F008         	movff	abs@a+1,?_abs+1
  6944   0034C6  EF71  F01A         	goto	l1289
  6945   0034CA                     l1286:
  6946   0034CA  C007  F009         	movff	abs@a,??_abs
  6947   0034CE  C008  F00A         	movff	abs@a+1,??_abs+1
  6948   0034D2  1E09               	comf	??_abs^0,f,c
  6949   0034D4  1E0A               	comf	(??_abs+1)^0,f,c
  6950   0034D6  4A09               	infsnz	??_abs^0,f,c
  6951   0034D8  2A0A               	incf	(??_abs+1)^0,f,c
  6952   0034DA  C009  F007         	movff	??_abs,?_abs
  6953   0034DE  C00A  F008         	movff	??_abs+1,?_abs+1
  6954   0034E2                     l1289:
  6955   0034E2  0012               	return		;funcret
  6956   0034E4                     __end_of_abs:
  6957                           	callstack 0
  6958                           
  6959 ;; *************** function ___awmod *****************
  6960 ;; Defined at:
  6961 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  dividend        2    0[COMRAM] int 
  6964 ;;  divisor         2    2[COMRAM] int 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  sign            1    5[COMRAM] unsigned char 
  6967 ;;  counter         1    4[COMRAM] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  2    0[COMRAM] int 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        6 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_dtoa
  6987 ;; This function uses a non-reentrant model
  6988 ;;
  6989                           
  6990                           	psect	text31
  6991   002D5C                     __ptext31:
  6992                           	callstack 0
  6993   002D5C                     ___awmod:
  6994                           	callstack 25
  6995   002D5C  0E00               	movlw	0
  6996   002D5E  6E06               	movwf	___awmod@sign^0,c
  6997   002D60  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6998   002D62  EFB7  F016         	goto	u2150
  6999   002D66  EFB5  F016         	goto	u2151
  7000   002D6A                     u2151:
  7001   002D6A  EFBD  F016         	goto	l2982
  7002   002D6E                     u2150:
  7003   002D6E  6C01               	negf	___awmod@dividend^0,c
  7004   002D70  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7005   002D72  B0D8               	btfsc	status,0,c
  7006   002D74  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7007   002D76  0E01               	movlw	1
  7008   002D78  6E06               	movwf	___awmod@sign^0,c
  7009   002D7A                     l2982:
  7010   002D7A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7011   002D7C  EFC4  F016         	goto	u2160
  7012   002D80  EFC2  F016         	goto	u2161
  7013   002D84                     u2161:
  7014   002D84  EFC8  F016         	goto	l2986
  7015   002D88                     u2160:
  7016   002D88  6C03               	negf	___awmod@divisor^0,c
  7017   002D8A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7018   002D8C  B0D8               	btfsc	status,0,c
  7019   002D8E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7020   002D90                     l2986:
  7021   002D90  5003               	movf	___awmod@divisor^0,w,c
  7022   002D92  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7023   002D94  B4D8               	btfsc	status,2,c
  7024   002D96  EFCF  F016         	goto	u2171
  7025   002D9A  EFD1  F016         	goto	u2170
  7026   002D9E                     u2171:
  7027   002D9E  EFF5  F016         	goto	l3002
  7028   002DA2                     u2170:
  7029   002DA2  0E01               	movlw	1
  7030   002DA4  6E05               	movwf	___awmod@counter^0,c
  7031   002DA6  EFD9  F016         	goto	l2992
  7032   002DAA                     l2990:
  7033   002DAA  90D8               	bcf	status,0,c
  7034   002DAC  3603               	rlcf	___awmod@divisor^0,f,c
  7035   002DAE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7036   002DB0  2A05               	incf	___awmod@counter^0,f,c
  7037   002DB2                     l2992:
  7038   002DB2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7039   002DB4  EFDE  F016         	goto	u2181
  7040   002DB8  EFE0  F016         	goto	u2180
  7041   002DBC                     u2181:
  7042   002DBC  EFD5  F016         	goto	l2990
  7043   002DC0                     u2180:
  7044   002DC0                     l2994:
  7045   002DC0  5003               	movf	___awmod@divisor^0,w,c
  7046   002DC2  5C01               	subwf	___awmod@dividend^0,w,c
  7047   002DC4  5004               	movf	(___awmod@divisor+1)^0,w,c
  7048   002DC6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7049   002DC8  A0D8               	btfss	status,0,c
  7050   002DCA  EFE9  F016         	goto	u2191
  7051   002DCE  EFEB  F016         	goto	u2190
  7052   002DD2                     u2191:
  7053   002DD2  EFEF  F016         	goto	l2998
  7054   002DD6                     u2190:
  7055   002DD6  5003               	movf	___awmod@divisor^0,w,c
  7056   002DD8  5E01               	subwf	___awmod@dividend^0,f,c
  7057   002DDA  5004               	movf	(___awmod@divisor+1)^0,w,c
  7058   002DDC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7059   002DDE                     l2998:
  7060   002DDE  90D8               	bcf	status,0,c
  7061   002DE0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7062   002DE2  3203               	rrcf	___awmod@divisor^0,f,c
  7063   002DE4  2E05               	decfsz	___awmod@counter^0,f,c
  7064   002DE6  EFE0  F016         	goto	l2994
  7065   002DEA                     l3002:
  7066   002DEA  5006               	movf	___awmod@sign^0,w,c
  7067   002DEC  B4D8               	btfsc	status,2,c
  7068   002DEE  EFFB  F016         	goto	u2201
  7069   002DF2  EFFD  F016         	goto	u2200
  7070   002DF6                     u2201:
  7071   002DF6  EF01  F017         	goto	l3006
  7072   002DFA                     u2200:
  7073   002DFA  6C01               	negf	___awmod@dividend^0,c
  7074   002DFC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7075   002DFE  B0D8               	btfsc	status,0,c
  7076   002E00  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7077   002E02                     l3006:
  7078   002E02  C001  F001         	movff	___awmod@dividend,?___awmod
  7079   002E06  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7080   002E0A  0012               	return		;funcret
  7081   002E0C                     __end_of___awmod:
  7082                           	callstack 0
  7083                           
  7084 ;; *************** function ___awdiv *****************
  7085 ;; Defined at:
  7086 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7087 ;; Parameters:    Size  Location     Type
  7088 ;;  dividend        2    0[COMRAM] int 
  7089 ;;  divisor         2    2[COMRAM] int 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  quotient        2    6[COMRAM] int 
  7092 ;;  sign            1    5[COMRAM] unsigned char 
  7093 ;;  counter         1    4[COMRAM] unsigned char 
  7094 ;; Return value:  Size  Location     Type
  7095 ;;                  2    0[COMRAM] int 
  7096 ;; Registers used:
  7097 ;;		wreg, status,2, status,0
  7098 ;; Tracked objects:
  7099 ;;		On entry : 0/0
  7100 ;;		On exit  : 0/0
  7101 ;;		Unchanged: 0/0
  7102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;Total ram usage:        8 bytes
  7108 ;; Hardware stack levels used: 1
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_dtoa
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text32
  7117   002BE0                     __ptext32:
  7118                           	callstack 0
  7119   002BE0                     ___awdiv:
  7120                           	callstack 25
  7121   002BE0  0E00               	movlw	0
  7122   002BE2  6E06               	movwf	___awdiv@sign^0,c
  7123   002BE4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7124   002BE6  EFF9  F015         	goto	u2090
  7125   002BEA  EFF7  F015         	goto	u2091
  7126   002BEE                     u2091:
  7127   002BEE  EFFF  F015         	goto	l2938
  7128   002BF2                     u2090:
  7129   002BF2  6C03               	negf	___awdiv@divisor^0,c
  7130   002BF4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7131   002BF6  B0D8               	btfsc	status,0,c
  7132   002BF8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7133   002BFA  0E01               	movlw	1
  7134   002BFC  6E06               	movwf	___awdiv@sign^0,c
  7135   002BFE                     l2938:
  7136   002BFE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7137   002C00  EF06  F016         	goto	u2100
  7138   002C04  EF04  F016         	goto	u2101
  7139   002C08                     u2101:
  7140   002C08  EF0C  F016         	goto	l2944
  7141   002C0C                     u2100:
  7142   002C0C  6C01               	negf	___awdiv@dividend^0,c
  7143   002C0E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7144   002C10  B0D8               	btfsc	status,0,c
  7145   002C12  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7146   002C14  0E01               	movlw	1
  7147   002C16  1A06               	xorwf	___awdiv@sign^0,f,c
  7148   002C18                     l2944:
  7149   002C18  0E00               	movlw	0
  7150   002C1A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7151   002C1C  0E00               	movlw	0
  7152   002C1E  6E07               	movwf	___awdiv@quotient^0,c
  7153   002C20  5003               	movf	___awdiv@divisor^0,w,c
  7154   002C22  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7155   002C24  B4D8               	btfsc	status,2,c
  7156   002C26  EF17  F016         	goto	u2111
  7157   002C2A  EF19  F016         	goto	u2110
  7158   002C2E                     u2111:
  7159   002C2E  EF41  F016         	goto	l2966
  7160   002C32                     u2110:
  7161   002C32  0E01               	movlw	1
  7162   002C34  6E05               	movwf	___awdiv@counter^0,c
  7163   002C36  EF21  F016         	goto	l2952
  7164   002C3A                     l2950:
  7165   002C3A  90D8               	bcf	status,0,c
  7166   002C3C  3603               	rlcf	___awdiv@divisor^0,f,c
  7167   002C3E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7168   002C40  2A05               	incf	___awdiv@counter^0,f,c
  7169   002C42                     l2952:
  7170   002C42  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7171   002C44  EF26  F016         	goto	u2121
  7172   002C48  EF28  F016         	goto	u2120
  7173   002C4C                     u2121:
  7174   002C4C  EF1D  F016         	goto	l2950
  7175   002C50                     u2120:
  7176   002C50                     l2954:
  7177   002C50  90D8               	bcf	status,0,c
  7178   002C52  3607               	rlcf	___awdiv@quotient^0,f,c
  7179   002C54  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7180   002C56  5003               	movf	___awdiv@divisor^0,w,c
  7181   002C58  5C01               	subwf	___awdiv@dividend^0,w,c
  7182   002C5A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7183   002C5C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7184   002C5E  A0D8               	btfss	status,0,c
  7185   002C60  EF34  F016         	goto	u2131
  7186   002C64  EF36  F016         	goto	u2130
  7187   002C68                     u2131:
  7188   002C68  EF3B  F016         	goto	l2962
  7189   002C6C                     u2130:
  7190   002C6C  5003               	movf	___awdiv@divisor^0,w,c
  7191   002C6E  5E01               	subwf	___awdiv@dividend^0,f,c
  7192   002C70  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7193   002C72  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7194   002C74  8007               	bsf	___awdiv@quotient^0,0,c
  7195   002C76                     l2962:
  7196   002C76  90D8               	bcf	status,0,c
  7197   002C78  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7198   002C7A  3203               	rrcf	___awdiv@divisor^0,f,c
  7199   002C7C  2E05               	decfsz	___awdiv@counter^0,f,c
  7200   002C7E  EF28  F016         	goto	l2954
  7201   002C82                     l2966:
  7202   002C82  5006               	movf	___awdiv@sign^0,w,c
  7203   002C84  B4D8               	btfsc	status,2,c
  7204   002C86  EF47  F016         	goto	u2141
  7205   002C8A  EF49  F016         	goto	u2140
  7206   002C8E                     u2141:
  7207   002C8E  EF4D  F016         	goto	l2970
  7208   002C92                     u2140:
  7209   002C92  6C07               	negf	___awdiv@quotient^0,c
  7210   002C94  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7211   002C96  B0D8               	btfsc	status,0,c
  7212   002C98  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7213   002C9A                     l2970:
  7214   002C9A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7215   002C9E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7216   002CA2  0012               	return		;funcret
  7217   002CA4                     __end_of___awdiv:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _sendStringSerial4 *****************
  7221 ;; Defined at:
  7222 ;;		line 41 in file "serial.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  string          1    1[COMRAM] PTR unsigned char 
  7225 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), test@led_state(50), 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7237 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;Total ram usage:        1 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 1
  7244 ;; This function calls:
  7245 ;;		_sendCharSerial4
  7246 ;; This function is called by:
  7247 ;;		_test
  7248 ;;		_calibration_routine
  7249 ;;		_send2USART
  7250 ;;		_sendAllReadings
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text33
  7255   0034E4                     __ptext33:
  7256                           	callstack 0
  7257   0034E4                     _sendStringSerial4:
  7258                           	callstack 28
  7259   0034E4                     
  7260                           ;serial.c: 44:     while(*string != 0){
  7261   0034E4  EF7F  F01A         	goto	l3444
  7262   0034E8                     l3438:
  7263                           
  7264                           ;serial.c: 46:   sendCharSerial4(*string++);
  7265   0034E8  5002               	movf	sendStringSerial4@string^0,w,c
  7266   0034EA  6ED9               	movwf	fsr2l,c
  7267   0034EC  6ADA               	clrf	fsr2h,c
  7268   0034EE  50DF               	movf	indf2,w,c
  7269   0034F0  EC1A  F01B         	call	_sendCharSerial4
  7270   0034F4  2A02               	incf	sendStringSerial4@string^0,f,c
  7271   0034F6                     
  7272                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  7273   0034F6  0E6A               	movlw	106
  7274   0034F8                     u4467:
  7275   0034F8  2EE8               	decfsz	wreg,f,c
  7276   0034FA  D7FE               	bra	u4467
  7277   0034FC  D000               	nop2	
  7278   0034FE                     l3444:
  7279                           
  7280                           ;serial.c: 44:     while(*string != 0){
  7281   0034FE  5002               	movf	sendStringSerial4@string^0,w,c
  7282   003500  6ED9               	movwf	fsr2l,c
  7283   003502  6ADA               	clrf	fsr2h,c
  7284   003504  50DF               	movf	indf2,w,c
  7285   003506  A4D8               	btfss	status,2,c
  7286   003508  EF88  F01A         	goto	u2881
  7287   00350C  EF8A  F01A         	goto	u2880
  7288   003510                     u2881:
  7289   003510  EF74  F01A         	goto	l3438
  7290   003514                     u2880:
  7291   003514  0012               	return		;funcret
  7292   003516                     __end_of_sendStringSerial4:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _sendCharSerial4 *****************
  7296 ;; Defined at:
  7297 ;;		line 35 in file "serial.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  charToSend      1    wreg     unsigned char 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  charToSend      1    0[COMRAM] unsigned char 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;Total ram usage:        1 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_sendStringSerial4
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text34
  7325   003634                     __ptext34:
  7326                           	callstack 0
  7327   003634                     _sendCharSerial4:
  7328                           	callstack 28
  7329                           
  7330                           ;incstack = 0
  7331                           ;sendCharSerial4@charToSend stored from wreg
  7332   003634  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7333   003636                     l477:
  7334   003636  010E               	movlb	14	; () banked
  7335   003638  A537               	btfss	55,2,b	;volatile
  7336   00363A  EF21  F01B         	goto	u2471
  7337   00363E  EF23  F01B         	goto	u2470
  7338   003642                     u2471:
  7339   003642  EF1B  F01B         	goto	l477
  7340   003646                     u2470:
  7341   003646                     
  7342                           ; BSR set to: 14
  7343                           ;serial.c: 37:     TX4REG = charToSend;
  7344   003646  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7345   00364A                     
  7346                           ; BSR set to: 14
  7347   00364A  0012               	return		;funcret
  7348   00364C                     __end_of_sendCharSerial4:
  7349                           	callstack 0
  7350                           
  7351 ;; *************** function _color_read_Red *****************
  7352 ;; Defined at:
  7353 ;;		line 31 in file "color.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;  tmp             2    9[COMRAM] unsigned int 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  2    4[COMRAM] unsigned int 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;Total ram usage:        7 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 2
  7374 ;; This function calls:
  7375 ;;		_I2C_2_Master_Read
  7376 ;;		_I2C_2_Master_RepStart
  7377 ;;		_I2C_2_Master_Start
  7378 ;;		_I2C_2_Master_Stop
  7379 ;;		_I2C_2_Master_Write
  7380 ;; This function is called by:
  7381 ;;		_calibration_routine
  7382 ;;		_reading_values
  7383 ;; This function uses a non-reentrant model
  7384 ;;
  7385                           
  7386                           	psect	text35
  7387   0031FE                     __ptext35:
  7388                           	callstack 0
  7389   0031FE                     _color_read_Red:
  7390                           	callstack 26
  7391   0031FE                     
  7392                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  7393   0031FE  EC31  F01B         	call	_I2C_2_Master_Start	;wreg free
  7394                           
  7395                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  7396   003202  0E52               	movlw	82
  7397   003204  EC26  F01B         	call	_I2C_2_Master_Write
  7398                           
  7399                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
  7400   003208  0EB6               	movlw	182
  7401   00320A  EC26  F01B         	call	_I2C_2_Master_Write
  7402                           
  7403                           ;color.c: 37:  I2C_2_Master_RepStart();
  7404   00320E  EC36  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7405                           
  7406                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  7407   003212  0E53               	movlw	83
  7408   003214  EC26  F01B         	call	_I2C_2_Master_Write
  7409                           
  7410                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  7411   003218  0E01               	movlw	1
  7412   00321A  ECE3  F019         	call	_I2C_2_Master_Read
  7413   00321E  6E07               	movwf	??_color_read_Red^0,c
  7414   003220  5007               	movf	??_color_read_Red^0,w,c
  7415   003222  6E0A               	movwf	color_read_Red@tmp^0,c
  7416   003224  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7417                           
  7418                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7419   003226  0E00               	movlw	0
  7420   003228  ECE3  F019         	call	_I2C_2_Master_Read
  7421   00322C  6E07               	movwf	??_color_read_Red^0,c
  7422   00322E  5007               	movf	??_color_read_Red^0,w,c
  7423   003230  6E09               	movwf	(??_color_read_Red+2)^0,c
  7424   003232  6A08               	clrf	(??_color_read_Red+1)^0,c
  7425   003234  500A               	movf	color_read_Red@tmp^0,w,c
  7426   003236  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7427   003238  6E0A               	movwf	color_read_Red@tmp^0,c
  7428   00323A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7429   00323C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7430   00323E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7431                           
  7432                           ;color.c: 41:  I2C_2_Master_Stop();
  7433   003240  EC2C  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7434   003244                     
  7435                           ;color.c: 42:  return tmp;
  7436   003244  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7437   003248  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7438   00324C  0012               	return		;funcret
  7439   00324E                     __end_of_color_read_Red:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function _color_read_Green *****************
  7443 ;; Defined at:
  7444 ;;		line 45 in file "color.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;		None
  7447 ;; Auto vars:     Size  Location     Type
  7448 ;;  tmp             2    9[COMRAM] unsigned int 
  7449 ;; Return value:  Size  Location     Type
  7450 ;;                  2    4[COMRAM] unsigned int 
  7451 ;; Registers used:
  7452 ;;		wreg, status,2, status,0, cstack
  7453 ;; Tracked objects:
  7454 ;;		On entry : 0/0
  7455 ;;		On exit  : 0/0
  7456 ;;		Unchanged: 0/0
  7457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;Total ram usage:        7 bytes
  7463 ;; Hardware stack levels used: 1
  7464 ;; Hardware stack levels required when called: 2
  7465 ;; This function calls:
  7466 ;;		_I2C_2_Master_Read
  7467 ;;		_I2C_2_Master_RepStart
  7468 ;;		_I2C_2_Master_Start
  7469 ;;		_I2C_2_Master_Stop
  7470 ;;		_I2C_2_Master_Write
  7471 ;; This function is called by:
  7472 ;;		_calibration_routine
  7473 ;;		_reading_values
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text36
  7478   00324E                     __ptext36:
  7479                           	callstack 0
  7480   00324E                     _color_read_Green:
  7481                           	callstack 26
  7482   00324E                     
  7483                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  7484   00324E  EC31  F01B         	call	_I2C_2_Master_Start	;wreg free
  7485                           
  7486                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  7487   003252  0E52               	movlw	82
  7488   003254  EC26  F01B         	call	_I2C_2_Master_Write
  7489                           
  7490                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  7491   003258  0EB8               	movlw	184
  7492   00325A  EC26  F01B         	call	_I2C_2_Master_Write
  7493                           
  7494                           ;color.c: 51:  I2C_2_Master_RepStart();
  7495   00325E  EC36  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7496                           
  7497                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7498   003262  0E53               	movlw	83
  7499   003264  EC26  F01B         	call	_I2C_2_Master_Write
  7500                           
  7501                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7502   003268  0E01               	movlw	1
  7503   00326A  ECE3  F019         	call	_I2C_2_Master_Read
  7504   00326E  6E07               	movwf	??_color_read_Green^0,c
  7505   003270  5007               	movf	??_color_read_Green^0,w,c
  7506   003272  6E0A               	movwf	color_read_Green@tmp^0,c
  7507   003274  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7508                           
  7509                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7510   003276  0E00               	movlw	0
  7511   003278  ECE3  F019         	call	_I2C_2_Master_Read
  7512   00327C  6E07               	movwf	??_color_read_Green^0,c
  7513   00327E  5007               	movf	??_color_read_Green^0,w,c
  7514   003280  6E09               	movwf	(??_color_read_Green+2)^0,c
  7515   003282  6A08               	clrf	(??_color_read_Green+1)^0,c
  7516   003284  500A               	movf	color_read_Green@tmp^0,w,c
  7517   003286  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7518   003288  6E0A               	movwf	color_read_Green@tmp^0,c
  7519   00328A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7520   00328C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7521   00328E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7522                           
  7523                           ;color.c: 55:  I2C_2_Master_Stop();
  7524   003290  EC2C  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7525   003294                     
  7526                           ;color.c: 56:  return tmp;
  7527   003294  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7528   003298  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7529   00329C  0012               	return		;funcret
  7530   00329E                     __end_of_color_read_Green:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _color_read_Clear *****************
  7534 ;; Defined at:
  7535 ;;		line 74 in file "color.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  tmp             2    9[COMRAM] unsigned int 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  2    4[COMRAM] unsigned int 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;Total ram usage:        7 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 2
  7556 ;; This function calls:
  7557 ;;		_I2C_2_Master_Read
  7558 ;;		_I2C_2_Master_RepStart
  7559 ;;		_I2C_2_Master_Start
  7560 ;;		_I2C_2_Master_Stop
  7561 ;;		_I2C_2_Master_Write
  7562 ;; This function is called by:
  7563 ;;		_calibration_routine
  7564 ;;		_reading_values
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text37
  7569   00329E                     __ptext37:
  7570                           	callstack 0
  7571   00329E                     _color_read_Clear:
  7572                           	callstack 26
  7573   00329E                     
  7574                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7575   00329E  EC31  F01B         	call	_I2C_2_Master_Start	;wreg free
  7576                           
  7577                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7578   0032A2  0E52               	movlw	82
  7579   0032A4  EC26  F01B         	call	_I2C_2_Master_Write
  7580                           
  7581                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7582   0032A8  0EB4               	movlw	180
  7583   0032AA  EC26  F01B         	call	_I2C_2_Master_Write
  7584                           
  7585                           ;color.c: 80:  I2C_2_Master_RepStart();
  7586   0032AE  EC36  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7587                           
  7588                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7589   0032B2  0E53               	movlw	83
  7590   0032B4  EC26  F01B         	call	_I2C_2_Master_Write
  7591                           
  7592                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7593   0032B8  0E01               	movlw	1
  7594   0032BA  ECE3  F019         	call	_I2C_2_Master_Read
  7595   0032BE  6E07               	movwf	??_color_read_Clear^0,c
  7596   0032C0  5007               	movf	??_color_read_Clear^0,w,c
  7597   0032C2  6E0A               	movwf	color_read_Clear@tmp^0,c
  7598   0032C4  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7599                           
  7600                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7601   0032C6  0E00               	movlw	0
  7602   0032C8  ECE3  F019         	call	_I2C_2_Master_Read
  7603   0032CC  6E07               	movwf	??_color_read_Clear^0,c
  7604   0032CE  5007               	movf	??_color_read_Clear^0,w,c
  7605   0032D0  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7606   0032D2  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7607   0032D4  500A               	movf	color_read_Clear@tmp^0,w,c
  7608   0032D6  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7609   0032D8  6E0A               	movwf	color_read_Clear@tmp^0,c
  7610   0032DA  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7611   0032DC  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7612   0032DE  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7613                           
  7614                           ;color.c: 84:  I2C_2_Master_Stop();
  7615   0032E0  EC2C  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7616   0032E4                     
  7617                           ;color.c: 85:  return tmp;
  7618   0032E4  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7619   0032E8  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7620   0032EC  0012               	return		;funcret
  7621   0032EE                     __end_of_color_read_Clear:
  7622                           	callstack 0
  7623                           
  7624 ;; *************** function _color_read_Blue *****************
  7625 ;; Defined at:
  7626 ;;		line 59 in file "color.c"
  7627 ;; Parameters:    Size  Location     Type
  7628 ;;		None
  7629 ;; Auto vars:     Size  Location     Type
  7630 ;;  tmp             2    9[COMRAM] unsigned int 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2    4[COMRAM] unsigned int 
  7633 ;; Registers used:
  7634 ;;		wreg, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;Total ram usage:        7 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 2
  7647 ;; This function calls:
  7648 ;;		_I2C_2_Master_Read
  7649 ;;		_I2C_2_Master_RepStart
  7650 ;;		_I2C_2_Master_Start
  7651 ;;		_I2C_2_Master_Stop
  7652 ;;		_I2C_2_Master_Write
  7653 ;; This function is called by:
  7654 ;;		_calibration_routine
  7655 ;;		_reading_values
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text38
  7660   0032EE                     __ptext38:
  7661                           	callstack 0
  7662   0032EE                     _color_read_Blue:
  7663                           	callstack 26
  7664   0032EE                     
  7665                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  7666   0032EE  EC31  F01B         	call	_I2C_2_Master_Start	;wreg free
  7667                           
  7668                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  7669   0032F2  0E52               	movlw	82
  7670   0032F4  EC26  F01B         	call	_I2C_2_Master_Write
  7671                           
  7672                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x1A);
  7673   0032F8  0EBA               	movlw	186
  7674   0032FA  EC26  F01B         	call	_I2C_2_Master_Write
  7675                           
  7676                           ;color.c: 65:  I2C_2_Master_RepStart();
  7677   0032FE  EC36  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  7678                           
  7679                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  7680   003302  0E53               	movlw	83
  7681   003304  EC26  F01B         	call	_I2C_2_Master_Write
  7682                           
  7683                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  7684   003308  0E01               	movlw	1
  7685   00330A  ECE3  F019         	call	_I2C_2_Master_Read
  7686   00330E  6E07               	movwf	??_color_read_Blue^0,c
  7687   003310  5007               	movf	??_color_read_Blue^0,w,c
  7688   003312  6E0A               	movwf	color_read_Blue@tmp^0,c
  7689   003314  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7690                           
  7691                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7692   003316  0E00               	movlw	0
  7693   003318  ECE3  F019         	call	_I2C_2_Master_Read
  7694   00331C  6E07               	movwf	??_color_read_Blue^0,c
  7695   00331E  5007               	movf	??_color_read_Blue^0,w,c
  7696   003320  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7697   003322  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7698   003324  500A               	movf	color_read_Blue@tmp^0,w,c
  7699   003326  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7700   003328  6E0A               	movwf	color_read_Blue@tmp^0,c
  7701   00332A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7702   00332C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7703   00332E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7704                           
  7705                           ;color.c: 69:  I2C_2_Master_Stop();
  7706   003330  EC2C  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7707   003334                     
  7708                           ;color.c: 70:  return tmp;
  7709   003334  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7710   003338  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7711   00333C  0012               	return		;funcret
  7712   00333E                     __end_of_color_read_Blue:
  7713                           	callstack 0
  7714                           
  7715 ;; *************** function _I2C_2_Master_Write *****************
  7716 ;; Defined at:
  7717 ;;		line 45 in file "i2c.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  data_byte       1    wreg     unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  data_byte       1    1[COMRAM] unsigned char 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0, cstack
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;Total ram usage:        1 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 1
  7738 ;; This function calls:
  7739 ;;		_I2C_2_Master_Idle
  7740 ;; This function is called by:
  7741 ;;		_color_writetoaddr
  7742 ;;		_color_read_Red
  7743 ;;		_color_read_Green
  7744 ;;		_color_read_Blue
  7745 ;;		_color_read_Clear
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           	psect	text39
  7750   00364C                     __ptext39:
  7751                           	callstack 0
  7752   00364C                     _I2C_2_Master_Write:
  7753                           	callstack 26
  7754                           
  7755                           ;incstack = 0
  7756                           ;I2C_2_Master_Write@data_byte stored from wreg
  7757   00364C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7758   00364E                     
  7759                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7760   00364E  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7761   003652                     
  7762                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7763   003652  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7764   003656  0012               	return		;funcret
  7765   003658                     __end_of_I2C_2_Master_Write:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function _I2C_2_Master_Stop *****************
  7769 ;; Defined at:
  7770 ;;		line 39 in file "i2c.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used: 1
  7790 ;; Hardware stack levels required when called: 1
  7791 ;; This function calls:
  7792 ;;		_I2C_2_Master_Idle
  7793 ;; This function is called by:
  7794 ;;		_color_writetoaddr
  7795 ;;		_color_read_Red
  7796 ;;		_color_read_Green
  7797 ;;		_color_read_Blue
  7798 ;;		_color_read_Clear
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text40
  7803   003658                     __ptext40:
  7804                           	callstack 0
  7805   003658                     _I2C_2_Master_Stop:
  7806                           	callstack 26
  7807   003658                     
  7808                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7809   003658  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7810   00365C                     
  7811                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7812   00365C  010E               	movlb	14	; () banked
  7813   00365E  85DA               	bsf	218,2,b	;volatile
  7814   003660                     
  7815                           ; BSR set to: 14
  7816   003660  0012               	return		;funcret
  7817   003662                     __end_of_I2C_2_Master_Stop:
  7818                           	callstack 0
  7819                           
  7820 ;; *************** function _I2C_2_Master_Start *****************
  7821 ;; Defined at:
  7822 ;;		line 27 in file "i2c.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;		None
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1    wreg      void 
  7829 ;; Registers used:
  7830 ;;		wreg, status,2, status,0, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;Total ram usage:        0 bytes
  7841 ;; Hardware stack levels used: 1
  7842 ;; Hardware stack levels required when called: 1
  7843 ;; This function calls:
  7844 ;;		_I2C_2_Master_Idle
  7845 ;; This function is called by:
  7846 ;;		_color_writetoaddr
  7847 ;;		_color_read_Red
  7848 ;;		_color_read_Green
  7849 ;;		_color_read_Blue
  7850 ;;		_color_read_Clear
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text41
  7855   003662                     __ptext41:
  7856                           	callstack 0
  7857   003662                     _I2C_2_Master_Start:
  7858                           	callstack 26
  7859   003662                     
  7860                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7861   003662  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7862   003666                     
  7863                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7864   003666  010E               	movlb	14	; () banked
  7865   003668  81DA               	bsf	218,0,b	;volatile
  7866   00366A                     
  7867                           ; BSR set to: 14
  7868   00366A  0012               	return		;funcret
  7869   00366C                     __end_of_I2C_2_Master_Start:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _I2C_2_Master_RepStart *****************
  7873 ;; Defined at:
  7874 ;;		line 33 in file "i2c.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;		None
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;Total ram usage:        0 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 1
  7895 ;; This function calls:
  7896 ;;		_I2C_2_Master_Idle
  7897 ;; This function is called by:
  7898 ;;		_color_read_Red
  7899 ;;		_color_read_Green
  7900 ;;		_color_read_Blue
  7901 ;;		_color_read_Clear
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text42
  7906   00366C                     __ptext42:
  7907                           	callstack 0
  7908   00366C                     _I2C_2_Master_RepStart:
  7909                           	callstack 26
  7910   00366C                     
  7911                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7912   00366C  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7913   003670                     
  7914                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7915   003670  010E               	movlb	14	; () banked
  7916   003672  83DA               	bsf	218,1,b	;volatile
  7917   003674                     
  7918                           ; BSR set to: 14
  7919   003674  0012               	return		;funcret
  7920   003676                     __end_of_I2C_2_Master_RepStart:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function _I2C_2_Master_Read *****************
  7924 ;; Defined at:
  7925 ;;		line 51 in file "i2c.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  ack             1    wreg     unsigned char 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  ack             1    2[COMRAM] unsigned char 
  7930 ;;  tmp             1    3[COMRAM] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      unsigned char 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;Total ram usage:        3 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 1
  7947 ;; This function calls:
  7948 ;;		_I2C_2_Master_Idle
  7949 ;; This function is called by:
  7950 ;;		_color_read_Red
  7951 ;;		_color_read_Green
  7952 ;;		_color_read_Blue
  7953 ;;		_color_read_Clear
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text43
  7958   0033C6                     __ptext43:
  7959                           	callstack 0
  7960   0033C6                     _I2C_2_Master_Read:
  7961                           	callstack 26
  7962                           
  7963                           ; BSR set to: 14
  7964                           ;incstack = 0
  7965                           ;I2C_2_Master_Read@ack stored from wreg
  7966   0033C6  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7967   0033C8                     
  7968                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7969   0033C8  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7970   0033CC                     
  7971                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7972   0033CC  010E               	movlb	14	; () banked
  7973   0033CE  87DA               	bsf	218,3,b	;volatile
  7974                           
  7975                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7976   0033D0  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7977   0033D4                     
  7978                           ;i2c.c: 57:   tmp = SSP2BUF;
  7979   0033D4  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7980                           
  7981                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7982   0033D8  ECB8  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7983   0033DC                     
  7984                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7985   0033DC  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7986   0033DE  B4D8               	btfsc	status,2,c
  7987   0033E0  EFF4  F019         	goto	u2451
  7988   0033E4  EFF8  F019         	goto	u2450
  7989   0033E8                     u2451:
  7990   0033E8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7991   0033EA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7992   0033EC  EFF9  F019         	goto	u2468
  7993   0033F0                     u2450:
  7994   0033F0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7995   0033F2                     u2468:
  7996   0033F2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7997   0033F4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7998   0033F6  010E               	movlb	14	; () banked
  7999   0033F8  51DA               	movf	218,w,b	;volatile
  8000   0033FA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8001   0033FC  0BDF               	andlw	-33
  8002   0033FE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8003   003400  6FDA               	movwf	218,b	;volatile
  8004   003402                     
  8005                           ; BSR set to: 14
  8006                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8007   003402  89DA               	bsf	218,4,b	;volatile
  8008   003404                     
  8009                           ; BSR set to: 14
  8010                           ;i2c.c: 61:   return tmp;
  8011   003404  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8012   003406                     
  8013                           ; BSR set to: 14
  8014   003406  0012               	return		;funcret
  8015   003408                     __end_of_I2C_2_Master_Read:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function _I2C_2_Master_Idle *****************
  8019 ;; Defined at:
  8020 ;;		line 22 in file "i2c.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;		None
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  1    wreg      void 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;Total ram usage:        1 bytes
  8039 ;; Hardware stack levels used: 1
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_I2C_2_Master_Start
  8044 ;;		_I2C_2_Master_RepStart
  8045 ;;		_I2C_2_Master_Stop
  8046 ;;		_I2C_2_Master_Write
  8047 ;;		_I2C_2_Master_Read
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text44
  8052   003570                     __ptext44:
  8053                           	callstack 0
  8054   003570                     _I2C_2_Master_Idle:
  8055                           	callstack 26
  8056   003570                     l168:
  8057   003570  010E               	movlb	14	; () banked
  8058   003572  B5D8               	btfsc	216,2,b	;volatile
  8059   003574  EFBE  F01A         	goto	u2381
  8060   003578  EFC0  F01A         	goto	u2380
  8061   00357C                     u2381:
  8062   00357C  EFB8  F01A         	goto	l168
  8063   003580                     u2380:
  8064   003580                     
  8065                           ; BSR set to: 14
  8066   003580  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8067   003584  0E1F               	movlw	31
  8068   003586  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8069   003588  A4D8               	btfss	status,2,c
  8070   00358A  EFC9  F01A         	goto	u2391
  8071   00358E  EFCB  F01A         	goto	u2390
  8072   003592                     u2391:
  8073   003592  EFB8  F01A         	goto	l168
  8074   003596                     u2390:
  8075   003596                     
  8076                           ; BSR set to: 14
  8077   003596  0012               	return		;funcret
  8078   003598                     __end_of_I2C_2_Master_Idle:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function _ADC_init *****************
  8082 ;; Defined at:
  8083 ;;		line 9 in file "ADC.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;Total ram usage:        0 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_main
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text45
  8111   00361A                     __ptext45:
  8112                           	callstack 0
  8113   00361A                     _ADC_init:
  8114                           	callstack 30
  8115   00361A                     
  8116                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8117   00361A  8C86               	bsf	134,6,c	;volatile
  8118                           
  8119                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8120   00361C  010E               	movlb	14	; () banked
  8121   00361E  8DB4               	bsf	180,6,b	;volatile
  8122                           
  8123                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8124   003620  010F               	movlb	15	; () banked
  8125   003622  9958               	bcf	88,4,b	;volatile
  8126   003624                     
  8127                           ; BSR set to: 15
  8128                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8129   003624  0EFC               	movlw	-4
  8130   003626  1758               	andwf	88,f,b	;volatile
  8131                           
  8132                           ;ADC.c: 17:     ADPCH=0b101110;
  8133   003628  0E2E               	movlw	46
  8134   00362A  6F5F               	movwf	95,b	;volatile
  8135   00362C                     
  8136                           ; BSR set to: 15
  8137                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8138   00362C  9460               	bcf	96,2,c	;volatile
  8139   00362E                     
  8140                           ; BSR set to: 15
  8141                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8142   00362E  8860               	bsf	96,4,c	;volatile
  8143   003630                     
  8144                           ; BSR set to: 15
  8145                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8146   003630  8E60               	bsf	96,7,c	;volatile
  8147   003632                     
  8148                           ; BSR set to: 15
  8149   003632  0012               	return		;funcret
  8150   003634                     __end_of_ADC_init:
  8151                           	callstack 0
  8152                           
  8153                           	psect	rparam
  8154   000000                     
  8155                           	psect	config
  8156                           
  8157                           ;Config register CONFIG1L @ 0x300000
  8158                           ;	External Oscillator mode Selection bits
  8159                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8160                           ;	Power-up default value for COSC bits
  8161                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8162   300000                     	org	3145728
  8163   300000  AA                 	db	170
  8164                           
  8165                           ;Config register CONFIG1H @ 0x300001
  8166                           ;	unspecified, using default values
  8167                           ;	Clock Out Enable bit
  8168                           ;	CLKOUTEN = 0x1, unprogrammed default
  8169                           ;	Clock Switch Enable bit
  8170                           ;	CSWEN = 0x1, unprogrammed default
  8171                           ;	Fail-Safe Clock Monitor Enable bit
  8172                           ;	FCMEN = 0x1, unprogrammed default
  8173   300001                     	org	3145729
  8174   300001  FF                 	db	255
  8175                           
  8176                           ;Config register CONFIG3L @ 0x300004
  8177                           ;	WDT Period Select bits
  8178                           ;	WDTCPS = 0x1F, unprogrammed default
  8179                           ;	WDT operating mode
  8180                           ;	WDTE = OFF, WDT Disabled
  8181   300004                     	org	3145732
  8182   300004  9F                 	db	159
  8183                           
  8184                           ;Config register CONFIG3H @ 0x300005
  8185                           ;	unspecified, using default values
  8186                           ;	WDT Window Select bits
  8187                           ;	WDTCWS = 0x7, unprogrammed default
  8188                           ;	WDT input clock selector
  8189                           ;	WDTCCS = 0x7, unprogrammed default
  8190   300005                     	org	3145733
  8191   300005  FF                 	db	255
  8192                           tosu	equ	0xFFF
  8193                           tosh	equ	0xFFE
  8194                           tosl	equ	0xFFD
  8195                           stkptr	equ	0xFFC
  8196                           pclatu	equ	0xFFB
  8197                           pclath	equ	0xFFA
  8198                           pcl	equ	0xFF9
  8199                           tblptru	equ	0xFF8
  8200                           tblptrh	equ	0xFF7
  8201                           tblptrl	equ	0xFF6
  8202                           tablat	equ	0xFF5
  8203                           prodh	equ	0xFF4
  8204                           prodl	equ	0xFF3
  8205                           indf0	equ	0xFEF
  8206                           postinc0	equ	0xFEE
  8207                           postdec0	equ	0xFED
  8208                           preinc0	equ	0xFEC
  8209                           plusw0	equ	0xFEB
  8210                           fsr0h	equ	0xFEA
  8211                           fsr0l	equ	0xFE9
  8212                           wreg	equ	0xFE8
  8213                           indf1	equ	0xFE7
  8214                           postinc1	equ	0xFE6
  8215                           postdec1	equ	0xFE5
  8216                           preinc1	equ	0xFE4
  8217                           plusw1	equ	0xFE3
  8218                           fsr1h	equ	0xFE2
  8219                           fsr1l	equ	0xFE1
  8220                           bsr	equ	0xFE0
  8221                           indf2	equ	0xFDF
  8222                           postinc2	equ	0xFDE
  8223                           postdec2	equ	0xFDD
  8224                           preinc2	equ	0xFDC
  8225                           plusw2	equ	0xFDB
  8226                           fsr2h	equ	0xFDA
  8227                           fsr2l	equ	0xFD9
  8228                           status	equ	0xFD8

Data Sizes:
    Strings     244
    Constant    0
    Data        1
    BSS         176
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    108     153
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(1) Largest target is 8
		 -> colorCalibration(BANK0[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    reading_values@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    S2523$buffer	PTR unsigned char  size(2) Largest target is 0

    S2523$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK0[50]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(COMRAM[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK0[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _test->_convert_rgb2hue
    _send2USART->_sprintf
    _reading_values->_color_read_Blue
    _reading_values->_color_read_Clear
    _reading_values->_color_read_Green
    _reading_values->_color_read_Red
    _convert_rgb2hue->___fldiv
    ___xxtofl->___lwdiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_test
    _test->_send2USART

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   49193
                                            106 BANK0      2     2      0
                           _ADC_init
                _calibration_routine
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                               _test
 ---------------------------------------------------------------------------------
 (1) _test                                                56    56      0   37350
                                             50 BANK0     56    56      0
                    _convert_rgb2hue
                     _reading_values
                         _send2USART
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send2USART                                          52    50      2   10562
                                             67 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _reading_values                                       1     0      1     616
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                     46    44      2   15412
                                             49 COMRAM    46    44      2
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lwdiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     469
                                              7 COMRAM    14    10      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     956
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1702
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1703
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 23    22      1   11355
                                             67 COMRAM    23    22      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    9686
                                             48 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    7394
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    6906
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4210
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2391
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1182
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    1     0      1     675
                                              1 COMRAM     1     0      1
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _test
     _convert_rgb2hue
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___lwdiv
       ___xxtofl
         ___lwdiv (ARG)
     _reading_values
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _send2USART
       _sendStringSerial4
       _sprintf
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17C      61        0.0%
DATA                 0      0     17C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 16:19:39 2024

               _color_read_Red 31FE                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
                 ___fldiv@sign 0029                _color_read_Blue 32EE                             l62 35DC  
                           l71 333C                             l65 324C                             l74 32EC  
                           l82 1054                             l59 347A                             l68 329C  
                           l84 1064                             l94 1156                             l86 10BE  
                           l96 1166                             l88 10CE                             l98 11C0  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003             convert_rgb2hue@max 0048  
           convert_rgb2hue@hue 0050             convert_rgb2hue@min 0044               _color_read_Clear 329E  
             _color_read_Green 324E                            l100 11D0                            l102 156E  
                          l103 12E4                            l104 13D4                            l121 23F8  
                          l130 2514                            l122 2446                            l131 256E  
                          l107 158A                            l124 2454                            l116 29D4  
                          l125 24A6                            l134 31FC                            l127 24B4  
                          l119 23EA                            l128 2506                            l171 3596  
                          l180 3660                            l340 3132                            l165 356E  
                          l174 366A                            l183 3656                            l168 3570  
                          l177 3674                            l186 3406                            l531 35FA  
                          l534 35BC                            l279 3632                            l480 364A  
                          l468 3618                            l804 2BDE                            l477 3636  
                          l486 3514                            l831 2ADA                            l765 2CA2  
                          l793 2F62                            l778 2E0A                            l799 2B98  
                          _abs 34B0                            _pad 300E            convert_rgb2hue@cMax 0032  
                 ___awmod@sign 0006            convert_rgb2hue@diff 004C                            wreg 0FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 000A  
                         l1104 3382                           l1032 31A6                           l1121 2032  
                         l1025 319E                           l1130 211A                           l1203 235A  
                         ?_abs 0007                           l1212 34AE                           l1116 220E  
                         l1301 300C                           l1118 206E                           l1062 177A  
                         l1127 20B4                           l1071 1A4A                           l1063 1768  
                         l3000 2DE4                           l1312 3676                           l1232 3044  
                         l1240 2756                           l1152 1E74                           l1064 172E  
                         l1129 212C                           l3002 2DEA                           l1235 3082  
                         l1155 1D06                           l3004 2DFA                           l1148 1B10  
                         l1309 3446                           l1237 30A2                           l1253 286E  
                         l1261 2EB8                           l1165 1E36                           l1157 1D7E  
                         l3006 2E02                           l1158 1D6C                           l1079 1894  
                         l1088 1964                           l3200 15D8                           l1192 23C2  
                         l1257 2EB0                           l1089 1952                           l3026 34B0  
                         l1282 33C4                           l3210 160A                           l3202 15DA  
                         l3028 34BE                           l1276 26F6                           l3300 17D8  
                         l3220 1632                           l3212 160C                           l3204 15E2  
                         l1196 22FE                           l1189 2266                           l1286 34CA  
                         l3310 1802                           l3302 17E4                           l3230 166C  
                         l3222 1642                           l3214 1612                           l3206 15F2  
                         l3160 3652                           l3400 31FE                           l3080 2E0C  
                         l3320 1874                           l3304 17E8                           l3312 1808  
                         l3240 1698                           l3232 167E                           l3224 1652  
                         l3216 1620                           l3208 15F8                           l1289 34E2  
                         l3170 33C8                           l3154 3662                           l3162 3658  
                         l3402 3244                           l3090 2E7E                           l3082 2E14  
                         l4050 3456                           l3330 18CE                           l3314 182E  
                         l3322 1884                           l3306 17F6                           l3250 16AC  
                         l3242 169C                           l3234 168C                           l3226 1654  
                         l3218 1622                           l3180 3404                           l3172 33CC  
                         l3156 3666                           l3164 365C                           l3412 32EE  
                         l3420 32E4                           l3084 2E3A                           l3092 2E86  
                         l4052 3466                           l3500 1F42                           l3340 18FE  
                         l3332 18D8                           l3324 18AA                           l3316 1862  
                         l3308 17F8                           l3260 16C0                           l3252 16B0  
                         l3244 16A0                           l3236 1690                           l3228 165C  
                         l4150 361A                           l3094 3570                           l3174 33D4  
                         l3166 366C                           l3158 364E                           l3414 3334  
                         l3406 324E                           l3086 2E42                           l4054 3470  
                         l4046 3448                           l3502 1F58                           l3350 1926  
                         l3342 1902                           l3334 18E6                           l3326 18BA  
                         l3318 1864                           l3270 16FA                           l3262 16C4  
                         l3254 16B4                           l3246 16A4                           l3238 1694  
                         l3190 1598                           l4152 3624                           l3096 3580  
                         l3176 33DC                           l3168 3670                           l3408 3294  
                         l3184 3636                           l3440 34F4                           l3088 2E5E  
                         l4048 344C                           l4160 35FC                           l3520 1FAC  
                         l3504 1F68                           l3512 1F88                           l3600 1A4C  
                         l3360 1980                           l3352 1934                           l3344 1912  
                         l3336 18E8                           l3280 174C                           l3272 1716  
                         l3264 16C8                           l3256 16B8                           l3248 16A8  
                         l3192 15A6                           l4154 362C                           l3178 3402  
                         l3418 329E                           l3186 3646                           l3442 34F6  
                         l4170 3616                           l4162 3606                           l3530 1FFE  
                         l3522 1FC6                           l3514 1F98                           l3506 1F70  
                         l3610 1A88                           l3602 1A58                           l3370 19EA  
                         l3362 198E                           l3354 194A                           l3338 18F6  
                         l3346 1914                           l3290 1798                           l3282 175A  
                         l3274 1726                           l3258 16BC                           l3266 16CC  
                         l3194 15A8                           l4156 362E                           l3444 34FE  
                         l3436 34E4                           l4500 26F8                           l4180 3102  
                         l4172 30A4                           l4164 3608                           l3540 205A  
                         l3532 200E                           l3524 1FD6                           l3516 1F98  
                         l3508 1F74                           l3700 1D8E                           l3620 1ABA  
                         l3612 1A98                           l3604 1A66                           l3380 1A24  
                         l3372 1A0A                           l3364 19C8                           l3348 1922  
                         l3284 175C                           l3276 173C                           l3268 16D0  
                         l3196 15B8                           l3188 158C                           l4158 3630  
                         l3438 34E8                           l2910 2FAA                           l2902 2F64  
                         l4510 272E                           l4502 26FC                           l4190 3124  
                         l4182 310C                           l4174 30B4                           l4166 3612  
                         l3550 209A                           l3542 205C                           l3534 2022  
                         l3526 1FE6                           l3470 1EA2                           l3462 1E76  
                         l3710 1DF0                           l3702 1D9A                           l3630 1AFA  
                         l3622 1AC8                           l3614 1A9E                           l3606 1A68  
                         l3382 1A2A                           l3374 1A0E                           l3358 1974  
                         l3366 19CA                           l3294 17AC                           l3286 1766  
                         l3278 1748                           l3198 15C8                           l2912 2FDC  
                         l2904 2F74                           l4520 2768                           l4512 273E  
                         l4504 2710                           l4192 3126                           l4184 310E  
                         l4176 30DA                           l4168 3614                           l3560 20D6  
                         l3552 20A4                           l3544 206C                           l3536 2030  
                         l3528 1FF6                           l3480 1EDC                           l3472 1EB2  
                         l3464 1E82                           l3720 1E58                           l3712 1E04  
                         l3704 1DA8                           l3640 1B44                           l3632 1B00  
                         l3624 1ACA                           l3616 1AAE                           l3608 1A78  
                         l3384 1A38                           l3376 1A1C                           l3368 19DA  
                         l3296 17BC                           l3288 1788                           l3800 2A7A  
                         l2930 2BE0                           l2906 2F84                           l4522 276E  
                         l4530 27C6                           l4514 274A                           l4506 2718  
                         l4610 339C                           l4194 3130                           l4186 3118  
                         l4178 30DE                           l3570 2148                           l3562 20E4  
                         l3554 20B2                           l3546 207E                           l3538 203C  
                         l3490 1F08                           l3482 1EE2                           l3474 1EC2  
                         l3466 1E90                           l3722 1E5A                           l3714 1E1E  
                         l3706 1DD2                           l3650 1B94                           l3642 1B50  
                         l3634 1B20                           l3626 1ADA                           l3618 1AB4  
                         l3386 1A3A                           l3378 1A22                           l3298 17CA  
                         l3730 333E                           l3810 2AAA                           l2940 2C0C  
                         l2932 2BE4                           l2908 2F8E                           l4532 27E0  
                         l4540 282C                           l4524 27A0                           l4516 2752  
                         l4508 2728                           l2924 3598                           l4612 33BC  
                         l4620 348C                           l4700 249E                           l4188 311A  
                         l3580 21B4                           l3572 2156                           l3564 2112  
                         l3548 2094                           l3556 20C4                           l3492 1F18  
                         l3484 1EE8                           l3476 1EC4                           l3468 1E92  
                         l3740 2EF8                           l3716 1E3A                           l3724 1E60  
                         l3708 1DD6                           l3660 1BD6                           l3652 1BA0  
                         l3644 1B5A                           l3636 1B30                           l3628 1AEA  
                         l3732 334E                           l3812 2ABA                           l3820 313C  
                         l3900 0EF6                           l2950 2C3A                           l2942 2C14  
                         l2934 2BF2                           l4542 283C                           l4534 27F2  
                         l4526 27A4                           l4518 275E                           l2926 35B4  
                         l4550 2570                           l4606 3384                           l4622 3494  
                         l4710 24FE                           l4702 24B6                           l3590 2202  
                         l3582 21CE                           l3574 2180                           l3558 20D2  
                         l3494 1F28                           l3486 1EF6                           l3478 1ECC  
                         l3742 2F26                           l3726 1E64                           l3718 1E4A  
                         l3670 1C38                           l3662 1BE2                           l3654 1BAC  
                         l3646 1B70                           l3814 2ACA                           l3806 2A8E  
                         l3830 3172                           l3822 314E                           l3910 100E  
                         l3902 0F06                           l4630 35F2                           ?_pad 000F  
                         l2960 2C74                           l2952 2C42                           l2944 2C18  
                         l2936 2BFA                           l4480 3422                           l4544 2842  
                         l4536 2802                           l4528 27AA                           l4560 25B8  
                         l4552 2596                           l4608 338C                           l4624 34A4  
                         l4616 347C                           l4720 254C                           l4712 251A  
                         l4704 24CE                           l3592 2204                           l3584 21EA  
                         l3568 213C                           l3576 2184                           l3496 1F2A  
                         l3488 1EF8                           l3744 2F36                           l3736 2EBA  
                         l3760 2B58                           l3752 2ADC                           l3680 1CCE  
                         l3672 1C44                           l3664 1BF2                           l3656 1BBA  
                         l3648 1B7C                           l3808 2A9A                           l3832 3188  
                         l3824 3156                           l3840 2212                           l3920 1110  
                         l3912 1040                           l3904 0F48                           l4640 288C  
                         l4632 2870                           l2970 2C9A                           l2962 2C76  
                         l2954 2C50                           l2946 2C20                           l2938 2BFE  
                         l4482 3426                           l4490 303C                           l4546 2852  
                         l4538 281C                           l4562 25BC                           l4570 2606  
                         l4554 259E                           l4618 3484                           l4722 254E  
                         l4714 2532                           l4706 24E4                           l3586 21EE  
                         l3578 219E                           l3498 1F32                           l3746 2F5A  
                         l3738 2EE8                           l3770 2BDC                           l3762 2B66  
                         l3754 2B0A                           l3690 1D24                           l3682 1CEC  
                         l3674 1C60                           l3666 1C0C                           l3658 1BC6  
                         l3834 3190                           l3826 315E                           l3818 3134  
                         l3842 2222                           l3930 1246                           l3922 1142  
                         l3914 1078                           l3906 0F92                           l4650 28FC  
                         l4642 2892                           l4730 2CAC                           l2964 2C7C  
                         l2956 2C56                           l2948 2C32                           l2980 2D76  
                         l4476 3408                           l4492 3050                           l4484 300E  
                         l4580 264E                           l4572 2616                           l4564 25C8  
                         l4556 25AC                           l4724 2566                           l4716 2548  
                         l4708 24E6                           l3588 21FC                           l3748 2F60  
                         l3764 2B78                           l3756 2B1A                           l3692 1D28  
                         l3684 1CF6                           l3676 1C8A                           l3668 1C1C  
                         l3780 2A00                           l3836 3192                           l3828 316C  
                         l3860 22E8                           l3852 22A0                           l3844 2230  
                         l3940 1406                           l3932 125A                           l3924 117A  
                         l3916 10AA                           l3908 0FDC                           l4628 35DE  
                         l4660 295C                           l4652 2912                           l4644 28BA  
                         l4740 2CC6                           l4732 2CB0                           l2958 2C6C  
                         l2966 2C82                           l2990 2DAA                           l2982 2D7A  
                         l2974 2D5C                           l4478 3414                           l4494 3060  
                         l4486 301E                           l4582 266E                           l4574 262A  
                         l4558 25B0                           l4718 254A                           l3766 2B86  
                         l3758 2B48                           l3694 1D36                           l3686 1D04  
                         l3678 1CC0                           l3790 2A4E                           l3782 2A2A  
                         l3774 29D6                           l3838 3198                           l3870 2368  
                         l3862 22F4                           l3854 22A8                           l3846 2276  
                         l3942 1438                           l3934 128C                           l3926 11AC  
                         l3918 10DE                           l4670 29A0                           l4662 2970  
                         l4654 2918                           l4646 28CE                           l4638 287A  
                         l4750 2CE6                           l4742 2CCA                           l4734 2CB0  
                         l4726 2CA4                           l2968 2C92                           l2992 2DB2  
                         l2984 2D88                           l2976 2D60                           l4496 3064  
                         l4488 302E                           l4592 26C4                           l4584 268E  
                         l4576 263A                           l4840 25F8                           l4568 25D0  
                         l4680 23E2                           l3768 2BD6                           l3696 1D64  
                         l3688 1D16                           l3784 2A2C                           l3776 29EC  
                         l3880 23B0                           l3872 236A                           l3864 2330  
                         l3856 22B4                           l3848 228C                           l3944 14F8  
                         l3936 1316                           l3928 11E0                           l3952 31A8  
                         l4672 29B8                           l4664 2978                           l4656 2940  
                         l4648 28D4                           l4760 2D0A                           l4752 2CEA  
                         l4744 2CD2                           l4736 2CBC                           l4728 2CA8  
                         l2994 2DC0                           l2986 2D90                           l2978 2D6E  
                         l4498 3092                           l4586 26A6                           l4578 2644  
                         l4690 243E                           l4682 23FA                           l3890 3556  
                         l3786 2A3C                           l3882 23B2                           l3874 236E  
                         l3866 233C                           l3858 22E6                           l3946 152C  
                         l3938 1348                           l4674 29BE                           l4666 2980  
                         l4658 2956                           l4770 2D14                           l4762 2D0C  
                         l4754 2CEE                           l4746 2CDA                           l4738 2CC2  
                         l2996 2DD6                           l2988 2DA2                           l4588 26B0  
                         l4596 26D0                           l4692 2456                           l4684 2412  
                         l4676 23C4                           l3892 3558                           l3796 2A66  
                         l3788 2A40                           l3876 2392                           l3868 234A  
                         l3948 153A                           l4668 2994                           l4780 2D20  
                         l4772 2D16                           l4764 2D0E                           l4756 2D06  
                         l4748 2CE2                           l2998 2DDE                           l4694 246E  
                         l4686 2424                           l4678 23CA                           l3894 355A  
                         l3886 3546                           l3798 2A70                           l3878 23A2  
                         l4790 2D42                           l4782 2D22                           l4774 2D18  
                         l4766 2D10                           l4758 2D08                           l4696 2484  
                         l4688 2426                           l3896 355C                           l3888 3550  
                         l4792 2D44                           l4784 2D24                           l4776 2D1A  
                         l4768 2D12                           l4698 2486                           l3898 35C0  
                         l4794 2D48                           l4786 2D3E                           l4778 2D1C  
                         l4796 2D50                           l4788 2D40                           STR_1 0EB4  
                         STR_2 0EA1                           STR_3 0ED6                           STR_4 0EC5  
                         STR_5 0E74                           STR_6 0EF3                           STR_7 0E23  
                         STR_8 0EF3                           STR_9 0E40                           u2100 2C0C  
                         u2101 2C08                           u2110 2C32                           u2111 2C2E  
                         u2120 2C50                           u2200 2DFA                           u2040 2F74  
                         u3000 2030                           u2121 2C4C                           u2201 2DF6  
                         u2041 2F70                           u3001 202C                           u2130 2C6C  
                         u2050 2F84                           u3010 205A                           u2131 2C68  
                         u2051 2F80                           u3011 2056                           u2140 2C92  
                         u2060 2FAA                           u3100 2156                           u3020 207E  
                         u2141 2C8E                           u2061 2FA6                           u3101 2152  
                         u3021 207A                           u2150 2D6E                           u2070 2FDC  
                         u3110 219E                           u3030 2094                           u2151 2D6A  
                         u2071 2FD8                           u3111 219A                           u3031 2090  
                         u2160 2D88                           u3120 21CE                           u3040 20B2  
                         u3200 1B20                   _BAUD4CONbits 0EE9                           u2161 2D84  
                         u3121 21CA                           u3041 20AE                           u3201 1B1C  
                         u2090 2BF2                           u2170 2DA2                           u2250 34BE  
                         u3130 21FC                           u3050 20D2                           u3210 1B30  
                         u2091 2BEE                           u2171 2D9E                           u2251 34BA  
                         u3131 21F8                           u3051 20CE                           u3211 1B2C  
                         u2180 2DC0                           u4100 270C                           u3060 20E4  
                         u3300 1DF0                           u3220 1CAA                           u3140 1A66  
                         u2500 15C8                           u2181 2DBC                           u4101 2706  
                         u3061 20E0                           u3301 1DEC                           u3141 1A62  
                         u2501 15C4                           u2190 2DD6                           u4110 270E  
                         u3070 2112                           u3310 1E1E                           u3230 1D04  
                         u3150 1A78                           u2510 160A                           u2191 2DD2  
                         u3071 210E                           u3311 1E1A                           u3231 1D00  
                         u3151 1A74                           u2511 1606                           u4120 2728  
                         u2360 2E3A                           u4200 2596                           u3080 2128  
                         u3400 2BD6                           u3320 1E58                           u3240 1D24  
                         u3160 1A88                           u2600 173C                           u2520 1620  
                         u4121 2724                           u2361 2E36                           u4201 2592  
                         u3081 2124                           u3401 2BD2                           u3321 1E54  
                         u3241 1D20                           u3225 1CA0                           u3161 1A84  
                         u2601 1738                           u2521 161C                           u2450 33F0  
                         u4050 3446                           u4130 273E                           u2370 2EB0  
                         u4210 2616                           u3090 213C                           u3330 2EE8  
                         u3250 1D36                           u3170 1AC8                           u2610 175A  
                         u2530 1632                           u3410 29EC                           _T2PR 0FBC  
                         u2451 33E8                           u4051 3442                           u4131 273A  
                         u2371 2EAC                           u4211 2612                           u3091 2138  
                         u3331 2EE4                           u3251 1D32                           u3171 1AC4  
                         u2611 1756                           u2531 162E                           u3411 29E8  
                         u2380 3580                           u4060 301E                           u4140 27E0  
                         u4220 263A                           u3340 2F26                           u3260 1D64  
                         u3180 1ADA                           u2700 18AA                           u2620 177A  
                         u2540 1642                           u3420 2A20                           u3500 3188  
                         u4300 2912                           u2381 357C                           u4061 301A  
                         u4141 27DC                           u4221 2636                           u3341 2F22  
                         u3261 1D60                           u3181 1AD6                           u2701 18A6  
                         u2621 1776                           u2541 163E                           u3501 3184  
                         u4301 290E                           u2390 3596                           u2470 3646  
                         u4070 303C                           u4150 27F2                           u4230 266E  
                         u3350 2F5A                           u3270 1D7A                           u3190 1AEA  
                         u2710 18BA                           u2630 1788                           u2550 167E  
                         u3430 2A4E                           u3510 2222                           u4310 2932  
                         u2391 3592                           u2471 3642                           u4071 3038  
                         u4151 27EE                           u4231 266A                           u3351 2F56  
                         u3271 1D76                           u3191 1AE6                           u2711 18B6  
                         u2631 1784                           u2551 167A                           u3431 2A4A  
                         u3511 221E                           u4311 292A                           u4080 3082  
                         u4160 2802                           u4240 268E                           u3360 2B0A  
                         u3280 1D8E                           u2800 198E                           u2720 18E6  
                         u2640 1798                           u2560 168C                           u2480 15A6  
                         u3440 2A62                           u3600 23B0                           u3520 2230  
                         u4320 2956                           u4081 307E                           u4161 27FE  
                         u4241 268A                           u3361 2B06                           u3281 1D8A  
                         u2801 198A                           u2721 18E2                           u2641 1794  
                         u2561 1688                           u2481 15A2                           u3441 2A5E  
                         u3425 2A16                           u3601 23AC                           u3521 222C  
                         u4321 2952                           u4090 3092                           u4170 281C  
                         u4250 33BC                           u3370 2B48                           u3290 1DA8  
                         u2810 19C8                           u2730 18F6                           u2650 17CA  
                         u2570 16FA                           u2490 15B8                           u3450 2A8A  
                         u3530 228C                           u3610 100E                           u4330 29D4  
                         u4091 308E                           u4171 2818                           u4251 33B8  
                         u3371 2B44                           u3291 1DA4                           u2811 19C4  
                         u2731 18F2                           u2651 17C6                           u2571 16F6  
                         u2491 15B4                           u3451 2A86                           u3531 2288  
                         u3611 100A                           u4331 29D0                           u2468 33F2  
                         u4180 282C                           u4340 23F8                           u3380 2B66  
                         u2820 19DA                           u2740 1912                           u2660 17D8  
                         u2580 1712                           u3460 2AAA                           u3540 22E2  
                         u3700 1348                           u3620 1040                           u4260 288C  
                         u4181 2828                           u4341 23F4                           u3381 2B62  
                         u2821 19D6                           u2741 190E                           u2661 17D4  
                         u2581 170C                           u3461 2AA6                           u3541 22DE  
                         u3701 1344                           u3621 103C                           u4261 2888  
                         u4190 283C                           u4350 2454                           u2910 1E90  
                         u3390 2B86                           u2830 19EA                           u2750 1922  
                         u2670 17F6                           u2590 1714                           u3470 2ABA  
                         u3550 232C                           u3710 1406                           u3630 10AA  
                         u4318 2936                           u4270 28AC                           u4191 2838  
                         u4351 2450                           u2911 1E8C                           u3391 2B82  
                         u2831 19E6                           u2751 191E                           u2671 17F2  
                         u3471 2AB6                           u3551 2328                           u3711 1402  
                         u3631 10A6                           u4407 29AC                           u4271 28A4  
                         u4360 24B4                           u2920 1EA2                           u2840 1A0A  
                         u2760 1934                           u2680 182E                           u3480 314E  
                         u3560 234A                           u3720 1438                           u3640 1110  
                         u4280 28CE                           u4361 24B0                           u4417 345C  
                         u2921 1E9E                           u2841 1A06                           u2761 1930  
                         u2681 182A                           u3481 314A                           u3561 2346  
                         u3721 1434                           u3641 110C                           u4281 28CA  
                         u4370 2514                           u2930 1EB2                           u2850 1A1C  
                         u2770 194A                           u2690 1874                           u3490 316C  
                         u3570 235A                           u3730 153A                           u3650 1142  
                         u4290 28EE                           u4371 2510                           u4427 2404  
                         u2931 1EAE                           u2851 1A18                           u2771 1946  
                         u2691 1870                           u3491 3168                           u3571 2356  
                         u3731 1536                           u3651 113E                           u4291 28E6  
                         u2940 1EF6                           u2860 1A38                           u2780 1960  
                         u3580 2368                           u3660 11AC                           u4437 2460  
                         u2941 1EF2                           u2861 1A34                           u2781 195C  
                         u3581 2364                           u3661 11A8                           u2950 1F08  
                         u2790 1974                           u3590 23A2                           u3670 1246  
                         u4278 28B0                           u4447 24C0                           u2951 1F04  
                         u2791 1970                           u3591 239E                           u3671 1242  
                         u2880 3514                           u2960 1F18                           u3680 128C  
                         u2881 3510                           u4457 2524                           u2961 1F14  
                         u3681 1288                           u2970 1F58                           u3690 1316  
                         u4298 28F2                           u4467 34F8                           u2971 1F54  
                         u3691 1312                           u2980 1F98                           u2981 1F94  
                         u4397 2D30                           u2990 200E                           u2991 200A  
                         abs@a 0007                           _dbuf 0164                           _main 2CA4  
                         _dtoa 26F8           convert_rgb2hue@cCurr 0033                           _prec 00CE  
                         _test 2870                           pad@i 0015                           pad@p 0012  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           prodh 0FF4  
                         prodl 0FF3                           start 0000               __end_of_ADC_init 3634  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 324E                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0014                  ___fltol@sign1 0009  
              __end_of___fladd 1A4C                          ?_main 0001                          ?_dtoa 0017  
                        _ADPCH 0F5F                __end_of___fldiv 2210                __end_of___awdiv 2CA4  
                        STR_10 0EF3                          STR_11 0E01                          STR_12 0EF3  
                        STR_13 0E5B                          STR_14 0EF3                          STR_15 0E8C  
                        STR_16 0EE7                __end_of___awmod 2E0C                __end_of___flmul 1E76  
                        ?_test 0001                __end_of___flsub 3384                __end_of___fltol 2ADC  
              ___awdiv@divisor 0003                __end_of___lwdiv 31A8                ___awdiv@counter 0005  
            ??_convert_rgb2hue 0034                   vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 364C  
   __end_of_I2C_2_Master_Start 366C     __end_of_I2C_2_Master_Write 3658                          _flags 00D0  
          read_prec_or_width@c 0009            read_prec_or_width@n 000A                          _fputc 2F64  
                        _fputs 3408                          pad@fp 000F                          _width 00CC  
                        _putch 3676                          dtoa@d 0018                          dtoa@i 0020  
                        dtoa@p 001C                          dtoa@s 001F                          dtoa@w 001D  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 34B0  
      __end_of_color_read_Blue 333E          _I2C_2_Master_RepStart 366C                ?_color_read_Red 0005  
              __initialization 3516                   __end_of_main 2D5C                   __end_of_dtoa 2870  
                 __end_of_test 29D6               ??_reading_values 000D                         ??_main 00CA  
                       ??_dtoa 001A                         ??_test 0092                  __activetblptr 0003  
   __end_of_read_prec_or_width 2EBA                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         _RG6PPS 0E88  
                vfpfcnvrt@done 002B       __end_of_color_click_init 347C                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xxtofl 23C4                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 0030                         ___flge 2ADC                         ___fleq 2EBA  
                    ??___fladd 0009                         ___wmul 3598                      ??___fldiv 0021  
                    ??___awdiv 0005                      ??___awmod 0005                      ??___flmul 0009  
                    ??___flsub 0019                      ??___fltol 0005                      ??___lwdiv 0005  
         read_prec_or_width@ap 0008                         clear_0 352E                         clear_1 353A  
             ___awdiv@quotient 0007                ___awmod@divisor 0003                         _motorL 00DF  
                       _motorR 00D6                         isa$std 0001                ___awmod@counter 0005  
           send2USART@hue_char 0060                         pad@buf 0010                         dtoa@fp 0017  
                       fputc@c 0001                         fputs@c 000C                         fputs@i 000D  
                       fputs@s 0009                   __mediumconst 0000        calibration_routine@cCal 0044  
                       tblptrh 0FF7                         tblptrl 0FF6                         tblptru 0FF8  
                    ?_ADC_init 0001               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 33C6              ??_initDCmotorsPWM 0003                      ??_sprintf 0037  
                   ___flge@ff1 0001                     ___flge@ff2 0005                   ___xxtofl@arg 0012  
                 ___xxtofl@exp 0011                   ___xxtofl@val 0008                     ___fleq@ff1 0001  
                   ___fleq@ff2 0005                     __accesstop 0060        __end_of__initialization 3540  
     __end_of_color_read_Clear 32EE       __end_of_color_read_Green 329E         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                   __pidataBANK0 3678                  __end_of_fputc 300E  
                __end_of_fputs 3448                  __end_of_putch 3678                     ??_ADC_init 0001  
                      ??_fputc 0004                        ??_fputs 000C                        ??_putch 0001  
                   __pbssBANK0 00CC                     __pbssBANK1 0100              _color_writetoaddr 35BE  
                 _T2CLKCONbits 0FBF                _convert_rgb2hue 0EF6                        ?___flge 0001  
                      ?___fleq 0001             ?_color_writetoaddr 0003                        ?___wmul 0001  
          ??_color_writetoaddr 0004                      ?___xxtofl 0008            _convert_rgb2hue$304 0034  
          _convert_rgb2hue$305 0038            _convert_rgb2hue$306 003C            _convert_rgb2hue$307 0040  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 35DE                      _ADREFbits 0F58             _I2C_2_Master_Start 3662  
                   _initUSART4 35FC             _I2C_2_Master_Write 364C                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 158C                        ___fldiv 1E76                        ___awdiv 2BE0  
                      ___awmod 2D5C                        ___flmul 1A4C                        ___flsub 333E  
                      ___fltol 29D6            ?_I2C_2_Master_Start 0001                        ___lwdiv 3134  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D                   __psmallconst 0E00  
                      __pcinit 3516                        __ramtop 0E00                     _send2USART 35DE  
                      __ptext0 2CA4                        __ptext1 2870                        __ptext2 35DE  
                      __ptext3 31A8                        __ptext4 0EF6                        __ptext5 2210  
                      __ptext6 3134                        __ptext7 29D6                        __ptext8 333E  
                      __ptext9 158C                      _T2CONbits 0FBD          read_prec_or_width@fmt 0007  
                   ??___xxtofl 000C               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 00D5                        _sprintf 347C           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 3540                        fputc@fp 0003  
      __end_of_convert_rgb2hue 158C                        fputs@fp 000B              ?_color_click_init 0001  
           _read_prec_or_width 2E0C             ??_color_click_init 0005               _colorCalibration 00F0  
                      test@hue 00C6              __end_of_vfpfcnvrt 26F8                        postdec2 0FDD  
          ?_read_prec_or_width 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0027                     ??_vfprintf 0030  
                 _colorCurrent 00E8                _initDCmotorsPWM 30A4                      _PORTFbits 0F8E  
                  ___fladd@grs 0010                  ___xxtofl@sign 0010                      _TRISAbits 0F81  
                    _TRISCbits 0F83                      _TRISDbits 0F84                      _TRISEbits 0F85  
                    _TRISFbits 0F86                      _TRISGbits 0F87                      _TRISHbits 0F88  
             convert_rgb2hue@b 005C           ??_read_prec_or_width 0009               convert_rgb2hue@g 0058  
                  ___fldiv@grs 002C               convert_rgb2hue@r 0054                    ___fldiv@rem 0025  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ___flmul@grs 000E  
                  _CCP1CONbits 0FAB            _calibration_routine 23C4              ?_color_read_Clear 0005  
                 _EUSART4RXbuf 0150                   _EUSART4TXbuf 0100                    _CCP2CONbits 0FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 0F26                    ?_initUSART4 0001  
                  _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007  
           ??_color_read_Green 0007                 __end_of___flge 2BE0                 __end_of___fleq 2F64  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 35BE                    ?_send2USART 0044           ?_calibration_routine 0044  
          color_read_Clear@tmp 000A            start_initialization 3516   calibration_routine@cal_state 0047  
                  __end_of_abs 34E4                    __end_of_pad 30A4                  _TxBufWriteCnt 00D3  
             ?_convert_rgb2hue 0032            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3134  
                  vfprintf@fmt 002E                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                    __pdataBANK0 00F8          ??_calibration_routine 0045  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001D  
                    ___fldiv@b 0019                      ___flmul@a 0005                      ___flmul@b 0001  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___lwdiv@dividend 0001                      _dtoa$2602 001A                       ?___fladd 0001  
                     ?___fldiv 0019                       ?___awdiv 0001                       ?___awmod 0001  
                     ?___flmul 0001                       ?___flsub 0011                       ?___fltol 0001  
                     ?___lwdiv 0001                   _readingIndex 00D1           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00              _I2C_2_Master_Idle 3570  
            _I2C_2_Master_Init 3546              _I2C_2_Master_Read 33C6              _I2C_2_Master_Stop 3658  
                 _RxBufReadCnt 00D4                       _ADC_init 361A             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 0005       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0031  
            _sendStringSerial4 34E4            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80             ?_sendStringSerial4 0002                       _PIE4bits 0E2D  
                     _PIR4bits 0E37            reading_values@cCurr 000C               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0003  
                     _SSP2STAT 0ED8                      _vfpfcnvrt 2570                     _ADCON0bits 0F60  
    __end_of_I2C_2_Master_Idle 3598      __end_of_I2C_2_Master_Init 3570      __end_of_I2C_2_Master_Read 3408  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 3662    I2C_2_Master_Write@data_byte 0002  
                  _ldrReadings 013C              ??_color_read_Blue 0007                   _TxBufReadCnt 00D2  
               _reading_values 31A8      __end_of_sendStringSerial4 3516  __end_of_I2C_2_Master_RepStart 3676  
           color_read_Blue@tmp 000A                   ??_initUSART4 0001                       __Hrparam 0000  
                   vfprintf@ap 002F                       __Lrparam 0000                     vfprintf@fp 002D  
                   ?_vfpfcnvrt 0022                   ??_send2USART 0046                     _ANSELDbits 0EA7  
                   _ANSELFbits 0EB4                       _dataFlag 00F8                     sprintf@fmt 0032  
                     ___xxtofl 2210         __end_of_reading_values 31FE                  test@led_state 0094  
              ___lwdiv@divisor 0003             __end_of_initUSART4 361A                ___lwdiv@counter 0007  
                     __ptext10 1A4C                       __ptext11 2ADC                       __ptext20 347C  
                     __ptext12 2EBA                       __ptext21 3384                       __ptext13 1E76  
                     __ptext30 34B0                       __ptext22 2570                       __ptext14 35FC  
                     __ptext31 2D5C                       __ptext23 2E0C                       __ptext15 30A4  
                     __ptext40 3658                       __ptext32 2BE0                       __ptext24 3598  
                     __ptext16 3448                       __ptext41 3662                       __ptext33 34E4  
                     __ptext25 26F8                       __ptext17 35BE                       __ptext42 366C  
                     __ptext34 3634                       __ptext26 300E                       __ptext18 3546  
                     __ptext43 33C6                       __ptext35 31FE                       __ptext27 3408  
                     __ptext19 23C4                       __ptext44 3570                       __ptext36 324E  
                     __ptext28 2F64                       __ptext45 361A                       __ptext37 329E  
                     __ptext29 3676                       __ptext38 32EE                       __ptext39 364C  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA             __end_of_send2USART 35FC  
                    test@combo 00C8                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     _vfprintf 3384                ?_reading_values 000C                      sprintf@ap 0037  
  __end_of_calibration_routine 2570                  send2USART@hue 0044                    ??_vfpfcnvrt 0025  
             _color_click_init 3448                       sprintf@f 0038                       sprintf@s 0031  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 3634                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
