

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Feb 29 12:10:39 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 21/07/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001A4C                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _dataFlag
    90   001A4C  01                 	db	1
    91   000000                     _TX4REG	set	3812
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _SSP2CON2bits	set	3802
    95   000000                     _RX4PPS	set	3605
    96   000000                     _SSP2CLKPPS	set	3612
    97   000000                     _SSP2DATPPS	set	3613
    98   000000                     _ANSELDbits	set	3751
    99   000000                     _ANSELFbits	set	3764
   100   000000                     _TRISFbits	set	3974
   101   000000                     _SSP2BUF	set	3797
   102   000000                     _SSP2ADD	set	3798
   103   000000                     _SSP2CON1bits	set	3801
   104   000000                     _ADREFbits	set	3928
   105   000000                     _ADPCH	set	3935
   106   000000                     _ADRESH	set	3940
   107   000000                     _ADCON0bits	set	3936
   108   000000                     _LATDbits	set	3964
   109   000000                     _TRISDbits	set	3972
   110   000000                     _RC4REG	set	3811
   111   000000                     _SP4BRGL	set	3813
   112   000000                     _TX4STAbits	set	3816
   113   000000                     _BAUD4CONbits	set	3817
   114   000000                     _SSP2CON2	set	3802
   115   000000                     _SSP2STAT	set	3800
   116   000000                     _PIE4bits	set	3629
   117   000000                     _PIR4bits	set	3639
   118   000000                     _RC0PPS	set	3682
   119   000000                     _RD5PPS	set	3695
   120   000000                     _RD6PPS	set	3696
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     STR_4:
   127   000E01  56                 	db	86	;'V'
   128   000E02  6F                 	db	111	;'o'
   129   000E03  6C                 	db	108	;'l'
   130   000E04  74                 	db	116	;'t'
   131   000E05  61                 	db	97	;'a'
   132   000E06  67                 	db	103	;'g'
   133   000E07  65                 	db	101	;'e'
   134   000E08  20                 	db	32
   135   000E09  3D                 	db	61	;'='
   136   000E0A  20                 	db	32
   137   000E0B  25                 	db	37
   138   000E0C  64                 	db	100	;'d'
   139   000E0D  2E                 	db	46
   140   000E0E  25                 	db	37
   141   000E0F  30                 	db	48	;'0'
   142   000E10  32                 	db	50	;'2'
   143   000E11  64                 	db	100	;'d'
   144   000E12  00                 	db	0
   145   000E13                     STR_3:
   146   000E13  47                 	db	71	;'G'
   147   000E14  72                 	db	114	;'r'
   148   000E15  65                 	db	101	;'e'
   149   000E16  65                 	db	101	;'e'
   150   000E17  6E                 	db	110	;'n'
   151   000E18  3D                 	db	61	;'='
   152   000E19  00                 	db	0
   153   000E1A                     STR_2:
   154   000E1A  42                 	db	66	;'B'
   155   000E1B  6C                 	db	108	;'l'
   156   000E1C  75                 	db	117	;'u'
   157   000E1D  65                 	db	101	;'e'
   158   000E1E  3D                 	db	61	;'='
   159   000E1F  00                 	db	0
   160   000E20                     STR_1:
   161   000E20  52                 	db	82	;'R'
   162   000E21  65                 	db	101	;'e'
   163   000E22  64                 	db	100	;'d'
   164   000E23  3D                 	db	61	;'='
   165   000E24  00                 	db	0
   166   000E25  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   0018D8                     __pcinit:
   172                           	callstack 0
   173   0018D8                     start_initialization:
   174                           	callstack 0
   175   0018D8                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to COMRAM (1 bytes)
   179                           ; load TBLPTR registers with __pidataCOMRAM
   180   0018D8  0E4C               	movlw	low __pidataCOMRAM
   181   0018DA  6EF6               	movwf	tblptrl,c
   182   0018DC  0E1A               	movlw	high __pidataCOMRAM
   183   0018DE  6EF7               	movwf	tblptrh,c
   184   0018E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   185   0018E2  6EF8               	movwf	tblptru,c
   186   0018E4  0009               	tblrd		*+	;fetch initializer
   187   0018E6  CFF5 F057          	movff	tablat,__pdataCOMRAM
   188                           
   189                           ; Clear objects allocated to BANK0 (132 bytes)
   190   0018EA  EE00  F060         	lfsr	0,__pbssBANK0
   191   0018EE  0E84               	movlw	132
   192   0018F0                     clear_0:
   193   0018F0  6AEE               	clrf	postinc0,c
   194   0018F2  06E8               	decf	wreg,f,c
   195   0018F4  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (10 bytes)
   198   0018F6  EE00  F04D         	lfsr	0,__pbssCOMRAM
   199   0018FA  0E0A               	movlw	10
   200   0018FC                     clear_1:
   201   0018FC  6AEE               	clrf	postinc0,c
   202   0018FE  06E8               	decf	wreg,f,c
   203   001900  E1FD               	bnz	clear_1
   204   001902                     end_of_initialization:
   205                           	callstack 0
   206   001902                     __end_of__initialization:
   207                           	callstack 0
   208   001902  0100               	movlb	0
   209   001904  EF88  F008         	goto	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMRAM
   212   00004D                     __pbssCOMRAM:
   213                           	callstack 0
   214   00004D                     _width:
   215                           	callstack 0
   216   00004D                     	ds	2
   217   00004F                     _prec:
   218                           	callstack 0
   219   00004F                     	ds	2
   220   000051                     _flags:
   221                           	callstack 0
   222   000051                     	ds	1
   223   000052                     _readingIndex:
   224                           	callstack 0
   225   000052                     	ds	1
   226   000053                     _TxBufReadCnt:
   227                           	callstack 0
   228   000053                     	ds	1
   229   000054                     _TxBufWriteCnt:
   230                           	callstack 0
   231   000054                     	ds	1
   232   000055                     _RxBufReadCnt:
   233                           	callstack 0
   234   000055                     	ds	1
   235   000056                     _RxBufWriteCnt:
   236                           	callstack 0
   237   000056                     	ds	1
   238                           
   239                           	psect	dataCOMRAM
   240   000057                     __pdataCOMRAM:
   241                           	callstack 0
   242   000057                     _dataFlag:
   243                           	callstack 0
   244   000057                     	ds	1
   245                           
   246                           	psect	bssBANK0
   247   000060                     __pbssBANK0:
   248                           	callstack 0
   249   000060                     _EUSART4TXbuf:
   250                           	callstack 0
   251   000060                     	ds	60
   252   00009C                     _ldrReadings:
   253                           	callstack 0
   254   00009C                     	ds	20
   255   0000B0                     _EUSART4RXbuf:
   256                           	callstack 0
   257   0000B0                     	ds	20
   258   0000C4                     _dbuf:
   259                           	callstack 0
   260   0000C4                     	ds	32
   261                           
   262                           	psect	cstackBANK1
   263   000100                     __pcstackBANK1:
   264                           	callstack 0
   265   000100                     main@buf:
   266                           	callstack 0
   267                           
   268                           ; 50 bytes @ 0x0
   269   000100                     	ds	50
   270   000132                     main@red_char:
   271                           	callstack 0
   272                           
   273                           ; 50 bytes @ 0x32
   274   000132                     	ds	50
   275   000164                     main@blue_char:
   276                           	callstack 0
   277                           
   278                           ; 50 bytes @ 0x64
   279   000164                     	ds	50
   280   000196                     main@green_char:
   281                           	callstack 0
   282                           
   283                           ; 50 bytes @ 0x96
   284   000196                     	ds	50
   285   0001C8                     main@battery_level:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0xC8
   289   0001C8                     	ds	2
   290   0001CA                     main@red:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xCA
   294   0001CA                     	ds	2
   295   0001CC                     main@blue:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0xCC
   299   0001CC                     	ds	2
   300   0001CE                     main@green:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0xCE
   304   0001CE                     	ds	2
   305                           
   306                           	psect	cstackCOMRAM
   307   000001                     __pcstackCOMRAM:
   308                           	callstack 0
   309   000001                     ??_I2C_2_Master_Idle:
   310   000001                     ?_ADC_getval:
   311                           	callstack 0
   312   000001                     ?___wmul:
   313                           	callstack 0
   314   000001                     ?___awdiv:
   315                           	callstack 0
   316   000001                     ?___awmod:
   317                           	callstack 0
   318   000001                     sendCharSerial4@charToSend:
   319                           	callstack 0
   320   000001                     ___wmul@multiplier:
   321                           	callstack 0
   322   000001                     ___awdiv@dividend:
   323                           	callstack 0
   324   000001                     ___awmod@dividend:
   325                           	callstack 0
   326   000001                     fputc@c:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330   000001                     	ds	1
   331   000002                     ??_I2C_2_Master_Read:
   332   000002                     I2C_2_Master_Write@data_byte:
   333                           	callstack 0
   334   000002                     sendStringSerial4@string:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x1
   338   000002                     	ds	1
   339   000003                     color_writetoaddr@value:
   340                           	callstack 0
   341   000003                     I2C_2_Master_Read@ack:
   342                           	callstack 0
   343   000003                     fputc@fp:
   344                           	callstack 0
   345   000003                     ADC_getval@tmpval:
   346                           	callstack 0
   347   000003                     ___wmul@multiplicand:
   348                           	callstack 0
   349   000003                     ___awdiv@divisor:
   350                           	callstack 0
   351   000003                     ___awmod@divisor:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355   000003                     	ds	1
   356   000004                     ??_fputc:
   357   000004                     color_writetoaddr@address:
   358                           	callstack 0
   359   000004                     I2C_2_Master_Read@tmp:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x3
   363   000004                     	ds	1
   364   000005                     ??_color_click_init:
   365   000005                     ?_color_read_Red:
   366                           	callstack 0
   367   000005                     ?_color_read_Green:
   368                           	callstack 0
   369   000005                     ?_color_read_Blue:
   370                           	callstack 0
   371   000005                     ___awdiv@counter:
   372                           	callstack 0
   373   000005                     ___awmod@counter:
   374                           	callstack 0
   375   000005                     ___wmul@product:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x4
   379   000005                     	ds	1
   380   000006                     ___awdiv@sign:
   381                           	callstack 0
   382   000006                     ___awmod@sign:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x5
   386   000006                     	ds	1
   387   000007                     ??_color_read_Red:
   388   000007                     ??_color_read_Green:
   389   000007                     ??_color_read_Blue:
   390   000007                     ?_abs:
   391                           	callstack 0
   392   000007                     ?___lwdiv:
   393                           	callstack 0
   394   000007                     ?_read_prec_or_width:
   395                           	callstack 0
   396   000007                     read_prec_or_width@fmt:
   397                           	callstack 0
   398   000007                     ___awdiv@quotient:
   399                           	callstack 0
   400   000007                     ___lwdiv@dividend:
   401                           	callstack 0
   402   000007                     abs@a:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x6
   406   000007                     	ds	1
   407   000008                     read_prec_or_width@ap:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x7
   411   000008                     	ds	1
   412   000009                     ??_abs:
   413   000009                     read_prec_or_width@c:
   414                           	callstack 0
   415   000009                     fputs@s:
   416                           	callstack 0
   417   000009                     ___lwdiv@divisor:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x8
   421   000009                     	ds	1
   422   00000A                     fputs@fp:
   423                           	callstack 0
   424   00000A                     color_read_Red@tmp:
   425                           	callstack 0
   426   00000A                     color_read_Green@tmp:
   427                           	callstack 0
   428   00000A                     color_read_Blue@tmp:
   429                           	callstack 0
   430   00000A                     read_prec_or_width@n:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x9
   434   00000A                     	ds	1
   435   00000B                     fputs@c:
   436                           	callstack 0
   437   00000B                     ___lwdiv@quotient:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xA
   441   00000B                     	ds	1
   442   00000C                     fputs@i:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xB
   446   00000C                     	ds	1
   447   00000D                     ___lwdiv@counter:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xC
   451   00000D                     	ds	1
   452   00000E                     pad@fp:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0xD
   456   00000E                     	ds	1
   457   00000F                     pad@buf:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0xE
   461   00000F                     	ds	1
   462   000010                     pad@p:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xF
   466   000010                     	ds	2
   467   000012                     ??_pad:
   468                           
   469                           ; 1 bytes @ 0x11
   470   000012                     	ds	1
   471   000013                     pad@i:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475   000013                     	ds	2
   476   000015                     dtoa@fp:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x14
   480   000015                     	ds	1
   481   000016                     dtoa@d:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x15
   485   000016                     	ds	2
   486   000018                     _dtoa$1244:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x17
   490   000018                     	ds	2
   491   00001A                     dtoa@p:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x19
   495   00001A                     	ds	1
   496   00001B                     dtoa@w:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1A
   500   00001B                     	ds	2
   501   00001D                     dtoa@s:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x1C
   505   00001D                     	ds	1
   506   00001E                     dtoa@i:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x1D
   510   00001E                     	ds	2
   511   000020                     vfpfcnvrt@fp:
   512                           	callstack 0
   513                           
   514                           ; 1 bytes @ 0x1F
   515   000020                     	ds	1
   516   000021                     vfpfcnvrt@fmt:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x20
   520   000021                     	ds	1
   521   000022                     vfpfcnvrt@ap:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x21
   525   000022                     	ds	1
   526   000023                     ??_vfpfcnvrt:
   527                           
   528                           ; 1 bytes @ 0x22
   529   000023                     	ds	2
   530   000025                     vfpfcnvrt@convarg:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x24
   534   000025                     	ds	4
   535   000029                     vfpfcnvrt@done:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x28
   539   000029                     	ds	1
   540   00002A                     vfpfcnvrt@cp:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x29
   544   00002A                     	ds	1
   545   00002B                     ?_vfprintf:
   546                           	callstack 0
   547   00002B                     vfprintf@fp:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x2A
   551   00002B                     	ds	1
   552   00002C                     vfprintf@fmt:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x2B
   556   00002C                     	ds	1
   557   00002D                     vfprintf@ap:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x2C
   561   00002D                     	ds	1
   562   00002E                     vfprintf@cfmt:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x2D
   566   00002E                     	ds	1
   567   00002F                     ?_sprintf:
   568                           	callstack 0
   569   00002F                     sprintf@s:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x2E
   573   00002F                     	ds	2
   574   000031                     sprintf@fmt:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x30
   578   000031                     	ds	5
   579   000036                     sprintf@ap:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x35
   583   000036                     	ds	1
   584   000037                     sprintf@f:
   585                           	callstack 0
   586                           
   587                           ; 12 bytes @ 0x36
   588   000037                     	ds	12
   589   000043                     ADC2String@buf:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x42
   593   000043                     	ds	2
   594   000045                     ADC2String@ADC_val:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x44
   598   000045                     	ds	2
   599   000047                     ??_ADC2String:
   600                           
   601                           ; 1 bytes @ 0x46
   602   000047                     	ds	2
   603   000049                     ADC2String@frac_part:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x48
   607   000049                     	ds	2
   608   00004B                     ADC2String@int_part:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4A
   612   00004B                     	ds	2
   613   00004D                     
   614                           ; 1 bytes @ 0x4C
   615 ;;
   616 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   617 ;;
   618 ;; *************** function _main *****************
   619 ;; Defined at:
   620 ;;		line 26 in file "main.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;  green_char     50  150[BANK1 ] unsigned char [50]
   625 ;;  blue_char      50  100[BANK1 ] unsigned char [50]
   626 ;;  red_char       50   50[BANK1 ] unsigned char [50]
   627 ;;  buf            50    0[BANK1 ] unsigned char [50]
   628 ;;  green           2  206[BANK1 ] unsigned int 
   629 ;;  blue            2  204[BANK1 ] unsigned int 
   630 ;;  red             2  202[BANK1 ] unsigned int 
   631 ;;  battery_leve    2  200[BANK1 ] unsigned int 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Locals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Totals:         0       0     208       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;Total ram usage:      208 bytes
   646 ;; Hardware stack levels required when called: 9
   647 ;; This function calls:
   648 ;;		_ADC2String
   649 ;;		_ADC_getval
   650 ;;		_ADC_init
   651 ;;		_color_click_init
   652 ;;		_color_read_Blue
   653 ;;		_color_read_Green
   654 ;;		_color_read_Red
   655 ;;		_initUSART4
   656 ;;		_sendStringSerial4
   657 ;;		_sprintf
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text0
   664   001110                     __ptext0:
   665                           	callstack 0
   666   001110                     _main:
   667                           	callstack 22
   668   001110                     
   669                           ;main.c: 28:     ADC_init();
   670   001110  ECF7  F00C         	call	_ADC_init	;wreg free
   671   001114                     
   672                           ;main.c: 29:     color_click_init();
   673   001114  EC38  F00C         	call	_color_click_init	;wreg free
   674   001118                     
   675                           ;main.c: 30:     initUSART4();
   676   001118  ECE8  F00C         	call	_initUSART4	;wreg free
   677   00111C                     
   678                           ;main.c: 34:     LATDbits.LATD7=0;
   679   00111C  9E7C               	bcf	124,7,c	;volatile
   680   00111E                     
   681                           ;main.c: 35:     TRISDbits.TRISD7=0;
   682   00111E  9E84               	bcf	132,7,c	;volatile
   683   001120                     l143:
   684                           
   685                           ;main.c: 51:         battery_level = ADC_getval();
   686   001120  EC84  F00C         	call	_ADC_getval	;wreg free
   687   001124  C001  F1C8         	movff	?_ADC_getval,main@battery_level
   688   001128  C002  F1C9         	movff	?_ADC_getval+1,main@battery_level+1
   689                           
   690                           ;main.c: 53:         red = color_read_Red();
   691   00112C  EC26  F00B         	call	_color_read_Red	;wreg free
   692   001130  C005  F1CA         	movff	?_color_read_Red,main@red
   693   001134  C006  F1CB         	movff	?_color_read_Red+1,main@red+1
   694                           
   695                           ;main.c: 54:         blue = color_read_Blue();
   696   001138  EC76  F00B         	call	_color_read_Blue	;wreg free
   697   00113C  C005  F1CC         	movff	?_color_read_Blue,main@blue
   698   001140  C006  F1CD         	movff	?_color_read_Blue+1,main@blue+1
   699                           
   700                           ;main.c: 55:         green = color_read_Green();
   701   001144  EC4E  F00B         	call	_color_read_Green	;wreg free
   702   001148  C005  F1CE         	movff	?_color_read_Green,main@green
   703   00114C  C006  F1CF         	movff	?_color_read_Green+1,main@green+1
   704   001150                     
   705                           ;main.c: 58:         ADC2String(buf, battery_level);
   706   001150  0E00               	movlw	low main@buf
   707   001152  6E43               	movwf	ADC2String@buf^0,c
   708   001154  0E01               	movlw	high main@buf
   709   001156  6E44               	movwf	(ADC2String@buf+1)^0,c
   710   001158  C1C8  F045         	movff	main@battery_level,ADC2String@ADC_val
   711   00115C  C1C9  F046         	movff	main@battery_level+1,ADC2String@ADC_val+1
   712   001160  EC60  F00A         	call	_ADC2String	;wreg free
   713   001164                     
   714                           ;main.c: 59:         sprintf(red_char,"Red=",red);
   715   001164  0E32               	movlw	low main@red_char
   716   001166  6E2F               	movwf	sprintf@s^0,c
   717   001168  0E01               	movlw	high main@red_char
   718   00116A  6E30               	movwf	(sprintf@s+1)^0,c
   719   00116C  0E20               	movlw	low STR_1
   720   00116E  6E31               	movwf	sprintf@fmt^0,c
   721   001170  C1CA  F032         	movff	main@red,?_sprintf+3
   722   001174  C1CB  F033         	movff	main@red+1,?_sprintf+4
   723   001178  ECE0  F00B         	call	_sprintf	;wreg free
   724   00117C                     
   725                           ;main.c: 60:         sprintf(blue_char,"Blue=",blue);
   726   00117C  0E64               	movlw	low main@blue_char
   727   00117E  6E2F               	movwf	sprintf@s^0,c
   728   001180  0E01               	movlw	high main@blue_char
   729   001182  6E30               	movwf	(sprintf@s+1)^0,c
   730   001184  0E1A               	movlw	low STR_2
   731   001186  6E31               	movwf	sprintf@fmt^0,c
   732   001188  C1CC  F032         	movff	main@blue,?_sprintf+3
   733   00118C  C1CD  F033         	movff	main@blue+1,?_sprintf+4
   734   001190  ECE0  F00B         	call	_sprintf	;wreg free
   735   001194                     
   736                           ;main.c: 61:         sprintf(green_char,"Green=",green);
   737   001194  0E96               	movlw	low main@green_char
   738   001196  6E2F               	movwf	sprintf@s^0,c
   739   001198  0E01               	movlw	high main@green_char
   740   00119A  6E30               	movwf	(sprintf@s+1)^0,c
   741   00119C  0E13               	movlw	low STR_3
   742   00119E  6E31               	movwf	sprintf@fmt^0,c
   743   0011A0  C1CE  F032         	movff	main@green,?_sprintf+3
   744   0011A4  C1CF  F033         	movff	main@green+1,?_sprintf+4
   745   0011A8  ECE0  F00B         	call	_sprintf	;wreg free
   746   0011AC                     
   747                           ;main.c: 64:         sendStringSerial4(buf);
   748   0011AC  0E00               	movlw	low main@buf
   749   0011AE  6E02               	movwf	sendStringSerial4@string^0,c
   750   0011B0  0E01               	movlw	high main@buf
   751   0011B2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   752   0011B4  EC1C  F00C         	call	_sendStringSerial4	;wreg free
   753   0011B8                     
   754                           ;main.c: 65:         sendStringSerial4(red_char);
   755   0011B8  0E32               	movlw	low main@red_char
   756   0011BA  6E02               	movwf	sendStringSerial4@string^0,c
   757   0011BC  0E01               	movlw	high main@red_char
   758   0011BE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   759   0011C0  EC1C  F00C         	call	_sendStringSerial4	;wreg free
   760   0011C4                     
   761                           ;main.c: 66:         sendStringSerial4(blue_char);
   762   0011C4  0E64               	movlw	low main@blue_char
   763   0011C6  6E02               	movwf	sendStringSerial4@string^0,c
   764   0011C8  0E01               	movlw	high main@blue_char
   765   0011CA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   766   0011CC  EC1C  F00C         	call	_sendStringSerial4	;wreg free
   767   0011D0                     
   768                           ;main.c: 67:         sendStringSerial4(green_char);
   769   0011D0  0E96               	movlw	low main@green_char
   770   0011D2  6E02               	movwf	sendStringSerial4@string^0,c
   771   0011D4  0E01               	movlw	high main@green_char
   772   0011D6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
   773   0011D8  EC1C  F00C         	call	_sendStringSerial4	;wreg free
   774   0011DC  EF90  F008         	goto	l143
   775   0011E0  EF00  F000         	goto	start
   776   0011E4                     __end_of_main:
   777                           	callstack 0
   778                           
   779 ;; *************** function _sendStringSerial4 *****************
   780 ;; Defined at:
   781 ;;		line 41 in file "serial.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  string          2    1[COMRAM] PTR unsigned char 
   784 ;;		 -> sendAllReadings@buffer(10), main@green_char(50), main@blue_char(50), main@red_char(50), 
   785 ;;		 -> main@buf(50), 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		_sendCharSerial4
   806 ;; This function is called by:
   807 ;;		_main
   808 ;;		_sendAllReadings
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text1
   813   001838                     __ptext1:
   814                           	callstack 0
   815   001838                     _sendStringSerial4:
   816                           	callstack 29
   817   001838                     
   818                           ;serial.c: 44:     while(*string != 0){
   819   001838  EF2B  F00C         	goto	l1998
   820   00183C                     l1992:
   821                           
   822                           ;serial.c: 46:   sendCharSerial4(*string++);
   823   00183C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   824   001840  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   825   001844  50DF               	movf	indf2,w,c
   826   001846  EC04  F00D         	call	_sendCharSerial4
   827   00184A  4A02               	infsnz	sendStringSerial4@string^0,f,c
   828   00184C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
   829   00184E                     
   830                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
   831   00184E  0E6A               	movlw	106
   832   001850                     u1177:
   833   001850  2EE8               	decfsz	wreg,f,c
   834   001852  D7FE               	bra	u1177
   835   001854  D000               	nop2	
   836   001856                     l1998:
   837                           
   838                           ;serial.c: 44:     while(*string != 0){
   839   001856  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
   840   00185A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
   841   00185E  50DF               	movf	indf2,w,c
   842   001860  A4D8               	btfss	status,2,c
   843   001862  EF35  F00C         	goto	u1101
   844   001866  EF37  F00C         	goto	u1100
   845   00186A                     u1101:
   846   00186A  EF1E  F00C         	goto	l1992
   847   00186E                     u1100:
   848   00186E  0012               	return		;funcret
   849   001870                     __end_of_sendStringSerial4:
   850                           	callstack 0
   851                           
   852 ;; *************** function _sendCharSerial4 *****************
   853 ;; Defined at:
   854 ;;		line 35 in file "serial.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  charToSend      1    wreg     unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  charToSend      1    0[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_sendStringSerial4
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text2
   882   001A08                     __ptext2:
   883                           	callstack 0
   884   001A08                     _sendCharSerial4:
   885                           	callstack 29
   886                           
   887                           ;incstack = 0
   888                           ;sendCharSerial4@charToSend stored from wreg
   889   001A08  6E01               	movwf	sendCharSerial4@charToSend^0,c
   890   001A0A                     l206:
   891   001A0A  010E               	movlb	14	; () banked
   892   001A0C  A537               	btfss	55,2,b	;volatile
   893   001A0E  EF0B  F00D         	goto	u1051
   894   001A12  EF0D  F00D         	goto	u1050
   895   001A16                     u1051:
   896   001A16  EF05  F00D         	goto	l206
   897   001A1A                     u1050:
   898   001A1A                     
   899                           ; BSR set to: 14
   900                           ;serial.c: 37:     TX4REG = charToSend;
   901   001A1A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
   902   001A1E                     
   903                           ; BSR set to: 14
   904   001A1E  0012               	return		;funcret
   905   001A20                     __end_of_sendCharSerial4:
   906                           	callstack 0
   907                           
   908 ;; *************** function _initUSART4 *****************
   909 ;; Defined at:
   910 ;;		line 14 in file "serial.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text3
   938   0019D0                     __ptext3:
   939                           	callstack 0
   940   0019D0                     _initUSART4:
   941                           	callstack 30
   942   0019D0                     
   943                           ;serial.c: 15:     RC0PPS = 0x12;
   944   0019D0  0E12               	movlw	18
   945   0019D2  010E               	movlb	14	; () banked
   946   0019D4  6F62               	movwf	98,b	;volatile
   947                           
   948                           ;serial.c: 16:     RX4PPS = 0x11;
   949   0019D6  0E11               	movlw	17
   950   0019D8  6F15               	movwf	21,b	;volatile
   951   0019DA                     
   952                           ; BSR set to: 14
   953                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
   954   0019DA  97E9               	bcf	233,3,b	;volatile
   955   0019DC                     
   956                           ; BSR set to: 14
   957                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
   958   0019DC  95E8               	bcf	232,2,b	;volatile
   959                           
   960                           ;serial.c: 19:     SP4BRGL = 51;
   961   0019DE  0E33               	movlw	51
   962   0019E0  6FE5               	movwf	229,b	;volatile
   963                           
   964                           ;serial.c: 20:     SP4BRGH = 0;
   965   0019E2  0E00               	movlw	0
   966   0019E4  6FE6               	movwf	230,b	;volatile
   967   0019E6                     
   968                           ; BSR set to: 14
   969                           ;serial.c: 22:     RC4STAbits.CREN = 1;
   970   0019E6  89E7               	bsf	231,4,b	;volatile
   971   0019E8                     
   972                           ; BSR set to: 14
   973                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
   974   0019E8  8BE8               	bsf	232,5,b	;volatile
   975   0019EA                     
   976                           ; BSR set to: 14
   977                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
   978   0019EA  8FE7               	bsf	231,7,b	;volatile
   979   0019EC                     
   980                           ; BSR set to: 14
   981   0019EC  0012               	return		;funcret
   982   0019EE                     __end_of_initUSART4:
   983                           	callstack 0
   984                           
   985 ;; *************** function _color_read_Red *****************
   986 ;; Defined at:
   987 ;;		line 29 in file "color.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  tmp             2    9[COMRAM] unsigned int 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  2    4[COMRAM] unsigned int 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1004 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1005 ;;Total ram usage:        7 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 2
  1008 ;; This function calls:
  1009 ;;		_I2C_2_Master_Read
  1010 ;;		_I2C_2_Master_RepStart
  1011 ;;		_I2C_2_Master_Start
  1012 ;;		_I2C_2_Master_Stop
  1013 ;;		_I2C_2_Master_Write
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text4
  1020   00164C                     __ptext4:
  1021                           	callstack 0
  1022   00164C                     _color_read_Red:
  1023                           	callstack 28
  1024   00164C                     
  1025                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  1026   00164C  EC20  F00D         	call	_I2C_2_Master_Start	;wreg free
  1027                           
  1028                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  1029   001650  0E52               	movlw	82
  1030   001652  EC10  F00D         	call	_I2C_2_Master_Write
  1031                           
  1032                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x16);
  1033   001656  0EB6               	movlw	182
  1034   001658  EC10  F00D         	call	_I2C_2_Master_Write
  1035                           
  1036                           ;color.c: 35:  I2C_2_Master_RepStart();
  1037   00165C  EC16  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1038                           
  1039                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  1040   001660  0E53               	movlw	83
  1041   001662  EC10  F00D         	call	_I2C_2_Master_Write
  1042                           
  1043                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  1044   001666  0E01               	movlw	1
  1045   001668  EC9E  F00B         	call	_I2C_2_Master_Read
  1046   00166C  6E07               	movwf	??_color_read_Red^0,c
  1047   00166E  5007               	movf	??_color_read_Red^0,w,c
  1048   001670  6E0A               	movwf	color_read_Red@tmp^0,c
  1049   001672  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1050                           
  1051                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1052   001674  0E00               	movlw	0
  1053   001676  EC9E  F00B         	call	_I2C_2_Master_Read
  1054   00167A  6E07               	movwf	??_color_read_Red^0,c
  1055   00167C  5007               	movf	??_color_read_Red^0,w,c
  1056   00167E  6E09               	movwf	(??_color_read_Red+2)^0,c
  1057   001680  6A08               	clrf	(??_color_read_Red+1)^0,c
  1058   001682  500A               	movf	color_read_Red@tmp^0,w,c
  1059   001684  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1060   001686  6E0A               	movwf	color_read_Red@tmp^0,c
  1061   001688  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1062   00168A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1063   00168C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1064                           
  1065                           ;color.c: 39:  I2C_2_Master_Stop();
  1066   00168E  EC1B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1067   001692                     
  1068                           ;color.c: 40:  return tmp;
  1069   001692  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1070   001696  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1071   00169A  0012               	return		;funcret
  1072   00169C                     __end_of_color_read_Red:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _color_read_Green *****************
  1076 ;; Defined at:
  1077 ;;		line 43 in file "color.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  tmp             2    9[COMRAM] unsigned int 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2    4[COMRAM] unsigned int 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1093 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		_I2C_2_Master_Read
  1100 ;;		_I2C_2_Master_RepStart
  1101 ;;		_I2C_2_Master_Start
  1102 ;;		_I2C_2_Master_Stop
  1103 ;;		_I2C_2_Master_Write
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text5
  1110   00169C                     __ptext5:
  1111                           	callstack 0
  1112   00169C                     _color_read_Green:
  1113                           	callstack 28
  1114   00169C                     
  1115                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  1116   00169C  EC20  F00D         	call	_I2C_2_Master_Start	;wreg free
  1117                           
  1118                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  1119   0016A0  0E52               	movlw	82
  1120   0016A2  EC10  F00D         	call	_I2C_2_Master_Write
  1121                           
  1122                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x18);
  1123   0016A6  0EB8               	movlw	184
  1124   0016A8  EC10  F00D         	call	_I2C_2_Master_Write
  1125                           
  1126                           ;color.c: 49:  I2C_2_Master_RepStart();
  1127   0016AC  EC16  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1128                           
  1129                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  1130   0016B0  0E53               	movlw	83
  1131   0016B2  EC10  F00D         	call	_I2C_2_Master_Write
  1132                           
  1133                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  1134   0016B6  0E01               	movlw	1
  1135   0016B8  EC9E  F00B         	call	_I2C_2_Master_Read
  1136   0016BC  6E07               	movwf	??_color_read_Green^0,c
  1137   0016BE  5007               	movf	??_color_read_Green^0,w,c
  1138   0016C0  6E0A               	movwf	color_read_Green@tmp^0,c
  1139   0016C2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1140                           
  1141                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1142   0016C4  0E00               	movlw	0
  1143   0016C6  EC9E  F00B         	call	_I2C_2_Master_Read
  1144   0016CA  6E07               	movwf	??_color_read_Green^0,c
  1145   0016CC  5007               	movf	??_color_read_Green^0,w,c
  1146   0016CE  6E09               	movwf	(??_color_read_Green+2)^0,c
  1147   0016D0  6A08               	clrf	(??_color_read_Green+1)^0,c
  1148   0016D2  500A               	movf	color_read_Green@tmp^0,w,c
  1149   0016D4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1150   0016D6  6E0A               	movwf	color_read_Green@tmp^0,c
  1151   0016D8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1152   0016DA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1153   0016DC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1154                           
  1155                           ;color.c: 53:  I2C_2_Master_Stop();
  1156   0016DE  EC1B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1157   0016E2                     
  1158                           ;color.c: 54:  return tmp;
  1159   0016E2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1160   0016E6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1161   0016EA  0012               	return		;funcret
  1162   0016EC                     __end_of_color_read_Green:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _color_read_Blue *****************
  1166 ;; Defined at:
  1167 ;;		line 57 in file "color.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  tmp             2    9[COMRAM] unsigned int 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  2    4[COMRAM] unsigned int 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;Total ram usage:        7 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 2
  1188 ;; This function calls:
  1189 ;;		_I2C_2_Master_Read
  1190 ;;		_I2C_2_Master_RepStart
  1191 ;;		_I2C_2_Master_Start
  1192 ;;		_I2C_2_Master_Stop
  1193 ;;		_I2C_2_Master_Write
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text6
  1200   0016EC                     __ptext6:
  1201                           	callstack 0
  1202   0016EC                     _color_read_Blue:
  1203                           	callstack 28
  1204   0016EC                     
  1205                           ;color.c: 59:  unsigned int tmp;;color.c: 60:  I2C_2_Master_Start();
  1206   0016EC  EC20  F00D         	call	_I2C_2_Master_Start	;wreg free
  1207                           
  1208                           ;color.c: 61:  I2C_2_Master_Write(0x52 | 0x00);
  1209   0016F0  0E52               	movlw	82
  1210   0016F2  EC10  F00D         	call	_I2C_2_Master_Write
  1211                           
  1212                           ;color.c: 62:  I2C_2_Master_Write(0xA0 | 0x1A);
  1213   0016F6  0EBA               	movlw	186
  1214   0016F8  EC10  F00D         	call	_I2C_2_Master_Write
  1215                           
  1216                           ;color.c: 63:  I2C_2_Master_RepStart();
  1217   0016FC  EC16  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1218                           
  1219                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x01);
  1220   001700  0E53               	movlw	83
  1221   001702  EC10  F00D         	call	_I2C_2_Master_Write
  1222                           
  1223                           ;color.c: 65:  tmp=I2C_2_Master_Read(1);
  1224   001706  0E01               	movlw	1
  1225   001708  EC9E  F00B         	call	_I2C_2_Master_Read
  1226   00170C  6E07               	movwf	??_color_read_Blue^0,c
  1227   00170E  5007               	movf	??_color_read_Blue^0,w,c
  1228   001710  6E0A               	movwf	color_read_Blue@tmp^0,c
  1229   001712  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1230                           
  1231                           ;color.c: 66:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1232   001714  0E00               	movlw	0
  1233   001716  EC9E  F00B         	call	_I2C_2_Master_Read
  1234   00171A  6E07               	movwf	??_color_read_Blue^0,c
  1235   00171C  5007               	movf	??_color_read_Blue^0,w,c
  1236   00171E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1237   001720  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1238   001722  500A               	movf	color_read_Blue@tmp^0,w,c
  1239   001724  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1240   001726  6E0A               	movwf	color_read_Blue@tmp^0,c
  1241   001728  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1242   00172A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1243   00172C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1244                           
  1245                           ;color.c: 67:  I2C_2_Master_Stop();
  1246   00172E  EC1B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1247   001732                     
  1248                           ;color.c: 68:  return tmp;
  1249   001732  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1250   001736  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1251   00173A  0012               	return		;funcret
  1252   00173C                     __end_of_color_read_Blue:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _I2C_2_Master_RepStart *****************
  1256 ;; Defined at:
  1257 ;;		line 33 in file "i2c.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used: 1
  1277 ;; Hardware stack levels required when called: 1
  1278 ;; This function calls:
  1279 ;;		_I2C_2_Master_Idle
  1280 ;; This function is called by:
  1281 ;;		_color_read_Red
  1282 ;;		_color_read_Green
  1283 ;;		_color_read_Blue
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text7
  1288   001A2C                     __ptext7:
  1289                           	callstack 0
  1290   001A2C                     _I2C_2_Master_RepStart:
  1291                           	callstack 28
  1292   001A2C                     
  1293                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1294   001A2C  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1295   001A30                     
  1296                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1297   001A30  010E               	movlb	14	; () banked
  1298   001A32  83DA               	bsf	218,1,b	;volatile
  1299   001A34                     
  1300                           ; BSR set to: 14
  1301   001A34  0012               	return		;funcret
  1302   001A36                     __end_of_I2C_2_Master_RepStart:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _I2C_2_Master_Read *****************
  1306 ;; Defined at:
  1307 ;;		line 51 in file "i2c.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  ack             1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  ack             1    2[COMRAM] unsigned char 
  1312 ;;  tmp             1    3[COMRAM] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      unsigned char 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:        3 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 1
  1329 ;; This function calls:
  1330 ;;		_I2C_2_Master_Idle
  1331 ;; This function is called by:
  1332 ;;		_color_read_Red
  1333 ;;		_color_read_Green
  1334 ;;		_color_read_Blue
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text8
  1339   00173C                     __ptext8:
  1340                           	callstack 0
  1341   00173C                     _I2C_2_Master_Read:
  1342                           	callstack 28
  1343                           
  1344                           ; BSR set to: 14
  1345                           ;incstack = 0
  1346                           ;I2C_2_Master_Read@ack stored from wreg
  1347   00173C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1348   00173E                     
  1349                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1350   00173E  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1351   001742                     
  1352                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1353   001742  010E               	movlb	14	; () banked
  1354   001744  87DA               	bsf	218,3,b	;volatile
  1355                           
  1356                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1357   001746  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1358   00174A                     
  1359                           ;i2c.c: 57:   tmp = SSP2BUF;
  1360   00174A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1361                           
  1362                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1363   00174E  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1364   001752                     
  1365                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1366   001752  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1367   001754  B4D8               	btfsc	status,2,c
  1368   001756  EFAF  F00B         	goto	u1031
  1369   00175A  EFB3  F00B         	goto	u1030
  1370   00175E                     u1031:
  1371   00175E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1372   001760  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1373   001762  EFB4  F00B         	goto	u1048
  1374   001766                     u1030:
  1375   001766  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1376   001768                     u1048:
  1377   001768  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1378   00176A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1379   00176C  010E               	movlb	14	; () banked
  1380   00176E  51DA               	movf	218,w,b	;volatile
  1381   001770  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1382   001772  0BDF               	andlw	-33
  1383   001774  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1384   001776  6FDA               	movwf	218,b	;volatile
  1385   001778                     
  1386                           ; BSR set to: 14
  1387                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1388   001778  89DA               	bsf	218,4,b	;volatile
  1389   00177A                     
  1390                           ; BSR set to: 14
  1391                           ;i2c.c: 61:   return tmp;
  1392   00177A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1393   00177C                     
  1394                           ; BSR set to: 14
  1395   00177C  0012               	return		;funcret
  1396   00177E                     __end_of_I2C_2_Master_Read:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function _color_click_init *****************
  1400 ;; Defined at:
  1401 ;;		line 5 in file "color.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;Total ram usage:        1 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 3
  1422 ;; This function calls:
  1423 ;;		_I2C_2_Master_Init
  1424 ;;		_color_writetoaddr
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text9
  1431   001870                     __ptext9:
  1432                           	callstack 0
  1433   001870                     _color_click_init:
  1434                           	callstack 27
  1435   001870                     
  1436                           ;color.c: 8:     I2C_2_Master_Init();
  1437   001870  EC9C  F00C         	call	_I2C_2_Master_Init	;wreg free
  1438   001874                     
  1439                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  1440   001874  0E01               	movlw	1
  1441   001876  6E03               	movwf	color_writetoaddr@value^0,c
  1442   001878  0E00               	movlw	0
  1443   00187A  ECD8  F00C         	call	_color_writetoaddr
  1444   00187E                     
  1445                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1446   00187E  0E3F               	movlw	63
  1447   001880  6E05               	movwf	??_color_click_init^0,c
  1448   001882  0E55               	movlw	85
  1449   001884                     u1187:
  1450   001884  2EE8               	decfsz	wreg,f,c
  1451   001886  D7FE               	bra	u1187
  1452   001888  2E05               	decfsz	??_color_click_init^0,f,c
  1453   00188A  D7FC               	bra	u1187
  1454   00188C  0000               	nop	
  1455   00188E                     
  1456                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  1457   00188E  0E03               	movlw	3
  1458   001890  6E03               	movwf	color_writetoaddr@value^0,c
  1459   001892  0E00               	movlw	0
  1460   001894  ECD8  F00C         	call	_color_writetoaddr
  1461   001898                     
  1462                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  1463   001898  0ED5               	movlw	213
  1464   00189A  6E03               	movwf	color_writetoaddr@value^0,c
  1465   00189C  0E01               	movlw	1
  1466   00189E  ECD8  F00C         	call	_color_writetoaddr
  1467   0018A2  0012               	return		;funcret
  1468   0018A4                     __end_of_color_click_init:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _color_writetoaddr *****************
  1472 ;; Defined at:
  1473 ;;		line 21 in file "color.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  address         1    wreg     unsigned char 
  1476 ;;  value           1    2[COMRAM] unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  address         1    3[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1488 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1492 ;;Total ram usage:        2 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 2
  1495 ;; This function calls:
  1496 ;;		_I2C_2_Master_Start
  1497 ;;		_I2C_2_Master_Stop
  1498 ;;		_I2C_2_Master_Write
  1499 ;; This function is called by:
  1500 ;;		_color_click_init
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text10
  1505   0019B0                     __ptext10:
  1506                           	callstack 0
  1507   0019B0                     _color_writetoaddr:
  1508                           	callstack 27
  1509                           
  1510                           ;incstack = 0
  1511                           ;color_writetoaddr@address stored from wreg
  1512   0019B0  6E04               	movwf	color_writetoaddr@address^0,c
  1513   0019B2                     
  1514                           ;color.c: 22:     I2C_2_Master_Start();
  1515   0019B2  EC20  F00D         	call	_I2C_2_Master_Start	;wreg free
  1516                           
  1517                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  1518   0019B6  0E52               	movlw	82
  1519   0019B8  EC10  F00D         	call	_I2C_2_Master_Write
  1520                           
  1521                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  1522   0019BC  5004               	movf	color_writetoaddr@address^0,w,c
  1523   0019BE  0980               	iorlw	128
  1524   0019C0  EC10  F00D         	call	_I2C_2_Master_Write
  1525                           
  1526                           ;color.c: 25:     I2C_2_Master_Write(value);
  1527   0019C4  5003               	movf	color_writetoaddr@value^0,w,c
  1528   0019C6  EC10  F00D         	call	_I2C_2_Master_Write
  1529                           
  1530                           ;color.c: 26:     I2C_2_Master_Stop();
  1531   0019CA  EC1B  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1532   0019CE  0012               	return		;funcret
  1533   0019D0                     __end_of_color_writetoaddr:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _I2C_2_Master_Write *****************
  1537 ;; Defined at:
  1538 ;;		line 45 in file "i2c.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  data_byte       1    wreg     unsigned char 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  data_byte       1    1[COMRAM] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 1
  1559 ;; This function calls:
  1560 ;;		_I2C_2_Master_Idle
  1561 ;; This function is called by:
  1562 ;;		_color_writetoaddr
  1563 ;;		_color_read_Red
  1564 ;;		_color_read_Green
  1565 ;;		_color_read_Blue
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text11
  1570   001A20                     __ptext11:
  1571                           	callstack 0
  1572   001A20                     _I2C_2_Master_Write:
  1573                           	callstack 28
  1574                           
  1575                           ;incstack = 0
  1576                           ;I2C_2_Master_Write@data_byte stored from wreg
  1577   001A20  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1578   001A22                     
  1579                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1580   001A22  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1581   001A26                     
  1582                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1583   001A26  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1584   001A2A  0012               	return		;funcret
  1585   001A2C                     __end_of_I2C_2_Master_Write:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _I2C_2_Master_Stop *****************
  1589 ;; Defined at:
  1590 ;;		line 39 in file "i2c.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;Total ram usage:        0 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 1
  1611 ;; This function calls:
  1612 ;;		_I2C_2_Master_Idle
  1613 ;; This function is called by:
  1614 ;;		_color_writetoaddr
  1615 ;;		_color_read_Red
  1616 ;;		_color_read_Green
  1617 ;;		_color_read_Blue
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text12
  1622   001A36                     __ptext12:
  1623                           	callstack 0
  1624   001A36                     _I2C_2_Master_Stop:
  1625                           	callstack 28
  1626   001A36                     
  1627                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1628   001A36  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1629   001A3A                     
  1630                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1631   001A3A  010E               	movlb	14	; () banked
  1632   001A3C  85DA               	bsf	218,2,b	;volatile
  1633   001A3E                     
  1634                           ; BSR set to: 14
  1635   001A3E  0012               	return		;funcret
  1636   001A40                     __end_of_I2C_2_Master_Stop:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _I2C_2_Master_Start *****************
  1640 ;; Defined at:
  1641 ;;		line 27 in file "i2c.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		_I2C_2_Master_Idle
  1664 ;; This function is called by:
  1665 ;;		_color_writetoaddr
  1666 ;;		_color_read_Red
  1667 ;;		_color_read_Green
  1668 ;;		_color_read_Blue
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text13
  1673   001A40                     __ptext13:
  1674                           	callstack 0
  1675   001A40                     _I2C_2_Master_Start:
  1676                           	callstack 28
  1677   001A40                     
  1678                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1679   001A40  ECB1  F00C         	call	_I2C_2_Master_Idle	;wreg free
  1680   001A44                     
  1681                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1682   001A44  010E               	movlb	14	; () banked
  1683   001A46  81DA               	bsf	218,0,b	;volatile
  1684   001A48                     
  1685                           ; BSR set to: 14
  1686   001A48  0012               	return		;funcret
  1687   001A4A                     __end_of_I2C_2_Master_Start:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _I2C_2_Master_Idle *****************
  1691 ;; Defined at:
  1692 ;;		line 22 in file "i2c.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1710 ;;Total ram usage:        1 bytes
  1711 ;; Hardware stack levels used: 1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_I2C_2_Master_Start
  1716 ;;		_I2C_2_Master_RepStart
  1717 ;;		_I2C_2_Master_Stop
  1718 ;;		_I2C_2_Master_Write
  1719 ;;		_I2C_2_Master_Read
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text14
  1724   001962                     __ptext14:
  1725                           	callstack 0
  1726   001962                     _I2C_2_Master_Idle:
  1727                           	callstack 28
  1728   001962                     l82:
  1729   001962  010E               	movlb	14	; () banked
  1730   001964  B5D8               	btfsc	216,2,b	;volatile
  1731   001966  EFB7  F00C         	goto	u951
  1732   00196A  EFB9  F00C         	goto	u950
  1733   00196E                     u951:
  1734   00196E  EFB1  F00C         	goto	l82
  1735   001972                     u950:
  1736   001972                     
  1737                           ; BSR set to: 14
  1738   001972  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1739   001976  0E1F               	movlw	31
  1740   001978  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  1741   00197A  A4D8               	btfss	status,2,c
  1742   00197C  EFC2  F00C         	goto	u961
  1743   001980  EFC4  F00C         	goto	u960
  1744   001984                     u961:
  1745   001984  EFB1  F00C         	goto	l82
  1746   001988                     u960:
  1747   001988                     
  1748                           ; BSR set to: 14
  1749   001988  0012               	return		;funcret
  1750   00198A                     __end_of_I2C_2_Master_Idle:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _I2C_2_Master_Init *****************
  1754 ;; Defined at:
  1755 ;;		line 4 in file "i2c.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_color_click_init
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text15
  1783   001938                     __ptext15:
  1784                           	callstack 0
  1785   001938                     _I2C_2_Master_Init:
  1786                           	callstack 29
  1787   001938                     
  1788                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1789   001938  010E               	movlb	14	; () banked
  1790   00193A  51D9               	movf	217,w,b	;volatile
  1791   00193C  0BF0               	andlw	-16
  1792   00193E  0908               	iorlw	8
  1793   001940  6FD9               	movwf	217,b	;volatile
  1794   001942                     
  1795                           ; BSR set to: 14
  1796                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1797   001942  8BD9               	bsf	217,5,b	;volatile
  1798                           
  1799                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1800   001944  0E9F               	movlw	159
  1801   001946  6FD6               	movwf	214,b	;volatile
  1802   001948                     
  1803                           ; BSR set to: 14
  1804                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1805   001948  8A84               	bsf	132,5,c	;volatile
  1806   00194A                     
  1807                           ; BSR set to: 14
  1808                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1809   00194A  8C84               	bsf	132,6,c	;volatile
  1810   00194C                     
  1811                           ; BSR set to: 14
  1812                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1813   00194C  9BA7               	bcf	167,5,b	;volatile
  1814   00194E                     
  1815                           ; BSR set to: 14
  1816                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1817   00194E  9DA7               	bcf	167,6,b	;volatile
  1818                           
  1819                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1820   001950  0E1D               	movlw	29
  1821   001952  6F1D               	movwf	29,b	;volatile
  1822                           
  1823                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1824   001954  0E1E               	movlw	30
  1825   001956  6F1C               	movwf	28,b	;volatile
  1826                           
  1827                           ;i2c.c: 18:   RD5PPS=0x1C;
  1828   001958  0E1C               	movlw	28
  1829   00195A  6F6F               	movwf	111,b	;volatile
  1830                           
  1831                           ;i2c.c: 19:   RD6PPS=0x1B;
  1832   00195C  0E1B               	movlw	27
  1833   00195E  6F70               	movwf	112,b	;volatile
  1834   001960                     
  1835                           ; BSR set to: 14
  1836   001960  0012               	return		;funcret
  1837   001962                     __end_of_I2C_2_Master_Init:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _ADC_init *****************
  1841 ;; Defined at:
  1842 ;;		line 9 in file "ADC.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;Total ram usage:        0 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text16
  1870   0019EE                     __ptext16:
  1871                           	callstack 0
  1872   0019EE                     _ADC_init:
  1873                           	callstack 30
  1874   0019EE                     
  1875                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  1876   0019EE  8C86               	bsf	134,6,c	;volatile
  1877                           
  1878                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  1879   0019F0  010E               	movlb	14	; () banked
  1880   0019F2  8DB4               	bsf	180,6,b	;volatile
  1881                           
  1882                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  1883   0019F4  010F               	movlb	15	; () banked
  1884   0019F6  9958               	bcf	88,4,b	;volatile
  1885   0019F8                     
  1886                           ; BSR set to: 15
  1887                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  1888   0019F8  0EFC               	movlw	-4
  1889   0019FA  1758               	andwf	88,f,b	;volatile
  1890                           
  1891                           ;ADC.c: 17:     ADPCH=0b101110;
  1892   0019FC  0E2E               	movlw	46
  1893   0019FE  6F5F               	movwf	95,b	;volatile
  1894   001A00                     
  1895                           ; BSR set to: 15
  1896                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  1897   001A00  9460               	bcf	96,2,c	;volatile
  1898   001A02                     
  1899                           ; BSR set to: 15
  1900                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  1901   001A02  8860               	bsf	96,4,c	;volatile
  1902   001A04                     
  1903                           ; BSR set to: 15
  1904                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  1905   001A04  8E60               	bsf	96,7,c	;volatile
  1906   001A06                     
  1907                           ; BSR set to: 15
  1908   001A06  0012               	return		;funcret
  1909   001A08                     __end_of_ADC_init:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _ADC_getval *****************
  1913 ;; Defined at:
  1914 ;;		line 23 in file "ADC.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  tmpval          2    2[COMRAM] unsigned int 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  2    0[COMRAM] unsigned int 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        4 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text17
  1942   001908                     __ptext17:
  1943                           	callstack 0
  1944   001908                     _ADC_getval:
  1945                           	callstack 30
  1946   001908                     
  1947                           ;ADC.c: 25:     unsigned int tmpval;;ADC.c: 27:     ADCON0bits.GO = 1;
  1948   001908  8060               	bsf	96,0,c	;volatile
  1949   00190A                     l18:
  1950   00190A  B060               	btfsc	96,0,c	;volatile
  1951   00190C  EF8A  F00C         	goto	u1091
  1952   001910  EF8C  F00C         	goto	u1090
  1953   001914                     u1091:
  1954   001914  EF85  F00C         	goto	l18
  1955   001918                     u1090:
  1956   001918                     
  1957                           ;ADC.c: 31:     tmpval = ADRESH;
  1958   001918  CF64 F003          	movff	3940,ADC_getval@tmpval	;volatile
  1959   00191C  6A04               	clrf	(ADC_getval@tmpval+1)^0,c
  1960   00191E                     
  1961                           ;ADC.c: 35:     tmpval = 255 - tmpval;
  1962   00191E  5003               	movf	ADC_getval@tmpval^0,w,c
  1963   001920  08FF               	sublw	255
  1964   001922  6E03               	movwf	ADC_getval@tmpval^0,c
  1965   001924  5004               	movf	(ADC_getval@tmpval+1)^0,w,c
  1966   001926  A0D8               	btfss	status,0,c
  1967   001928  2AE8               	incf	wreg,f,c
  1968   00192A  0800               	sublw	0
  1969   00192C  6E04               	movwf	(ADC_getval@tmpval+1)^0,c
  1970   00192E                     
  1971                           ;ADC.c: 37:     return tmpval;
  1972   00192E  C003  F001         	movff	ADC_getval@tmpval,?_ADC_getval
  1973   001932  C004  F002         	movff	ADC_getval@tmpval+1,?_ADC_getval+1
  1974   001936  0012               	return		;funcret
  1975   001938                     __end_of_ADC_getval:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _ADC2String *****************
  1979 ;; Defined at:
  1980 ;;		line 133 in file "serial.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;  buf             2   66[COMRAM] PTR unsigned char 
  1983 ;;		 -> sendAllReadings@buffer(10), main@buf(50), 
  1984 ;;  ADC_val         2   68[COMRAM] unsigned int 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  int_part        2   74[COMRAM] unsigned int 
  1987 ;;  frac_part       2   72[COMRAM] unsigned int 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:       10 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 8
  2004 ;; This function calls:
  2005 ;;		___lwdiv
  2006 ;;		___wmul
  2007 ;;		_sprintf
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;;		_sendAllReadings
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text18
  2015   0014C0                     __ptext18:
  2016                           	callstack 0
  2017   0014C0                     _ADC2String:
  2018                           	callstack 22
  2019   0014C0                     
  2020                           ;serial.c: 135:     unsigned int int_part=ADC_val/77;
  2021   0014C0  C045  F007         	movff	ADC2String@ADC_val,___lwdiv@dividend
  2022   0014C4  C046  F008         	movff	ADC2String@ADC_val+1,___lwdiv@dividend+1
  2023   0014C8  0E00               	movlw	0
  2024   0014CA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2025   0014CC  0E4D               	movlw	77
  2026   0014CE  6E09               	movwf	___lwdiv@divisor^0,c
  2027   0014D0  ECEC  F00A         	call	___lwdiv	;wreg free
  2028   0014D4  C007  F04B         	movff	?___lwdiv,ADC2String@int_part
  2029   0014D8  C008  F04C         	movff	?___lwdiv+1,ADC2String@int_part+1
  2030   0014DC                     
  2031                           ;serial.c: 137:     unsigned int frac_part=(ADC_val*100)/77 - int_part*100;
  2032   0014DC  C045  F001         	movff	ADC2String@ADC_val,___wmul@multiplier
  2033   0014E0  C046  F002         	movff	ADC2String@ADC_val+1,___wmul@multiplier+1
  2034   0014E4  0E00               	movlw	0
  2035   0014E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2036   0014E8  0E64               	movlw	100
  2037   0014EA  6E03               	movwf	___wmul@multiplicand^0,c
  2038   0014EC  ECC5  F00C         	call	___wmul	;wreg free
  2039   0014F0  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2040   0014F4  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2041   0014F8  0E00               	movlw	0
  2042   0014FA  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2043   0014FC  0E4D               	movlw	77
  2044   0014FE  6E09               	movwf	___lwdiv@divisor^0,c
  2045   001500  ECEC  F00A         	call	___lwdiv	;wreg free
  2046   001504  C007  F047         	movff	?___lwdiv,??_ADC2String
  2047   001508  C008  F048         	movff	?___lwdiv+1,??_ADC2String+1
  2048   00150C  C04B  F001         	movff	ADC2String@int_part,___wmul@multiplier
  2049   001510  C04C  F002         	movff	ADC2String@int_part+1,___wmul@multiplier+1
  2050   001514  0EFF               	movlw	255
  2051   001516  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2052   001518  0E9C               	movlw	156
  2053   00151A  6E03               	movwf	___wmul@multiplicand^0,c
  2054   00151C  ECC5  F00C         	call	___wmul	;wreg free
  2055   001520  5001               	movf	?___wmul^0,w,c
  2056   001522  2447               	addwf	??_ADC2String^0,w,c
  2057   001524  6E49               	movwf	ADC2String@frac_part^0,c
  2058   001526  5002               	movf	(?___wmul+1)^0,w,c
  2059   001528  2048               	addwfc	(??_ADC2String+1)^0,w,c
  2060   00152A  6E4A               	movwf	(ADC2String@frac_part+1)^0,c
  2061   00152C                     
  2062                           ;serial.c: 139:     sprintf(buf,"Voltage = %d.%02d",int_part,frac_part);
  2063   00152C  C043  F02F         	movff	ADC2String@buf,sprintf@s
  2064   001530  C044  F030         	movff	ADC2String@buf+1,sprintf@s+1
  2065   001534  0E01               	movlw	low STR_4
  2066   001536  6E31               	movwf	sprintf@fmt^0,c
  2067   001538  C04B  F032         	movff	ADC2String@int_part,?_sprintf+3
  2068   00153C  C04C  F033         	movff	ADC2String@int_part+1,?_sprintf+4
  2069   001540  C049  F034         	movff	ADC2String@frac_part,?_sprintf+5
  2070   001544  C04A  F035         	movff	ADC2String@frac_part+1,?_sprintf+6
  2071   001548  ECE0  F00B         	call	_sprintf	;wreg free
  2072   00154C  0012               	return		;funcret
  2073   00154E                     __end_of_ADC2String:
  2074                           	callstack 0
  2075                           
  2076 ;; *************** function _sprintf *****************
  2077 ;; Defined at:
  2078 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  s               2   46[COMRAM] PTR unsigned char 
  2081 ;;		 -> sendAllReadings@buffer(10), main@green_char(50), main@blue_char(50), main@red_char(50), 
  2082 ;;		 -> main@buf(50), 
  2083 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  2084 ;;		 -> STR_4(18), STR_3(7), STR_2(6), STR_1(5), 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  f              12   54[COMRAM] struct _IO_FILE
  2087 ;;  ret             2    0        int 
  2088 ;;  ap              1   53[COMRAM] PTR void [1]
  2089 ;;		 -> ?_sprintf(2), 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  2   46[COMRAM] int 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2099 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2100 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2102 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2103 ;;Total ram usage:       20 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 7
  2106 ;; This function calls:
  2107 ;;		_vfprintf
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;;		_ADC2String
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text19
  2115   0017C0                     __ptext19:
  2116                           	callstack 0
  2117   0017C0                     _sprintf:
  2118                           	callstack 23
  2119   0017C0  0E32               	movlw	low (?_sprintf+3)
  2120   0017C2  6E36               	movwf	sprintf@ap^0,c
  2121   0017C4  C02F  F037         	movff	sprintf@s,sprintf@f
  2122   0017C8  C030  F038         	movff	sprintf@s+1,sprintf@f+1
  2123   0017CC  0E00               	movlw	0
  2124   0017CE  6E3B               	movwf	(sprintf@f+4)^0,c
  2125   0017D0  0E00               	movlw	0
  2126   0017D2  6E3A               	movwf	(sprintf@f+3)^0,c
  2127   0017D4  0E00               	movlw	0
  2128   0017D6  6E42               	movwf	(sprintf@f+11)^0,c
  2129   0017D8  0E00               	movlw	0
  2130   0017DA  6E41               	movwf	(sprintf@f+10)^0,c
  2131   0017DC  0E37               	movlw	low sprintf@f
  2132   0017DE  6E2B               	movwf	vfprintf@fp^0,c
  2133   0017E0  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  2134   0017E4  0E36               	movlw	low sprintf@ap
  2135   0017E6  6E2D               	movwf	vfprintf@ap^0,c
  2136   0017E8  ECBF  F00B         	call	_vfprintf	;wreg free
  2137   0017EC  503A               	movf	(sprintf@f+3)^0,w,c
  2138   0017EE  242F               	addwf	sprintf@s^0,w,c
  2139   0017F0  6ED9               	movwf	fsr2l,c
  2140   0017F2  503B               	movf	(sprintf@f+4)^0,w,c
  2141   0017F4  2030               	addwfc	(sprintf@s+1)^0,w,c
  2142   0017F6  6EDA               	movwf	fsr2h,c
  2143   0017F8  6ADF               	clrf	indf2,c
  2144   0017FA  0012               	return		;funcret
  2145   0017FC                     __end_of_sprintf:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _vfprintf *****************
  2149 ;; Defined at:
  2150 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  2153 ;;		 -> sprintf@f(12), 
  2154 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  2155 ;;		 -> STR_4(18), STR_3(7), STR_2(6), STR_1(5), 
  2156 ;;  ap              1   44[COMRAM] PTR PTR void 
  2157 ;;		 -> sprintf@ap(1), 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  2160 ;;		 -> STR_4(18), STR_3(7), STR_2(6), STR_1(5), 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  2   42[COMRAM] int 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2170 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;Total ram usage:        4 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 6
  2177 ;; This function calls:
  2178 ;;		_vfpfcnvrt
  2179 ;; This function is called by:
  2180 ;;		_sprintf
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text20
  2185   00177E                     __ptext20:
  2186                           	callstack 0
  2187   00177E                     _vfprintf:
  2188                           	callstack 23
  2189   00177E                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2191   00177E  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2194   001782  EFCB  F00B         	goto	l1850
  2195   001786                     l1848:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2198   001786  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  2199   00178A  0E2E               	movlw	low vfprintf@cfmt
  2200   00178C  6E21               	movwf	vfpfcnvrt@fmt^0,c
  2201   00178E  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  2202   001792  EC13  F007         	call	_vfpfcnvrt	;wreg free
  2203   001796                     l1850:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2206   001796  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2207   00179A                     	if	1	;There is more than 1 active tblptr byte
  2208   00179A  0E0E               	movlw	high __smallconst
  2209   00179C  6EF7               	movwf	tblptrh,c
  2210   00179E                     	endif
  2211   00179E                     	if	0	;tblptru may be non-zero
  2212   00179E                     	endif
  2213   00179E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2214   00179E  0E00               	movlw	low (__smallconst shr (0+16))
  2215   0017A0  6EF8               	movwf	tblptru,c
  2216   0017A2                     	endif
  2217   0017A2  0008               	tblrd		*
  2218   0017A4  50F5               	movf	tablat,w,c
  2219   0017A6  0900               	iorlw	0
  2220   0017A8  A4D8               	btfss	status,2,c
  2221   0017AA  EFD9  F00B         	goto	u1021
  2222   0017AE  EFDB  F00B         	goto	u1020
  2223   0017B2                     u1021:
  2224   0017B2  EFC3  F00B         	goto	l1848
  2225   0017B6                     u1020:
  2226   0017B6                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2228   0017B6  0E00               	movlw	0
  2229   0017B8  6E2C               	movwf	(?_vfprintf+1)^0,c
  2230   0017BA  0E00               	movlw	0
  2231   0017BC  6E2B               	movwf	?_vfprintf^0,c
  2232   0017BE  0012               	return		;funcret
  2233   0017C0                     __end_of_vfprintf:
  2234                           	callstack 0
  2235                           
  2236 ;; *************** function _vfpfcnvrt *****************
  2237 ;; Defined at:
  2238 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  2241 ;;		 -> sprintf@f(12), 
  2242 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  2243 ;;		 -> vfprintf@cfmt(1), 
  2244 ;;  ap              1   33[COMRAM] PTR PTR void 
  2245 ;;		 -> sprintf@ap(1), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  convarg         4   36[COMRAM] struct .
  2248 ;;  cp              1   41[COMRAM] PTR unsigned char 
  2249 ;;		 -> STR_4(18), STR_3(7), STR_2(6), STR_1(5), 
  2250 ;;  done            1   40[COMRAM] _Bool 
  2251 ;;  c               1    0        unsigned char 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  1    wreg      void 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:       11 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 5
  2268 ;; This function calls:
  2269 ;;		_dtoa
  2270 ;;		_fputc
  2271 ;;		_read_prec_or_width
  2272 ;; This function is called by:
  2273 ;;		_vfprintf
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277                           	psect	text21
  2278   000E26                     __ptext21:
  2279                           	callstack 0
  2280   000E26                     _vfpfcnvrt:
  2281                           	callstack 23
  2282   000E26                     
  2283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2284   000E26  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2285   000E28  6ED9               	movwf	fsr2l,c
  2286   000E2A  6ADA               	clrf	fsr2h,c
  2287   000E2C  CFDF FFF6          	movff	indf2,tblptrl
  2288   000E30                     	if	1	;There is more than 1 active tblptr byte
  2289   000E30  0E0E               	movlw	high __smallconst
  2290   000E32  6EF7               	movwf	tblptrh,c
  2291   000E34                     	endif
  2292   000E34                     	if	0	;tblptru may be non-zero
  2293   000E34                     	endif
  2294   000E34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2295   000E34  0E00               	movlw	low (__smallconst shr (0+16))
  2296   000E36  6EF8               	movwf	tblptru,c
  2297   000E38                     	endif
  2298   000E38  0008               	tblrd		*
  2299   000E3A  50F5               	movf	tablat,w,c
  2300   000E3C  0A25               	xorlw	37
  2301   000E3E  A4D8               	btfss	status,2,c
  2302   000E40  EF24  F007         	goto	u971
  2303   000E44  EF26  F007         	goto	u970
  2304   000E48                     u971:
  2305   000E48  EFC0  F007         	goto	l1824
  2306   000E4C                     u970:
  2307   000E4C                     
  2308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2309   000E4C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2310   000E4E  6ED9               	movwf	fsr2l,c
  2311   000E50  6ADA               	clrf	fsr2h,c
  2312   000E52  2ADF               	incf	indf2,f,c
  2313   000E54                     
  2314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2315   000E54  0E00               	movlw	0
  2316   000E56  6E4E               	movwf	(_width+1)^0,c
  2317   000E58  0E00               	movlw	0
  2318   000E5A  6E4D               	movwf	_width^0,c
  2319   000E5C  C04D  F051         	movff	_width,_flags
  2320   000E60                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2322   000E60  684F               	setf	_prec^0,c
  2323   000E62  6850               	setf	(_prec+1)^0,c
  2324   000E64                     
  2325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2326   000E64  0E00               	movlw	0
  2327   000E66  6E29               	movwf	vfpfcnvrt@done^0,c
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2330   000E68  EF5C  F007         	goto	l1798
  2331   000E6C                     l1788:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2334   000E6C  8251               	bsf	_flags^0,1,c
  2335   000E6E                     
  2336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2337   000E6E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2338   000E70  6ED9               	movwf	fsr2l,c
  2339   000E72  6ADA               	clrf	fsr2h,c
  2340   000E74  2ADF               	incf	indf2,f,c
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2343   000E76  EF5C  F007         	goto	l1798
  2344   000E7A                     l1792:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2347   000E7A  0E01               	movlw	1
  2348   000E7C  6E29               	movwf	vfpfcnvrt@done^0,c
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2351   000E7E  EF5C  F007         	goto	l1798
  2352   000E82                     l1796:
  2353   000E82  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2354   000E84  6ED9               	movwf	fsr2l,c
  2355   000E86  6ADA               	clrf	fsr2h,c
  2356   000E88  CFDF FFF6          	movff	indf2,tblptrl
  2357   000E8C                     	if	1	;There is more than 1 active tblptr byte
  2358   000E8C  0E0E               	movlw	high __smallconst
  2359   000E8E  6EF7               	movwf	tblptrh,c
  2360   000E90                     	endif
  2361   000E90                     	if	0	;tblptru may be non-zero
  2362   000E90                     	endif
  2363   000E90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2364   000E90  0E00               	movlw	low (__smallconst shr (0+16))
  2365   000E92  6EF8               	movwf	tblptru,c
  2366   000E94                     	endif
  2367   000E94  0008               	tblrd		*
  2368   000E96  50F5               	movf	tablat,w,c
  2369   000E98  6E23               	movwf	??_vfpfcnvrt^0,c
  2370   000E9A  6A24               	clrf	(??_vfpfcnvrt+1)^0,c
  2371                           
  2372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2373                           ; Switch size 1, requested type "simple"
  2374                           ; Number of cases is 1, Range of values is 0 to 0
  2375                           ; switch strategies available:
  2376                           ; Name         Instructions Cycles
  2377                           ; simple_byte            4     3 (average)
  2378                           ;	Chosen strategy is simple_byte
  2379   000E9C  5024               	movf	(??_vfpfcnvrt+1)^0,w,c
  2380   000E9E  0A00               	xorlw	0	; case 0
  2381   000EA0  B4D8               	btfsc	status,2,c
  2382   000EA2  EF55  F007         	goto	l2104
  2383   000EA6  EF3D  F007         	goto	l1792
  2384   000EAA                     l2104:
  2385                           
  2386                           ; Switch size 1, requested type "simple"
  2387                           ; Number of cases is 1, Range of values is 48 to 48
  2388                           ; switch strategies available:
  2389                           ; Name         Instructions Cycles
  2390                           ; simple_byte            4     3 (average)
  2391                           ;	Chosen strategy is simple_byte
  2392   000EAA  5023               	movf	??_vfpfcnvrt^0,w,c
  2393   000EAC  0A30               	xorlw	48	; case 48
  2394   000EAE  B4D8               	btfsc	status,2,c
  2395   000EB0  EF36  F007         	goto	l1788
  2396   000EB4  EF3D  F007         	goto	l1792
  2397   000EB8                     l1798:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2400   000EB8  5029               	movf	vfpfcnvrt@done^0,w,c
  2401   000EBA  B4D8               	btfsc	status,2,c
  2402   000EBC  EF62  F007         	goto	u981
  2403   000EC0  EF64  F007         	goto	u980
  2404   000EC4                     u981:
  2405   000EC4  EF41  F007         	goto	l1796
  2406   000EC8                     u980:
  2407   000EC8                     
  2408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2409   000EC8  C021  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2410   000ECC  C022  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2411   000ED0  EC09  F00A         	call	_read_prec_or_width	;wreg free
  2412   000ED4  C007  F04D         	movff	?_read_prec_or_width,_width
  2413   000ED8  C008  F04E         	movff	?_read_prec_or_width+1,_width+1
  2414   000EDC                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2416   000EDC  BE4E               	btfsc	(_width+1)^0,7,c
  2417   000EDE  EF75  F007         	goto	u990
  2418   000EE2  EF73  F007         	goto	u991
  2419   000EE6                     u991:
  2420   000EE6  EF7A  F007         	goto	l1806
  2421   000EEA                     u990:
  2422   000EEA                     
  2423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2424   000EEA  8051               	bsf	_flags^0,0,c
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2427   000EEC  6C4D               	negf	_width^0,c
  2428   000EEE  1E4E               	comf	(_width+1)^0,f,c
  2429   000EF0  B0D8               	btfsc	status,0,c
  2430   000EF2  2A4E               	incf	(_width+1)^0,f,c
  2431   000EF4                     l1806:
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2434   000EF4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2435   000EF6  6ED9               	movwf	fsr2l,c
  2436   000EF8  6ADA               	clrf	fsr2h,c
  2437   000EFA  50DF               	movf	indf2,w,c
  2438   000EFC  6E2A               	movwf	vfpfcnvrt@cp^0,c
  2439   000EFE                     
  2440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2441   000EFE  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2442   000F02                     	if	1	;There is more than 1 active tblptr byte
  2443   000F02  0E0E               	movlw	high __smallconst
  2444   000F04  6EF7               	movwf	tblptrh,c
  2445   000F06                     	endif
  2446   000F06                     	if	0	;tblptru may be non-zero
  2447   000F06                     	endif
  2448   000F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2449   000F06  0E00               	movlw	low (__smallconst shr (0+16))
  2450   000F08  6EF8               	movwf	tblptru,c
  2451   000F0A                     	endif
  2452   000F0A  0008               	tblrd		*
  2453   000F0C  50F5               	movf	tablat,w,c
  2454   000F0E  0A64               	xorlw	100
  2455   000F10  B4D8               	btfsc	status,2,c
  2456   000F12  EF8D  F007         	goto	u1001
  2457   000F16  EF8F  F007         	goto	u1000
  2458   000F1A                     u1001:
  2459   000F1A  EF9F  F007         	goto	l1812
  2460   000F1E                     u1000:
  2461   000F1E  C02A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2462   000F22                     	if	1	;There is more than 1 active tblptr byte
  2463   000F22  0E0E               	movlw	high __smallconst
  2464   000F24  6EF7               	movwf	tblptrh,c
  2465   000F26                     	endif
  2466   000F26                     	if	0	;tblptru may be non-zero
  2467   000F26                     	endif
  2468   000F26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2469   000F26  0E00               	movlw	low (__smallconst shr (0+16))
  2470   000F28  6EF8               	movwf	tblptru,c
  2471   000F2A                     	endif
  2472   000F2A  0008               	tblrd		*
  2473   000F2C  50F5               	movf	tablat,w,c
  2474   000F2E  0A69               	xorlw	105
  2475   000F30  A4D8               	btfss	status,2,c
  2476   000F32  EF9D  F007         	goto	u1011
  2477   000F36  EF9F  F007         	goto	u1010
  2478   000F3A                     u1011:
  2479   000F3A  EFBA  F007         	goto	l1820
  2480   000F3E                     u1010:
  2481   000F3E                     l1812:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2484   000F3E  5022               	movf	vfpfcnvrt@ap^0,w,c
  2485   000F40  6ED9               	movwf	fsr2l,c
  2486   000F42  6ADA               	clrf	fsr2h,c
  2487   000F44  0E02               	movlw	2
  2488   000F46  26DF               	addwf	indf2,f,c
  2489   000F48  5CDF               	subwf	indf2,w,c
  2490   000F4A  6ED9               	movwf	fsr2l,c
  2491   000F4C  6ADA               	clrf	fsr2h,c
  2492   000F4E  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  2493   000F52  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  2494   000F56                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2496   000F56  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2497   000F58  6ED9               	movwf	fsr2l,c
  2498   000F5A  6ADA               	clrf	fsr2h,c
  2499   000F5C  282A               	incf	vfpfcnvrt@cp^0,w,c
  2500   000F5E  6EDF               	movwf	indf2,c
  2501   000F60                     
  2502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2503   000F60  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  2504   000F64  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  2505   000F68  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2506   000F6C  ECD4  F007         	call	_dtoa	;wreg free
  2507   000F70  EFD3  F007         	goto	l1002
  2508   000F74                     l1820:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2511   000F74  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2512   000F76  6ED9               	movwf	fsr2l,c
  2513   000F78  6ADA               	clrf	fsr2h,c
  2514   000F7A  2ADF               	incf	indf2,f,c
  2515   000F7C  EFD3  F007         	goto	l1002
  2516   000F80                     l1824:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2519   000F80  5021               	movf	vfpfcnvrt@fmt^0,w,c
  2520   000F82  6ED9               	movwf	fsr2l,c
  2521   000F84  6ADA               	clrf	fsr2h,c
  2522   000F86  CFDF FFF6          	movff	indf2,tblptrl
  2523   000F8A                     	if	1	;There is more than 1 active tblptr byte
  2524   000F8A  0E0E               	movlw	high __smallconst
  2525   000F8C  6EF7               	movwf	tblptrh,c
  2526   000F8E                     	endif
  2527   000F8E                     	if	0	;tblptru may be non-zero
  2528   000F8E                     	endif
  2529   000F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2530   000F8E  0E00               	movlw	low (__smallconst shr (0+16))
  2531   000F90  6EF8               	movwf	tblptru,c
  2532   000F92                     	endif
  2533   000F92  0008               	tblrd		*
  2534   000F94  50F5               	movf	tablat,w,c
  2535   000F96  6E01               	movwf	fputc@c^0,c
  2536   000F98  6A02               	clrf	(fputc@c+1)^0,c
  2537   000F9A  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2538   000F9E  EC54  F009         	call	_fputc	;wreg free
  2539   000FA2  EFBA  F007         	goto	l1820
  2540   000FA6                     l1002:
  2541   000FA6  0012               	return		;funcret
  2542   000FA8                     __end_of_vfpfcnvrt:
  2543                           	callstack 0
  2544                           
  2545 ;; *************** function _read_prec_or_width *****************
  2546 ;; Defined at:
  2547 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2550 ;;		 -> vfprintf@cfmt(1), 
  2551 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2552 ;;		 -> sprintf@ap(1), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  c               1    8[COMRAM] unsigned char 
  2555 ;;  n               2    9[COMRAM] int 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  2    6[COMRAM] int 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2568 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2569 ;;Total ram usage:        5 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 1
  2572 ;; This function calls:
  2573 ;;		___wmul
  2574 ;; This function is called by:
  2575 ;;		_vfpfcnvrt
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           	psect	text22
  2580   001412                     __ptext22:
  2581                           	callstack 0
  2582   001412                     _read_prec_or_width:
  2583                           	callstack 26
  2584   001412                     
  2585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2586   001412  0E00               	movlw	0
  2587   001414  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2588   001416  0E00               	movlw	0
  2589   001418  6E0A               	movwf	read_prec_or_width@n^0,c
  2590   00141A                     
  2591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2592   00141A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2593   00141C  6ED9               	movwf	fsr2l,c
  2594   00141E  6ADA               	clrf	fsr2h,c
  2595   001420  CFDF FFF6          	movff	indf2,tblptrl
  2596   001424                     	if	1	;There is more than 1 active tblptr byte
  2597   001424  0E0E               	movlw	high __smallconst
  2598   001426  6EF7               	movwf	tblptrh,c
  2599   001428                     	endif
  2600   001428                     	if	0	;tblptru may be non-zero
  2601   001428                     	endif
  2602   001428                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2603   001428  0E00               	movlw	low (__smallconst shr (0+16))
  2604   00142A  6EF8               	movwf	tblptru,c
  2605   00142C                     	endif
  2606   00142C  0008               	tblrd		*
  2607   00142E  50F5               	movf	tablat,w,c
  2608   001430  0A2A               	xorlw	42
  2609   001432  A4D8               	btfss	status,2,c
  2610   001434  EF1E  F00A         	goto	u931
  2611   001438  EF20  F00A         	goto	u930
  2612   00143C                     u931:
  2613   00143C  EF46  F00A         	goto	l1772
  2614   001440                     u930:
  2615   001440                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2617   001440  5007               	movf	read_prec_or_width@fmt^0,w,c
  2618   001442  6ED9               	movwf	fsr2l,c
  2619   001444  6ADA               	clrf	fsr2h,c
  2620   001446  2ADF               	incf	indf2,f,c
  2621   001448                     
  2622                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2623   001448  5008               	movf	read_prec_or_width@ap^0,w,c
  2624   00144A  6ED9               	movwf	fsr2l,c
  2625   00144C  6ADA               	clrf	fsr2h,c
  2626   00144E  0E02               	movlw	2
  2627   001450  26DF               	addwf	indf2,f,c
  2628   001452  5CDF               	subwf	indf2,w,c
  2629   001454  6ED9               	movwf	fsr2l,c
  2630   001456  6ADA               	clrf	fsr2h,c
  2631   001458  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2632   00145C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2635   001460  EF5B  F00A         	goto	l983
  2636   001464                     l1768:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2639   001464  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2640   001468  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2641   00146C  0E00               	movlw	0
  2642   00146E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2643   001470  0E0A               	movlw	10
  2644   001472  6E03               	movwf	___wmul@multiplicand^0,c
  2645   001474  ECC5  F00C         	call	___wmul	;wreg free
  2646   001478  5009               	movf	read_prec_or_width@c^0,w,c
  2647   00147A  2401               	addwf	?___wmul^0,w,c
  2648   00147C  6E0A               	movwf	read_prec_or_width@n^0,c
  2649   00147E  0E00               	movlw	0
  2650   001480  2002               	addwfc	(?___wmul+1)^0,w,c
  2651   001482  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2652   001484                     
  2653                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2654   001484  5007               	movf	read_prec_or_width@fmt^0,w,c
  2655   001486  6ED9               	movwf	fsr2l,c
  2656   001488  6ADA               	clrf	fsr2h,c
  2657   00148A  2ADF               	incf	indf2,f,c
  2658   00148C                     l1772:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2661   00148C  5007               	movf	read_prec_or_width@fmt^0,w,c
  2662   00148E  6ED9               	movwf	fsr2l,c
  2663   001490  6ADA               	clrf	fsr2h,c
  2664   001492  CFDF FFF6          	movff	indf2,tblptrl
  2665   001496                     	if	1	;There is more than 1 active tblptr byte
  2666   001496  0E0E               	movlw	high __smallconst
  2667   001498  6EF7               	movwf	tblptrh,c
  2668   00149A                     	endif
  2669   00149A                     	if	0	;tblptru may be non-zero
  2670   00149A                     	endif
  2671   00149A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2672   00149A  0E00               	movlw	low (__smallconst shr (0+16))
  2673   00149C  6EF8               	movwf	tblptru,c
  2674   00149E                     	endif
  2675   00149E  0008               	tblrd		*
  2676   0014A0  50F5               	movf	tablat,w,c
  2677   0014A2  0FD0               	addlw	208
  2678   0014A4  6E09               	movwf	read_prec_or_width@c^0,c
  2679   0014A6  0E09               	movlw	9
  2680   0014A8  6409               	cpfsgt	read_prec_or_width@c^0,c
  2681   0014AA  EF59  F00A         	goto	u941
  2682   0014AE  EF5B  F00A         	goto	u940
  2683   0014B2                     u941:
  2684   0014B2  EF32  F00A         	goto	l1768
  2685   0014B6                     u940:
  2686   0014B6                     l983:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2689   0014B6  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2690   0014BA  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2691   0014BE  0012               	return		;funcret
  2692   0014C0                     __end_of_read_prec_or_width:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function ___wmul *****************
  2696 ;; Defined at:
  2697 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  multiplier      2    0[COMRAM] unsigned int 
  2700 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  product         2    4[COMRAM] unsigned int 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    0[COMRAM] unsigned int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, prodl, prodh
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;Total ram usage:        6 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_ADC2String
  2722 ;;		_read_prec_or_width
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text23
  2727   00198A                     __ptext23:
  2728                           	callstack 0
  2729   00198A                     ___wmul:
  2730                           	callstack 26
  2731   00198A  5001               	movf	___wmul@multiplier^0,w,c
  2732   00198C  0203               	mulwf	___wmul@multiplicand^0,c
  2733   00198E  CFF3 F005          	movff	prodl,___wmul@product
  2734   001992  CFF4 F006          	movff	prodh,___wmul@product+1
  2735   001996  5001               	movf	___wmul@multiplier^0,w,c
  2736   001998  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2737   00199A  50F3               	movf	243,w,c
  2738   00199C  2606               	addwf	(___wmul@product+1)^0,f,c
  2739   00199E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2740   0019A0  0203               	mulwf	___wmul@multiplicand^0,c
  2741   0019A2  50F3               	movf	243,w,c
  2742   0019A4  2606               	addwf	(___wmul@product+1)^0,f,c
  2743   0019A6  C005  F001         	movff	___wmul@product,?___wmul
  2744   0019AA  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2745   0019AE  0012               	return		;funcret
  2746   0019B0                     __end_of___wmul:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _dtoa *****************
  2750 ;; Defined at:
  2751 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2754 ;;		 -> sprintf@f(12), 
  2755 ;;  d               2   21[COMRAM] int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  i               2   29[COMRAM] int 
  2758 ;;  w               2   26[COMRAM] int 
  2759 ;;  s               1   28[COMRAM] unsigned char 
  2760 ;;  p               1   25[COMRAM] _Bool 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2770 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;Total ram usage:       11 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 4
  2777 ;; This function calls:
  2778 ;;		___awdiv
  2779 ;;		___awmod
  2780 ;;		_abs
  2781 ;;		_pad
  2782 ;; This function is called by:
  2783 ;;		_vfpfcnvrt
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text24
  2788   000FA8                     __ptext24:
  2789                           	callstack 0
  2790   000FA8                     _dtoa:
  2791                           	callstack 23
  2792   000FA8                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2794   000FA8  0E01               	movlw	1
  2795   000FAA  6E1A               	movwf	dtoa@p^0,c
  2796   000FAC                     
  2797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2798   000FAC  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2799   000FAE  EFDB  F007         	goto	u831
  2800   000FB2  EFDE  F007         	goto	u830
  2801   000FB6                     u831:
  2802   000FB6  0E01               	movlw	1
  2803   000FB8  EFDF  F007         	goto	u840
  2804   000FBC                     u830:
  2805   000FBC  0E00               	movlw	0
  2806   000FBE                     u840:
  2807   000FBE  6E1D               	movwf	dtoa@s^0,c
  2808   000FC0                     
  2809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2810   000FC0  C04D  F01B         	movff	_width,dtoa@w
  2811   000FC4  C04E  F01C         	movff	_width+1,dtoa@w+1
  2812   000FC8                     
  2813                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  2814   000FC8  501D               	movf	dtoa@s^0,w,c
  2815   000FCA  B4D8               	btfsc	status,2,c
  2816   000FCC  EFEA  F007         	goto	u851
  2817   000FD0  EFEC  F007         	goto	u850
  2818   000FD4                     u851:
  2819   000FD4  EF03  F008         	goto	l966
  2820   000FD8                     u850:
  2821   000FD8                     
  2822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  2823   000FD8  061B               	decf	dtoa@w^0,f,c
  2824   000FDA  A0D8               	btfss	status,0,c
  2825   000FDC  061C               	decf	(dtoa@w+1)^0,f,c
  2826   000FDE                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2828   000FDE  501D               	movf	dtoa@s^0,w,c
  2829   000FE0  A4D8               	btfss	status,2,c
  2830   000FE2  EFF5  F007         	goto	u861
  2831   000FE6  EFF7  F007         	goto	u860
  2832   000FEA                     u861:
  2833   000FEA  EFFD  F007         	goto	l1724
  2834   000FEE                     u860:
  2835   000FEE  0E00               	movlw	0
  2836   000FF0  6E19               	movwf	(_dtoa$1244+1)^0,c
  2837   000FF2  0E2B               	movlw	43
  2838   000FF4  6E18               	movwf	_dtoa$1244^0,c
  2839   000FF6  EF01  F008         	goto	l1726
  2840   000FFA                     l1724:
  2841   000FFA  0E00               	movlw	0
  2842   000FFC  6E19               	movwf	(_dtoa$1244+1)^0,c
  2843   000FFE  0E2D               	movlw	45
  2844   001000  6E18               	movwf	_dtoa$1244^0,c
  2845   001002                     l1726:
  2846   001002  C018  F01D         	movff	_dtoa$1244,dtoa@s
  2847   001006                     l966:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2850   001006  0E00               	movlw	0
  2851   001008  6E1F               	movwf	(dtoa@i+1)^0,c
  2852   00100A  0E1F               	movlw	31
  2853   00100C  6E1E               	movwf	dtoa@i^0,c
  2854   00100E                     
  2855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2856   00100E  0E00               	movlw	0
  2857   001010  0100               	movlb	0	; () banked
  2858   001012  6FE3               	movwf	(_dbuf+31)& (0+255),b
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2861   001014  EF39  F008         	goto	l1740
  2862   001018                     l1730:
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  2865   001018  061E               	decf	dtoa@i^0,f,c
  2866   00101A  A0D8               	btfss	status,0,c
  2867   00101C  061F               	decf	(dtoa@i+1)^0,f,c
  2868   00101E                     
  2869                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2870   00101E  501E               	movf	dtoa@i^0,w,c
  2871   001020  0FC4               	addlw	low _dbuf
  2872   001022  6ED9               	movwf	fsr2l,c
  2873   001024  6ADA               	clrf	fsr2h,c
  2874   001026  C016  F001         	movff	dtoa@d,___awmod@dividend
  2875   00102A  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2876   00102E  0E00               	movlw	0
  2877   001030  6E04               	movwf	(___awmod@divisor+1)^0,c
  2878   001032  0E0A               	movlw	10
  2879   001034  6E03               	movwf	___awmod@divisor^0,c
  2880   001036  ECB1  F009         	call	___awmod	;wreg free
  2881   00103A  C001  F007         	movff	?___awmod,abs@a
  2882   00103E  C002  F008         	movff	?___awmod+1,abs@a+1
  2883   001042  EC52  F00C         	call	_abs	;wreg free
  2884   001046  5007               	movf	?_abs^0,w,c
  2885   001048  0F30               	addlw	48
  2886   00104A  6EDF               	movwf	indf2,c
  2887   00104C                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2889   00104C  0E00               	movlw	0
  2890   00104E  6E1A               	movwf	dtoa@p^0,c
  2891   001050                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  2893   001050  061B               	decf	dtoa@w^0,f,c
  2894   001052  A0D8               	btfss	status,0,c
  2895   001054  061C               	decf	(dtoa@w+1)^0,f,c
  2896   001056                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2898   001056  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2899   00105A  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2900   00105E  0E00               	movlw	0
  2901   001060  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2902   001062  0E0A               	movlw	10
  2903   001064  6E03               	movwf	___awdiv@divisor^0,c
  2904   001066  ECF2  F008         	call	___awdiv	;wreg free
  2905   00106A  C001  F016         	movff	?___awdiv,dtoa@d
  2906   00106E  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2907   001072                     l1740:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2910   001072  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2911   001074  EF44  F008         	goto	u871
  2912   001078  501F               	movf	(dtoa@i+1)^0,w,c
  2913   00107A  E108               	bnz	u870
  2914   00107C  041E               	decf	dtoa@i^0,w,c
  2915   00107E  A0D8               	btfss	status,0,c
  2916   001080  EF44  F008         	goto	u871
  2917   001084  EF46  F008         	goto	u870
  2918   001088                     u871:
  2919   001088  EF6B  F008         	goto	l1750
  2920   00108C                     u870:
  2921   00108C  5016               	movf	dtoa@d^0,w,c
  2922   00108E  1017               	iorwf	(dtoa@d+1)^0,w,c
  2923   001090  A4D8               	btfss	status,2,c
  2924   001092  EF4D  F008         	goto	u881
  2925   001096  EF4F  F008         	goto	u880
  2926   00109A                     u881:
  2927   00109A  EF0C  F008         	goto	l1730
  2928   00109E                     u880:
  2929   00109E  501A               	movf	dtoa@p^0,w,c
  2930   0010A0  A4D8               	btfss	status,2,c
  2931   0010A2  EF55  F008         	goto	u891
  2932   0010A6  EF57  F008         	goto	u890
  2933   0010AA                     u891:
  2934   0010AA  EF0C  F008         	goto	l1730
  2935   0010AE                     u890:
  2936   0010AE  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2937   0010B0  EF62  F008         	goto	u901
  2938   0010B4  501C               	movf	(dtoa@w+1)^0,w,c
  2939   0010B6  E108               	bnz	u900
  2940   0010B8  041B               	decf	dtoa@w^0,w,c
  2941   0010BA  A0D8               	btfss	status,0,c
  2942   0010BC  EF62  F008         	goto	u901
  2943   0010C0  EF64  F008         	goto	u900
  2944   0010C4                     u901:
  2945   0010C4  EF6B  F008         	goto	l1750
  2946   0010C8                     u900:
  2947   0010C8  B251               	btfsc	_flags^0,1,c
  2948   0010CA  EF69  F008         	goto	u911
  2949   0010CE  EF6B  F008         	goto	u910
  2950   0010D2                     u911:
  2951   0010D2  EF0C  F008         	goto	l1730
  2952   0010D6                     u910:
  2953   0010D6                     l1750:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2956   0010D6  501D               	movf	dtoa@s^0,w,c
  2957   0010D8  B4D8               	btfsc	status,2,c
  2958   0010DA  EF71  F008         	goto	u921
  2959   0010DE  EF73  F008         	goto	u920
  2960   0010E2                     u921:
  2961   0010E2  EF7C  F008         	goto	l1756
  2962   0010E6                     u920:
  2963   0010E6                     
  2964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  2965   0010E6  061E               	decf	dtoa@i^0,f,c
  2966   0010E8  A0D8               	btfss	status,0,c
  2967   0010EA  061F               	decf	(dtoa@i+1)^0,f,c
  2968   0010EC                     
  2969                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2970   0010EC  501E               	movf	dtoa@i^0,w,c
  2971   0010EE  0FC4               	addlw	low _dbuf
  2972   0010F0  6ED9               	movwf	fsr2l,c
  2973   0010F2  6ADA               	clrf	fsr2h,c
  2974   0010F4  C01D  FFDF         	movff	dtoa@s,indf2
  2975   0010F8                     l1756:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2978   0010F8  C015  F00E         	movff	dtoa@fp,pad@fp
  2979   0010FC  501E               	movf	dtoa@i^0,w,c
  2980   0010FE  0FC4               	addlw	low _dbuf
  2981   001100  6E0F               	movwf	pad@buf^0,c
  2982   001102  C01B  F010         	movff	dtoa@w,pad@p
  2983   001106  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2984   00110A  ECA7  F00A         	call	_pad	;wreg free
  2985   00110E  0012               	return		;funcret
  2986   001110                     __end_of_dtoa:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _pad *****************
  2990 ;; Defined at:
  2991 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2994 ;;		 -> sprintf@f(12), 
  2995 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2996 ;;		 -> dbuf(32), 
  2997 ;;  p               2   15[COMRAM] int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  i               2   18[COMRAM] int 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3011 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3012 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3013 ;;Total ram usage:        7 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 3
  3016 ;; This function calls:
  3017 ;;		_fputc
  3018 ;;		_fputs
  3019 ;; This function is called by:
  3020 ;;		_dtoa
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text25
  3025   00154E                     __ptext25:
  3026                           	callstack 0
  3027   00154E                     _pad:
  3028                           	callstack 23
  3029   00154E                     
  3030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3031   00154E  A051               	btfss	_flags^0,0,c
  3032   001550  EFAC  F00A         	goto	u781
  3033   001554  EFAE  F00A         	goto	u780
  3034   001558                     u781:
  3035   001558  EFB4  F00A         	goto	l1694
  3036   00155C                     u780:
  3037   00155C                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3039   00155C  C00F  F009         	movff	pad@buf,fputs@s
  3040   001560  C00E  F00A         	movff	pad@fp,fputs@fp
  3041   001564  ECFE  F00B         	call	_fputs	;wreg free
  3042   001568                     l1694:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3045   001568  BE11               	btfsc	(pad@p+1)^0,7,c
  3046   00156A  EFBB  F00A         	goto	u790
  3047   00156E  EFB9  F00A         	goto	u791
  3048   001572                     u791:
  3049   001572  EFBF  F00A         	goto	l958
  3050   001576                     u790:
  3051   001576                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3053   001576  0E00               	movlw	0
  3054   001578  6E11               	movwf	(pad@p+1)^0,c
  3055   00157A  0E00               	movlw	0
  3056   00157C  6E10               	movwf	pad@p^0,c
  3057   00157E                     l958:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3060   00157E  0E00               	movlw	0
  3061   001580  6E14               	movwf	(pad@i+1)^0,c
  3062   001582  0E00               	movlw	0
  3063   001584  6E13               	movwf	pad@i^0,c
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3066   001586  EFCF  F00A         	goto	l1702
  3067   00158A                     l1698:
  3068                           
  3069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3070   00158A  0E00               	movlw	0
  3071   00158C  6E02               	movwf	(fputc@c+1)^0,c
  3072   00158E  0E20               	movlw	32
  3073   001590  6E01               	movwf	fputc@c^0,c
  3074   001592  C00E  F003         	movff	pad@fp,fputc@fp
  3075   001596  EC54  F009         	call	_fputc	;wreg free
  3076   00159A                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3078   00159A  4A13               	infsnz	pad@i^0,f,c
  3079   00159C  2A14               	incf	(pad@i+1)^0,f,c
  3080   00159E                     l1702:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3083   00159E  5010               	movf	pad@p^0,w,c
  3084   0015A0  5C13               	subwf	pad@i^0,w,c
  3085   0015A2  5014               	movf	(pad@i+1)^0,w,c
  3086   0015A4  0A80               	xorlw	128
  3087   0015A6  6E12               	movwf	??_pad^0,c
  3088   0015A8  5011               	movf	(pad@p+1)^0,w,c
  3089   0015AA  0A80               	xorlw	128
  3090   0015AC  5812               	subwfb	??_pad^0,w,c
  3091   0015AE  A0D8               	btfss	status,0,c
  3092   0015B0  EFDC  F00A         	goto	u801
  3093   0015B4  EFDE  F00A         	goto	u800
  3094   0015B8                     u801:
  3095   0015B8  EFC5  F00A         	goto	l1698
  3096   0015BC                     u800:
  3097   0015BC                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3099   0015BC  B051               	btfsc	_flags^0,0,c
  3100   0015BE  EFE3  F00A         	goto	u811
  3101   0015C2  EFE5  F00A         	goto	u810
  3102   0015C6                     u811:
  3103   0015C6  EFEB  F00A         	goto	l963
  3104   0015CA                     u810:
  3105   0015CA                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3107   0015CA  C00F  F009         	movff	pad@buf,fputs@s
  3108   0015CE  C00E  F00A         	movff	pad@fp,fputs@fp
  3109   0015D2  ECFE  F00B         	call	_fputs	;wreg free
  3110   0015D6                     l963:
  3111   0015D6  0012               	return		;funcret
  3112   0015D8                     __end_of_pad:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _fputs *****************
  3116 ;; Defined at:
  3117 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3120 ;;		 -> dbuf(32), 
  3121 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3122 ;;		 -> sprintf@f(12), 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  i               2   11[COMRAM] int 
  3125 ;;  c               1   10[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2    8[COMRAM] int 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3136 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3138 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3139 ;;Total ram usage:        5 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 2
  3142 ;; This function calls:
  3143 ;;		_fputc
  3144 ;; This function is called by:
  3145 ;;		_pad
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text26
  3150   0017FC                     __ptext26:
  3151                           	callstack 0
  3152   0017FC                     _fputs:
  3153                           	callstack 23
  3154   0017FC  0E00               	movlw	0
  3155   0017FE  6E0D               	movwf	(fputs@i+1)^0,c
  3156   001800  0E00               	movlw	0
  3157   001802  6E0C               	movwf	fputs@i^0,c
  3158   001804  EF0D  F00C         	goto	l1602
  3159   001808                     l1598:
  3160   001808  C00B  F001         	movff	fputs@c,fputc@c
  3161   00180C  6A02               	clrf	(fputc@c+1)^0,c
  3162   00180E  C00A  F003         	movff	fputs@fp,fputc@fp
  3163   001812  EC54  F009         	call	_fputc	;wreg free
  3164   001816  4A0C               	infsnz	fputs@i^0,f,c
  3165   001818  2A0D               	incf	(fputs@i+1)^0,f,c
  3166   00181A                     l1602:
  3167   00181A  5009               	movf	fputs@s^0,w,c
  3168   00181C  240C               	addwf	fputs@i^0,w,c
  3169   00181E  6ED9               	movwf	fsr2l,c
  3170   001820  6ADA               	clrf	fsr2h,c
  3171   001822  50DF               	movf	indf2,w,c
  3172   001824  6E0B               	movwf	fputs@c^0,c
  3173   001826  500B               	movf	fputs@c^0,w,c
  3174   001828  A4D8               	btfss	status,2,c
  3175   00182A  EF19  F00C         	goto	u651
  3176   00182E  EF1B  F00C         	goto	u650
  3177   001832                     u651:
  3178   001832  EF04  F00C         	goto	l1598
  3179   001836                     u650:
  3180   001836  0012               	return		;funcret
  3181   001838                     __end_of_fputs:
  3182                           	callstack 0
  3183                           
  3184 ;; *************** function _fputc *****************
  3185 ;; Defined at:
  3186 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  c               2    0[COMRAM] int 
  3189 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3190 ;;		 -> sprintf@f(12), 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  2    0[COMRAM] int 
  3195 ;; Registers used:
  3196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3202 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;Total ram usage:        8 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 1
  3209 ;; This function calls:
  3210 ;;		_putch
  3211 ;; This function is called by:
  3212 ;;		_pad
  3213 ;;		_vfpfcnvrt
  3214 ;;		_fputs
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text27
  3219   0012A8                     __ptext27:
  3220                           	callstack 0
  3221   0012A8                     _fputc:
  3222                           	callstack 26
  3223   0012A8  5003               	movf	fputc@fp^0,w,c
  3224   0012AA  B4D8               	btfsc	status,2,c
  3225   0012AC  EF5A  F009         	goto	u611
  3226   0012B0  EF5C  F009         	goto	u610
  3227   0012B4                     u611:
  3228   0012B4  EF64  F009         	goto	l1586
  3229   0012B8                     u610:
  3230   0012B8  5003               	movf	fputc@fp^0,w,c
  3231   0012BA  A4D8               	btfss	status,2,c
  3232   0012BC  EF62  F009         	goto	u621
  3233   0012C0  EF64  F009         	goto	u620
  3234   0012C4                     u621:
  3235   0012C4  EF69  F009         	goto	l1588
  3236   0012C8                     u620:
  3237   0012C8                     l1586:
  3238   0012C8  5001               	movf	fputc@c^0,w,c
  3239   0012CA  EC25  F00D         	call	_putch
  3240   0012CE  EFB0  F009         	goto	l1027
  3241   0012D2                     l1588:
  3242   0012D2  5003               	movf	fputc@fp^0,w,c
  3243   0012D4  6ED9               	movwf	fsr2l,c
  3244   0012D6  6ADA               	clrf	fsr2h,c
  3245   0012D8  0E0A               	movlw	10
  3246   0012DA  26D9               	addwf	fsr2l,f,c
  3247   0012DC  50DE               	movf	postinc2,w,c
  3248   0012DE  10DE               	iorwf	postinc2,w,c
  3249   0012E0  B4D8               	btfsc	status,2,c
  3250   0012E2  EF75  F009         	goto	u631
  3251   0012E6  EF77  F009         	goto	u630
  3252   0012EA                     u631:
  3253   0012EA  EF90  F009         	goto	l1592
  3254   0012EE                     u630:
  3255   0012EE  5003               	movf	fputc@fp^0,w,c
  3256   0012F0  6ED9               	movwf	fsr2l,c
  3257   0012F2  6ADA               	clrf	fsr2h,c
  3258   0012F4  0E0A               	movlw	10
  3259   0012F6  26D9               	addwf	fsr2l,f,c
  3260   0012F8  5003               	movf	fputc@fp^0,w,c
  3261   0012FA  6EE1               	movwf	fsr1l,c
  3262   0012FC  6AE2               	clrf	fsr1h,c
  3263   0012FE  0E03               	movlw	3
  3264   001300  26E1               	addwf	fsr1l,f,c
  3265   001302  50DE               	movf	postinc2,w,c
  3266   001304  5CE6               	subwf	postinc1,w,c
  3267   001306  50E6               	movf	postinc1,w,c
  3268   001308  0A80               	xorlw	128
  3269   00130A  6E08               	movwf	(??_fputc+4)^0,c
  3270   00130C  50DE               	movf	postinc2,w,c
  3271   00130E  0A80               	xorlw	128
  3272   001310  5808               	subwfb	(??_fputc+4)^0,w,c
  3273   001312  B0D8               	btfsc	status,0,c
  3274   001314  EF8E  F009         	goto	u641
  3275   001318  EF90  F009         	goto	u640
  3276   00131C                     u641:
  3277   00131C  EFB0  F009         	goto	l1027
  3278   001320                     u640:
  3279   001320                     l1592:
  3280   001320  5003               	movf	fputc@fp^0,w,c
  3281   001322  6ED9               	movwf	fsr2l,c
  3282   001324  6ADA               	clrf	fsr2h,c
  3283   001326  0E03               	movlw	3
  3284   001328  26D9               	addwf	fsr2l,f,c
  3285   00132A  CFDE F004          	movff	postinc2,??_fputc
  3286   00132E  CFDD F005          	movff	postdec2,??_fputc+1
  3287   001332  5003               	movf	fputc@fp^0,w,c
  3288   001334  6ED9               	movwf	fsr2l,c
  3289   001336  6ADA               	clrf	fsr2h,c
  3290   001338  CFDE F006          	movff	postinc2,??_fputc+2
  3291   00133C  CFDD F007          	movff	postdec2,??_fputc+3
  3292   001340  5004               	movf	??_fputc^0,w,c
  3293   001342  2406               	addwf	(??_fputc+2)^0,w,c
  3294   001344  6ED9               	movwf	fsr2l,c
  3295   001346  5005               	movf	(??_fputc+1)^0,w,c
  3296   001348  2007               	addwfc	(??_fputc+3)^0,w,c
  3297   00134A  6EDA               	movwf	fsr2h,c
  3298   00134C  C001  FFDF         	movff	fputc@c,indf2
  3299   001350  5003               	movf	fputc@fp^0,w,c
  3300   001352  6ED9               	movwf	fsr2l,c
  3301   001354  6ADA               	clrf	fsr2h,c
  3302   001356  0E03               	movlw	3
  3303   001358  26D9               	addwf	fsr2l,f,c
  3304   00135A  2ADE               	incf	postinc2,f,c
  3305   00135C  0E00               	movlw	0
  3306   00135E  22DD               	addwfc	postdec2,f,c
  3307   001360                     l1027:
  3308   001360  0012               	return		;funcret
  3309   001362                     __end_of_fputc:
  3310                           	callstack 0
  3311                           
  3312 ;; *************** function _putch *****************
  3313 ;; Defined at:
  3314 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  c               1    wreg     unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  c               1    0[COMRAM] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;Total ram usage:        0 bytes
  3333 ;; Hardware stack levels used: 1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_fputc
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text28
  3342   001A4A                     __ptext28:
  3343                           	callstack 0
  3344   001A4A                     _putch:
  3345                           	callstack 26
  3346   001A4A  0012               	return		;funcret
  3347   001A4C                     __end_of_putch:
  3348                           	callstack 0
  3349                           
  3350 ;; *************** function _abs *****************
  3351 ;; Defined at:
  3352 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  a               2    6[COMRAM] int 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    6[COMRAM] int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;Total ram usage:        4 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_dtoa
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text29
  3380   0018A4                     __ptext29:
  3381                           	callstack 0
  3382   0018A4                     _abs:
  3383                           	callstack 26
  3384   0018A4  BE08               	btfsc	(abs@a+1)^0,7,c
  3385   0018A6  EF57  F00C         	goto	u821
  3386   0018AA  EF59  F00C         	goto	u820
  3387   0018AE                     u821:
  3388   0018AE  EF5F  F00C         	goto	l1012
  3389   0018B2                     u820:
  3390   0018B2  C007  F007         	movff	abs@a,?_abs
  3391   0018B6  C008  F008         	movff	abs@a+1,?_abs+1
  3392   0018BA  EF6B  F00C         	goto	l1015
  3393   0018BE                     l1012:
  3394   0018BE  C007  F009         	movff	abs@a,??_abs
  3395   0018C2  C008  F00A         	movff	abs@a+1,??_abs+1
  3396   0018C6  1E09               	comf	??_abs^0,f,c
  3397   0018C8  1E0A               	comf	(??_abs+1)^0,f,c
  3398   0018CA  4A09               	infsnz	??_abs^0,f,c
  3399   0018CC  2A0A               	incf	(??_abs+1)^0,f,c
  3400   0018CE  C009  F007         	movff	??_abs,?_abs
  3401   0018D2  C00A  F008         	movff	??_abs+1,?_abs+1
  3402   0018D6                     l1015:
  3403   0018D6  0012               	return		;funcret
  3404   0018D8                     __end_of_abs:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function ___awmod *****************
  3408 ;; Defined at:
  3409 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  dividend        2    0[COMRAM] int 
  3412 ;;  divisor         2    2[COMRAM] int 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  sign            1    5[COMRAM] unsigned char 
  3415 ;;  counter         1    4[COMRAM] unsigned char 
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  2    0[COMRAM] int 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;Total ram usage:        6 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_dtoa
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text30
  3439   001362                     __ptext30:
  3440                           	callstack 0
  3441   001362                     ___awmod:
  3442                           	callstack 26
  3443   001362  0E00               	movlw	0
  3444   001364  6E06               	movwf	___awmod@sign^0,c
  3445   001366  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3446   001368  EFBA  F009         	goto	u720
  3447   00136C  EFB8  F009         	goto	u721
  3448   001370                     u721:
  3449   001370  EFC0  F009         	goto	l1662
  3450   001374                     u720:
  3451   001374  6C01               	negf	___awmod@dividend^0,c
  3452   001376  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3453   001378  B0D8               	btfsc	status,0,c
  3454   00137A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3455   00137C  0E01               	movlw	1
  3456   00137E  6E06               	movwf	___awmod@sign^0,c
  3457   001380                     l1662:
  3458   001380  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3459   001382  EFC7  F009         	goto	u730
  3460   001386  EFC5  F009         	goto	u731
  3461   00138A                     u731:
  3462   00138A  EFCB  F009         	goto	l1666
  3463   00138E                     u730:
  3464   00138E  6C03               	negf	___awmod@divisor^0,c
  3465   001390  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3466   001392  B0D8               	btfsc	status,0,c
  3467   001394  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3468   001396                     l1666:
  3469   001396  5003               	movf	___awmod@divisor^0,w,c
  3470   001398  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3471   00139A  B4D8               	btfsc	status,2,c
  3472   00139C  EFD2  F009         	goto	u741
  3473   0013A0  EFD4  F009         	goto	u740
  3474   0013A4                     u741:
  3475   0013A4  EFF8  F009         	goto	l1682
  3476   0013A8                     u740:
  3477   0013A8  0E01               	movlw	1
  3478   0013AA  6E05               	movwf	___awmod@counter^0,c
  3479   0013AC  EFDC  F009         	goto	l1672
  3480   0013B0                     l1670:
  3481   0013B0  90D8               	bcf	status,0,c
  3482   0013B2  3603               	rlcf	___awmod@divisor^0,f,c
  3483   0013B4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3484   0013B6  2A05               	incf	___awmod@counter^0,f,c
  3485   0013B8                     l1672:
  3486   0013B8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3487   0013BA  EFE1  F009         	goto	u751
  3488   0013BE  EFE3  F009         	goto	u750
  3489   0013C2                     u751:
  3490   0013C2  EFD8  F009         	goto	l1670
  3491   0013C6                     u750:
  3492   0013C6                     l1674:
  3493   0013C6  5003               	movf	___awmod@divisor^0,w,c
  3494   0013C8  5C01               	subwf	___awmod@dividend^0,w,c
  3495   0013CA  5004               	movf	(___awmod@divisor+1)^0,w,c
  3496   0013CC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3497   0013CE  A0D8               	btfss	status,0,c
  3498   0013D0  EFEC  F009         	goto	u761
  3499   0013D4  EFEE  F009         	goto	u760
  3500   0013D8                     u761:
  3501   0013D8  EFF2  F009         	goto	l1678
  3502   0013DC                     u760:
  3503   0013DC  5003               	movf	___awmod@divisor^0,w,c
  3504   0013DE  5E01               	subwf	___awmod@dividend^0,f,c
  3505   0013E0  5004               	movf	(___awmod@divisor+1)^0,w,c
  3506   0013E2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3507   0013E4                     l1678:
  3508   0013E4  90D8               	bcf	status,0,c
  3509   0013E6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3510   0013E8  3203               	rrcf	___awmod@divisor^0,f,c
  3511   0013EA  2E05               	decfsz	___awmod@counter^0,f,c
  3512   0013EC  EFE3  F009         	goto	l1674
  3513   0013F0                     l1682:
  3514   0013F0  5006               	movf	___awmod@sign^0,w,c
  3515   0013F2  B4D8               	btfsc	status,2,c
  3516   0013F4  EFFE  F009         	goto	u771
  3517   0013F8  EF00  F00A         	goto	u770
  3518   0013FC                     u771:
  3519   0013FC  EF04  F00A         	goto	l1686
  3520   001400                     u770:
  3521   001400  6C01               	negf	___awmod@dividend^0,c
  3522   001402  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3523   001404  B0D8               	btfsc	status,0,c
  3524   001406  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3525   001408                     l1686:
  3526   001408  C001  F001         	movff	___awmod@dividend,?___awmod
  3527   00140C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3528   001410  0012               	return		;funcret
  3529   001412                     __end_of___awmod:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function ___awdiv *****************
  3533 ;; Defined at:
  3534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  dividend        2    0[COMRAM] int 
  3537 ;;  divisor         2    2[COMRAM] int 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  quotient        2    6[COMRAM] int 
  3540 ;;  sign            1    5[COMRAM] unsigned char 
  3541 ;;  counter         1    4[COMRAM] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  2    0[COMRAM] int 
  3544 ;; Registers used:
  3545 ;;		wreg, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;Total ram usage:        8 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_dtoa
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text31
  3565   0011E4                     __ptext31:
  3566                           	callstack 0
  3567   0011E4                     ___awdiv:
  3568                           	callstack 26
  3569   0011E4  0E00               	movlw	0
  3570   0011E6  6E06               	movwf	___awdiv@sign^0,c
  3571   0011E8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3572   0011EA  EFFB  F008         	goto	u660
  3573   0011EE  EFF9  F008         	goto	u661
  3574   0011F2                     u661:
  3575   0011F2  EF01  F009         	goto	l1618
  3576   0011F6                     u660:
  3577   0011F6  6C03               	negf	___awdiv@divisor^0,c
  3578   0011F8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3579   0011FA  B0D8               	btfsc	status,0,c
  3580   0011FC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3581   0011FE  0E01               	movlw	1
  3582   001200  6E06               	movwf	___awdiv@sign^0,c
  3583   001202                     l1618:
  3584   001202  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3585   001204  EF08  F009         	goto	u670
  3586   001208  EF06  F009         	goto	u671
  3587   00120C                     u671:
  3588   00120C  EF0E  F009         	goto	l1624
  3589   001210                     u670:
  3590   001210  6C01               	negf	___awdiv@dividend^0,c
  3591   001212  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3592   001214  B0D8               	btfsc	status,0,c
  3593   001216  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3594   001218  0E01               	movlw	1
  3595   00121A  1A06               	xorwf	___awdiv@sign^0,f,c
  3596   00121C                     l1624:
  3597   00121C  0E00               	movlw	0
  3598   00121E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3599   001220  0E00               	movlw	0
  3600   001222  6E07               	movwf	___awdiv@quotient^0,c
  3601   001224  5003               	movf	___awdiv@divisor^0,w,c
  3602   001226  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3603   001228  B4D8               	btfsc	status,2,c
  3604   00122A  EF19  F009         	goto	u681
  3605   00122E  EF1B  F009         	goto	u680
  3606   001232                     u681:
  3607   001232  EF43  F009         	goto	l1646
  3608   001236                     u680:
  3609   001236  0E01               	movlw	1
  3610   001238  6E05               	movwf	___awdiv@counter^0,c
  3611   00123A  EF23  F009         	goto	l1632
  3612   00123E                     l1630:
  3613   00123E  90D8               	bcf	status,0,c
  3614   001240  3603               	rlcf	___awdiv@divisor^0,f,c
  3615   001242  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3616   001244  2A05               	incf	___awdiv@counter^0,f,c
  3617   001246                     l1632:
  3618   001246  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3619   001248  EF28  F009         	goto	u691
  3620   00124C  EF2A  F009         	goto	u690
  3621   001250                     u691:
  3622   001250  EF1F  F009         	goto	l1630
  3623   001254                     u690:
  3624   001254                     l1634:
  3625   001254  90D8               	bcf	status,0,c
  3626   001256  3607               	rlcf	___awdiv@quotient^0,f,c
  3627   001258  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3628   00125A  5003               	movf	___awdiv@divisor^0,w,c
  3629   00125C  5C01               	subwf	___awdiv@dividend^0,w,c
  3630   00125E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3631   001260  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3632   001262  A0D8               	btfss	status,0,c
  3633   001264  EF36  F009         	goto	u701
  3634   001268  EF38  F009         	goto	u700
  3635   00126C                     u701:
  3636   00126C  EF3D  F009         	goto	l1642
  3637   001270                     u700:
  3638   001270  5003               	movf	___awdiv@divisor^0,w,c
  3639   001272  5E01               	subwf	___awdiv@dividend^0,f,c
  3640   001274  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3641   001276  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3642   001278  8007               	bsf	___awdiv@quotient^0,0,c
  3643   00127A                     l1642:
  3644   00127A  90D8               	bcf	status,0,c
  3645   00127C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3646   00127E  3203               	rrcf	___awdiv@divisor^0,f,c
  3647   001280  2E05               	decfsz	___awdiv@counter^0,f,c
  3648   001282  EF2A  F009         	goto	l1634
  3649   001286                     l1646:
  3650   001286  5006               	movf	___awdiv@sign^0,w,c
  3651   001288  B4D8               	btfsc	status,2,c
  3652   00128A  EF49  F009         	goto	u711
  3653   00128E  EF4B  F009         	goto	u710
  3654   001292                     u711:
  3655   001292  EF4F  F009         	goto	l1650
  3656   001296                     u710:
  3657   001296  6C07               	negf	___awdiv@quotient^0,c
  3658   001298  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3659   00129A  B0D8               	btfsc	status,0,c
  3660   00129C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3661   00129E                     l1650:
  3662   00129E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3663   0012A2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3664   0012A6  0012               	return		;funcret
  3665   0012A8                     __end_of___awdiv:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function ___lwdiv *****************
  3669 ;; Defined at:
  3670 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  dividend        2    6[COMRAM] unsigned int 
  3673 ;;  divisor         2    8[COMRAM] unsigned int 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  quotient        2   10[COMRAM] unsigned int 
  3676 ;;  counter         1   12[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  2    6[COMRAM] unsigned int 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3686 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;Total ram usage:        7 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_ADC2String
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text32
  3700   0015D8                     __ptext32:
  3701                           	callstack 0
  3702   0015D8                     ___lwdiv:
  3703                           	callstack 29
  3704   0015D8  0E00               	movlw	0
  3705   0015DA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  3706   0015DC  0E00               	movlw	0
  3707   0015DE  6E0B               	movwf	___lwdiv@quotient^0,c
  3708   0015E0  5009               	movf	___lwdiv@divisor^0,w,c
  3709   0015E2  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3710   0015E4  B4D8               	btfsc	status,2,c
  3711   0015E6  EFF7  F00A         	goto	u1061
  3712   0015EA  EFF9  F00A         	goto	u1060
  3713   0015EE                     u1061:
  3714   0015EE  EF21  F00B         	goto	l751
  3715   0015F2                     u1060:
  3716   0015F2  0E01               	movlw	1
  3717   0015F4  6E0D               	movwf	___lwdiv@counter^0,c
  3718   0015F6  EF01  F00B         	goto	l1912
  3719   0015FA                     l1910:
  3720   0015FA  90D8               	bcf	status,0,c
  3721   0015FC  3609               	rlcf	___lwdiv@divisor^0,f,c
  3722   0015FE  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3723   001600  2A0D               	incf	___lwdiv@counter^0,f,c
  3724   001602                     l1912:
  3725   001602  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  3726   001604  EF06  F00B         	goto	u1071
  3727   001608  EF08  F00B         	goto	u1070
  3728   00160C                     u1071:
  3729   00160C  EFFD  F00A         	goto	l1910
  3730   001610                     u1070:
  3731   001610                     l1914:
  3732   001610  90D8               	bcf	status,0,c
  3733   001612  360B               	rlcf	___lwdiv@quotient^0,f,c
  3734   001614  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3735   001616  5009               	movf	___lwdiv@divisor^0,w,c
  3736   001618  5C07               	subwf	___lwdiv@dividend^0,w,c
  3737   00161A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3738   00161C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3739   00161E  A0D8               	btfss	status,0,c
  3740   001620  EF14  F00B         	goto	u1081
  3741   001624  EF16  F00B         	goto	u1080
  3742   001628                     u1081:
  3743   001628  EF1B  F00B         	goto	l1922
  3744   00162C                     u1080:
  3745   00162C  5009               	movf	___lwdiv@divisor^0,w,c
  3746   00162E  5E07               	subwf	___lwdiv@dividend^0,f,c
  3747   001630  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  3748   001632  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3749   001634  800B               	bsf	___lwdiv@quotient^0,0,c
  3750   001636                     l1922:
  3751   001636  90D8               	bcf	status,0,c
  3752   001638  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3753   00163A  3209               	rrcf	___lwdiv@divisor^0,f,c
  3754   00163C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  3755   00163E  EF08  F00B         	goto	l1914
  3756   001642                     l751:
  3757   001642  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  3758   001646  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3759   00164A  0012               	return		;funcret
  3760   00164C                     __end_of___lwdiv:
  3761                           	callstack 0
  3762                           
  3763                           	psect	rparam
  3764   000000                     
  3765                           	psect	config
  3766                           
  3767                           ;Config register CONFIG1L @ 0x300000
  3768                           ;	External Oscillator mode Selection bits
  3769                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3770                           ;	Power-up default value for COSC bits
  3771                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3772   300000                     	org	3145728
  3773   300000  AA                 	db	170
  3774                           
  3775                           ;Config register CONFIG1H @ 0x300001
  3776                           ;	unspecified, using default values
  3777                           ;	Clock Out Enable bit
  3778                           ;	CLKOUTEN = 0x1, unprogrammed default
  3779                           ;	Clock Switch Enable bit
  3780                           ;	CSWEN = 0x1, unprogrammed default
  3781                           ;	Fail-Safe Clock Monitor Enable bit
  3782                           ;	FCMEN = 0x1, unprogrammed default
  3783   300001                     	org	3145729
  3784   300001  FF                 	db	255
  3785                           
  3786                           ;Config register CONFIG3L @ 0x300004
  3787                           ;	WDT Period Select bits
  3788                           ;	WDTCPS = 0x1F, unprogrammed default
  3789                           ;	WDT operating mode
  3790                           ;	WDTE = OFF, WDT Disabled
  3791   300004                     	org	3145732
  3792   300004  9F                 	db	159
  3793                           
  3794                           ;Config register CONFIG3H @ 0x300005
  3795                           ;	unspecified, using default values
  3796                           ;	WDT Window Select bits
  3797                           ;	WDTCWS = 0x7, unprogrammed default
  3798                           ;	WDT input clock selector
  3799                           ;	WDTCCS = 0x7, unprogrammed default
  3800   300005                     	org	3145733
  3801   300005  FF                 	db	255
  3802                           tosu	equ	0xFFF
  3803                           tosh	equ	0xFFE
  3804                           tosl	equ	0xFFD
  3805                           stkptr	equ	0xFFC
  3806                           pclatu	equ	0xFFB
  3807                           pclath	equ	0xFFA
  3808                           pcl	equ	0xFF9
  3809                           tblptru	equ	0xFF8
  3810                           tblptrh	equ	0xFF7
  3811                           tblptrl	equ	0xFF6
  3812                           tablat	equ	0xFF5
  3813                           prodh	equ	0xFF4
  3814                           prodl	equ	0xFF3
  3815                           indf0	equ	0xFEF
  3816                           postinc0	equ	0xFEE
  3817                           postdec0	equ	0xFED
  3818                           preinc0	equ	0xFEC
  3819                           plusw0	equ	0xFEB
  3820                           fsr0h	equ	0xFEA
  3821                           fsr0l	equ	0xFE9
  3822                           wreg	equ	0xFE8
  3823                           indf1	equ	0xFE7
  3824                           postinc1	equ	0xFE6
  3825                           postdec1	equ	0xFE5
  3826                           preinc1	equ	0xFE4
  3827                           plusw1	equ	0xFE3
  3828                           fsr1h	equ	0xFE2
  3829                           fsr1l	equ	0xFE1
  3830                           bsr	equ	0xFE0
  3831                           indf2	equ	0xFDF
  3832                           postinc2	equ	0xFDE
  3833                           postdec2	equ	0xFDD
  3834                           preinc2	equ	0xFDC
  3835                           plusw2	equ	0xFDB
  3836                           fsr2h	equ	0xFDA
  3837                           fsr2l	equ	0xFD9
  3838                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        1
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     76      87
    BANK0           160      0     132
    BANK1           256    208     208
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADC2String@buf	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), sendAllReadings@buffer(COMRAM[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1165$buffer	PTR unsigned char  size(2) Largest target is 0

    S1165$source	PTR const unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK1[50]), main@buf(BANK1[50]), main@green_char(BANK1[50]), main@red_char(BANK1[50]), 
		 -> sendAllReadings@buffer(COMRAM[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[5]), STR_2(CODE[6]), STR_3(CODE[7]), STR_4(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@blue_char(BANK1[50]), main@buf(BANK1[50]), main@green_char(BANK1[50]), main@red_char(BANK1[50]), 
		 -> sendAllReadings@buffer(COMRAM[10]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[5]), STR_2(CODE[6]), STR_3(CODE[7]), STR_4(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[5]), STR_2(CODE[6]), STR_3(CODE[7]), STR_4(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[5]), STR_2(CODE[6]), STR_3(CODE[7]), STR_4(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_ADC2String
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _ADC2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               208   208      0   17381
                                              0 BANK1    208   208      0
                         _ADC2String
                         _ADC_getval
                           _ADC_init
                   _color_click_init
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                         _initUSART4
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_getval                                           4     2      2      46
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC2String                                          10     6      4    8741
                                             66 COMRAM    10     6      4
                            ___lwdiv
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7    7222
                                             46 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    6413
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3    6054
                                             31 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     947
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    3775
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4    2172
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2    1083
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC2String
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _ADC_getval
   _ADC_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Red
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _initUSART4
   _sendStringSerial4
     _sendCharSerial4
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D0      D0       7       81.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      84       5       82.5%
BITBIGSFRh          79      0       0      32        0.0%
BITBIGSFRlhlhh      6E      0       0      38        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4C      57       1       91.6%
BITBIGSFRlllhh      36      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      45        0.0%
BITBIGSFRlllll      26      0       0      49        0.0%
BITBIGSFRlhlll      20      0       0      41        0.0%
BITBIGSFRlhhhhl     17      0       0      35        0.0%
BITBIGSFRlllhll      F      0       0      47        0.0%
BITBIGSFRlllhlh      C      0       0      44        0.0%
BITBIGSFRllh         C      0       0      42        0.0%
BITBIGSFRlllhll      9      0       0      46        0.0%
BITBIGSFRlhlhll      8      0       0      39        0.0%
BITBIGSFRlhhhhl      7      0       0      34        0.0%
BITBIGSFRllllh       6      0       0      48        0.0%
BITBIGSFRlhhl        6      0       0      37        0.0%
BITBIGSFRlhhhl       3      0       0      36        0.0%
BITBIGSFRlhhhhh      1      0       0      33        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AB      50        0.0%
DATA                 0      0     1AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Feb 29 12:10:39 2024

               _color_read_Red 164C                _color_read_Blue 16EC                             l20 1918  
                           l21 1936                             l15 1A06                             l40 18A2  
                           l18 190A                             l43 19CE                             l52 173A  
                           l46 169A                             l49 16EA                             l82 1962  
                           l91 1A34                             l85 1988                             l94 1A3E  
                           l79 1960                             l88 1A48                             l97 1A2A  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003               _color_read_Green 169C  
                          l100 177C                            l206 1A0A                            l215 186E  
                          l143 1120                            l209 1A1E                            l260 19AE  
                          l504 1410                            l257 154C                            l197 19EC  
                          l491 12A6                            l751 1642                            l758 164A  
                          l961 15BC                            l938 17FA                            l963 15D6  
                          l958 157E                            l966 1006                            l983 14B6  
                          l979 110E                            l987 14BE                            u610 12B8  
                          u611 12B4                            u700 1270                            u620 12C8  
                          u701 126C                            u621 12C4                            u710 1296  
                          u630 12EE                            u711 1292                            u631 12EA  
                          u720 1374                            u640 1320                            u800 15BC  
                          u721 1370                            u641 131C                            u801 15B8  
                          u730 138E                            u650 1836                            u810 15CA  
                          u731 138A                            u651 1832                            u811 15C6  
                          u660 11F6                            u740 13A8                            u820 18B2  
                          u900 10C8                            u661 11F2                            u741 13A4  
                          u821 18AE                            u901 10C4                            u670 1210  
                          u750 13C6                            u910 10D6                            u830 0FBC  
                          u671 120C                            u751 13C2                            u911 10D2  
                          u831 0FB6                            u680 1236                            u760 13DC  
                          u920 10E6                            u840 0FBE                            u681 1232  
                          u761 13D8                            u921 10E2                            u690 1254  
                          u770 1400                            u850 0FD8                            u930 1440  
                          u691 1250                            u771 13FC                            u851 0FD4  
                          u931 143C                            u780 155C                            u860 0FEE  
                          u940 14B6                            u781 1558                            u861 0FEA  
                          u941 14B2                            u790 1576                            u870 108C  
                          u950 1972                            u791 1572                            u871 1088  
                          u951 196E                            u880 109E                            u960 1988  
                          u881 109A                            u961 1984                            u890 10AE  
                          u970 0E4C                            u891 10AA                            u971 0E48  
                          u980 0EC8                            u981 0EC4                            u990 0EEA  
                          u991 0EE6                            _abs 18A4                            _pad 154E  
                 ___awmod@sign 0006                            wreg 0FE8                           l1002 0FA6  
                         l1012 18BE                           l1015 18D6                           l1008 17BE  
                         l2010 1114                           l1027 1360                           l1035 1836  
                         ?_abs 0007                           l2020 1164                           l2012 1118  
                         l1038 1A4A                           l2030 11C4                           l2022 117C  
                         l2014 111C                           l2104 0EAA                           l2032 11D0  
                         l2024 1194                           l2016 111E                           l2008 1110  
                         l2026 11AC                           l2018 1150                           l2028 11B8  
                         l1600 1816                           l1610 11E4                           l1602 181A  
                         l1620 1210                           l1612 11E8                           l1700 159A  
                         l1604 198A                           l1630 123E                           l1622 1218  
                         l1614 11F6                           l1702 159E                           l1710 0FA8  
                         l1606 19A6                           l1640 1278                           l1632 1246  
                         l1624 121C                           l1616 11FE                           l1704 15CA  
                         l1720 0FDE                           l1712 0FAC                           l1800 0EC8  
                         l1650 129E                           l1642 127A                           l1634 1254  
                         l1626 1224                           l1618 1202                           l1706 18A4  
                         l1730 1018                           l1722 0FEE                           l1714 0FC0  
                         l1810 0F1E                           l1802 0EDC                           l1644 1280  
                         l1636 125A                           l1628 1236                           l1660 137C  
                         l1708 18B2                           l1732 101E                           l1740 1072  
                         l1724 0FFA                           l1716 0FC8                           l1820 0F74  
                         l1812 0F3E                           l1804 0EEA                           l1900 1A0A  
                         l1910 15FA                           l1638 1270                           l1646 1286  
                         l1670 13B0                           l1662 1380                           l1654 1362  
                         l1590 12EE                           l1582 12A8                           l1742 108C  
                         l1750 10D6                           l1734 104C                           l1726 1002  
                         l1718 0FD8                           l1814 0F56                           l1806 0EF4  
                         l1902 1A1A                           l1920 1634                           l1912 1602  
                         l1904 15D8                           l1648 1296                           l1680 13EA  
                         l1672 13B8                           l1664 138E                           l1656 1366  
                         l1592 1320                           l1584 12B8                           l1752 10E6  
                         l1744 109E                           l1736 1050                           l1728 100E  
                         l1760 1412                           l1816 0F60                           l1808 0EFE  
                         l1824 0F80                           l1840 1A26                           l1922 1636  
                         l1914 1610                           l1906 15E0                           l1674 13C6  
                         l1682 13F0                           l1666 1396                           l1658 1374  
                         l1586 12C8                           l1690 154E                           l1754 10EC  
                         l1746 10AE                           l1738 1056                           l1770 1484  
                         l1762 141A                           l1850 1796                           l1930 1A00  
                         l1834 1A40                           l1842 1A36                           l1924 163C  
                         l1916 1616                           l1908 15F2                           l1684 1400  
                         l1676 13DC                           l1668 13A8                           l1588 12D2  
                         l1596 17FC                           l1692 155C                           l1756 10F8  
                         l1748 10C8                           l1764 1440                           l1772 148C  
                         l1780 0E4C                           l1852 17B6                           l1940 192E  
                         l1932 1A02                           l1860 1948                           l1836 1A44  
                         l1844 1A3A                           l1918 162C                           l1686 1408  
                         l1678 13E4                           l1598 1808                           l1694 1568  
                         l1766 1448                           l1790 0E6E                           l1782 0E54  
                         l1846 177E                           l1934 1A04                           l1926 19EE  
                         l1862 194A                           l1774 1962                           l1838 1A22  
                         l1950 188E                           l1870 1A2C                           l1696 1576  
                         l1768 1464                           l1792 0E7A                           l1784 0E60  
                         l1848 1786                           l1936 1908                           l1928 19F8  
                         l1864 194C                           l1856 1938                           l1776 1972  
                         l1952 1898                           l1944 1870                           l1880 1752  
                         l1872 1A30                           l1960 169C                           l1698 158A  
                         l1786 0E64                           l1778 0E26                           l1890 17CC  
                         l1938 191E                           l1866 194E                           l1858 1942  
                         l1946 1874                           l1882 1778                           l1874 173E  
                         l1962 16E2                           l1954 164C                           l1796 0E82  
                         l1788 0E6C                           l1892 17D4                           l1868 19B2  
                         l1948 187E                           l1884 177A                           l1876 1742  
                         l1956 1692                           l1980 19E8                           l1972 19D0  
                         l1798 0EB8                           l1894 17DC                           l1878 174A  
                         l1966 16EC                           l1982 19EA                           l1974 19DA  
                         l1990 1838                           ?_pad 000E                           l1896 17EC  
                         l1888 17C0                           l1984 14C0                           l1968 1732  
                         l1976 19DC                           l1992 183C                           l1986 14DC  
                         l1978 19E6                           l1994 184A                           l1988 152C  
                         l1996 184E                           l1998 1856                           STR_1 0E20  
                         STR_2 0E1A                           STR_3 0E13                           STR_4 0E01  
                         u1000 0F1E                           u1001 0F1A                           u1010 0F3E  
                         u1011 0F3A                           u1020 17B6                           u1100 186E  
                         u1021 17B2                           u1101 186A                           u1030 1766  
                         u1031 175E                           u1050 1A1A                           u1051 1A16  
                         u1060 15F2                           u1061 15EE                           u1070 1610  
                         u1071 160C                           u1080 162C                           u1048 1768  
                         u1081 1628                           u1090 1918                           u1091 1914  
                 _BAUD4CONbits 0EE9                           u1177 1850                           u1187 1884  
                         abs@a 0007                           _dbuf 00C4                           _main 1110  
                         _dtoa 0FA8                           _prec 004F                           pad@i 0013  
                         pad@p 0010                           fsr1h 0FE2                           fsr2h 0FDA  
                         indf2 0FDF                           fsr1l 0FE1                           fsr2l 0FD9  
                         prodh 0FF4                           prodl 0FF3                           start 0000  
             __end_of_ADC_init 1A08         __end_of_color_read_Red 169C                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0012                          ?_main 0001  
                        ?_dtoa 0015                          _ADPCH 0F5F                __end_of___awdiv 12A8  
              __end_of___awmod 1412                ___awdiv@divisor 0003                __end_of___lwdiv 164C  
              ___awdiv@counter 0005                   vfpfcnvrt@fmt 0021                   main@red_char 0132  
      __end_of_sendCharSerial4 1A20     __end_of_I2C_2_Master_Start 1A4A     __end_of_I2C_2_Master_Write 1A2C  
                        _flags 0051            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 12A8                          _fputs 17FC                          pad@fp 000E  
                        _width 004D                          _putch 1A4A                          dtoa@d 0016  
                        dtoa@i 001E                          dtoa@p 001A                          dtoa@s 001D  
                        dtoa@w 001B                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 17FC        __end_of_color_read_Blue 173C          _I2C_2_Master_RepStart 1A2C  
              ?_color_read_Red 0005                __initialization 18D8                   __end_of_main 11E4  
                 __end_of_dtoa 1110                   ??_ADC2String 0047                         ??_main 004D  
                       ??_dtoa 0018                  __activetblptr 0003                  main@blue_char 0164  
   __end_of_read_prec_or_width 14C0                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                  ADC2String@buf 0043               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RD5PPS 0E6F            ADC2String@frac_part 0049                         _RD6PPS 0E70  
                vfpfcnvrt@done 0029       __end_of_color_click_init 18A4                         _RX4PPS 0E15  
           __end_of_ADC2String 154E                         _TX4REG 0EE4                   ??_ADC_getval 0003  
                 vfprintf@cfmt 002E                         ___wmul 198A                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___lwdiv 000B           read_prec_or_width@ap 0008  
                       clear_0 18F0                         clear_1 18FC               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                         isa$std 0001                ___awmod@counter 0005  
                       pad@buf 000F                         dtoa@fp 0015                         fputc@c 0001  
                       fputs@c 000B                         fputs@i 000C                   __pdataCOMRAM 0057  
                       fputs@s 0009                   __mediumconst 0000                         tblptrh 0FF7  
                       tblptrl 0FF6                         tblptru 0FF8                      ?_ADC_init 0001  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 17C0  
                    ??_sprintf 0036             __end_of_ADC_getval 1938                     __accesstop 0060  
      __end_of__initialization 1902       __end_of_color_read_Green 16EC         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                __end_of_fputc 1362                  __end_of_fputs 1838                  __end_of_putch 1A4C  
                   ??_ADC_init 0001                        ??_fputc 0004                        ??_fputs 000B  
                      ??_putch 0001                     __pbssBANK0 0060              _color_writetoaddr 19B0  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
               main@green_char 0196                        _SP4BRGH 0EE6                        _SP4BRGL 0EE5  
            main@battery_level 01C8                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 19D0  
                    _ADREFbits 0F58             _I2C_2_Master_Start 1A40                     _initUSART4 19D0  
           _I2C_2_Master_Write 1A20                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___awdiv 11E4  
                      ___awmod 1362            ?_I2C_2_Master_Start 0001                        ___lwdiv 15D8  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002B                   __psmallconst 0E00  
                      __pcinit 18D8                        __ramtop 0E00                        __ptext0 1110  
                      __ptext1 1838                        __ptext2 1A08                        __ptext3 19D0  
                      __ptext4 164C                        __ptext5 169C                        __ptext6 16EC  
                      __ptext7 1A2C                        __ptext8 173C                        __ptext9 1870  
        read_prec_or_width@fmt 0007               ___awmod@dividend 0001                  _RxBufWriteCnt 0056  
                      main@buf 0100                        _sprintf 17C0                        main@red 01CA  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1902  
             ADC_getval@tmpval 0003                        fputc@fp 0003                        fputs@fp 000A  
            ?_color_click_init 0001             _read_prec_or_width 1412             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 0FA8                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0025                     ??_vfprintf 002E                      _TRISDbits 0F84  
                    _TRISFbits 0F86           ??_read_prec_or_width 0009       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                   _EUSART4RXbuf 00B0                   _EUSART4TXbuf 0060  
            ?_color_read_Green 0005                    ?_initUSART4 0001      sendCharSerial4@charToSend 0001  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 0022                    vfpfcnvrt@cp 002A  
                  vfpfcnvrt@fp 0020                 __end_of___wmul 19B0                  __pidataCOMRAM 1A4C  
          start_initialization 18D8                    __end_of_abs 18D8                    __end_of_pad 15D8  
                _TxBufWriteCnt 0054            color_read_Green@tmp 000A                    vfprintf@fmt 002C  
           ADC2String@int_part 004B                       ??___wmul 0005                    __pbssCOMRAM 004D  
                __pcstackBANK1 0100               ___lwdiv@dividend 0007                      _dtoa$1244 0018  
                     ?___awdiv 0001                       ?___awmod 0001                       ?___lwdiv 0007  
                 _readingIndex 0052           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              _I2C_2_Master_Idle 1962              _I2C_2_Master_Init 1938  
            _I2C_2_Master_Read 173C              _I2C_2_Master_Stop 1A36                   _RxBufReadCnt 0055  
                     _ADC_init 19EE             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
                     ?_sprintf 002F              _sendStringSerial4 1838            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 0F7C              ADC2String@ADC_val 0045  
           ?_sendStringSerial4 0002                       _PIE4bits 0E2D                       _PIR4bits 0E37  
            ??_sendCharSerial4 0001                       _SSP2CON2 0EDA            ??_sendStringSerial4 0004  
                     _SSP2STAT 0ED8                     _ADC2String 14C0                      _vfpfcnvrt 0E26  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 198A      __end_of_I2C_2_Master_Init 1962  
    __end_of_I2C_2_Master_Read 177E              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 1A40  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 009C                      main@green 01CE  
            ??_color_read_Blue 0007                   _TxBufReadCnt 0053      __end_of_sendStringSerial4 1870  
__end_of_I2C_2_Master_RepStart 1A36             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     _ADC_getval 1908                     vfprintf@ap 002D  
                     __Lrparam 0000                     vfprintf@fp 002B                     ?_vfpfcnvrt 0020  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                       _dataFlag 0057  
                   sprintf@fmt 0031                ___lwdiv@divisor 0009             __end_of_initUSART4 19EE  
              ___lwdiv@counter 000D                       __ptext10 19B0                       __ptext11 1A20  
                     __ptext20 177E                       __ptext12 1A36                       __ptext21 0E26  
                     __ptext13 1A40                       __ptext30 1362                       __ptext22 1412  
                     __ptext14 1962                       __ptext31 11E4                       __ptext23 198A  
                     __ptext15 1938                       __ptext32 15D8                       __ptext24 0FA8  
                     __ptext16 19EE                       __ptext25 154E                       __ptext17 1908  
                     __ptext26 17FC                       __ptext18 14C0                       __ptext27 12A8  
                     __ptext19 17C0                       __ptext28 1A4A                       __ptext29 18A4  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA                       isa$xinst 0000  
                   _RC4STAbits 0EE7                    ?_ADC2String 0043                       _vfprintf 177E  
                     main@blue 01CC                      sprintf@ap 0036                    ?_ADC_getval 0001  
                  ??_vfpfcnvrt 0023               _color_click_init 1870                       sprintf@f 0037  
                     sprintf@s 002F                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                   _TX4STAbits 0EE8                _sendCharSerial4 1A08  
