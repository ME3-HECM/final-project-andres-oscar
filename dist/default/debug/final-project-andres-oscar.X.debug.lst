

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 22:25:32 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 21/07/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataBANK0
    99   012812                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _dataFlag
   103   012812  01                 	db	1
   104   000000                     _TX4REG	set	3812
   105   000000                     _RC4STAbits	set	3815
   106   000000                     _SP4BRGH	set	3814
   107   000000                     _LATFbits	set	3966
   108   000000                     _LATHbits	set	3968
   109   000000                     _TRISFbits	set	3974
   110   000000                     _TRISAbits	set	3969
   111   000000                     _TRISEbits	set	3973
   112   000000                     _TRISGbits	set	3975
   113   000000                     _TRISDbits	set	3972
   114   000000                     _PORTFbits	set	3982
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _LATAbits	set	3961
   123   000000                     _LATEbits	set	3965
   124   000000                     _LATGbits	set	3967
   125   000000                     _LATCbits	set	3963
   126   000000                     _LATDbits	set	3964
   127   000000                     _CCPR2H	set	4006
   128   000000                     _CCPR1H	set	4010
   129   000000                     _RC4REG	set	3811
   130   000000                     _SP4BRGL	set	3813
   131   000000                     _TX4STAbits	set	3816
   132   000000                     _BAUD4CONbits	set	3817
   133   000000                     _SSP2CON2	set	3802
   134   000000                     _CCPR4H	set	3873
   135   000000                     _CCPR3H	set	3877
   136   000000                     _SSP2STAT	set	3800
   137   000000                     _ANSELFbits	set	3764
   138   000000                     _SSP2BUF	set	3797
   139   000000                     _PIE4bits	set	3629
   140   000000                     _PIR4bits	set	3639
   141   000000                     _RC0PPS	set	3682
   142   000000                     _RC7PPS	set	3689
   143   000000                     _RD5PPS	set	3695
   144   000000                     _RE2PPS	set	3700
   145   000000                     _RD6PPS	set	3696
   146   000000                     _CCP1CONbits	set	4011
   147   000000                     _CCPTMRS0bits	set	4013
   148   000000                     _T2PR	set	4028
   149   000000                     _T2CONbits	set	4029
   150   000000                     _CCP2CONbits	set	4007
   151   000000                     _CCP3CONbits	set	3878
   152   000000                     _ADREFbits	set	3928
   153   000000                     _CCP4CONbits	set	3874
   154   000000                     _TRISHbits	set	3976
   155   000000                     _TRISCbits	set	3971
   156   000000                     _ADPCH	set	3935
   157   000000                     _ADRESH	set	3940
   158   000000                     _ADCON0bits	set	3936
   159   000000                     _RE4PPS	set	3702
   160   000000                     _RG6PPS	set	3720
   161   000000                     _T2CLKCONbits	set	4031
   162   000000                     _T2HLTbits	set	4030
   163                           
   164                           	psect	mediumconst
   165   00FEAA                     __pmediumconst:
   166                           	callstack 0
   167   00FEAA  00                 	db	0
   168   00FEAB                     STR_11:
   169                           
   170                           ; BSR set to: 15
   171   00FEAB  43                 	db	67	;'C'
   172   00FEAC  61                 	db	97	;'a'
   173   00FEAD  6C                 	db	108	;'l'
   174   00FEAE  69                 	db	105	;'i'
   175   00FEAF  62                 	db	98	;'b'
   176   00FEB0  72                 	db	114	;'r'
   177   00FEB1  61                 	db	97	;'a'
   178   00FEB2  74                 	db	116	;'t'
   179   00FEB3  69                 	db	105	;'i'
   180   00FEB4  6F                 	db	111	;'o'
   181   00FEB5  6E                 	db	110	;'n'
   182   00FEB6  20                 	db	32
   183   00FEB7  73                 	db	115	;'s'
   184   00FEB8  74                 	db	116	;'t'
   185   00FEB9  61                 	db	97	;'a'
   186   00FEBA  74                 	db	116	;'t'
   187   00FEBB  65                 	db	101	;'e'
   188   00FEBC  20                 	db	32
   189   00FEBD  3D                 	db	61	;'='
   190   00FEBE  20                 	db	32
   191   00FEBF  61                 	db	97	;'a'
   192   00FEC0  6D                 	db	109	;'m'
   193   00FEC1  62                 	db	98	;'b'
   194   00FEC2  69                 	db	105	;'i'
   195   00FEC3  65                 	db	101	;'e'
   196   00FEC4  6E                 	db	110	;'n'
   197   00FEC5  74                 	db	116	;'t'
   198   00FEC6  20                 	db	32
   199   00FEC7  6C                 	db	108	;'l'
   200   00FEC8  69                 	db	105	;'i'
   201   00FEC9  67                 	db	103	;'g'
   202   00FECA  68                 	db	104	;'h'
   203   00FECB  74                 	db	116	;'t'
   204   00FECC  00                 	db	0
   205   00FECD                     STR_7:
   206                           
   207                           ; BSR set to: 15
   208   00FECD  43                 	db	67	;'C'
   209   00FECE  61                 	db	97	;'a'
   210   00FECF  6C                 	db	108	;'l'
   211   00FED0  69                 	db	105	;'i'
   212   00FED1  62                 	db	98	;'b'
   213   00FED2  72                 	db	114	;'r'
   214   00FED3  61                 	db	97	;'a'
   215   00FED4  74                 	db	116	;'t'
   216   00FED5  69                 	db	105	;'i'
   217   00FED6  6F                 	db	111	;'o'
   218   00FED7  6E                 	db	110	;'n'
   219   00FED8  20                 	db	32
   220   00FED9  73                 	db	115	;'s'
   221   00FEDA  74                 	db	116	;'t'
   222   00FEDB  61                 	db	97	;'a'
   223   00FEDC  74                 	db	116	;'t'
   224   00FEDD  65                 	db	101	;'e'
   225   00FEDE  20                 	db	32
   226   00FEDF  3D                 	db	61	;'='
   227   00FEE0  20                 	db	32
   228   00FEE1  67                 	db	103	;'g'
   229   00FEE2  72                 	db	114	;'r'
   230   00FEE3  65                 	db	101	;'e'
   231   00FEE4  65                 	db	101	;'e'
   232   00FEE5  6E                 	db	110	;'n'
   233   00FEE6  20                 	db	32
   234   00FEE7  0A                 	db	10
   235   00FEE8  0D                 	db	13
   236   00FEE9  00                 	db	0
   237   00FEEA                     STR_9:
   238                           
   239                           ; BSR set to: 15
   240   00FEEA  43                 	db	67	;'C'
   241   00FEEB  61                 	db	97	;'a'
   242   00FEEC  6C                 	db	108	;'l'
   243   00FEED  69                 	db	105	;'i'
   244   00FEEE  62                 	db	98	;'b'
   245   00FEEF  72                 	db	114	;'r'
   246   00FEF0  61                 	db	97	;'a'
   247   00FEF1  74                 	db	116	;'t'
   248   00FEF2  69                 	db	105	;'i'
   249   00FEF3  6F                 	db	111	;'o'
   250   00FEF4  6E                 	db	110	;'n'
   251   00FEF5  20                 	db	32
   252   00FEF6  73                 	db	115	;'s'
   253   00FEF7  74                 	db	116	;'t'
   254   00FEF8  61                 	db	97	;'a'
   255   00FEF9  74                 	db	116	;'t'
   256   00FEFA  65                 	db	101	;'e'
   257   00FEFB  3D                 	db	61	;'='
   258   00FEFC  20                 	db	32
   259   00FEFD  62                 	db	98	;'b'
   260   00FEFE  6C                 	db	108	;'l'
   261   00FEFF  75                 	db	117	;'u'
   262   00FF00  65                 	db	101	;'e'
   263   00FF01  20                 	db	32
   264   00FF02  0A                 	db	10
   265   00FF03  0D                 	db	13
   266   00FF04  00                 	db	0
   267   00FF05                     
   268                           ; BSR set to: 15
   269   00FF05  44                 	db	68	;'D'
   270   00FF06  65                 	db	101	;'e'
   271   00FF07  74                 	db	116	;'t'
   272   00FF08  65                 	db	101	;'e'
   273   00FF09  63                 	db	99	;'c'
   274   00FF0A  74                 	db	116	;'t'
   275   00FF0B  65                 	db	101	;'e'
   276   00FF0C  64                 	db	100	;'d'
   277   00FF0D  20                 	db	32
   278   00FF0E  63                 	db	99	;'c'
   279   00FF0F  6F                 	db	111	;'o'
   280   00FF10  6C                 	db	108	;'l'
   281   00FF11  6F                 	db	111	;'o'
   282   00FF12  72                 	db	114	;'r'
   283   00FF13  3A                 	db	58	;':'
   284   00FF14  20                 	db	32
   285   00FF15  52                 	db	82	;'R'
   286   00FF16  65                 	db	101	;'e'
   287   00FF17  64                 	db	100	;'d'
   288   00FF18  2D                 	db	45
   289   00FF19  69                 	db	105	;'i'
   290   00FF1A  73                 	db	115	;'s'
   291   00FF1B  68                 	db	104	;'h'
   292   00FF1C  0A                 	db	10
   293   00FF1D  0D                 	db	13
   294   00FF1E  00                 	db	0
   295   00FF1F                     STR_13:
   296                           
   297                           ; BSR set to: 15
   298   00FF1F  43                 	db	67	;'C'
   299   00FF20  41                 	db	65	;'A'
   300   00FF21  4C                 	db	76	;'L'
   301   00FF22  49                 	db	73	;'I'
   302   00FF23  42                 	db	66	;'B'
   303   00FF24  52                 	db	82	;'R'
   304   00FF25  41                 	db	65	;'A'
   305   00FF26  54                 	db	84	;'T'
   306   00FF27  49                 	db	73	;'I'
   307   00FF28  4F                 	db	79	;'O'
   308   00FF29  4E                 	db	78	;'N'
   309   00FF2A  20                 	db	32
   310   00FF2B  43                 	db	67	;'C'
   311   00FF2C  4F                 	db	79	;'O'
   312   00FF2D  4D                 	db	77	;'M'
   313   00FF2E  50                 	db	80	;'P'
   314   00FF2F  4C                 	db	76	;'L'
   315   00FF30  45                 	db	69	;'E'
   316   00FF31  54                 	db	84	;'T'
   317   00FF32  45                 	db	69	;'E'
   318   00FF33  44                 	db	68	;'D'
   319   00FF34  20                 	db	32
   320   00FF35  0A                 	db	10
   321   00FF36  0D                 	db	13
   322   00FF37  00                 	db	0
   323   00FF38                     
   324                           ; BSR set to: 15
   325   00FF38  44                 	db	68	;'D'
   326   00FF39  65                 	db	101	;'e'
   327   00FF3A  74                 	db	116	;'t'
   328   00FF3B  65                 	db	101	;'e'
   329   00FF3C  63                 	db	99	;'c'
   330   00FF3D  74                 	db	116	;'t'
   331   00FF3E  65                 	db	101	;'e'
   332   00FF3F  64                 	db	100	;'d'
   333   00FF40  20                 	db	32
   334   00FF41  63                 	db	99	;'c'
   335   00FF42  6F                 	db	111	;'o'
   336   00FF43  6C                 	db	108	;'l'
   337   00FF44  6F                 	db	111	;'o'
   338   00FF45  72                 	db	114	;'r'
   339   00FF46  3A                 	db	58	;':'
   340   00FF47  20                 	db	32
   341   00FF48  47                 	db	71	;'G'
   342   00FF49  72                 	db	114	;'r'
   343   00FF4A  65                 	db	101	;'e'
   344   00FF4B  65                 	db	101	;'e'
   345   00FF4C  6E                 	db	110	;'n'
   346   00FF4D  0A                 	db	10
   347   00FF4E  0D                 	db	13
   348   00FF4F  00                 	db	0
   349   00FF50                     STR_5:
   350                           
   351                           ; BSR set to: 15
   352   00FF50  43                 	db	67	;'C'
   353   00FF51  61                 	db	97	;'a'
   354   00FF52  6C                 	db	108	;'l'
   355   00FF53  69                 	db	105	;'i'
   356   00FF54  62                 	db	98	;'b'
   357   00FF55  72                 	db	114	;'r'
   358   00FF56  61                 	db	97	;'a'
   359   00FF57  74                 	db	116	;'t'
   360   00FF58  69                 	db	105	;'i'
   361   00FF59  6F                 	db	111	;'o'
   362   00FF5A  6E                 	db	110	;'n'
   363   00FF5B  20                 	db	32
   364   00FF5C  73                 	db	115	;'s'
   365   00FF5D  74                 	db	116	;'t'
   366   00FF5E  61                 	db	97	;'a'
   367   00FF5F  74                 	db	116	;'t'
   368   00FF60  65                 	db	101	;'e'
   369   00FF61  20                 	db	32
   370   00FF62  3D                 	db	61	;'='
   371   00FF63  20                 	db	32
   372   00FF64  72                 	db	114	;'r'
   373   00FF65  65                 	db	101	;'e'
   374   00FF66  64                 	db	100	;'d'
   375   00FF67  00                 	db	0
   376   00FF68                     
   377                           ; BSR set to: 15
   378   00FF68  44                 	db	68	;'D'
   379   00FF69  65                 	db	101	;'e'
   380   00FF6A  74                 	db	116	;'t'
   381   00FF6B  65                 	db	101	;'e'
   382   00FF6C  63                 	db	99	;'c'
   383   00FF6D  74                 	db	116	;'t'
   384   00FF6E  65                 	db	101	;'e'
   385   00FF6F  64                 	db	100	;'d'
   386   00FF70  20                 	db	32
   387   00FF71  63                 	db	99	;'c'
   388   00FF72  6F                 	db	111	;'o'
   389   00FF73  6C                 	db	108	;'l'
   390   00FF74  6F                 	db	111	;'o'
   391   00FF75  72                 	db	114	;'r'
   392   00FF76  3A                 	db	58	;':'
   393   00FF77  20                 	db	32
   394   00FF78  42                 	db	66	;'B'
   395   00FF79  6C                 	db	108	;'l'
   396   00FF7A  75                 	db	117	;'u'
   397   00FF7B  65                 	db	101	;'e'
   398   00FF7C  0A                 	db	10
   399   00FF7D  0D                 	db	13
   400   00FF7E  00                 	db	0
   401   00FF7F                     
   402                           ; BSR set to: 15
   403   00FF7F  44                 	db	68	;'D'
   404   00FF80  65                 	db	101	;'e'
   405   00FF81  74                 	db	116	;'t'
   406   00FF82  65                 	db	101	;'e'
   407   00FF83  63                 	db	99	;'c'
   408   00FF84  74                 	db	116	;'t'
   409   00FF85  65                 	db	101	;'e'
   410   00FF86  64                 	db	100	;'d'
   411   00FF87  20                 	db	32
   412   00FF88  63                 	db	99	;'c'
   413   00FF89  6F                 	db	111	;'o'
   414   00FF8A  6C                 	db	108	;'l'
   415   00FF8B  6F                 	db	111	;'o'
   416   00FF8C  72                 	db	114	;'r'
   417   00FF8D  3A                 	db	58	;':'
   418   00FF8E  20                 	db	32
   419   00FF8F  52                 	db	82	;'R'
   420   00FF90  65                 	db	101	;'e'
   421   00FF91  64                 	db	100	;'d'
   422   00FF92  0A                 	db	10
   423   00FF93  0D                 	db	13
   424   00FF94  00                 	db	0
   425   00FF95                     
   426                           ; BSR set to: 15
   427   00FF95  56                 	db	86	;'V'
   428   00FF96  6F                 	db	111	;'o'
   429   00FF97  6C                 	db	108	;'l'
   430   00FF98  74                 	db	116	;'t'
   431   00FF99  61                 	db	97	;'a'
   432   00FF9A  67                 	db	103	;'g'
   433   00FF9B  65                 	db	101	;'e'
   434   00FF9C  20                 	db	32
   435   00FF9D  3D                 	db	61	;'='
   436   00FF9E  20                 	db	32
   437   00FF9F  25                 	db	37
   438   00FFA0  64                 	db	100	;'d'
   439   00FFA1  2E                 	db	46
   440   00FFA2  25                 	db	37
   441   00FFA3  30                 	db	48	;'0'
   442   00FFA4  32                 	db	50	;'2'
   443   00FFA5  64                 	db	100	;'d'
   444   00FFA6  2C                 	db	44
   445   00FFA7  20                 	db	32
   446   00FFA8  20                 	db	32
   447   00FFA9  00                 	db	0
   448   00FFAA                     STR_2:
   449                           
   450                           ; BSR set to: 15
   451   00FFAA  47                 	db	71	;'G'
   452   00FFAB  72                 	db	114	;'r'
   453   00FFAC  65                 	db	101	;'e'
   454   00FFAD  65                 	db	101	;'e'
   455   00FFAE  6E                 	db	110	;'n'
   456   00FFAF  5F                 	db	95	;'_'
   457   00FFB0  6C                 	db	108	;'l'
   458   00FFB1  69                 	db	105	;'i'
   459   00FFB2  67                 	db	103	;'g'
   460   00FFB3  68                 	db	104	;'h'
   461   00FFB4  74                 	db	116	;'t'
   462   00FFB5  3D                 	db	61	;'='
   463   00FFB6  25                 	db	37
   464   00FFB7  64                 	db	100	;'d'
   465   00FFB8  2C                 	db	44
   466   00FFB9  20                 	db	32
   467   00FFBA  0A                 	db	10
   468   00FFBB  0D                 	db	13
   469   00FFBC  00                 	db	0
   470   00FFBD                     STR_1:
   471                           
   472                           ; BSR set to: 15
   473   00FFBD  52                 	db	82	;'R'
   474   00FFBE  65                 	db	101	;'e'
   475   00FFBF  64                 	db	100	;'d'
   476   00FFC0  5F                 	db	95	;'_'
   477   00FFC1  6C                 	db	108	;'l'
   478   00FFC2  69                 	db	105	;'i'
   479   00FFC3  67                 	db	103	;'g'
   480   00FFC4  68                 	db	104	;'h'
   481   00FFC5  74                 	db	116	;'t'
   482   00FFC6  3D                 	db	61	;'='
   483   00FFC7  25                 	db	37
   484   00FFC8  64                 	db	100	;'d'
   485   00FFC9  2C                 	db	44
   486   00FFCA  20                 	db	32
   487   00FFCB  0A                 	db	10
   488   00FFCC  0D                 	db	13
   489   00FFCD  00                 	db	0
   490   00FFCE                     STR_4:
   491                           
   492                           ; BSR set to: 15
   493   00FFCE  41                 	db	65	;'A'
   494   00FFCF  6C                 	db	108	;'l'
   495   00FFD0  6C                 	db	108	;'l'
   496   00FFD1  5F                 	db	95	;'_'
   497   00FFD2  6C                 	db	108	;'l'
   498   00FFD3  69                 	db	105	;'i'
   499   00FFD4  67                 	db	103	;'g'
   500   00FFD5  68                 	db	104	;'h'
   501   00FFD6  74                 	db	116	;'t'
   502   00FFD7  73                 	db	115	;'s'
   503   00FFD8  3D                 	db	61	;'='
   504   00FFD9  25                 	db	37
   505   00FFDA  64                 	db	100	;'d'
   506   00FFDB  20                 	db	32
   507   00FFDC  0A                 	db	10
   508   00FFDD  0D                 	db	13
   509   00FFDE  00                 	db	0
   510   00FFDF                     STR_3:
   511                           
   512                           ; BSR set to: 15
   513   00FFDF  42                 	db	66	;'B'
   514   00FFE0  6C                 	db	108	;'l'
   515   00FFE1  75                 	db	117	;'u'
   516   00FFE2  65                 	db	101	;'e'
   517   00FFE3  5F                 	db	95	;'_'
   518   00FFE4  6C                 	db	108	;'l'
   519   00FFE5  69                 	db	105	;'i'
   520   00FFE6  67                 	db	103	;'g'
   521   00FFE7  68                 	db	104	;'h'
   522   00FFE8  74                 	db	116	;'t'
   523   00FFE9  3D                 	db	61	;'='
   524   00FFEA  25                 	db	37
   525   00FFEB  64                 	db	100	;'d'
   526   00FFEC  20                 	db	32
   527   00FFED  0A                 	db	10
   528   00FFEE  0D                 	db	13
   529   00FFEF  00                 	db	0
   530   00FFF0                     STR_20:
   531                           
   532                           ; BSR set to: 15
   533   00FFF0  68                 	db	104	;'h'
   534   00FFF1  75                 	db	117	;'u'
   535   00FFF2  65                 	db	101	;'e'
   536   00FFF3  3D                 	db	61	;'='
   537   00FFF4  25                 	db	37
   538   00FFF5  30                 	db	48	;'0'
   539   00FFF6  33                 	db	51	;'3'
   540   00FFF7  64                 	db	100	;'d'
   541   00FFF8  2C                 	db	44
   542   00FFF9  20                 	db	32
   543   00FFFA  20                 	db	32
   544   00FFFB  00                 	db	0
   545   00FFFC                     STR_6:
   546                           
   547                           ; BSR set to: 15
   548   00FFFC  2E                 	db	46
   549   00FFFD  00                 	db	0
   550   00FFFE  00                 	db	0	; dummy byte at the end
   551   000000                     
   552                           ; #config settings
   553                           
   554                           	psect	cinit
   555   0126A8                     __pcinit:
   556                           	callstack 0
   557   0126A8                     start_initialization:
   558                           	callstack 0
   559   0126A8                     __initialization:
   560                           	callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK0 (1 bytes)
   563                           ; load TBLPTR registers with __pidataBANK0
   564   0126A8  0E12               	movlw	low __pidataBANK0
   565   0126AA  6EF6               	movwf	tblptrl,c
   566   0126AC  0E28               	movlw	high __pidataBANK0
   567   0126AE  6EF7               	movwf	tblptrh,c
   568   0126B0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   569   0126B2  6EF8               	movwf	tblptru,c
   570   0126B4  0009               	tblrd		*+	;fetch initializer
   571   0126B6  CFF5 F0FD          	movff	tablat,__pdataBANK0
   572                           
   573                           ; Clear objects allocated to BANK1 (148 bytes)
   574   0126BA  EE01  F000         	lfsr	0,__pbssBANK1
   575   0126BE  0E94               	movlw	148
   576   0126C0                     clear_0:
   577   0126C0  6AEE               	clrf	postinc0,c
   578   0126C2  06E8               	decf	wreg,f,c
   579   0126C4  E1FD               	bnz	clear_0
   580                           
   581                           ; Clear objects allocated to BANK0 (35 bytes)
   582   0126C6  EE00  F0DA         	lfsr	0,__pbssBANK0
   583   0126CA  0E23               	movlw	35
   584   0126CC                     clear_1:
   585   0126CC  6AEE               	clrf	postinc0,c
   586   0126CE  06E8               	decf	wreg,f,c
   587   0126D0  E1FD               	bnz	clear_1
   588                           
   589                           ; Clear objects allocated to COMRAM (1 bytes)
   590   0126D2  6A4E               	clrf	__pbssCOMRAM& (0+255),c
   591   0126D4                     end_of_initialization:
   592                           	callstack 0
   593   0126D4                     __end_of__initialization:
   594                           	callstack 0
   595   0126D4  0100               	movlb	0
   596   0126D6  EF8E  F08F         	goto	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMRAM
   599   00004E                     __pbssCOMRAM:
   600                           	callstack 0
   601   00004E                     _TxBufWriteCnt:
   602                           	callstack 0
   603   00004E                     	ds	1
   604                           
   605                           	psect	bssBANK0
   606   0000DA                     __pbssBANK0:
   607                           	callstack 0
   608   0000DA                     _motorR:
   609                           	callstack 0
   610   0000DA                     	ds	9
   611   0000E3                     _motorL:
   612                           	callstack 0
   613   0000E3                     	ds	9
   614   0000EC                     _width:
   615                           	callstack 0
   616   0000EC                     	ds	2
   617   0000EE                     _prec:
   618                           	callstack 0
   619   0000EE                     	ds	2
   620   0000F0                     _flags:
   621                           	callstack 0
   622   0000F0                     	ds	1
   623   0000F1                     _readingIndex:
   624                           	callstack 0
   625   0000F1                     	ds	1
   626   0000F2                     _TxBufReadCnt:
   627                           	callstack 0
   628   0000F2                     	ds	1
   629   0000F3                     _RxBufReadCnt:
   630                           	callstack 0
   631   0000F3                     	ds	1
   632   0000F4                     _RxBufWriteCnt:
   633                           	callstack 0
   634   0000F4                     	ds	1
   635   0000F5                     _colorCurrent:
   636                           	callstack 0
   637   0000F5                     	ds	8
   638                           
   639                           	psect	dataBANK0
   640   0000FD                     __pdataBANK0:
   641                           	callstack 0
   642   0000FD                     _dataFlag:
   643                           	callstack 0
   644   0000FD                     	ds	1
   645                           
   646                           	psect	bssBANK1
   647   000100                     __pbssBANK1:
   648                           	callstack 0
   649   000100                     _EUSART4TXbuf:
   650                           	callstack 0
   651   000100                     	ds	60
   652   00013C                     _ldrReadings:
   653                           	callstack 0
   654   00013C                     	ds	20
   655   000150                     _EUSART4RXbuf:
   656                           	callstack 0
   657   000150                     	ds	20
   658   000164                     _hue:
   659                           	callstack 0
   660   000164                     	ds	8
   661   00016C                     _dbuf:
   662                           	callstack 0
   663   00016C                     	ds	32
   664   00018C                     _colorCalibration:
   665                           	callstack 0
   666   00018C                     	ds	8
   667                           
   668                           	psect	cstackBANK0
   669   000060                     __pcstackBANK0:
   670                           	callstack 0
   671   000060                     convert_rgb2hue@redcurrent:
   672                           	callstack 0
   673   000060                     calibration_routine@cal_state:
   674                           	callstack 0
   675   000060                     send2USART@hue_char:
   676                           	callstack 0
   677                           
   678                           ; 50 bytes @ 0x0
   679   000060                     	ds	4
   680   000064                     convert_rgb2hue@redmax:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x4
   684   000064                     	ds	4
   685   000068                     convert_rgb2hue@greencurrent:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x8
   689   000068                     	ds	4
   690   00006C                     convert_rgb2hue@greenmax:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0xC
   694   00006C                     	ds	4
   695   000070                     convert_rgb2hue@bluecurrent:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x10
   699   000070                     	ds	4
   700   000074                     convert_rgb2hue@bluemax:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x14
   704   000074                     	ds	4
   705   000078                     _convert_rgb2hue$309:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x18
   709   000078                     	ds	4
   710   00007C                     _convert_rgb2hue$310:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x1C
   714   00007C                     	ds	4
   715   000080                     _convert_rgb2hue$311:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x20
   719   000080                     	ds	4
   720   000084                     _convert_rgb2hue$312:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x24
   724   000084                     	ds	4
   725   000088                     convert_rgb2hue@min:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x28
   729   000088                     	ds	4
   730   00008C                     convert_rgb2hue@diff:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x2C
   734   00008C                     	ds	4
   735   000090                     convert_rgb2hue@max:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x30
   739   000090                     	ds	4
   740   000094                     convert_rgb2hue@hue:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x34
   744   000094                     	ds	4
   745   000098                     convert_rgb2hue@r:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x38
   749   000098                     	ds	4
   750   00009C                     convert_rgb2hue@g:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x3C
   754   00009C                     	ds	4
   755   0000A0                     convert_rgb2hue@b:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x40
   759   0000A0                     	ds	4
   760   0000A4                     test@led_state:
   761                           	callstack 0
   762                           
   763                           ; 50 bytes @ 0x44
   764   0000A4                     	ds	50
   765   0000D6                     test@hue:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x76
   769   0000D6                     	ds	2
   770   0000D8                     test@combo:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x78
   774   0000D8                     	ds	2
   775                           
   776                           	psect	cstackCOMRAM
   777   000001                     __pcstackCOMRAM:
   778                           	callstack 0
   779   000001                     ??_I2C_2_Master_Idle:
   780   000001                     ?___wmul:
   781                           	callstack 0
   782   000001                     ?___awdiv:
   783                           	callstack 0
   784   000001                     ?___awmod:
   785                           	callstack 0
   786   000001                     ?___fladd:
   787                           	callstack 0
   788   000001                     ?___flmul:
   789                           	callstack 0
   790   000001                     ?___fltol:
   791                           	callstack 0
   792   000001                     ?___xxtofl:
   793                           	callstack 0
   794   000001                     sendCharSerial4@charToSend:
   795                           	callstack 0
   796   000001                     initDCmotorsPWM@PWMperiod:
   797                           	callstack 0
   798   000001                     ___wmul@multiplier:
   799                           	callstack 0
   800   000001                     ___awdiv@dividend:
   801                           	callstack 0
   802   000001                     ___awmod@dividend:
   803                           	callstack 0
   804   000001                     fputc@c:
   805                           	callstack 0
   806   000001                     ___fleq@ff1:
   807                           	callstack 0
   808   000001                     ___flge@ff1:
   809                           	callstack 0
   810   000001                     ___fltol@f1:
   811                           	callstack 0
   812   000001                     ___fladd@b:
   813                           	callstack 0
   814   000001                     ___flmul@b:
   815                           	callstack 0
   816   000001                     ___xxtofl@val:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x0
   820   000001                     	ds	1
   821   000002                     ??_I2C_2_Master_Read:
   822   000002                     I2C_2_Master_Write@data_byte:
   823                           	callstack 0
   824   000002                     sendStringSerial4@string:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x1
   828   000002                     	ds	1
   829   000003                     color_writetoaddr@value:
   830                           	callstack 0
   831   000003                     I2C_2_Master_Read@ack:
   832                           	callstack 0
   833   000003                     fputc@fp:
   834                           	callstack 0
   835   000003                     ___wmul@multiplicand:
   836                           	callstack 0
   837   000003                     ___awdiv@divisor:
   838                           	callstack 0
   839   000003                     ___awmod@divisor:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x2
   843   000003                     	ds	1
   844   000004                     ??_fputc:
   845   000004                     color_writetoaddr@address:
   846                           	callstack 0
   847   000004                     I2C_2_Master_Read@tmp:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x3
   851   000004                     	ds	1
   852   000005                     ??_color_click_init:
   853   000005                     ??___fltol:
   854   000005                     ??___xxtofl:
   855   000005                     ?_color_read_Red:
   856                           	callstack 0
   857   000005                     ?_color_read_Green:
   858                           	callstack 0
   859   000005                     ?_color_read_Blue:
   860                           	callstack 0
   861   000005                     ?_color_read_Clear:
   862                           	callstack 0
   863   000005                     ___awdiv@counter:
   864                           	callstack 0
   865   000005                     ___awmod@counter:
   866                           	callstack 0
   867   000005                     ___wmul@product:
   868                           	callstack 0
   869   000005                     ___fleq@ff2:
   870                           	callstack 0
   871   000005                     ___flge@ff2:
   872                           	callstack 0
   873   000005                     ___fladd@a:
   874                           	callstack 0
   875   000005                     ___flmul@a:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x4
   879   000005                     	ds	1
   880   000006                     ___awdiv@sign:
   881                           	callstack 0
   882   000006                     ___awmod@sign:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x5
   886   000006                     	ds	1
   887   000007                     ??_color_read_Red:
   888   000007                     ??_color_read_Green:
   889   000007                     ??_color_read_Blue:
   890   000007                     ??_color_read_Clear:
   891   000007                     ?_abs:
   892                           	callstack 0
   893   000007                     ?_read_prec_or_width:
   894                           	callstack 0
   895   000007                     read_prec_or_width@fmt:
   896                           	callstack 0
   897   000007                     ___awdiv@quotient:
   898                           	callstack 0
   899   000007                     abs@a:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x6
   903   000007                     	ds	1
   904   000008                     read_prec_or_width@ap:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x7
   908   000008                     	ds	1
   909   000009                     ??___fladd:
   910   000009                     ??___flmul:
   911   000009                     ??_abs:
   912   000009                     ??___fleq:
   913   000009                     ??___flge:
   914   000009                     ___fltol@sign1:
   915                           	callstack 0
   916   000009                     ___xxtofl@sign:
   917                           	callstack 0
   918   000009                     read_prec_or_width@c:
   919                           	callstack 0
   920   000009                     fputs@s:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x8
   924   000009                     	ds	1
   925   00000A                     ___fltol@exp1:
   926                           	callstack 0
   927   00000A                     ___xxtofl@exp:
   928                           	callstack 0
   929   00000A                     color_read_Red@tmp:
   930                           	callstack 0
   931   00000A                     color_read_Green@tmp:
   932                           	callstack 0
   933   00000A                     color_read_Blue@tmp:
   934                           	callstack 0
   935   00000A                     color_read_Clear@tmp:
   936                           	callstack 0
   937   00000A                     read_prec_or_width@n:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x9
   941   00000A                     	ds	1
   942   00000B                     fputs@fp:
   943                           	callstack 0
   944   00000B                     ___xxtofl@arg:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0xA
   948   00000B                     	ds	1
   949   00000C                     reading_values@cCurr:
   950                           	callstack 0
   951   00000C                     fputs@c:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0xB
   955   00000C                     	ds	1
   956   00000D                     ___fladd@signs:
   957                           	callstack 0
   958   00000D                     ___flmul@sign:
   959                           	callstack 0
   960   00000D                     fputs@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0xC
   964   00000D                     	ds	1
   965   00000E                     ___fladd@aexp:
   966                           	callstack 0
   967   00000E                     ___flmul@grs:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0xD
   971   00000E                     	ds	1
   972   00000F                     ___fladd@bexp:
   973                           	callstack 0
   974   00000F                     pad@fp:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0xE
   978   00000F                     	ds	1
   979   000010                     ___fladd@grs:
   980                           	callstack 0
   981   000010                     pad@buf:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0xF
   985   000010                     	ds	1
   986   000011                     ?___flsub:
   987                           	callstack 0
   988   000011                     ___flsub@b:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x10
   992   000011                     	ds	1
   993   000012                     ___flmul@aexp:
   994                           	callstack 0
   995   000012                     pad@p:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x11
   999   000012                     	ds	1
  1000   000013                     ___flmul@bexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x12
  1004   000013                     	ds	1
  1005   000014                     ??_pad:
  1006   000014                     ___flmul@prod:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x13
  1010   000014                     	ds	1
  1011   000015                     pad@i:
  1012                           	callstack 0
  1013   000015                     ___flsub@a:
  1014                           	callstack 0
  1015                           
  1016                           ; 4 bytes @ 0x14
  1017   000015                     	ds	2
  1018   000017                     dtoa@fp:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x16
  1022   000017                     	ds	1
  1023   000018                     ___flmul@temp:
  1024                           	callstack 0
  1025   000018                     dtoa@d:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x17
  1029   000018                     	ds	1
  1030   000019                     ?___fldiv:
  1031                           	callstack 0
  1032   000019                     ___fldiv@b:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0x18
  1036   000019                     	ds	1
  1037   00001A                     _dtoa$2608:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x19
  1041   00001A                     	ds	2
  1042   00001C                     dtoa@p:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x1B
  1046   00001C                     	ds	1
  1047   00001D                     dtoa@w:
  1048                           	callstack 0
  1049   00001D                     ___fldiv@a:
  1050                           	callstack 0
  1051                           
  1052                           ; 4 bytes @ 0x1C
  1053   00001D                     	ds	2
  1054   00001F                     dtoa@s:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x1E
  1058   00001F                     	ds	1
  1059   000020                     dtoa@i:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x1F
  1063   000020                     	ds	1
  1064   000021                     ??___fldiv:
  1065                           
  1066                           ; 1 bytes @ 0x20
  1067   000021                     	ds	1
  1068   000022                     vfpfcnvrt@fp:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x21
  1072   000022                     	ds	1
  1073   000023                     vfpfcnvrt@fmt:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0x22
  1077   000023                     	ds	1
  1078   000024                     vfpfcnvrt@ap:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0x23
  1082   000024                     	ds	1
  1083   000025                     ??_vfpfcnvrt:
  1084   000025                     ___fldiv@rem:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0x24
  1088   000025                     	ds	2
  1089   000027                     vfpfcnvrt@convarg:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x26
  1093   000027                     	ds	2
  1094   000029                     ___fldiv@sign:
  1095                           	callstack 0
  1096                           
  1097                           ; 1 bytes @ 0x28
  1098   000029                     	ds	1
  1099   00002A                     ___fldiv@new_exp:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x29
  1103   00002A                     	ds	1
  1104   00002B                     vfpfcnvrt@done:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x2A
  1108   00002B                     	ds	1
  1109   00002C                     vfpfcnvrt@cp:
  1110                           	callstack 0
  1111   00002C                     ___fldiv@grs:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x2B
  1115   00002C                     	ds	2
  1116   00002E                     ?_vfprintf:
  1117                           	callstack 0
  1118   00002E                     vfprintf@fp:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x2D
  1122   00002E                     	ds	1
  1123   00002F                     vfprintf@fmt:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x2E
  1127   00002F                     	ds	1
  1128   000030                     ___fldiv@bexp:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x2F
  1132   000030                     	ds	1
  1133   000031                     ___fldiv@aexp:
  1134                           	callstack 0
  1135   000031                     vfprintf@ap:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x30
  1139   000031                     	ds	1
  1140   000032                     ?_convert_rgb2hue:
  1141                           	callstack 0
  1142   000032                     convert_rgb2hue@cMax:
  1143                           	callstack 0
  1144   000032                     vfprintf@cfmt:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x31
  1148   000032                     	ds	2
  1149   000034                     ?_sprintf:
  1150                           	callstack 0
  1151   000034                     convert_rgb2hue@cCurr:
  1152                           	callstack 0
  1153   000034                     sprintf@s:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x33
  1157   000034                     	ds	1
  1158   000035                     ??_convert_rgb2hue:
  1159   000035                     sprintf@fmt:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x34
  1163   000035                     	ds	6
  1164   00003B                     sprintf@ap:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x3A
  1168   00003B                     	ds	1
  1169   00003C                     sprintf@f:
  1170                           	callstack 0
  1171                           
  1172                           ; 12 bytes @ 0x3B
  1173   00003C                     	ds	12
  1174   000048                     calibration_routine@cCal:
  1175                           	callstack 0
  1176   000048                     send2USART@hue:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x47
  1180   000048                     	ds	2
  1181   00004A                     ??_test:
  1182   00004A                     ??_calibration_routine:
  1183                           
  1184                           ; 1 bytes @ 0x49
  1185   00004A                     	ds	2
  1186   00004C                     ??_main:
  1187                           
  1188                           ; 1 bytes @ 0x4B
  1189   00004C                     	ds	2
  1190                           
  1191 ;;
  1192 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1193 ;;
  1194 ;; *************** function _main *****************
  1195 ;; Defined at:
  1196 ;;		line 28 in file "main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  PWMcycle        2    0        unsigned int 
  1201 ;;  hue             2    0        unsigned int 
  1202 ;;  clear           2    0        unsigned int 
  1203 ;;  green           2    0        unsigned int 
  1204 ;;  blue            2    0        unsigned int 
  1205 ;;  red             2    0        unsigned int 
  1206 ;;  battery_leve    2    0        unsigned int 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1220 ;;Total ram usage:        2 bytes
  1221 ;; Hardware stack levels required when called: 10
  1222 ;; This function calls:
  1223 ;;		_ADC_init
  1224 ;;		_calibration_routine
  1225 ;;		_color_click_init
  1226 ;;		_initDCmotorsPWM
  1227 ;;		_initUSART4
  1228 ;;		_test
  1229 ;; This function is called by:
  1230 ;;		Startup code after reset
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text0
  1235   011F1C                     __ptext0:
  1236                           	callstack 0
  1237   011F1C                     _main:
  1238                           	callstack 21
  1239   011F1C                     
  1240                           ;main.c: 30:     ADC_init();
  1241   011F1C  ECDA  F093         	call	_ADC_init	;wreg free
  1242   011F20                     
  1243                           ;main.c: 31:     color_click_init();
  1244   011F20  EC20  F093         	call	_color_click_init	;wreg free
  1245   011F24                     
  1246                           ;main.c: 32:     initUSART4();
  1247   011F24  ECCB  F093         	call	_initUSART4	;wreg free
  1248   011F28                     
  1249                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1250   011F28  0E00               	movlw	0
  1251   011F2A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1252   011F2C  0E63               	movlw	99
  1253   011F2E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1254   011F30  EC35  F091         	call	_initDCmotorsPWM	;wreg free
  1255   011F34                     
  1256                           ;main.c: 39:     motorL.power = 0;
  1257   011F34  0E00               	movlw	0
  1258   011F36  0100               	movlb	0	; () banked
  1259   011F38  6FE3               	movwf	_motorL& (0+255),b
  1260   011F3A                     
  1261                           ; BSR set to: 0
  1262                           ;main.c: 40:     motorL.direction = 1;
  1263   011F3A  0E01               	movlw	1
  1264   011F3C  6FE4               	movwf	(_motorL+1)& (0+255),b
  1265   011F3E                     
  1266                           ; BSR set to: 0
  1267                           ;main.c: 41:     motorL.brakemode = 1;
  1268   011F3E  0E01               	movlw	1
  1269   011F40  6FE5               	movwf	(_motorL+2)& (0+255),b
  1270   011F42                     
  1271                           ; BSR set to: 0
  1272                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1273   011F42  0E00               	movlw	0
  1274   011F44  6FE7               	movwf	(_motorL+4)& (0+255),b
  1275   011F46  0E63               	movlw	99
  1276   011F48  6FE6               	movwf	(_motorL+3)& (0+255),b
  1277   011F4A                     
  1278                           ; BSR set to: 0
  1279                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1280   011F4A  0EAA               	movlw	170
  1281   011F4C  6FE8               	movwf	(_motorL+5)& (0+255),b
  1282   011F4E  0E0F               	movlw	15
  1283   011F50  6FE9               	movwf	(_motorL+6)& (0+255),b
  1284   011F52                     
  1285                           ; BSR set to: 0
  1286                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1287   011F52  0EA6               	movlw	166
  1288   011F54  6FEA               	movwf	(_motorL+7)& (0+255),b
  1289   011F56  0E0F               	movlw	15
  1290   011F58  6FEB               	movwf	(_motorL+8)& (0+255),b
  1291   011F5A                     
  1292                           ; BSR set to: 0
  1293                           ;main.c: 46:     motorR.power = 0;
  1294   011F5A  0E00               	movlw	0
  1295   011F5C  6FDA               	movwf	_motorR& (0+255),b
  1296   011F5E                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 47:     motorR.direction = 1;
  1299   011F5E  0E01               	movlw	1
  1300   011F60  6FDB               	movwf	(_motorR+1)& (0+255),b
  1301   011F62                     
  1302                           ; BSR set to: 0
  1303                           ;main.c: 48:     motorR.brakemode = 1;
  1304   011F62  0E01               	movlw	1
  1305   011F64  6FDC               	movwf	(_motorR+2)& (0+255),b
  1306   011F66                     
  1307                           ; BSR set to: 0
  1308                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1309   011F66  0E00               	movlw	0
  1310   011F68  6FDE               	movwf	(_motorR+4)& (0+255),b
  1311   011F6A  0E63               	movlw	99
  1312   011F6C  6FDD               	movwf	(_motorR+3)& (0+255),b
  1313                           
  1314                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1315   011F6E  0E25               	movlw	37
  1316   011F70  6FDF               	movwf	(_motorR+5)& (0+255),b
  1317   011F72  0E0F               	movlw	15
  1318   011F74  6FE0               	movwf	(_motorR+6)& (0+255),b
  1319                           
  1320                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1321   011F76  0E21               	movlw	33
  1322   011F78  6FE1               	movwf	(_motorR+7)& (0+255),b
  1323   011F7A  0E0F               	movlw	15
  1324   011F7C  6FE2               	movwf	(_motorR+8)& (0+255),b
  1325   011F7E                     
  1326                           ; BSR set to: 0
  1327                           ;main.c: 54:     LATDbits.LATD7=0;
  1328   011F7E  9E7C               	bcf	124,7,c	;volatile
  1329   011F80                     
  1330                           ; BSR set to: 0
  1331                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1332   011F80  9E84               	bcf	132,7,c	;volatile
  1333   011F82                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1336   011F82  9087               	bcf	135,0,c	;volatile
  1337   011F84                     
  1338                           ; BSR set to: 0
  1339                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1340   011F84  907F               	bcf	127,0,c	;volatile
  1341   011F86                     
  1342                           ; BSR set to: 0
  1343                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1344   011F86  9E85               	bcf	133,7,c	;volatile
  1345   011F88                     
  1346                           ; BSR set to: 0
  1347                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1348   011F88  9E7D               	bcf	125,7,c	;volatile
  1349   011F8A                     
  1350                           ; BSR set to: 0
  1351                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1352   011F8A  9681               	bcf	129,3,c	;volatile
  1353   011F8C                     
  1354                           ; BSR set to: 0
  1355                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1356   011F8C  9679               	bcf	121,3,c	;volatile
  1357   011F8E                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1360   011F8E  8686               	bsf	134,3,c	;volatile
  1361   011F90                     
  1362                           ; BSR set to: 0
  1363                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1364   011F90  010E               	movlb	14	; () banked
  1365   011F92  97B4               	bcf	180,3,b	;volatile
  1366   011F94                     
  1367                           ; BSR set to: 14
  1368                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     unsigned i
      +                          nt clear;;main.c: 80:     unsigned int hue;;main.c: 81:     TRISHbits.TRISH3 = 0;
  1369   011F94  9688               	bcf	136,3,c	;volatile
  1370   011F96                     
  1371                           ; BSR set to: 14
  1372                           ;main.c: 82:     LATHbits.LATH3 = 1;
  1373   011F96  8680               	bsf	128,3,c	;volatile
  1374   011F98                     
  1375                           ; BSR set to: 14
  1376                           ;main.c: 83:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1377   011F98  0E19               	movlw	25
  1378   011F9A  6E4D               	movwf	(??_main+1)^0,c
  1379   011F9C  0E5A               	movlw	90
  1380   011F9E  6E4C               	movwf	??_main^0,c
  1381   011FA0  0EB2               	movlw	178
  1382   011FA2                     u4987:
  1383   011FA2  2EE8               	decfsz	wreg,f,c
  1384   011FA4  D7FE               	bra	u4987
  1385   011FA6  2E4C               	decfsz	??_main^0,f,c
  1386   011FA8  D7FC               	bra	u4987
  1387   011FAA  2E4D               	decfsz	(??_main+1)^0,f,c
  1388   011FAC  D7FA               	bra	u4987
  1389   011FAE                     
  1390                           ;main.c: 84:     LATHbits.LATH3 = 0;
  1391   011FAE  9680               	bcf	128,3,c	;volatile
  1392   011FB0                     
  1393                           ;main.c: 85:     LATFbits.LATF2 = 0;
  1394   011FB0  947E               	bcf	126,2,c	;volatile
  1395   011FB2                     
  1396                           ;main.c: 86:     TRISFbits.TRISF2 = 1;
  1397   011FB2  8486               	bsf	134,2,c	;volatile
  1398   011FB4                     
  1399                           ;main.c: 87:     ANSELFbits.ANSELF2 = 0;
  1400   011FB4  010E               	movlb	14	; () banked
  1401   011FB6  95B4               	bcf	180,2,b	;volatile
  1402   011FB8                     
  1403                           ; BSR set to: 14
  1404                           ;main.c: 90:     calibration_routine(&colorCalibration);
  1405   011FB8  0E8C               	movlw	low _colorCalibration
  1406   011FBA  6E48               	movwf	calibration_routine@cCal^0,c
  1407   011FBC  0E01               	movlw	high _colorCalibration
  1408   011FBE  6E49               	movwf	(calibration_routine@cCal+1)^0,c
  1409   011FC0  ECC8  F089         	call	_calibration_routine	;wreg free
  1410   011FC4                     l5267:
  1411                           
  1412                           ;main.c: 97:         test();
  1413   011FC4  EC11  F08D         	call	_test	;wreg free
  1414   011FC8  EFE2  F08F         	goto	l5267
  1415   011FCC  EF00  F000         	goto	start
  1416   011FD0                     __end_of_main:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _test *****************
  1420 ;; Defined at:
  1421 ;;		line 173 in file "color.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  combo           2  120[BANK0 ] unsigned int 
  1426 ;;  led_state      50   68[BANK0 ] unsigned char [50]
  1427 ;;  hue             2  118[BANK0 ] unsigned int 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;Total ram usage:       56 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 9
  1444 ;; This function calls:
  1445 ;;		_convert_rgb2hue
  1446 ;;		_reading_values
  1447 ;;		_send2USART
  1448 ;;		_sendStringSerial4
  1449 ;;		_sprintf
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text1
  1456   011A22                     __ptext1:
  1457                           	callstack 0
  1458   011A22                     _test:
  1459                           	callstack 21
  1460   011A22                     
  1461                           ;color.c: 175:     unsigned int hue;;color.c: 177:     char led_state[50];;color.c: 180:
      +                               for (unsigned int combo = 0; combo < 4; ++combo) {
  1462   011A22  0E00               	movlw	0
  1463   011A24  0100               	movlb	0	; () banked
  1464   011A26  6FD9               	movwf	(test@combo+1)& (0+255),b
  1465   011A28  0E00               	movlw	0
  1466   011A2A  6FD8               	movwf	test@combo& (0+255),b
  1467   011A2C                     l5047:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;color.c: 183:         if (combo == 0) {
  1471   011A2C  51D8               	movf	test@combo& (0+255),w,b
  1472   011A2E  11D9               	iorwf	(test@combo+1)& (0+255),w,b
  1473   011A30  A4D8               	btfss	status,2,c
  1474   011A32  EF1D  F08D         	goto	u4781
  1475   011A36  EF1F  F08D         	goto	u4780
  1476   011A3A                     u4781:
  1477   011A3A  EF37  F08D         	goto	l5053
  1478   011A3E                     u4780:
  1479   011A3E                     
  1480                           ; BSR set to: 0
  1481                           ;color.c: 185:             LATGbits.LATG0 = 1;
  1482   011A3E  807F               	bsf	127,0,c	;volatile
  1483                           
  1484                           ;color.c: 186:             LATEbits.LATE7 = 0;
  1485   011A40  9E7D               	bcf	125,7,c	;volatile
  1486                           
  1487                           ;color.c: 187:             LATAbits.LATA3 = 0;
  1488   011A42  9679               	bcf	121,3,c	;volatile
  1489   011A44                     
  1490                           ; BSR set to: 0
  1491                           ;color.c: 188:             sprintf(led_state,"Red_light=%d, \n\r", LATGbits.LATG0);
  1492   011A44  0EA4               	movlw	low test@led_state
  1493   011A46  6E34               	movwf	sprintf@s^0,c
  1494   011A48  0EBD               	movlw	low STR_1
  1495   011A4A  6E35               	movwf	sprintf@fmt^0,c
  1496   011A4C  0EFF               	movlw	high STR_1
  1497   011A4E  6E36               	movwf	(sprintf@fmt+1)^0,c
  1498   011A50  B07F               	btfsc	127,0,c	;volatile
  1499   011A52  EF2D  F08D         	goto	u4791
  1500   011A56  EF31  F08D         	goto	u4790
  1501   011A5A                     u4791:
  1502   011A5A  6A4A               	clrf	??_test^0,c
  1503   011A5C  2A4A               	incf	??_test^0,f,c
  1504   011A5E  EF32  F08D         	goto	u4798
  1505   011A62                     u4790:
  1506   011A62  6A4A               	clrf	??_test^0,c
  1507   011A64                     u4798:
  1508   011A64  504A               	movf	??_test^0,w,c
  1509   011A66  6E37               	movwf	(?_sprintf+3)^0,c
  1510   011A68  6A38               	clrf	(?_sprintf+4)^0,c
  1511   011A6A  EC04  F093         	call	_sprintf	;wreg free
  1512   011A6E                     l5053:
  1513                           
  1514                           ;color.c: 191:         if (combo == 1) {
  1515   011A6E  0100               	movlb	0	; () banked
  1516   011A70  05D8               	decf	test@combo& (0+255),w,b
  1517   011A72  11D9               	iorwf	(test@combo+1)& (0+255),w,b
  1518   011A74  A4D8               	btfss	status,2,c
  1519   011A76  EF3F  F08D         	goto	u4801
  1520   011A7A  EF41  F08D         	goto	u4800
  1521   011A7E                     u4801:
  1522   011A7E  EF59  F08D         	goto	l5059
  1523   011A82                     u4800:
  1524   011A82                     
  1525                           ; BSR set to: 0
  1526                           ;color.c: 192:             LATGbits.LATG0 = 0;
  1527   011A82  907F               	bcf	127,0,c	;volatile
  1528                           
  1529                           ;color.c: 193:             LATEbits.LATE7 = 1;
  1530   011A84  8E7D               	bsf	125,7,c	;volatile
  1531                           
  1532                           ;color.c: 194:             LATAbits.LATA3 = 0;
  1533   011A86  9679               	bcf	121,3,c	;volatile
  1534   011A88                     
  1535                           ; BSR set to: 0
  1536                           ;color.c: 195:             sprintf(led_state,"Green_light=%d, \n\r", LATEbits.LATE7);
  1537   011A88  0EA4               	movlw	low test@led_state
  1538   011A8A  6E34               	movwf	sprintf@s^0,c
  1539   011A8C  0EAA               	movlw	low STR_2
  1540   011A8E  6E35               	movwf	sprintf@fmt^0,c
  1541   011A90  0EFF               	movlw	high STR_2
  1542   011A92  6E36               	movwf	(sprintf@fmt+1)^0,c
  1543   011A94  BE7D               	btfsc	125,7,c	;volatile
  1544   011A96  EF4F  F08D         	goto	u4811
  1545   011A9A  EF53  F08D         	goto	u4810
  1546   011A9E                     u4811:
  1547   011A9E  6A4A               	clrf	??_test^0,c
  1548   011AA0  2A4A               	incf	??_test^0,f,c
  1549   011AA2  EF54  F08D         	goto	u4818
  1550   011AA6                     u4810:
  1551   011AA6  6A4A               	clrf	??_test^0,c
  1552   011AA8                     u4818:
  1553   011AA8  504A               	movf	??_test^0,w,c
  1554   011AAA  6E37               	movwf	(?_sprintf+3)^0,c
  1555   011AAC  6A38               	clrf	(?_sprintf+4)^0,c
  1556   011AAE  EC04  F093         	call	_sprintf	;wreg free
  1557   011AB2                     l5059:
  1558                           
  1559                           ;color.c: 198:         if (combo == 2) {
  1560   011AB2  0E02               	movlw	2
  1561   011AB4  0100               	movlb	0	; () banked
  1562   011AB6  19D8               	xorwf	test@combo& (0+255),w,b
  1563   011AB8  11D9               	iorwf	(test@combo+1)& (0+255),w,b
  1564   011ABA  A4D8               	btfss	status,2,c
  1565   011ABC  EF62  F08D         	goto	u4821
  1566   011AC0  EF64  F08D         	goto	u4820
  1567   011AC4                     u4821:
  1568   011AC4  EF7C  F08D         	goto	l5065
  1569   011AC8                     u4820:
  1570   011AC8                     
  1571                           ; BSR set to: 0
  1572                           ;color.c: 199:             LATGbits.LATG0 = 0;
  1573   011AC8  907F               	bcf	127,0,c	;volatile
  1574                           
  1575                           ;color.c: 200:             LATEbits.LATE7 = 0;
  1576   011ACA  9E7D               	bcf	125,7,c	;volatile
  1577                           
  1578                           ;color.c: 201:             LATAbits.LATA3 = 1;
  1579   011ACC  8679               	bsf	121,3,c	;volatile
  1580   011ACE                     
  1581                           ; BSR set to: 0
  1582                           ;color.c: 202:             sprintf(led_state,"Blue_light=%d \n\r", LATAbits.LATA3);
  1583   011ACE  0EA4               	movlw	low test@led_state
  1584   011AD0  6E34               	movwf	sprintf@s^0,c
  1585   011AD2  0EDF               	movlw	low STR_3
  1586   011AD4  6E35               	movwf	sprintf@fmt^0,c
  1587   011AD6  0EFF               	movlw	high STR_3
  1588   011AD8  6E36               	movwf	(sprintf@fmt+1)^0,c
  1589   011ADA  B679               	btfsc	121,3,c	;volatile
  1590   011ADC  EF72  F08D         	goto	u4831
  1591   011AE0  EF76  F08D         	goto	u4830
  1592   011AE4                     u4831:
  1593   011AE4  6A4A               	clrf	??_test^0,c
  1594   011AE6  2A4A               	incf	??_test^0,f,c
  1595   011AE8  EF77  F08D         	goto	u4838
  1596   011AEC                     u4830:
  1597   011AEC  6A4A               	clrf	??_test^0,c
  1598   011AEE                     u4838:
  1599   011AEE  504A               	movf	??_test^0,w,c
  1600   011AF0  6E37               	movwf	(?_sprintf+3)^0,c
  1601   011AF2  6A38               	clrf	(?_sprintf+4)^0,c
  1602   011AF4  EC04  F093         	call	_sprintf	;wreg free
  1603   011AF8                     l5065:
  1604                           
  1605                           ;color.c: 205:         if (combo == 3) {
  1606   011AF8  0E03               	movlw	3
  1607   011AFA  0100               	movlb	0	; () banked
  1608   011AFC  19D8               	xorwf	test@combo& (0+255),w,b
  1609   011AFE  11D9               	iorwf	(test@combo+1)& (0+255),w,b
  1610   011B00  A4D8               	btfss	status,2,c
  1611   011B02  EF85  F08D         	goto	u4841
  1612   011B06  EF87  F08D         	goto	u4840
  1613   011B0A                     u4841:
  1614   011B0A  EF96  F08D         	goto	l5071
  1615   011B0E                     u4840:
  1616   011B0E                     
  1617                           ; BSR set to: 0
  1618                           ;color.c: 206:             LATGbits.LATG0 = 1;
  1619   011B0E  807F               	bsf	127,0,c	;volatile
  1620                           
  1621                           ;color.c: 207:             LATEbits.LATE7 = 1;
  1622   011B10  8E7D               	bsf	125,7,c	;volatile
  1623                           
  1624                           ;color.c: 208:             LATAbits.LATA3 = 1;
  1625   011B12  8679               	bsf	121,3,c	;volatile
  1626   011B14                     
  1627                           ; BSR set to: 0
  1628                           ;color.c: 209:             sprintf(led_state,"All_lights=%d \n\r", 1);
  1629   011B14  0EA4               	movlw	low test@led_state
  1630   011B16  6E34               	movwf	sprintf@s^0,c
  1631   011B18  0ECE               	movlw	low STR_4
  1632   011B1A  6E35               	movwf	sprintf@fmt^0,c
  1633   011B1C  0EFF               	movlw	high STR_4
  1634   011B1E  6E36               	movwf	(sprintf@fmt+1)^0,c
  1635   011B20  0E00               	movlw	0
  1636   011B22  6E38               	movwf	(?_sprintf+4)^0,c
  1637   011B24  0E01               	movlw	1
  1638   011B26  6E37               	movwf	(?_sprintf+3)^0,c
  1639   011B28  EC04  F093         	call	_sprintf	;wreg free
  1640   011B2C                     l5071:
  1641                           
  1642                           ;color.c: 212:         sendStringSerial4(led_state);
  1643   011B2C  0EA4               	movlw	low test@led_state
  1644   011B2E  6E02               	movwf	sendStringSerial4@string^0,c
  1645   011B30  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1646   011B32  EC7D  F091         	call	_sendStringSerial4	;wreg free
  1647   011B36                     
  1648                           ;color.c: 214:         reading_values(&colorCurrent);
  1649   011B36  0EF5               	movlw	low _colorCurrent
  1650   011B38  6E0C               	movwf	reading_values@cCurr^0,c
  1651   011B3A  ECB2  F091         	call	_reading_values	;wreg free
  1652   011B3E                     
  1653                           ;color.c: 216:         hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1654   011B3E  0E8C               	movlw	low _colorCalibration
  1655   011B40  6E32               	movwf	convert_rgb2hue@cMax^0,c
  1656   011B42  0E01               	movlw	high _colorCalibration
  1657   011B44  6E33               	movwf	(convert_rgb2hue@cMax+1)^0,c
  1658   011B46  0EF5               	movlw	low _colorCurrent
  1659   011B48  6E34               	movwf	convert_rgb2hue@cCurr^0,c
  1660   011B4A  EC00  F080         	call	_convert_rgb2hue	;wreg free
  1661   011B4E  C032  F0D6         	movff	?_convert_rgb2hue,test@hue
  1662   011B52  C033  F0D7         	movff	?_convert_rgb2hue+1,test@hue+1
  1663   011B56                     
  1664                           ;color.c: 221:         send2USART(hue);
  1665   011B56  C0D6  F048         	movff	test@hue,send2USART@hue
  1666   011B5A  C0D7  F049         	movff	test@hue+1,send2USART@hue+1
  1667   011B5E  ECA9  F093         	call	_send2USART	;wreg free
  1668   011B62                     
  1669                           ;color.c: 224:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1670   011B62  0E52               	movlw	82
  1671   011B64  6E4B               	movwf	(??_test+1)^0,c
  1672   011B66  0E2B               	movlw	43
  1673   011B68  6E4A               	movwf	??_test^0,c
  1674   011B6A  0E00               	movlw	0
  1675   011B6C                     u4997:
  1676   011B6C  2EE8               	decfsz	wreg,f,c
  1677   011B6E  D7FE               	bra	u4997
  1678   011B70  2E4A               	decfsz	??_test^0,f,c
  1679   011B72  D7FC               	bra	u4997
  1680   011B74  2E4B               	decfsz	(??_test+1)^0,f,c
  1681   011B76  D7FA               	bra	u4997
  1682   011B78  D000               	nop2	
  1683   011B7A                     
  1684                           ;color.c: 226:     }
  1685   011B7A  0100               	movlb	0	; () banked
  1686   011B7C  4BD8               	infsnz	test@combo& (0+255),f,b
  1687   011B7E  2BD9               	incf	(test@combo+1)& (0+255),f,b
  1688   011B80                     
  1689                           ; BSR set to: 0
  1690   011B80  51D9               	movf	(test@combo+1)& (0+255),w,b
  1691   011B82  E109               	bnz	u4850
  1692   011B84  0E04               	movlw	4
  1693   011B86  5DD8               	subwf	test@combo& (0+255),w,b
  1694   011B88  A0D8               	btfss	status,0,c
  1695   011B8A  EFC9  F08D         	goto	u4851
  1696   011B8E  EFCB  F08D         	goto	u4850
  1697   011B92                     u4851:
  1698   011B92  EF16  F08D         	goto	l5047
  1699   011B96                     u4850:
  1700   011B96                     
  1701                           ; BSR set to: 0
  1702   011B96  0012               	return		;funcret
  1703   011B98                     __end_of_test:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _send2USART *****************
  1707 ;; Defined at:
  1708 ;;		line 146 in file "serial.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  hue             2   71[COMRAM] unsigned int 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1723 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1725 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1726 ;;Total ram usage:       52 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 8
  1729 ;; This function calls:
  1730 ;;		_sendStringSerial4
  1731 ;;		_sprintf
  1732 ;; This function is called by:
  1733 ;;		_test
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text2
  1738   012752                     __ptext2:
  1739                           	callstack 0
  1740   012752                     _send2USART:
  1741                           	callstack 21
  1742   012752                     
  1743                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1744   012752  0E60               	movlw	low send2USART@hue_char
  1745   012754  6E34               	movwf	sprintf@s^0,c
  1746   012756  0EF0               	movlw	low STR_20
  1747   012758  6E35               	movwf	sprintf@fmt^0,c
  1748   01275A  0EFF               	movlw	high STR_20
  1749   01275C  6E36               	movwf	(sprintf@fmt+1)^0,c
  1750   01275E  C048  F037         	movff	send2USART@hue,?_sprintf+3
  1751   012762  C049  F038         	movff	send2USART@hue+1,?_sprintf+4
  1752   012766  EC04  F093         	call	_sprintf	;wreg free
  1753   01276A                     
  1754                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1755   01276A  0E60               	movlw	low send2USART@hue_char
  1756   01276C  6E02               	movwf	sendStringSerial4@string^0,c
  1757   01276E  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1758   012770  EC7D  F091         	call	_sendStringSerial4	;wreg free
  1759   012774  0012               	return		;funcret
  1760   012776                     __end_of_send2USART:
  1761                           	callstack 0
  1762                           
  1763 ;; *************** function _reading_values *****************
  1764 ;; Defined at:
  1765 ;;		line 300 in file "color.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  cCurr           1   11[COMRAM] PTR struct colors
  1768 ;;		 -> colorCurrent(8), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1780 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 3
  1787 ;; This function calls:
  1788 ;;		_color_read_Blue
  1789 ;;		_color_read_Clear
  1790 ;;		_color_read_Green
  1791 ;;		_color_read_Red
  1792 ;; This function is called by:
  1793 ;;		_test
  1794 ;;		_decision
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text3
  1799   012364                     __ptext3:
  1800                           	callstack 0
  1801   012364                     _reading_values:
  1802                           	callstack 26
  1803   012364                     
  1804                           ;color.c: 300: void reading_values(colors *cCurr);color.c: 301: {;color.c: 304:     (cCu
      +                          rr->red)= color_read_Red();
  1805   012364  ECDD  F091         	call	_color_read_Red	;wreg free
  1806   012368  500C               	movf	reading_values@cCurr^0,w,c
  1807   01236A  6ED9               	movwf	fsr2l,c
  1808   01236C  6ADA               	clrf	fsr2h,c
  1809   01236E  C005  FFDE         	movff	?_color_read_Red,postinc2
  1810   012372  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1811                           
  1812                           ;color.c: 305:     (cCurr->blue) = color_read_Blue();
  1813   012376  EC55  F092         	call	_color_read_Blue	;wreg free
  1814   01237A  500C               	movf	reading_values@cCurr^0,w,c
  1815   01237C  6ED9               	movwf	fsr2l,c
  1816   01237E  6ADA               	clrf	fsr2h,c
  1817   012380  0E04               	movlw	4
  1818   012382  26D9               	addwf	fsr2l,f,c
  1819   012384  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1820   012388  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1821                           
  1822                           ;color.c: 306:     (cCurr->green) = color_read_Green();
  1823   01238C  EC05  F092         	call	_color_read_Green	;wreg free
  1824   012390  500C               	movf	reading_values@cCurr^0,w,c
  1825   012392  6ED9               	movwf	fsr2l,c
  1826   012394  6ADA               	clrf	fsr2h,c
  1827   012396  0E02               	movlw	2
  1828   012398  26D9               	addwf	fsr2l,f,c
  1829   01239A  C005  FFDE         	movff	?_color_read_Green,postinc2
  1830   01239E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1831                           
  1832                           ;color.c: 307:     (cCurr->clear) = color_read_Clear();
  1833   0123A2  EC2D  F092         	call	_color_read_Clear	;wreg free
  1834   0123A6  500C               	movf	reading_values@cCurr^0,w,c
  1835   0123A8  6ED9               	movwf	fsr2l,c
  1836   0123AA  6ADA               	clrf	fsr2h,c
  1837   0123AC  0E06               	movlw	6
  1838   0123AE  26D9               	addwf	fsr2l,f,c
  1839   0123B0  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1840   0123B4  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1841   0123B8  0012               	return		;funcret
  1842   0123BA                     __end_of_reading_values:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _convert_rgb2hue *****************
  1846 ;; Defined at:
  1847 ;;		line 100 in file "color.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  cMax            2   49[COMRAM] PTR struct colors
  1850 ;;		 -> colorCalibration(8), 
  1851 ;;  cCurr           1   51[COMRAM] PTR struct colors
  1852 ;;		 -> colorCurrent(8), 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  b               4   64[BANK0 ] float 
  1855 ;;  g               4   60[BANK0 ] float 
  1856 ;;  r               4   56[BANK0 ] float 
  1857 ;;  hue             4   52[BANK0 ] float 
  1858 ;;  max             4   48[BANK0 ] float 
  1859 ;;  diff            4   44[BANK0 ] float 
  1860 ;;  min             4   40[BANK0 ] float 
  1861 ;;  bluemax         4   20[BANK0 ] float 
  1862 ;;  bluecurrent     4   16[BANK0 ] float 
  1863 ;;  greenmax        4   12[BANK0 ] float 
  1864 ;;  greencurrent    4    8[BANK0 ] float 
  1865 ;;  redmax          4    4[BANK0 ] float 
  1866 ;;  redcurrent      4    0[BANK0 ] float 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2   49[COMRAM] unsigned int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1876 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1877 ;;      Locals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1879 ;;      Totals:         5      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1880 ;;Total ram usage:       73 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 2
  1883 ;; This function calls:
  1884 ;;		___fladd
  1885 ;;		___fldiv
  1886 ;;		___fleq
  1887 ;;		___flge
  1888 ;;		___flmul
  1889 ;;		___flsub
  1890 ;;		___fltol
  1891 ;;		___xxtofl
  1892 ;; This function is called by:
  1893 ;;		_test
  1894 ;;		_decision
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text4
  1899   010000                     __ptext4:
  1900                           	callstack 0
  1901   010000                     _convert_rgb2hue:
  1902                           	callstack 27
  1903   010000                     
  1904                           ;color.c: 100: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);c
      +                          olor.c: 101: {;color.c: 102:     float redcurrent, redmax, greencurrent, greenmax, bluec
      +                          urrent, bluemax;;color.c: 103:     float r, g, b, min, max, diff, hue = 0.0;
  1905   010000  0E00               	movlw	0
  1906   010002  0100               	movlb	0	; () banked
  1907   010004  6F94               	movwf	convert_rgb2hue@hue& (0+255),b
  1908   010006  0E00               	movlw	0
  1909   010008  6F95               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  1910   01000A  0E00               	movlw	0
  1911   01000C  6F96               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  1912   01000E  0E00               	movlw	0
  1913   010010  6F97               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  1914   010012                     
  1915                           ; BSR set to: 0
  1916                           ;color.c: 105:     redcurrent = cCurr->red;
  1917   010012  5034               	movf	convert_rgb2hue@cCurr^0,w,c
  1918   010014  6ED9               	movwf	fsr2l,c
  1919   010016  6ADA               	clrf	fsr2h,c
  1920   010018  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  1921   01001C  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  1922   010020  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1923   010024  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1924   010028  6A03               	clrf	(___xxtofl@val+2)^0,c
  1925   01002A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1926   01002C  0E00               	movlw	0
  1927   01002E  ECA7  F08A         	call	___xxtofl
  1928   010032  C001  F060         	movff	?___xxtofl,convert_rgb2hue@redcurrent
  1929   010036  C002  F061         	movff	?___xxtofl+1,convert_rgb2hue@redcurrent+1
  1930   01003A  C003  F062         	movff	?___xxtofl+2,convert_rgb2hue@redcurrent+2
  1931   01003E  C004  F063         	movff	?___xxtofl+3,convert_rgb2hue@redcurrent+3
  1932   010042                     
  1933                           ;color.c: 106:     redmax = cMax->red;
  1934   010042  C032  FFD9         	movff	convert_rgb2hue@cMax,fsr2l
  1935   010046  C033  FFDA         	movff	convert_rgb2hue@cMax+1,fsr2h
  1936   01004A  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  1937   01004E  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  1938   010052  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1939   010056  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1940   01005A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1941   01005C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1942   01005E  0E00               	movlw	0
  1943   010060  ECA7  F08A         	call	___xxtofl
  1944   010064  C001  F064         	movff	?___xxtofl,convert_rgb2hue@redmax
  1945   010068  C002  F065         	movff	?___xxtofl+1,convert_rgb2hue@redmax+1
  1946   01006C  C003  F066         	movff	?___xxtofl+2,convert_rgb2hue@redmax+2
  1947   010070  C004  F067         	movff	?___xxtofl+3,convert_rgb2hue@redmax+3
  1948   010074                     
  1949                           ;color.c: 107:     greencurrent = cCurr->green;
  1950   010074  5034               	movf	convert_rgb2hue@cCurr^0,w,c
  1951   010076  6ED9               	movwf	fsr2l,c
  1952   010078  6ADA               	clrf	fsr2h,c
  1953   01007A  0E02               	movlw	2
  1954   01007C  26D9               	addwf	fsr2l,f,c
  1955   01007E  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  1956   010082  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  1957   010086  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1958   01008A  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1959   01008E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1960   010090  6A04               	clrf	(___xxtofl@val+3)^0,c
  1961   010092  0E00               	movlw	0
  1962   010094  ECA7  F08A         	call	___xxtofl
  1963   010098  C001  F068         	movff	?___xxtofl,convert_rgb2hue@greencurrent
  1964   01009C  C002  F069         	movff	?___xxtofl+1,convert_rgb2hue@greencurrent+1
  1965   0100A0  C003  F06A         	movff	?___xxtofl+2,convert_rgb2hue@greencurrent+2
  1966   0100A4  C004  F06B         	movff	?___xxtofl+3,convert_rgb2hue@greencurrent+3
  1967   0100A8                     
  1968                           ;color.c: 108:     greenmax = cMax->green;
  1969   0100A8  EE20 F002          	lfsr	2,2
  1970   0100AC  5032               	movf	convert_rgb2hue@cMax^0,w,c
  1971   0100AE  26D9               	addwf	fsr2l,f,c
  1972   0100B0  5033               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  1973   0100B2  22DA               	addwfc	fsr2h,f,c
  1974   0100B4  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  1975   0100B8  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  1976   0100BC  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1977   0100C0  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1978   0100C4  6A03               	clrf	(___xxtofl@val+2)^0,c
  1979   0100C6  6A04               	clrf	(___xxtofl@val+3)^0,c
  1980   0100C8  0E00               	movlw	0
  1981   0100CA  ECA7  F08A         	call	___xxtofl
  1982   0100CE  C001  F06C         	movff	?___xxtofl,convert_rgb2hue@greenmax
  1983   0100D2  C002  F06D         	movff	?___xxtofl+1,convert_rgb2hue@greenmax+1
  1984   0100D6  C003  F06E         	movff	?___xxtofl+2,convert_rgb2hue@greenmax+2
  1985   0100DA  C004  F06F         	movff	?___xxtofl+3,convert_rgb2hue@greenmax+3
  1986   0100DE                     
  1987                           ;color.c: 109:     bluecurrent = cCurr->blue;
  1988   0100DE  5034               	movf	convert_rgb2hue@cCurr^0,w,c
  1989   0100E0  6ED9               	movwf	fsr2l,c
  1990   0100E2  6ADA               	clrf	fsr2h,c
  1991   0100E4  0E04               	movlw	4
  1992   0100E6  26D9               	addwf	fsr2l,f,c
  1993   0100E8  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  1994   0100EC  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  1995   0100F0  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  1996   0100F4  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  1997   0100F8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1998   0100FA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1999   0100FC  0E00               	movlw	0
  2000   0100FE  ECA7  F08A         	call	___xxtofl
  2001   010102  C001  F070         	movff	?___xxtofl,convert_rgb2hue@bluecurrent
  2002   010106  C002  F071         	movff	?___xxtofl+1,convert_rgb2hue@bluecurrent+1
  2003   01010A  C003  F072         	movff	?___xxtofl+2,convert_rgb2hue@bluecurrent+2
  2004   01010E  C004  F073         	movff	?___xxtofl+3,convert_rgb2hue@bluecurrent+3
  2005   010112                     
  2006                           ;color.c: 110:     bluemax = cMax->blue;
  2007   010112  EE20 F004          	lfsr	2,4
  2008   010116  5032               	movf	convert_rgb2hue@cMax^0,w,c
  2009   010118  26D9               	addwf	fsr2l,f,c
  2010   01011A  5033               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2011   01011C  22DA               	addwfc	fsr2h,f,c
  2012   01011E  CFDE F035          	movff	postinc2,??_convert_rgb2hue
  2013   010122  CFDD F036          	movff	postdec2,??_convert_rgb2hue+1
  2014   010126  C035  F001         	movff	??_convert_rgb2hue,___xxtofl@val
  2015   01012A  C036  F002         	movff	??_convert_rgb2hue+1,___xxtofl@val+1
  2016   01012E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2017   010130  6A04               	clrf	(___xxtofl@val+3)^0,c
  2018   010132  0E00               	movlw	0
  2019   010134  ECA7  F08A         	call	___xxtofl
  2020   010138  C001  F074         	movff	?___xxtofl,convert_rgb2hue@bluemax
  2021   01013C  C002  F075         	movff	?___xxtofl+1,convert_rgb2hue@bluemax+1
  2022   010140  C003  F076         	movff	?___xxtofl+2,convert_rgb2hue@bluemax+2
  2023   010144  C004  F077         	movff	?___xxtofl+3,convert_rgb2hue@bluemax+3
  2024   010148                     
  2025                           ;color.c: 112:     r = redcurrent/redmax;
  2026   010148  C060  F019         	movff	convert_rgb2hue@redcurrent,___fldiv@b
  2027   01014C  C061  F01A         	movff	convert_rgb2hue@redcurrent+1,___fldiv@b+1
  2028   010150  C062  F01B         	movff	convert_rgb2hue@redcurrent+2,___fldiv@b+2
  2029   010154  C063  F01C         	movff	convert_rgb2hue@redcurrent+3,___fldiv@b+3
  2030   010158  C064  F01D         	movff	convert_rgb2hue@redmax,___fldiv@a
  2031   01015C  C065  F01E         	movff	convert_rgb2hue@redmax+1,___fldiv@a+1
  2032   010160  C066  F01F         	movff	convert_rgb2hue@redmax+2,___fldiv@a+2
  2033   010164  C067  F020         	movff	convert_rgb2hue@redmax+3,___fldiv@a+3
  2034   010168  ECFB  F087         	call	___fldiv	;wreg free
  2035   01016C  C019  F098         	movff	?___fldiv,convert_rgb2hue@r
  2036   010170  C01A  F099         	movff	?___fldiv+1,convert_rgb2hue@r+1
  2037   010174  C01B  F09A         	movff	?___fldiv+2,convert_rgb2hue@r+2
  2038   010178  C01C  F09B         	movff	?___fldiv+3,convert_rgb2hue@r+3
  2039   01017C                     
  2040                           ;color.c: 113:     g = greencurrent/greenmax;
  2041   01017C  C068  F019         	movff	convert_rgb2hue@greencurrent,___fldiv@b
  2042   010180  C069  F01A         	movff	convert_rgb2hue@greencurrent+1,___fldiv@b+1
  2043   010184  C06A  F01B         	movff	convert_rgb2hue@greencurrent+2,___fldiv@b+2
  2044   010188  C06B  F01C         	movff	convert_rgb2hue@greencurrent+3,___fldiv@b+3
  2045   01018C  C06C  F01D         	movff	convert_rgb2hue@greenmax,___fldiv@a
  2046   010190  C06D  F01E         	movff	convert_rgb2hue@greenmax+1,___fldiv@a+1
  2047   010194  C06E  F01F         	movff	convert_rgb2hue@greenmax+2,___fldiv@a+2
  2048   010198  C06F  F020         	movff	convert_rgb2hue@greenmax+3,___fldiv@a+3
  2049   01019C  ECFB  F087         	call	___fldiv	;wreg free
  2050   0101A0  C019  F09C         	movff	?___fldiv,convert_rgb2hue@g
  2051   0101A4  C01A  F09D         	movff	?___fldiv+1,convert_rgb2hue@g+1
  2052   0101A8  C01B  F09E         	movff	?___fldiv+2,convert_rgb2hue@g+2
  2053   0101AC  C01C  F09F         	movff	?___fldiv+3,convert_rgb2hue@g+3
  2054   0101B0                     
  2055                           ;color.c: 114:     b = bluecurrent/bluemax;
  2056   0101B0  C070  F019         	movff	convert_rgb2hue@bluecurrent,___fldiv@b
  2057   0101B4  C071  F01A         	movff	convert_rgb2hue@bluecurrent+1,___fldiv@b+1
  2058   0101B8  C072  F01B         	movff	convert_rgb2hue@bluecurrent+2,___fldiv@b+2
  2059   0101BC  C073  F01C         	movff	convert_rgb2hue@bluecurrent+3,___fldiv@b+3
  2060   0101C0  C074  F01D         	movff	convert_rgb2hue@bluemax,___fldiv@a
  2061   0101C4  C075  F01E         	movff	convert_rgb2hue@bluemax+1,___fldiv@a+1
  2062   0101C8  C076  F01F         	movff	convert_rgb2hue@bluemax+2,___fldiv@a+2
  2063   0101CC  C077  F020         	movff	convert_rgb2hue@bluemax+3,___fldiv@a+3
  2064   0101D0  ECFB  F087         	call	___fldiv	;wreg free
  2065   0101D4  C019  F0A0         	movff	?___fldiv,convert_rgb2hue@b
  2066   0101D8  C01A  F0A1         	movff	?___fldiv+1,convert_rgb2hue@b+1
  2067   0101DC  C01B  F0A2         	movff	?___fldiv+2,convert_rgb2hue@b+2
  2068   0101E0  C01C  F0A3         	movff	?___fldiv+3,convert_rgb2hue@b+3
  2069   0101E4                     
  2070                           ;color.c: 116:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  2071   0101E4  C098  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2072   0101E8  C099  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2073   0101EC  C09A  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2074   0101F0  C09B  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2075   0101F4  C09C  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2076   0101F8  C09D  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2077   0101FC  C09E  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2078   010200  C09F  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2079   010204  EC4F  F08E         	call	___flge	;wreg free
  2080   010208  A0D8               	btfss	status,0,c
  2081   01020A  EF09  F081         	goto	u4601
  2082   01020E  EF0B  F081         	goto	u4600
  2083   010212                     u4601:
  2084   010212  EF40  F081         	goto	l4899
  2085   010216                     u4600:
  2086   010216  C09C  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2087   01021A  C09D  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2088   01021E  C09E  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2089   010222  C09F  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2090   010226  C0A0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2091   01022A  C0A1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2092   01022E  C0A2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2093   010232  C0A3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2094   010236  EC4F  F08E         	call	___flge	;wreg free
  2095   01023A  A0D8               	btfss	status,0,c
  2096   01023C  EF22  F081         	goto	u4611
  2097   010240  EF24  F081         	goto	u4610
  2098   010244                     u4611:
  2099   010244  EF2E  F081         	goto	l82
  2100   010248                     u4610:
  2101   010248  C0A0  F078         	movff	convert_rgb2hue@b,_convert_rgb2hue$309
  2102   01024C  C0A1  F079         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$309+1
  2103   010250  C0A2  F07A         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$309+2
  2104   010254  C0A3  F07B         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$309+3
  2105   010258  EF36  F081         	goto	l84
  2106   01025C                     l82:
  2107   01025C  C09C  F078         	movff	convert_rgb2hue@g,_convert_rgb2hue$309
  2108   010260  C09D  F079         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$309+1
  2109   010264  C09E  F07A         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$309+2
  2110   010268  C09F  F07B         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$309+3
  2111   01026C                     l84:
  2112   01026C  C078  F088         	movff	_convert_rgb2hue$309,convert_rgb2hue@min
  2113   010270  C079  F089         	movff	_convert_rgb2hue$309+1,convert_rgb2hue@min+1
  2114   010274  C07A  F08A         	movff	_convert_rgb2hue$309+2,convert_rgb2hue@min+2
  2115   010278  C07B  F08B         	movff	_convert_rgb2hue$309+3,convert_rgb2hue@min+3
  2116   01027C  EF73  F081         	goto	l4903
  2117   010280                     l4899:
  2118   010280  C098  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2119   010284  C099  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2120   010288  C09A  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2121   01028C  C09B  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2122   010290  C0A0  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2123   010294  C0A1  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2124   010298  C0A2  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2125   01029C  C0A3  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2126   0102A0  EC4F  F08E         	call	___flge	;wreg free
  2127   0102A4  A0D8               	btfss	status,0,c
  2128   0102A6  EF57  F081         	goto	u4621
  2129   0102AA  EF59  F081         	goto	u4620
  2130   0102AE                     u4621:
  2131   0102AE  EF63  F081         	goto	l86
  2132   0102B2                     u4620:
  2133   0102B2  C0A0  F07C         	movff	convert_rgb2hue@b,_convert_rgb2hue$310
  2134   0102B6  C0A1  F07D         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$310+1
  2135   0102BA  C0A2  F07E         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$310+2
  2136   0102BE  C0A3  F07F         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$310+3
  2137   0102C2  EF6B  F081         	goto	l88
  2138   0102C6                     l86:
  2139   0102C6  C098  F07C         	movff	convert_rgb2hue@r,_convert_rgb2hue$310
  2140   0102CA  C099  F07D         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$310+1
  2141   0102CE  C09A  F07E         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$310+2
  2142   0102D2  C09B  F07F         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$310+3
  2143   0102D6                     l88:
  2144   0102D6  C07C  F088         	movff	_convert_rgb2hue$310,convert_rgb2hue@min
  2145   0102DA  C07D  F089         	movff	_convert_rgb2hue$310+1,convert_rgb2hue@min+1
  2146   0102DE  C07E  F08A         	movff	_convert_rgb2hue$310+2,convert_rgb2hue@min+2
  2147   0102E2  C07F  F08B         	movff	_convert_rgb2hue$310+3,convert_rgb2hue@min+3
  2148   0102E6                     l4903:
  2149                           
  2150                           ;color.c: 117:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  2151   0102E6  C09C  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2152   0102EA  C09D  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2153   0102EE  C09E  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2154   0102F2  C09F  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2155   0102F6  C098  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2156   0102FA  C099  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2157   0102FE  C09A  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2158   010302  C09B  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2159   010306  EC4F  F08E         	call	___flge	;wreg free
  2160   01030A  A0D8               	btfss	status,0,c
  2161   01030C  EF8A  F081         	goto	u4631
  2162   010310  EF8C  F081         	goto	u4630
  2163   010314                     u4631:
  2164   010314  EFC1  F081         	goto	l4909
  2165   010318                     u4630:
  2166   010318  C0A0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2167   01031C  C0A1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2168   010320  C0A2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2169   010324  C0A3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2170   010328  C09C  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2171   01032C  C09D  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2172   010330  C09E  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2173   010334  C09F  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2174   010338  EC4F  F08E         	call	___flge	;wreg free
  2175   01033C  A0D8               	btfss	status,0,c
  2176   01033E  EFA3  F081         	goto	u4641
  2177   010342  EFA5  F081         	goto	u4640
  2178   010346                     u4641:
  2179   010346  EFAF  F081         	goto	l94
  2180   01034A                     u4640:
  2181   01034A  C0A0  F080         	movff	convert_rgb2hue@b,_convert_rgb2hue$311
  2182   01034E  C0A1  F081         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$311+1
  2183   010352  C0A2  F082         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$311+2
  2184   010356  C0A3  F083         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$311+3
  2185   01035A  EFB7  F081         	goto	l96
  2186   01035E                     l94:
  2187   01035E  C09C  F080         	movff	convert_rgb2hue@g,_convert_rgb2hue$311
  2188   010362  C09D  F081         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$311+1
  2189   010366  C09E  F082         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$311+2
  2190   01036A  C09F  F083         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$311+3
  2191   01036E                     l96:
  2192   01036E  C080  F090         	movff	_convert_rgb2hue$311,convert_rgb2hue@max
  2193   010372  C081  F091         	movff	_convert_rgb2hue$311+1,convert_rgb2hue@max+1
  2194   010376  C082  F092         	movff	_convert_rgb2hue$311+2,convert_rgb2hue@max+2
  2195   01037A  C083  F093         	movff	_convert_rgb2hue$311+3,convert_rgb2hue@max+3
  2196   01037E  EFF4  F081         	goto	l4913
  2197   010382                     l4909:
  2198   010382  C0A0  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2199   010386  C0A1  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2200   01038A  C0A2  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2201   01038E  C0A3  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2202   010392  C098  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2203   010396  C099  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2204   01039A  C09A  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2205   01039E  C09B  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2206   0103A2  EC4F  F08E         	call	___flge	;wreg free
  2207   0103A6  A0D8               	btfss	status,0,c
  2208   0103A8  EFD8  F081         	goto	u4651
  2209   0103AC  EFDA  F081         	goto	u4650
  2210   0103B0                     u4651:
  2211   0103B0  EFE4  F081         	goto	l98
  2212   0103B4                     u4650:
  2213   0103B4  C0A0  F084         	movff	convert_rgb2hue@b,_convert_rgb2hue$312
  2214   0103B8  C0A1  F085         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$312+1
  2215   0103BC  C0A2  F086         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$312+2
  2216   0103C0  C0A3  F087         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$312+3
  2217   0103C4  EFEC  F081         	goto	l100
  2218   0103C8                     l98:
  2219   0103C8  C098  F084         	movff	convert_rgb2hue@r,_convert_rgb2hue$312
  2220   0103CC  C099  F085         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$312+1
  2221   0103D0  C09A  F086         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$312+2
  2222   0103D4  C09B  F087         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$312+3
  2223   0103D8                     l100:
  2224   0103D8  C084  F090         	movff	_convert_rgb2hue$312,convert_rgb2hue@max
  2225   0103DC  C085  F091         	movff	_convert_rgb2hue$312+1,convert_rgb2hue@max+1
  2226   0103E0  C086  F092         	movff	_convert_rgb2hue$312+2,convert_rgb2hue@max+2
  2227   0103E4  C087  F093         	movff	_convert_rgb2hue$312+3,convert_rgb2hue@max+3
  2228   0103E8                     l4913:
  2229                           
  2230                           ;color.c: 118:     diff = max - min;
  2231   0103E8  C090  F011         	movff	convert_rgb2hue@max,___flsub@b
  2232   0103EC  C091  F012         	movff	convert_rgb2hue@max+1,___flsub@b+1
  2233   0103F0  C092  F013         	movff	convert_rgb2hue@max+2,___flsub@b+2
  2234   0103F4  C093  F014         	movff	convert_rgb2hue@max+3,___flsub@b+3
  2235   0103F8  C088  F015         	movff	convert_rgb2hue@min,___flsub@a
  2236   0103FC  C089  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2237   010400  C08A  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2238   010404  C08B  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2239   010408  EC7D  F092         	call	___flsub	;wreg free
  2240   01040C  C011  F08C         	movff	?___flsub,convert_rgb2hue@diff
  2241   010410  C012  F08D         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2242   010414  C013  F08E         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2243   010418  C014  F08F         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2244                           
  2245                           ;color.c: 119:     if (max == min) {
  2246   01041C  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2247   010420  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2248   010424  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2249   010428  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2250   01042C  C088  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2251   010430  C089  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2252   010434  C08A  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2253   010438  C08B  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2254   01043C  EC40  F090         	call	___fleq	;wreg free
  2255   010440  A0D8               	btfss	status,0,c
  2256   010442  EF25  F082         	goto	u4661
  2257   010446  EF27  F082         	goto	u4660
  2258   01044A                     u4661:
  2259   01044A  EF32  F082         	goto	l4917
  2260   01044E                     u4660:
  2261   01044E                     
  2262                           ;color.c: 120:         hue = 0;
  2263   01044E  0E00               	movlw	0
  2264   010450  0100               	movlb	0	; () banked
  2265   010452  6F94               	movwf	convert_rgb2hue@hue& (0+255),b
  2266   010454  0E00               	movlw	0
  2267   010456  6F95               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  2268   010458  0E00               	movlw	0
  2269   01045A  6F96               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  2270   01045C  0E00               	movlw	0
  2271   01045E  6F97               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  2272                           
  2273                           ;color.c: 121:     } else if (max == r){
  2274   010460  EF3B  F083         	goto	l4929
  2275   010464                     l4917:
  2276   010464  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2277   010468  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2278   01046C  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2279   010470  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2280   010474  C098  F005         	movff	convert_rgb2hue@r,___fleq@ff2
  2281   010478  C099  F006         	movff	convert_rgb2hue@r+1,___fleq@ff2+1
  2282   01047C  C09A  F007         	movff	convert_rgb2hue@r+2,___fleq@ff2+2
  2283   010480  C09B  F008         	movff	convert_rgb2hue@r+3,___fleq@ff2+3
  2284   010484  EC40  F090         	call	___fleq	;wreg free
  2285   010488  A0D8               	btfss	status,0,c
  2286   01048A  EF49  F082         	goto	u4671
  2287   01048E  EF4B  F082         	goto	u4670
  2288   010492                     u4671:
  2289   010492  EF79  F082         	goto	l4921
  2290   010496                     u4670:
  2291   010496                     
  2292                           ;color.c: 122:         hue = (b - g) / diff;
  2293   010496  C09C  F015         	movff	convert_rgb2hue@g,___flsub@a
  2294   01049A  C09D  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2295   01049E  C09E  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2296   0104A2  C09F  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2297   0104A6  C0A0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2298   0104AA  C0A1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2299   0104AE  C0A2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2300   0104B2  C0A3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2301   0104B6  EC7D  F092         	call	___flsub	;wreg free
  2302   0104BA  C011  F019         	movff	?___flsub,___fldiv@b
  2303   0104BE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2304   0104C2  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2305   0104C6  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2306   0104CA  C08C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2307   0104CE  C08D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2308   0104D2  C08E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2309   0104D6  C08F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2310   0104DA  ECFB  F087         	call	___fldiv	;wreg free
  2311   0104DE  C019  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2312   0104E2  C01A  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2313   0104E6  C01B  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2314   0104EA  C01C  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2315                           
  2316                           ;color.c: 123:     } else if (max == g){
  2317   0104EE  EF3B  F083         	goto	l4929
  2318   0104F2                     l4921:
  2319   0104F2  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2320   0104F6  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2321   0104FA  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2322   0104FE  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2323   010502  C09C  F005         	movff	convert_rgb2hue@g,___fleq@ff2
  2324   010506  C09D  F006         	movff	convert_rgb2hue@g+1,___fleq@ff2+1
  2325   01050A  C09E  F007         	movff	convert_rgb2hue@g+2,___fleq@ff2+2
  2326   01050E  C09F  F008         	movff	convert_rgb2hue@g+3,___fleq@ff2+3
  2327   010512  EC40  F090         	call	___fleq	;wreg free
  2328   010516  A0D8               	btfss	status,0,c
  2329   010518  EF90  F082         	goto	u4681
  2330   01051C  EF92  F082         	goto	u4680
  2331   010520                     u4681:
  2332   010520  EFDA  F082         	goto	l4925
  2333   010524                     u4680:
  2334   010524                     
  2335                           ;color.c: 124:         hue = (b - r) / diff;
  2336   010524  C098  F015         	movff	convert_rgb2hue@r,___flsub@a
  2337   010528  C099  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2338   01052C  C09A  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2339   010530  C09B  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2340   010534  C0A0  F011         	movff	convert_rgb2hue@b,___flsub@b
  2341   010538  C0A1  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2342   01053C  C0A2  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2343   010540  C0A3  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2344   010544  EC7D  F092         	call	___flsub	;wreg free
  2345   010548  C011  F019         	movff	?___flsub,___fldiv@b
  2346   01054C  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2347   010550  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2348   010554  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2349   010558  C08C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2350   01055C  C08D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2351   010560  C08E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2352   010564  C08F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2353   010568  ECFB  F087         	call	___fldiv	;wreg free
  2354   01056C  C019  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2355   010570  C01A  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2356   010574  C01B  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2357   010578  C01C  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2358                           
  2359                           ;color.c: 125:         hue = hue + 2;
  2360   01057C  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2361   010580  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2362   010584  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2363   010588  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2364   01058C  0E00               	movlw	0
  2365   01058E  6E05               	movwf	___fladd@a^0,c
  2366   010590  0E00               	movlw	0
  2367   010592  6E06               	movwf	(___fladd@a+1)^0,c
  2368   010594  0E00               	movlw	0
  2369   010596  6E07               	movwf	(___fladd@a+2)^0,c
  2370   010598  0E40               	movlw	64
  2371   01059A  6E08               	movwf	(___fladd@a+3)^0,c
  2372   01059C  EC86  F083         	call	___fladd	;wreg free
  2373   0105A0  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2374   0105A4  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2375   0105A8  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2376   0105AC  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2377                           
  2378                           ;color.c: 126:     } else if (max == b){
  2379   0105B0  EF3B  F083         	goto	l4929
  2380   0105B4                     l4925:
  2381   0105B4  C090  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2382   0105B8  C091  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2383   0105BC  C092  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2384   0105C0  C093  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2385   0105C4  C0A0  F005         	movff	convert_rgb2hue@b,___fleq@ff2
  2386   0105C8  C0A1  F006         	movff	convert_rgb2hue@b+1,___fleq@ff2+1
  2387   0105CC  C0A2  F007         	movff	convert_rgb2hue@b+2,___fleq@ff2+2
  2388   0105D0  C0A3  F008         	movff	convert_rgb2hue@b+3,___fleq@ff2+3
  2389   0105D4  EC40  F090         	call	___fleq	;wreg free
  2390   0105D8  A0D8               	btfss	status,0,c
  2391   0105DA  EFF1  F082         	goto	u4691
  2392   0105DE  EFF3  F082         	goto	u4690
  2393   0105E2                     u4691:
  2394   0105E2  EF3B  F083         	goto	l104
  2395   0105E6                     u4690:
  2396   0105E6                     
  2397                           ;color.c: 127:         hue = (r - g) / diff;
  2398   0105E6  C09C  F015         	movff	convert_rgb2hue@g,___flsub@a
  2399   0105EA  C09D  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2400   0105EE  C09E  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2401   0105F2  C09F  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2402   0105F6  C098  F011         	movff	convert_rgb2hue@r,___flsub@b
  2403   0105FA  C099  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2404   0105FE  C09A  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2405   010602  C09B  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2406   010606  EC7D  F092         	call	___flsub	;wreg free
  2407   01060A  C011  F019         	movff	?___flsub,___fldiv@b
  2408   01060E  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2409   010612  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2410   010616  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2411   01061A  C08C  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2412   01061E  C08D  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2413   010622  C08E  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2414   010626  C08F  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2415   01062A  ECFB  F087         	call	___fldiv	;wreg free
  2416   01062E  C019  F094         	movff	?___fldiv,convert_rgb2hue@hue
  2417   010632  C01A  F095         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2418   010636  C01B  F096         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2419   01063A  C01C  F097         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2420                           
  2421                           ;color.c: 128:         hue = hue + 4;
  2422   01063E  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2423   010642  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2424   010646  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2425   01064A  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2426   01064E  0E00               	movlw	0
  2427   010650  6E05               	movwf	___fladd@a^0,c
  2428   010652  0E00               	movlw	0
  2429   010654  6E06               	movwf	(___fladd@a+1)^0,c
  2430   010656  0E80               	movlw	128
  2431   010658  6E07               	movwf	(___fladd@a+2)^0,c
  2432   01065A  0E40               	movlw	64
  2433   01065C  6E08               	movwf	(___fladd@a+3)^0,c
  2434   01065E  EC86  F083         	call	___fladd	;wreg free
  2435   010662  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2436   010666  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2437   01066A  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2438   01066E  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2439   010672  EF3B  F083         	goto	l4929
  2440   010676                     l104:
  2441   010676                     l4929:
  2442                           
  2443                           ;color.c: 131:     hue = hue * 60;
  2444   010676  C094  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2445   01067A  C095  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2446   01067E  C096  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2447   010682  C097  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2448   010686  0E00               	movlw	0
  2449   010688  6E05               	movwf	___flmul@a^0,c
  2450   01068A  0E00               	movlw	0
  2451   01068C  6E06               	movwf	(___flmul@a+1)^0,c
  2452   01068E  0E70               	movlw	112
  2453   010690  6E07               	movwf	(___flmul@a+2)^0,c
  2454   010692  0E42               	movlw	66
  2455   010694  6E08               	movwf	(___flmul@a+3)^0,c
  2456   010696  ECE6  F085         	call	___flmul	;wreg free
  2457   01069A  C001  F094         	movff	?___flmul,convert_rgb2hue@hue
  2458   01069E  C002  F095         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2459   0106A2  C003  F096         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2460   0106A6  C004  F097         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2461   0106AA                     
  2462                           ;color.c: 132:     if (hue < 0) {
  2463   0106AA  0100               	movlb	0	; () banked
  2464   0106AC  BF97               	btfsc	(convert_rgb2hue@hue+3)& (0+255),7,b
  2465   0106AE  EF5D  F083         	goto	u4700
  2466   0106B2  EF5B  F083         	goto	u4701
  2467   0106B6                     u4701:
  2468   0106B6  EF77  F083         	goto	l108
  2469   0106BA                     u4700:
  2470   0106BA                     
  2471                           ; BSR set to: 0
  2472                           ;color.c: 133:         hue = hue + 360;
  2473   0106BA  C094  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2474   0106BE  C095  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2475   0106C2  C096  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2476   0106C6  C097  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2477   0106CA  0E00               	movlw	0
  2478   0106CC  6E05               	movwf	___fladd@a^0,c
  2479   0106CE  0E00               	movlw	0
  2480   0106D0  6E06               	movwf	(___fladd@a+1)^0,c
  2481   0106D2  0EB4               	movlw	180
  2482   0106D4  6E07               	movwf	(___fladd@a+2)^0,c
  2483   0106D6  0E43               	movlw	67
  2484   0106D8  6E08               	movwf	(___fladd@a+3)^0,c
  2485   0106DA  EC86  F083         	call	___fladd	;wreg free
  2486   0106DE  C001  F094         	movff	?___fladd,convert_rgb2hue@hue
  2487   0106E2  C002  F095         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2488   0106E6  C003  F096         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2489   0106EA  C004  F097         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2490   0106EE                     l108:
  2491                           
  2492                           ;color.c: 136:     return (unsigned int)hue;
  2493   0106EE  C094  F001         	movff	convert_rgb2hue@hue,___fltol@f1
  2494   0106F2  C095  F002         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2495   0106F6  C096  F003         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2496   0106FA  C097  F004         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2497   0106FE  ECCC  F08D         	call	___fltol	;wreg free
  2498   010702  C001  F032         	movff	?___fltol,?_convert_rgb2hue
  2499   010706  C002  F033         	movff	?___fltol+1,?_convert_rgb2hue+1
  2500   01070A  0012               	return		;funcret
  2501   01070C                     __end_of_convert_rgb2hue:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function ___xxtofl *****************
  2505 ;; Defined at:
  2506 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  sign            1    wreg     unsigned char 
  2509 ;;  val             4    0[COMRAM] long 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  sign            1    8[COMRAM] unsigned char 
  2512 ;;  arg             4   10[COMRAM] unsigned long 
  2513 ;;  exp             1    9[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  4    0[COMRAM] unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;Total ram usage:       14 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_convert_rgb2hue
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text5
  2537   01154E                     __ptext5:
  2538                           	callstack 0
  2539   01154E                     ___xxtofl:
  2540                           	callstack 28
  2541                           
  2542                           ;incstack = 0
  2543                           ;___xxtofl@sign stored from wreg
  2544   01154E  6E09               	movwf	___xxtofl@sign^0,c
  2545   011550  5009               	movf	___xxtofl@sign^0,w,c
  2546   011552  B4D8               	btfsc	status,2,c
  2547   011554  EFAE  F08A         	goto	u3511
  2548   011558  EFB0  F08A         	goto	u3510
  2549   01155C                     u3511:
  2550   01155C  EFD2  F08A         	goto	l1200
  2551   011560                     u3510:
  2552   011560  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2553   011562  EFB7  F08A         	goto	u3520
  2554   011566  EFB5  F08A         	goto	u3521
  2555   01156A                     u3521:
  2556   01156A  EFD2  F08A         	goto	l1200
  2557   01156E                     u3520:
  2558   01156E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  2559   011572  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  2560   011576  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  2561   01157A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  2562   01157E  1E05               	comf	??___xxtofl^0,f,c
  2563   011580  1E06               	comf	(??___xxtofl+1)^0,f,c
  2564   011582  1E07               	comf	(??___xxtofl+2)^0,f,c
  2565   011584  1E08               	comf	(??___xxtofl+3)^0,f,c
  2566   011586  2A05               	incf	??___xxtofl^0,f,c
  2567   011588  0E00               	movlw	0
  2568   01158A  2206               	addwfc	(??___xxtofl+1)^0,f,c
  2569   01158C  2207               	addwfc	(??___xxtofl+2)^0,f,c
  2570   01158E  2208               	addwfc	(??___xxtofl+3)^0,f,c
  2571   011590  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  2572   011594  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  2573   011598  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  2574   01159C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  2575   0115A0  EFDA  F08A         	goto	l3837
  2576   0115A4                     l1200:
  2577   0115A4  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  2578   0115A8  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2579   0115AC  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2580   0115B0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2581   0115B4                     l3837:
  2582   0115B4  5001               	movf	___xxtofl@val^0,w,c
  2583   0115B6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  2584   0115B8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  2585   0115BA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  2586   0115BC  A4D8               	btfss	status,2,c
  2587   0115BE  EFE3  F08A         	goto	u3531
  2588   0115C2  EFE5  F08A         	goto	u3530
  2589   0115C6                     u3531:
  2590   0115C6  EFEF  F08A         	goto	l3843
  2591   0115CA                     u3530:
  2592   0115CA  0E00               	movlw	0
  2593   0115CC  6E01               	movwf	?___xxtofl^0,c
  2594   0115CE  0E00               	movlw	0
  2595   0115D0  6E02               	movwf	(?___xxtofl+1)^0,c
  2596   0115D2  0E00               	movlw	0
  2597   0115D4  6E03               	movwf	(?___xxtofl+2)^0,c
  2598   0115D6  0E00               	movlw	0
  2599   0115D8  6E04               	movwf	(?___xxtofl+3)^0,c
  2600   0115DA  EF80  F08B         	goto	l1203
  2601   0115DE                     l3843:
  2602   0115DE  0E96               	movlw	150
  2603   0115E0  6E0A               	movwf	___xxtofl@exp^0,c
  2604   0115E2  EFF9  F08A         	goto	l3847
  2605   0115E6                     l3845:
  2606   0115E6  2A0A               	incf	___xxtofl@exp^0,f,c
  2607   0115E8  90D8               	bcf	status,0,c
  2608   0115EA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2609   0115EC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2610   0115EE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2611   0115F0  320B               	rrcf	___xxtofl@arg^0,f,c
  2612   0115F2                     l3847:
  2613   0115F2  0E00               	movlw	0
  2614   0115F4  140B               	andwf	___xxtofl@arg^0,w,c
  2615   0115F6  6E05               	movwf	??___xxtofl^0,c
  2616   0115F8  0E00               	movlw	0
  2617   0115FA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2618   0115FC  6E06               	movwf	(??___xxtofl+1)^0,c
  2619   0115FE  0E00               	movlw	0
  2620   011600  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2621   011602  6E07               	movwf	(??___xxtofl+2)^0,c
  2622   011604  0EFE               	movlw	254
  2623   011606  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2624   011608  6E08               	movwf	(??___xxtofl+3)^0,c
  2625   01160A  5005               	movf	??___xxtofl^0,w,c
  2626   01160C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2627   01160E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2628   011610  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2629   011612  A4D8               	btfss	status,2,c
  2630   011614  EF0E  F08B         	goto	u3541
  2631   011618  EF10  F08B         	goto	u3540
  2632   01161C                     u3541:
  2633   01161C  EFF3  F08A         	goto	l3845
  2634   011620                     u3540:
  2635   011620  EF1E  F08B         	goto	l1207
  2636   011624                     l3849:
  2637   011624  2A0A               	incf	___xxtofl@exp^0,f,c
  2638   011626  0E01               	movlw	1
  2639   011628  260B               	addwf	___xxtofl@arg^0,f,c
  2640   01162A  0E00               	movlw	0
  2641   01162C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  2642   01162E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  2643   011630  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  2644   011632  90D8               	bcf	status,0,c
  2645   011634  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  2646   011636  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  2647   011638  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  2648   01163A  320B               	rrcf	___xxtofl@arg^0,f,c
  2649   01163C                     l1207:
  2650   01163C  0E00               	movlw	0
  2651   01163E  140B               	andwf	___xxtofl@arg^0,w,c
  2652   011640  6E05               	movwf	??___xxtofl^0,c
  2653   011642  0E00               	movlw	0
  2654   011644  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  2655   011646  6E06               	movwf	(??___xxtofl+1)^0,c
  2656   011648  0E00               	movlw	0
  2657   01164A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  2658   01164C  6E07               	movwf	(??___xxtofl+2)^0,c
  2659   01164E  0EFF               	movlw	255
  2660   011650  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  2661   011652  6E08               	movwf	(??___xxtofl+3)^0,c
  2662   011654  5005               	movf	??___xxtofl^0,w,c
  2663   011656  1006               	iorwf	(??___xxtofl+1)^0,w,c
  2664   011658  1007               	iorwf	(??___xxtofl+2)^0,w,c
  2665   01165A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  2666   01165C  A4D8               	btfss	status,2,c
  2667   01165E  EF33  F08B         	goto	u3551
  2668   011662  EF35  F08B         	goto	u3550
  2669   011666                     u3551:
  2670   011666  EF12  F08B         	goto	l3849
  2671   01166A                     u3550:
  2672   01166A  EF3D  F08B         	goto	l3857
  2673   01166E                     l3855:
  2674   01166E  060A               	decf	___xxtofl@exp^0,f,c
  2675   011670  90D8               	bcf	status,0,c
  2676   011672  360B               	rlcf	___xxtofl@arg^0,f,c
  2677   011674  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  2678   011676  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  2679   011678  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  2680   01167A                     l3857:
  2681   01167A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  2682   01167C  EF42  F08B         	goto	u3561
  2683   011680  EF44  F08B         	goto	u3560
  2684   011684                     u3561:
  2685   011684  EF4C  F08B         	goto	l1214
  2686   011688                     u3560:
  2687   011688  0E02               	movlw	2
  2688   01168A  600A               	cpfslt	___xxtofl@exp^0,c
  2689   01168C  EF4A  F08B         	goto	u3571
  2690   011690  EF4C  F08B         	goto	u3570
  2691   011694                     u3571:
  2692   011694  EF37  F08B         	goto	l3855
  2693   011698                     u3570:
  2694   011698                     l1214:
  2695   011698  B00A               	btfsc	___xxtofl@exp^0,0,c
  2696   01169A  EF51  F08B         	goto	u3581
  2697   01169E  EF53  F08B         	goto	u3580
  2698   0116A2                     u3581:
  2699   0116A2  EF54  F08B         	goto	l3863
  2700   0116A6                     u3580:
  2701   0116A6  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  2702   0116A8                     l3863:
  2703   0116A8  90D8               	bcf	status,0,c
  2704   0116AA  320A               	rrcf	___xxtofl@exp^0,f,c
  2705   0116AC  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  2706   0116B0  6A06               	clrf	(??___xxtofl+1)^0,c
  2707   0116B2  6A07               	clrf	(??___xxtofl+2)^0,c
  2708   0116B4  6A08               	clrf	(??___xxtofl+3)^0,c
  2709   0116B6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  2710   0116BA  6A07               	clrf	(??___xxtofl+2)^0,c
  2711   0116BC  6A06               	clrf	(??___xxtofl+1)^0,c
  2712   0116BE  6A05               	clrf	??___xxtofl^0,c
  2713   0116C0  5005               	movf	??___xxtofl^0,w,c
  2714   0116C2  120B               	iorwf	___xxtofl@arg^0,f,c
  2715   0116C4  5006               	movf	(??___xxtofl+1)^0,w,c
  2716   0116C6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  2717   0116C8  5007               	movf	(??___xxtofl+2)^0,w,c
  2718   0116CA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  2719   0116CC  5008               	movf	(??___xxtofl+3)^0,w,c
  2720   0116CE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  2721   0116D0  5009               	movf	___xxtofl@sign^0,w,c
  2722   0116D2  B4D8               	btfsc	status,2,c
  2723   0116D4  EF6E  F08B         	goto	u3591
  2724   0116D8  EF70  F08B         	goto	u3590
  2725   0116DC                     u3591:
  2726   0116DC  EF78  F08B         	goto	l3873
  2727   0116E0                     u3590:
  2728   0116E0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  2729   0116E2  EF77  F08B         	goto	u3600
  2730   0116E6  EF75  F08B         	goto	u3601
  2731   0116EA                     u3601:
  2732   0116EA  EF78  F08B         	goto	l3873
  2733   0116EE                     u3600:
  2734   0116EE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  2735   0116F0                     l3873:
  2736   0116F0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  2737   0116F4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  2738   0116F8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  2739   0116FC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  2740   011700                     l1203:
  2741   011700  0012               	return		;funcret
  2742   011702                     __end_of___xxtofl:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function ___fltol *****************
  2746 ;; Defined at:
  2747 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  f1              4    0[COMRAM] unsigned char 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  exp1            1    9[COMRAM] unsigned char 
  2752 ;;  sign1           1    8[COMRAM] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  4    0[COMRAM] long 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2762 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;Total ram usage:       10 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_convert_rgb2hue
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text6
  2776   011B98                     __ptext6:
  2777                           	callstack 0
  2778   011B98                     ___fltol:
  2779                           	callstack 28
  2780   011B98  3403               	rlcf	(___fltol@f1+2)^0,w,c
  2781   011B9A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  2782   011B9C  6E0A               	movwf	___fltol@exp1^0,c
  2783   011B9E  500A               	movf	___fltol@exp1^0,w,c
  2784   011BA0  A4D8               	btfss	status,2,c
  2785   011BA2  EFD5  F08D         	goto	u3441
  2786   011BA6  EFD7  F08D         	goto	u3440
  2787   011BAA                     u3441:
  2788   011BAA  EFE1  F08D         	goto	l3793
  2789   011BAE                     u3440:
  2790   011BAE                     l3789:
  2791   011BAE  0E00               	movlw	0
  2792   011BB0  6E01               	movwf	?___fltol^0,c
  2793   011BB2  0E00               	movlw	0
  2794   011BB4  6E02               	movwf	(?___fltol+1)^0,c
  2795   011BB6  0E00               	movlw	0
  2796   011BB8  6E03               	movwf	(?___fltol+2)^0,c
  2797   011BBA  0E00               	movlw	0
  2798   011BBC  6E04               	movwf	(?___fltol+3)^0,c
  2799   011BBE  EF4E  F08E         	goto	l842
  2800   011BC2                     l3793:
  2801   011BC2  C001  F005         	movff	___fltol@f1,??___fltol
  2802   011BC6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  2803   011BCA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  2804   011BCE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  2805   011BD2  0E20               	movlw	32
  2806   011BD4  EFF1  F08D         	goto	u3450
  2807   011BD8                     u3455:
  2808   011BD8  90D8               	bcf	status,0,c
  2809   011BDA  3208               	rrcf	(??___fltol+3)^0,f,c
  2810   011BDC  3207               	rrcf	(??___fltol+2)^0,f,c
  2811   011BDE  3206               	rrcf	(??___fltol+1)^0,f,c
  2812   011BE0  3205               	rrcf	??___fltol^0,f,c
  2813   011BE2                     u3450:
  2814   011BE2  2EE8               	decfsz	wreg,f,c
  2815   011BE4  EFEC  F08D         	goto	u3455
  2816   011BE8  5005               	movf	??___fltol^0,w,c
  2817   011BEA  6E09               	movwf	___fltol@sign1^0,c
  2818   011BEC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  2819   011BEE  0EFF               	movlw	255
  2820   011BF0  1601               	andwf	___fltol@f1^0,f,c
  2821   011BF2  0EFF               	movlw	255
  2822   011BF4  1602               	andwf	(___fltol@f1+1)^0,f,c
  2823   011BF6  0EFF               	movlw	255
  2824   011BF8  1603               	andwf	(___fltol@f1+2)^0,f,c
  2825   011BFA  0E00               	movlw	0
  2826   011BFC  1604               	andwf	(___fltol@f1+3)^0,f,c
  2827   011BFE  0E96               	movlw	150
  2828   011C00  5E0A               	subwf	___fltol@exp1^0,f,c
  2829   011C02  BE0A               	btfsc	___fltol@exp1^0,7,c
  2830   011C04  EF08  F08E         	goto	u3460
  2831   011C08  EF06  F08E         	goto	u3461
  2832   011C0C                     u3461:
  2833   011C0C  EF1E  F08E         	goto	l3813
  2834   011C10                     u3460:
  2835   011C10  500A               	movf	___fltol@exp1^0,w,c
  2836   011C12  0A80               	xorlw	128
  2837   011C14  0F97               	addlw	151
  2838   011C16  B0D8               	btfsc	status,0,c
  2839   011C18  EF10  F08E         	goto	u3471
  2840   011C1C  EF12  F08E         	goto	u3470
  2841   011C20                     u3471:
  2842   011C20  EF14  F08E         	goto	l3809
  2843   011C24                     u3470:
  2844   011C24  EFD7  F08D         	goto	l3789
  2845   011C28                     l3809:
  2846   011C28  90D8               	bcf	status,0,c
  2847   011C2A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  2848   011C2C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  2849   011C2E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  2850   011C30  3201               	rrcf	___fltol@f1^0,f,c
  2851   011C32  3E0A               	incfsz	___fltol@exp1^0,f,c
  2852   011C34  EF14  F08E         	goto	l3809
  2853   011C38  EF36  F08E         	goto	l3823
  2854   011C3C                     l3813:
  2855   011C3C  0E1F               	movlw	31
  2856   011C3E  640A               	cpfsgt	___fltol@exp1^0,c
  2857   011C40  EF24  F08E         	goto	u3481
  2858   011C44  EF26  F08E         	goto	u3480
  2859   011C48                     u3481:
  2860   011C48  EF2E  F08E         	goto	l3821
  2861   011C4C                     u3480:
  2862   011C4C  EFD7  F08D         	goto	l3789
  2863   011C50                     l3819:
  2864   011C50  90D8               	bcf	status,0,c
  2865   011C52  3601               	rlcf	___fltol@f1^0,f,c
  2866   011C54  3602               	rlcf	(___fltol@f1+1)^0,f,c
  2867   011C56  3603               	rlcf	(___fltol@f1+2)^0,f,c
  2868   011C58  3604               	rlcf	(___fltol@f1+3)^0,f,c
  2869   011C5A  060A               	decf	___fltol@exp1^0,f,c
  2870   011C5C                     l3821:
  2871   011C5C  500A               	movf	___fltol@exp1^0,w,c
  2872   011C5E  A4D8               	btfss	status,2,c
  2873   011C60  EF34  F08E         	goto	u3491
  2874   011C64  EF36  F08E         	goto	u3490
  2875   011C68                     u3491:
  2876   011C68  EF28  F08E         	goto	l3819
  2877   011C6C                     u3490:
  2878   011C6C                     l3823:
  2879   011C6C  5009               	movf	___fltol@sign1^0,w,c
  2880   011C6E  B4D8               	btfsc	status,2,c
  2881   011C70  EF3C  F08E         	goto	u3501
  2882   011C74  EF3E  F08E         	goto	u3500
  2883   011C78                     u3501:
  2884   011C78  EF46  F08E         	goto	l3827
  2885   011C7C                     u3500:
  2886   011C7C  1E04               	comf	(___fltol@f1+3)^0,f,c
  2887   011C7E  1E03               	comf	(___fltol@f1+2)^0,f,c
  2888   011C80  1E02               	comf	(___fltol@f1+1)^0,f,c
  2889   011C82  6C01               	negf	___fltol@f1^0,c
  2890   011C84  0E00               	movlw	0
  2891   011C86  2202               	addwfc	(___fltol@f1+1)^0,f,c
  2892   011C88  2203               	addwfc	(___fltol@f1+2)^0,f,c
  2893   011C8A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  2894   011C8C                     l3827:
  2895   011C8C  C001  F001         	movff	___fltol@f1,?___fltol
  2896   011C90  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  2897   011C94  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  2898   011C98  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  2899   011C9C                     l842:
  2900   011C9C  0012               	return		;funcret
  2901   011C9E                     __end_of___fltol:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function ___flsub *****************
  2905 ;; Defined at:
  2906 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  b               4   16[COMRAM] long 
  2909 ;;  a               4   20[COMRAM] long 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  4   16[COMRAM] long 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2921 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;Total ram usage:        8 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		___fladd
  2930 ;; This function is called by:
  2931 ;;		_convert_rgb2hue
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text7
  2936   0124FA                     __ptext7:
  2937                           	callstack 0
  2938   0124FA                     ___flsub:
  2939                           	callstack 27
  2940   0124FA  0E00               	movlw	0
  2941   0124FC  1A15               	xorwf	___flsub@a^0,f,c
  2942   0124FE  0E00               	movlw	0
  2943   012500  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2944   012502  0E00               	movlw	0
  2945   012504  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2946   012506  0E80               	movlw	128
  2947   012508  1A18               	xorwf	(___flsub@a+3)^0,f,c
  2948   01250A  C011  F001         	movff	___flsub@b,___fladd@b
  2949   01250E  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  2950   012512  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  2951   012516  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  2952   01251A  C015  F005         	movff	___flsub@a,___fladd@a
  2953   01251E  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  2954   012522  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  2955   012526  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  2956   01252A  EC86  F083         	call	___fladd	;wreg free
  2957   01252E  C001  F011         	movff	?___fladd,?___flsub
  2958   012532  C002  F012         	movff	?___fladd+1,?___flsub+1
  2959   012536  C003  F013         	movff	?___fladd+2,?___flsub+2
  2960   01253A  C004  F014         	movff	?___fladd+3,?___flsub+3
  2961   01253E  0012               	return		;funcret
  2962   012540                     __end_of___flsub:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function ___fladd *****************
  2966 ;; Defined at:
  2967 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  b               4    0[COMRAM] long 
  2970 ;;  a               4    4[COMRAM] long 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  grs             1   15[COMRAM] unsigned char 
  2973 ;;  bexp            1   14[COMRAM] unsigned char 
  2974 ;;  aexp            1   13[COMRAM] unsigned char 
  2975 ;;  signs           1   12[COMRAM] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  4    0[COMRAM] unsigned char 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2985 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2986 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;Total ram usage:       16 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_convert_rgb2hue
  2995 ;;		___flsub
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text8
  3000   01070C                     __ptext8:
  3001                           	callstack 0
  3002   01070C                     ___fladd:
  3003                           	callstack 27
  3004   01070C  5004               	movf	(___fladd@b+3)^0,w,c
  3005   01070E  0B80               	andlw	128
  3006   010710  6E0D               	movwf	___fladd@signs^0,c
  3007   010712  5004               	movf	(___fladd@b+3)^0,w,c
  3008   010714  2404               	addwf	(___fladd@b+3)^0,w,c
  3009   010716  6E0F               	movwf	___fladd@bexp^0,c
  3010   010718  AE03               	btfss	(___fladd@b+2)^0,7,c
  3011   01071A  EF91  F083         	goto	u2491
  3012   01071E  EF93  F083         	goto	u2490
  3013   010722                     u2491:
  3014   010722  EF94  F083         	goto	l3207
  3015   010726                     u2490:
  3016   010726  800F               	bsf	___fladd@bexp^0,0,c
  3017   010728                     l3207:
  3018   010728  500F               	movf	___fladd@bexp^0,w,c
  3019   01072A  B4D8               	btfsc	status,2,c
  3020   01072C  EF9A  F083         	goto	u2501
  3021   010730  EF9C  F083         	goto	u2500
  3022   010734                     u2501:
  3023   010734  EFB1  F083         	goto	l3217
  3024   010738                     u2500:
  3025   010738  280F               	incf	___fladd@bexp^0,w,c
  3026   01073A  A4D8               	btfss	status,2,c
  3027   01073C  EFA2  F083         	goto	u2511
  3028   010740  EFA4  F083         	goto	u2510
  3029   010744                     u2511:
  3030   010744  EFAC  F083         	goto	l3213
  3031   010748                     u2510:
  3032   010748  0E00               	movlw	0
  3033   01074A  6E01               	movwf	___fladd@b^0,c
  3034   01074C  0E00               	movlw	0
  3035   01074E  6E02               	movwf	(___fladd@b+1)^0,c
  3036   010750  0E00               	movlw	0
  3037   010752  6E03               	movwf	(___fladd@b+2)^0,c
  3038   010754  0E00               	movlw	0
  3039   010756  6E04               	movwf	(___fladd@b+3)^0,c
  3040   010758                     l3213:
  3041   010758  8E03               	bsf	(___fladd@b+2)^0,7,c
  3042   01075A  0E00               	movlw	0
  3043   01075C  6E04               	movwf	(___fladd@b+3)^0,c
  3044   01075E  EFB9  F083         	goto	l3219
  3045   010762                     l3217:
  3046   010762  0E00               	movlw	0
  3047   010764  6E01               	movwf	___fladd@b^0,c
  3048   010766  0E00               	movlw	0
  3049   010768  6E02               	movwf	(___fladd@b+1)^0,c
  3050   01076A  0E00               	movlw	0
  3051   01076C  6E03               	movwf	(___fladd@b+2)^0,c
  3052   01076E  0E00               	movlw	0
  3053   010770  6E04               	movwf	(___fladd@b+3)^0,c
  3054   010772                     l3219:
  3055   010772  5008               	movf	(___fladd@a+3)^0,w,c
  3056   010774  0B80               	andlw	128
  3057   010776  6E0E               	movwf	___fladd@aexp^0,c
  3058   010778  500D               	movf	___fladd@signs^0,w,c
  3059   01077A  180E               	xorwf	___fladd@aexp^0,w,c
  3060   01077C  B4D8               	btfsc	status,2,c
  3061   01077E  EFC3  F083         	goto	u2521
  3062   010782  EFC5  F083         	goto	u2520
  3063   010786                     u2521:
  3064   010786  EFC6  F083         	goto	l3225
  3065   01078A                     u2520:
  3066   01078A  8C0D               	bsf	___fladd@signs^0,6,c
  3067   01078C                     l3225:
  3068   01078C  5008               	movf	(___fladd@a+3)^0,w,c
  3069   01078E  2408               	addwf	(___fladd@a+3)^0,w,c
  3070   010790  6E0E               	movwf	___fladd@aexp^0,c
  3071   010792  AE07               	btfss	(___fladd@a+2)^0,7,c
  3072   010794  EFCE  F083         	goto	u2531
  3073   010798  EFD0  F083         	goto	u2530
  3074   01079C                     u2531:
  3075   01079C  EFD1  F083         	goto	l3231
  3076   0107A0                     u2530:
  3077   0107A0  800E               	bsf	___fladd@aexp^0,0,c
  3078   0107A2                     l3231:
  3079   0107A2  500E               	movf	___fladd@aexp^0,w,c
  3080   0107A4  B4D8               	btfsc	status,2,c
  3081   0107A6  EFD7  F083         	goto	u2541
  3082   0107AA  EFD9  F083         	goto	u2540
  3083   0107AE                     u2541:
  3084   0107AE  EFEE  F083         	goto	l3241
  3085   0107B2                     u2540:
  3086   0107B2  280E               	incf	___fladd@aexp^0,w,c
  3087   0107B4  A4D8               	btfss	status,2,c
  3088   0107B6  EFDF  F083         	goto	u2551
  3089   0107BA  EFE1  F083         	goto	u2550
  3090   0107BE                     u2551:
  3091   0107BE  EFE9  F083         	goto	l3237
  3092   0107C2                     u2550:
  3093   0107C2  0E00               	movlw	0
  3094   0107C4  6E05               	movwf	___fladd@a^0,c
  3095   0107C6  0E00               	movlw	0
  3096   0107C8  6E06               	movwf	(___fladd@a+1)^0,c
  3097   0107CA  0E00               	movlw	0
  3098   0107CC  6E07               	movwf	(___fladd@a+2)^0,c
  3099   0107CE  0E00               	movlw	0
  3100   0107D0  6E08               	movwf	(___fladd@a+3)^0,c
  3101   0107D2                     l3237:
  3102   0107D2  8E07               	bsf	(___fladd@a+2)^0,7,c
  3103   0107D4  0E00               	movlw	0
  3104   0107D6  6E08               	movwf	(___fladd@a+3)^0,c
  3105   0107D8  EFF6  F083         	goto	l3243
  3106   0107DC                     l3241:
  3107   0107DC  0E00               	movlw	0
  3108   0107DE  6E05               	movwf	___fladd@a^0,c
  3109   0107E0  0E00               	movlw	0
  3110   0107E2  6E06               	movwf	(___fladd@a+1)^0,c
  3111   0107E4  0E00               	movlw	0
  3112   0107E6  6E07               	movwf	(___fladd@a+2)^0,c
  3113   0107E8  0E00               	movlw	0
  3114   0107EA  6E08               	movwf	(___fladd@a+3)^0,c
  3115   0107EC                     l3243:
  3116   0107EC  500F               	movf	___fladd@bexp^0,w,c
  3117   0107EE  5C0E               	subwf	___fladd@aexp^0,w,c
  3118   0107F0  B0D8               	btfsc	status,0,c
  3119   0107F2  EFFD  F083         	goto	u2561
  3120   0107F6  EFFF  F083         	goto	u2560
  3121   0107FA                     u2561:
  3122   0107FA  EF26  F084         	goto	l3279
  3123   0107FE                     u2560:
  3124   0107FE  AC0D               	btfss	___fladd@signs^0,6,c
  3125   010800  EF04  F084         	goto	u2571
  3126   010804  EF06  F084         	goto	u2570
  3127   010808                     u2571:
  3128   010808  EF08  F084         	goto	l3249
  3129   01080C                     u2570:
  3130   01080C  0E80               	movlw	128
  3131   01080E  1A0D               	xorwf	___fladd@signs^0,f,c
  3132   010810                     l3249:
  3133   010810  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3134   010814  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3135   010818  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3136   01081C  C001  F010         	movff	___fladd@b,___fladd@grs
  3137   010820  C005  F001         	movff	___fladd@a,___fladd@b
  3138   010824  C010  F005         	movff	___fladd@grs,___fladd@a
  3139   010828  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3140   01082C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3141   010830  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3142   010834  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3143   010838  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3144   01083C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3145   010840  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3146   010844  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3147   010848  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3148   01084C                     l3279:
  3149   01084C  0E00               	movlw	0
  3150   01084E  6E10               	movwf	___fladd@grs^0,c
  3151   010850  500F               	movf	___fladd@bexp^0,w,c
  3152   010852  C00E  F009         	movff	___fladd@aexp,??___fladd
  3153   010856  6A0A               	clrf	(??___fladd+1)^0,c
  3154   010858  5E09               	subwf	??___fladd^0,f,c
  3155   01085A  0E00               	movlw	0
  3156   01085C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3157   01085E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3158   010860  EF3B  F084         	goto	u2581
  3159   010864  500A               	movf	(??___fladd+1)^0,w,c
  3160   010866  E109               	bnz	u2580
  3161   010868  0E1A               	movlw	26
  3162   01086A  5C09               	subwf	??___fladd^0,w,c
  3163   01086C  A0D8               	btfss	status,0,c
  3164   01086E  EF3B  F084         	goto	u2581
  3165   010872  EF3D  F084         	goto	u2580
  3166   010876                     u2581:
  3167   010876  EF74  F084         	goto	l1074
  3168   01087A                     u2580:
  3169   01087A  5001               	movf	___fladd@b^0,w,c
  3170   01087C  1002               	iorwf	(___fladd@b+1)^0,w,c
  3171   01087E  1003               	iorwf	(___fladd@b+2)^0,w,c
  3172   010880  1004               	iorwf	(___fladd@b+3)^0,w,c
  3173   010882  A4D8               	btfss	status,2,c
  3174   010884  EF46  F084         	goto	u2591
  3175   010888  EF49  F084         	goto	u2590
  3176   01088C                     u2591:
  3177   01088C  0E01               	movlw	1
  3178   01088E  EF4A  F084         	goto	u2600
  3179   010892                     u2590:
  3180   010892  0E00               	movlw	0
  3181   010894                     u2600:
  3182   010894  6E10               	movwf	___fladd@grs^0,c
  3183   010896  0E00               	movlw	0
  3184   010898  6E01               	movwf	___fladd@b^0,c
  3185   01089A  0E00               	movlw	0
  3186   01089C  6E02               	movwf	(___fladd@b+1)^0,c
  3187   01089E  0E00               	movlw	0
  3188   0108A0  6E03               	movwf	(___fladd@b+2)^0,c
  3189   0108A2  0E00               	movlw	0
  3190   0108A4  6E04               	movwf	(___fladd@b+3)^0,c
  3191   0108A6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3192   0108AA  EF7D  F084         	goto	l1073
  3193   0108AE                     l1075:
  3194   0108AE  A010               	btfss	___fladd@grs^0,0,c
  3195   0108B0  EF5C  F084         	goto	u2611
  3196   0108B4  EF5E  F084         	goto	u2610
  3197   0108B8                     u2611:
  3198   0108B8  EF64  F084         	goto	l3291
  3199   0108BC                     u2610:
  3200   0108BC  90D8               	bcf	status,0,c
  3201   0108BE  3010               	rrcf	___fladd@grs^0,w,c
  3202   0108C0  0901               	iorlw	1
  3203   0108C2  6E10               	movwf	___fladd@grs^0,c
  3204   0108C4  EF66  F084         	goto	l3293
  3205   0108C8                     l3291:
  3206   0108C8  90D8               	bcf	status,0,c
  3207   0108CA  3210               	rrcf	___fladd@grs^0,f,c
  3208   0108CC                     l3293:
  3209   0108CC  A001               	btfss	___fladd@b^0,0,c
  3210   0108CE  EF6B  F084         	goto	u2621
  3211   0108D2  EF6D  F084         	goto	u2620
  3212   0108D6                     u2621:
  3213   0108D6  EF6E  F084         	goto	l3297
  3214   0108DA                     u2620:
  3215   0108DA  8E10               	bsf	___fladd@grs^0,7,c
  3216   0108DC                     l3297:
  3217   0108DC  3404               	rlcf	(___fladd@b+3)^0,w,c
  3218   0108DE  3204               	rrcf	(___fladd@b+3)^0,f,c
  3219   0108E0  3203               	rrcf	(___fladd@b+2)^0,f,c
  3220   0108E2  3202               	rrcf	(___fladd@b+1)^0,f,c
  3221   0108E4  3201               	rrcf	___fladd@b^0,f,c
  3222   0108E6  2A0F               	incf	___fladd@bexp^0,f,c
  3223   0108E8                     l1074:
  3224   0108E8  500E               	movf	___fladd@aexp^0,w,c
  3225   0108EA  5C0F               	subwf	___fladd@bexp^0,w,c
  3226   0108EC  A0D8               	btfss	status,0,c
  3227   0108EE  EF7B  F084         	goto	u2631
  3228   0108F2  EF7D  F084         	goto	u2630
  3229   0108F6                     u2631:
  3230   0108F6  EF57  F084         	goto	l1075
  3231   0108FA                     u2630:
  3232   0108FA                     l1073:
  3233   0108FA  BC0D               	btfsc	___fladd@signs^0,6,c
  3234   0108FC  EF82  F084         	goto	u2641
  3235   010900  EF84  F084         	goto	u2640
  3236   010904                     u2641:
  3237   010904  EFC4  F084         	goto	l3325
  3238   010908                     u2640:
  3239   010908  500F               	movf	___fladd@bexp^0,w,c
  3240   01090A  A4D8               	btfss	status,2,c
  3241   01090C  EF8A  F084         	goto	u2651
  3242   010910  EF8C  F084         	goto	u2650
  3243   010914                     u2651:
  3244   010914  EF96  F084         	goto	l3307
  3245   010918                     u2650:
  3246   010918  0E00               	movlw	0
  3247   01091A  6E01               	movwf	?___fladd^0,c
  3248   01091C  0E00               	movlw	0
  3249   01091E  6E02               	movwf	(?___fladd+1)^0,c
  3250   010920  0E00               	movlw	0
  3251   010922  6E03               	movwf	(?___fladd+2)^0,c
  3252   010924  0E00               	movlw	0
  3253   010926  6E04               	movwf	(?___fladd+3)^0,c
  3254   010928  EFE5  F085         	goto	l1082
  3255   01092C                     l3307:
  3256   01092C  5005               	movf	___fladd@a^0,w,c
  3257   01092E  2601               	addwf	___fladd@b^0,f,c
  3258   010930  5006               	movf	(___fladd@a+1)^0,w,c
  3259   010932  2202               	addwfc	(___fladd@b+1)^0,f,c
  3260   010934  5007               	movf	(___fladd@a+2)^0,w,c
  3261   010936  2203               	addwfc	(___fladd@b+2)^0,f,c
  3262   010938  5008               	movf	(___fladd@a+3)^0,w,c
  3263   01093A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3264   01093C  A004               	btfss	(___fladd@b+3)^0,0,c
  3265   01093E  EFA3  F084         	goto	u2661
  3266   010942  EFA5  F084         	goto	u2660
  3267   010946                     u2661:
  3268   010946  EF51  F085         	goto	l3361
  3269   01094A                     u2660:
  3270   01094A  A010               	btfss	___fladd@grs^0,0,c
  3271   01094C  EFAA  F084         	goto	u2671
  3272   010950  EFAC  F084         	goto	u2670
  3273   010954                     u2671:
  3274   010954  EFB2  F084         	goto	l3315
  3275   010958                     u2670:
  3276   010958  90D8               	bcf	status,0,c
  3277   01095A  3010               	rrcf	___fladd@grs^0,w,c
  3278   01095C  0901               	iorlw	1
  3279   01095E  6E10               	movwf	___fladd@grs^0,c
  3280   010960  EFB4  F084         	goto	l3317
  3281   010964                     l3315:
  3282   010964  90D8               	bcf	status,0,c
  3283   010966  3210               	rrcf	___fladd@grs^0,f,c
  3284   010968                     l3317:
  3285   010968  A001               	btfss	___fladd@b^0,0,c
  3286   01096A  EFB9  F084         	goto	u2681
  3287   01096E  EFBB  F084         	goto	u2680
  3288   010972                     u2681:
  3289   010972  EFBC  F084         	goto	l3321
  3290   010976                     u2680:
  3291   010976  8E10               	bsf	___fladd@grs^0,7,c
  3292   010978                     l3321:
  3293   010978  3404               	rlcf	(___fladd@b+3)^0,w,c
  3294   01097A  3204               	rrcf	(___fladd@b+3)^0,f,c
  3295   01097C  3203               	rrcf	(___fladd@b+2)^0,f,c
  3296   01097E  3202               	rrcf	(___fladd@b+1)^0,f,c
  3297   010980  3201               	rrcf	___fladd@b^0,f,c
  3298   010982  2A0F               	incf	___fladd@bexp^0,f,c
  3299   010984  EF51  F085         	goto	l3361
  3300   010988                     l3325:
  3301   010988  5005               	movf	___fladd@a^0,w,c
  3302   01098A  5C01               	subwf	___fladd@b^0,w,c
  3303   01098C  5006               	movf	(___fladd@a+1)^0,w,c
  3304   01098E  5802               	subwfb	(___fladd@b+1)^0,w,c
  3305   010990  5007               	movf	(___fladd@a+2)^0,w,c
  3306   010992  5803               	subwfb	(___fladd@b+2)^0,w,c
  3307   010994  5004               	movf	(___fladd@b+3)^0,w,c
  3308   010996  0A80               	xorlw	128
  3309   010998  6E09               	movwf	??___fladd^0,c
  3310   01099A  5008               	movf	(___fladd@a+3)^0,w,c
  3311   01099C  0A80               	xorlw	128
  3312   01099E  5809               	subwfb	??___fladd^0,w,c
  3313   0109A0  B0D8               	btfsc	status,0,c
  3314   0109A2  EFD5  F084         	goto	u2691
  3315   0109A6  EFD7  F084         	goto	u2690
  3316   0109AA                     u2691:
  3317   0109AA  EF02  F085         	goto	l3335
  3318   0109AE                     u2690:
  3319   0109AE  5001               	movf	___fladd@b^0,w,c
  3320   0109B0  5C05               	subwf	___fladd@a^0,w,c
  3321   0109B2  6E09               	movwf	??___fladd^0,c
  3322   0109B4  5002               	movf	(___fladd@b+1)^0,w,c
  3323   0109B6  5806               	subwfb	(___fladd@a+1)^0,w,c
  3324   0109B8  6E0A               	movwf	(??___fladd+1)^0,c
  3325   0109BA  5003               	movf	(___fladd@b+2)^0,w,c
  3326   0109BC  5807               	subwfb	(___fladd@a+2)^0,w,c
  3327   0109BE  6E0B               	movwf	(??___fladd+2)^0,c
  3328   0109C0  5004               	movf	(___fladd@b+3)^0,w,c
  3329   0109C2  5808               	subwfb	(___fladd@a+3)^0,w,c
  3330   0109C4  6E0C               	movwf	(??___fladd+3)^0,c
  3331   0109C6  0EFF               	movlw	255
  3332   0109C8  2409               	addwf	??___fladd^0,w,c
  3333   0109CA  6E01               	movwf	___fladd@b^0,c
  3334   0109CC  0EFF               	movlw	255
  3335   0109CE  200A               	addwfc	(??___fladd+1)^0,w,c
  3336   0109D0  6E02               	movwf	(___fladd@b+1)^0,c
  3337   0109D2  0EFF               	movlw	255
  3338   0109D4  200B               	addwfc	(??___fladd+2)^0,w,c
  3339   0109D6  6E03               	movwf	(___fladd@b+2)^0,c
  3340   0109D8  0EFF               	movlw	255
  3341   0109DA  200C               	addwfc	(??___fladd+3)^0,w,c
  3342   0109DC  6E04               	movwf	(___fladd@b+3)^0,c
  3343   0109DE  0E80               	movlw	128
  3344   0109E0  1A0D               	xorwf	___fladd@signs^0,f,c
  3345   0109E2  6C10               	negf	___fladd@grs^0,c
  3346   0109E4  5010               	movf	___fladd@grs^0,w,c
  3347   0109E6  A4D8               	btfss	status,2,c
  3348   0109E8  EFF8  F084         	goto	u2701
  3349   0109EC  EFFA  F084         	goto	u2700
  3350   0109F0                     u2701:
  3351   0109F0  EF0A  F085         	goto	l1090
  3352   0109F4                     u2700:
  3353   0109F4  0E01               	movlw	1
  3354   0109F6  2601               	addwf	___fladd@b^0,f,c
  3355   0109F8  0E00               	movlw	0
  3356   0109FA  2202               	addwfc	(___fladd@b+1)^0,f,c
  3357   0109FC  2203               	addwfc	(___fladd@b+2)^0,f,c
  3358   0109FE  2204               	addwfc	(___fladd@b+3)^0,f,c
  3359   010A00  EF0A  F085         	goto	l1090
  3360   010A04                     l3335:
  3361   010A04  5005               	movf	___fladd@a^0,w,c
  3362   010A06  5E01               	subwf	___fladd@b^0,f,c
  3363   010A08  5006               	movf	(___fladd@a+1)^0,w,c
  3364   010A0A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3365   010A0C  5007               	movf	(___fladd@a+2)^0,w,c
  3366   010A0E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3367   010A10  5008               	movf	(___fladd@a+3)^0,w,c
  3368   010A12  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3369   010A14                     l1090:
  3370   010A14  5001               	movf	___fladd@b^0,w,c
  3371   010A16  1002               	iorwf	(___fladd@b+1)^0,w,c
  3372   010A18  1003               	iorwf	(___fladd@b+2)^0,w,c
  3373   010A1A  1004               	iorwf	(___fladd@b+3)^0,w,c
  3374   010A1C  A4D8               	btfss	status,2,c
  3375   010A1E  EF13  F085         	goto	u2711
  3376   010A22  EF15  F085         	goto	u2710
  3377   010A26                     u2711:
  3378   010A26  EF4A  F085         	goto	l3359
  3379   010A2A                     u2710:
  3380   010A2A  5010               	movf	___fladd@grs^0,w,c
  3381   010A2C  A4D8               	btfss	status,2,c
  3382   010A2E  EF1B  F085         	goto	u2721
  3383   010A32  EF1D  F085         	goto	u2720
  3384   010A36                     u2721:
  3385   010A36  EF4A  F085         	goto	l3359
  3386   010A3A                     u2720:
  3387   010A3A  0E00               	movlw	0
  3388   010A3C  6E01               	movwf	?___fladd^0,c
  3389   010A3E  0E00               	movlw	0
  3390   010A40  6E02               	movwf	(?___fladd+1)^0,c
  3391   010A42  0E00               	movlw	0
  3392   010A44  6E03               	movwf	(?___fladd+2)^0,c
  3393   010A46  0E00               	movlw	0
  3394   010A48  6E04               	movwf	(?___fladd+3)^0,c
  3395   010A4A  EFE5  F085         	goto	l1082
  3396   010A4E                     l3343:
  3397   010A4E  90D8               	bcf	status,0,c
  3398   010A50  3601               	rlcf	___fladd@b^0,f,c
  3399   010A52  3602               	rlcf	(___fladd@b+1)^0,f,c
  3400   010A54  3603               	rlcf	(___fladd@b+2)^0,f,c
  3401   010A56  3604               	rlcf	(___fladd@b+3)^0,f,c
  3402   010A58  AE10               	btfss	___fladd@grs^0,7,c
  3403   010A5A  EF31  F085         	goto	u2731
  3404   010A5E  EF33  F085         	goto	u2730
  3405   010A62                     u2731:
  3406   010A62  EF34  F085         	goto	l3349
  3407   010A66                     u2730:
  3408   010A66  8001               	bsf	___fladd@b^0,0,c
  3409   010A68                     l3349:
  3410   010A68  A010               	btfss	___fladd@grs^0,0,c
  3411   010A6A  EF39  F085         	goto	u2741
  3412   010A6E  EF3B  F085         	goto	u2740
  3413   010A72                     u2741:
  3414   010A72  EF3F  F085         	goto	l3353
  3415   010A76                     u2740:
  3416   010A76  80D8               	bsf	status,0,c
  3417   010A78  3610               	rlcf	___fladd@grs^0,f,c
  3418   010A7A  EF41  F085         	goto	l3355
  3419   010A7E                     l3353:
  3420   010A7E  90D8               	bcf	status,0,c
  3421   010A80  3610               	rlcf	___fladd@grs^0,f,c
  3422   010A82                     l3355:
  3423   010A82  500F               	movf	___fladd@bexp^0,w,c
  3424   010A84  B4D8               	btfsc	status,2,c
  3425   010A86  EF47  F085         	goto	u2751
  3426   010A8A  EF49  F085         	goto	u2750
  3427   010A8E                     u2751:
  3428   010A8E  EF4A  F085         	goto	l3359
  3429   010A92                     u2750:
  3430   010A92  060F               	decf	___fladd@bexp^0,f,c
  3431   010A94                     l3359:
  3432   010A94  AE03               	btfss	(___fladd@b+2)^0,7,c
  3433   010A96  EF4F  F085         	goto	u2761
  3434   010A9A  EF51  F085         	goto	u2760
  3435   010A9E                     u2761:
  3436   010A9E  EF27  F085         	goto	l3343
  3437   010AA2                     u2760:
  3438   010AA2                     l3361:
  3439   010AA2  0E00               	movlw	0
  3440   010AA4  6E0E               	movwf	___fladd@aexp^0,c
  3441   010AA6  AE10               	btfss	___fladd@grs^0,7,c
  3442   010AA8  EF58  F085         	goto	u2771
  3443   010AAC  EF5A  F085         	goto	u2770
  3444   010AB0                     u2771:
  3445   010AB0  EF72  F085         	goto	l1099
  3446   010AB4                     u2770:
  3447   010AB4  C010  F009         	movff	___fladd@grs,??___fladd
  3448   010AB8  0E7F               	movlw	127
  3449   010ABA  1609               	andwf	??___fladd^0,f,c
  3450   010ABC  B4D8               	btfsc	status,2,c
  3451   010ABE  EF63  F085         	goto	u2781
  3452   010AC2  EF65  F085         	goto	u2780
  3453   010AC6                     u2781:
  3454   010AC6  EF69  F085         	goto	l1100
  3455   010ACA                     u2780:
  3456   010ACA                     l3367:
  3457   010ACA  0E01               	movlw	1
  3458   010ACC  6E0E               	movwf	___fladd@aexp^0,c
  3459   010ACE  EF72  F085         	goto	l1099
  3460   010AD2                     l1100:
  3461   010AD2  A001               	btfss	___fladd@b^0,0,c
  3462   010AD4  EF6E  F085         	goto	u2791
  3463   010AD8  EF70  F085         	goto	u2790
  3464   010ADC                     u2791:
  3465   010ADC  EF72  F085         	goto	l1099
  3466   010AE0                     u2790:
  3467   010AE0  EF65  F085         	goto	l3367
  3468   010AE4                     l1099:
  3469   010AE4  500E               	movf	___fladd@aexp^0,w,c
  3470   010AE6  B4D8               	btfsc	status,2,c
  3471   010AE8  EF78  F085         	goto	u2801
  3472   010AEC  EF7A  F085         	goto	u2800
  3473   010AF0                     u2801:
  3474   010AF0  EFA5  F085         	goto	l3379
  3475   010AF4                     u2800:
  3476   010AF4  0E01               	movlw	1
  3477   010AF6  2601               	addwf	___fladd@b^0,f,c
  3478   010AF8  0E00               	movlw	0
  3479   010AFA  2202               	addwfc	(___fladd@b+1)^0,f,c
  3480   010AFC  2203               	addwfc	(___fladd@b+2)^0,f,c
  3481   010AFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  3482   010B00  A004               	btfss	(___fladd@b+3)^0,0,c
  3483   010B02  EF85  F085         	goto	u2811
  3484   010B06  EF87  F085         	goto	u2810
  3485   010B0A                     u2811:
  3486   010B0A  EFA5  F085         	goto	l3379
  3487   010B0E                     u2810:
  3488   010B0E  C001  F009         	movff	___fladd@b,??___fladd
  3489   010B12  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3490   010B16  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3491   010B1A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3492   010B1E  340C               	rlcf	(??___fladd+3)^0,w,c
  3493   010B20  320C               	rrcf	(??___fladd+3)^0,f,c
  3494   010B22  320B               	rrcf	(??___fladd+2)^0,f,c
  3495   010B24  320A               	rrcf	(??___fladd+1)^0,f,c
  3496   010B26  3209               	rrcf	??___fladd^0,f,c
  3497   010B28  C009  F001         	movff	??___fladd,___fladd@b
  3498   010B2C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3499   010B30  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3500   010B34  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3501   010B38  280F               	incf	___fladd@bexp^0,w,c
  3502   010B3A  B4D8               	btfsc	status,2,c
  3503   010B3C  EFA2  F085         	goto	u2821
  3504   010B40  EFA4  F085         	goto	u2820
  3505   010B44                     u2821:
  3506   010B44  EFA5  F085         	goto	l3379
  3507   010B48                     u2820:
  3508   010B48  2A0F               	incf	___fladd@bexp^0,f,c
  3509   010B4A                     l3379:
  3510   010B4A  280F               	incf	___fladd@bexp^0,w,c
  3511   010B4C  B4D8               	btfsc	status,2,c
  3512   010B4E  EFAB  F085         	goto	u2831
  3513   010B52  EFAD  F085         	goto	u2830
  3514   010B56                     u2831:
  3515   010B56  EFB5  F085         	goto	l3383
  3516   010B5A                     u2830:
  3517   010B5A  500F               	movf	___fladd@bexp^0,w,c
  3518   010B5C  A4D8               	btfss	status,2,c
  3519   010B5E  EFB3  F085         	goto	u2841
  3520   010B62  EFB5  F085         	goto	u2840
  3521   010B66                     u2841:
  3522   010B66  EFC7  F085         	goto	l3387
  3523   010B6A                     u2840:
  3524   010B6A                     l3383:
  3525   010B6A  0E00               	movlw	0
  3526   010B6C  6E01               	movwf	___fladd@b^0,c
  3527   010B6E  0E00               	movlw	0
  3528   010B70  6E02               	movwf	(___fladd@b+1)^0,c
  3529   010B72  0E00               	movlw	0
  3530   010B74  6E03               	movwf	(___fladd@b+2)^0,c
  3531   010B76  0E00               	movlw	0
  3532   010B78  6E04               	movwf	(___fladd@b+3)^0,c
  3533   010B7A  500F               	movf	___fladd@bexp^0,w,c
  3534   010B7C  A4D8               	btfss	status,2,c
  3535   010B7E  EFC3  F085         	goto	u2851
  3536   010B82  EFC5  F085         	goto	u2850
  3537   010B86                     u2851:
  3538   010B86  EFC7  F085         	goto	l3387
  3539   010B8A                     u2850:
  3540   010B8A  0E00               	movlw	0
  3541   010B8C  6E0D               	movwf	___fladd@signs^0,c
  3542   010B8E                     l3387:
  3543   010B8E  A00F               	btfss	___fladd@bexp^0,0,c
  3544   010B90  EFCC  F085         	goto	u2861
  3545   010B94  EFCE  F085         	goto	u2860
  3546   010B98                     u2861:
  3547   010B98  EFD1  F085         	goto	l3391
  3548   010B9C                     u2860:
  3549   010B9C  8E03               	bsf	(___fladd@b+2)^0,7,c
  3550   010B9E  EFD2  F085         	goto	l3393
  3551   010BA2                     l3391:
  3552   010BA2  9E03               	bcf	(___fladd@b+2)^0,7,c
  3553   010BA4                     l3393:
  3554   010BA4  90D8               	bcf	status,0,c
  3555   010BA6  300F               	rrcf	___fladd@bexp^0,w,c
  3556   010BA8  6E04               	movwf	(___fladd@b+3)^0,c
  3557   010BAA  AE0D               	btfss	___fladd@signs^0,7,c
  3558   010BAC  EFDA  F085         	goto	u2871
  3559   010BB0  EFDC  F085         	goto	u2870
  3560   010BB4                     u2871:
  3561   010BB4  EFDD  F085         	goto	l3399
  3562   010BB8                     u2870:
  3563   010BB8  8E04               	bsf	(___fladd@b+3)^0,7,c
  3564   010BBA                     l3399:
  3565   010BBA  C001  F001         	movff	___fladd@b,?___fladd
  3566   010BBE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3567   010BC2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3568   010BC6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3569   010BCA                     l1082:
  3570   010BCA  0012               	return		;funcret
  3571   010BCC                     __end_of___fladd:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function ___flmul *****************
  3575 ;; Defined at:
  3576 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  b               4    0[COMRAM] unsigned char 
  3579 ;;  a               4    4[COMRAM] unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  prod            4   19[COMRAM] struct .
  3582 ;;  grs             4   13[COMRAM] unsigned long 
  3583 ;;  temp            2   23[COMRAM] struct .
  3584 ;;  bexp            1   18[COMRAM] unsigned char 
  3585 ;;  aexp            1   17[COMRAM] unsigned char 
  3586 ;;  sign            1   12[COMRAM] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  4    0[COMRAM] unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0, prodl, prodh
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3596 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3597 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3599 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3600 ;;Total ram usage:       25 bytes
  3601 ;; Hardware stack levels used: 1
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_convert_rgb2hue
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608                           
  3609                           	psect	text9
  3610   010BCC                     __ptext9:
  3611                           	callstack 0
  3612   010BCC                     ___flmul:
  3613                           	callstack 28
  3614   010BCC  5004               	movf	(___flmul@b+3)^0,w,c
  3615   010BCE  0B80               	andlw	128
  3616   010BD0  6E0D               	movwf	___flmul@sign^0,c
  3617   010BD2  5004               	movf	(___flmul@b+3)^0,w,c
  3618   010BD4  2404               	addwf	(___flmul@b+3)^0,w,c
  3619   010BD6  6E13               	movwf	___flmul@bexp^0,c
  3620   010BD8  AE03               	btfss	(___flmul@b+2)^0,7,c
  3621   010BDA  EFF1  F085         	goto	u3171
  3622   010BDE  EFF3  F085         	goto	u3170
  3623   010BE2                     u3171:
  3624   010BE2  EFF4  F085         	goto	l3619
  3625   010BE6                     u3170:
  3626   010BE6  8013               	bsf	___flmul@bexp^0,0,c
  3627   010BE8                     l3619:
  3628   010BE8  5013               	movf	___flmul@bexp^0,w,c
  3629   010BEA  B4D8               	btfsc	status,2,c
  3630   010BEC  EFFA  F085         	goto	u3181
  3631   010BF0  EFFC  F085         	goto	u3180
  3632   010BF4                     u3181:
  3633   010BF4  EF0F  F086         	goto	l3627
  3634   010BF8                     u3180:
  3635   010BF8  2813               	incf	___flmul@bexp^0,w,c
  3636   010BFA  A4D8               	btfss	status,2,c
  3637   010BFC  EF02  F086         	goto	u3191
  3638   010C00  EF04  F086         	goto	u3190
  3639   010C04                     u3191:
  3640   010C04  EF0C  F086         	goto	l3625
  3641   010C08                     u3190:
  3642   010C08  0E00               	movlw	0
  3643   010C0A  6E01               	movwf	___flmul@b^0,c
  3644   010C0C  0E00               	movlw	0
  3645   010C0E  6E02               	movwf	(___flmul@b+1)^0,c
  3646   010C10  0E00               	movlw	0
  3647   010C12  6E03               	movwf	(___flmul@b+2)^0,c
  3648   010C14  0E00               	movlw	0
  3649   010C16  6E04               	movwf	(___flmul@b+3)^0,c
  3650   010C18                     l3625:
  3651   010C18  8E03               	bsf	(___flmul@b+2)^0,7,c
  3652   010C1A  EF17  F086         	goto	l3629
  3653   010C1E                     l3627:
  3654   010C1E  0E00               	movlw	0
  3655   010C20  6E01               	movwf	___flmul@b^0,c
  3656   010C22  0E00               	movlw	0
  3657   010C24  6E02               	movwf	(___flmul@b+1)^0,c
  3658   010C26  0E00               	movlw	0
  3659   010C28  6E03               	movwf	(___flmul@b+2)^0,c
  3660   010C2A  0E00               	movlw	0
  3661   010C2C  6E04               	movwf	(___flmul@b+3)^0,c
  3662   010C2E                     l3629:
  3663   010C2E  5008               	movf	(___flmul@a+3)^0,w,c
  3664   010C30  0B80               	andlw	128
  3665   010C32  1A0D               	xorwf	___flmul@sign^0,f,c
  3666   010C34  5008               	movf	(___flmul@a+3)^0,w,c
  3667   010C36  2408               	addwf	(___flmul@a+3)^0,w,c
  3668   010C38  6E12               	movwf	___flmul@aexp^0,c
  3669   010C3A  AE07               	btfss	(___flmul@a+2)^0,7,c
  3670   010C3C  EF22  F086         	goto	u3201
  3671   010C40  EF24  F086         	goto	u3200
  3672   010C44                     u3201:
  3673   010C44  EF25  F086         	goto	l3637
  3674   010C48                     u3200:
  3675   010C48  8012               	bsf	___flmul@aexp^0,0,c
  3676   010C4A                     l3637:
  3677   010C4A  5012               	movf	___flmul@aexp^0,w,c
  3678   010C4C  B4D8               	btfsc	status,2,c
  3679   010C4E  EF2B  F086         	goto	u3211
  3680   010C52  EF2D  F086         	goto	u3210
  3681   010C56                     u3211:
  3682   010C56  EF40  F086         	goto	l3645
  3683   010C5A                     u3210:
  3684   010C5A  2812               	incf	___flmul@aexp^0,w,c
  3685   010C5C  A4D8               	btfss	status,2,c
  3686   010C5E  EF33  F086         	goto	u3221
  3687   010C62  EF35  F086         	goto	u3220
  3688   010C66                     u3221:
  3689   010C66  EF3D  F086         	goto	l3643
  3690   010C6A                     u3220:
  3691   010C6A  0E00               	movlw	0
  3692   010C6C  6E05               	movwf	___flmul@a^0,c
  3693   010C6E  0E00               	movlw	0
  3694   010C70  6E06               	movwf	(___flmul@a+1)^0,c
  3695   010C72  0E00               	movlw	0
  3696   010C74  6E07               	movwf	(___flmul@a+2)^0,c
  3697   010C76  0E00               	movlw	0
  3698   010C78  6E08               	movwf	(___flmul@a+3)^0,c
  3699   010C7A                     l3643:
  3700   010C7A  8E07               	bsf	(___flmul@a+2)^0,7,c
  3701   010C7C  EF48  F086         	goto	l1159
  3702   010C80                     l3645:
  3703   010C80  0E00               	movlw	0
  3704   010C82  6E05               	movwf	___flmul@a^0,c
  3705   010C84  0E00               	movlw	0
  3706   010C86  6E06               	movwf	(___flmul@a+1)^0,c
  3707   010C88  0E00               	movlw	0
  3708   010C8A  6E07               	movwf	(___flmul@a+2)^0,c
  3709   010C8C  0E00               	movlw	0
  3710   010C8E  6E08               	movwf	(___flmul@a+3)^0,c
  3711   010C90                     l1159:
  3712   010C90  5012               	movf	___flmul@aexp^0,w,c
  3713   010C92  B4D8               	btfsc	status,2,c
  3714   010C94  EF4E  F086         	goto	u3231
  3715   010C98  EF50  F086         	goto	u3230
  3716   010C9C                     u3231:
  3717   010C9C  EF58  F086         	goto	l3649
  3718   010CA0                     u3230:
  3719   010CA0  5013               	movf	___flmul@bexp^0,w,c
  3720   010CA2  A4D8               	btfss	status,2,c
  3721   010CA4  EF56  F086         	goto	u3241
  3722   010CA8  EF58  F086         	goto	u3240
  3723   010CAC                     u3241:
  3724   010CAC  EF62  F086         	goto	l3653
  3725   010CB0                     u3240:
  3726   010CB0                     l3649:
  3727   010CB0  0E00               	movlw	0
  3728   010CB2  6E01               	movwf	?___flmul^0,c
  3729   010CB4  0E00               	movlw	0
  3730   010CB6  6E02               	movwf	(?___flmul+1)^0,c
  3731   010CB8  0E00               	movlw	0
  3732   010CBA  6E03               	movwf	(?___flmul+2)^0,c
  3733   010CBC  0E00               	movlw	0
  3734   010CBE  6E04               	movwf	(?___flmul+3)^0,c
  3735   010CC0  EFFA  F087         	goto	l1163
  3736   010CC4                     l3653:
  3737   010CC4  5007               	movf	(___flmul@a+2)^0,w,c
  3738   010CC6  0201               	mulwf	___flmul@b^0,c
  3739   010CC8  CFF3 F018          	movff	prodl,___flmul@temp
  3740   010CCC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3741   010CD0  5018               	movf	___flmul@temp^0,w,c
  3742   010CD2  6E0E               	movwf	___flmul@grs^0,c
  3743   010CD4  6A0F               	clrf	(___flmul@grs+1)^0,c
  3744   010CD6  6A10               	clrf	(___flmul@grs+2)^0,c
  3745   010CD8  6A11               	clrf	(___flmul@grs+3)^0,c
  3746   010CDA  5019               	movf	(___flmul@temp+1)^0,w,c
  3747   010CDC  6E14               	movwf	___flmul@prod^0,c
  3748   010CDE  6A15               	clrf	(___flmul@prod+1)^0,c
  3749   010CE0  6A16               	clrf	(___flmul@prod+2)^0,c
  3750   010CE2  6A17               	clrf	(___flmul@prod+3)^0,c
  3751   010CE4  5006               	movf	(___flmul@a+1)^0,w,c
  3752   010CE6  0202               	mulwf	(___flmul@b+1)^0,c
  3753   010CE8  CFF3 F018          	movff	prodl,___flmul@temp
  3754   010CEC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3755   010CF0  5018               	movf	___flmul@temp^0,w,c
  3756   010CF2  260E               	addwf	___flmul@grs^0,f,c
  3757   010CF4  0E00               	movlw	0
  3758   010CF6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3759   010CF8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3760   010CFA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3761   010CFC  5019               	movf	(___flmul@temp+1)^0,w,c
  3762   010CFE  2614               	addwf	___flmul@prod^0,f,c
  3763   010D00  0E00               	movlw	0
  3764   010D02  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3765   010D04  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3766   010D06  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3767   010D08  5005               	movf	___flmul@a^0,w,c
  3768   010D0A  0203               	mulwf	(___flmul@b+2)^0,c
  3769   010D0C  CFF3 F018          	movff	prodl,___flmul@temp
  3770   010D10  CFF4 F019          	movff	prodh,___flmul@temp+1
  3771   010D14  5018               	movf	___flmul@temp^0,w,c
  3772   010D16  260E               	addwf	___flmul@grs^0,f,c
  3773   010D18  0E00               	movlw	0
  3774   010D1A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3775   010D1C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3776   010D1E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3777   010D20  5019               	movf	(___flmul@temp+1)^0,w,c
  3778   010D22  2614               	addwf	___flmul@prod^0,f,c
  3779   010D24  0E00               	movlw	0
  3780   010D26  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3781   010D28  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3782   010D2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3783   010D2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3784   010D30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3785   010D34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3786   010D38  6A0E               	clrf	___flmul@grs^0,c
  3787   010D3A  5005               	movf	___flmul@a^0,w,c
  3788   010D3C  0202               	mulwf	(___flmul@b+1)^0,c
  3789   010D3E  CFF3 F018          	movff	prodl,___flmul@temp
  3790   010D42  CFF4 F019          	movff	prodh,___flmul@temp+1
  3791   010D46  5018               	movf	___flmul@temp^0,w,c
  3792   010D48  260E               	addwf	___flmul@grs^0,f,c
  3793   010D4A  5019               	movf	(___flmul@temp+1)^0,w,c
  3794   010D4C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3795   010D4E  0E00               	movlw	0
  3796   010D50  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3797   010D52  0E00               	movlw	0
  3798   010D54  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3799   010D56  5006               	movf	(___flmul@a+1)^0,w,c
  3800   010D58  0201               	mulwf	___flmul@b^0,c
  3801   010D5A  CFF3 F018          	movff	prodl,___flmul@temp
  3802   010D5E  CFF4 F019          	movff	prodh,___flmul@temp+1
  3803   010D62  5018               	movf	___flmul@temp^0,w,c
  3804   010D64  260E               	addwf	___flmul@grs^0,f,c
  3805   010D66  5019               	movf	(___flmul@temp+1)^0,w,c
  3806   010D68  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3807   010D6A  0E00               	movlw	0
  3808   010D6C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3809   010D6E  0E00               	movlw	0
  3810   010D70  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3811   010D72  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3812   010D76  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3813   010D7A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3814   010D7E  6A0E               	clrf	___flmul@grs^0,c
  3815   010D80  5005               	movf	___flmul@a^0,w,c
  3816   010D82  0201               	mulwf	___flmul@b^0,c
  3817   010D84  CFF3 F018          	movff	prodl,___flmul@temp
  3818   010D88  CFF4 F019          	movff	prodh,___flmul@temp+1
  3819   010D8C  5018               	movf	___flmul@temp^0,w,c
  3820   010D8E  260E               	addwf	___flmul@grs^0,f,c
  3821   010D90  5019               	movf	(___flmul@temp+1)^0,w,c
  3822   010D92  220F               	addwfc	(___flmul@grs+1)^0,f,c
  3823   010D94  0E00               	movlw	0
  3824   010D96  2210               	addwfc	(___flmul@grs+2)^0,f,c
  3825   010D98  0E00               	movlw	0
  3826   010D9A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  3827   010D9C  5007               	movf	(___flmul@a+2)^0,w,c
  3828   010D9E  0202               	mulwf	(___flmul@b+1)^0,c
  3829   010DA0  CFF3 F018          	movff	prodl,___flmul@temp
  3830   010DA4  CFF4 F019          	movff	prodh,___flmul@temp+1
  3831   010DA8  5018               	movf	___flmul@temp^0,w,c
  3832   010DAA  2614               	addwf	___flmul@prod^0,f,c
  3833   010DAC  5019               	movf	(___flmul@temp+1)^0,w,c
  3834   010DAE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3835   010DB0  0E00               	movlw	0
  3836   010DB2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3837   010DB4  0E00               	movlw	0
  3838   010DB6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3839   010DB8  5006               	movf	(___flmul@a+1)^0,w,c
  3840   010DBA  0203               	mulwf	(___flmul@b+2)^0,c
  3841   010DBC  CFF3 F018          	movff	prodl,___flmul@temp
  3842   010DC0  CFF4 F019          	movff	prodh,___flmul@temp+1
  3843   010DC4  5018               	movf	___flmul@temp^0,w,c
  3844   010DC6  2614               	addwf	___flmul@prod^0,f,c
  3845   010DC8  5019               	movf	(___flmul@temp+1)^0,w,c
  3846   010DCA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3847   010DCC  0E00               	movlw	0
  3848   010DCE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3849   010DD0  0E00               	movlw	0
  3850   010DD2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3851   010DD4  5007               	movf	(___flmul@a+2)^0,w,c
  3852   010DD6  0203               	mulwf	(___flmul@b+2)^0,c
  3853   010DD8  CFF3 F018          	movff	prodl,___flmul@temp
  3854   010DDC  CFF4 F019          	movff	prodh,___flmul@temp+1
  3855   010DE0  5018               	movf	___flmul@temp^0,w,c
  3856   010DE2  6E09               	movwf	??___flmul^0,c
  3857   010DE4  5019               	movf	(___flmul@temp+1)^0,w,c
  3858   010DE6  6E0A               	movwf	(??___flmul+1)^0,c
  3859   010DE8  6A0B               	clrf	(??___flmul+2)^0,c
  3860   010DEA  6A0C               	clrf	(??___flmul+3)^0,c
  3861   010DEC  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  3862   010DF0  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  3863   010DF4  C009  F00A         	movff	??___flmul,??___flmul+1
  3864   010DF8  6A09               	clrf	??___flmul^0,c
  3865   010DFA  5009               	movf	??___flmul^0,w,c
  3866   010DFC  2614               	addwf	___flmul@prod^0,f,c
  3867   010DFE  500A               	movf	(??___flmul+1)^0,w,c
  3868   010E00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3869   010E02  500B               	movf	(??___flmul+2)^0,w,c
  3870   010E04  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3871   010E06  500C               	movf	(??___flmul+3)^0,w,c
  3872   010E08  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3873   010E0A  C00E  F009         	movff	___flmul@grs,??___flmul
  3874   010E0E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  3875   010E12  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  3876   010E16  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  3877   010E1A  0E19               	movlw	25
  3878   010E1C  EF15  F087         	goto	u3250
  3879   010E20                     u3255:
  3880   010E20  90D8               	bcf	status,0,c
  3881   010E22  320C               	rrcf	(??___flmul+3)^0,f,c
  3882   010E24  320B               	rrcf	(??___flmul+2)^0,f,c
  3883   010E26  320A               	rrcf	(??___flmul+1)^0,f,c
  3884   010E28  3209               	rrcf	??___flmul^0,f,c
  3885   010E2A                     u3250:
  3886   010E2A  2EE8               	decfsz	wreg,f,c
  3887   010E2C  EF10  F087         	goto	u3255
  3888   010E30  5009               	movf	??___flmul^0,w,c
  3889   010E32  2614               	addwf	___flmul@prod^0,f,c
  3890   010E34  500A               	movf	(??___flmul+1)^0,w,c
  3891   010E36  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3892   010E38  500B               	movf	(??___flmul+2)^0,w,c
  3893   010E3A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3894   010E3C  500C               	movf	(??___flmul+3)^0,w,c
  3895   010E3E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3896   010E40  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  3897   010E44  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  3898   010E48  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  3899   010E4C  6A0E               	clrf	___flmul@grs^0,c
  3900   010E4E  5012               	movf	___flmul@aexp^0,w,c
  3901   010E50  C013  F009         	movff	___flmul@bexp,??___flmul
  3902   010E54  6A0A               	clrf	(??___flmul+1)^0,c
  3903   010E56  2609               	addwf	??___flmul^0,f,c
  3904   010E58  0E00               	movlw	0
  3905   010E5A  220A               	addwfc	(??___flmul+1)^0,f,c
  3906   010E5C  0E82               	movlw	130
  3907   010E5E  2409               	addwf	??___flmul^0,w,c
  3908   010E60  6E18               	movwf	___flmul@temp^0,c
  3909   010E62  0EFF               	movlw	255
  3910   010E64  200A               	addwfc	(??___flmul+1)^0,w,c
  3911   010E66  6E19               	movwf	(___flmul@temp+1)^0,c
  3912   010E68  EF4B  F087         	goto	l3701
  3913   010E6C                     l3695:
  3914   010E6C  90D8               	bcf	status,0,c
  3915   010E6E  3614               	rlcf	___flmul@prod^0,f,c
  3916   010E70  3615               	rlcf	(___flmul@prod+1)^0,f,c
  3917   010E72  3616               	rlcf	(___flmul@prod+2)^0,f,c
  3918   010E74  3617               	rlcf	(___flmul@prod+3)^0,f,c
  3919   010E76  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3920   010E78  EF40  F087         	goto	u3261
  3921   010E7C  EF42  F087         	goto	u3260
  3922   010E80                     u3261:
  3923   010E80  EF43  F087         	goto	l1166
  3924   010E84                     u3260:
  3925   010E84  8014               	bsf	___flmul@prod^0,0,c
  3926   010E86                     l1166:
  3927   010E86  90D8               	bcf	status,0,c
  3928   010E88  360E               	rlcf	___flmul@grs^0,f,c
  3929   010E8A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  3930   010E8C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  3931   010E8E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  3932   010E90  0618               	decf	___flmul@temp^0,f,c
  3933   010E92  A0D8               	btfss	status,0,c
  3934   010E94  0619               	decf	(___flmul@temp+1)^0,f,c
  3935   010E96                     l3701:
  3936   010E96  AE16               	btfss	(___flmul@prod+2)^0,7,c
  3937   010E98  EF50  F087         	goto	u3271
  3938   010E9C  EF52  F087         	goto	u3270
  3939   010EA0                     u3271:
  3940   010EA0  EF36  F087         	goto	l3695
  3941   010EA4                     u3270:
  3942   010EA4  0E00               	movlw	0
  3943   010EA6  6E12               	movwf	___flmul@aexp^0,c
  3944   010EA8  AE11               	btfss	(___flmul@grs+3)^0,7,c
  3945   010EAA  EF59  F087         	goto	u3281
  3946   010EAE  EF5B  F087         	goto	u3280
  3947   010EB2                     u3281:
  3948   010EB2  EF7F  F087         	goto	l1168
  3949   010EB6                     u3280:
  3950   010EB6  0EFF               	movlw	255
  3951   010EB8  140E               	andwf	___flmul@grs^0,w,c
  3952   010EBA  6E09               	movwf	??___flmul^0,c
  3953   010EBC  0EFF               	movlw	255
  3954   010EBE  140F               	andwf	(___flmul@grs+1)^0,w,c
  3955   010EC0  6E0A               	movwf	(??___flmul+1)^0,c
  3956   010EC2  0EFF               	movlw	255
  3957   010EC4  1410               	andwf	(___flmul@grs+2)^0,w,c
  3958   010EC6  6E0B               	movwf	(??___flmul+2)^0,c
  3959   010EC8  0E7F               	movlw	127
  3960   010ECA  1411               	andwf	(___flmul@grs+3)^0,w,c
  3961   010ECC  6E0C               	movwf	(??___flmul+3)^0,c
  3962   010ECE  5009               	movf	??___flmul^0,w,c
  3963   010ED0  100A               	iorwf	(??___flmul+1)^0,w,c
  3964   010ED2  100B               	iorwf	(??___flmul+2)^0,w,c
  3965   010ED4  100C               	iorwf	(??___flmul+3)^0,w,c
  3966   010ED6  B4D8               	btfsc	status,2,c
  3967   010ED8  EF70  F087         	goto	u3291
  3968   010EDC  EF72  F087         	goto	u3290
  3969   010EE0                     u3291:
  3970   010EE0  EF76  F087         	goto	l1169
  3971   010EE4                     u3290:
  3972   010EE4                     l3709:
  3973   010EE4  0E01               	movlw	1
  3974   010EE6  6E12               	movwf	___flmul@aexp^0,c
  3975   010EE8  EF7F  F087         	goto	l1168
  3976   010EEC                     l1169:
  3977   010EEC  A014               	btfss	___flmul@prod^0,0,c
  3978   010EEE  EF7B  F087         	goto	u3301
  3979   010EF2  EF7D  F087         	goto	u3300
  3980   010EF6                     u3301:
  3981   010EF6  EF7F  F087         	goto	l1168
  3982   010EFA                     u3300:
  3983   010EFA  EF72  F087         	goto	l3709
  3984   010EFE                     l1168:
  3985   010EFE  5012               	movf	___flmul@aexp^0,w,c
  3986   010F00  B4D8               	btfsc	status,2,c
  3987   010F02  EF85  F087         	goto	u3311
  3988   010F06  EF87  F087         	goto	u3310
  3989   010F0A                     u3311:
  3990   010F0A  EFAB  F087         	goto	l3721
  3991   010F0E                     u3310:
  3992   010F0E  0E01               	movlw	1
  3993   010F10  2614               	addwf	___flmul@prod^0,f,c
  3994   010F12  0E00               	movlw	0
  3995   010F14  2215               	addwfc	(___flmul@prod+1)^0,f,c
  3996   010F16  2216               	addwfc	(___flmul@prod+2)^0,f,c
  3997   010F18  2217               	addwfc	(___flmul@prod+3)^0,f,c
  3998   010F1A  A017               	btfss	(___flmul@prod+3)^0,0,c
  3999   010F1C  EF92  F087         	goto	u3321
  4000   010F20  EF94  F087         	goto	u3320
  4001   010F24                     u3321:
  4002   010F24  EFAB  F087         	goto	l3721
  4003   010F28                     u3320:
  4004   010F28  C014  F009         	movff	___flmul@prod,??___flmul
  4005   010F2C  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  4006   010F30  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  4007   010F34  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  4008   010F38  340C               	rlcf	(??___flmul+3)^0,w,c
  4009   010F3A  320C               	rrcf	(??___flmul+3)^0,f,c
  4010   010F3C  320B               	rrcf	(??___flmul+2)^0,f,c
  4011   010F3E  320A               	rrcf	(??___flmul+1)^0,f,c
  4012   010F40  3209               	rrcf	??___flmul^0,f,c
  4013   010F42  C009  F014         	movff	??___flmul,___flmul@prod
  4014   010F46  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  4015   010F4A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  4016   010F4E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  4017   010F52  4A18               	infsnz	___flmul@temp^0,f,c
  4018   010F54  2A19               	incf	(___flmul@temp+1)^0,f,c
  4019   010F56                     l3721:
  4020   010F56  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  4021   010F58  EFB6  F087         	goto	u3331
  4022   010F5C  5019               	movf	(___flmul@temp+1)^0,w,c
  4023   010F5E  E108               	bnz	u3330
  4024   010F60  2818               	incf	___flmul@temp^0,w,c
  4025   010F62  A0D8               	btfss	status,0,c
  4026   010F64  EFB6  F087         	goto	u3331
  4027   010F68  EFB8  F087         	goto	u3330
  4028   010F6C                     u3331:
  4029   010F6C  EFC2  F087         	goto	l3725
  4030   010F70                     u3330:
  4031   010F70  0E00               	movlw	0
  4032   010F72  6E14               	movwf	___flmul@prod^0,c
  4033   010F74  0E00               	movlw	0
  4034   010F76  6E15               	movwf	(___flmul@prod+1)^0,c
  4035   010F78  0E80               	movlw	128
  4036   010F7A  6E16               	movwf	(___flmul@prod+2)^0,c
  4037   010F7C  0E7F               	movlw	127
  4038   010F7E  6E17               	movwf	(___flmul@prod+3)^0,c
  4039   010F80  EFF0  F087         	goto	l3737
  4040   010F84                     l3725:
  4041   010F84  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  4042   010F86  EFCF  F087         	goto	u3340
  4043   010F8A  5019               	movf	(___flmul@temp+1)^0,w,c
  4044   010F8C  E106               	bnz	u3341
  4045   010F8E  0418               	decf	___flmul@temp^0,w,c
  4046   010F90  B0D8               	btfsc	status,0,c
  4047   010F92  EFCD  F087         	goto	u3341
  4048   010F96  EFCF  F087         	goto	u3340
  4049   010F9A                     u3341:
  4050   010F9A  EFDB  F087         	goto	l1176
  4051   010F9E                     u3340:
  4052   010F9E  0E00               	movlw	0
  4053   010FA0  6E14               	movwf	___flmul@prod^0,c
  4054   010FA2  0E00               	movlw	0
  4055   010FA4  6E15               	movwf	(___flmul@prod+1)^0,c
  4056   010FA6  0E00               	movlw	0
  4057   010FA8  6E16               	movwf	(___flmul@prod+2)^0,c
  4058   010FAA  0E00               	movlw	0
  4059   010FAC  6E17               	movwf	(___flmul@prod+3)^0,c
  4060   010FAE  0E00               	movlw	0
  4061   010FB0  6E0D               	movwf	___flmul@sign^0,c
  4062   010FB2  EFF0  F087         	goto	l3737
  4063   010FB6                     l1176:
  4064   010FB6  C018  F013         	movff	___flmul@temp,___flmul@bexp
  4065   010FBA  0EFF               	movlw	255
  4066   010FBC  1614               	andwf	___flmul@prod^0,f,c
  4067   010FBE  0EFF               	movlw	255
  4068   010FC0  1615               	andwf	(___flmul@prod+1)^0,f,c
  4069   010FC2  0E7F               	movlw	127
  4070   010FC4  1616               	andwf	(___flmul@prod+2)^0,f,c
  4071   010FC6  0E00               	movlw	0
  4072   010FC8  1617               	andwf	(___flmul@prod+3)^0,f,c
  4073   010FCA  A013               	btfss	___flmul@bexp^0,0,c
  4074   010FCC  EFEA  F087         	goto	u3351
  4075   010FD0  EFEC  F087         	goto	u3350
  4076   010FD4                     u3351:
  4077   010FD4  EFED  F087         	goto	l3735
  4078   010FD8                     u3350:
  4079   010FD8  8E16               	bsf	(___flmul@prod+2)^0,7,c
  4080   010FDA                     l3735:
  4081   010FDA  90D8               	bcf	status,0,c
  4082   010FDC  3013               	rrcf	___flmul@bexp^0,w,c
  4083   010FDE  6E17               	movwf	(___flmul@prod+3)^0,c
  4084   010FE0                     l3737:
  4085   010FE0  500D               	movf	___flmul@sign^0,w,c
  4086   010FE2  1217               	iorwf	(___flmul@prod+3)^0,f,c
  4087   010FE4  C014  F001         	movff	___flmul@prod,?___flmul
  4088   010FE8  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  4089   010FEC  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  4090   010FF0  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  4091   010FF4                     l1163:
  4092   010FF4  0012               	return		;funcret
  4093   010FF6                     __end_of___flmul:
  4094                           	callstack 0
  4095                           
  4096 ;; *************** function ___flge *****************
  4097 ;; Defined at:
  4098 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  ff1             4    0[COMRAM] unsigned char 
  4101 ;;  ff2             4    4[COMRAM] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4113 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;Total ram usage:       12 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_convert_rgb2hue
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text10
  4127   011C9E                     __ptext10:
  4128                           	callstack 0
  4129   011C9E                     ___flge:
  4130                           	callstack 28
  4131   011C9E  0E00               	movlw	0
  4132   011CA0  1401               	andwf	___flge@ff1^0,w,c
  4133   011CA2  6E09               	movwf	??___flge^0,c
  4134   011CA4  0E00               	movlw	0
  4135   011CA6  1402               	andwf	(___flge@ff1+1)^0,w,c
  4136   011CA8  6E0A               	movwf	(??___flge+1)^0,c
  4137   011CAA  0E80               	movlw	128
  4138   011CAC  1403               	andwf	(___flge@ff1+2)^0,w,c
  4139   011CAE  6E0B               	movwf	(??___flge+2)^0,c
  4140   011CB0  0E7F               	movlw	127
  4141   011CB2  1404               	andwf	(___flge@ff1+3)^0,w,c
  4142   011CB4  6E0C               	movwf	(??___flge+3)^0,c
  4143   011CB6  5009               	movf	??___flge^0,w,c
  4144   011CB8  100A               	iorwf	(??___flge+1)^0,w,c
  4145   011CBA  100B               	iorwf	(??___flge+2)^0,w,c
  4146   011CBC  100C               	iorwf	(??___flge+3)^0,w,c
  4147   011CBE  A4D8               	btfss	status,2,c
  4148   011CC0  EF64  F08E         	goto	u3391
  4149   011CC4  EF66  F08E         	goto	u3390
  4150   011CC8                     u3391:
  4151   011CC8  EF6E  F08E         	goto	l3769
  4152   011CCC                     u3390:
  4153   011CCC  0E00               	movlw	0
  4154   011CCE  6E01               	movwf	___flge@ff1^0,c
  4155   011CD0  0E00               	movlw	0
  4156   011CD2  6E02               	movwf	(___flge@ff1+1)^0,c
  4157   011CD4  0E00               	movlw	0
  4158   011CD6  6E03               	movwf	(___flge@ff1+2)^0,c
  4159   011CD8  0E00               	movlw	0
  4160   011CDA  6E04               	movwf	(___flge@ff1+3)^0,c
  4161   011CDC                     l3769:
  4162   011CDC  0E00               	movlw	0
  4163   011CDE  1405               	andwf	___flge@ff2^0,w,c
  4164   011CE0  6E09               	movwf	??___flge^0,c
  4165   011CE2  0E00               	movlw	0
  4166   011CE4  1406               	andwf	(___flge@ff2+1)^0,w,c
  4167   011CE6  6E0A               	movwf	(??___flge+1)^0,c
  4168   011CE8  0E80               	movlw	128
  4169   011CEA  1407               	andwf	(___flge@ff2+2)^0,w,c
  4170   011CEC  6E0B               	movwf	(??___flge+2)^0,c
  4171   011CEE  0E7F               	movlw	127
  4172   011CF0  1408               	andwf	(___flge@ff2+3)^0,w,c
  4173   011CF2  6E0C               	movwf	(??___flge+3)^0,c
  4174   011CF4  5009               	movf	??___flge^0,w,c
  4175   011CF6  100A               	iorwf	(??___flge+1)^0,w,c
  4176   011CF8  100B               	iorwf	(??___flge+2)^0,w,c
  4177   011CFA  100C               	iorwf	(??___flge+3)^0,w,c
  4178   011CFC  A4D8               	btfss	status,2,c
  4179   011CFE  EF83  F08E         	goto	u3401
  4180   011D02  EF85  F08E         	goto	u3400
  4181   011D06                     u3401:
  4182   011D06  EF8D  F08E         	goto	l3773
  4183   011D0A                     u3400:
  4184   011D0A  0E00               	movlw	0
  4185   011D0C  6E05               	movwf	___flge@ff2^0,c
  4186   011D0E  0E00               	movlw	0
  4187   011D10  6E06               	movwf	(___flge@ff2+1)^0,c
  4188   011D12  0E00               	movlw	0
  4189   011D14  6E07               	movwf	(___flge@ff2+2)^0,c
  4190   011D16  0E00               	movlw	0
  4191   011D18  6E08               	movwf	(___flge@ff2+3)^0,c
  4192   011D1A                     l3773:
  4193   011D1A  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4194   011D1C  EF92  F08E         	goto	u3411
  4195   011D20  EF94  F08E         	goto	u3410
  4196   011D24                     u3411:
  4197   011D24  EF9D  F08E         	goto	l3777
  4198   011D28                     u3410:
  4199   011D28  6C01               	negf	___flge@ff1^0,c
  4200   011D2A  1E02               	comf	(___flge@ff1+1)^0,f,c
  4201   011D2C  B0D8               	btfsc	status,0,c
  4202   011D2E  2A02               	incf	(___flge@ff1+1)^0,f,c
  4203   011D30  1E03               	comf	(___flge@ff1+2)^0,f,c
  4204   011D32  B0D8               	btfsc	status,0,c
  4205   011D34  2A03               	incf	(___flge@ff1+2)^0,f,c
  4206   011D36  0E80               	movlw	128
  4207   011D38  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4208   011D3A                     l3777:
  4209   011D3A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4210   011D3C  EFA2  F08E         	goto	u3421
  4211   011D40  EFA4  F08E         	goto	u3420
  4212   011D44                     u3421:
  4213   011D44  EFAD  F08E         	goto	l810
  4214   011D48                     u3420:
  4215   011D48  6C05               	negf	___flge@ff2^0,c
  4216   011D4A  1E06               	comf	(___flge@ff2+1)^0,f,c
  4217   011D4C  B0D8               	btfsc	status,0,c
  4218   011D4E  2A06               	incf	(___flge@ff2+1)^0,f,c
  4219   011D50  1E07               	comf	(___flge@ff2+2)^0,f,c
  4220   011D52  B0D8               	btfsc	status,0,c
  4221   011D54  2A07               	incf	(___flge@ff2+2)^0,f,c
  4222   011D56  0E80               	movlw	128
  4223   011D58  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4224   011D5A                     l810:
  4225   011D5A  0E00               	movlw	0
  4226   011D5C  1A01               	xorwf	___flge@ff1^0,f,c
  4227   011D5E  0E00               	movlw	0
  4228   011D60  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4229   011D62  0E00               	movlw	0
  4230   011D64  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4231   011D66  0E80               	movlw	128
  4232   011D68  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4233   011D6A  0E00               	movlw	0
  4234   011D6C  1A05               	xorwf	___flge@ff2^0,f,c
  4235   011D6E  0E00               	movlw	0
  4236   011D70  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4237   011D72  0E00               	movlw	0
  4238   011D74  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4239   011D76  0E80               	movlw	128
  4240   011D78  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4241   011D7A  5005               	movf	___flge@ff2^0,w,c
  4242   011D7C  5C01               	subwf	___flge@ff1^0,w,c
  4243   011D7E  5006               	movf	(___flge@ff2+1)^0,w,c
  4244   011D80  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4245   011D82  5007               	movf	(___flge@ff2+2)^0,w,c
  4246   011D84  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4247   011D86  5008               	movf	(___flge@ff2+3)^0,w,c
  4248   011D88  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4249   011D8A  B0D8               	btfsc	status,0,c
  4250   011D8C  EFCA  F08E         	goto	u3431
  4251   011D90  EFCC  F08E         	goto	u3430
  4252   011D94                     u3431:
  4253   011D94  EFCF  F08E         	goto	l3783
  4254   011D98                     u3430:
  4255   011D98  90D8               	bcf	status,0,c
  4256   011D9A  EFD0  F08E         	goto	l815
  4257   011D9E                     l3783:
  4258   011D9E  80D8               	bsf	status,0,c
  4259   011DA0                     l815:
  4260   011DA0  0012               	return		;funcret
  4261   011DA2                     __end_of___flge:
  4262                           	callstack 0
  4263                           
  4264 ;; *************** function ___fleq *****************
  4265 ;; Defined at:
  4266 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;  ff1             4    0[COMRAM] unsigned char 
  4269 ;;  ff2             4    4[COMRAM] unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;		None
  4272 ;; Return value:  Size  Location     Type
  4273 ;;		None               void
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4281 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4284 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4285 ;;Total ram usage:       12 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_convert_rgb2hue
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text11
  4295   012080                     __ptext11:
  4296                           	callstack 0
  4297   012080                     ___fleq:
  4298                           	callstack 28
  4299   012080  0E00               	movlw	0
  4300   012082  1401               	andwf	___fleq@ff1^0,w,c
  4301   012084  6E09               	movwf	??___fleq^0,c
  4302   012086  0E00               	movlw	0
  4303   012088  1402               	andwf	(___fleq@ff1+1)^0,w,c
  4304   01208A  6E0A               	movwf	(??___fleq+1)^0,c
  4305   01208C  0E80               	movlw	128
  4306   01208E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  4307   012090  6E0B               	movwf	(??___fleq+2)^0,c
  4308   012092  0E7F               	movlw	127
  4309   012094  1404               	andwf	(___fleq@ff1+3)^0,w,c
  4310   012096  6E0C               	movwf	(??___fleq+3)^0,c
  4311   012098  5009               	movf	??___fleq^0,w,c
  4312   01209A  100A               	iorwf	(??___fleq+1)^0,w,c
  4313   01209C  100B               	iorwf	(??___fleq+2)^0,w,c
  4314   01209E  100C               	iorwf	(??___fleq+3)^0,w,c
  4315   0120A0  A4D8               	btfss	status,2,c
  4316   0120A2  EF55  F090         	goto	u3361
  4317   0120A6  EF57  F090         	goto	u3360
  4318   0120AA                     u3361:
  4319   0120AA  EF5F  F090         	goto	l3753
  4320   0120AE                     u3360:
  4321   0120AE  0E00               	movlw	0
  4322   0120B0  6E01               	movwf	___fleq@ff1^0,c
  4323   0120B2  0E00               	movlw	0
  4324   0120B4  6E02               	movwf	(___fleq@ff1+1)^0,c
  4325   0120B6  0E00               	movlw	0
  4326   0120B8  6E03               	movwf	(___fleq@ff1+2)^0,c
  4327   0120BA  0E00               	movlw	0
  4328   0120BC  6E04               	movwf	(___fleq@ff1+3)^0,c
  4329   0120BE                     l3753:
  4330   0120BE  0E00               	movlw	0
  4331   0120C0  1405               	andwf	___fleq@ff2^0,w,c
  4332   0120C2  6E09               	movwf	??___fleq^0,c
  4333   0120C4  0E00               	movlw	0
  4334   0120C6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  4335   0120C8  6E0A               	movwf	(??___fleq+1)^0,c
  4336   0120CA  0E80               	movlw	128
  4337   0120CC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  4338   0120CE  6E0B               	movwf	(??___fleq+2)^0,c
  4339   0120D0  0E7F               	movlw	127
  4340   0120D2  1408               	andwf	(___fleq@ff2+3)^0,w,c
  4341   0120D4  6E0C               	movwf	(??___fleq+3)^0,c
  4342   0120D6  5009               	movf	??___fleq^0,w,c
  4343   0120D8  100A               	iorwf	(??___fleq+1)^0,w,c
  4344   0120DA  100B               	iorwf	(??___fleq+2)^0,w,c
  4345   0120DC  100C               	iorwf	(??___fleq+3)^0,w,c
  4346   0120DE  A4D8               	btfss	status,2,c
  4347   0120E0  EF74  F090         	goto	u3371
  4348   0120E4  EF76  F090         	goto	u3370
  4349   0120E8                     u3371:
  4350   0120E8  EF7E  F090         	goto	l3757
  4351   0120EC                     u3370:
  4352   0120EC  0E00               	movlw	0
  4353   0120EE  6E05               	movwf	___fleq@ff2^0,c
  4354   0120F0  0E00               	movlw	0
  4355   0120F2  6E06               	movwf	(___fleq@ff2+1)^0,c
  4356   0120F4  0E00               	movlw	0
  4357   0120F6  6E07               	movwf	(___fleq@ff2+2)^0,c
  4358   0120F8  0E00               	movlw	0
  4359   0120FA  6E08               	movwf	(___fleq@ff2+3)^0,c
  4360   0120FC                     l3757:
  4361   0120FC  5005               	movf	___fleq@ff2^0,w,c
  4362   0120FE  1801               	xorwf	___fleq@ff1^0,w,c
  4363   012100  E10F               	bnz	u3380
  4364   012102  5006               	movf	(___fleq@ff2+1)^0,w,c
  4365   012104  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  4366   012106  E10C               	bnz	u3380
  4367   012108  5007               	movf	(___fleq@ff2+2)^0,w,c
  4368   01210A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  4369   01210C  E109               	bnz	u3380
  4370   01210E  5008               	movf	(___fleq@ff2+3)^0,w,c
  4371   012110  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  4372   012112  B4D8               	btfsc	status,2,c
  4373   012114  EF8E  F090         	goto	u3381
  4374   012118  EF90  F090         	goto	u3380
  4375   01211C                     u3381:
  4376   01211C  EF93  F090         	goto	l3761
  4377   012120                     u3380:
  4378   012120  90D8               	bcf	status,0,c
  4379   012122  EF94  F090         	goto	l804
  4380   012126                     l3761:
  4381   012126  80D8               	bsf	status,0,c
  4382   012128                     l804:
  4383   012128  0012               	return		;funcret
  4384   01212A                     __end_of___fleq:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function ___fldiv *****************
  4388 ;; Defined at:
  4389 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  b               4   24[COMRAM] unsigned char 
  4392 ;;  a               4   28[COMRAM] unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  grs             4   43[COMRAM] unsigned long 
  4395 ;;  rem             4   36[COMRAM] unsigned long 
  4396 ;;  new_exp         2   41[COMRAM] short 
  4397 ;;  aexp            1   48[COMRAM] unsigned char 
  4398 ;;  bexp            1   47[COMRAM] unsigned char 
  4399 ;;  sign            1   40[COMRAM] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  4   24[COMRAM] unsigned char 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;Total ram usage:       25 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_convert_rgb2hue
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text12
  4423   010FF6                     __ptext12:
  4424                           	callstack 0
  4425   010FF6                     ___fldiv:
  4426                           	callstack 28
  4427   010FF6  501C               	movf	(___fldiv@b+3)^0,w,c
  4428   010FF8  0B80               	andlw	128
  4429   010FFA  6E29               	movwf	___fldiv@sign^0,c
  4430   010FFC  501C               	movf	(___fldiv@b+3)^0,w,c
  4431   010FFE  241C               	addwf	(___fldiv@b+3)^0,w,c
  4432   011000  6E30               	movwf	___fldiv@bexp^0,c
  4433   011002  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4434   011004  EF06  F088         	goto	u2941
  4435   011008  EF08  F088         	goto	u2940
  4436   01100C                     u2941:
  4437   01100C  EF09  F088         	goto	l3481
  4438   011010                     u2940:
  4439   011010  8030               	bsf	___fldiv@bexp^0,0,c
  4440   011012                     l3481:
  4441   011012  5030               	movf	___fldiv@bexp^0,w,c
  4442   011014  B4D8               	btfsc	status,2,c
  4443   011016  EF0F  F088         	goto	u2951
  4444   01101A  EF11  F088         	goto	u2950
  4445   01101E                     u2951:
  4446   01101E  EF26  F088         	goto	l3491
  4447   011022                     u2950:
  4448   011022  2830               	incf	___fldiv@bexp^0,w,c
  4449   011024  A4D8               	btfss	status,2,c
  4450   011026  EF17  F088         	goto	u2961
  4451   01102A  EF19  F088         	goto	u2960
  4452   01102E                     u2961:
  4453   01102E  EF21  F088         	goto	l3487
  4454   011032                     u2960:
  4455   011032  0E00               	movlw	0
  4456   011034  6E19               	movwf	___fldiv@b^0,c
  4457   011036  0E00               	movlw	0
  4458   011038  6E1A               	movwf	(___fldiv@b+1)^0,c
  4459   01103A  0E00               	movlw	0
  4460   01103C  6E1B               	movwf	(___fldiv@b+2)^0,c
  4461   01103E  0E00               	movlw	0
  4462   011040  6E1C               	movwf	(___fldiv@b+3)^0,c
  4463   011042                     l3487:
  4464   011042  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4465   011044  0E00               	movlw	0
  4466   011046  6E1C               	movwf	(___fldiv@b+3)^0,c
  4467   011048  EF2E  F088         	goto	l3493
  4468   01104C                     l3491:
  4469   01104C  0E00               	movlw	0
  4470   01104E  6E19               	movwf	___fldiv@b^0,c
  4471   011050  0E00               	movlw	0
  4472   011052  6E1A               	movwf	(___fldiv@b+1)^0,c
  4473   011054  0E00               	movlw	0
  4474   011056  6E1B               	movwf	(___fldiv@b+2)^0,c
  4475   011058  0E00               	movlw	0
  4476   01105A  6E1C               	movwf	(___fldiv@b+3)^0,c
  4477   01105C                     l3493:
  4478   01105C  5020               	movf	(___fldiv@a+3)^0,w,c
  4479   01105E  0B80               	andlw	128
  4480   011060  1A29               	xorwf	___fldiv@sign^0,f,c
  4481   011062  5020               	movf	(___fldiv@a+3)^0,w,c
  4482   011064  2420               	addwf	(___fldiv@a+3)^0,w,c
  4483   011066  6E31               	movwf	___fldiv@aexp^0,c
  4484   011068  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  4485   01106A  EF39  F088         	goto	u2971
  4486   01106E  EF3B  F088         	goto	u2970
  4487   011072                     u2971:
  4488   011072  EF3C  F088         	goto	l3501
  4489   011076                     u2970:
  4490   011076  8031               	bsf	___fldiv@aexp^0,0,c
  4491   011078                     l3501:
  4492   011078  5031               	movf	___fldiv@aexp^0,w,c
  4493   01107A  B4D8               	btfsc	status,2,c
  4494   01107C  EF42  F088         	goto	u2981
  4495   011080  EF44  F088         	goto	u2980
  4496   011084                     u2981:
  4497   011084  EF59  F088         	goto	l3511
  4498   011088                     u2980:
  4499   011088  2831               	incf	___fldiv@aexp^0,w,c
  4500   01108A  A4D8               	btfss	status,2,c
  4501   01108C  EF4A  F088         	goto	u2991
  4502   011090  EF4C  F088         	goto	u2990
  4503   011094                     u2991:
  4504   011094  EF54  F088         	goto	l3507
  4505   011098                     u2990:
  4506   011098  0E00               	movlw	0
  4507   01109A  6E1D               	movwf	___fldiv@a^0,c
  4508   01109C  0E00               	movlw	0
  4509   01109E  6E1E               	movwf	(___fldiv@a+1)^0,c
  4510   0110A0  0E00               	movlw	0
  4511   0110A2  6E1F               	movwf	(___fldiv@a+2)^0,c
  4512   0110A4  0E00               	movlw	0
  4513   0110A6  6E20               	movwf	(___fldiv@a+3)^0,c
  4514   0110A8                     l3507:
  4515   0110A8  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  4516   0110AA  0E00               	movlw	0
  4517   0110AC  6E20               	movwf	(___fldiv@a+3)^0,c
  4518   0110AE  EF61  F088         	goto	l3513
  4519   0110B2                     l3511:
  4520   0110B2  0E00               	movlw	0
  4521   0110B4  6E1D               	movwf	___fldiv@a^0,c
  4522   0110B6  0E00               	movlw	0
  4523   0110B8  6E1E               	movwf	(___fldiv@a+1)^0,c
  4524   0110BA  0E00               	movlw	0
  4525   0110BC  6E1F               	movwf	(___fldiv@a+2)^0,c
  4526   0110BE  0E00               	movlw	0
  4527   0110C0  6E20               	movwf	(___fldiv@a+3)^0,c
  4528   0110C2                     l3513:
  4529   0110C2  501D               	movf	___fldiv@a^0,w,c
  4530   0110C4  101E               	iorwf	(___fldiv@a+1)^0,w,c
  4531   0110C6  101F               	iorwf	(___fldiv@a+2)^0,w,c
  4532   0110C8  1020               	iorwf	(___fldiv@a+3)^0,w,c
  4533   0110CA  A4D8               	btfss	status,2,c
  4534   0110CC  EF6A  F088         	goto	u3001
  4535   0110D0  EF6C  F088         	goto	u3000
  4536   0110D4                     u3001:
  4537   0110D4  EF84  F088         	goto	l3525
  4538   0110D8                     u3000:
  4539   0110D8  0E00               	movlw	0
  4540   0110DA  6E19               	movwf	___fldiv@b^0,c
  4541   0110DC  0E00               	movlw	0
  4542   0110DE  6E1A               	movwf	(___fldiv@b+1)^0,c
  4543   0110E0  0E00               	movlw	0
  4544   0110E2  6E1B               	movwf	(___fldiv@b+2)^0,c
  4545   0110E4  0E00               	movlw	0
  4546   0110E6  6E1C               	movwf	(___fldiv@b+3)^0,c
  4547   0110E8  0E80               	movlw	128
  4548   0110EA  121B               	iorwf	(___fldiv@b+2)^0,f,c
  4549   0110EC  0E7F               	movlw	127
  4550   0110EE  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4551   0110F0                     l3519:
  4552   0110F0  5029               	movf	___fldiv@sign^0,w,c
  4553   0110F2  121C               	iorwf	(___fldiv@b+3)^0,f,c
  4554   0110F4  C019  F019         	movff	___fldiv@b,?___fldiv
  4555   0110F8  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  4556   0110FC  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  4557   011100  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  4558   011104  EFC7  F089         	goto	l1127
  4559   011108                     l3525:
  4560   011108  5030               	movf	___fldiv@bexp^0,w,c
  4561   01110A  A4D8               	btfss	status,2,c
  4562   01110C  EF8A  F088         	goto	u3011
  4563   011110  EF8C  F088         	goto	u3010
  4564   011114                     u3011:
  4565   011114  EF96  F088         	goto	l3533
  4566   011118                     u3010:
  4567   011118  0E00               	movlw	0
  4568   01111A  6E19               	movwf	?___fldiv^0,c
  4569   01111C  0E00               	movlw	0
  4570   01111E  6E1A               	movwf	(?___fldiv+1)^0,c
  4571   011120  0E00               	movlw	0
  4572   011122  6E1B               	movwf	(?___fldiv+2)^0,c
  4573   011124  0E00               	movlw	0
  4574   011126  6E1C               	movwf	(?___fldiv+3)^0,c
  4575   011128  EFC7  F089         	goto	l1127
  4576   01112C                     l3533:
  4577   01112C  5031               	movf	___fldiv@aexp^0,w,c
  4578   01112E  C030  F021         	movff	___fldiv@bexp,??___fldiv
  4579   011132  6A22               	clrf	(??___fldiv+1)^0,c
  4580   011134  5E21               	subwf	??___fldiv^0,f,c
  4581   011136  0E00               	movlw	0
  4582   011138  5A22               	subwfb	(??___fldiv+1)^0,f,c
  4583   01113A  0E7F               	movlw	127
  4584   01113C  2421               	addwf	??___fldiv^0,w,c
  4585   01113E  6E2A               	movwf	___fldiv@new_exp^0,c
  4586   011140  0E00               	movlw	0
  4587   011142  2022               	addwfc	(??___fldiv+1)^0,w,c
  4588   011144  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4589   011146  C019  F025         	movff	___fldiv@b,___fldiv@rem
  4590   01114A  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  4591   01114E  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  4592   011152  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  4593   011156  0E00               	movlw	0
  4594   011158  6E19               	movwf	___fldiv@b^0,c
  4595   01115A  0E00               	movlw	0
  4596   01115C  6E1A               	movwf	(___fldiv@b+1)^0,c
  4597   01115E  0E00               	movlw	0
  4598   011160  6E1B               	movwf	(___fldiv@b+2)^0,c
  4599   011162  0E00               	movlw	0
  4600   011164  6E1C               	movwf	(___fldiv@b+3)^0,c
  4601   011166  0E00               	movlw	0
  4602   011168  6E2C               	movwf	___fldiv@grs^0,c
  4603   01116A  0E00               	movlw	0
  4604   01116C  6E2D               	movwf	(___fldiv@grs+1)^0,c
  4605   01116E  0E00               	movlw	0
  4606   011170  6E2E               	movwf	(___fldiv@grs+2)^0,c
  4607   011172  0E00               	movlw	0
  4608   011174  6E2F               	movwf	(___fldiv@grs+3)^0,c
  4609   011176  0E00               	movlw	0
  4610   011178  6E31               	movwf	___fldiv@aexp^0,c
  4611   01117A  EFF7  F088         	goto	l1129
  4612   01117E                     l3543:
  4613   01117E  5031               	movf	___fldiv@aexp^0,w,c
  4614   011180  B4D8               	btfsc	status,2,c
  4615   011182  EFC5  F088         	goto	u3021
  4616   011186  EFC7  F088         	goto	u3020
  4617   01118A                     u3021:
  4618   01118A  EFDE  F088         	goto	l3551
  4619   01118E                     u3020:
  4620   01118E  90D8               	bcf	status,0,c
  4621   011190  3625               	rlcf	___fldiv@rem^0,f,c
  4622   011192  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  4623   011194  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  4624   011196  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  4625   011198  90D8               	bcf	status,0,c
  4626   01119A  3619               	rlcf	___fldiv@b^0,f,c
  4627   01119C  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4628   01119E  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4629   0111A0  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4630   0111A2  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4631   0111A4  EFD6  F088         	goto	u3031
  4632   0111A8  EFD8  F088         	goto	u3030
  4633   0111AC                     u3031:
  4634   0111AC  EFD9  F088         	goto	l1132
  4635   0111B0                     u3030:
  4636   0111B0  8019               	bsf	___fldiv@b^0,0,c
  4637   0111B2                     l1132:
  4638   0111B2  90D8               	bcf	status,0,c
  4639   0111B4  362C               	rlcf	___fldiv@grs^0,f,c
  4640   0111B6  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4641   0111B8  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4642   0111BA  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4643   0111BC                     l3551:
  4644   0111BC  501D               	movf	___fldiv@a^0,w,c
  4645   0111BE  5C25               	subwf	___fldiv@rem^0,w,c
  4646   0111C0  501E               	movf	(___fldiv@a+1)^0,w,c
  4647   0111C2  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  4648   0111C4  501F               	movf	(___fldiv@a+2)^0,w,c
  4649   0111C6  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  4650   0111C8  5020               	movf	(___fldiv@a+3)^0,w,c
  4651   0111CA  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  4652   0111CC  A0D8               	btfss	status,0,c
  4653   0111CE  EFEB  F088         	goto	u3041
  4654   0111D2  EFED  F088         	goto	u3040
  4655   0111D6                     u3041:
  4656   0111D6  EFF6  F088         	goto	l3557
  4657   0111DA                     u3040:
  4658   0111DA  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  4659   0111DC  501D               	movf	___fldiv@a^0,w,c
  4660   0111DE  5E25               	subwf	___fldiv@rem^0,f,c
  4661   0111E0  501E               	movf	(___fldiv@a+1)^0,w,c
  4662   0111E2  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  4663   0111E4  501F               	movf	(___fldiv@a+2)^0,w,c
  4664   0111E6  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  4665   0111E8  5020               	movf	(___fldiv@a+3)^0,w,c
  4666   0111EA  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  4667   0111EC                     l3557:
  4668   0111EC  2A31               	incf	___fldiv@aexp^0,f,c
  4669   0111EE                     l1129:
  4670   0111EE  0E19               	movlw	25
  4671   0111F0  6431               	cpfsgt	___fldiv@aexp^0,c
  4672   0111F2  EFFD  F088         	goto	u3051
  4673   0111F6  EFFF  F088         	goto	u3050
  4674   0111FA                     u3051:
  4675   0111FA  EFBF  F088         	goto	l3543
  4676   0111FE                     u3050:
  4677   0111FE  5025               	movf	___fldiv@rem^0,w,c
  4678   011200  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  4679   011202  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  4680   011204  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  4681   011206  B4D8               	btfsc	status,2,c
  4682   011208  EF08  F089         	goto	u3061
  4683   01120C  EF0A  F089         	goto	u3060
  4684   011210                     u3061:
  4685   011210  EF22  F089         	goto	l3569
  4686   011214                     u3060:
  4687   011214  802C               	bsf	___fldiv@grs^0,0,c
  4688   011216  EF22  F089         	goto	l3569
  4689   01121A                     l3563:
  4690   01121A  90D8               	bcf	status,0,c
  4691   01121C  3619               	rlcf	___fldiv@b^0,f,c
  4692   01121E  361A               	rlcf	(___fldiv@b+1)^0,f,c
  4693   011220  361B               	rlcf	(___fldiv@b+2)^0,f,c
  4694   011222  361C               	rlcf	(___fldiv@b+3)^0,f,c
  4695   011224  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4696   011226  EF17  F089         	goto	u3071
  4697   01122A  EF19  F089         	goto	u3070
  4698   01122E                     u3071:
  4699   01122E  EF1A  F089         	goto	l1138
  4700   011232                     u3070:
  4701   011232  8019               	bsf	___fldiv@b^0,0,c
  4702   011234                     l1138:
  4703   011234  90D8               	bcf	status,0,c
  4704   011236  362C               	rlcf	___fldiv@grs^0,f,c
  4705   011238  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  4706   01123A  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  4707   01123C  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  4708   01123E  062A               	decf	___fldiv@new_exp^0,f,c
  4709   011240  A0D8               	btfss	status,0,c
  4710   011242  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  4711   011244                     l3569:
  4712   011244  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  4713   011246  EF27  F089         	goto	u3081
  4714   01124A  EF29  F089         	goto	u3080
  4715   01124E                     u3081:
  4716   01124E  EF0D  F089         	goto	l3563
  4717   011252                     u3080:
  4718   011252  0E00               	movlw	0
  4719   011254  6E31               	movwf	___fldiv@aexp^0,c
  4720   011256  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  4721   011258  EF30  F089         	goto	u3091
  4722   01125C  EF32  F089         	goto	u3090
  4723   011260                     u3091:
  4724   011260  EF56  F089         	goto	l1140
  4725   011264                     u3090:
  4726   011264  0EFF               	movlw	255
  4727   011266  142C               	andwf	___fldiv@grs^0,w,c
  4728   011268  6E21               	movwf	??___fldiv^0,c
  4729   01126A  0EFF               	movlw	255
  4730   01126C  142D               	andwf	(___fldiv@grs+1)^0,w,c
  4731   01126E  6E22               	movwf	(??___fldiv+1)^0,c
  4732   011270  0EFF               	movlw	255
  4733   011272  142E               	andwf	(___fldiv@grs+2)^0,w,c
  4734   011274  6E23               	movwf	(??___fldiv+2)^0,c
  4735   011276  0E7F               	movlw	127
  4736   011278  142F               	andwf	(___fldiv@grs+3)^0,w,c
  4737   01127A  6E24               	movwf	(??___fldiv+3)^0,c
  4738   01127C  5021               	movf	??___fldiv^0,w,c
  4739   01127E  1022               	iorwf	(??___fldiv+1)^0,w,c
  4740   011280  1023               	iorwf	(??___fldiv+2)^0,w,c
  4741   011282  1024               	iorwf	(??___fldiv+3)^0,w,c
  4742   011284  B4D8               	btfsc	status,2,c
  4743   011286  EF47  F089         	goto	u3101
  4744   01128A  EF49  F089         	goto	u3100
  4745   01128E                     u3101:
  4746   01128E  EF4D  F089         	goto	l1141
  4747   011292                     u3100:
  4748   011292                     l3577:
  4749   011292  0E01               	movlw	1
  4750   011294  6E31               	movwf	___fldiv@aexp^0,c
  4751   011296  EF56  F089         	goto	l1140
  4752   01129A                     l1141:
  4753   01129A  A019               	btfss	___fldiv@b^0,0,c
  4754   01129C  EF52  F089         	goto	u3111
  4755   0112A0  EF54  F089         	goto	u3110
  4756   0112A4                     u3111:
  4757   0112A4  EF56  F089         	goto	l1140
  4758   0112A8                     u3110:
  4759   0112A8  EF49  F089         	goto	l3577
  4760   0112AC                     l1140:
  4761   0112AC  5031               	movf	___fldiv@aexp^0,w,c
  4762   0112AE  B4D8               	btfsc	status,2,c
  4763   0112B0  EF5C  F089         	goto	u3121
  4764   0112B4  EF5E  F089         	goto	u3120
  4765   0112B8                     u3121:
  4766   0112B8  EF82  F089         	goto	l3589
  4767   0112BC                     u3120:
  4768   0112BC  0E01               	movlw	1
  4769   0112BE  2619               	addwf	___fldiv@b^0,f,c
  4770   0112C0  0E00               	movlw	0
  4771   0112C2  221A               	addwfc	(___fldiv@b+1)^0,f,c
  4772   0112C4  221B               	addwfc	(___fldiv@b+2)^0,f,c
  4773   0112C6  221C               	addwfc	(___fldiv@b+3)^0,f,c
  4774   0112C8  A01C               	btfss	(___fldiv@b+3)^0,0,c
  4775   0112CA  EF69  F089         	goto	u3131
  4776   0112CE  EF6B  F089         	goto	u3130
  4777   0112D2                     u3131:
  4778   0112D2  EF82  F089         	goto	l3589
  4779   0112D6                     u3130:
  4780   0112D6  C019  F021         	movff	___fldiv@b,??___fldiv
  4781   0112DA  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  4782   0112DE  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  4783   0112E2  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  4784   0112E6  3424               	rlcf	(??___fldiv+3)^0,w,c
  4785   0112E8  3224               	rrcf	(??___fldiv+3)^0,f,c
  4786   0112EA  3223               	rrcf	(??___fldiv+2)^0,f,c
  4787   0112EC  3222               	rrcf	(??___fldiv+1)^0,f,c
  4788   0112EE  3221               	rrcf	??___fldiv^0,f,c
  4789   0112F0  C021  F019         	movff	??___fldiv,___fldiv@b
  4790   0112F4  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  4791   0112F8  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  4792   0112FC  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  4793   011300  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  4794   011302  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  4795   011304                     l3589:
  4796   011304  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4797   011306  EF8D  F089         	goto	u3141
  4798   01130A  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4799   01130C  E108               	bnz	u3140
  4800   01130E  282A               	incf	___fldiv@new_exp^0,w,c
  4801   011310  A0D8               	btfss	status,0,c
  4802   011312  EF8D  F089         	goto	u3141
  4803   011316  EF8F  F089         	goto	u3140
  4804   01131A                     u3141:
  4805   01131A  EF9A  F089         	goto	l3593
  4806   01131E                     u3140:
  4807   01131E  0E00               	movlw	0
  4808   011320  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4809   011322  682A               	setf	___fldiv@new_exp^0,c
  4810   011324  0E00               	movlw	0
  4811   011326  6E19               	movwf	___fldiv@b^0,c
  4812   011328  0E00               	movlw	0
  4813   01132A  6E1A               	movwf	(___fldiv@b+1)^0,c
  4814   01132C  0E00               	movlw	0
  4815   01132E  6E1B               	movwf	(___fldiv@b+2)^0,c
  4816   011330  0E00               	movlw	0
  4817   011332  6E1C               	movwf	(___fldiv@b+3)^0,c
  4818   011334                     l3593:
  4819   011334  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4820   011336  EFA7  F089         	goto	u3150
  4821   01133A  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  4822   01133C  E106               	bnz	u3151
  4823   01133E  042A               	decf	___fldiv@new_exp^0,w,c
  4824   011340  B0D8               	btfsc	status,0,c
  4825   011342  EFA5  F089         	goto	u3151
  4826   011346  EFA7  F089         	goto	u3150
  4827   01134A                     u3151:
  4828   01134A  EFB5  F089         	goto	l3597
  4829   01134E                     u3150:
  4830   01134E  0E00               	movlw	0
  4831   011350  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  4832   011352  0E00               	movlw	0
  4833   011354  6E2A               	movwf	___fldiv@new_exp^0,c
  4834   011356  0E00               	movlw	0
  4835   011358  6E19               	movwf	___fldiv@b^0,c
  4836   01135A  0E00               	movlw	0
  4837   01135C  6E1A               	movwf	(___fldiv@b+1)^0,c
  4838   01135E  0E00               	movlw	0
  4839   011360  6E1B               	movwf	(___fldiv@b+2)^0,c
  4840   011362  0E00               	movlw	0
  4841   011364  6E1C               	movwf	(___fldiv@b+3)^0,c
  4842   011366  0E00               	movlw	0
  4843   011368  6E29               	movwf	___fldiv@sign^0,c
  4844   01136A                     l3597:
  4845   01136A  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  4846   01136E  A030               	btfss	___fldiv@bexp^0,0,c
  4847   011370  EFBC  F089         	goto	u3161
  4848   011374  EFBE  F089         	goto	u3160
  4849   011378                     u3161:
  4850   011378  EFC1  F089         	goto	l3603
  4851   01137C                     u3160:
  4852   01137C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  4853   01137E  EFC2  F089         	goto	l3605
  4854   011382                     l3603:
  4855   011382  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  4856   011384                     l3605:
  4857   011384  90D8               	bcf	status,0,c
  4858   011386  3030               	rrcf	___fldiv@bexp^0,w,c
  4859   011388  6E1C               	movwf	(___fldiv@b+3)^0,c
  4860   01138A  EF78  F088         	goto	l3519
  4861   01138E                     l1127:
  4862   01138E  0012               	return		;funcret
  4863   011390                     __end_of___fldiv:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function _initUSART4 *****************
  4867 ;; Defined at:
  4868 ;;		line 14 in file "serial.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text13
  4896   012796                     __ptext13:
  4897                           	callstack 0
  4898   012796                     _initUSART4:
  4899                           	callstack 30
  4900   012796                     
  4901                           ;serial.c: 15:     RC0PPS = 0x12;
  4902   012796  0E12               	movlw	18
  4903   012798  010E               	movlb	14	; () banked
  4904   01279A  6F62               	movwf	98,b	;volatile
  4905                           
  4906                           ;serial.c: 16:     RX4PPS = 0x11;
  4907   01279C  0E11               	movlw	17
  4908   01279E  6F15               	movwf	21,b	;volatile
  4909   0127A0                     
  4910                           ; BSR set to: 14
  4911                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  4912   0127A0  97E9               	bcf	233,3,b	;volatile
  4913   0127A2                     
  4914                           ; BSR set to: 14
  4915                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  4916   0127A2  95E8               	bcf	232,2,b	;volatile
  4917                           
  4918                           ;serial.c: 19:     SP4BRGL = 51;
  4919   0127A4  0E33               	movlw	51
  4920   0127A6  6FE5               	movwf	229,b	;volatile
  4921                           
  4922                           ;serial.c: 20:     SP4BRGH = 0;
  4923   0127A8  0E00               	movlw	0
  4924   0127AA  6FE6               	movwf	230,b	;volatile
  4925   0127AC                     
  4926                           ; BSR set to: 14
  4927                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  4928   0127AC  89E7               	bsf	231,4,b	;volatile
  4929   0127AE                     
  4930                           ; BSR set to: 14
  4931                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  4932   0127AE  8BE8               	bsf	232,5,b	;volatile
  4933   0127B0                     
  4934                           ; BSR set to: 14
  4935                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  4936   0127B0  8FE7               	bsf	231,7,b	;volatile
  4937   0127B2                     
  4938                           ; BSR set to: 14
  4939   0127B2  0012               	return		;funcret
  4940   0127B4                     __end_of_initUSART4:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _initDCmotorsPWM *****************
  4944 ;; Defined at:
  4945 ;;		line 5 in file "dc_motor.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      void 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;Total ram usage:        2 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_main
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text14
  4973   01226A                     __ptext14:
  4974                           	callstack 0
  4975   01226A                     _initDCmotorsPWM:
  4976                           	callstack 30
  4977   01226A                     
  4978                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  4979   01226A  9485               	bcf	133,2,c	;volatile
  4980                           
  4981                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  4982   01226C  9E83               	bcf	131,7,c	;volatile
  4983                           
  4984                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  4985   01226E  9885               	bcf	133,4,c	;volatile
  4986                           
  4987                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  4988   012270  9C87               	bcf	135,6,c	;volatile
  4989                           
  4990                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  4991   012272  947D               	bcf	125,2,c	;volatile
  4992                           
  4993                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  4994   012274  9E7B               	bcf	123,7,c	;volatile
  4995                           
  4996                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  4997   012276  987D               	bcf	125,4,c	;volatile
  4998                           
  4999                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  5000   012278  9C7F               	bcf	127,6,c	;volatile
  5001   01227A                     
  5002                           ;dc_motor.c: 18:     RE2PPS=0x05;
  5003   01227A  0E05               	movlw	5
  5004   01227C  010E               	movlb	14	; () banked
  5005   01227E  6F74               	movwf	116,b	;volatile
  5006                           
  5007                           ;dc_motor.c: 19:     RE4PPS=0x06;
  5008   012280  0E06               	movlw	6
  5009   012282  6F76               	movwf	118,b	;volatile
  5010                           
  5011                           ;dc_motor.c: 20:     RC7PPS=0x07;
  5012   012284  0E07               	movlw	7
  5013   012286  6F69               	movwf	105,b	;volatile
  5014                           
  5015                           ;dc_motor.c: 21:     RG6PPS=0x08;
  5016   012288  0E08               	movlw	8
  5017   01228A  6F88               	movwf	136,b	;volatile
  5018                           
  5019                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  5020   01228C  50BD               	movf	189,w,c	;volatile
  5021   01228E  0B8F               	andlw	-113
  5022   012290  0940               	iorlw	64
  5023   012292  6EBD               	movwf	189,c	;volatile
  5024                           
  5025                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  5026   012294  0EE0               	movlw	-32
  5027   012296  16BE               	andwf	190,f,c	;volatile
  5028                           
  5029                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  5030   012298  50BF               	movf	191,w,c	;volatile
  5031   01229A  0BF0               	andlw	-16
  5032   01229C  0901               	iorlw	1
  5033   01229E  6EBF               	movwf	191,c	;volatile
  5034   0122A0                     
  5035                           ; BSR set to: 14
  5036                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  5037   0122A0  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5038   0122A4                     
  5039                           ; BSR set to: 14
  5040                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  5041   0122A4  8EBD               	bsf	189,7,c	;volatile
  5042                           
  5043                           ;dc_motor.c: 35:     CCPR1H=0;
  5044   0122A6  0E00               	movlw	0
  5045   0122A8  6EAA               	movwf	170,c	;volatile
  5046                           
  5047                           ;dc_motor.c: 36:     CCPR2H=0;
  5048   0122AA  0E00               	movlw	0
  5049   0122AC  6EA6               	movwf	166,c	;volatile
  5050                           
  5051                           ;dc_motor.c: 37:     CCPR3H=0;
  5052   0122AE  0E00               	movlw	0
  5053   0122B0  010F               	movlb	15	; () banked
  5054   0122B2  6F25               	movwf	37,b	;volatile
  5055                           
  5056                           ;dc_motor.c: 38:     CCPR4H=0;
  5057   0122B4  0E00               	movlw	0
  5058   0122B6  6F21               	movwf	33,b	;volatile
  5059                           
  5060                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  5061   0122B8  0EFC               	movlw	-4
  5062   0122BA  16AD               	andwf	173,f,c	;volatile
  5063                           
  5064                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  5065   0122BC  0EF3               	movlw	-13
  5066   0122BE  16AD               	andwf	173,f,c	;volatile
  5067                           
  5068                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  5069   0122C0  0ECF               	movlw	-49
  5070   0122C2  16AD               	andwf	173,f,c	;volatile
  5071                           
  5072                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  5073   0122C4  0E3F               	movlw	-193
  5074   0122C6  16AD               	andwf	173,f,c	;volatile
  5075   0122C8                     
  5076                           ; BSR set to: 15
  5077                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  5078   0122C8  88AB               	bsf	171,4,c	;volatile
  5079                           
  5080                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  5081   0122CA  50AB               	movf	171,w,c	;volatile
  5082   0122CC  0BF0               	andlw	-16
  5083   0122CE  090C               	iorlw	12
  5084   0122D0  6EAB               	movwf	171,c	;volatile
  5085   0122D2                     
  5086                           ; BSR set to: 15
  5087                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  5088   0122D2  8EAB               	bsf	171,7,c	;volatile
  5089   0122D4                     
  5090                           ; BSR set to: 15
  5091                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  5092   0122D4  88A7               	bsf	167,4,c	;volatile
  5093                           
  5094                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  5095   0122D6  50A7               	movf	167,w,c	;volatile
  5096   0122D8  0BF0               	andlw	-16
  5097   0122DA  090C               	iorlw	12
  5098   0122DC  6EA7               	movwf	167,c	;volatile
  5099   0122DE                     
  5100                           ; BSR set to: 15
  5101                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  5102   0122DE  8EA7               	bsf	167,7,c	;volatile
  5103   0122E0                     
  5104                           ; BSR set to: 15
  5105                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  5106   0122E0  8926               	bsf	38,4,b	;volatile
  5107                           
  5108                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  5109   0122E2  5126               	movf	38,w,b	;volatile
  5110   0122E4  0BF0               	andlw	-16
  5111   0122E6  090C               	iorlw	12
  5112   0122E8  6F26               	movwf	38,b	;volatile
  5113   0122EA                     
  5114                           ; BSR set to: 15
  5115                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  5116   0122EA  8F26               	bsf	38,7,b	;volatile
  5117   0122EC                     
  5118                           ; BSR set to: 15
  5119                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  5120   0122EC  8922               	bsf	34,4,b	;volatile
  5121                           
  5122                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  5123   0122EE  5122               	movf	34,w,b	;volatile
  5124   0122F0  0BF0               	andlw	-16
  5125   0122F2  090C               	iorlw	12
  5126   0122F4  6F22               	movwf	34,b	;volatile
  5127   0122F6                     
  5128                           ; BSR set to: 15
  5129                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  5130   0122F6  8F22               	bsf	34,7,b	;volatile
  5131   0122F8                     
  5132                           ; BSR set to: 15
  5133   0122F8  0012               	return		;funcret
  5134   0122FA                     __end_of_initDCmotorsPWM:
  5135                           	callstack 0
  5136                           
  5137 ;; *************** function _color_click_init *****************
  5138 ;; Defined at:
  5139 ;;		line 8 in file "color.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;		None
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;		None
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  1    wreg      void 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0, cstack
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;Total ram usage:        1 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 3
  5160 ;; This function calls:
  5161 ;;		_I2C_2_Master_Init
  5162 ;;		_color_writetoaddr
  5163 ;; This function is called by:
  5164 ;;		_main
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text15
  5169   012640                     __ptext15:
  5170                           	callstack 0
  5171   012640                     _color_click_init:
  5172                           	callstack 27
  5173   012640                     
  5174                           ;color.c: 11:     I2C_2_Master_Init();
  5175   012640  EC6D  F093         	call	_I2C_2_Master_Init	;wreg free
  5176   012644                     
  5177                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  5178   012644  0E01               	movlw	1
  5179   012646  6E03               	movwf	color_writetoaddr@value^0,c
  5180   012648  0E00               	movlw	0
  5181   01264A  ECBB  F093         	call	_color_writetoaddr
  5182   01264E                     
  5183                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5184   01264E  0E3F               	movlw	63
  5185   012650  6E05               	movwf	??_color_click_init^0,c
  5186   012652  0E55               	movlw	85
  5187   012654                     u5007:
  5188   012654  2EE8               	decfsz	wreg,f,c
  5189   012656  D7FE               	bra	u5007
  5190   012658  2E05               	decfsz	??_color_click_init^0,f,c
  5191   01265A  D7FC               	bra	u5007
  5192   01265C  0000               	nop	
  5193   01265E                     
  5194                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  5195   01265E  0E03               	movlw	3
  5196   012660  6E03               	movwf	color_writetoaddr@value^0,c
  5197   012662  0E00               	movlw	0
  5198   012664  ECBB  F093         	call	_color_writetoaddr
  5199   012668                     
  5200                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  5201   012668  0ED5               	movlw	213
  5202   01266A  6E03               	movwf	color_writetoaddr@value^0,c
  5203   01266C  0E01               	movlw	1
  5204   01266E  ECBB  F093         	call	_color_writetoaddr
  5205   012672  0012               	return		;funcret
  5206   012674                     __end_of_color_click_init:
  5207                           	callstack 0
  5208                           
  5209 ;; *************** function _color_writetoaddr *****************
  5210 ;; Defined at:
  5211 ;;		line 24 in file "color.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  address         1    wreg     unsigned char 
  5214 ;;  value           1    2[COMRAM] unsigned char 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  address         1    3[COMRAM] unsigned char 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5226 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;Total ram usage:        2 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 2
  5233 ;; This function calls:
  5234 ;;		_I2C_2_Master_Start
  5235 ;;		_I2C_2_Master_Stop
  5236 ;;		_I2C_2_Master_Write
  5237 ;; This function is called by:
  5238 ;;		_color_click_init
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text16
  5243   012776                     __ptext16:
  5244                           	callstack 0
  5245   012776                     _color_writetoaddr:
  5246                           	callstack 27
  5247                           
  5248                           ;incstack = 0
  5249                           ;color_writetoaddr@address stored from wreg
  5250   012776  6E04               	movwf	color_writetoaddr@address^0,c
  5251   012778                     
  5252                           ;color.c: 25:     I2C_2_Master_Start();
  5253   012778  ECFE  F093         	call	_I2C_2_Master_Start	;wreg free
  5254                           
  5255                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  5256   01277C  0E52               	movlw	82
  5257   01277E  ECF3  F093         	call	_I2C_2_Master_Write
  5258                           
  5259                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  5260   012782  5004               	movf	color_writetoaddr@address^0,w,c
  5261   012784  0980               	iorlw	128
  5262   012786  ECF3  F093         	call	_I2C_2_Master_Write
  5263                           
  5264                           ;color.c: 28:     I2C_2_Master_Write(value);
  5265   01278A  5003               	movf	color_writetoaddr@value^0,w,c
  5266   01278C  ECF3  F093         	call	_I2C_2_Master_Write
  5267                           
  5268                           ;color.c: 29:     I2C_2_Master_Stop();
  5269   012790  ECF9  F093         	call	_I2C_2_Master_Stop	;wreg free
  5270   012794  0012               	return		;funcret
  5271   012796                     __end_of_color_writetoaddr:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function _I2C_2_Master_Init *****************
  5275 ;; Defined at:
  5276 ;;		line 4 in file "i2c.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used: 1
  5296 ;; This function calls:
  5297 ;;		Nothing
  5298 ;; This function is called by:
  5299 ;;		_color_click_init
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text17
  5304   0126DA                     __ptext17:
  5305                           	callstack 0
  5306   0126DA                     _I2C_2_Master_Init:
  5307                           	callstack 29
  5308   0126DA                     
  5309                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5310   0126DA  010E               	movlb	14	; () banked
  5311   0126DC  51D9               	movf	217,w,b	;volatile
  5312   0126DE  0BF0               	andlw	-16
  5313   0126E0  0908               	iorlw	8
  5314   0126E2  6FD9               	movwf	217,b	;volatile
  5315   0126E4                     
  5316                           ; BSR set to: 14
  5317                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5318   0126E4  8BD9               	bsf	217,5,b	;volatile
  5319                           
  5320                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5321   0126E6  0E9F               	movlw	159
  5322   0126E8  6FD6               	movwf	214,b	;volatile
  5323   0126EA                     
  5324                           ; BSR set to: 14
  5325                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5326   0126EA  8A84               	bsf	132,5,c	;volatile
  5327   0126EC                     
  5328                           ; BSR set to: 14
  5329                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5330   0126EC  8C84               	bsf	132,6,c	;volatile
  5331   0126EE                     
  5332                           ; BSR set to: 14
  5333                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5334   0126EE  9BA7               	bcf	167,5,b	;volatile
  5335   0126F0                     
  5336                           ; BSR set to: 14
  5337                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5338   0126F0  9DA7               	bcf	167,6,b	;volatile
  5339                           
  5340                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5341   0126F2  0E1D               	movlw	29
  5342   0126F4  6F1D               	movwf	29,b	;volatile
  5343                           
  5344                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5345   0126F6  0E1E               	movlw	30
  5346   0126F8  6F1C               	movwf	28,b	;volatile
  5347                           
  5348                           ;i2c.c: 18:   RD5PPS=0x1C;
  5349   0126FA  0E1C               	movlw	28
  5350   0126FC  6F6F               	movwf	111,b	;volatile
  5351                           
  5352                           ;i2c.c: 19:   RD6PPS=0x1B;
  5353   0126FE  0E1B               	movlw	27
  5354   012700  6F70               	movwf	112,b	;volatile
  5355   012702                     
  5356                           ; BSR set to: 14
  5357   012702  0012               	return		;funcret
  5358   012704                     __end_of_I2C_2_Master_Init:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function _calibration_routine *****************
  5362 ;; Defined at:
  5363 ;;		line 229 in file "color.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  cCal            2   71[COMRAM] PTR struct colors
  5366 ;;		 -> colorCalibration(8), 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  cal_state      20    0[BANK0 ] unsigned char [20]
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:       24 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 8
  5385 ;; This function calls:
  5386 ;;		_color_read_Blue
  5387 ;;		_color_read_Clear
  5388 ;;		_color_read_Green
  5389 ;;		_color_read_Red
  5390 ;;		_sendStringSerial4
  5391 ;;		_sprintf
  5392 ;; This function is called by:
  5393 ;;		_main
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text18
  5398   011390                     __ptext18:
  5399                           	callstack 0
  5400   011390                     _calibration_routine:
  5401                           	callstack 22
  5402   011390                     
  5403                           ;color.c: 229: void calibration_routine(colors *cCal);color.c: 230: {;color.c: 232:     
      +                          LATGbits.LATG0 = 0;
  5404   011390  907F               	bcf	127,0,c	;volatile
  5405                           
  5406                           ;color.c: 233:     LATEbits.LATE7 = 0;
  5407   011392  9E7D               	bcf	125,7,c	;volatile
  5408                           
  5409                           ;color.c: 234:     LATAbits.LATA3 = 0;
  5410   011394  9679               	bcf	121,3,c	;volatile
  5411   011396                     
  5412                           ;color.c: 236:     char cal_state[20];;color.c: 240:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  5413   011396  0E60               	movlw	low calibration_routine@cal_state
  5414   011398  6E34               	movwf	sprintf@s^0,c
  5415   01139A  0E50               	movlw	low STR_5
  5416   01139C  6E35               	movwf	sprintf@fmt^0,c
  5417   01139E  0EFF               	movlw	high STR_5
  5418   0113A0  6E36               	movwf	(sprintf@fmt+1)^0,c
  5419   0113A2  0EFC               	movlw	low STR_6
  5420   0113A4  6E37               	movwf	(?_sprintf+3)^0,c
  5421   0113A6  0EFF               	movlw	high STR_6
  5422   0113A8  6E38               	movwf	(?_sprintf+4)^0,c
  5423   0113AA  EC04  F093         	call	_sprintf	;wreg free
  5424   0113AE                     
  5425                           ;color.c: 241:     sendStringSerial4(cal_state);
  5426   0113AE  0E60               	movlw	low calibration_routine@cal_state
  5427   0113B0  6E02               	movwf	sendStringSerial4@string^0,c
  5428   0113B2  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  5429   0113B4  EC7D  F091         	call	_sendStringSerial4	;wreg free
  5430   0113B8                     l121:
  5431                           
  5432                           ;color.c: 244:     while(PORTFbits.RF2 == 1){
  5433   0113B8  B48E               	btfsc	142,2,c	;volatile
  5434   0113BA  EFE1  F089         	goto	u4861
  5435   0113BE  EFE3  F089         	goto	u4860
  5436   0113C2                     u4861:
  5437   0113C2  EFDC  F089         	goto	l121
  5438   0113C6                     u4860:
  5439   0113C6                     
  5440                           ;color.c: 248:     LATGbits.LATG0 = 1;
  5441   0113C6  807F               	bsf	127,0,c	;volatile
  5442   0113C8                     
  5443                           ;color.c: 249:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5444   0113C8  0E29               	movlw	41
  5445   0113CA  6E4B               	movwf	(??_calibration_routine+1)^0,c
  5446   0113CC  0E96               	movlw	150
  5447   0113CE  6E4A               	movwf	??_calibration_routine^0,c
  5448   0113D0  0E7F               	movlw	127
  5449   0113D2                     u5017:
  5450   0113D2  2EE8               	decfsz	wreg,f,c
  5451   0113D4  D7FE               	bra	u5017
  5452   0113D6  2E4A               	decfsz	??_calibration_routine^0,f,c
  5453   0113D8  D7FC               	bra	u5017
  5454   0113DA  2E4B               	decfsz	(??_calibration_routine+1)^0,f,c
  5455   0113DC  D7FA               	bra	u5017
  5456   0113DE  0000               	nop	
  5457   0113E0                     
  5458                           ;color.c: 250:     (cCal->red) = color_read_Red();
  5459   0113E0  ECDD  F091         	call	_color_read_Red	;wreg free
  5460   0113E4  C048  FFD9         	movff	calibration_routine@cCal,fsr2l
  5461   0113E8  C049  FFDA         	movff	calibration_routine@cCal+1,fsr2h
  5462   0113EC  C005  FFDE         	movff	?_color_read_Red,postinc2
  5463   0113F0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5464   0113F4                     
  5465                           ;color.c: 251:     LATGbits.LATG0 = 0;
  5466   0113F4  907F               	bcf	127,0,c	;volatile
  5467   0113F6                     
  5468                           ;color.c: 254:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  5469   0113F6  0E60               	movlw	low calibration_routine@cal_state
  5470   0113F8  6E34               	movwf	sprintf@s^0,c
  5471   0113FA  0ECD               	movlw	low STR_7
  5472   0113FC  6E35               	movwf	sprintf@fmt^0,c
  5473   0113FE  0EFE               	movlw	high STR_7
  5474   011400  6E36               	movwf	(sprintf@fmt+1)^0,c
  5475   011402  0EFC               	movlw	low STR_6
  5476   011404  6E37               	movwf	(?_sprintf+3)^0,c
  5477   011406  0EFF               	movlw	high STR_6
  5478   011408  6E38               	movwf	(?_sprintf+4)^0,c
  5479   01140A  EC04  F093         	call	_sprintf	;wreg free
  5480   01140E                     
  5481                           ;color.c: 255:     sendStringSerial4(&cal_state);
  5482   01140E  0E60               	movlw	low calibration_routine@cal_state
  5483   011410  6E02               	movwf	sendStringSerial4@string^0,c
  5484   011412  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  5485   011414  EC7D  F091         	call	_sendStringSerial4	;wreg free
  5486   011418                     l124:
  5487                           
  5488                           ;color.c: 257:     while(PORTFbits.RF2 == 1){
  5489   011418  B48E               	btfsc	142,2,c	;volatile
  5490   01141A  EF11  F08A         	goto	u4871
  5491   01141E  EF13  F08A         	goto	u4870
  5492   011422                     u4871:
  5493   011422  EF0C  F08A         	goto	l124
  5494   011426                     u4870:
  5495   011426                     
  5496                           ;color.c: 261:     LATEbits.LATE7 = 1;
  5497   011426  8E7D               	bsf	125,7,c	;volatile
  5498   011428                     
  5499                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5500   011428  0E29               	movlw	41
  5501   01142A  6E4B               	movwf	(??_calibration_routine+1)^0,c
  5502   01142C  0E96               	movlw	150
  5503   01142E  6E4A               	movwf	??_calibration_routine^0,c
  5504   011430  0E7F               	movlw	127
  5505   011432                     u5027:
  5506   011432  2EE8               	decfsz	wreg,f,c
  5507   011434  D7FE               	bra	u5027
  5508   011436  2E4A               	decfsz	??_calibration_routine^0,f,c
  5509   011438  D7FC               	bra	u5027
  5510   01143A  2E4B               	decfsz	(??_calibration_routine+1)^0,f,c
  5511   01143C  D7FA               	bra	u5027
  5512   01143E  0000               	nop	
  5513   011440                     
  5514                           ;color.c: 263:     (cCal->green) = color_read_Green();
  5515   011440  EC05  F092         	call	_color_read_Green	;wreg free
  5516   011444  EE20 F002          	lfsr	2,2
  5517   011448  5048               	movf	calibration_routine@cCal^0,w,c
  5518   01144A  26D9               	addwf	fsr2l,f,c
  5519   01144C  5049               	movf	(calibration_routine@cCal+1)^0,w,c
  5520   01144E  22DA               	addwfc	fsr2h,f,c
  5521   011450  C005  FFDE         	movff	?_color_read_Green,postinc2
  5522   011454  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5523   011458                     
  5524                           ;color.c: 264:     LATEbits.LATE7 = 0;
  5525   011458  9E7D               	bcf	125,7,c	;volatile
  5526   01145A                     
  5527                           ;color.c: 267:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  5528   01145A  0E60               	movlw	low calibration_routine@cal_state
  5529   01145C  6E34               	movwf	sprintf@s^0,c
  5530   01145E  0EEA               	movlw	low STR_9
  5531   011460  6E35               	movwf	sprintf@fmt^0,c
  5532   011462  0EFE               	movlw	high STR_9
  5533   011464  6E36               	movwf	(sprintf@fmt+1)^0,c
  5534   011466  0EFC               	movlw	low STR_6
  5535   011468  6E37               	movwf	(?_sprintf+3)^0,c
  5536   01146A  0EFF               	movlw	high STR_6
  5537   01146C  6E38               	movwf	(?_sprintf+4)^0,c
  5538   01146E  EC04  F093         	call	_sprintf	;wreg free
  5539   011472                     
  5540                           ;color.c: 268:     sendStringSerial4(&cal_state);
  5541   011472  0E60               	movlw	low calibration_routine@cal_state
  5542   011474  6E02               	movwf	sendStringSerial4@string^0,c
  5543   011476  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  5544   011478  EC7D  F091         	call	_sendStringSerial4	;wreg free
  5545   01147C                     l127:
  5546                           
  5547                           ;color.c: 270:     while(PORTFbits.RF2 == 1){
  5548   01147C  B48E               	btfsc	142,2,c	;volatile
  5549   01147E  EF43  F08A         	goto	u4881
  5550   011482  EF45  F08A         	goto	u4880
  5551   011486                     u4881:
  5552   011486  EF3E  F08A         	goto	l127
  5553   01148A                     u4880:
  5554   01148A                     
  5555                           ;color.c: 274:     LATAbits.LATA3 = 1;
  5556   01148A  8679               	bsf	121,3,c	;volatile
  5557   01148C                     
  5558                           ;color.c: 275:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5559   01148C  0E29               	movlw	41
  5560   01148E  6E4B               	movwf	(??_calibration_routine+1)^0,c
  5561   011490  0E96               	movlw	150
  5562   011492  6E4A               	movwf	??_calibration_routine^0,c
  5563   011494  0E7F               	movlw	127
  5564   011496                     u5037:
  5565   011496  2EE8               	decfsz	wreg,f,c
  5566   011498  D7FE               	bra	u5037
  5567   01149A  2E4A               	decfsz	??_calibration_routine^0,f,c
  5568   01149C  D7FC               	bra	u5037
  5569   01149E  2E4B               	decfsz	(??_calibration_routine+1)^0,f,c
  5570   0114A0  D7FA               	bra	u5037
  5571   0114A2  0000               	nop	
  5572   0114A4                     
  5573                           ;color.c: 276:     (cCal->blue) = color_read_Blue();
  5574   0114A4  EC55  F092         	call	_color_read_Blue	;wreg free
  5575   0114A8  EE20 F004          	lfsr	2,4
  5576   0114AC  5048               	movf	calibration_routine@cCal^0,w,c
  5577   0114AE  26D9               	addwf	fsr2l,f,c
  5578   0114B0  5049               	movf	(calibration_routine@cCal+1)^0,w,c
  5579   0114B2  22DA               	addwfc	fsr2h,f,c
  5580   0114B4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5581   0114B8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5582   0114BC                     
  5583                           ;color.c: 277:     LATAbits.LATA3 = 0;
  5584   0114BC  9679               	bcf	121,3,c	;volatile
  5585   0114BE                     
  5586                           ;color.c: 280:     sprintf(cal_state,"Calibration state = ambient light", ".");
  5587   0114BE  0E60               	movlw	low calibration_routine@cal_state
  5588   0114C0  6E34               	movwf	sprintf@s^0,c
  5589   0114C2  0EAB               	movlw	low STR_11
  5590   0114C4  6E35               	movwf	sprintf@fmt^0,c
  5591   0114C6  0EFE               	movlw	high STR_11
  5592   0114C8  6E36               	movwf	(sprintf@fmt+1)^0,c
  5593   0114CA  0EFC               	movlw	low STR_6
  5594   0114CC  6E37               	movwf	(?_sprintf+3)^0,c
  5595   0114CE  0EFF               	movlw	high STR_6
  5596   0114D0  6E38               	movwf	(?_sprintf+4)^0,c
  5597   0114D2  EC04  F093         	call	_sprintf	;wreg free
  5598   0114D6                     
  5599                           ;color.c: 281:     sendStringSerial4(&cal_state);
  5600   0114D6  0E60               	movlw	low calibration_routine@cal_state
  5601   0114D8  6E02               	movwf	sendStringSerial4@string^0,c
  5602   0114DA  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  5603   0114DC  EC7D  F091         	call	_sendStringSerial4	;wreg free
  5604   0114E0                     l130:
  5605                           
  5606                           ;color.c: 283:     while(PORTFbits.RF2 == 1){
  5607   0114E0  B48E               	btfsc	142,2,c	;volatile
  5608   0114E2  EF75  F08A         	goto	u4891
  5609   0114E6  EF77  F08A         	goto	u4890
  5610   0114EA                     u4891:
  5611   0114EA  EF70  F08A         	goto	l130
  5612   0114EE                     u4890:
  5613   0114EE                     
  5614                           ;color.c: 286:     LATGbits.LATG0 = 1;
  5615   0114EE  807F               	bsf	127,0,c	;volatile
  5616                           
  5617                           ;color.c: 287:     LATEbits.LATE7 = 1;
  5618   0114F0  8E7D               	bsf	125,7,c	;volatile
  5619                           
  5620                           ;color.c: 288:     LATAbits.LATA3 = 1;
  5621   0114F2  8679               	bsf	121,3,c	;volatile
  5622   0114F4                     
  5623                           ;color.c: 289:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5624   0114F4  0E29               	movlw	41
  5625   0114F6  6E4B               	movwf	(??_calibration_routine+1)^0,c
  5626   0114F8  0E96               	movlw	150
  5627   0114FA  6E4A               	movwf	??_calibration_routine^0,c
  5628   0114FC  0E7F               	movlw	127
  5629   0114FE                     u5047:
  5630   0114FE  2EE8               	decfsz	wreg,f,c
  5631   011500  D7FE               	bra	u5047
  5632   011502  2E4A               	decfsz	??_calibration_routine^0,f,c
  5633   011504  D7FC               	bra	u5047
  5634   011506  2E4B               	decfsz	(??_calibration_routine+1)^0,f,c
  5635   011508  D7FA               	bra	u5047
  5636   01150A  0000               	nop	
  5637   01150C                     
  5638                           ;color.c: 290:     (cCal->clear) = color_read_Clear();
  5639   01150C  EC2D  F092         	call	_color_read_Clear	;wreg free
  5640   011510  EE20 F006          	lfsr	2,6
  5641   011514  5048               	movf	calibration_routine@cCal^0,w,c
  5642   011516  26D9               	addwf	fsr2l,f,c
  5643   011518  5049               	movf	(calibration_routine@cCal+1)^0,w,c
  5644   01151A  22DA               	addwfc	fsr2h,f,c
  5645   01151C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5646   011520  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5647   011524                     
  5648                           ;color.c: 291:     LATGbits.LATG0 = 0;
  5649   011524  907F               	bcf	127,0,c	;volatile
  5650   011526                     
  5651                           ;color.c: 292:     LATEbits.LATE7 = 0;
  5652   011526  9E7D               	bcf	125,7,c	;volatile
  5653   011528                     
  5654                           ;color.c: 293:     LATAbits.LATA3 = 0;
  5655   011528  9679               	bcf	121,3,c	;volatile
  5656   01152A                     
  5657                           ;color.c: 296:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  5658   01152A  0E60               	movlw	low calibration_routine@cal_state
  5659   01152C  6E34               	movwf	sprintf@s^0,c
  5660   01152E  0E1F               	movlw	low STR_13
  5661   011530  6E35               	movwf	sprintf@fmt^0,c
  5662   011532  0EFF               	movlw	high STR_13
  5663   011534  6E36               	movwf	(sprintf@fmt+1)^0,c
  5664   011536  0EFC               	movlw	low STR_6
  5665   011538  6E37               	movwf	(?_sprintf+3)^0,c
  5666   01153A  0EFF               	movlw	high STR_6
  5667   01153C  6E38               	movwf	(?_sprintf+4)^0,c
  5668   01153E  EC04  F093         	call	_sprintf	;wreg free
  5669   011542                     
  5670                           ;color.c: 297:     sendStringSerial4(&cal_state);
  5671   011542  0E60               	movlw	low calibration_routine@cal_state
  5672   011544  6E02               	movwf	sendStringSerial4@string^0,c
  5673   011546  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  5674   011548  EC7D  F091         	call	_sendStringSerial4	;wreg free
  5675   01154C  0012               	return		;funcret
  5676   01154E                     __end_of_calibration_routine:
  5677                           	callstack 0
  5678                           
  5679 ;; *************** function _sprintf *****************
  5680 ;; Defined at:
  5681 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  s               1   51[COMRAM] PTR unsigned char 
  5684 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), test@led_state(50), 
  5685 ;;  fmt             2   52[COMRAM] PTR const unsigned char 
  5686 ;;		 -> STR_20(12), STR_19(21), STR_13(25), STR_11(34), 
  5687 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5688 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  f              12   59[COMRAM] struct _IO_FILE
  5691 ;;  ret             2    0        int 
  5692 ;;  ap              1   58[COMRAM] PTR void [1]
  5693 ;;		 -> ?_sprintf(2), 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  2   51[COMRAM] int 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5703 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;Total ram usage:       20 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 7
  5710 ;; This function calls:
  5711 ;;		_vfprintf
  5712 ;; This function is called by:
  5713 ;;		_test
  5714 ;;		_calibration_routine
  5715 ;;		_send2USART
  5716 ;;		_ADC2String
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text19
  5721   012608                     __ptext19:
  5722                           	callstack 0
  5723   012608                     _sprintf:
  5724                           	callstack 22
  5725   012608  0E37               	movlw	low (?_sprintf+3)
  5726   01260A  6E3B               	movwf	sprintf@ap^0,c
  5727   01260C  C034  F03C         	movff	sprintf@s,sprintf@f
  5728   012610  0E00               	movlw	0
  5729   012612  6E40               	movwf	(sprintf@f+4)^0,c
  5730   012614  0E00               	movlw	0
  5731   012616  6E3F               	movwf	(sprintf@f+3)^0,c
  5732   012618  0E00               	movlw	0
  5733   01261A  6E47               	movwf	(sprintf@f+11)^0,c
  5734   01261C  0E00               	movlw	0
  5735   01261E  6E46               	movwf	(sprintf@f+10)^0,c
  5736   012620  0E3C               	movlw	low sprintf@f
  5737   012622  6E2E               	movwf	vfprintf@fp^0,c
  5738   012624  C035  F02F         	movff	sprintf@fmt,vfprintf@fmt
  5739   012628  C036  F030         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5740   01262C  0E3B               	movlw	low sprintf@ap
  5741   01262E  6E31               	movwf	vfprintf@ap^0,c
  5742   012630  ECA0  F092         	call	_vfprintf	;wreg free
  5743   012634  5034               	movf	sprintf@s^0,w,c
  5744   012636  243F               	addwf	(sprintf@f+3)^0,w,c
  5745   012638  6ED9               	movwf	fsr2l,c
  5746   01263A  6ADA               	clrf	fsr2h,c
  5747   01263C  6ADF               	clrf	indf2,c
  5748   01263E  0012               	return		;funcret
  5749   012640                     __end_of_sprintf:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function _vfprintf *****************
  5753 ;; Defined at:
  5754 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  5757 ;;		 -> sprintf@f(12), 
  5758 ;;  fmt             2   46[COMRAM] PTR const unsigned char 
  5759 ;;		 -> STR_20(12), STR_19(21), STR_13(25), STR_11(34), 
  5760 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5761 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5762 ;;  ap              1   48[COMRAM] PTR PTR void 
  5763 ;;		 -> sprintf@ap(1), 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  cfmt            2   49[COMRAM] PTR unsigned char 
  5766 ;;		 -> STR_20(12), STR_19(21), STR_13(25), STR_11(34), 
  5767 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5768 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  2   45[COMRAM] int 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;Total ram usage:        6 bytes
  5783 ;; Hardware stack levels used: 1
  5784 ;; Hardware stack levels required when called: 6
  5785 ;; This function calls:
  5786 ;;		_vfpfcnvrt
  5787 ;; This function is called by:
  5788 ;;		_sprintf
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           	psect	text20
  5793   012540                     __ptext20:
  5794                           	callstack 0
  5795   012540                     _vfprintf:
  5796                           	callstack 22
  5797   012540                     
  5798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5799   012540  C02F  F032         	movff	vfprintf@fmt,vfprintf@cfmt
  5800   012544  C030  F033         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5803   012548  EFAE  F092         	goto	l4803
  5804   01254C                     l4801:
  5805                           
  5806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5807   01254C  C02E  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  5808   012550  0E32               	movlw	low vfprintf@cfmt
  5809   012552  6E23               	movwf	vfpfcnvrt@fmt^0,c
  5810   012554  C031  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  5811   012558  EC81  F08B         	call	_vfpfcnvrt	;wreg free
  5812   01255C                     l4803:
  5813                           
  5814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5815   01255C  C032  FFF6         	movff	vfprintf@cfmt,tblptrl
  5816   012560  C033  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5817   012564                     	if	0	;tblptru may be non-zero
  5818   012564                     	endif
  5819   012564                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5820   012564  0E00               	movlw	low (__mediumconst shr (0+16))
  5821   012566  6EF8               	movwf	tblptru,c
  5822   012568                     	endif
  5823   012568  0008               	tblrd		*
  5824   01256A  50F5               	movf	tablat,w,c
  5825   01256C  0900               	iorlw	0
  5826   01256E  A4D8               	btfss	status,2,c
  5827   012570  EFBC  F092         	goto	u4541
  5828   012574  EFBE  F092         	goto	u4540
  5829   012578                     u4541:
  5830   012578  EFA6  F092         	goto	l4801
  5831   01257C                     u4540:
  5832   01257C                     
  5833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5834   01257C  0E00               	movlw	0
  5835   01257E  6E2F               	movwf	(?_vfprintf+1)^0,c
  5836   012580  0E00               	movlw	0
  5837   012582  6E2E               	movwf	?_vfprintf^0,c
  5838   012584  0012               	return		;funcret
  5839   012586                     __end_of_vfprintf:
  5840                           	callstack 0
  5841                           
  5842 ;; *************** function _vfpfcnvrt *****************
  5843 ;; Defined at:
  5844 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  5847 ;;		 -> sprintf@f(12), 
  5848 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  5849 ;;		 -> vfprintf@cfmt(2), 
  5850 ;;  ap              1   35[COMRAM] PTR PTR void 
  5851 ;;		 -> sprintf@ap(1), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  convarg         4   38[COMRAM] struct .
  5854 ;;  cp              2   43[COMRAM] PTR unsigned char 
  5855 ;;		 -> STR_20(12), STR_19(21), STR_13(25), STR_11(34), 
  5856 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  5857 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  5858 ;;  done            1   42[COMRAM] _Bool 
  5859 ;;  c               1    0        unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      void 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;Total ram usage:       12 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 5
  5876 ;; This function calls:
  5877 ;;		_dtoa
  5878 ;;		_fputc
  5879 ;;		_read_prec_or_width
  5880 ;; This function is called by:
  5881 ;;		_vfprintf
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text21
  5886   011702                     __ptext21:
  5887                           	callstack 0
  5888   011702                     _vfpfcnvrt:
  5889                           	callstack 22
  5890   011702                     
  5891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5892   011702  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5893   011704  6ED9               	movwf	fsr2l,c
  5894   011706  6ADA               	clrf	fsr2h,c
  5895   011708  CFDE FFF6          	movff	postinc2,tblptrl
  5896   01170C  CFDD FFF7          	movff	postdec2,tblptrh
  5897   011710                     	if	0	;tblptru may be non-zero
  5898   011710                     	endif
  5899   011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5900   011710  0E00               	movlw	low (__mediumconst shr (0+16))
  5901   011712  6EF8               	movwf	tblptru,c
  5902   011714                     	endif
  5903   011714  0008               	tblrd		*
  5904   011716  50F5               	movf	tablat,w,c
  5905   011718  0A25               	xorlw	37
  5906   01171A  A4D8               	btfss	status,2,c
  5907   01171C  EF92  F08B         	goto	u4461
  5908   011720  EF94  F08B         	goto	u4460
  5909   011724                     u4461:
  5910   011724  EF41  F08C         	goto	l4755
  5911   011728                     u4460:
  5912   011728                     
  5913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5914   011728  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5915   01172A  6ED9               	movwf	fsr2l,c
  5916   01172C  6ADA               	clrf	fsr2h,c
  5917   01172E  2ADE               	incf	postinc2,f,c
  5918   011730  0E00               	movlw	0
  5919   011732  22DD               	addwfc	postdec2,f,c
  5920   011734                     
  5921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5922   011734  0E00               	movlw	0
  5923   011736  0100               	movlb	0	; () banked
  5924   011738  6FED               	movwf	(_width+1)& (0+255),b
  5925   01173A  0E00               	movlw	0
  5926   01173C  6FEC               	movwf	_width& (0+255),b
  5927   01173E  C0EC  F0F0         	movff	_width,_flags
  5928   011742                     
  5929                           ; BSR set to: 0
  5930                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5931   011742  69EE               	setf	_prec& (0+255),b
  5932   011744  69EF               	setf	(_prec+1)& (0+255),b
  5933   011746                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5936   011746  0E00               	movlw	0
  5937   011748  6E2B               	movwf	vfpfcnvrt@done^0,c
  5938                           
  5939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5940   01174A  EFD0  F08B         	goto	l4729
  5941   01174E                     l4719:
  5942                           
  5943                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5944   01174E  0100               	movlb	0	; () banked
  5945   011750  83F0               	bsf	_flags& (0+255),1,b
  5946   011752                     
  5947                           ; BSR set to: 0
  5948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5949   011752  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5950   011754  6ED9               	movwf	fsr2l,c
  5951   011756  6ADA               	clrf	fsr2h,c
  5952   011758  2ADE               	incf	postinc2,f,c
  5953   01175A  0E00               	movlw	0
  5954   01175C  22DD               	addwfc	postdec2,f,c
  5955                           
  5956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5957   01175E  EFD0  F08B         	goto	l4729
  5958   011762                     l4723:
  5959                           
  5960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5961   011762  0E01               	movlw	1
  5962   011764  6E2B               	movwf	vfpfcnvrt@done^0,c
  5963                           
  5964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5965   011766  EFD0  F08B         	goto	l4729
  5966   01176A                     l4727:
  5967   01176A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  5968   01176C  6ED9               	movwf	fsr2l,c
  5969   01176E  6ADA               	clrf	fsr2h,c
  5970   011770  CFDE FFF6          	movff	postinc2,tblptrl
  5971   011774  CFDD FFF7          	movff	postdec2,tblptrh
  5972   011778                     	if	0	;tblptru may be non-zero
  5973   011778                     	endif
  5974   011778                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5975   011778  0E00               	movlw	low (__mediumconst shr (0+16))
  5976   01177A  6EF8               	movwf	tblptru,c
  5977   01177C                     	endif
  5978   01177C  0008               	tblrd		*
  5979   01177E  50F5               	movf	tablat,w,c
  5980   011780  6E25               	movwf	??_vfpfcnvrt^0,c
  5981   011782  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  5982                           
  5983                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5984                           ; Switch size 1, requested type "simple"
  5985                           ; Number of cases is 1, Range of values is 0 to 0
  5986                           ; switch strategies available:
  5987                           ; Name         Instructions Cycles
  5988                           ; simple_byte            4     3 (average)
  5989                           ;	Chosen strategy is simple_byte
  5990   011784  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  5991   011786  0A00               	xorlw	0	; case 0
  5992   011788  B4D8               	btfsc	status,2,c
  5993   01178A  EFC9  F08B         	goto	l5373
  5994   01178E  EFB1  F08B         	goto	l4723
  5995   011792                     l5373:
  5996                           
  5997                           ; Switch size 1, requested type "simple"
  5998                           ; Number of cases is 1, Range of values is 48 to 48
  5999                           ; switch strategies available:
  6000                           ; Name         Instructions Cycles
  6001                           ; simple_byte            4     3 (average)
  6002                           ;	Chosen strategy is simple_byte
  6003   011792  5025               	movf	??_vfpfcnvrt^0,w,c
  6004   011794  0A30               	xorlw	48	; case 48
  6005   011796  B4D8               	btfsc	status,2,c
  6006   011798  EFA7  F08B         	goto	l4719
  6007   01179C  EFB1  F08B         	goto	l4723
  6008   0117A0                     l4729:
  6009                           
  6010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6011   0117A0  502B               	movf	vfpfcnvrt@done^0,w,c
  6012   0117A2  B4D8               	btfsc	status,2,c
  6013   0117A4  EFD6  F08B         	goto	u4471
  6014   0117A8  EFD8  F08B         	goto	u4470
  6015   0117AC                     u4471:
  6016   0117AC  EFB5  F08B         	goto	l4727
  6017   0117B0                     u4470:
  6018   0117B0                     
  6019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6020   0117B0  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6021   0117B4  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6022   0117B8  EC33  F08F         	call	_read_prec_or_width	;wreg free
  6023   0117BC  C007  F0EC         	movff	?_read_prec_or_width,_width
  6024   0117C0  C008  F0ED         	movff	?_read_prec_or_width+1,_width+1
  6025   0117C4                     
  6026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6027   0117C4  0100               	movlb	0	; () banked
  6028   0117C6  BFED               	btfsc	(_width+1)& (0+255),7,b
  6029   0117C8  EFEA  F08B         	goto	u4480
  6030   0117CC  EFE8  F08B         	goto	u4481
  6031   0117D0                     u4481:
  6032   0117D0  EFEF  F08B         	goto	l4737
  6033   0117D4                     u4480:
  6034   0117D4                     
  6035                           ; BSR set to: 0
  6036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6037   0117D4  81F0               	bsf	_flags& (0+255),0,b
  6038                           
  6039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6040   0117D6  6DEC               	negf	_width& (0+255),b
  6041   0117D8  1FED               	comf	(_width+1)& (0+255),f,b
  6042   0117DA  B0D8               	btfsc	status,0,c
  6043   0117DC  2BED               	incf	(_width+1)& (0+255),f,b
  6044   0117DE                     l4737:
  6045                           
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6048   0117DE  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6049   0117E0  6ED9               	movwf	fsr2l,c
  6050   0117E2  6ADA               	clrf	fsr2h,c
  6051   0117E4  CFDE F02C          	movff	postinc2,vfpfcnvrt@cp
  6052   0117E8  CFDD F02D          	movff	postdec2,vfpfcnvrt@cp+1
  6053   0117EC                     
  6054                           ; BSR set to: 0
  6055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6056   0117EC  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6057   0117F0  C02D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6058   0117F4                     	if	0	;tblptru may be non-zero
  6059   0117F4                     	endif
  6060   0117F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6061   0117F4  0E00               	movlw	low (__mediumconst shr (0+16))
  6062   0117F6  6EF8               	movwf	tblptru,c
  6063   0117F8                     	endif
  6064   0117F8  0008               	tblrd		*
  6065   0117FA  50F5               	movf	tablat,w,c
  6066   0117FC  0A64               	xorlw	100
  6067   0117FE  B4D8               	btfsc	status,2,c
  6068   011800  EF04  F08C         	goto	u4491
  6069   011804  EF06  F08C         	goto	u4490
  6070   011808                     u4491:
  6071   011808  EF16  F08C         	goto	l4743
  6072   01180C                     u4490:
  6073   01180C                     
  6074                           ; BSR set to: 0
  6075   01180C  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6076   011810  C02D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6077   011814                     	if	0	;tblptru may be non-zero
  6078   011814                     	endif
  6079   011814                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6080   011814  0E00               	movlw	low (__mediumconst shr (0+16))
  6081   011816  6EF8               	movwf	tblptru,c
  6082   011818                     	endif
  6083   011818  0008               	tblrd		*
  6084   01181A  50F5               	movf	tablat,w,c
  6085   01181C  0A69               	xorlw	105
  6086   01181E  A4D8               	btfss	status,2,c
  6087   011820  EF14  F08C         	goto	u4501
  6088   011824  EF16  F08C         	goto	u4500
  6089   011828                     u4501:
  6090   011828  EF39  F08C         	goto	l4751
  6091   01182C                     u4500:
  6092   01182C                     l4743:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6096   01182C  5024               	movf	vfpfcnvrt@ap^0,w,c
  6097   01182E  6ED9               	movwf	fsr2l,c
  6098   011830  6ADA               	clrf	fsr2h,c
  6099   011832  0E02               	movlw	2
  6100   011834  26DF               	addwf	indf2,f,c
  6101   011836  5CDF               	subwf	indf2,w,c
  6102   011838  6ED9               	movwf	fsr2l,c
  6103   01183A  6ADA               	clrf	fsr2h,c
  6104   01183C  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  6105   011840  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  6106   011844                     
  6107                           ; BSR set to: 0
  6108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6109   011844  0E01               	movlw	1
  6110   011846  242C               	addwf	vfpfcnvrt@cp^0,w,c
  6111   011848  6E25               	movwf	??_vfpfcnvrt^0,c
  6112   01184A  0E00               	movlw	0
  6113   01184C  202D               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  6114   01184E  6E26               	movwf	(??_vfpfcnvrt+1)^0,c
  6115   011850  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6116   011852  6ED9               	movwf	fsr2l,c
  6117   011854  6ADA               	clrf	fsr2h,c
  6118   011856  C025  FFDE         	movff	??_vfpfcnvrt,postinc2
  6119   01185A  C026  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6120   01185E                     
  6121                           ; BSR set to: 0
  6122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6123   01185E  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  6124   011862  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  6125   011866  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6126   01186A  EC55  F08C         	call	_dtoa	;wreg free
  6127   01186E  EF54  F08C         	goto	l1287
  6128   011872                     l4751:
  6129                           
  6130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6131   011872  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6132   011874  6ED9               	movwf	fsr2l,c
  6133   011876  6ADA               	clrf	fsr2h,c
  6134   011878  2ADE               	incf	postinc2,f,c
  6135   01187A  0E00               	movlw	0
  6136   01187C  22DD               	addwfc	postdec2,f,c
  6137   01187E  EF54  F08C         	goto	l1287
  6138   011882                     l4755:
  6139                           
  6140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6141   011882  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6142   011884  6ED9               	movwf	fsr2l,c
  6143   011886  6ADA               	clrf	fsr2h,c
  6144   011888  CFDE FFF6          	movff	postinc2,tblptrl
  6145   01188C  CFDD FFF7          	movff	postdec2,tblptrh
  6146   011890                     	if	0	;tblptru may be non-zero
  6147   011890                     	endif
  6148   011890                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6149   011890  0E00               	movlw	low (__mediumconst shr (0+16))
  6150   011892  6EF8               	movwf	tblptru,c
  6151   011894                     	endif
  6152   011894  0008               	tblrd		*
  6153   011896  50F5               	movf	tablat,w,c
  6154   011898  6E01               	movwf	fputc@c^0,c
  6155   01189A  6A02               	clrf	(fputc@c+1)^0,c
  6156   01189C  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6157   0118A0  EC95  F090         	call	_fputc	;wreg free
  6158   0118A4  EF39  F08C         	goto	l4751
  6159   0118A8                     l1287:
  6160   0118A8  0012               	return		;funcret
  6161   0118AA                     __end_of_vfpfcnvrt:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _read_prec_or_width *****************
  6165 ;; Defined at:
  6166 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  6169 ;;		 -> vfprintf@cfmt(2), 
  6170 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  6171 ;;		 -> sprintf@ap(1), 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  c               1    8[COMRAM] unsigned char 
  6174 ;;  n               2    9[COMRAM] int 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    6[COMRAM] int 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;Total ram usage:        5 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 1
  6191 ;; This function calls:
  6192 ;;		___wmul
  6193 ;; This function is called by:
  6194 ;;		_vfpfcnvrt
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text22
  6199   011E66                     __ptext22:
  6200                           	callstack 0
  6201   011E66                     _read_prec_or_width:
  6202                           	callstack 25
  6203   011E66                     
  6204                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6205   011E66  0E00               	movlw	0
  6206   011E68  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6207   011E6A  0E00               	movlw	0
  6208   011E6C  6E0A               	movwf	read_prec_or_width@n^0,c
  6209   011E6E                     
  6210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6211   011E6E  5007               	movf	read_prec_or_width@fmt^0,w,c
  6212   011E70  6ED9               	movwf	fsr2l,c
  6213   011E72  6ADA               	clrf	fsr2h,c
  6214   011E74  CFDE FFF6          	movff	postinc2,tblptrl
  6215   011E78  CFDD FFF7          	movff	postdec2,tblptrh
  6216   011E7C                     	if	0	;tblptru may be non-zero
  6217   011E7C                     	endif
  6218   011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6219   011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  6220   011E7E  6EF8               	movwf	tblptru,c
  6221   011E80                     	endif
  6222   011E80  0008               	tblrd		*
  6223   011E82  50F5               	movf	tablat,w,c
  6224   011E84  0A2A               	xorlw	42
  6225   011E86  A4D8               	btfss	status,2,c
  6226   011E88  EF48  F08F         	goto	u4421
  6227   011E8C  EF4A  F08F         	goto	u4420
  6228   011E90                     u4421:
  6229   011E90  EF74  F08F         	goto	l4703
  6230   011E94                     u4420:
  6231   011E94                     
  6232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6233   011E94  5007               	movf	read_prec_or_width@fmt^0,w,c
  6234   011E96  6ED9               	movwf	fsr2l,c
  6235   011E98  6ADA               	clrf	fsr2h,c
  6236   011E9A  2ADE               	incf	postinc2,f,c
  6237   011E9C  0E00               	movlw	0
  6238   011E9E  22DD               	addwfc	postdec2,f,c
  6239   011EA0                     
  6240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6241   011EA0  5008               	movf	read_prec_or_width@ap^0,w,c
  6242   011EA2  6ED9               	movwf	fsr2l,c
  6243   011EA4  6ADA               	clrf	fsr2h,c
  6244   011EA6  0E02               	movlw	2
  6245   011EA8  26DF               	addwf	indf2,f,c
  6246   011EAA  5CDF               	subwf	indf2,w,c
  6247   011EAC  6ED9               	movwf	fsr2l,c
  6248   011EAE  6ADA               	clrf	fsr2h,c
  6249   011EB0  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6250   011EB4  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6251                           
  6252                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6253   011EB8  EF89  F08F         	goto	l1268
  6254   011EBC                     l4699:
  6255                           
  6256                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6257   011EBC  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  6258   011EC0  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  6259   011EC4  0E00               	movlw	0
  6260   011EC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6261   011EC8  0E0A               	movlw	10
  6262   011ECA  6E03               	movwf	___wmul@multiplicand^0,c
  6263   011ECC  EC96  F093         	call	___wmul	;wreg free
  6264   011ED0  5009               	movf	read_prec_or_width@c^0,w,c
  6265   011ED2  2401               	addwf	?___wmul^0,w,c
  6266   011ED4  6E0A               	movwf	read_prec_or_width@n^0,c
  6267   011ED6  0E00               	movlw	0
  6268   011ED8  2002               	addwfc	(?___wmul+1)^0,w,c
  6269   011EDA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6270   011EDC                     
  6271                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6272   011EDC  5007               	movf	read_prec_or_width@fmt^0,w,c
  6273   011EDE  6ED9               	movwf	fsr2l,c
  6274   011EE0  6ADA               	clrf	fsr2h,c
  6275   011EE2  2ADE               	incf	postinc2,f,c
  6276   011EE4  0E00               	movlw	0
  6277   011EE6  22DD               	addwfc	postdec2,f,c
  6278   011EE8                     l4703:
  6279                           
  6280                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6281   011EE8  5007               	movf	read_prec_or_width@fmt^0,w,c
  6282   011EEA  6ED9               	movwf	fsr2l,c
  6283   011EEC  6ADA               	clrf	fsr2h,c
  6284   011EEE  CFDE FFF6          	movff	postinc2,tblptrl
  6285   011EF2  CFDD FFF7          	movff	postdec2,tblptrh
  6286   011EF6                     	if	0	;tblptru may be non-zero
  6287   011EF6                     	endif
  6288   011EF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6289   011EF6  0E00               	movlw	low (__mediumconst shr (0+16))
  6290   011EF8  6EF8               	movwf	tblptru,c
  6291   011EFA                     	endif
  6292   011EFA  0008               	tblrd		*
  6293   011EFC  50F5               	movf	tablat,w,c
  6294   011EFE  0FD0               	addlw	208
  6295   011F00  6E09               	movwf	read_prec_or_width@c^0,c
  6296   011F02  0E09               	movlw	9
  6297   011F04  6409               	cpfsgt	read_prec_or_width@c^0,c
  6298   011F06  EF87  F08F         	goto	u4431
  6299   011F0A  EF89  F08F         	goto	u4430
  6300   011F0E                     u4431:
  6301   011F0E  EF5E  F08F         	goto	l4699
  6302   011F12                     u4430:
  6303   011F12                     l1268:
  6304                           
  6305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6306   011F12  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  6307   011F16  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6308   011F1A  0012               	return		;funcret
  6309   011F1C                     __end_of_read_prec_or_width:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function ___wmul *****************
  6313 ;; Defined at:
  6314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  multiplier      2    0[COMRAM] unsigned int 
  6317 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6318 ;; Auto vars:     Size  Location     Type
  6319 ;;  product         2    4[COMRAM] unsigned int 
  6320 ;; Return value:  Size  Location     Type
  6321 ;;                  2    0[COMRAM] unsigned int 
  6322 ;; Registers used:
  6323 ;;		wreg, status,2, status,0, prodl, prodh
  6324 ;; Tracked objects:
  6325 ;;		On entry : 0/0
  6326 ;;		On exit  : 0/0
  6327 ;;		Unchanged: 0/0
  6328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;Total ram usage:        6 bytes
  6334 ;; Hardware stack levels used: 1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_read_prec_or_width
  6339 ;;		_setMotorPWM
  6340 ;;		_ADC2String
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text23
  6345   01272C                     __ptext23:
  6346                           	callstack 0
  6347   01272C                     ___wmul:
  6348                           	callstack 25
  6349   01272C  5001               	movf	___wmul@multiplier^0,w,c
  6350   01272E  0203               	mulwf	___wmul@multiplicand^0,c
  6351   012730  CFF3 F005          	movff	prodl,___wmul@product
  6352   012734  CFF4 F006          	movff	prodh,___wmul@product+1
  6353   012738  5001               	movf	___wmul@multiplier^0,w,c
  6354   01273A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6355   01273C  50F3               	movf	243,w,c
  6356   01273E  2606               	addwf	(___wmul@product+1)^0,f,c
  6357   012740  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6358   012742  0203               	mulwf	___wmul@multiplicand^0,c
  6359   012744  50F3               	movf	243,w,c
  6360   012746  2606               	addwf	(___wmul@product+1)^0,f,c
  6361   012748  C005  F001         	movff	___wmul@product,?___wmul
  6362   01274C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6363   012750  0012               	return		;funcret
  6364   012752                     __end_of___wmul:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _dtoa *****************
  6368 ;; Defined at:
  6369 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6372 ;;		 -> sprintf@f(12), 
  6373 ;;  d               2   23[COMRAM] int 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  i               2   31[COMRAM] int 
  6376 ;;  w               2   28[COMRAM] int 
  6377 ;;  s               1   30[COMRAM] unsigned char 
  6378 ;;  p               1   27[COMRAM] _Bool 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;Total ram usage:       11 bytes
  6393 ;; Hardware stack levels used: 1
  6394 ;; Hardware stack levels required when called: 4
  6395 ;; This function calls:
  6396 ;;		___awdiv
  6397 ;;		___awmod
  6398 ;;		_abs
  6399 ;;		_pad
  6400 ;; This function is called by:
  6401 ;;		_vfpfcnvrt
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text24
  6406   0118AA                     __ptext24:
  6407                           	callstack 0
  6408   0118AA                     _dtoa:
  6409                           	callstack 22
  6410   0118AA                     
  6411                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6412   0118AA  0E01               	movlw	1
  6413   0118AC  6E1C               	movwf	dtoa@p^0,c
  6414   0118AE                     
  6415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6416   0118AE  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6417   0118B0  EF5C  F08C         	goto	u4321
  6418   0118B4  EF5F  F08C         	goto	u4320
  6419   0118B8                     u4321:
  6420   0118B8  0E01               	movlw	1
  6421   0118BA  EF60  F08C         	goto	u4330
  6422   0118BE                     u4320:
  6423   0118BE  0E00               	movlw	0
  6424   0118C0                     u4330:
  6425   0118C0  6E1F               	movwf	dtoa@s^0,c
  6426   0118C2                     
  6427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6428   0118C2  C0EC  F01D         	movff	_width,dtoa@w
  6429   0118C6  C0ED  F01E         	movff	_width+1,dtoa@w+1
  6430   0118CA                     
  6431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6432   0118CA  501F               	movf	dtoa@s^0,w,c
  6433   0118CC  B4D8               	btfsc	status,2,c
  6434   0118CE  EF6B  F08C         	goto	u4341
  6435   0118D2  EF6D  F08C         	goto	u4340
  6436   0118D6                     u4341:
  6437   0118D6  EF84  F08C         	goto	l1251
  6438   0118DA                     u4340:
  6439   0118DA                     
  6440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6441   0118DA  061D               	decf	dtoa@w^0,f,c
  6442   0118DC  A0D8               	btfss	status,0,c
  6443   0118DE  061E               	decf	(dtoa@w+1)^0,f,c
  6444   0118E0                     
  6445                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6446   0118E0  501F               	movf	dtoa@s^0,w,c
  6447   0118E2  A4D8               	btfss	status,2,c
  6448   0118E4  EF76  F08C         	goto	u4351
  6449   0118E8  EF78  F08C         	goto	u4350
  6450   0118EC                     u4351:
  6451   0118EC  EF7E  F08C         	goto	l4655
  6452   0118F0                     u4350:
  6453   0118F0  0E00               	movlw	0
  6454   0118F2  6E1B               	movwf	(_dtoa$2608+1)^0,c
  6455   0118F4  0E2B               	movlw	43
  6456   0118F6  6E1A               	movwf	_dtoa$2608^0,c
  6457   0118F8  EF82  F08C         	goto	l4657
  6458   0118FC                     l4655:
  6459   0118FC  0E00               	movlw	0
  6460   0118FE  6E1B               	movwf	(_dtoa$2608+1)^0,c
  6461   011900  0E2D               	movlw	45
  6462   011902  6E1A               	movwf	_dtoa$2608^0,c
  6463   011904                     l4657:
  6464   011904  C01A  F01F         	movff	_dtoa$2608,dtoa@s
  6465   011908                     l1251:
  6466                           
  6467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6468   011908  0E00               	movlw	0
  6469   01190A  6E21               	movwf	(dtoa@i+1)^0,c
  6470   01190C  0E1F               	movlw	31
  6471   01190E  6E20               	movwf	dtoa@i^0,c
  6472   011910                     
  6473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6474   011910  0E00               	movlw	0
  6475   011912  0101               	movlb	1	; () banked
  6476   011914  6F8B               	movwf	(_dbuf+31)& (0+255),b
  6477                           
  6478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6479   011916  EFBC  F08C         	goto	l4671
  6480   01191A                     l4661:
  6481                           
  6482                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6483   01191A  0620               	decf	dtoa@i^0,f,c
  6484   01191C  A0D8               	btfss	status,0,c
  6485   01191E  0621               	decf	(dtoa@i+1)^0,f,c
  6486   011920                     
  6487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6488   011920  0E6C               	movlw	low _dbuf
  6489   011922  2420               	addwf	dtoa@i^0,w,c
  6490   011924  6ED9               	movwf	fsr2l,c
  6491   011926  0E01               	movlw	high _dbuf
  6492   011928  2021               	addwfc	(dtoa@i+1)^0,w,c
  6493   01192A  6EDA               	movwf	fsr2h,c
  6494   01192C  C018  F001         	movff	dtoa@d,___awmod@dividend
  6495   011930  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6496   011934  0E00               	movlw	0
  6497   011936  6E04               	movwf	(___awmod@divisor+1)^0,c
  6498   011938  0E0A               	movlw	10
  6499   01193A  6E03               	movwf	___awmod@divisor^0,c
  6500   01193C  ECE8  F08F         	call	___awmod	;wreg free
  6501   011940  C001  F007         	movff	?___awmod,abs@a
  6502   011944  C002  F008         	movff	?___awmod+1,abs@a+1
  6503   011948  EC3A  F093         	call	_abs	;wreg free
  6504   01194C  5007               	movf	?_abs^0,w,c
  6505   01194E  0F30               	addlw	48
  6506   011950  6EDF               	movwf	indf2,c
  6507   011952                     
  6508                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6509   011952  0E00               	movlw	0
  6510   011954  6E1C               	movwf	dtoa@p^0,c
  6511   011956                     
  6512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6513   011956  061D               	decf	dtoa@w^0,f,c
  6514   011958  A0D8               	btfss	status,0,c
  6515   01195A  061E               	decf	(dtoa@w+1)^0,f,c
  6516   01195C                     
  6517                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6518   01195C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6519   011960  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6520   011964  0E00               	movlw	0
  6521   011966  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6522   011968  0E0A               	movlw	10
  6523   01196A  6E03               	movwf	___awdiv@divisor^0,c
  6524   01196C  ECD1  F08E         	call	___awdiv	;wreg free
  6525   011970  C001  F018         	movff	?___awdiv,dtoa@d
  6526   011974  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6527   011978                     l4671:
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6530   011978  BE21               	btfsc	(dtoa@i+1)^0,7,c
  6531   01197A  EFC7  F08C         	goto	u4361
  6532   01197E  5021               	movf	(dtoa@i+1)^0,w,c
  6533   011980  E108               	bnz	u4360
  6534   011982  0420               	decf	dtoa@i^0,w,c
  6535   011984  A0D8               	btfss	status,0,c
  6536   011986  EFC7  F08C         	goto	u4361
  6537   01198A  EFC9  F08C         	goto	u4360
  6538   01198E                     u4361:
  6539   01198E  EFEF  F08C         	goto	l4681
  6540   011992                     u4360:
  6541   011992  5018               	movf	dtoa@d^0,w,c
  6542   011994  1019               	iorwf	(dtoa@d+1)^0,w,c
  6543   011996  A4D8               	btfss	status,2,c
  6544   011998  EFD0  F08C         	goto	u4371
  6545   01199C  EFD2  F08C         	goto	u4370
  6546   0119A0                     u4371:
  6547   0119A0  EF8D  F08C         	goto	l4661
  6548   0119A4                     u4370:
  6549   0119A4  501C               	movf	dtoa@p^0,w,c
  6550   0119A6  A4D8               	btfss	status,2,c
  6551   0119A8  EFD8  F08C         	goto	u4381
  6552   0119AC  EFDA  F08C         	goto	u4380
  6553   0119B0                     u4381:
  6554   0119B0  EF8D  F08C         	goto	l4661
  6555   0119B4                     u4380:
  6556   0119B4  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  6557   0119B6  EFE5  F08C         	goto	u4391
  6558   0119BA  501E               	movf	(dtoa@w+1)^0,w,c
  6559   0119BC  E108               	bnz	u4390
  6560   0119BE  041D               	decf	dtoa@w^0,w,c
  6561   0119C0  A0D8               	btfss	status,0,c
  6562   0119C2  EFE5  F08C         	goto	u4391
  6563   0119C6  EFE7  F08C         	goto	u4390
  6564   0119CA                     u4391:
  6565   0119CA  EFEF  F08C         	goto	l4681
  6566   0119CE                     u4390:
  6567   0119CE  0100               	movlb	0	; () banked
  6568   0119D0  B3F0               	btfsc	_flags& (0+255),1,b
  6569   0119D2  EFED  F08C         	goto	u4401
  6570   0119D6  EFEF  F08C         	goto	u4400
  6571   0119DA                     u4401:
  6572   0119DA  EF8D  F08C         	goto	l4661
  6573   0119DE                     u4400:
  6574   0119DE                     l4681:
  6575                           
  6576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6577   0119DE  501F               	movf	dtoa@s^0,w,c
  6578   0119E0  B4D8               	btfsc	status,2,c
  6579   0119E2  EFF5  F08C         	goto	u4411
  6580   0119E6  EFF7  F08C         	goto	u4410
  6581   0119EA                     u4411:
  6582   0119EA  EF02  F08D         	goto	l4687
  6583   0119EE                     u4410:
  6584   0119EE                     
  6585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6586   0119EE  0620               	decf	dtoa@i^0,f,c
  6587   0119F0  A0D8               	btfss	status,0,c
  6588   0119F2  0621               	decf	(dtoa@i+1)^0,f,c
  6589   0119F4                     
  6590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6591   0119F4  0E6C               	movlw	low _dbuf
  6592   0119F6  2420               	addwf	dtoa@i^0,w,c
  6593   0119F8  6ED9               	movwf	fsr2l,c
  6594   0119FA  0E01               	movlw	high _dbuf
  6595   0119FC  2021               	addwfc	(dtoa@i+1)^0,w,c
  6596   0119FE  6EDA               	movwf	fsr2h,c
  6597   011A00  C01F  FFDF         	movff	dtoa@s,indf2
  6598   011A04                     l4687:
  6599                           
  6600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6601   011A04  C017  F00F         	movff	dtoa@fp,pad@fp
  6602   011A08  0E6C               	movlw	low _dbuf
  6603   011A0A  2420               	addwf	dtoa@i^0,w,c
  6604   011A0C  6E10               	movwf	pad@buf^0,c
  6605   011A0E  0E01               	movlw	high _dbuf
  6606   011A10  2021               	addwfc	(dtoa@i+1)^0,w,c
  6607   011A12  6E11               	movwf	(pad@buf+1)^0,c
  6608   011A14  C01D  F012         	movff	dtoa@w,pad@p
  6609   011A18  C01E  F013         	movff	dtoa@w+1,pad@p+1
  6610   011A1C  ECEA  F090         	call	_pad	;wreg free
  6611   011A20  0012               	return		;funcret
  6612   011A22                     __end_of_dtoa:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _pad *****************
  6616 ;; Defined at:
  6617 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6620 ;;		 -> sprintf@f(12), 
  6621 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6622 ;;		 -> dbuf(32), 
  6623 ;;  p               2   17[COMRAM] int 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  i               2   20[COMRAM] int 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  1    wreg      void 
  6628 ;; Registers used:
  6629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6635 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;Total ram usage:        8 bytes
  6640 ;; Hardware stack levels used: 1
  6641 ;; Hardware stack levels required when called: 3
  6642 ;; This function calls:
  6643 ;;		_fputc
  6644 ;;		_fputs
  6645 ;; This function is called by:
  6646 ;;		_dtoa
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text25
  6651   0121D4                     __ptext25:
  6652                           	callstack 0
  6653   0121D4                     _pad:
  6654                           	callstack 22
  6655   0121D4                     
  6656                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6657   0121D4  0100               	movlb	0	; () banked
  6658   0121D6  A1F0               	btfss	_flags& (0+255),0,b
  6659   0121D8  EFF0  F090         	goto	u4271
  6660   0121DC  EFF2  F090         	goto	u4270
  6661   0121E0                     u4271:
  6662   0121E0  EFFA  F090         	goto	l4625
  6663   0121E4                     u4270:
  6664   0121E4                     
  6665                           ; BSR set to: 0
  6666                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6667   0121E4  C010  F009         	movff	pad@buf,fputs@s
  6668   0121E8  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6669   0121EC  C00F  F00B         	movff	pad@fp,fputs@fp
  6670   0121F0  ECE4  F092         	call	_fputs	;wreg free
  6671   0121F4                     l4625:
  6672                           
  6673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6674   0121F4  BE13               	btfsc	(pad@p+1)^0,7,c
  6675   0121F6  EF01  F091         	goto	u4280
  6676   0121FA  EFFF  F090         	goto	u4281
  6677   0121FE                     u4281:
  6678   0121FE  EF05  F091         	goto	l1243
  6679   012202                     u4280:
  6680   012202                     
  6681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6682   012202  0E00               	movlw	0
  6683   012204  6E13               	movwf	(pad@p+1)^0,c
  6684   012206  0E00               	movlw	0
  6685   012208  6E12               	movwf	pad@p^0,c
  6686   01220A                     l1243:
  6687                           
  6688                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6689   01220A  0E00               	movlw	0
  6690   01220C  6E16               	movwf	(pad@i+1)^0,c
  6691   01220E  0E00               	movlw	0
  6692   012210  6E15               	movwf	pad@i^0,c
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6695   012212  EF15  F091         	goto	l4633
  6696   012216                     l4629:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6699   012216  0E00               	movlw	0
  6700   012218  6E02               	movwf	(fputc@c+1)^0,c
  6701   01221A  0E20               	movlw	32
  6702   01221C  6E01               	movwf	fputc@c^0,c
  6703   01221E  C00F  F003         	movff	pad@fp,fputc@fp
  6704   012222  EC95  F090         	call	_fputc	;wreg free
  6705   012226                     
  6706                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6707   012226  4A15               	infsnz	pad@i^0,f,c
  6708   012228  2A16               	incf	(pad@i+1)^0,f,c
  6709   01222A                     l4633:
  6710                           
  6711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6712   01222A  5012               	movf	pad@p^0,w,c
  6713   01222C  5C15               	subwf	pad@i^0,w,c
  6714   01222E  5016               	movf	(pad@i+1)^0,w,c
  6715   012230  0A80               	xorlw	128
  6716   012232  6E14               	movwf	??_pad^0,c
  6717   012234  5013               	movf	(pad@p+1)^0,w,c
  6718   012236  0A80               	xorlw	128
  6719   012238  5814               	subwfb	??_pad^0,w,c
  6720   01223A  A0D8               	btfss	status,0,c
  6721   01223C  EF22  F091         	goto	u4291
  6722   012240  EF24  F091         	goto	u4290
  6723   012244                     u4291:
  6724   012244  EF0B  F091         	goto	l4629
  6725   012248                     u4290:
  6726   012248                     
  6727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6728   012248  0100               	movlb	0	; () banked
  6729   01224A  B1F0               	btfsc	_flags& (0+255),0,b
  6730   01224C  EF2A  F091         	goto	u4301
  6731   012250  EF2C  F091         	goto	u4300
  6732   012254                     u4301:
  6733   012254  EF34  F091         	goto	l1248
  6734   012258                     u4300:
  6735   012258                     
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6738   012258  C010  F009         	movff	pad@buf,fputs@s
  6739   01225C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6740   012260  C00F  F00B         	movff	pad@fp,fputs@fp
  6741   012264  ECE4  F092         	call	_fputs	;wreg free
  6742   012268                     l1248:
  6743   012268  0012               	return		;funcret
  6744   01226A                     __end_of_pad:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function _fputs *****************
  6748 ;; Defined at:
  6749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6752 ;;		 -> dbuf(32), 
  6753 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6754 ;;		 -> sprintf@f(12), 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  i               2   12[COMRAM] int 
  6757 ;;  c               1   11[COMRAM] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  2    8[COMRAM] int 
  6760 ;; Registers used:
  6761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6767 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6771 ;;Total ram usage:        6 bytes
  6772 ;; Hardware stack levels used: 1
  6773 ;; Hardware stack levels required when called: 2
  6774 ;; This function calls:
  6775 ;;		_fputc
  6776 ;; This function is called by:
  6777 ;;		_pad
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text26
  6782   0125C8                     __ptext26:
  6783                           	callstack 0
  6784   0125C8                     _fputs:
  6785                           	callstack 22
  6786   0125C8  0E00               	movlw	0
  6787   0125CA  6E0E               	movwf	(fputs@i+1)^0,c
  6788   0125CC  0E00               	movlw	0
  6789   0125CE  6E0D               	movwf	fputs@i^0,c
  6790   0125D0  EFF3  F092         	goto	l4533
  6791   0125D4                     l4529:
  6792   0125D4  C00C  F001         	movff	fputs@c,fputc@c
  6793   0125D8  6A02               	clrf	(fputc@c+1)^0,c
  6794   0125DA  C00B  F003         	movff	fputs@fp,fputc@fp
  6795   0125DE  EC95  F090         	call	_fputc	;wreg free
  6796   0125E2  4A0D               	infsnz	fputs@i^0,f,c
  6797   0125E4  2A0E               	incf	(fputs@i+1)^0,f,c
  6798   0125E6                     l4533:
  6799   0125E6  500D               	movf	fputs@i^0,w,c
  6800   0125E8  2409               	addwf	fputs@s^0,w,c
  6801   0125EA  6ED9               	movwf	fsr2l,c
  6802   0125EC  500E               	movf	(fputs@i+1)^0,w,c
  6803   0125EE  200A               	addwfc	(fputs@s+1)^0,w,c
  6804   0125F0  6EDA               	movwf	fsr2h,c
  6805   0125F2  50DF               	movf	indf2,w,c
  6806   0125F4  6E0C               	movwf	fputs@c^0,c
  6807   0125F6  500C               	movf	fputs@c^0,w,c
  6808   0125F8  A4D8               	btfss	status,2,c
  6809   0125FA  EF01  F093         	goto	u4141
  6810   0125FE  EF03  F093         	goto	u4140
  6811   012602                     u4141:
  6812   012602  EFEA  F092         	goto	l4529
  6813   012606                     u4140:
  6814   012606  0012               	return		;funcret
  6815   012608                     __end_of_fputs:
  6816                           	callstack 0
  6817                           
  6818 ;; *************** function _fputc *****************
  6819 ;; Defined at:
  6820 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  c               2    0[COMRAM] int 
  6823 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6824 ;;		 -> sprintf@f(12), 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;		None
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  2    0[COMRAM] int 
  6829 ;; Registers used:
  6830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;Total ram usage:        8 bytes
  6841 ;; Hardware stack levels used: 1
  6842 ;; Hardware stack levels required when called: 1
  6843 ;; This function calls:
  6844 ;;		_putch
  6845 ;; This function is called by:
  6846 ;;		_pad
  6847 ;;		_vfpfcnvrt
  6848 ;;		_fputs
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text27
  6853   01212A                     __ptext27:
  6854                           	callstack 0
  6855   01212A                     _fputc:
  6856                           	callstack 25
  6857   01212A  5003               	movf	fputc@fp^0,w,c
  6858   01212C  B4D8               	btfsc	status,2,c
  6859   01212E  EF9B  F090         	goto	u4101
  6860   012132  EF9D  F090         	goto	u4100
  6861   012136                     u4101:
  6862   012136  EFA5  F090         	goto	l4517
  6863   01213A                     u4100:
  6864   01213A  5003               	movf	fputc@fp^0,w,c
  6865   01213C  A4D8               	btfss	status,2,c
  6866   01213E  EFA3  F090         	goto	u4111
  6867   012142  EFA5  F090         	goto	u4110
  6868   012146                     u4111:
  6869   012146  EFAA  F090         	goto	l4519
  6870   01214A                     u4110:
  6871   01214A                     l4517:
  6872   01214A  5001               	movf	fputc@c^0,w,c
  6873   01214C  EC08  F094         	call	_putch
  6874   012150  EFE9  F090         	goto	l1312
  6875   012154                     l4519:
  6876   012154  5003               	movf	fputc@fp^0,w,c
  6877   012156  6ED9               	movwf	fsr2l,c
  6878   012158  6ADA               	clrf	fsr2h,c
  6879   01215A  0E0A               	movlw	10
  6880   01215C  26D9               	addwf	fsr2l,f,c
  6881   01215E  50DE               	movf	postinc2,w,c
  6882   012160  10DE               	iorwf	postinc2,w,c
  6883   012162  B4D8               	btfsc	status,2,c
  6884   012164  EFB6  F090         	goto	u4121
  6885   012168  EFB8  F090         	goto	u4120
  6886   01216C                     u4121:
  6887   01216C  EFD1  F090         	goto	l4523
  6888   012170                     u4120:
  6889   012170  5003               	movf	fputc@fp^0,w,c
  6890   012172  6ED9               	movwf	fsr2l,c
  6891   012174  6ADA               	clrf	fsr2h,c
  6892   012176  0E0A               	movlw	10
  6893   012178  26D9               	addwf	fsr2l,f,c
  6894   01217A  5003               	movf	fputc@fp^0,w,c
  6895   01217C  6EE1               	movwf	fsr1l,c
  6896   01217E  6AE2               	clrf	fsr1h,c
  6897   012180  0E03               	movlw	3
  6898   012182  26E1               	addwf	fsr1l,f,c
  6899   012184  50DE               	movf	postinc2,w,c
  6900   012186  5CE6               	subwf	postinc1,w,c
  6901   012188  50E6               	movf	postinc1,w,c
  6902   01218A  0A80               	xorlw	128
  6903   01218C  6E08               	movwf	(??_fputc+4)^0,c
  6904   01218E  50DE               	movf	postinc2,w,c
  6905   012190  0A80               	xorlw	128
  6906   012192  5808               	subwfb	(??_fputc+4)^0,w,c
  6907   012194  B0D8               	btfsc	status,0,c
  6908   012196  EFCF  F090         	goto	u4131
  6909   01219A  EFD1  F090         	goto	u4130
  6910   01219E                     u4131:
  6911   01219E  EFE9  F090         	goto	l1312
  6912   0121A2                     u4130:
  6913   0121A2                     l4523:
  6914   0121A2  5003               	movf	fputc@fp^0,w,c
  6915   0121A4  6ED9               	movwf	fsr2l,c
  6916   0121A6  6ADA               	clrf	fsr2h,c
  6917   0121A8  0E03               	movlw	3
  6918   0121AA  26D9               	addwf	fsr2l,f,c
  6919   0121AC  50DF               	movf	indf2,w,c
  6920   0121AE  6E04               	movwf	??_fputc^0,c
  6921   0121B0  5003               	movf	fputc@fp^0,w,c
  6922   0121B2  6ED9               	movwf	fsr2l,c
  6923   0121B4  6ADA               	clrf	fsr2h,c
  6924   0121B6  50DF               	movf	indf2,w,c
  6925   0121B8  2404               	addwf	??_fputc^0,w,c
  6926   0121BA  6ED9               	movwf	fsr2l,c
  6927   0121BC  6ADA               	clrf	fsr2h,c
  6928   0121BE  C001  FFDF         	movff	fputc@c,indf2
  6929   0121C2  5003               	movf	fputc@fp^0,w,c
  6930   0121C4  6ED9               	movwf	fsr2l,c
  6931   0121C6  6ADA               	clrf	fsr2h,c
  6932   0121C8  0E03               	movlw	3
  6933   0121CA  26D9               	addwf	fsr2l,f,c
  6934   0121CC  2ADE               	incf	postinc2,f,c
  6935   0121CE  0E00               	movlw	0
  6936   0121D0  22DD               	addwfc	postdec2,f,c
  6937   0121D2                     l1312:
  6938   0121D2  0012               	return		;funcret
  6939   0121D4                     __end_of_fputc:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _putch *****************
  6943 ;; Defined at:
  6944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  c               1    wreg     unsigned char 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  c               1    0[COMRAM] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_fputc
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text28
  6972   012810                     __ptext28:
  6973                           	callstack 0
  6974   012810                     _putch:
  6975                           	callstack 25
  6976   012810  0012               	return		;funcret
  6977   012812                     __end_of_putch:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function _abs *****************
  6981 ;; Defined at:
  6982 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  a               2    6[COMRAM] int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  2    6[COMRAM] int 
  6989 ;; Registers used:
  6990 ;;		wreg, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;Total ram usage:        4 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_dtoa
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text29
  7010   012674                     __ptext29:
  7011                           	callstack 0
  7012   012674                     _abs:
  7013                           	callstack 25
  7014   012674  BE08               	btfsc	(abs@a+1)^0,7,c
  7015   012676  EF3F  F093         	goto	u4311
  7016   01267A  EF41  F093         	goto	u4310
  7017   01267E                     u4311:
  7018   01267E  EF47  F093         	goto	l1297
  7019   012682                     u4310:
  7020   012682  C007  F007         	movff	abs@a,?_abs
  7021   012686  C008  F008         	movff	abs@a+1,?_abs+1
  7022   01268A  EF53  F093         	goto	l1300
  7023   01268E                     l1297:
  7024   01268E  C007  F009         	movff	abs@a,??_abs
  7025   012692  C008  F00A         	movff	abs@a+1,??_abs+1
  7026   012696  1E09               	comf	??_abs^0,f,c
  7027   012698  1E0A               	comf	(??_abs+1)^0,f,c
  7028   01269A  4A09               	infsnz	??_abs^0,f,c
  7029   01269C  2A0A               	incf	(??_abs+1)^0,f,c
  7030   01269E  C009  F007         	movff	??_abs,?_abs
  7031   0126A2  C00A  F008         	movff	??_abs+1,?_abs+1
  7032   0126A6                     l1300:
  7033   0126A6  0012               	return		;funcret
  7034   0126A8                     __end_of_abs:
  7035                           	callstack 0
  7036                           
  7037 ;; *************** function ___awmod *****************
  7038 ;; Defined at:
  7039 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  dividend        2    0[COMRAM] int 
  7042 ;;  divisor         2    2[COMRAM] int 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  sign            1    5[COMRAM] unsigned char 
  7045 ;;  counter         1    4[COMRAM] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  2    0[COMRAM] int 
  7048 ;; Registers used:
  7049 ;;		wreg, status,2, status,0
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7055 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;Total ram usage:        6 bytes
  7060 ;; Hardware stack levels used: 1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_dtoa
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text30
  7069   011FD0                     __ptext30:
  7070                           	callstack 0
  7071   011FD0                     ___awmod:
  7072                           	callstack 25
  7073   011FD0  0E00               	movlw	0
  7074   011FD2  6E06               	movwf	___awmod@sign^0,c
  7075   011FD4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7076   011FD6  EFF1  F08F         	goto	u4210
  7077   011FDA  EFEF  F08F         	goto	u4211
  7078   011FDE                     u4211:
  7079   011FDE  EFF7  F08F         	goto	l4593
  7080   011FE2                     u4210:
  7081   011FE2  6C01               	negf	___awmod@dividend^0,c
  7082   011FE4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7083   011FE6  B0D8               	btfsc	status,0,c
  7084   011FE8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7085   011FEA  0E01               	movlw	1
  7086   011FEC  6E06               	movwf	___awmod@sign^0,c
  7087   011FEE                     l4593:
  7088   011FEE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7089   011FF0  EFFE  F08F         	goto	u4220
  7090   011FF4  EFFC  F08F         	goto	u4221
  7091   011FF8                     u4221:
  7092   011FF8  EF02  F090         	goto	l4597
  7093   011FFC                     u4220:
  7094   011FFC  6C03               	negf	___awmod@divisor^0,c
  7095   011FFE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7096   012000  B0D8               	btfsc	status,0,c
  7097   012002  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7098   012004                     l4597:
  7099   012004  5003               	movf	___awmod@divisor^0,w,c
  7100   012006  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7101   012008  B4D8               	btfsc	status,2,c
  7102   01200A  EF09  F090         	goto	u4231
  7103   01200E  EF0B  F090         	goto	u4230
  7104   012012                     u4231:
  7105   012012  EF2F  F090         	goto	l4613
  7106   012016                     u4230:
  7107   012016  0E01               	movlw	1
  7108   012018  6E05               	movwf	___awmod@counter^0,c
  7109   01201A  EF13  F090         	goto	l4603
  7110   01201E                     l4601:
  7111   01201E  90D8               	bcf	status,0,c
  7112   012020  3603               	rlcf	___awmod@divisor^0,f,c
  7113   012022  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7114   012024  2A05               	incf	___awmod@counter^0,f,c
  7115   012026                     l4603:
  7116   012026  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7117   012028  EF18  F090         	goto	u4241
  7118   01202C  EF1A  F090         	goto	u4240
  7119   012030                     u4241:
  7120   012030  EF0F  F090         	goto	l4601
  7121   012034                     u4240:
  7122   012034                     l4605:
  7123   012034  5003               	movf	___awmod@divisor^0,w,c
  7124   012036  5C01               	subwf	___awmod@dividend^0,w,c
  7125   012038  5004               	movf	(___awmod@divisor+1)^0,w,c
  7126   01203A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7127   01203C  A0D8               	btfss	status,0,c
  7128   01203E  EF23  F090         	goto	u4251
  7129   012042  EF25  F090         	goto	u4250
  7130   012046                     u4251:
  7131   012046  EF29  F090         	goto	l4609
  7132   01204A                     u4250:
  7133   01204A  5003               	movf	___awmod@divisor^0,w,c
  7134   01204C  5E01               	subwf	___awmod@dividend^0,f,c
  7135   01204E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7136   012050  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7137   012052                     l4609:
  7138   012052  90D8               	bcf	status,0,c
  7139   012054  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7140   012056  3203               	rrcf	___awmod@divisor^0,f,c
  7141   012058  2E05               	decfsz	___awmod@counter^0,f,c
  7142   01205A  EF1A  F090         	goto	l4605
  7143   01205E                     l4613:
  7144   01205E  5006               	movf	___awmod@sign^0,w,c
  7145   012060  B4D8               	btfsc	status,2,c
  7146   012062  EF35  F090         	goto	u4261
  7147   012066  EF37  F090         	goto	u4260
  7148   01206A                     u4261:
  7149   01206A  EF3B  F090         	goto	l4617
  7150   01206E                     u4260:
  7151   01206E  6C01               	negf	___awmod@dividend^0,c
  7152   012070  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7153   012072  B0D8               	btfsc	status,0,c
  7154   012074  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7155   012076                     l4617:
  7156   012076  C001  F001         	movff	___awmod@dividend,?___awmod
  7157   01207A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7158   01207E  0012               	return		;funcret
  7159   012080                     __end_of___awmod:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function ___awdiv *****************
  7163 ;; Defined at:
  7164 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  dividend        2    0[COMRAM] int 
  7167 ;;  divisor         2    2[COMRAM] int 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  quotient        2    6[COMRAM] int 
  7170 ;;  sign            1    5[COMRAM] unsigned char 
  7171 ;;  counter         1    4[COMRAM] unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  2    0[COMRAM] int 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;Total ram usage:        8 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_dtoa
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text31
  7195   011DA2                     __ptext31:
  7196                           	callstack 0
  7197   011DA2                     ___awdiv:
  7198                           	callstack 25
  7199   011DA2  0E00               	movlw	0
  7200   011DA4  6E06               	movwf	___awdiv@sign^0,c
  7201   011DA6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7202   011DA8  EFDA  F08E         	goto	u4150
  7203   011DAC  EFD8  F08E         	goto	u4151
  7204   011DB0                     u4151:
  7205   011DB0  EFE0  F08E         	goto	l4549
  7206   011DB4                     u4150:
  7207   011DB4  6C03               	negf	___awdiv@divisor^0,c
  7208   011DB6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7209   011DB8  B0D8               	btfsc	status,0,c
  7210   011DBA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7211   011DBC  0E01               	movlw	1
  7212   011DBE  6E06               	movwf	___awdiv@sign^0,c
  7213   011DC0                     l4549:
  7214   011DC0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7215   011DC2  EFE7  F08E         	goto	u4160
  7216   011DC6  EFE5  F08E         	goto	u4161
  7217   011DCA                     u4161:
  7218   011DCA  EFED  F08E         	goto	l4555
  7219   011DCE                     u4160:
  7220   011DCE  6C01               	negf	___awdiv@dividend^0,c
  7221   011DD0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7222   011DD2  B0D8               	btfsc	status,0,c
  7223   011DD4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7224   011DD6  0E01               	movlw	1
  7225   011DD8  1A06               	xorwf	___awdiv@sign^0,f,c
  7226   011DDA                     l4555:
  7227   011DDA  0E00               	movlw	0
  7228   011DDC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7229   011DDE  0E00               	movlw	0
  7230   011DE0  6E07               	movwf	___awdiv@quotient^0,c
  7231   011DE2  5003               	movf	___awdiv@divisor^0,w,c
  7232   011DE4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7233   011DE6  B4D8               	btfsc	status,2,c
  7234   011DE8  EFF8  F08E         	goto	u4171
  7235   011DEC  EFFA  F08E         	goto	u4170
  7236   011DF0                     u4171:
  7237   011DF0  EF22  F08F         	goto	l4577
  7238   011DF4                     u4170:
  7239   011DF4  0E01               	movlw	1
  7240   011DF6  6E05               	movwf	___awdiv@counter^0,c
  7241   011DF8  EF02  F08F         	goto	l4563
  7242   011DFC                     l4561:
  7243   011DFC  90D8               	bcf	status,0,c
  7244   011DFE  3603               	rlcf	___awdiv@divisor^0,f,c
  7245   011E00  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7246   011E02  2A05               	incf	___awdiv@counter^0,f,c
  7247   011E04                     l4563:
  7248   011E04  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7249   011E06  EF07  F08F         	goto	u4181
  7250   011E0A  EF09  F08F         	goto	u4180
  7251   011E0E                     u4181:
  7252   011E0E  EFFE  F08E         	goto	l4561
  7253   011E12                     u4180:
  7254   011E12                     l4565:
  7255   011E12  90D8               	bcf	status,0,c
  7256   011E14  3607               	rlcf	___awdiv@quotient^0,f,c
  7257   011E16  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7258   011E18  5003               	movf	___awdiv@divisor^0,w,c
  7259   011E1A  5C01               	subwf	___awdiv@dividend^0,w,c
  7260   011E1C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7261   011E1E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7262   011E20  A0D8               	btfss	status,0,c
  7263   011E22  EF15  F08F         	goto	u4191
  7264   011E26  EF17  F08F         	goto	u4190
  7265   011E2A                     u4191:
  7266   011E2A  EF1C  F08F         	goto	l4573
  7267   011E2E                     u4190:
  7268   011E2E  5003               	movf	___awdiv@divisor^0,w,c
  7269   011E30  5E01               	subwf	___awdiv@dividend^0,f,c
  7270   011E32  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7271   011E34  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7272   011E36  8007               	bsf	___awdiv@quotient^0,0,c
  7273   011E38                     l4573:
  7274   011E38  90D8               	bcf	status,0,c
  7275   011E3A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7276   011E3C  3203               	rrcf	___awdiv@divisor^0,f,c
  7277   011E3E  2E05               	decfsz	___awdiv@counter^0,f,c
  7278   011E40  EF09  F08F         	goto	l4565
  7279   011E44                     l4577:
  7280   011E44  5006               	movf	___awdiv@sign^0,w,c
  7281   011E46  B4D8               	btfsc	status,2,c
  7282   011E48  EF28  F08F         	goto	u4201
  7283   011E4C  EF2A  F08F         	goto	u4200
  7284   011E50                     u4201:
  7285   011E50  EF2E  F08F         	goto	l4581
  7286   011E54                     u4200:
  7287   011E54  6C07               	negf	___awdiv@quotient^0,c
  7288   011E56  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7289   011E58  B0D8               	btfsc	status,0,c
  7290   011E5A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7291   011E5C                     l4581:
  7292   011E5C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7293   011E60  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7294   011E64  0012               	return		;funcret
  7295   011E66                     __end_of___awdiv:
  7296                           	callstack 0
  7297                           
  7298 ;; *************** function _sendStringSerial4 *****************
  7299 ;; Defined at:
  7300 ;;		line 41 in file "serial.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  string          2    1[COMRAM] PTR unsigned char 
  7303 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), STR_18(26), STR_17(23), 
  7304 ;;		 -> STR_16(24), STR_15(22), calibration_routine@cal_state(20), test@led_state(50), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;Total ram usage:        2 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; Hardware stack levels required when called: 1
  7323 ;; This function calls:
  7324 ;;		_sendCharSerial4
  7325 ;; This function is called by:
  7326 ;;		_test
  7327 ;;		_calibration_routine
  7328 ;;		_send2USART
  7329 ;;		_decision
  7330 ;;		_sendAllReadings
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text32
  7335   0122FA                     __ptext32:
  7336                           	callstack 0
  7337   0122FA                     _sendStringSerial4:
  7338                           	callstack 28
  7339   0122FA                     
  7340                           ;serial.c: 44:     while(*string != 0){
  7341   0122FA  EF98  F091         	goto	l4853
  7342   0122FE                     l4847:
  7343                           
  7344                           ;serial.c: 46:   sendCharSerial4(*string++);
  7345   0122FE  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  7346   012302  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  7347   012306  0E00               	movlw	low (__mediumconst shr (0+16))
  7348   012308  6EF8               	movwf	tblptru,c
  7349   01230A  0E0D               	movlw	(high __ramtop+-1)
  7350   01230C  64F7               	cpfsgt	tblptrh,c
  7351   01230E  D003               	bra	u4557
  7352   012310  0008               	tblrd		*
  7353   012312  50F5               	movf	tablat,w,c
  7354   012314  D005               	bra	u4550
  7355   012316                     u4557:
  7356   012316  CFF6 FFE9          	movff	tblptrl,fsr0l
  7357   01231A  CFF7 FFEA          	movff	tblptrh,fsr0h
  7358   01231E  50EF               	movf	indf0,w,c
  7359   012320                     u4550:
  7360   012320  ECE7  F093         	call	_sendCharSerial4
  7361   012324  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7362   012326  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7363   012328                     
  7364                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  7365   012328  0E6A               	movlw	106
  7366   01232A                     u5057:
  7367   01232A  2EE8               	decfsz	wreg,f,c
  7368   01232C  D7FE               	bra	u5057
  7369   01232E  D000               	nop2	
  7370   012330                     l4853:
  7371                           
  7372                           ;serial.c: 44:     while(*string != 0){
  7373   012330  C002  FFF6         	movff	sendStringSerial4@string,tblptrl
  7374   012334  C003  FFF7         	movff	sendStringSerial4@string+1,tblptrh
  7375   012338  0E00               	movlw	low (__mediumconst shr (0+16))
  7376   01233A  6EF8               	movwf	tblptru,c
  7377   01233C  0E0D               	movlw	(high __ramtop+-1)
  7378   01233E  64F7               	cpfsgt	tblptrh,c
  7379   012340  D003               	bra	u4567
  7380   012342  0008               	tblrd		*
  7381   012344  50F5               	movf	tablat,w,c
  7382   012346  D005               	bra	u4560
  7383   012348                     u4567:
  7384   012348  CFF6 FFE9          	movff	tblptrl,fsr0l
  7385   01234C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7386   012350  50EF               	movf	indf0,w,c
  7387   012352                     u4560:
  7388   012352  0900               	iorlw	0
  7389   012354  A4D8               	btfss	status,2,c
  7390   012356  EFAF  F091         	goto	u4571
  7391   01235A  EFB1  F091         	goto	u4570
  7392   01235E                     u4571:
  7393   01235E  EF7F  F091         	goto	l4847
  7394   012362                     u4570:
  7395   012362  0012               	return		;funcret
  7396   012364                     __end_of_sendStringSerial4:
  7397                           	callstack 0
  7398                           
  7399 ;; *************** function _sendCharSerial4 *****************
  7400 ;; Defined at:
  7401 ;;		line 35 in file "serial.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  charToSend      1    wreg     unsigned char 
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;  charToSend      1    0[COMRAM] unsigned char 
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;Total ram usage:        1 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_sendStringSerial4
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text33
  7429   0127CE                     __ptext33:
  7430                           	callstack 0
  7431   0127CE                     _sendCharSerial4:
  7432                           	callstack 28
  7433                           
  7434                           ;incstack = 0
  7435                           ;sendCharSerial4@charToSend stored from wreg
  7436   0127CE  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7437   0127D0                     l488:
  7438   0127D0  010E               	movlb	14	; () banked
  7439   0127D2  A537               	btfss	55,2,b	;volatile
  7440   0127D4  EFEE  F093         	goto	u4531
  7441   0127D8  EFF0  F093         	goto	u4530
  7442   0127DC                     u4531:
  7443   0127DC  EFE8  F093         	goto	l488
  7444   0127E0                     u4530:
  7445   0127E0                     
  7446                           ; BSR set to: 14
  7447                           ;serial.c: 37:     TX4REG = charToSend;
  7448   0127E0  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7449   0127E4                     
  7450                           ; BSR set to: 14
  7451   0127E4  0012               	return		;funcret
  7452   0127E6                     __end_of_sendCharSerial4:
  7453                           	callstack 0
  7454                           
  7455 ;; *************** function _color_read_Red *****************
  7456 ;; Defined at:
  7457 ;;		line 32 in file "color.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;		None
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  tmp             2    9[COMRAM] unsigned int 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  2    4[COMRAM] unsigned int 
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;Total ram usage:        7 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 2
  7478 ;; This function calls:
  7479 ;;		_I2C_2_Master_Read
  7480 ;;		_I2C_2_Master_RepStart
  7481 ;;		_I2C_2_Master_Start
  7482 ;;		_I2C_2_Master_Stop
  7483 ;;		_I2C_2_Master_Write
  7484 ;; This function is called by:
  7485 ;;		_calibration_routine
  7486 ;;		_reading_values
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text34
  7491   0123BA                     __ptext34:
  7492                           	callstack 0
  7493   0123BA                     _color_read_Red:
  7494                           	callstack 26
  7495   0123BA                     
  7496                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7497   0123BA  ECFE  F093         	call	_I2C_2_Master_Start	;wreg free
  7498                           
  7499                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7500   0123BE  0E52               	movlw	82
  7501   0123C0  ECF3  F093         	call	_I2C_2_Master_Write
  7502                           
  7503                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7504   0123C4  0EB6               	movlw	182
  7505   0123C6  ECF3  F093         	call	_I2C_2_Master_Write
  7506                           
  7507                           ;color.c: 38:  I2C_2_Master_RepStart();
  7508   0123CA  EC03  F094         	call	_I2C_2_Master_RepStart	;wreg free
  7509                           
  7510                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7511   0123CE  0E53               	movlw	83
  7512   0123D0  ECF3  F093         	call	_I2C_2_Master_Write
  7513                           
  7514                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7515   0123D4  0E01               	movlw	1
  7516   0123D6  ECC3  F092         	call	_I2C_2_Master_Read
  7517   0123DA  6E07               	movwf	??_color_read_Red^0,c
  7518   0123DC  5007               	movf	??_color_read_Red^0,w,c
  7519   0123DE  6E0A               	movwf	color_read_Red@tmp^0,c
  7520   0123E0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7521                           
  7522                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7523   0123E2  0E00               	movlw	0
  7524   0123E4  ECC3  F092         	call	_I2C_2_Master_Read
  7525   0123E8  6E07               	movwf	??_color_read_Red^0,c
  7526   0123EA  5007               	movf	??_color_read_Red^0,w,c
  7527   0123EC  6E09               	movwf	(??_color_read_Red+2)^0,c
  7528   0123EE  6A08               	clrf	(??_color_read_Red+1)^0,c
  7529   0123F0  500A               	movf	color_read_Red@tmp^0,w,c
  7530   0123F2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7531   0123F4  6E0A               	movwf	color_read_Red@tmp^0,c
  7532   0123F6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7533   0123F8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7534   0123FA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7535                           
  7536                           ;color.c: 42:  I2C_2_Master_Stop();
  7537   0123FC  ECF9  F093         	call	_I2C_2_Master_Stop	;wreg free
  7538   012400                     
  7539                           ;color.c: 43:  return tmp;
  7540   012400  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7541   012404  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7542   012408  0012               	return		;funcret
  7543   01240A                     __end_of_color_read_Red:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _color_read_Green *****************
  7547 ;; Defined at:
  7548 ;;		line 46 in file "color.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  tmp             2    9[COMRAM] unsigned int 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  2    4[COMRAM] unsigned int 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        7 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; Hardware stack levels required when called: 2
  7569 ;; This function calls:
  7570 ;;		_I2C_2_Master_Read
  7571 ;;		_I2C_2_Master_RepStart
  7572 ;;		_I2C_2_Master_Start
  7573 ;;		_I2C_2_Master_Stop
  7574 ;;		_I2C_2_Master_Write
  7575 ;; This function is called by:
  7576 ;;		_calibration_routine
  7577 ;;		_reading_values
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text35
  7582   01240A                     __ptext35:
  7583                           	callstack 0
  7584   01240A                     _color_read_Green:
  7585                           	callstack 26
  7586   01240A                     
  7587                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7588   01240A  ECFE  F093         	call	_I2C_2_Master_Start	;wreg free
  7589                           
  7590                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7591   01240E  0E52               	movlw	82
  7592   012410  ECF3  F093         	call	_I2C_2_Master_Write
  7593                           
  7594                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7595   012414  0EB8               	movlw	184
  7596   012416  ECF3  F093         	call	_I2C_2_Master_Write
  7597                           
  7598                           ;color.c: 52:  I2C_2_Master_RepStart();
  7599   01241A  EC03  F094         	call	_I2C_2_Master_RepStart	;wreg free
  7600                           
  7601                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7602   01241E  0E53               	movlw	83
  7603   012420  ECF3  F093         	call	_I2C_2_Master_Write
  7604                           
  7605                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7606   012424  0E01               	movlw	1
  7607   012426  ECC3  F092         	call	_I2C_2_Master_Read
  7608   01242A  6E07               	movwf	??_color_read_Green^0,c
  7609   01242C  5007               	movf	??_color_read_Green^0,w,c
  7610   01242E  6E0A               	movwf	color_read_Green@tmp^0,c
  7611   012430  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7612                           
  7613                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7614   012432  0E00               	movlw	0
  7615   012434  ECC3  F092         	call	_I2C_2_Master_Read
  7616   012438  6E07               	movwf	??_color_read_Green^0,c
  7617   01243A  5007               	movf	??_color_read_Green^0,w,c
  7618   01243C  6E09               	movwf	(??_color_read_Green+2)^0,c
  7619   01243E  6A08               	clrf	(??_color_read_Green+1)^0,c
  7620   012440  500A               	movf	color_read_Green@tmp^0,w,c
  7621   012442  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7622   012444  6E0A               	movwf	color_read_Green@tmp^0,c
  7623   012446  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7624   012448  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7625   01244A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7626                           
  7627                           ;color.c: 56:  I2C_2_Master_Stop();
  7628   01244C  ECF9  F093         	call	_I2C_2_Master_Stop	;wreg free
  7629   012450                     
  7630                           ;color.c: 57:  return tmp;
  7631   012450  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7632   012454  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7633   012458  0012               	return		;funcret
  7634   01245A                     __end_of_color_read_Green:
  7635                           	callstack 0
  7636                           
  7637 ;; *************** function _color_read_Clear *****************
  7638 ;; Defined at:
  7639 ;;		line 75 in file "color.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;  tmp             2    9[COMRAM] unsigned int 
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2    4[COMRAM] unsigned int 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7657 ;;Total ram usage:        7 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 2
  7660 ;; This function calls:
  7661 ;;		_I2C_2_Master_Read
  7662 ;;		_I2C_2_Master_RepStart
  7663 ;;		_I2C_2_Master_Start
  7664 ;;		_I2C_2_Master_Stop
  7665 ;;		_I2C_2_Master_Write
  7666 ;; This function is called by:
  7667 ;;		_calibration_routine
  7668 ;;		_reading_values
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text36
  7673   01245A                     __ptext36:
  7674                           	callstack 0
  7675   01245A                     _color_read_Clear:
  7676                           	callstack 26
  7677   01245A                     
  7678                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  7679   01245A  ECFE  F093         	call	_I2C_2_Master_Start	;wreg free
  7680                           
  7681                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  7682   01245E  0E52               	movlw	82
  7683   012460  ECF3  F093         	call	_I2C_2_Master_Write
  7684                           
  7685                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  7686   012464  0EB4               	movlw	180
  7687   012466  ECF3  F093         	call	_I2C_2_Master_Write
  7688                           
  7689                           ;color.c: 81:  I2C_2_Master_RepStart();
  7690   01246A  EC03  F094         	call	_I2C_2_Master_RepStart	;wreg free
  7691                           
  7692                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  7693   01246E  0E53               	movlw	83
  7694   012470  ECF3  F093         	call	_I2C_2_Master_Write
  7695                           
  7696                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  7697   012474  0E01               	movlw	1
  7698   012476  ECC3  F092         	call	_I2C_2_Master_Read
  7699   01247A  6E07               	movwf	??_color_read_Clear^0,c
  7700   01247C  5007               	movf	??_color_read_Clear^0,w,c
  7701   01247E  6E0A               	movwf	color_read_Clear@tmp^0,c
  7702   012480  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7703                           
  7704                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7705   012482  0E00               	movlw	0
  7706   012484  ECC3  F092         	call	_I2C_2_Master_Read
  7707   012488  6E07               	movwf	??_color_read_Clear^0,c
  7708   01248A  5007               	movf	??_color_read_Clear^0,w,c
  7709   01248C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7710   01248E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7711   012490  500A               	movf	color_read_Clear@tmp^0,w,c
  7712   012492  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7713   012494  6E0A               	movwf	color_read_Clear@tmp^0,c
  7714   012496  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7715   012498  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7716   01249A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7717                           
  7718                           ;color.c: 85:  I2C_2_Master_Stop();
  7719   01249C  ECF9  F093         	call	_I2C_2_Master_Stop	;wreg free
  7720   0124A0                     
  7721                           ;color.c: 86:  return tmp;
  7722   0124A0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7723   0124A4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7724   0124A8  0012               	return		;funcret
  7725   0124AA                     __end_of_color_read_Clear:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function _color_read_Blue *****************
  7729 ;; Defined at:
  7730 ;;		line 60 in file "color.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;		None
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;  tmp             2    9[COMRAM] unsigned int 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  2    4[COMRAM] unsigned int 
  7737 ;; Registers used:
  7738 ;;		wreg, status,2, status,0, cstack
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7747 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7748 ;;Total ram usage:        7 bytes
  7749 ;; Hardware stack levels used: 1
  7750 ;; Hardware stack levels required when called: 2
  7751 ;; This function calls:
  7752 ;;		_I2C_2_Master_Read
  7753 ;;		_I2C_2_Master_RepStart
  7754 ;;		_I2C_2_Master_Start
  7755 ;;		_I2C_2_Master_Stop
  7756 ;;		_I2C_2_Master_Write
  7757 ;; This function is called by:
  7758 ;;		_calibration_routine
  7759 ;;		_reading_values
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           	psect	text37
  7764   0124AA                     __ptext37:
  7765                           	callstack 0
  7766   0124AA                     _color_read_Blue:
  7767                           	callstack 26
  7768   0124AA                     
  7769                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7770   0124AA  ECFE  F093         	call	_I2C_2_Master_Start	;wreg free
  7771                           
  7772                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7773   0124AE  0E52               	movlw	82
  7774   0124B0  ECF3  F093         	call	_I2C_2_Master_Write
  7775                           
  7776                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7777   0124B4  0EBA               	movlw	186
  7778   0124B6  ECF3  F093         	call	_I2C_2_Master_Write
  7779                           
  7780                           ;color.c: 66:  I2C_2_Master_RepStart();
  7781   0124BA  EC03  F094         	call	_I2C_2_Master_RepStart	;wreg free
  7782                           
  7783                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7784   0124BE  0E53               	movlw	83
  7785   0124C0  ECF3  F093         	call	_I2C_2_Master_Write
  7786                           
  7787                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7788   0124C4  0E01               	movlw	1
  7789   0124C6  ECC3  F092         	call	_I2C_2_Master_Read
  7790   0124CA  6E07               	movwf	??_color_read_Blue^0,c
  7791   0124CC  5007               	movf	??_color_read_Blue^0,w,c
  7792   0124CE  6E0A               	movwf	color_read_Blue@tmp^0,c
  7793   0124D0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7794                           
  7795                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7796   0124D2  0E00               	movlw	0
  7797   0124D4  ECC3  F092         	call	_I2C_2_Master_Read
  7798   0124D8  6E07               	movwf	??_color_read_Blue^0,c
  7799   0124DA  5007               	movf	??_color_read_Blue^0,w,c
  7800   0124DC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7801   0124DE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7802   0124E0  500A               	movf	color_read_Blue@tmp^0,w,c
  7803   0124E2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7804   0124E4  6E0A               	movwf	color_read_Blue@tmp^0,c
  7805   0124E6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7806   0124E8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7807   0124EA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7808                           
  7809                           ;color.c: 70:  I2C_2_Master_Stop();
  7810   0124EC  ECF9  F093         	call	_I2C_2_Master_Stop	;wreg free
  7811   0124F0                     
  7812                           ;color.c: 71:  return tmp;
  7813   0124F0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7814   0124F4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7815   0124F8  0012               	return		;funcret
  7816   0124FA                     __end_of_color_read_Blue:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function _I2C_2_Master_Write *****************
  7820 ;; Defined at:
  7821 ;;		line 45 in file "i2c.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  data_byte       1    wreg     unsigned char 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  data_byte       1    1[COMRAM] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;Total ram usage:        1 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 1
  7842 ;; This function calls:
  7843 ;;		_I2C_2_Master_Idle
  7844 ;; This function is called by:
  7845 ;;		_color_writetoaddr
  7846 ;;		_color_read_Red
  7847 ;;		_color_read_Green
  7848 ;;		_color_read_Blue
  7849 ;;		_color_read_Clear
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text38
  7854   0127E6                     __ptext38:
  7855                           	callstack 0
  7856   0127E6                     _I2C_2_Master_Write:
  7857                           	callstack 26
  7858                           
  7859                           ;incstack = 0
  7860                           ;I2C_2_Master_Write@data_byte stored from wreg
  7861   0127E6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7862   0127E8                     
  7863                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7864   0127E8  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  7865   0127EC                     
  7866                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7867   0127EC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7868   0127F0  0012               	return		;funcret
  7869   0127F2                     __end_of_I2C_2_Master_Write:
  7870                           	callstack 0
  7871                           
  7872 ;; *************** function _I2C_2_Master_Stop *****************
  7873 ;; Defined at:
  7874 ;;		line 39 in file "i2c.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;		None
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;		None
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      void 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;Total ram usage:        0 bytes
  7893 ;; Hardware stack levels used: 1
  7894 ;; Hardware stack levels required when called: 1
  7895 ;; This function calls:
  7896 ;;		_I2C_2_Master_Idle
  7897 ;; This function is called by:
  7898 ;;		_color_writetoaddr
  7899 ;;		_color_read_Red
  7900 ;;		_color_read_Green
  7901 ;;		_color_read_Blue
  7902 ;;		_color_read_Clear
  7903 ;; This function uses a non-reentrant model
  7904 ;;
  7905                           
  7906                           	psect	text39
  7907   0127F2                     __ptext39:
  7908                           	callstack 0
  7909   0127F2                     _I2C_2_Master_Stop:
  7910                           	callstack 26
  7911   0127F2                     
  7912                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7913   0127F2  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  7914   0127F6                     
  7915                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7916   0127F6  010E               	movlb	14	; () banked
  7917   0127F8  85DA               	bsf	218,2,b	;volatile
  7918   0127FA                     
  7919                           ; BSR set to: 14
  7920   0127FA  0012               	return		;funcret
  7921   0127FC                     __end_of_I2C_2_Master_Stop:
  7922                           	callstack 0
  7923                           
  7924 ;; *************** function _I2C_2_Master_Start *****************
  7925 ;; Defined at:
  7926 ;;		line 27 in file "i2c.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;		None
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;Total ram usage:        0 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 1
  7947 ;; This function calls:
  7948 ;;		_I2C_2_Master_Idle
  7949 ;; This function is called by:
  7950 ;;		_color_writetoaddr
  7951 ;;		_color_read_Red
  7952 ;;		_color_read_Green
  7953 ;;		_color_read_Blue
  7954 ;;		_color_read_Clear
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text40
  7959   0127FC                     __ptext40:
  7960                           	callstack 0
  7961   0127FC                     _I2C_2_Master_Start:
  7962                           	callstack 26
  7963   0127FC                     
  7964                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7965   0127FC  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  7966   012800                     
  7967                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7968   012800  010E               	movlb	14	; () banked
  7969   012802  81DA               	bsf	218,0,b	;volatile
  7970   012804                     
  7971                           ; BSR set to: 14
  7972   012804  0012               	return		;funcret
  7973   012806                     __end_of_I2C_2_Master_Start:
  7974                           	callstack 0
  7975                           
  7976 ;; *************** function _I2C_2_Master_RepStart *****************
  7977 ;; Defined at:
  7978 ;;		line 33 in file "i2c.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;		None
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, status,2, status,0, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;Total ram usage:        0 bytes
  7997 ;; Hardware stack levels used: 1
  7998 ;; Hardware stack levels required when called: 1
  7999 ;; This function calls:
  8000 ;;		_I2C_2_Master_Idle
  8001 ;; This function is called by:
  8002 ;;		_color_read_Red
  8003 ;;		_color_read_Green
  8004 ;;		_color_read_Blue
  8005 ;;		_color_read_Clear
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text41
  8010   012806                     __ptext41:
  8011                           	callstack 0
  8012   012806                     _I2C_2_Master_RepStart:
  8013                           	callstack 26
  8014   012806                     
  8015                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8016   012806  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  8017   01280A                     
  8018                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8019   01280A  010E               	movlb	14	; () banked
  8020   01280C  83DA               	bsf	218,1,b	;volatile
  8021   01280E                     
  8022                           ; BSR set to: 14
  8023   01280E  0012               	return		;funcret
  8024   012810                     __end_of_I2C_2_Master_RepStart:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _I2C_2_Master_Read *****************
  8028 ;; Defined at:
  8029 ;;		line 51 in file "i2c.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  ack             1    wreg     unsigned char 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  ack             1    2[COMRAM] unsigned char 
  8034 ;;  tmp             1    3[COMRAM] unsigned char 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      unsigned char 
  8037 ;; Registers used:
  8038 ;;		wreg, status,2, status,0, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;Total ram usage:        3 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 1
  8051 ;; This function calls:
  8052 ;;		_I2C_2_Master_Idle
  8053 ;; This function is called by:
  8054 ;;		_color_read_Red
  8055 ;;		_color_read_Green
  8056 ;;		_color_read_Blue
  8057 ;;		_color_read_Clear
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text42
  8062   012586                     __ptext42:
  8063                           	callstack 0
  8064   012586                     _I2C_2_Master_Read:
  8065                           	callstack 26
  8066                           
  8067                           ; BSR set to: 14
  8068                           ;incstack = 0
  8069                           ;I2C_2_Master_Read@ack stored from wreg
  8070   012586  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  8071   012588                     
  8072                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8073   012588  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  8074   01258C                     
  8075                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8076   01258C  010E               	movlb	14	; () banked
  8077   01258E  87DA               	bsf	218,3,b	;volatile
  8078                           
  8079                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8080   012590  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  8081   012594                     
  8082                           ;i2c.c: 57:   tmp = SSP2BUF;
  8083   012594  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8084                           
  8085                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8086   012598  EC82  F093         	call	_I2C_2_Master_Idle	;wreg free
  8087   01259C                     
  8088                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8089   01259C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8090   01259E  B4D8               	btfsc	status,2,c
  8091   0125A0  EFD4  F092         	goto	u4511
  8092   0125A4  EFD8  F092         	goto	u4510
  8093   0125A8                     u4511:
  8094   0125A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8095   0125AA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8096   0125AC  EFD9  F092         	goto	u4528
  8097   0125B0                     u4510:
  8098   0125B0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8099   0125B2                     u4528:
  8100   0125B2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8101   0125B4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8102   0125B6  010E               	movlb	14	; () banked
  8103   0125B8  51DA               	movf	218,w,b	;volatile
  8104   0125BA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8105   0125BC  0BDF               	andlw	-33
  8106   0125BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8107   0125C0  6FDA               	movwf	218,b	;volatile
  8108   0125C2                     
  8109                           ; BSR set to: 14
  8110                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8111   0125C2  89DA               	bsf	218,4,b	;volatile
  8112   0125C4                     
  8113                           ; BSR set to: 14
  8114                           ;i2c.c: 61:   return tmp;
  8115   0125C4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8116   0125C6                     
  8117                           ; BSR set to: 14
  8118   0125C6  0012               	return		;funcret
  8119   0125C8                     __end_of_I2C_2_Master_Read:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function _I2C_2_Master_Idle *****************
  8123 ;; Defined at:
  8124 ;;		line 22 in file "i2c.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8140 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8142 ;;Total ram usage:        1 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; This function calls:
  8145 ;;		Nothing
  8146 ;; This function is called by:
  8147 ;;		_I2C_2_Master_Start
  8148 ;;		_I2C_2_Master_RepStart
  8149 ;;		_I2C_2_Master_Stop
  8150 ;;		_I2C_2_Master_Write
  8151 ;;		_I2C_2_Master_Read
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text43
  8156   012704                     __ptext43:
  8157                           	callstack 0
  8158   012704                     _I2C_2_Master_Idle:
  8159                           	callstack 26
  8160   012704                     l177:
  8161   012704  010E               	movlb	14	; () banked
  8162   012706  B5D8               	btfsc	216,2,b	;volatile
  8163   012708  EF88  F093         	goto	u4441
  8164   01270C  EF8A  F093         	goto	u4440
  8165   012710                     u4441:
  8166   012710  EF82  F093         	goto	l177
  8167   012714                     u4440:
  8168   012714                     
  8169                           ; BSR set to: 14
  8170   012714  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8171   012718  0E1F               	movlw	31
  8172   01271A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8173   01271C  A4D8               	btfss	status,2,c
  8174   01271E  EF93  F093         	goto	u4451
  8175   012722  EF95  F093         	goto	u4450
  8176   012726                     u4451:
  8177   012726  EF82  F093         	goto	l177
  8178   01272A                     u4450:
  8179   01272A                     
  8180                           ; BSR set to: 14
  8181   01272A  0012               	return		;funcret
  8182   01272C                     __end_of_I2C_2_Master_Idle:
  8183                           	callstack 0
  8184                           
  8185 ;; *************** function _ADC_init *****************
  8186 ;; Defined at:
  8187 ;;		line 9 in file "ADC.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  1    wreg      void 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;Total ram usage:        0 bytes
  8206 ;; Hardware stack levels used: 1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_main
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text44
  8215   0127B4                     __ptext44:
  8216                           	callstack 0
  8217   0127B4                     _ADC_init:
  8218                           	callstack 30
  8219   0127B4                     
  8220                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8221   0127B4  8C86               	bsf	134,6,c	;volatile
  8222                           
  8223                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8224   0127B6  010E               	movlb	14	; () banked
  8225   0127B8  8DB4               	bsf	180,6,b	;volatile
  8226                           
  8227                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8228   0127BA  010F               	movlb	15	; () banked
  8229   0127BC  9958               	bcf	88,4,b	;volatile
  8230   0127BE                     
  8231                           ; BSR set to: 15
  8232                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8233   0127BE  0EFC               	movlw	-4
  8234   0127C0  1758               	andwf	88,f,b	;volatile
  8235                           
  8236                           ;ADC.c: 17:     ADPCH=0b101110;
  8237   0127C2  0E2E               	movlw	46
  8238   0127C4  6F5F               	movwf	95,b	;volatile
  8239   0127C6                     
  8240                           ; BSR set to: 15
  8241                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8242   0127C6  9460               	bcf	96,2,c	;volatile
  8243   0127C8                     
  8244                           ; BSR set to: 15
  8245                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8246   0127C8  8860               	bsf	96,4,c	;volatile
  8247   0127CA                     
  8248                           ; BSR set to: 15
  8249                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8250   0127CA  8E60               	bsf	96,7,c	;volatile
  8251   0127CC                     
  8252                           ; BSR set to: 15
  8253   0127CC  0012               	return		;funcret
  8254   0127CE                     __end_of_ADC_init:
  8255                           	callstack 0
  8256                           
  8257                           	psect	rparam
  8258   000000                     
  8259                           	psect	config
  8260                           
  8261                           ;Config register CONFIG1L @ 0x300000
  8262                           ;	External Oscillator mode Selection bits
  8263                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8264                           ;	Power-up default value for COSC bits
  8265                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8266   300000                     	org	3145728
  8267   300000  AA                 	db	170
  8268                           
  8269                           ;Config register CONFIG1H @ 0x300001
  8270                           ;	unspecified, using default values
  8271                           ;	Clock Out Enable bit
  8272                           ;	CLKOUTEN = 0x1, unprogrammed default
  8273                           ;	Clock Switch Enable bit
  8274                           ;	CSWEN = 0x1, unprogrammed default
  8275                           ;	Fail-Safe Clock Monitor Enable bit
  8276                           ;	FCMEN = 0x1, unprogrammed default
  8277   300001                     	org	3145729
  8278   300001  FF                 	db	255
  8279                           
  8280                           ;Config register CONFIG3L @ 0x300004
  8281                           ;	WDT Period Select bits
  8282                           ;	WDTCPS = 0x1F, unprogrammed default
  8283                           ;	WDT operating mode
  8284                           ;	WDTE = OFF, WDT Disabled
  8285   300004                     	org	3145732
  8286   300004  9F                 	db	159
  8287                           
  8288                           ;Config register CONFIG3H @ 0x300005
  8289                           ;	unspecified, using default values
  8290                           ;	WDT Window Select bits
  8291                           ;	WDTCWS = 0x7, unprogrammed default
  8292                           ;	WDT input clock selector
  8293                           ;	WDTCCS = 0x7, unprogrammed default
  8294   300005                     	org	3145733
  8295   300005  FF                 	db	255
  8296                           tosu	equ	0xFFF
  8297                           tosh	equ	0xFFE
  8298                           tosl	equ	0xFFD
  8299                           stkptr	equ	0xFFC
  8300                           pclatu	equ	0xFFB
  8301                           pclath	equ	0xFFA
  8302                           pcl	equ	0xFF9
  8303                           tblptru	equ	0xFF8
  8304                           tblptrh	equ	0xFF7
  8305                           tblptrl	equ	0xFF6
  8306                           tablat	equ	0xFF5
  8307                           prodh	equ	0xFF4
  8308                           prodl	equ	0xFF3
  8309                           indf0	equ	0xFEF
  8310                           postinc0	equ	0xFEE
  8311                           postdec0	equ	0xFED
  8312                           preinc0	equ	0xFEC
  8313                           plusw0	equ	0xFEB
  8314                           fsr0h	equ	0xFEA
  8315                           fsr0l	equ	0xFE9
  8316                           wreg	equ	0xFE8
  8317                           indf1	equ	0xFE7
  8318                           postinc1	equ	0xFE6
  8319                           postdec1	equ	0xFE5
  8320                           preinc1	equ	0xFE4
  8321                           plusw1	equ	0xFE3
  8322                           fsr1h	equ	0xFE2
  8323                           fsr1l	equ	0xFE1
  8324                           bsr	equ	0xFE0
  8325                           indf2	equ	0xFDF
  8326                           postinc2	equ	0xFDE
  8327                           postdec2	equ	0xFDD
  8328                           preinc2	equ	0xFDC
  8329                           plusw2	equ	0xFDB
  8330                           fsr2h	equ	0xFDA
  8331                           fsr2l	equ	0xFD9
  8332                           status	equ	0xFD8

Data Sizes:
    Strings     339
    Constant    0
    Data        1
    BSS         184
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     77      78
    BANK0           160    122     158
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(2) Largest target is 8
		 -> colorCalibration(BANK1[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(2) Largest target is 8
		 -> colorCalibration(BANK1[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedBack@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    reading_values@cCurr	PTR struct colors size(1) Largest target is 8
		 -> colorCurrent(BANK0[8]), 

    S2529$buffer	PTR unsigned char  size(2) Largest target is 0

    S2529$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> calibration_routine@cal_state(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), STR_15(CODE[22]), 
		 -> STR_16(CODE[24]), STR_17(CODE[23]), STR_18(CODE[26]), test@led_state(BANK0[50]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_19(CODE[21]), 
		 -> STR_2(CODE[19]), STR_20(CODE[12]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 50
		 -> calibration_routine@cal_state(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK0[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_19(CODE[21]), 
		 -> STR_2(CODE[19]), STR_20(CODE[12]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_19(CODE[21]), 
		 -> STR_2(CODE[19]), STR_20(CODE[12]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_19(CODE[21]), 
		 -> STR_2(CODE[19]), STR_20(CODE[12]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_calibration_routine
    _main->_test
    _test->_send2USART
    _send2USART->_sprintf
    _reading_values->_color_read_Blue
    _reading_values->_color_read_Clear
    _reading_values->_color_read_Green
    _reading_values->_color_read_Red
    _convert_rgb2hue->___fldiv
    ___flsub->___fladd
    ___fldiv->___flsub
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_test
    _test->_convert_rgb2hue

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   55327
                                             75 COMRAM     2     2      0
                           _ADC_init
                _calibration_routine
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                               _test
 ---------------------------------------------------------------------------------
 (1) _test                                                56    56      0   41377
                                             73 COMRAM     2     2      0
                                             68 BANK0     54    54      0
                    _convert_rgb2hue
                     _reading_values
                         _send2USART
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send2USART                                          52    50      2   12396
                                             71 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _reading_values                                       1     0      1     960
                                             11 COMRAM     1     0      1
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                     73    70      3   15427
                                             49 COMRAM     5     2      3
                                              0 BANK0     68    68      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     616
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3497
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1094
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     950
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 24    22      2   13393
                                             71 COMRAM     4     2      2
                                              0 BANK0     20    20      0
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   11019
                                             51 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4    8727
                                             45 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    8239
                                             33 COMRAM    12     9      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1572
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1132
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2    1176
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _test
     _convert_rgb2hue
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___xxtofl
     _reading_values
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _send2USART
       _sendStringSerial4
       _sprintf
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4D      4E       1       82.1%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     180      61        0.0%
DATA                 0      0     180       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 22:25:32 2024

               _color_read_Red 23BA                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
                 ___fldiv@sign 0029                _color_read_Blue 24AA                             l62 2794  
                           l71 24F8                             l65 2408                             l74 24A8  
                           l82 025C                             l59 2672                             l68 2458  
                           l84 026C                             l94 035E                             l86 02C6  
                           l96 036E                             l88 02D6                             l98 03C8  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003             convert_rgb2hue@max 0090  
           convert_rgb2hue@hue 0094             convert_rgb2hue@min 0088               _color_read_Clear 245A  
             _color_read_Green 240A                            l100 03D8                            l104 0676  
                          l121 13B8                            l130 14E0                            l123 13C6  
                          l132 14EE                            l124 1418                            l108 06EE  
                          l133 154C                            l109 070A                            l126 1426  
                          l118 1B96                            l127 147C                            l136 23B8  
                          l129 148A                            l180 272A                            l174 2702  
                          l183 2804                            l351 22F8                            l192 27F0  
                          l177 2704                            l290 27CC                            l186 280E  
                          l195 25C6                            l189 27FA                            l542 2774  
                          l545 2750                            l810 1D5A                            l491 27E4  
                          l804 2128                            l479 27B2                            l815 1DA0  
                          l488 27D0                            l497 2362                            l842 1C9C  
                          l776 1E64                            l789 207E                            _abs 2674  
                          _pad 21D4                            _hue 0164            convert_rgb2hue@cMax 0032  
                 ___awmod@sign 0006            convert_rgb2hue@diff 008C                            wreg 0FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 000A  
                         l1100 0AD2                           l1200 15A4                           l1115 253E  
                         l1203 1700                           ?_abs 0007                           l1300 26A6  
                         l1140 12AC                           l1132 11B2                           l1141 129A  
                         l1214 1698                           l1223 263E                           l1127 138E  
                         l1207 163C                           l1312 21D2                           l1320 2606  
                         l1129 11EE                           l1073 08FA                           l1138 1234  
                         l1090 0A14                           l1082 0BCA                           l1074 08E8  
                         l1323 2810                           l1243 220A                           l1251 1908  
                         l1163 0FF4                           l1075 08AE                           l1246 2248  
                         l1166 0E86                           l1159 0C90                           l1248 2268  
                         l1264 1A20                           l1272 1F1A                           l1176 0FB6  
                         l1168 0EFE                           l1169 0EEC                           l3201 070C  
                         l1099 0AE4                           l3211 0748                           l3203 0718  
                         l1268 1F12                           l1293 2584                           l3301 0908  
                         l3221 0778                           l3213 0758                           l3205 0726  
                         l1287 18A8                           l3311 094A                           l3303 0918  
                         l3231 07A2                           l3223 078A                           l3215 075A  
                         l3207 0728                           l1297 268E                           l3321 0978  
                         l3313 0958                           l3233 07B2                           l3241 07DC  
                         l3225 078C                           l3209 0738                           l3217 0762  
                         l3331 09E4                           l3323 0982                           l3315 0964  
                         l3307 092C                           l3251 0814                           l3243 07EC  
                         l3235 07C2                           l3227 0792                           l3219 0772  
                         l5101 1428                           l3501 1078                           l3333 09F4  
                         l3317 0968                           l3309 093C                           l3325 0988  
                         l3261 0828                           l3253 0818                           l3245 07FE  
                         l3237 07D2                           l3229 07A0                           l5111 148C  
                         l5103 1440                           l5031 2640                           l3503 1088  
                         l3511 10B2                           l3351 0A76                           l3343 0A4E  
                         l3327 09AE                           l3335 0A04                           l3319 0976  
                         l3271 083C                           l3263 082C                           l3255 081C  
                         l3247 080C                           l3239 07D4                           l4161 27CA  
                         l4153 27B4                           l5121 14F4                           l5113 14A4  
                         l5105 1458                           l5033 2644                           l3601 137C  
                         l3521 10F4                           l3513 10C2                           l3505 1098  
                         l3353 0A7E                           l3345 0A58                           l3337 0A2A  
                         l3329 09E2                           l3361 0AA2                           l3281 0850  
                         l3273 0840                           l3265 0830                           l3257 0820  
                         l3249 0810                           l5041 1A22                           l5201 1F1C  
                         l4155 27BE                           l5131 152A                           l5123 150C  
                         l5115 14BC                           l5107 145A                           l5035 264E  
                         l4171 27AE                           l4163 2796                           l3603 1382  
                         l3515 10D8                           l3507 10A8                           l3371 0AF4  
                         l3363 0AA6                           l3355 0A82                           l3347 0A66  
                         l3339 0A3A                           l3291 08C8                           l3283 087A  
                         l3275 0844                           l3267 0834                           l3259 0824  
                         l5051 1A44                           l5211 1F34                           l5203 1F20  
                         l4157 27C6                           l5133 1542                           l5125 1524  
                         l5117 14BE                           l5109 1472                           l5037 265E  
                         l4181 22A4                           l4173 27B0                           l4165 27A0  
                         l3605 1384                           l3541 1176                           l3533 112C  
                         l3517 10E8                           l3525 1108                           l3509 10AA  
                         l3701 0E96                           l3621 0BF8                           l3613 0BCC  
                         l3381 0B5A                           l3373 0B00                           l3365 0AB4  
                         l3357 0A92                           l3349 0A68                           l3293 08CC  
                         l3285 0896                           l3277 0848                           l3269 0838  
                         l5061 1AC8                           l5053 1A6E                           l5221 1F52  
                         l5213 1F3A                           l5205 1F24                           l4159 27C8  
                         l5127 1526                           l5119 14D6                           l5039 2668  
                         l4191 22E0                           l4183 22C8                           l4175 226A  
                         l4167 27A2                           l3551 11BC                           l3543 117E  
                         l3535 1146                           l3527 1118                           l3519 10F0  
                         l3703 0EA4                           l3631 0C34                           l3623 0C08  
                         l3615 0BD8                           l3391 0BA2                           l3383 0B6A  
                         l3375 0B0E                           l3367 0ACA                           l3359 0A94  
                         l3295 08DA                           l3287 08A6                           l3279 084C  
                         l5071 1B2C                           l5063 1ACE                           l5055 1A82  
                         l5047 1A2C                           l5231 1F7E                           l5223 1F5A  
                         l5215 1F3E                           l5207 1F28                           l4601 201E  
                         l4521 2170                           l4513 212A                           l5129 1528  
                         l4193 22EA                           l4185 22D2                           l4177 227A  
                         l4169 27AC                           l3561 1214                           l3553 11DA  
                         l3545 118E                           l3537 1156                           l3529 1118  
                         l3481 1012                           l3713 0F0E                           l3721 0F56  
                         l3705 0EA8                           l3641 0C6A                           l3633 0C3A  
                         l3625 0C18                           l3617 0BE6                           l3393 0BA4  
                         l3385 0B8A                           l3377 0B48                           l3297 08DC  
                         l3289 08BC                           l3801 1C02                           l5081 1B7A  
                         l5073 1B36                           l5065 1AF8                           l5057 1A88  
                         l5049 1A3E                           l5241 1F88                           l5233 1F80  
                         l5225 1F5E                           l5217 1F42                           l5209 1F28  
                         l4611 2058                           l4603 2026                           l4523 21A2  
                         l4515 213A                           l4531 25E2                           l5091 13C8  
                         l4195 22EC                           l4187 22D4                           l4179 22A0  
                         l3571 1252                           l3563 121A                           l3555 11DC  
                         l3547 11A2                           l3539 1166                           l3483 1022  
                         l3491 104C                           l3475 0FF6                           l3731 0FCA  
                         l3723 0F70                           l3715 0F1A                           l3707 0EB6  
                         l3643 0C7A                           l3635 0C48                           l3627 0C1E  
                         l3619 0BE8                           l3395 0BAA                           l3387 0B8E  
                         l3379 0B4A                           l3299 08E6                           l3811 1C32  
                         l3803 1C10                           l5083 1B80                           l5075 1B3E  
                         l5067 1B0E                           l5059 1AB2                           l5251 1F94  
                         l5243 1F8A                           l5235 1F82                           l5227 1F62  
                         l5219 1F4A                           l4541 1DA2                           l4605 2034  
                         l4613 205E                           l4517 214A                           l4533 25E6  
                         l4621 21D4                           l4701 1EDC                           l5093 13E0  
                         l5085 1390                           l4197 22F6                           l4189 22DE  
                         l3581 12BC                           l3573 1256                           l3565 1224  
                         l3557 11EC                           l3549 11B0                           l3493 105C  
                         l3485 1032                           l3477 1002                           l3733 0FD8  
                         l3725 0F84                           l3717 0F28                           l3709 0EE4  
                         l3661 0CFC                           l3653 0CC4                           l3645 0C80  
                         l3637 0C4A                           l3629 0C2E                           l3397 0BB8  
                         l3389 0B9C                           l3821 1C5C                           l3813 1C3C  
                         l5077 1B56                           l5069 1B14                           l5261 1FB2  
                         l5253 1F96                           l5245 1F8C                           l5237 1F84  
                         l5229 1F66                           ?_pad 000F                           l4551 1DCE  
                         l4543 1DA6                           l4615 206E                           l4607 204A  
                         l4519 2154                           l4527 25C8                           l4631 2226  
                         l4623 21E4                           l4535 272C                           l4703 1EE8  
                         l4711 1728                           l5095 13F4                           l5087 1396  
                         l3591 131E                           l3583 12C8                           l3575 1264  
                         l3567 1232                           l3559 11FE                           l3495 1062  
                         l3487 1042                           l3479 1010                           l3751 20AE  
                         l3735 0FDA                           l3727 0F9E                           l3719 0F52  
                         l3671 0D46                           l3663 0D14                           l3655 0CD0  
                         l3647 0CA0                           l3639 0C5A                           l3399 0BBA  
                         l3743 24FA                           l3823 1C6C                           l3831 1550  
                         l5079 1B62                           l5263 1FB4                           l5255 1F98  
                         l5247 1F8E                           l5239 1F86                           l4705 2704  
                         l4561 1DFC                           l4553 1DD6                           l4545 1DB4  
                         l4617 2076                           l4609 2052                           l4529 25D4  
                         l4633 222A                           l4625 21F4                           l4641 18AA  
                         l4537 2748                           l4721 1752                           l4713 1734  
                         l4801 254C                           l5097 13F6                           l5089 13AE  
                         l3593 1334                           l3585 12D6                           l3577 1292  
                         l3569 1244                           l3497 1068                           l3489 1044  
                         l3761 2126                           l3753 20BE                           l3729 0FBA  
                         l3737 0FE0                           l3681 0D9C                           l3673 0D56  
                         l3665 0D20                           l3657 0CDA                           l3649 0CB0  
                         l3745 250A                           l3825 1C7C                           l3809 1C28  
                         l3833 1560                           l5265 1FB8                           l5257 1FAE  
                         l5249 1F90                           l4707 2714                           l4811 2400  
                         l4571 1E36                           l4563 1E04                           l4555 1DDA  
                         l4547 1DBC                           l4635 2258                           l4627 2202  
                         l4651 18E0                           l4643 18AE                           l4731 17B0  
                         l4723 1762                           l4715 1742                           l4803 255C  
                         l5099 140E                           l3595 134E                           l3587 1300  
                         l3499 1076                           l3755 20EC                           l3771 1D0A  
                         l3739 0FE4                           l3691 0E40                           l3683 0DB8  
                         l3675 0D62                           l3667 0D2C                           l3659 0CF0  
                         l3827 1C8C                           l3819 1C50                           l3851 1626  
                         l3843 15DE                           l3835 156E                           l5267 1FC4  
                         l5259 1FB0                           l4821 24AA                           l4581 1E5C  
                         l4573 1E38                           l4565 1E12                           l4557 1DE2  
                         l4549 1DC0                           l4637 2674                           l4629 2216  
                         l4661 191A                           l4653 18F0                           l4645 18C2  
                         l4741 180C                           l4733 17C4                           l5373 1792  
                         l4717 1746                           l4709 1702                           l4805 257C  
                         l3597 136A                           l3589 1304                           l3757 20FC  
                         l3749 2080                           l3781 1D98                           l3773 1D1A  
                         l3765 1C9E                           l3693 0E4E                           l3685 0DC4  
                         l3677 0D72                           l3669 0D3A                           l3861 16A6  
                         l3853 1632                           l3845 15E6                           l3837 15B4  
                         l4901 02B2                           l4823 24F0                           l4815 240A  
                         l4575 1E3E                           l4567 1E18                           l4559 1DF4  
                         l4591 1FEA                           l4639 2682                           l4663 1920  
                         l4671 1978                           l4655 18FC                           l4647 18CA  
                         l4751 1872                           l4743 182C                           l4735 17D4  
                         l4727 176A                           l4719 174E                           l3599 136E  
                         l3759 2120                           l3783 1D9E                           l3775 1D28  
                         l3767 1CCC                           l3695 0E6C                           l3687 0DE0  
                         l3679 0D8C                           l3871 16EE                           l3863 16A8  
                         l3855 166E                           l3847 15F2                           l3839 15CA  
                         l4911 03B4                           l4903 02E6                           l4817 2450  
                         l4809 23BA                           l4569 1E2E                           l4577 1E44  
                         l4593 1FEE                           l4585 1FD0                           l4673 1992  
                         l4681 19DE                           l4665 1952                           l4657 1904  
                         l4649 18DA                           l4745 1844                           l4737 17DE  
                         l4729 17A0                           l4841 2634                           l4833 2608  
                         l3881 26EA                           l3777 1D3A                           l3769 1CDC  
                         l3697 0E76                           l3689 0E0A                           l3793 1BC2  
                         l3873 16F0                           l3865 16AC                           l3857 167A  
                         l3849 1624                           l4921 04F2                           l4913 03E8  
                         l4905 0318                           l4771 27EC                           l4827 245A  
                         l4851 2328                           l4579 1E54                           l4595 1FFC  
                         l4587 1FD4                           l4683 19EE                           l4675 19A4  
                         l4667 1956                           l4659 1910                           l4691 1E66  
                         l4747 185E                           l4739 17EC                           l4755 1882  
                         l4835 2610                           l3883 26EC                           l3779 1D48  
                         l3699 0E84                           l3795 1BEC                           l3787 1B98  
                         l3867 16D0                           l3859 1688                           l4931 06AA  
                         l4923 0524                           l4915 044E                           l4907 034A  
                         l4781 2588                           l4765 27FC                           l4773 27F2  
                         l4829 24A0                           l4853 2330                           l4845 22FA  
                         l4597 2004                           l4589 1FE2                           l4685 19F4  
                         l4677 19B4                           l4669 195C                           l4693 1E6E  
                         l4837 2618                           l3885 26EE                           l3877 26DA  
                         l3797 1BEE                           l3789 1BAE                           l3869 16E0  
                         l4933 06BA                           l4925 05B4                           l4917 0464  
                         l4909 0382                           l4941 276A                           l4791 25C4  
                         l4783 258C                           l4767 2800                           l4775 27F6  
                         l4847 22FE                           l4599 2016                           l4687 1A04  
                         l4679 19CE                           l4695 1E94                           l4839 2620  
                         l3887 26F0                           l3879 26E4                           l4871 2778  
                         l3799 1BFE                           l4927 05E6                           l4919 0496  
                         l4785 2594                           l4777 2806                           l4769 27E8  
                         l4849 2324                           l4697 1EA0                           l4929 0676  
                         l4881 00A8                           l4873 0000                           l4937 2364  
                         l4787 259C                           l4779 280A                           l4795 27D0  
                         l4699 1EBC                           l4891 01B0                           l4883 00DE  
                         l4875 0012                           l4939 2752                           l4789 25C2  
                         l4797 27E0                           l4893 01E4                           l4885 0112  
                         l4877 0042                           l4799 2540                           l4895 0216  
                         l4887 0148                           l4879 0074                           l4897 0248  
                         l4889 017C                           l4899 0280                           STR_1 FFBD  
                         STR_2 FFAA                           STR_3 FFDF                           STR_4 FFCE  
                         STR_5 FF50                           STR_6 FFFC                           STR_7 FECD  
                         STR_8 FFFC                           STR_9 FEEA                           u3000 10D8  
                         u3001 10D4                           u3010 1118                           u3011 1114  
                         u3100 1292                           u3020 118E                           u3101 128E  
                         u3021 118A                           u3110 12A8                           u3030 11B0  
                         u3111 12A4                           u3031 11AC                           u3120 12BC  
                         u3040 11DA                           u3200 0C48                   _BAUD4CONbits 0EE9  
                         u3121 12B8                           u3041 11D6                           u3201 0C44  
                         u3130 12D6                           u3050 11FE                           u3210 0C5A  
                         u3131 12D2                           u3051 11FA                           u3211 0C56  
                         u4100 213A                           u3140 131E                           u3060 1214  
                         u3300 0EFA                           u3220 0C6A                           u2500 0738  
                         u4101 2136                           u3141 131A                           u3061 1210  
                         u3301 0EF6                           u3221 0C66                           u2501 0734  
                         u4110 214A                           u3150 134E                           u3070 1232  
                         u3310 0F0E                           u3230 0CA0                           u2510 0748  
                         u4111 2146                           u3151 134A                           u3071 122E  
                         u3311 0F0A                           u3231 0C9C                           u2511 0744  
                         u4200 1E54                           u4120 2170                           u3160 137C  
                         u3080 1252                           u3400 1D0A                           u3320 0F28  
                         u3240 0CB0                           u2600 0894                           u2520 078A  
                         u4201 1E50                           u4121 216C                           u3161 1378  
                         u3081 124E                           u3401 1D06                           u3321 0F24  
                         u3241 0CAC                           u2521 0786                           u4210 1FE2  
                         u4130 21A2                           u3090 1264                           u3410 1D28  
                         u3330 0F70                           u3250 0E2A                           u3170 0BE6  
                         u2610 08BC                           u2530 07A0                           _T2PR 0FBC  
                         u4211 1FDE                           u4131 219E                           u3091 1260  
                         u3411 1D24                           u3331 0F6C                           u3171 0BE2  
                         u2611 08B8                           u2531 079C                           u4220 1FFC  
                         u4140 2606                           u4300 2258                           u3420 1D48  
                         u3340 0F9E                           u3260 0E84                           u3180 0BF8  
                         u2700 09F4                           u2620 08DA                           u2540 07B2  
                         u3500 1C7C                           u4221 1FF8                           u4141 2602  
                         u4301 2254                           u3421 1D44                           u3341 0F9A  
                         u3261 0E80                           u3181 0BF4                           u2701 09F0  
                         u2621 08D6                           u2541 07AE                           u3501 1C78  
                         u4150 1DB4                           u4230 2016                           u4310 2682  
                         u3430 1D98                           u3350 0FD8                           u3270 0EA4  
                         u3190 0C08                           u2710 0A2A                           u2630 08FA  
                         u2550 07C2                           u3510 1560                           u4151 1DB0  
                         u4231 2012                           u4311 267E                           u5007 2654  
                         u3431 1D94                           u3351 0FD4                           u3271 0EA0  
                         u3255 0E20                           u3191 0C04                           u2711 0A26  
                         u2631 08F6                           u2551 07BE                           u3511 155C  
                         u4160 1DCE                           u4240 2034                           u4400 19DE  
                         u4320 18BE                           u3360 20AE                           u3280 0EB6  
                         u2800 0AF4                           u2720 0A3A                           u2640 0908  
                         u2560 07FE                           u3440 1BAE                           u3600 16EE  
                         u3520 156E                           u4161 1DCA                           u4241 2030  
                         u4401 19DA                           u4321 18B8                           u5017 13D2  
                         u3361 20AA                           u3281 0EB2                           u2801 0AF0  
                         u2721 0A36                           u2641 0904                           u2561 07FA  
                         u3441 1BAA                           u3601 16EA                           u3521 156A  
                         u4170 1DF4                           u4250 204A                           u4410 19EE  
                         u4330 18C0                           u3370 20EC                           u3290 0EE4  
                         u2810 0B0E                           u2730 0A66                           u2650 0918  
                         u2570 080C                           u2490 0726                           u3450 1BE2  
                         u3530 15CA                           u4171 1DF0                           u4251 2046  
                         u4411 19EA                           u5027 1432                           u3371 20E8  
                         u3291 0EE0                           u2811 0B0A                           u2731 0A62  
                         u2651 0914                           u2571 0808                           u2491 0722  
                         u3531 15C6                           u4180 1E12                           u4260 206E  
                         u4340 18DA                           u4420 1E94                           u4500 182C  
                         u3380 2120                           u2820 0B48                           u2740 0A76  
                         u2660 094A                           u2580 087A                           u3460 1C10  
                         u3540 1620                           u4181 1E0E                           u4261 206A  
                         u4341 18D6                           u4421 1E90                           u4501 1828  
                         u5037 1496                           u3381 211C                           u2821 0B44  
                         u2741 0A72                           u2661 0946                           u2581 0876  
                         u3461 1C0C                           u3541 161C                           u4510 25B0  
                         u4190 1E2E                           u4270 21E4                           u4350 18F0  
                         u4430 1F12                           u3390 1CCC                           u2830 0B5A  
                         u2750 0A92                           u2670 0958                           u2590 0892  
                         u3470 1C24                           u3550 166A                           u4511 25A8  
                         u4191 1E2A                           u4271 21E0                           u4351 18EC  
                         u4431 1F0E                           u5047 14FE                           u3391 1CC8  
                         u2831 0B56                           u2751 0A8E                           u2671 0954  
                         u2591 088C                           u3471 1C20                           u3455 1BD8  
                         u3551 1666                           u4440 2714                           u4280 2202  
                         u4360 1992                           u2840 0B6A                           u2760 0AA2  
                         u2680 0976                           u3480 1C4C                           u3560 1688  
                         u4600 0216                           u4441 2710                           u5057 232A  
                         u4281 21FE                           u4361 198E                           u2841 0B66  
                         u2761 0A9E                           u2681 0972                           u3481 1C48  
                         u3561 1684                           u4601 0212                           u4450 272A  
                         u4530 27E0                           u4290 2248                           u4370 19A4  
                         u2850 0B8A                           u2770 0AB4                           u2690 09AE  
                         u3490 1C6C                           u3570 1698                           u4610 0248  
                         u4451 2726                           u4531 27DC                           u4291 2244  
                         u4371 19A0                           u2851 0B86                           u2771 0AB0  
                         u2691 09AA                           u3491 1C68                           u3571 1694  
                         u4611 0244                           u4380 19B4                           u4460 1728  
                         u4540 257C                           u2940 1010                           u2860 0B9C  
                         u2780 0ACA                           u3580 16A6                           u4700 06BA  
                         u4620 02B2                           u4381 19B0                           u4461 1724  
                         u4541 2578                           u2941 100C                           u2861 0B98  
                         u2781 0AC6                           u3581 16A2                           u4701 06B6  
                         u4621 02AE                           u4550 2320                           u4390 19CE  
                         u4470 17B0                           u2950 1022                           u2870 0BB8  
                         u2790 0AE0                           u3590 16E0                           u4630 0318  
                         u4391 19CA                           u4471 17AC                           u2951 101E  
                         u2871 0BB4                           u2791 0ADC                           u3591 16DC  
                         u4631 0314                           u4528 25B2                           u4560 2352  
                         u4480 17D4                           u2960 1032                           u4640 034A  
                         u4800 1A82                           u4481 17D0                           u2961 102E  
                         u4641 0346                           u4801 1A7E                           u4570 2362  
                         u4490 180C                           u2970 1076                           u4650 03B4  
                         u4810 1AA6                           u4571 235E                           u4491 1808  
                         u2971 1072                           u4651 03B0                           u4811 1A9E  
                         u2980 1088                           u4660 044E                           u4820 1AC8  
                         u4557 2316                           u2981 1084                           u4661 044A  
                         u4821 1AC4                           u2990 1098                           u4670 0496  
                         u4830 1AEC                           u4567 2348                           u2991 1094  
                         u4671 0492                           u4831 1AE4                           u4680 0524  
                         u4840 1B0E                           u4681 0520                           u4841 1B0A  
                         u4690 05E6                           u4850 1B96                           u4818 1AA8  
                         u4691 05E2                           u4851 1B92                           u4860 13C6  
                         u4780 1A3E                           u4861 13C2                           u4781 1A3A  
                         u4870 1426                           u4838 1AEE                           u4790 1A62  
                         u4871 1422                           u4791 1A5A                           u4880 148A  
                         u4881 1486                           u4890 14EE                           u4891 14EA  
                         u4798 1A64                           u4987 1FA2                           u4997 1B6C  
                         abs@a 0007                           _dbuf 016C                           _main 1F1C  
                         _dtoa 18AA           convert_rgb2hue@cCurr 0034                           _prec 00EE  
                         _test 1A22                           pad@i 0015                           pad@p 0012  
                         fsr0h 0FEA                           fsr1h 0FE2                           indf0 0FEF  
                         fsr2h 0FDA                           fsr0l 0FE9                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           prodh 0FF4  
                         prodl 0FF3                           start 0000               __end_of_ADC_init 27CE  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 240A                   ___param_bank 0000  
                        ??_abs 0009                          ??_pad 0014                  ___fltol@sign1 0009  
              __end_of___fladd 0BCC                          ?_main 0001                          ?_dtoa 0017  
                        _ADPCH 0F5F                __end_of___fldiv 1390                __end_of___awdiv 1E66  
                        STR_10 FFFC                          STR_11 FEAB                          STR_12 FFFC  
                        STR_20 FFF0                          STR_13 FF1F                          STR_14 FFFC  
                        STR_15 FF7F                          STR_16 FF38                          STR_17 FF68  
                        STR_18 FF05                          STR_19 FF95                __end_of___awmod 2080  
              __end_of___flmul 0FF6                          ?_test 0001                __end_of___flsub 2540  
              __end_of___fltol 1C9E                ___awdiv@divisor 0003                ___awdiv@counter 0005  
            ??_convert_rgb2hue 0035                   vfpfcnvrt@fmt 0023        __end_of_sendCharSerial4 27E6  
   __end_of_I2C_2_Master_Start 2806     __end_of_I2C_2_Master_Write 27F2                          _flags 00F0  
          read_prec_or_width@c 0009            read_prec_or_width@n 000A                          _fputc 212A  
                        _fputs 25C8                          pad@fp 000F                          _width 00EC  
                        _putch 2810                          dtoa@d 0018                          dtoa@i 0020  
                        dtoa@p 001C                          dtoa@s 001F                          dtoa@w 001D  
                        tablat 0FF5                          status 0FD8                __end_of_sprintf 2640  
        convert_rgb2hue@redmax 0064        __end_of_color_read_Blue 24FA          _I2C_2_Master_RepStart 2806  
              ?_color_read_Red 0005                __initialization 26A8                   __end_of_main 1FD0  
                 __end_of_dtoa 1A22                   __end_of_test 1B98               ??_reading_values 000D  
                       ??_main 004C                         ??_dtoa 001A                         ??_test 004A  
                __activetblptr 0003     __end_of_read_prec_or_width 1F1C                         ?_fputc 0001  
                       ?_fputs 0009                         _ADRESH 0F64                         _CCPR1H 0FAA  
                       _CCPR2H 0FA6                         _CCPR3H 0F25                         _CCPR4H 0F21  
             ___awdiv@dividend 0001                         ?_putch 0001                         _RC0PPS 0E62  
                       _RC4REG 0EE3                         _RE2PPS 0E74                         _RD5PPS 0E6F  
                       _RC7PPS 0E69                         _RE4PPS 0E76                         _RD6PPS 0E70  
                       _RG6PPS 0E88                  vfpfcnvrt@done 002B       __end_of_color_click_init 2674  
                       _RX4PPS 0E15                         _TX4REG 0EE4               __end_of___xxtofl 1702  
  convert_rgb2hue@greencurrent 0068                   _CCPTMRS0bits 0FAD                   vfprintf@cfmt 0032  
                       ___flge 1C9E                         ___fleq 2080                      ??___fladd 0009  
                       ___wmul 272C                      ??___fldiv 0021                      ??___awdiv 0005  
                    ??___awmod 0005                      ??___flmul 0009                      ??___flsub 0019  
                    ??___fltol 0005           read_prec_or_width@ap 0008                         clear_0 26C0  
                       clear_1 26CC               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       _motorL 00E3                         _motorR 00DA                         isa$std 0001  
              ___awmod@counter 0005             send2USART@hue_char 0060                         pad@buf 0010  
                       dtoa@fp 0017                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                   __mediumconst FEAA  
      calibration_routine@cCal 0048                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                      ?_ADC_init 0001               ?_sendCharSerial4 0001  
       convert_rgb2hue@bluemax 0074                         putch@c 0001               __end_of_vfprintf 2586  
            ??_initDCmotorsPWM 0003                      ??_sprintf 003B                     ___flge@ff1 0001  
                   ___flge@ff2 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0001                     ___fleq@ff2 0005  
                   __accesstop 0060        __end_of__initialization 26D4       __end_of_color_read_Clear 24AA  
     __end_of_color_read_Green 245A         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2812                  __end_of_fputc 21D4                  __end_of_fputs 2608  
                __end_of_putch 2812                     ??_ADC_init 0001                        ??_fputc 0004  
                      ??_fputs 000C                        ??_putch 0001                     __pbssBANK0 00DA  
                   __pbssBANK1 0100              _color_writetoaddr 2776                   _T2CLKCONbits 0FBF  
              _convert_rgb2hue 0000                        ?___flge 0001                        ?___fleq 0001  
           ?_color_writetoaddr 0003                        ?___wmul 0001            ??_color_writetoaddr 0004  
                    ?___xxtofl 0001            _convert_rgb2hue$310 007C            _convert_rgb2hue$311 0080  
          _convert_rgb2hue$312 0084            _convert_rgb2hue$309 0078                        _SP4BRGH 0EE6  
                      _SP4BRGL 0EE5                        _SSP2ADD 0ED6                        _SSP2BUF 0ED5  
       color_writetoaddr@value 0003               ??_color_read_Red 0007      __end_of_color_writetoaddr 2796  
                    _ADREFbits 0F58             _I2C_2_Master_Start 27FC                     _initUSART4 2796  
           _I2C_2_Master_Write 27E6                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A        sendStringSerial4@string 0002                        ___fladd 070C  
                      ___fldiv 0FF6                        ___awdiv 1DA2                        ___awmod 1FD0  
                      ___flmul 0BCC                        ___flsub 24FA                        ___fltol 1B98  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 002E  
                      __pcinit 26A8                        __ramtop 0E00                     _send2USART 2752  
                      __ptext0 1F1C                        __ptext1 1A22                        __ptext2 2752  
                      __ptext3 2364                        __ptext4 0000                        __ptext5 154E  
                      __ptext6 1B98                        __ptext7 24FA                        __ptext8 070C  
                      __ptext9 0BCC                      _T2CONbits 0FBD          read_prec_or_width@fmt 0007  
                   ??___xxtofl 0005               ___awmod@dividend 0001                      _T2HLTbits 0FBE  
                _RxBufWriteCnt 00F4                        _sprintf 2608           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 26D4                        fputc@fp 0003  
      __end_of_convert_rgb2hue 070C                        fputs@fp 000B              ?_color_click_init 0001  
           _read_prec_or_width 1E66             ??_color_click_init 0005               _colorCalibration 018C  
                      test@hue 00D6              __end_of_vfpfcnvrt 18AA                        postdec2 0FDD  
          ?_read_prec_or_width 0007                        postinc0 0FEE                        postinc1 0FE6  
                      postinc2 0FDE               vfpfcnvrt@convarg 0027                     ??_vfprintf 0032  
      convert_rgb2hue@greenmax 006C                   _colorCurrent 00F5                _initDCmotorsPWM 226A  
                    _PORTFbits 0F8E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               convert_rgb2hue@b 00A0           ??_read_prec_or_width 0009  
             convert_rgb2hue@g 009C                    ___fldiv@grs 002C               convert_rgb2hue@r 0098  
                  ___fldiv@rem 0025       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 000E                    _CCP1CONbits 0FAB            _calibration_routine 1390  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 0150                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005     convert_rgb2hue@bluecurrent 0070  
                  _CCP3CONbits 0F26                    ?_initUSART4 0001                    _CCP4CONbits 0F22  
    sendCharSerial4@charToSend 0001             ??_color_read_Clear 0007             ??_color_read_Green 0007  
    convert_rgb2hue@redcurrent 0060                 __end_of___flge 1DA2                 __end_of___fleq 212A  
                  vfpfcnvrt@ap 0024                    vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022  
               __end_of___wmul 2752                    ?_send2USART 0048           ?_calibration_routine 0048  
          color_read_Clear@tmp 000A            start_initialization 26A8   calibration_routine@cal_state 0060  
                  __end_of_abs 26A8                    __end_of_pad 226A                  _TxBufWriteCnt 004E  
             ?_convert_rgb2hue 0032            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 22FA  
                  vfprintf@fmt 002F                       ??___flge 0009                       ??___fleq 0009  
                     ??___wmul 0005                    __pdataBANK0 00FD          ??_calibration_routine 004A  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001D  
                    ___fldiv@b 0019                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 004E                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 0060                      _dtoa$2608 001A                  __pmediumconst FEAA  
                     ?___fladd 0001                       ?___fldiv 0019                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 0011  
                     ?___fltol 0001                   _readingIndex 00F1           I2C_2_Master_Read@ack 0003  
         I2C_2_Master_Read@tmp 0004              _I2C_2_Master_Idle 2704              _I2C_2_Master_Init 26DA  
            _I2C_2_Master_Read 2586              _I2C_2_Master_Stop 27F2                   _RxBufReadCnt 00F3  
                     _ADC_init 27B4             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0034              _sendStringSerial4 22FA            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 0F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B  
                     _LATDbits 0F7C                       _LATEbits 0F7D                       _LATFbits 0F7E  
                     _LATGbits 0F7F                       _LATHbits 0F80             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37            reading_values@cCurr 000C  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _vfpfcnvrt 1702  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 272C      __end_of_I2C_2_Master_Init 2704  
    __end_of_I2C_2_Master_Read 25C8              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 27FC  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 013C              ??_color_read_Blue 0007  
                 _TxBufReadCnt 00F2                 _reading_values 2364      __end_of_sendStringSerial4 2364  
__end_of_I2C_2_Master_RepStart 2810             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 0031                       __Lrparam 0000  
                   vfprintf@fp 002E                     ?_vfpfcnvrt 0022                   ??_send2USART 004A  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                       _dataFlag 00FD  
                   sprintf@fmt 0035                       ___xxtofl 154E         __end_of_reading_values 23BA  
                test@led_state 00A4             __end_of_initUSART4 27B4                       __ptext10 1C9E  
                     __ptext11 2080                       __ptext20 2540                       __ptext12 0FF6  
                     __ptext21 1702                       __ptext13 2796                       __ptext30 1FD0  
                     __ptext22 1E66                       __ptext14 226A                       __ptext31 1DA2  
                     __ptext23 272C                       __ptext15 2640                       __ptext40 27FC  
                     __ptext32 22FA                       __ptext24 18AA                       __ptext16 2776  
                     __ptext41 2806                       __ptext33 27CE                       __ptext25 21D4  
                     __ptext17 26DA                       __ptext42 2586                       __ptext34 23BA  
                     __ptext26 25C8                       __ptext18 1390                       __ptext43 2704  
                     __ptext35 240A                       __ptext27 212A                       __ptext19 2608  
                     __ptext44 27B4                       __ptext36 245A                       __ptext28 2810  
                     __ptext37 24AA                       __ptext29 2674                       __ptext38 27E6  
                     __ptext39 27F2                   _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA  
           __end_of_send2USART 2776                      test@combo 00D8                       isa$xinst 0000  
                   _RC4STAbits 0EE7                       _vfprintf 2540                ?_reading_values 000C  
                    sprintf@ap 003B    __end_of_calibration_routine 154E                  send2USART@hue 0048  
                  ??_vfpfcnvrt 0025               _color_click_init 2640                       sprintf@f 003C  
                     sprintf@s 0034                     _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C  
                ___fladd@signs 000D                     _TX4STAbits 0EE8                _sendCharSerial4 27CE  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F  
