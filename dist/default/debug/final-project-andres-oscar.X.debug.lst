

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Mar 12 15:28:21 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 21/07/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   003E40                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _dataFlag
   106   003E40  01                 	db	1
   107   000000                     _TX4REG	set	3812
   108   000000                     _RC4STAbits	set	3815
   109   000000                     _SP4BRGH	set	3814
   110   000000                     _LATFbits	set	3966
   111   000000                     _LATHbits	set	3968
   112   000000                     _TRISFbits	set	3974
   113   000000                     _TRISAbits	set	3969
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISGbits	set	3975
   116   000000                     _TRISDbits	set	3972
   117   000000                     _PORTFbits	set	3982
   118   000000                     _SSP2CON2bits	set	3802
   119   000000                     _RX4PPS	set	3605
   120   000000                     _SSP2CLKPPS	set	3612
   121   000000                     _SSP2DATPPS	set	3613
   122   000000                     _ANSELDbits	set	3751
   123   000000                     _SSP2ADD	set	3798
   124   000000                     _SSP2CON1bits	set	3801
   125   000000                     _LATAbits	set	3961
   126   000000                     _LATEbits	set	3965
   127   000000                     _LATGbits	set	3967
   128   000000                     _LATCbits	set	3963
   129   000000                     _LATDbits	set	3964
   130   000000                     _CCPR2H	set	4006
   131   000000                     _CCPR1H	set	4010
   132   000000                     _RC4REG	set	3811
   133   000000                     _SP4BRGL	set	3813
   134   000000                     _TX4STAbits	set	3816
   135   000000                     _BAUD4CONbits	set	3817
   136   000000                     _SSP2CON2	set	3802
   137   000000                     _CCPR4H	set	3873
   138   000000                     _CCPR3H	set	3877
   139   000000                     _SSP2STAT	set	3800
   140   000000                     _ANSELFbits	set	3764
   141   000000                     _SSP2BUF	set	3797
   142   000000                     _PIE4bits	set	3629
   143   000000                     _PIR4bits	set	3639
   144   000000                     _RC0PPS	set	3682
   145   000000                     _RC7PPS	set	3689
   146   000000                     _RD5PPS	set	3695
   147   000000                     _RE2PPS	set	3700
   148   000000                     _RD6PPS	set	3696
   149   000000                     _CCP1CONbits	set	4011
   150   000000                     _CCPTMRS0bits	set	4013
   151   000000                     _T2PR	set	4028
   152   000000                     _T2CONbits	set	4029
   153   000000                     _CCP2CONbits	set	4007
   154   000000                     _CCP3CONbits	set	3878
   155   000000                     _ADREFbits	set	3928
   156   000000                     _CCP4CONbits	set	3874
   157   000000                     _TRISHbits	set	3976
   158   000000                     _TRISCbits	set	3971
   159   000000                     _ADPCH	set	3935
   160   000000                     _ADRESH	set	3940
   161   000000                     _ADCON0bits	set	3936
   162   000000                     _RE4PPS	set	3702
   163   000000                     _RG6PPS	set	3720
   164   000000                     _T2CLKCONbits	set	4031
   165   000000                     _T2HLTbits	set	4030
   166                           
   167                           	psect	smallconst
   168   000E00                     __psmallconst:
   169                           	callstack 0
   170   000E00  00                 	db	0
   171   000E01                     STR_11:
   172                           
   173                           ; BSR set to: 15
   174   000E01  43                 	db	67	;'C'
   175   000E02  61                 	db	97	;'a'
   176   000E03  6C                 	db	108	;'l'
   177   000E04  69                 	db	105	;'i'
   178   000E05  62                 	db	98	;'b'
   179   000E06  72                 	db	114	;'r'
   180   000E07  61                 	db	97	;'a'
   181   000E08  74                 	db	116	;'t'
   182   000E09  69                 	db	105	;'i'
   183   000E0A  6F                 	db	111	;'o'
   184   000E0B  6E                 	db	110	;'n'
   185   000E0C  20                 	db	32
   186   000E0D  73                 	db	115	;'s'
   187   000E0E  74                 	db	116	;'t'
   188   000E0F  61                 	db	97	;'a'
   189   000E10  74                 	db	116	;'t'
   190   000E11  65                 	db	101	;'e'
   191   000E12  20                 	db	32
   192   000E13  3D                 	db	61	;'='
   193   000E14  20                 	db	32
   194   000E15  61                 	db	97	;'a'
   195   000E16  6D                 	db	109	;'m'
   196   000E17  62                 	db	98	;'b'
   197   000E18  69                 	db	105	;'i'
   198   000E19  65                 	db	101	;'e'
   199   000E1A  6E                 	db	110	;'n'
   200   000E1B  74                 	db	116	;'t'
   201   000E1C  20                 	db	32
   202   000E1D  6C                 	db	108	;'l'
   203   000E1E  69                 	db	105	;'i'
   204   000E1F  67                 	db	103	;'g'
   205   000E20  68                 	db	104	;'h'
   206   000E21  74                 	db	116	;'t'
   207   000E22  00                 	db	0
   208   000E23                     STR_7:
   209                           
   210                           ; BSR set to: 15
   211   000E23  43                 	db	67	;'C'
   212   000E24  61                 	db	97	;'a'
   213   000E25  6C                 	db	108	;'l'
   214   000E26  69                 	db	105	;'i'
   215   000E27  62                 	db	98	;'b'
   216   000E28  72                 	db	114	;'r'
   217   000E29  61                 	db	97	;'a'
   218   000E2A  74                 	db	116	;'t'
   219   000E2B  69                 	db	105	;'i'
   220   000E2C  6F                 	db	111	;'o'
   221   000E2D  6E                 	db	110	;'n'
   222   000E2E  20                 	db	32
   223   000E2F  73                 	db	115	;'s'
   224   000E30  74                 	db	116	;'t'
   225   000E31  61                 	db	97	;'a'
   226   000E32  74                 	db	116	;'t'
   227   000E33  65                 	db	101	;'e'
   228   000E34  20                 	db	32
   229   000E35  3D                 	db	61	;'='
   230   000E36  20                 	db	32
   231   000E37  67                 	db	103	;'g'
   232   000E38  72                 	db	114	;'r'
   233   000E39  65                 	db	101	;'e'
   234   000E3A  65                 	db	101	;'e'
   235   000E3B  6E                 	db	110	;'n'
   236   000E3C  20                 	db	32
   237   000E3D  0A                 	db	10
   238   000E3E  0D                 	db	13
   239   000E3F  00                 	db	0
   240   000E40                     STR_9:
   241                           
   242                           ; BSR set to: 15
   243   000E40  43                 	db	67	;'C'
   244   000E41  61                 	db	97	;'a'
   245   000E42  6C                 	db	108	;'l'
   246   000E43  69                 	db	105	;'i'
   247   000E44  62                 	db	98	;'b'
   248   000E45  72                 	db	114	;'r'
   249   000E46  61                 	db	97	;'a'
   250   000E47  74                 	db	116	;'t'
   251   000E48  69                 	db	105	;'i'
   252   000E49  6F                 	db	111	;'o'
   253   000E4A  6E                 	db	110	;'n'
   254   000E4B  20                 	db	32
   255   000E4C  73                 	db	115	;'s'
   256   000E4D  74                 	db	116	;'t'
   257   000E4E  61                 	db	97	;'a'
   258   000E4F  74                 	db	116	;'t'
   259   000E50  65                 	db	101	;'e'
   260   000E51  3D                 	db	61	;'='
   261   000E52  20                 	db	32
   262   000E53  62                 	db	98	;'b'
   263   000E54  6C                 	db	108	;'l'
   264   000E55  75                 	db	117	;'u'
   265   000E56  65                 	db	101	;'e'
   266   000E57  20                 	db	32
   267   000E58  0A                 	db	10
   268   000E59  0D                 	db	13
   269   000E5A  00                 	db	0
   270   000E5B                     STR_13:
   271                           
   272                           ; BSR set to: 15
   273   000E5B  43                 	db	67	;'C'
   274   000E5C  41                 	db	65	;'A'
   275   000E5D  4C                 	db	76	;'L'
   276   000E5E  49                 	db	73	;'I'
   277   000E5F  42                 	db	66	;'B'
   278   000E60  52                 	db	82	;'R'
   279   000E61  41                 	db	65	;'A'
   280   000E62  54                 	db	84	;'T'
   281   000E63  49                 	db	73	;'I'
   282   000E64  4F                 	db	79	;'O'
   283   000E65  4E                 	db	78	;'N'
   284   000E66  20                 	db	32
   285   000E67  43                 	db	67	;'C'
   286   000E68  4F                 	db	79	;'O'
   287   000E69  4D                 	db	77	;'M'
   288   000E6A  50                 	db	80	;'P'
   289   000E6B  4C                 	db	76	;'L'
   290   000E6C  45                 	db	69	;'E'
   291   000E6D  54                 	db	84	;'T'
   292   000E6E  45                 	db	69	;'E'
   293   000E6F  44                 	db	68	;'D'
   294   000E70  20                 	db	32
   295   000E71  0A                 	db	10
   296   000E72  0D                 	db	13
   297   000E73  00                 	db	0
   298   000E74                     STR_5:
   299                           
   300                           ; BSR set to: 15
   301   000E74  43                 	db	67	;'C'
   302   000E75  61                 	db	97	;'a'
   303   000E76  6C                 	db	108	;'l'
   304   000E77  69                 	db	105	;'i'
   305   000E78  62                 	db	98	;'b'
   306   000E79  72                 	db	114	;'r'
   307   000E7A  61                 	db	97	;'a'
   308   000E7B  74                 	db	116	;'t'
   309   000E7C  69                 	db	105	;'i'
   310   000E7D  6F                 	db	111	;'o'
   311   000E7E  6E                 	db	110	;'n'
   312   000E7F  20                 	db	32
   313   000E80  73                 	db	115	;'s'
   314   000E81  74                 	db	116	;'t'
   315   000E82  61                 	db	97	;'a'
   316   000E83  74                 	db	116	;'t'
   317   000E84  65                 	db	101	;'e'
   318   000E85  20                 	db	32
   319   000E86  3D                 	db	61	;'='
   320   000E87  20                 	db	32
   321   000E88  72                 	db	114	;'r'
   322   000E89  65                 	db	101	;'e'
   323   000E8A  64                 	db	100	;'d'
   324   000E8B  00                 	db	0
   325   000E8C                     
   326                           ; BSR set to: 15
   327   000E8C  56                 	db	86	;'V'
   328   000E8D  6F                 	db	111	;'o'
   329   000E8E  6C                 	db	108	;'l'
   330   000E8F  74                 	db	116	;'t'
   331   000E90  61                 	db	97	;'a'
   332   000E91  67                 	db	103	;'g'
   333   000E92  65                 	db	101	;'e'
   334   000E93  20                 	db	32
   335   000E94  3D                 	db	61	;'='
   336   000E95  20                 	db	32
   337   000E96  25                 	db	37
   338   000E97  64                 	db	100	;'d'
   339   000E98  2E                 	db	46
   340   000E99  25                 	db	37
   341   000E9A  30                 	db	48	;'0'
   342   000E9B  32                 	db	50	;'2'
   343   000E9C  64                 	db	100	;'d'
   344   000E9D  2C                 	db	44
   345   000E9E  20                 	db	32
   346   000E9F  20                 	db	32
   347   000EA0  00                 	db	0
   348   000EA1                     STR_2:
   349                           
   350                           ; BSR set to: 15
   351   000EA1  47                 	db	71	;'G'
   352   000EA2  72                 	db	114	;'r'
   353   000EA3  65                 	db	101	;'e'
   354   000EA4  65                 	db	101	;'e'
   355   000EA5  6E                 	db	110	;'n'
   356   000EA6  5F                 	db	95	;'_'
   357   000EA7  6C                 	db	108	;'l'
   358   000EA8  69                 	db	105	;'i'
   359   000EA9  67                 	db	103	;'g'
   360   000EAA  68                 	db	104	;'h'
   361   000EAB  74                 	db	116	;'t'
   362   000EAC  3D                 	db	61	;'='
   363   000EAD  25                 	db	37
   364   000EAE  64                 	db	100	;'d'
   365   000EAF  2C                 	db	44
   366   000EB0  20                 	db	32
   367   000EB1  0A                 	db	10
   368   000EB2  0D                 	db	13
   369   000EB3  00                 	db	0
   370   000EB4                     STR_1:
   371                           
   372                           ; BSR set to: 15
   373   000EB4  52                 	db	82	;'R'
   374   000EB5  65                 	db	101	;'e'
   375   000EB6  64                 	db	100	;'d'
   376   000EB7  5F                 	db	95	;'_'
   377   000EB8  6C                 	db	108	;'l'
   378   000EB9  69                 	db	105	;'i'
   379   000EBA  67                 	db	103	;'g'
   380   000EBB  68                 	db	104	;'h'
   381   000EBC  74                 	db	116	;'t'
   382   000EBD  3D                 	db	61	;'='
   383   000EBE  25                 	db	37
   384   000EBF  64                 	db	100	;'d'
   385   000EC0  2C                 	db	44
   386   000EC1  20                 	db	32
   387   000EC2  0A                 	db	10
   388   000EC3  0D                 	db	13
   389   000EC4  00                 	db	0
   390   000EC5                     STR_4:
   391                           
   392                           ; BSR set to: 15
   393   000EC5  41                 	db	65	;'A'
   394   000EC6  6C                 	db	108	;'l'
   395   000EC7  6C                 	db	108	;'l'
   396   000EC8  5F                 	db	95	;'_'
   397   000EC9  6C                 	db	108	;'l'
   398   000ECA  69                 	db	105	;'i'
   399   000ECB  67                 	db	103	;'g'
   400   000ECC  68                 	db	104	;'h'
   401   000ECD  74                 	db	116	;'t'
   402   000ECE  73                 	db	115	;'s'
   403   000ECF  3D                 	db	61	;'='
   404   000ED0  25                 	db	37
   405   000ED1  64                 	db	100	;'d'
   406   000ED2  20                 	db	32
   407   000ED3  0A                 	db	10
   408   000ED4  0D                 	db	13
   409   000ED5  00                 	db	0
   410   000ED6                     STR_3:
   411                           
   412                           ; BSR set to: 15
   413   000ED6  42                 	db	66	;'B'
   414   000ED7  6C                 	db	108	;'l'
   415   000ED8  75                 	db	117	;'u'
   416   000ED9  65                 	db	101	;'e'
   417   000EDA  5F                 	db	95	;'_'
   418   000EDB  6C                 	db	108	;'l'
   419   000EDC  69                 	db	105	;'i'
   420   000EDD  67                 	db	103	;'g'
   421   000EDE  68                 	db	104	;'h'
   422   000EDF  74                 	db	116	;'t'
   423   000EE0  3D                 	db	61	;'='
   424   000EE1  25                 	db	37
   425   000EE2  64                 	db	100	;'d'
   426   000EE3  20                 	db	32
   427   000EE4  0A                 	db	10
   428   000EE5  0D                 	db	13
   429   000EE6  00                 	db	0
   430   000EE7                     STR_16:
   431                           
   432                           ; BSR set to: 15
   433   000EE7  68                 	db	104	;'h'
   434   000EE8  75                 	db	117	;'u'
   435   000EE9  65                 	db	101	;'e'
   436   000EEA  3D                 	db	61	;'='
   437   000EEB  25                 	db	37
   438   000EEC  30                 	db	48	;'0'
   439   000EED  33                 	db	51	;'3'
   440   000EEE  64                 	db	100	;'d'
   441   000EEF  2C                 	db	44
   442   000EF0  20                 	db	32
   443   000EF1  20                 	db	32
   444   000EF2  00                 	db	0
   445   000EF3                     STR_6:
   446                           
   447                           ; BSR set to: 15
   448   000EF3  2E                 	db	46
   449   000EF4  00                 	db	0
   450   000EF5  00                 	db	0	; dummy byte at the end
   451   000000                     
   452                           ; #config settings
   453                           
   454                           	psect	cinit
   455   003C30                     __pcinit:
   456                           	callstack 0
   457   003C30                     start_initialization:
   458                           	callstack 0
   459   003C30                     __initialization:
   460                           	callstack 0
   461                           
   462                           ; Initialize objects allocated to BANK0 (1 bytes)
   463                           ; load TBLPTR registers with __pidataBANK0
   464   003C30  0E40               	movlw	low __pidataBANK0
   465   003C32  6EF6               	movwf	tblptrl,c
   466   003C34  0E3E               	movlw	high __pidataBANK0
   467   003C36  6EF7               	movwf	tblptrh,c
   468   003C38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   469   003C3A  6EF8               	movwf	tblptru,c
   470   003C3C  0009               	tblrd		*+	;fetch initializer
   471   003C3E  CFF5 F0EF          	movff	tablat,__pdataBANK0
   472                           
   473                           ; Clear objects allocated to BANK1 (146 bytes)
   474   003C42  EE01  F000         	lfsr	0,__pbssBANK1
   475   003C46  0E92               	movlw	146
   476   003C48                     clear_0:
   477   003C48  6AEE               	clrf	postinc0,c
   478   003C4A  06E8               	decf	wreg,f,c
   479   003C4C  E1FD               	bnz	clear_0
   480                           
   481                           ; Clear objects allocated to BANK0 (25 bytes)
   482   003C4E  EE00  F0D6         	lfsr	0,__pbssBANK0
   483   003C52  0E19               	movlw	25
   484   003C54                     clear_1:
   485   003C54  6AEE               	clrf	postinc0,c
   486   003C56  06E8               	decf	wreg,f,c
   487   003C58  E1FD               	bnz	clear_1
   488                           
   489                           ; Clear objects allocated to COMRAM (5 bytes)
   490   003C5A  6A58               	clrf	(__pbssCOMRAM+4)& (0+255),c
   491   003C5C  6A57               	clrf	(__pbssCOMRAM+3)& (0+255),c
   492   003C5E  6A56               	clrf	(__pbssCOMRAM+2)& (0+255),c
   493   003C60  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   494   003C62  6A54               	clrf	__pbssCOMRAM& (0+255),c
   495   003C64                     end_of_initialization:
   496                           	callstack 0
   497   003C64                     __end_of__initialization:
   498                           	callstack 0
   499   003C64  0100               	movlb	0
   500   003C66  EF66  F01A         	goto	_main	;jump to C main() function
   501                           
   502                           	psect	bssCOMRAM
   503   000054                     __pbssCOMRAM:
   504                           	callstack 0
   505   000054                     _flags:
   506                           	callstack 0
   507   000054                     	ds	1
   508   000055                     _TxBufReadCnt:
   509                           	callstack 0
   510   000055                     	ds	1
   511   000056                     _TxBufWriteCnt:
   512                           	callstack 0
   513   000056                     	ds	1
   514   000057                     _RxBufReadCnt:
   515                           	callstack 0
   516   000057                     	ds	1
   517   000058                     _RxBufWriteCnt:
   518                           	callstack 0
   519   000058                     	ds	1
   520                           
   521                           	psect	bssBANK0
   522   0000D6                     __pbssBANK0:
   523                           	callstack 0
   524   0000D6                     _EUSART4RXbuf:
   525                           	callstack 0
   526   0000D6                     	ds	20
   527   0000EA                     _width:
   528                           	callstack 0
   529   0000EA                     	ds	2
   530   0000EC                     _prec:
   531                           	callstack 0
   532   0000EC                     	ds	2
   533   0000EE                     _readingIndex:
   534                           	callstack 0
   535   0000EE                     	ds	1
   536                           
   537                           	psect	dataBANK0
   538   0000EF                     __pdataBANK0:
   539                           	callstack 0
   540   0000EF                     _dataFlag:
   541                           	callstack 0
   542   0000EF                     	ds	1
   543                           
   544                           	psect	bssBANK1
   545   000100                     __pbssBANK1:
   546                           	callstack 0
   547   000100                     _EUSART4TXbuf:
   548                           	callstack 0
   549   000100                     	ds	60
   550   00013C                     _ldrReadings:
   551                           	callstack 0
   552   00013C                     	ds	20
   553   000150                     _dbuf:
   554                           	callstack 0
   555   000150                     	ds	32
   556   000170                     _motorR:
   557                           	callstack 0
   558   000170                     	ds	9
   559   000179                     _motorL:
   560                           	callstack 0
   561   000179                     	ds	9
   562   000182                     _colorCurrent:
   563                           	callstack 0
   564   000182                     	ds	8
   565   00018A                     _colorCalibration:
   566                           	callstack 0
   567   00018A                     	ds	8
   568                           
   569                           	psect	cstackBANK1
   570   000192                     __pcstackBANK1:
   571                           	callstack 0
   572   000192                     test@led_state:
   573                           	callstack 0
   574                           
   575                           ; 50 bytes @ 0x0
   576   000192                     	ds	50
   577   0001C4                     test@hue:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x32
   581   0001C4                     	ds	2
   582   0001C6                     test@combo:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x34
   586   0001C6                     	ds	2
   587                           
   588                           	psect	cstackBANK0
   589   000060                     __pcstackBANK0:
   590                           	callstack 0
   591   000060                     ??_convert_rgb2hue:
   592   000060                     calibration_routine@cal_state:
   593                           	callstack 0
   594   000060                     send2USART@hue_char:
   595                           	callstack 0
   596                           
   597                           ; 50 bytes @ 0x0
   598   000060                     	ds	38
   599   000086                     _convert_rgb2hue$2870:
   600                           	callstack 0
   601                           
   602                           ; 8 bytes @ 0x26
   603   000086                     	ds	8
   604   00008E                     _convert_rgb2hue$2871:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x2E
   608   00008E                     	ds	4
   609   000092                     convert_rgb2hue@max:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x32
   613   000092                     	ds	4
   614   000096                     _convert_rgb2hue$305:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x36
   618   000096                     	ds	4
   619   00009A                     _convert_rgb2hue$306:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x3A
   623   00009A                     	ds	4
   624   00009E                     _convert_rgb2hue$307:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x3E
   628   00009E                     	ds	4
   629   0000A2                     _convert_rgb2hue$308:
   630                           	callstack 0
   631                           
   632                           ; 4 bytes @ 0x42
   633   0000A2                     	ds	4
   634   0000A6                     convert_rgb2hue@diff:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x46
   638   0000A6                     	ds	4
   639   0000AA                     convert_rgb2hue@total:
   640                           	callstack 0
   641                           
   642                           ; 8 bytes @ 0x4A
   643   0000AA                     	ds	8
   644   0000B2                     convert_rgb2hue@min:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x52
   648   0000B2                     	ds	4
   649   0000B6                     _convert_rgb2hue$2868:
   650                           	callstack 0
   651                           
   652                           ; 8 bytes @ 0x56
   653   0000B6                     	ds	8
   654   0000BE                     _convert_rgb2hue$2869:
   655                           	callstack 0
   656                           
   657                           ; 8 bytes @ 0x5E
   658   0000BE                     	ds	8
   659   0000C6                     convert_rgb2hue@hue:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0x66
   663   0000C6                     	ds	4
   664   0000CA                     convert_rgb2hue@r:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x6A
   668   0000CA                     	ds	4
   669   0000CE                     convert_rgb2hue@g:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x6E
   673   0000CE                     	ds	4
   674   0000D2                     convert_rgb2hue@b:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x72
   678   0000D2                     	ds	4
   679                           
   680                           	psect	cstackCOMRAM
   681   000001                     __pcstackCOMRAM:
   682                           	callstack 0
   683   000001                     ??_I2C_2_Master_Idle:
   684   000001                     ?___wmul:
   685                           	callstack 0
   686   000001                     ?___awdiv:
   687                           	callstack 0
   688   000001                     ?___awmod:
   689                           	callstack 0
   690   000001                     ?___fladd:
   691                           	callstack 0
   692   000001                     ?___flmul:
   693                           	callstack 0
   694   000001                     ?___fltol:
   695                           	callstack 0
   696   000001                     ?___omul:
   697                           	callstack 0
   698   000001                     sendCharSerial4@charToSend:
   699                           	callstack 0
   700   000001                     initDCmotorsPWM@PWMperiod:
   701                           	callstack 0
   702   000001                     ___wmul@multiplier:
   703                           	callstack 0
   704   000001                     ___awdiv@dividend:
   705                           	callstack 0
   706   000001                     ___awmod@dividend:
   707                           	callstack 0
   708   000001                     fputc@c:
   709                           	callstack 0
   710   000001                     ___fleq@ff1:
   711                           	callstack 0
   712   000001                     ___flge@ff1:
   713                           	callstack 0
   714   000001                     ___fltol@f1:
   715                           	callstack 0
   716   000001                     ___fladd@b:
   717                           	callstack 0
   718   000001                     ___flmul@b:
   719                           	callstack 0
   720   000001                     ___omul@multiplier:
   721                           	callstack 0
   722                           
   723                           ; 8 bytes @ 0x0
   724   000001                     	ds	1
   725   000002                     ??_I2C_2_Master_Read:
   726   000002                     I2C_2_Master_Write@data_byte:
   727                           	callstack 0
   728   000002                     sendStringSerial4@string:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1
   732   000002                     	ds	1
   733   000003                     color_writetoaddr@value:
   734                           	callstack 0
   735   000003                     I2C_2_Master_Read@ack:
   736                           	callstack 0
   737   000003                     fputc@fp:
   738                           	callstack 0
   739   000003                     ___wmul@multiplicand:
   740                           	callstack 0
   741   000003                     ___awdiv@divisor:
   742                           	callstack 0
   743   000003                     ___awmod@divisor:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x2
   747   000003                     	ds	1
   748   000004                     ??_fputc:
   749   000004                     color_writetoaddr@address:
   750                           	callstack 0
   751   000004                     I2C_2_Master_Read@tmp:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x3
   755   000004                     	ds	1
   756   000005                     ??_color_click_init:
   757   000005                     ??___fltol:
   758   000005                     ?_color_read_Red:
   759                           	callstack 0
   760   000005                     ?_color_read_Green:
   761                           	callstack 0
   762   000005                     ?_color_read_Blue:
   763                           	callstack 0
   764   000005                     ?_color_read_Clear:
   765                           	callstack 0
   766   000005                     ___awdiv@counter:
   767                           	callstack 0
   768   000005                     ___awmod@counter:
   769                           	callstack 0
   770   000005                     ___wmul@product:
   771                           	callstack 0
   772   000005                     ___fleq@ff2:
   773                           	callstack 0
   774   000005                     ___flge@ff2:
   775                           	callstack 0
   776   000005                     ___fladd@a:
   777                           	callstack 0
   778   000005                     ___flmul@a:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x4
   782   000005                     	ds	1
   783   000006                     ___awdiv@sign:
   784                           	callstack 0
   785   000006                     ___awmod@sign:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x5
   789   000006                     	ds	1
   790   000007                     ??_color_read_Red:
   791   000007                     ??_color_read_Green:
   792   000007                     ??_color_read_Blue:
   793   000007                     ??_color_read_Clear:
   794   000007                     ?_abs:
   795                           	callstack 0
   796   000007                     ?_read_prec_or_width:
   797                           	callstack 0
   798   000007                     read_prec_or_width@fmt:
   799                           	callstack 0
   800   000007                     ___awdiv@quotient:
   801                           	callstack 0
   802   000007                     abs@a:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x6
   806   000007                     	ds	1
   807   000008                     read_prec_or_width@ap:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x7
   811   000008                     	ds	1
   812   000009                     ??___fladd:
   813   000009                     ??___flmul:
   814   000009                     ??_abs:
   815   000009                     ??___fleq:
   816   000009                     ??___flge:
   817   000009                     ___fltol@sign1:
   818                           	callstack 0
   819   000009                     read_prec_or_width@c:
   820                           	callstack 0
   821   000009                     fputs@s:
   822                           	callstack 0
   823   000009                     ___omul@multiplicand:
   824                           	callstack 0
   825                           
   826                           ; 8 bytes @ 0x8
   827   000009                     	ds	1
   828   00000A                     ___fltol@exp1:
   829                           	callstack 0
   830   00000A                     color_read_Red@tmp:
   831                           	callstack 0
   832   00000A                     color_read_Green@tmp:
   833                           	callstack 0
   834   00000A                     color_read_Blue@tmp:
   835                           	callstack 0
   836   00000A                     color_read_Clear@tmp:
   837                           	callstack 0
   838   00000A                     read_prec_or_width@n:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x9
   842   00000A                     	ds	1
   843   00000B                     fputs@fp:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0xA
   847   00000B                     	ds	1
   848   00000C                     fputs@c:
   849                           	callstack 0
   850   00000C                     reading_values@cCurr:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0xB
   854   00000C                     	ds	1
   855   00000D                     ___fladd@signs:
   856                           	callstack 0
   857   00000D                     ___flmul@sign:
   858                           	callstack 0
   859   00000D                     fputs@i:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xC
   863   00000D                     	ds	1
   864   00000E                     ___fladd@aexp:
   865                           	callstack 0
   866   00000E                     ___flmul@grs:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xD
   870   00000E                     	ds	1
   871   00000F                     ___fladd@bexp:
   872                           	callstack 0
   873   00000F                     pad@fp:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0xE
   877   00000F                     	ds	1
   878   000010                     ___fladd@grs:
   879                           	callstack 0
   880   000010                     pad@buf:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0xF
   884   000010                     	ds	1
   885   000011                     ?___flsub:
   886                           	callstack 0
   887   000011                     ___flsub@b:
   888                           	callstack 0
   889   000011                     ___omul@product:
   890                           	callstack 0
   891                           
   892                           ; 8 bytes @ 0x10
   893   000011                     	ds	1
   894   000012                     ___flmul@aexp:
   895                           	callstack 0
   896   000012                     pad@p:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x11
   900   000012                     	ds	1
   901   000013                     ___flmul@bexp:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x12
   905   000013                     	ds	1
   906   000014                     ??_pad:
   907   000014                     ___flmul@prod:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x13
   911   000014                     	ds	1
   912   000015                     pad@i:
   913                           	callstack 0
   914   000015                     ___flsub@a:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x14
   918   000015                     	ds	2
   919   000017                     dtoa@fp:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x16
   923   000017                     	ds	1
   924   000018                     ___flmul@temp:
   925                           	callstack 0
   926   000018                     dtoa@d:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x17
   930   000018                     	ds	1
   931   000019                     ?___fldiv:
   932                           	callstack 0
   933   000019                     ?___lodiv:
   934                           	callstack 0
   935   000019                     ___fldiv@b:
   936                           	callstack 0
   937   000019                     ___lodiv@dividend:
   938                           	callstack 0
   939                           
   940                           ; 8 bytes @ 0x18
   941   000019                     	ds	1
   942   00001A                     _dtoa$2547:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x19
   946   00001A                     	ds	2
   947   00001C                     dtoa@p:
   948                           	callstack 0
   949                           
   950                           ; 1 bytes @ 0x1B
   951   00001C                     	ds	1
   952   00001D                     dtoa@w:
   953                           	callstack 0
   954   00001D                     ___fldiv@a:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x1C
   958   00001D                     	ds	2
   959   00001F                     dtoa@s:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x1E
   963   00001F                     	ds	1
   964   000020                     dtoa@i:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x1F
   968   000020                     	ds	1
   969   000021                     ??___fldiv:
   970   000021                     ___lodiv@divisor:
   971                           	callstack 0
   972                           
   973                           ; 8 bytes @ 0x20
   974   000021                     	ds	1
   975   000022                     vfpfcnvrt@fp:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x21
   979   000022                     	ds	1
   980   000023                     vfpfcnvrt@fmt:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x22
   984   000023                     	ds	1
   985   000024                     vfpfcnvrt@ap:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x23
   989   000024                     	ds	1
   990   000025                     ??_vfpfcnvrt:
   991   000025                     ___fldiv@rem:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x24
   995   000025                     	ds	2
   996   000027                     vfpfcnvrt@convarg:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x26
  1000   000027                     	ds	2
  1001   000029                     ___fldiv@sign:
  1002                           	callstack 0
  1003   000029                     ___lodiv@quotient:
  1004                           	callstack 0
  1005                           
  1006                           ; 8 bytes @ 0x28
  1007   000029                     	ds	1
  1008   00002A                     ___fldiv@new_exp:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x29
  1012   00002A                     	ds	1
  1013   00002B                     vfpfcnvrt@done:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x2A
  1017   00002B                     	ds	1
  1018   00002C                     vfpfcnvrt@cp:
  1019                           	callstack 0
  1020   00002C                     ___fldiv@grs:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x2B
  1024   00002C                     	ds	1
  1025   00002D                     ?_vfprintf:
  1026                           	callstack 0
  1027   00002D                     vfprintf@fp:
  1028                           	callstack 0
  1029                           
  1030                           ; 1 bytes @ 0x2C
  1031   00002D                     	ds	1
  1032   00002E                     vfprintf@fmt:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x2D
  1036   00002E                     	ds	1
  1037   00002F                     vfprintf@ap:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x2E
  1041   00002F                     	ds	1
  1042   000030                     ___fldiv@bexp:
  1043                           	callstack 0
  1044   000030                     vfprintf@cfmt:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x2F
  1048   000030                     	ds	1
  1049   000031                     ?_sprintf:
  1050                           	callstack 0
  1051   000031                     ___lodiv@counter:
  1052                           	callstack 0
  1053   000031                     ___fldiv@aexp:
  1054                           	callstack 0
  1055   000031                     sprintf@s:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x30
  1059   000031                     	ds	1
  1060   000032                     ?___xotofl:
  1061                           	callstack 0
  1062   000032                     ___xotofl@val:
  1063                           	callstack 0
  1064                           
  1065                           ; 8 bytes @ 0x31
  1066   000032                     	ds	1
  1067   000033                     sprintf@fmt:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x32
  1071   000033                     	ds	5
  1072   000038                     sprintf@ap:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x37
  1076   000038                     	ds	1
  1077   000039                     sprintf@f:
  1078                           	callstack 0
  1079                           
  1080                           ; 12 bytes @ 0x38
  1081   000039                     	ds	1
  1082   00003A                     ??___xotofl:
  1083                           
  1084                           ; 1 bytes @ 0x39
  1085   00003A                     	ds	8
  1086   000042                     ___xotofl@sign:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x41
  1090   000042                     	ds	1
  1091   000043                     ___xotofl@exp:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x42
  1095   000043                     	ds	1
  1096   000044                     ___xotofl@arg:
  1097                           	callstack 0
  1098                           
  1099                           ; 8 bytes @ 0x43
  1100   000044                     	ds	1
  1101   000045                     calibration_routine@cCal:
  1102                           	callstack 0
  1103   000045                     send2USART@hue:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x44
  1107   000045                     	ds	2
  1108   000047                     ??_calibration_routine:
  1109                           
  1110                           ; 1 bytes @ 0x46
  1111   000047                     	ds	5
  1112   00004C                     ?_convert_rgb2hue:
  1113                           	callstack 0
  1114   00004C                     convert_rgb2hue@cMax:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x4B
  1118   00004C                     	ds	2
  1119   00004E                     convert_rgb2hue@cCurr:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x4D
  1123   00004E                     	ds	2
  1124   000050                     ??_test:
  1125                           
  1126                           ; 1 bytes @ 0x4F
  1127   000050                     	ds	2
  1128   000052                     ??_main:
  1129                           
  1130                           ; 1 bytes @ 0x51
  1131   000052                     	ds	2
  1132                           
  1133 ;;
  1134 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1135 ;;
  1136 ;; *************** function _main *****************
  1137 ;; Defined at:
  1138 ;;		line 28 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  PWMcycle        2    0        unsigned int 
  1143 ;;  hue             2    0        unsigned int 
  1144 ;;  clear           2    0        unsigned int 
  1145 ;;  green           2    0        unsigned int 
  1146 ;;  blue            2    0        unsigned int 
  1147 ;;  red             2    0        unsigned int 
  1148 ;;  battery_leve    2    0        unsigned int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;Total ram usage:        2 bytes
  1163 ;; Hardware stack levels required when called: 10
  1164 ;; This function calls:
  1165 ;;		_ADC_init
  1166 ;;		_calibration_routine
  1167 ;;		_color_click_init
  1168 ;;		_initDCmotorsPWM
  1169 ;;		_initUSART4
  1170 ;;		_test
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text0
  1177   0034CC                     __ptext0:
  1178                           	callstack 0
  1179   0034CC                     _main:
  1180                           	callstack 21
  1181   0034CC                     
  1182                           ;main.c: 30:     ADC_init();
  1183   0034CC  ECF1  F01E         	call	_ADC_init	;wreg free
  1184   0034D0                     
  1185                           ;main.c: 31:     color_click_init();
  1186   0034D0  EC51  F01E         	call	_color_click_init	;wreg free
  1187   0034D4                     
  1188                           ;main.c: 32:     initUSART4();
  1189   0034D4  ECE2  F01E         	call	_initUSART4	;wreg free
  1190   0034D8                     
  1191                           ;main.c: 36:     initDCmotorsPWM(PWMcycle);
  1192   0034D8  0E00               	movlw	0
  1193   0034DA  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1194   0034DC  0E63               	movlw	99
  1195   0034DE  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1196   0034E0  EC5E  F01C         	call	_initDCmotorsPWM	;wreg free
  1197   0034E4                     
  1198                           ;main.c: 39:     motorL.power = 0;
  1199   0034E4  0E00               	movlw	0
  1200   0034E6  0101               	movlb	1	; () banked
  1201   0034E8  6F79               	movwf	_motorL& (0+255),b
  1202   0034EA                     
  1203                           ; BSR set to: 1
  1204                           ;main.c: 40:     motorL.direction = 1;
  1205   0034EA  0E01               	movlw	1
  1206   0034EC  6F7A               	movwf	(_motorL+1)& (0+255),b
  1207   0034EE                     
  1208                           ; BSR set to: 1
  1209                           ;main.c: 41:     motorL.brakemode = 1;
  1210   0034EE  0E01               	movlw	1
  1211   0034F0  6F7B               	movwf	(_motorL+2)& (0+255),b
  1212   0034F2                     
  1213                           ; BSR set to: 1
  1214                           ;main.c: 42:     motorL.PWMperiod = PWMcycle;
  1215   0034F2  0E00               	movlw	0
  1216   0034F4  6F7D               	movwf	(_motorL+4)& (0+255),b
  1217   0034F6  0E63               	movlw	99
  1218   0034F8  6F7C               	movwf	(_motorL+3)& (0+255),b
  1219   0034FA                     
  1220                           ; BSR set to: 1
  1221                           ;main.c: 43:     motorL.posDutyHighByte = (unsigned char *)(&CCPR1H);
  1222   0034FA  0EAA               	movlw	170
  1223   0034FC  6F7E               	movwf	(_motorL+5)& (0+255),b
  1224   0034FE  0E0F               	movlw	15
  1225   003500  6F7F               	movwf	(_motorL+6)& (0+255),b
  1226   003502                     
  1227                           ; BSR set to: 1
  1228                           ;main.c: 44:     motorL.negDutyHighByte = (unsigned char *)(&CCPR2H);
  1229   003502  0EA6               	movlw	166
  1230   003504  6F80               	movwf	(_motorL+7)& (0+255),b
  1231   003506  0E0F               	movlw	15
  1232   003508  6F81               	movwf	(_motorL+8)& (0+255),b
  1233   00350A                     
  1234                           ; BSR set to: 1
  1235                           ;main.c: 46:     motorR.power = 0;
  1236   00350A  0E00               	movlw	0
  1237   00350C  6F70               	movwf	_motorR& (0+255),b
  1238   00350E                     
  1239                           ; BSR set to: 1
  1240                           ;main.c: 47:     motorR.direction = 1;
  1241   00350E  0E01               	movlw	1
  1242   003510  6F71               	movwf	(_motorR+1)& (0+255),b
  1243   003512                     
  1244                           ; BSR set to: 1
  1245                           ;main.c: 48:     motorR.brakemode = 1;
  1246   003512  0E01               	movlw	1
  1247   003514  6F72               	movwf	(_motorR+2)& (0+255),b
  1248   003516                     
  1249                           ; BSR set to: 1
  1250                           ;main.c: 49:     motorR.PWMperiod = PWMcycle;
  1251   003516  0E00               	movlw	0
  1252   003518  6F74               	movwf	(_motorR+4)& (0+255),b
  1253   00351A  0E63               	movlw	99
  1254   00351C  6F73               	movwf	(_motorR+3)& (0+255),b
  1255                           
  1256                           ;main.c: 50:     motorR.posDutyHighByte = (unsigned char *)(&CCPR3H);
  1257   00351E  0E25               	movlw	37
  1258   003520  6F75               	movwf	(_motorR+5)& (0+255),b
  1259   003522  0E0F               	movlw	15
  1260   003524  6F76               	movwf	(_motorR+6)& (0+255),b
  1261                           
  1262                           ;main.c: 51:     motorR.negDutyHighByte = (unsigned char *)(&CCPR4H);
  1263   003526  0E21               	movlw	33
  1264   003528  6F77               	movwf	(_motorR+7)& (0+255),b
  1265   00352A  0E0F               	movlw	15
  1266   00352C  6F78               	movwf	(_motorR+8)& (0+255),b
  1267   00352E                     
  1268                           ; BSR set to: 1
  1269                           ;main.c: 54:     LATDbits.LATD7=0;
  1270   00352E  9E7C               	bcf	124,7,c	;volatile
  1271   003530                     
  1272                           ; BSR set to: 1
  1273                           ;main.c: 55:     TRISDbits.TRISD7=0;
  1274   003530  9E84               	bcf	132,7,c	;volatile
  1275   003532                     
  1276                           ; BSR set to: 1
  1277                           ;main.c: 58:     TRISDbits.TRISD3 = 0;
  1278   003532  9684               	bcf	132,3,c	;volatile
  1279   003534                     
  1280                           ; BSR set to: 1
  1281                           ;main.c: 59:     LATDbits.LATD3 = 1;
  1282   003534  867C               	bsf	124,3,c	;volatile
  1283   003536                     
  1284                           ; BSR set to: 1
  1285                           ;main.c: 62:     TRISGbits.TRISG0 = 0;
  1286   003536  9087               	bcf	135,0,c	;volatile
  1287   003538                     
  1288                           ; BSR set to: 1
  1289                           ;main.c: 63:     LATGbits.LATG0 = 0;
  1290   003538  907F               	bcf	127,0,c	;volatile
  1291   00353A                     
  1292                           ; BSR set to: 1
  1293                           ;main.c: 64:     TRISEbits.TRISE7 = 0;
  1294   00353A  9E85               	bcf	133,7,c	;volatile
  1295   00353C                     
  1296                           ; BSR set to: 1
  1297                           ;main.c: 65:     LATEbits.LATE7 = 0;
  1298   00353C  9E7D               	bcf	125,7,c	;volatile
  1299   00353E                     
  1300                           ; BSR set to: 1
  1301                           ;main.c: 66:     TRISAbits.TRISA3 = 0;
  1302   00353E  9681               	bcf	129,3,c	;volatile
  1303   003540                     
  1304                           ; BSR set to: 1
  1305                           ;main.c: 67:     LATAbits.LATA3 = 0;
  1306   003540  9679               	bcf	121,3,c	;volatile
  1307   003542                     
  1308                           ; BSR set to: 1
  1309                           ;main.c: 72:     TRISFbits.TRISF3=1;
  1310   003542  8686               	bsf	134,3,c	;volatile
  1311   003544                     
  1312                           ; BSR set to: 1
  1313                           ;main.c: 73:     ANSELFbits.ANSELF3=0;
  1314   003544  010E               	movlb	14	; () banked
  1315   003546  97B4               	bcf	180,3,b	;volatile
  1316   003548                     
  1317                           ; BSR set to: 14
  1318                           ;main.c: 75:     unsigned int battery_level;;main.c: 76:     unsigned int red;;main.c: 7
      +                          7:     unsigned int blue;;main.c: 78:     unsigned int green;;main.c: 79:     unsigned i
      +                          nt clear;;main.c: 80:     unsigned int hue;;main.c: 81:     TRISHbits.TRISH3 = 0;
  1319   003548  9688               	bcf	136,3,c	;volatile
  1320   00354A                     
  1321                           ; BSR set to: 14
  1322                           ;main.c: 82:     LATHbits.LATH3 = 1;
  1323   00354A  8680               	bsf	128,3,c	;volatile
  1324   00354C                     
  1325                           ; BSR set to: 14
  1326                           ;main.c: 83:     _delay((unsigned long)((300)*(64000000/4000.0)));
  1327   00354C  0E19               	movlw	25
  1328   00354E  6E53               	movwf	(??_main+1)^0,c
  1329   003550  0E5A               	movlw	90
  1330   003552  6E52               	movwf	??_main^0,c
  1331   003554  0EB2               	movlw	178
  1332   003556                     u5007:
  1333   003556  2EE8               	decfsz	wreg,f,c
  1334   003558  D7FE               	bra	u5007
  1335   00355A  2E52               	decfsz	??_main^0,f,c
  1336   00355C  D7FC               	bra	u5007
  1337   00355E  2E53               	decfsz	(??_main+1)^0,f,c
  1338   003560  D7FA               	bra	u5007
  1339   003562                     
  1340                           ;main.c: 84:     LATHbits.LATH3 = 0;
  1341   003562  9680               	bcf	128,3,c	;volatile
  1342   003564                     
  1343                           ;main.c: 85:     LATFbits.LATF2 = 0;
  1344   003564  947E               	bcf	126,2,c	;volatile
  1345   003566                     
  1346                           ;main.c: 86:     TRISFbits.TRISF2 = 1;
  1347   003566  8486               	bsf	134,2,c	;volatile
  1348   003568                     
  1349                           ;main.c: 87:     ANSELFbits.ANSELF2 = 0;
  1350   003568  010E               	movlb	14	; () banked
  1351   00356A  95B4               	bcf	180,2,b	;volatile
  1352   00356C                     
  1353                           ; BSR set to: 14
  1354                           ;main.c: 90:     calibration_routine(&colorCalibration);
  1355   00356C  0E8A               	movlw	low _colorCalibration
  1356   00356E  6E45               	movwf	calibration_routine@cCal^0,c
  1357   003570  0E01               	movlw	high _colorCalibration
  1358   003572  6E46               	movwf	(calibration_routine@cCal+1)^0,c
  1359   003574  EC08  F015         	call	_calibration_routine	;wreg free
  1360   003578                     l5074:
  1361                           
  1362                           ;main.c: 97:         test();
  1363   003578  ECAF  F016         	call	_test	;wreg free
  1364   00357C  EFBC  F01A         	goto	l5074
  1365   003580  EF00  F000         	goto	start
  1366   003584                     __end_of_main:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _test *****************
  1370 ;; Defined at:
  1371 ;;		line 149 in file "color.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  combo           2   52[BANK1 ] unsigned int 
  1376 ;;  led_state      50    0[BANK1 ] unsigned char [50]
  1377 ;;  hue             2   50[BANK1 ] unsigned int 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1388 ;;      Locals:         0       0      54       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1390 ;;      Totals:         2       0      54       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1391 ;;Total ram usage:       56 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 9
  1394 ;; This function calls:
  1395 ;;		_convert_rgb2hue
  1396 ;;		_reading_values
  1397 ;;		_send2USART
  1398 ;;		_sendStringSerial4
  1399 ;;		_sprintf
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text1
  1406   002D5E                     __ptext1:
  1407                           	callstack 0
  1408   002D5E                     _test:
  1409                           	callstack 21
  1410   002D5E                     
  1411                           ;color.c: 151:     unsigned int hue;;color.c: 153:     char led_state[50];;color.c: 156:
      +                               for (unsigned int combo = 0; combo < 4; ++combo) {
  1412   002D5E  0E00               	movlw	0
  1413   002D60  0101               	movlb	1	; () banked
  1414   002D62  6FC7               	movwf	(test@combo+1)& (0+255),b
  1415   002D64  0E00               	movlw	0
  1416   002D66  6FC6               	movwf	test@combo& (0+255),b
  1417   002D68                     l4860:
  1418                           
  1419                           ; BSR set to: 1
  1420                           ;color.c: 159:         if (combo == 0) {
  1421   002D68  51C6               	movf	test@combo& (0+255),w,b
  1422   002D6A  11C7               	iorwf	(test@combo+1)& (0+255),w,b
  1423   002D6C  A4D8               	btfss	status,2,c
  1424   002D6E  EFBB  F016         	goto	u4821
  1425   002D72  EFBD  F016         	goto	u4820
  1426   002D76                     u4821:
  1427   002D76  EFD5  F016         	goto	l4866
  1428   002D7A                     u4820:
  1429   002D7A                     
  1430                           ; BSR set to: 1
  1431                           ;color.c: 161:             LATGbits.LATG0 = 1;
  1432   002D7A  807F               	bsf	127,0,c	;volatile
  1433                           
  1434                           ;color.c: 162:             LATEbits.LATE7 = 0;
  1435   002D7C  9E7D               	bcf	125,7,c	;volatile
  1436                           
  1437                           ;color.c: 163:             LATAbits.LATA3 = 0;
  1438   002D7E  9679               	bcf	121,3,c	;volatile
  1439   002D80                     
  1440                           ; BSR set to: 1
  1441                           ;color.c: 164:             sprintf(led_state,"Red_light=%d, \n\r", LATGbits.LATG0);
  1442   002D80  0E92               	movlw	low test@led_state
  1443   002D82  6E31               	movwf	sprintf@s^0,c
  1444   002D84  0E01               	movlw	high test@led_state
  1445   002D86  6E32               	movwf	(sprintf@s+1)^0,c
  1446   002D88  0EB4               	movlw	low STR_1
  1447   002D8A  6E33               	movwf	sprintf@fmt^0,c
  1448   002D8C  B07F               	btfsc	127,0,c	;volatile
  1449   002D8E  EFCB  F016         	goto	u4831
  1450   002D92  EFCF  F016         	goto	u4830
  1451   002D96                     u4831:
  1452   002D96  6A50               	clrf	??_test^0,c
  1453   002D98  2A50               	incf	??_test^0,f,c
  1454   002D9A  EFD0  F016         	goto	u4838
  1455   002D9E                     u4830:
  1456   002D9E  6A50               	clrf	??_test^0,c
  1457   002DA0                     u4838:
  1458   002DA0  5050               	movf	??_test^0,w,c
  1459   002DA2  6E34               	movwf	(?_sprintf+3)^0,c
  1460   002DA4  6A35               	clrf	(?_sprintf+4)^0,c
  1461   002DA6  ECFA  F01D         	call	_sprintf	;wreg free
  1462   002DAA                     l4866:
  1463                           
  1464                           ;color.c: 169:         if (combo == 1) {
  1465   002DAA  0101               	movlb	1	; () banked
  1466   002DAC  05C6               	decf	test@combo& (0+255),w,b
  1467   002DAE  11C7               	iorwf	(test@combo+1)& (0+255),w,b
  1468   002DB0  A4D8               	btfss	status,2,c
  1469   002DB2  EFDD  F016         	goto	u4841
  1470   002DB6  EFDF  F016         	goto	u4840
  1471   002DBA                     u4841:
  1472   002DBA  EFF7  F016         	goto	l4872
  1473   002DBE                     u4840:
  1474   002DBE                     
  1475                           ; BSR set to: 1
  1476                           ;color.c: 170:             LATGbits.LATG0 = 0;
  1477   002DBE  907F               	bcf	127,0,c	;volatile
  1478                           
  1479                           ;color.c: 171:             LATEbits.LATE7 = 1;
  1480   002DC0  8E7D               	bsf	125,7,c	;volatile
  1481                           
  1482                           ;color.c: 172:             LATAbits.LATA3 = 0;
  1483   002DC2  9679               	bcf	121,3,c	;volatile
  1484   002DC4                     
  1485                           ; BSR set to: 1
  1486                           ;color.c: 173:             sprintf(led_state,"Green_light=%d, \n\r", LATEbits.LATE7);
  1487   002DC4  0E92               	movlw	low test@led_state
  1488   002DC6  6E31               	movwf	sprintf@s^0,c
  1489   002DC8  0E01               	movlw	high test@led_state
  1490   002DCA  6E32               	movwf	(sprintf@s+1)^0,c
  1491   002DCC  0EA1               	movlw	low STR_2
  1492   002DCE  6E33               	movwf	sprintf@fmt^0,c
  1493   002DD0  BE7D               	btfsc	125,7,c	;volatile
  1494   002DD2  EFED  F016         	goto	u4851
  1495   002DD6  EFF1  F016         	goto	u4850
  1496   002DDA                     u4851:
  1497   002DDA  6A50               	clrf	??_test^0,c
  1498   002DDC  2A50               	incf	??_test^0,f,c
  1499   002DDE  EFF2  F016         	goto	u4858
  1500   002DE2                     u4850:
  1501   002DE2  6A50               	clrf	??_test^0,c
  1502   002DE4                     u4858:
  1503   002DE4  5050               	movf	??_test^0,w,c
  1504   002DE6  6E34               	movwf	(?_sprintf+3)^0,c
  1505   002DE8  6A35               	clrf	(?_sprintf+4)^0,c
  1506   002DEA  ECFA  F01D         	call	_sprintf	;wreg free
  1507   002DEE                     l4872:
  1508                           
  1509                           ;color.c: 177:         if (combo == 2) {
  1510   002DEE  0E02               	movlw	2
  1511   002DF0  0101               	movlb	1	; () banked
  1512   002DF2  19C6               	xorwf	test@combo& (0+255),w,b
  1513   002DF4  11C7               	iorwf	(test@combo+1)& (0+255),w,b
  1514   002DF6  A4D8               	btfss	status,2,c
  1515   002DF8  EF00  F017         	goto	u4861
  1516   002DFC  EF02  F017         	goto	u4860
  1517   002E00                     u4861:
  1518   002E00  EF1A  F017         	goto	l4878
  1519   002E04                     u4860:
  1520   002E04                     
  1521                           ; BSR set to: 1
  1522                           ;color.c: 178:             LATGbits.LATG0 = 0;
  1523   002E04  907F               	bcf	127,0,c	;volatile
  1524                           
  1525                           ;color.c: 179:             LATEbits.LATE7 = 0;
  1526   002E06  9E7D               	bcf	125,7,c	;volatile
  1527                           
  1528                           ;color.c: 180:             LATAbits.LATA3 = 1;
  1529   002E08  8679               	bsf	121,3,c	;volatile
  1530   002E0A                     
  1531                           ; BSR set to: 1
  1532                           ;color.c: 181:             sprintf(led_state,"Blue_light=%d \n\r", LATAbits.LATA3);
  1533   002E0A  0E92               	movlw	low test@led_state
  1534   002E0C  6E31               	movwf	sprintf@s^0,c
  1535   002E0E  0E01               	movlw	high test@led_state
  1536   002E10  6E32               	movwf	(sprintf@s+1)^0,c
  1537   002E12  0ED6               	movlw	low STR_3
  1538   002E14  6E33               	movwf	sprintf@fmt^0,c
  1539   002E16  B679               	btfsc	121,3,c	;volatile
  1540   002E18  EF10  F017         	goto	u4871
  1541   002E1C  EF14  F017         	goto	u4870
  1542   002E20                     u4871:
  1543   002E20  6A50               	clrf	??_test^0,c
  1544   002E22  2A50               	incf	??_test^0,f,c
  1545   002E24  EF15  F017         	goto	u4878
  1546   002E28                     u4870:
  1547   002E28  6A50               	clrf	??_test^0,c
  1548   002E2A                     u4878:
  1549   002E2A  5050               	movf	??_test^0,w,c
  1550   002E2C  6E34               	movwf	(?_sprintf+3)^0,c
  1551   002E2E  6A35               	clrf	(?_sprintf+4)^0,c
  1552   002E30  ECFA  F01D         	call	_sprintf	;wreg free
  1553   002E34                     l4878:
  1554                           
  1555                           ;color.c: 187:         if (combo == 3) {
  1556   002E34  0E03               	movlw	3
  1557   002E36  0101               	movlb	1	; () banked
  1558   002E38  19C6               	xorwf	test@combo& (0+255),w,b
  1559   002E3A  11C7               	iorwf	(test@combo+1)& (0+255),w,b
  1560   002E3C  A4D8               	btfss	status,2,c
  1561   002E3E  EF23  F017         	goto	u4881
  1562   002E42  EF25  F017         	goto	u4880
  1563   002E46                     u4881:
  1564   002E46  EF34  F017         	goto	l4884
  1565   002E4A                     u4880:
  1566   002E4A                     
  1567                           ; BSR set to: 1
  1568                           ;color.c: 188:             LATGbits.LATG0 = 1;
  1569   002E4A  807F               	bsf	127,0,c	;volatile
  1570                           
  1571                           ;color.c: 189:             LATEbits.LATE7 = 1;
  1572   002E4C  8E7D               	bsf	125,7,c	;volatile
  1573                           
  1574                           ;color.c: 190:             LATAbits.LATA3 = 1;
  1575   002E4E  8679               	bsf	121,3,c	;volatile
  1576   002E50                     
  1577                           ; BSR set to: 1
  1578                           ;color.c: 191:             sprintf(led_state,"All_lights=%d \n\r", 1);
  1579   002E50  0E92               	movlw	low test@led_state
  1580   002E52  6E31               	movwf	sprintf@s^0,c
  1581   002E54  0E01               	movlw	high test@led_state
  1582   002E56  6E32               	movwf	(sprintf@s+1)^0,c
  1583   002E58  0EC5               	movlw	low STR_4
  1584   002E5A  6E33               	movwf	sprintf@fmt^0,c
  1585   002E5C  0E00               	movlw	0
  1586   002E5E  6E35               	movwf	(?_sprintf+4)^0,c
  1587   002E60  0E01               	movlw	1
  1588   002E62  6E34               	movwf	(?_sprintf+3)^0,c
  1589   002E64  ECFA  F01D         	call	_sprintf	;wreg free
  1590   002E68                     l4884:
  1591                           
  1592                           ;color.c: 194:         sendStringSerial4(led_state);
  1593   002E68  0E92               	movlw	low test@led_state
  1594   002E6A  6E02               	movwf	sendStringSerial4@string^0,c
  1595   002E6C  0E01               	movlw	high test@led_state
  1596   002E6E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1597   002E70  EC35  F01E         	call	_sendStringSerial4	;wreg free
  1598   002E74                     
  1599                           ;color.c: 196:         reading_values(&colorCurrent);
  1600   002E74  0E82               	movlw	low _colorCurrent
  1601   002E76  6E0C               	movwf	reading_values@cCurr^0,c
  1602   002E78  0E01               	movlw	high _colorCurrent
  1603   002E7A  6E0D               	movwf	(reading_values@cCurr+1)^0,c
  1604   002E7C  ECA6  F01C         	call	_reading_values	;wreg free
  1605   002E80                     
  1606                           ;color.c: 198:         hue = convert_rgb2hue(&colorCalibration, &colorCurrent);
  1607   002E80  0E8A               	movlw	low _colorCalibration
  1608   002E82  6E4C               	movwf	convert_rgb2hue@cMax^0,c
  1609   002E84  0E01               	movlw	high _colorCalibration
  1610   002E86  6E4D               	movwf	(convert_rgb2hue@cMax+1)^0,c
  1611   002E88  0E82               	movlw	low _colorCurrent
  1612   002E8A  6E4E               	movwf	convert_rgb2hue@cCurr^0,c
  1613   002E8C  0E01               	movlw	high _colorCurrent
  1614   002E8E  6E4F               	movwf	(convert_rgb2hue@cCurr+1)^0,c
  1615   002E90  EC7B  F007         	call	_convert_rgb2hue	;wreg free
  1616   002E94  C04C  F1C4         	movff	?_convert_rgb2hue,test@hue
  1617   002E98  C04D  F1C5         	movff	?_convert_rgb2hue+1,test@hue+1
  1618   002E9C                     
  1619                           ;color.c: 204:         send2USART(hue);
  1620   002E9C  C1C4  F045         	movff	test@hue,send2USART@hue
  1621   002EA0  C1C5  F046         	movff	test@hue+1,send2USART@hue+1
  1622   002EA4  ECC1  F01E         	call	_send2USART	;wreg free
  1623   002EA8                     
  1624                           ;color.c: 207:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1625   002EA8  0E29               	movlw	41
  1626   002EAA  6E51               	movwf	(??_test+1)^0,c
  1627   002EAC  0E96               	movlw	150
  1628   002EAE  6E50               	movwf	??_test^0,c
  1629   002EB0  0E7F               	movlw	127
  1630   002EB2                     u5017:
  1631   002EB2  2EE8               	decfsz	wreg,f,c
  1632   002EB4  D7FE               	bra	u5017
  1633   002EB6  2E50               	decfsz	??_test^0,f,c
  1634   002EB8  D7FC               	bra	u5017
  1635   002EBA  2E51               	decfsz	(??_test+1)^0,f,c
  1636   002EBC  D7FA               	bra	u5017
  1637   002EBE  0000               	nop	
  1638   002EC0                     
  1639                           ;color.c: 209:     }
  1640   002EC0  0101               	movlb	1	; () banked
  1641   002EC2  4BC6               	infsnz	test@combo& (0+255),f,b
  1642   002EC4  2BC7               	incf	(test@combo+1)& (0+255),f,b
  1643   002EC6                     
  1644                           ; BSR set to: 1
  1645   002EC6  51C7               	movf	(test@combo+1)& (0+255),w,b
  1646   002EC8  E109               	bnz	u4890
  1647   002ECA  0E04               	movlw	4
  1648   002ECC  5DC6               	subwf	test@combo& (0+255),w,b
  1649   002ECE  A0D8               	btfss	status,0,c
  1650   002ED0  EF6C  F017         	goto	u4891
  1651   002ED4  EF6E  F017         	goto	u4890
  1652   002ED8                     u4891:
  1653   002ED8  EFB4  F016         	goto	l4860
  1654   002EDC                     u4890:
  1655   002EDC                     
  1656                           ; BSR set to: 1
  1657   002EDC  0012               	return		;funcret
  1658   002EDE                     __end_of_test:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _send2USART *****************
  1662 ;; Defined at:
  1663 ;;		line 146 in file "serial.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  hue             2   68[COMRAM] unsigned int 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  hue_char       50    0[BANK0 ] unsigned char [50]
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1678 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;Total ram usage:       52 bytes
  1682 ;; Hardware stack levels used: 1
  1683 ;; Hardware stack levels required when called: 8
  1684 ;; This function calls:
  1685 ;;		_sendStringSerial4
  1686 ;;		_sprintf
  1687 ;; This function is called by:
  1688 ;;		_test
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text2
  1693   003D82                     __ptext2:
  1694                           	callstack 0
  1695   003D82                     _send2USART:
  1696                           	callstack 21
  1697   003D82                     
  1698                           ;serial.c: 146: void send2USART(unsigned int hue);serial.c: 147: {;serial.c: 148:       
      +                            char hue_char[50];;serial.c: 153:         sprintf(hue_char,"hue=%03d,  ",hue);
  1699   003D82  0E60               	movlw	low send2USART@hue_char
  1700   003D84  6E31               	movwf	sprintf@s^0,c
  1701   003D86  6A32               	clrf	(sprintf@s+1)^0,c
  1702   003D88  0EE7               	movlw	low STR_16
  1703   003D8A  6E33               	movwf	sprintf@fmt^0,c
  1704   003D8C  C045  F034         	movff	send2USART@hue,?_sprintf+3
  1705   003D90  C046  F035         	movff	send2USART@hue+1,?_sprintf+4
  1706   003D94  ECFA  F01D         	call	_sprintf	;wreg free
  1707   003D98                     
  1708                           ;serial.c: 158:         sendStringSerial4(hue_char);
  1709   003D98  0E60               	movlw	low send2USART@hue_char
  1710   003D9A  6E02               	movwf	sendStringSerial4@string^0,c
  1711   003D9C  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  1712   003D9E  EC35  F01E         	call	_sendStringSerial4	;wreg free
  1713   003DA2  0012               	return		;funcret
  1714   003DA4                     __end_of_send2USART:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _reading_values *****************
  1718 ;; Defined at:
  1719 ;;		line 283 in file "color.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  cCurr           2   11[COMRAM] PTR struct colors
  1722 ;;		 -> colorCurrent(8), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;Total ram usage:        2 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; Hardware stack levels required when called: 3
  1741 ;; This function calls:
  1742 ;;		_color_read_Blue
  1743 ;;		_color_read_Clear
  1744 ;;		_color_read_Green
  1745 ;;		_color_read_Red
  1746 ;; This function is called by:
  1747 ;;		_test
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text3
  1752   00394C                     __ptext3:
  1753                           	callstack 0
  1754   00394C                     _reading_values:
  1755                           	callstack 26
  1756   00394C                     
  1757                           ;color.c: 283: void reading_values(colors *cCurr);color.c: 284: {;color.c: 287:     (cCu
      +                          rr->red)= color_read_Red();
  1758   00394C  ECD5  F01C         	call	_color_read_Red	;wreg free
  1759   003950  C00C  FFD9         	movff	reading_values@cCurr,fsr2l
  1760   003954  C00D  FFDA         	movff	reading_values@cCurr+1,fsr2h
  1761   003958  C005  FFDE         	movff	?_color_read_Red,postinc2
  1762   00395C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  1763                           
  1764                           ;color.c: 288:     (cCurr->blue) = color_read_Blue();
  1765   003960  EC4D  F01D         	call	_color_read_Blue	;wreg free
  1766   003964  EE20 F004          	lfsr	2,4
  1767   003968  500C               	movf	reading_values@cCurr^0,w,c
  1768   00396A  26D9               	addwf	fsr2l,f,c
  1769   00396C  500D               	movf	(reading_values@cCurr+1)^0,w,c
  1770   00396E  22DA               	addwfc	fsr2h,f,c
  1771   003970  C005  FFDE         	movff	?_color_read_Blue,postinc2
  1772   003974  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  1773                           
  1774                           ;color.c: 289:     (cCurr->green) = color_read_Green();
  1775   003978  ECFD  F01C         	call	_color_read_Green	;wreg free
  1776   00397C  EE20 F002          	lfsr	2,2
  1777   003980  500C               	movf	reading_values@cCurr^0,w,c
  1778   003982  26D9               	addwf	fsr2l,f,c
  1779   003984  500D               	movf	(reading_values@cCurr+1)^0,w,c
  1780   003986  22DA               	addwfc	fsr2h,f,c
  1781   003988  C005  FFDE         	movff	?_color_read_Green,postinc2
  1782   00398C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  1783                           
  1784                           ;color.c: 290:     (cCurr->clear) = color_read_Clear();
  1785   003990  EC25  F01D         	call	_color_read_Clear	;wreg free
  1786   003994  EE20 F006          	lfsr	2,6
  1787   003998  500C               	movf	reading_values@cCurr^0,w,c
  1788   00399A  26D9               	addwf	fsr2l,f,c
  1789   00399C  500D               	movf	(reading_values@cCurr+1)^0,w,c
  1790   00399E  22DA               	addwfc	fsr2h,f,c
  1791   0039A0  C005  FFDE         	movff	?_color_read_Clear,postinc2
  1792   0039A4  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  1793   0039A8  0012               	return		;funcret
  1794   0039AA                     __end_of_reading_values:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _convert_rgb2hue *****************
  1798 ;; Defined at:
  1799 ;;		line 99 in file "color.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  cMax            2   75[COMRAM] PTR struct colors
  1802 ;;		 -> colorCalibration(8), 
  1803 ;;  cCurr           2   77[COMRAM] PTR struct colors
  1804 ;;		 -> colorCurrent(8), 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  total           8   74[BANK0 ] unsigned long long 
  1807 ;;  b               4  114[BANK0 ] float 
  1808 ;;  g               4  110[BANK0 ] float 
  1809 ;;  r               4  106[BANK0 ] float 
  1810 ;;  hue             4  102[BANK0 ] float 
  1811 ;;  min             4   82[BANK0 ] float 
  1812 ;;  diff            4   70[BANK0 ] float 
  1813 ;;  max             4   50[BANK0 ] float 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2   75[COMRAM] unsigned int 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1824 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1825 ;;      Temps:          0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Totals:         4     118       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;Total ram usage:      122 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 2
  1830 ;; This function calls:
  1831 ;;		___fladd
  1832 ;;		___fldiv
  1833 ;;		___fleq
  1834 ;;		___flge
  1835 ;;		___flmul
  1836 ;;		___flsub
  1837 ;;		___fltol
  1838 ;;		___lodiv
  1839 ;;		___omul
  1840 ;;		___xotofl
  1841 ;; This function is called by:
  1842 ;;		_test
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text4
  1847   000EF6                     __ptext4:
  1848                           	callstack 0
  1849   000EF6                     _convert_rgb2hue:
  1850                           	callstack 27
  1851   000EF6                     
  1852                           ;color.c: 99: unsigned int convert_rgb2hue(struct colors *cMax, struct colors *cCurr);co
      +                          lor.c: 100: {;color.c: 101:     float r, g, b, min, max, diff, hue = 0.0;
  1853   000EF6  0E00               	movlw	0
  1854   000EF8  0100               	movlb	0	; () banked
  1855   000EFA  6FC6               	movwf	convert_rgb2hue@hue& (0+255),b
  1856   000EFC  0E00               	movlw	0
  1857   000EFE  6FC7               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  1858   000F00  0E00               	movlw	0
  1859   000F02  6FC8               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  1860   000F04  0E00               	movlw	0
  1861   000F06  6FC9               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  1862   000F08                     
  1863                           ; BSR set to: 0
  1864                           ;color.c: 102:     unsigned long long total = ((unsigned long long)cCurr->red * cMax->bl
      +                          ue * cMax->green) + ((unsigned long long)cCurr->blue * cMax->red * cMax->green) + ((unsi
      +                          gned long long)cCurr->green * cMax->blue * cMax->red);
  1865   000F08  EE20 F004          	lfsr	2,4
  1866   000F0C  504C               	movf	convert_rgb2hue@cMax^0,w,c
  1867   000F0E  26D9               	addwf	fsr2l,f,c
  1868   000F10  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  1869   000F12  22DA               	addwfc	fsr2h,f,c
  1870   000F14  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  1871   000F18  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  1872   000F1C  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  1873   000F20  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  1874   000F24  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  1875   000F26  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  1876   000F28  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  1877   000F2A  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  1878   000F2C  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  1879   000F2E  6A10               	clrf	(___omul@multiplicand+7)^0,c
  1880   000F30  EE20 F002          	lfsr	2,2
  1881   000F34  504E               	movf	convert_rgb2hue@cCurr^0,w,c
  1882   000F36  26D9               	addwf	fsr2l,f,c
  1883   000F38  504F               	movf	(convert_rgb2hue@cCurr+1)^0,w,c
  1884   000F3A  22DA               	addwfc	fsr2h,f,c
  1885   000F3C  CFDE F062          	movff	postinc2,??_convert_rgb2hue+2
  1886   000F40  CFDD F063          	movff	postdec2,??_convert_rgb2hue+3
  1887   000F44  C062  F001         	movff	??_convert_rgb2hue+2,___omul@multiplier
  1888   000F48  C063  F002         	movff	??_convert_rgb2hue+3,___omul@multiplier+1
  1889   000F4C  6A03               	clrf	(___omul@multiplier+2)^0,c
  1890   000F4E  6A04               	clrf	(___omul@multiplier+3)^0,c
  1891   000F50  6A05               	clrf	(___omul@multiplier+4)^0,c
  1892   000F52  6A06               	clrf	(___omul@multiplier+5)^0,c
  1893   000F54  6A07               	clrf	(___omul@multiplier+6)^0,c
  1894   000F56  6A08               	clrf	(___omul@multiplier+7)^0,c
  1895   000F58  ECC6  F01B         	call	___omul	;wreg free
  1896   000F5C  C001  F0B6         	movff	?___omul,_convert_rgb2hue$2868
  1897   000F60  C002  F0B7         	movff	?___omul+1,_convert_rgb2hue$2868+1
  1898   000F64  C003  F0B8         	movff	?___omul+2,_convert_rgb2hue$2868+2
  1899   000F68  C004  F0B9         	movff	?___omul+3,_convert_rgb2hue$2868+3
  1900   000F6C  C005  F0BA         	movff	?___omul+4,_convert_rgb2hue$2868+4
  1901   000F70  C006  F0BB         	movff	?___omul+5,_convert_rgb2hue$2868+5
  1902   000F74  C007  F0BC         	movff	?___omul+6,_convert_rgb2hue$2868+6
  1903   000F78  C008  F0BD         	movff	?___omul+7,_convert_rgb2hue$2868+7
  1904   000F7C                     
  1905                           ;color.c: 102:     unsigned long long total = ((unsigned long long)cCurr->red * cMax->bl
      +                          ue * cMax->green) + ((unsigned long long)cCurr->blue * cMax->red * cMax->green) + ((unsi
      +                          gned long long)cCurr->green * cMax->blue * cMax->red);
  1906   000F7C  C04C  FFD9         	movff	convert_rgb2hue@cMax,fsr2l
  1907   000F80  C04D  FFDA         	movff	convert_rgb2hue@cMax+1,fsr2h
  1908   000F84  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  1909   000F88  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  1910   000F8C  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  1911   000F90  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  1912   000F94  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  1913   000F96  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  1914   000F98  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  1915   000F9A  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  1916   000F9C  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  1917   000F9E  6A10               	clrf	(___omul@multiplicand+7)^0,c
  1918   000FA0  EE20 F004          	lfsr	2,4
  1919   000FA4  504E               	movf	convert_rgb2hue@cCurr^0,w,c
  1920   000FA6  26D9               	addwf	fsr2l,f,c
  1921   000FA8  504F               	movf	(convert_rgb2hue@cCurr+1)^0,w,c
  1922   000FAA  22DA               	addwfc	fsr2h,f,c
  1923   000FAC  CFDE F062          	movff	postinc2,??_convert_rgb2hue+2
  1924   000FB0  CFDD F063          	movff	postdec2,??_convert_rgb2hue+3
  1925   000FB4  C062  F001         	movff	??_convert_rgb2hue+2,___omul@multiplier
  1926   000FB8  C063  F002         	movff	??_convert_rgb2hue+3,___omul@multiplier+1
  1927   000FBC  6A03               	clrf	(___omul@multiplier+2)^0,c
  1928   000FBE  6A04               	clrf	(___omul@multiplier+3)^0,c
  1929   000FC0  6A05               	clrf	(___omul@multiplier+4)^0,c
  1930   000FC2  6A06               	clrf	(___omul@multiplier+5)^0,c
  1931   000FC4  6A07               	clrf	(___omul@multiplier+6)^0,c
  1932   000FC6  6A08               	clrf	(___omul@multiplier+7)^0,c
  1933   000FC8  ECC6  F01B         	call	___omul	;wreg free
  1934   000FCC  C001  F0BE         	movff	?___omul,_convert_rgb2hue$2869
  1935   000FD0  C002  F0BF         	movff	?___omul+1,_convert_rgb2hue$2869+1
  1936   000FD4  C003  F0C0         	movff	?___omul+2,_convert_rgb2hue$2869+2
  1937   000FD8  C004  F0C1         	movff	?___omul+3,_convert_rgb2hue$2869+3
  1938   000FDC  C005  F0C2         	movff	?___omul+4,_convert_rgb2hue$2869+4
  1939   000FE0  C006  F0C3         	movff	?___omul+5,_convert_rgb2hue$2869+5
  1940   000FE4  C007  F0C4         	movff	?___omul+6,_convert_rgb2hue$2869+6
  1941   000FE8  C008  F0C5         	movff	?___omul+7,_convert_rgb2hue$2869+7
  1942   000FEC                     
  1943                           ;color.c: 102:     unsigned long long total = ((unsigned long long)cCurr->red * cMax->bl
      +                          ue * cMax->green) + ((unsigned long long)cCurr->blue * cMax->red * cMax->green) + ((unsi
      +                          gned long long)cCurr->green * cMax->blue * cMax->red);
  1944   000FEC  EE20 F004          	lfsr	2,4
  1945   000FF0  504C               	movf	convert_rgb2hue@cMax^0,w,c
  1946   000FF2  26D9               	addwf	fsr2l,f,c
  1947   000FF4  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  1948   000FF6  22DA               	addwfc	fsr2h,f,c
  1949   000FF8  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  1950   000FFC  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  1951   001000  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  1952   001004  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  1953   001008  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  1954   00100A  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  1955   00100C  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  1956   00100E  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  1957   001010  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  1958   001012  6A10               	clrf	(___omul@multiplicand+7)^0,c
  1959   001014  C04E  FFD9         	movff	convert_rgb2hue@cCurr,fsr2l
  1960   001018  C04F  FFDA         	movff	convert_rgb2hue@cCurr+1,fsr2h
  1961   00101C  CFDE F062          	movff	postinc2,??_convert_rgb2hue+2
  1962   001020  CFDD F063          	movff	postdec2,??_convert_rgb2hue+3
  1963   001024  C062  F001         	movff	??_convert_rgb2hue+2,___omul@multiplier
  1964   001028  C063  F002         	movff	??_convert_rgb2hue+3,___omul@multiplier+1
  1965   00102C  6A03               	clrf	(___omul@multiplier+2)^0,c
  1966   00102E  6A04               	clrf	(___omul@multiplier+3)^0,c
  1967   001030  6A05               	clrf	(___omul@multiplier+4)^0,c
  1968   001032  6A06               	clrf	(___omul@multiplier+5)^0,c
  1969   001034  6A07               	clrf	(___omul@multiplier+6)^0,c
  1970   001036  6A08               	clrf	(___omul@multiplier+7)^0,c
  1971   001038  ECC6  F01B         	call	___omul	;wreg free
  1972   00103C  C001  F086         	movff	?___omul,_convert_rgb2hue$2870
  1973   001040  C002  F087         	movff	?___omul+1,_convert_rgb2hue$2870+1
  1974   001044  C003  F088         	movff	?___omul+2,_convert_rgb2hue$2870+2
  1975   001048  C004  F089         	movff	?___omul+3,_convert_rgb2hue$2870+3
  1976   00104C  C005  F08A         	movff	?___omul+4,_convert_rgb2hue$2870+4
  1977   001050  C006  F08B         	movff	?___omul+5,_convert_rgb2hue$2870+5
  1978   001054  C007  F08C         	movff	?___omul+6,_convert_rgb2hue$2870+6
  1979   001058  C008  F08D         	movff	?___omul+7,_convert_rgb2hue$2870+7
  1980   00105C                     
  1981                           ;color.c: 102:     unsigned long long total = ((unsigned long long)cCurr->red * cMax->bl
      +                          ue * cMax->green) + ((unsigned long long)cCurr->blue * cMax->red * cMax->green) + ((unsi
      +                          gned long long)cCurr->green * cMax->blue * cMax->red);
  1982   00105C  C0B6  F001         	movff	_convert_rgb2hue$2868,___omul@multiplier
  1983   001060  C0B7  F002         	movff	_convert_rgb2hue$2868+1,___omul@multiplier+1
  1984   001064  C0B8  F003         	movff	_convert_rgb2hue$2868+2,___omul@multiplier+2
  1985   001068  C0B9  F004         	movff	_convert_rgb2hue$2868+3,___omul@multiplier+3
  1986   00106C  C0BA  F005         	movff	_convert_rgb2hue$2868+4,___omul@multiplier+4
  1987   001070  C0BB  F006         	movff	_convert_rgb2hue$2868+5,___omul@multiplier+5
  1988   001074  C0BC  F007         	movff	_convert_rgb2hue$2868+6,___omul@multiplier+6
  1989   001078  C0BD  F008         	movff	_convert_rgb2hue$2868+7,___omul@multiplier+7
  1990   00107C  C04C  FFD9         	movff	convert_rgb2hue@cMax,fsr2l
  1991   001080  C04D  FFDA         	movff	convert_rgb2hue@cMax+1,fsr2h
  1992   001084  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  1993   001088  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  1994   00108C  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  1995   001090  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  1996   001094  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  1997   001096  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  1998   001098  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  1999   00109A  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2000   00109C  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2001   00109E  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2002   0010A0  ECC6  F01B         	call	___omul	;wreg free
  2003   0010A4  C001  F062         	movff	?___omul,??_convert_rgb2hue+2
  2004   0010A8  C002  F063         	movff	?___omul+1,??_convert_rgb2hue+3
  2005   0010AC  C003  F064         	movff	?___omul+2,??_convert_rgb2hue+4
  2006   0010B0  C004  F065         	movff	?___omul+3,??_convert_rgb2hue+5
  2007   0010B4  C005  F066         	movff	?___omul+4,??_convert_rgb2hue+6
  2008   0010B8  C006  F067         	movff	?___omul+5,??_convert_rgb2hue+7
  2009   0010BC  C007  F068         	movff	?___omul+6,??_convert_rgb2hue+8
  2010   0010C0  C008  F069         	movff	?___omul+7,??_convert_rgb2hue+9
  2011   0010C4  C0BE  F001         	movff	_convert_rgb2hue$2869,___omul@multiplier
  2012   0010C8  C0BF  F002         	movff	_convert_rgb2hue$2869+1,___omul@multiplier+1
  2013   0010CC  C0C0  F003         	movff	_convert_rgb2hue$2869+2,___omul@multiplier+2
  2014   0010D0  C0C1  F004         	movff	_convert_rgb2hue$2869+3,___omul@multiplier+3
  2015   0010D4  C0C2  F005         	movff	_convert_rgb2hue$2869+4,___omul@multiplier+4
  2016   0010D8  C0C3  F006         	movff	_convert_rgb2hue$2869+5,___omul@multiplier+5
  2017   0010DC  C0C4  F007         	movff	_convert_rgb2hue$2869+6,___omul@multiplier+6
  2018   0010E0  C0C5  F008         	movff	_convert_rgb2hue$2869+7,___omul@multiplier+7
  2019   0010E4  EE20 F002          	lfsr	2,2
  2020   0010E8  504C               	movf	convert_rgb2hue@cMax^0,w,c
  2021   0010EA  26D9               	addwf	fsr2l,f,c
  2022   0010EC  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2023   0010EE  22DA               	addwfc	fsr2h,f,c
  2024   0010F0  CFDE F06A          	movff	postinc2,??_convert_rgb2hue+10
  2025   0010F4  CFDD F06B          	movff	postdec2,??_convert_rgb2hue+11
  2026   0010F8  C06A  F009         	movff	??_convert_rgb2hue+10,___omul@multiplicand
  2027   0010FC  C06B  F00A         	movff	??_convert_rgb2hue+11,___omul@multiplicand+1
  2028   001100  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2029   001102  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2030   001104  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2031   001106  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2032   001108  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2033   00110A  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2034   00110C  ECC6  F01B         	call	___omul	;wreg free
  2035   001110  C001  F06C         	movff	?___omul,??_convert_rgb2hue+12
  2036   001114  C002  F06D         	movff	?___omul+1,??_convert_rgb2hue+13
  2037   001118  C003  F06E         	movff	?___omul+2,??_convert_rgb2hue+14
  2038   00111C  C004  F06F         	movff	?___omul+3,??_convert_rgb2hue+15
  2039   001120  C005  F070         	movff	?___omul+4,??_convert_rgb2hue+16
  2040   001124  C006  F071         	movff	?___omul+5,??_convert_rgb2hue+17
  2041   001128  C007  F072         	movff	?___omul+6,??_convert_rgb2hue+18
  2042   00112C  C008  F073         	movff	?___omul+7,??_convert_rgb2hue+19
  2043   001130  C086  F001         	movff	_convert_rgb2hue$2870,___omul@multiplier
  2044   001134  C087  F002         	movff	_convert_rgb2hue$2870+1,___omul@multiplier+1
  2045   001138  C088  F003         	movff	_convert_rgb2hue$2870+2,___omul@multiplier+2
  2046   00113C  C089  F004         	movff	_convert_rgb2hue$2870+3,___omul@multiplier+3
  2047   001140  C08A  F005         	movff	_convert_rgb2hue$2870+4,___omul@multiplier+4
  2048   001144  C08B  F006         	movff	_convert_rgb2hue$2870+5,___omul@multiplier+5
  2049   001148  C08C  F007         	movff	_convert_rgb2hue$2870+6,___omul@multiplier+6
  2050   00114C  C08D  F008         	movff	_convert_rgb2hue$2870+7,___omul@multiplier+7
  2051   001150  EE20 F002          	lfsr	2,2
  2052   001154  504C               	movf	convert_rgb2hue@cMax^0,w,c
  2053   001156  26D9               	addwf	fsr2l,f,c
  2054   001158  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2055   00115A  22DA               	addwfc	fsr2h,f,c
  2056   00115C  CFDE F074          	movff	postinc2,??_convert_rgb2hue+20
  2057   001160  CFDD F075          	movff	postdec2,??_convert_rgb2hue+21
  2058   001164  C074  F009         	movff	??_convert_rgb2hue+20,___omul@multiplicand
  2059   001168  C075  F00A         	movff	??_convert_rgb2hue+21,___omul@multiplicand+1
  2060   00116C  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2061   00116E  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2062   001170  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2063   001172  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2064   001174  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2065   001176  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2066   001178  ECC6  F01B         	call	___omul	;wreg free
  2067   00117C  C001  F076         	movff	?___omul,??_convert_rgb2hue+22
  2068   001180  C002  F077         	movff	?___omul+1,??_convert_rgb2hue+23
  2069   001184  C003  F078         	movff	?___omul+2,??_convert_rgb2hue+24
  2070   001188  C004  F079         	movff	?___omul+3,??_convert_rgb2hue+25
  2071   00118C  C005  F07A         	movff	?___omul+4,??_convert_rgb2hue+26
  2072   001190  C006  F07B         	movff	?___omul+5,??_convert_rgb2hue+27
  2073   001194  C007  F07C         	movff	?___omul+6,??_convert_rgb2hue+28
  2074   001198  C008  F07D         	movff	?___omul+7,??_convert_rgb2hue+29
  2075   00119C  0100               	movlb	0	; () banked
  2076   00119E  516C               	movf	(??_convert_rgb2hue+12)& (0+255),w,b
  2077   0011A0  2576               	addwf	(??_convert_rgb2hue+22)& (0+255),w,b
  2078   0011A2  6F7E               	movwf	(??_convert_rgb2hue+30)& (0+255),b
  2079   0011A4  516D               	movf	(??_convert_rgb2hue+13)& (0+255),w,b
  2080   0011A6  2177               	addwfc	(??_convert_rgb2hue+23)& (0+255),w,b
  2081   0011A8  6F7F               	movwf	(??_convert_rgb2hue+31)& (0+255),b
  2082   0011AA  516E               	movf	(??_convert_rgb2hue+14)& (0+255),w,b
  2083   0011AC  2178               	addwfc	(??_convert_rgb2hue+24)& (0+255),w,b
  2084   0011AE  6F80               	movwf	(??_convert_rgb2hue+32)& (0+255),b
  2085   0011B0  516F               	movf	(??_convert_rgb2hue+15)& (0+255),w,b
  2086   0011B2  2179               	addwfc	(??_convert_rgb2hue+25)& (0+255),w,b
  2087   0011B4  6F81               	movwf	(??_convert_rgb2hue+33)& (0+255),b
  2088   0011B6  5170               	movf	(??_convert_rgb2hue+16)& (0+255),w,b
  2089   0011B8  217A               	addwfc	(??_convert_rgb2hue+26)& (0+255),w,b
  2090   0011BA  6F82               	movwf	(??_convert_rgb2hue+34)& (0+255),b
  2091   0011BC  5171               	movf	(??_convert_rgb2hue+17)& (0+255),w,b
  2092   0011BE  217B               	addwfc	(??_convert_rgb2hue+27)& (0+255),w,b
  2093   0011C0  6F83               	movwf	(??_convert_rgb2hue+35)& (0+255),b
  2094   0011C2  5172               	movf	(??_convert_rgb2hue+18)& (0+255),w,b
  2095   0011C4  217C               	addwfc	(??_convert_rgb2hue+28)& (0+255),w,b
  2096   0011C6  6F84               	movwf	(??_convert_rgb2hue+36)& (0+255),b
  2097   0011C8  5173               	movf	(??_convert_rgb2hue+19)& (0+255),w,b
  2098   0011CA  217D               	addwfc	(??_convert_rgb2hue+29)& (0+255),w,b
  2099   0011CC  6F85               	movwf	(??_convert_rgb2hue+37)& (0+255),b
  2100   0011CE  5162               	movf	(??_convert_rgb2hue+2)& (0+255),w,b
  2101   0011D0  257E               	addwf	(??_convert_rgb2hue+30)& (0+255),w,b
  2102   0011D2  6FAA               	movwf	convert_rgb2hue@total& (0+255),b
  2103   0011D4  5163               	movf	(??_convert_rgb2hue+3)& (0+255),w,b
  2104   0011D6  217F               	addwfc	(??_convert_rgb2hue+31)& (0+255),w,b
  2105   0011D8  6FAB               	movwf	(convert_rgb2hue@total+1)& (0+255),b
  2106   0011DA  5164               	movf	(??_convert_rgb2hue+4)& (0+255),w,b
  2107   0011DC  2180               	addwfc	(??_convert_rgb2hue+32)& (0+255),w,b
  2108   0011DE  6FAC               	movwf	(convert_rgb2hue@total+2)& (0+255),b
  2109   0011E0  5165               	movf	(??_convert_rgb2hue+5)& (0+255),w,b
  2110   0011E2  2181               	addwfc	(??_convert_rgb2hue+33)& (0+255),w,b
  2111   0011E4  6FAD               	movwf	(convert_rgb2hue@total+3)& (0+255),b
  2112   0011E6  5166               	movf	(??_convert_rgb2hue+6)& (0+255),w,b
  2113   0011E8  2182               	addwfc	(??_convert_rgb2hue+34)& (0+255),w,b
  2114   0011EA  6FAE               	movwf	(convert_rgb2hue@total+4)& (0+255),b
  2115   0011EC  5167               	movf	(??_convert_rgb2hue+7)& (0+255),w,b
  2116   0011EE  2183               	addwfc	(??_convert_rgb2hue+35)& (0+255),w,b
  2117   0011F0  6FAF               	movwf	(convert_rgb2hue@total+5)& (0+255),b
  2118   0011F2  5168               	movf	(??_convert_rgb2hue+8)& (0+255),w,b
  2119   0011F4  2184               	addwfc	(??_convert_rgb2hue+36)& (0+255),w,b
  2120   0011F6  6FB0               	movwf	(convert_rgb2hue@total+6)& (0+255),b
  2121   0011F8  5169               	movf	(??_convert_rgb2hue+9)& (0+255),w,b
  2122   0011FA  2185               	addwfc	(??_convert_rgb2hue+37)& (0+255),w,b
  2123   0011FC  6FB1               	movwf	(convert_rgb2hue@total+7)& (0+255),b
  2124   0011FE                     
  2125                           ; BSR set to: 0
  2126                           ;color.c: 105:     if (total > 0) {
  2127   0011FE  51AA               	movf	convert_rgb2hue@total& (0+255),w,b
  2128   001200  11AB               	iorwf	(convert_rgb2hue@total+1)& (0+255),w,b
  2129   001202  11AC               	iorwf	(convert_rgb2hue@total+2)& (0+255),w,b
  2130   001204  11AD               	iorwf	(convert_rgb2hue@total+3)& (0+255),w,b
  2131   001206  11AE               	iorwf	(convert_rgb2hue@total+4)& (0+255),w,b
  2132   001208  11AF               	iorwf	(convert_rgb2hue@total+5)& (0+255),w,b
  2133   00120A  11B0               	iorwf	(convert_rgb2hue@total+6)& (0+255),w,b
  2134   00120C  11B1               	iorwf	(convert_rgb2hue@total+7)& (0+255),w,b
  2135   00120E  B4D8               	btfsc	status,2,c
  2136   001210  EF0C  F009         	goto	u4641
  2137   001214  EF0E  F009         	goto	u4640
  2138   001218                     u4641:
  2139   001218  EFDC  F00A         	goto	l4752
  2140   00121C                     u4640:
  2141   00121C                     
  2142                           ; BSR set to: 0
  2143                           ;color.c: 106:         r = ((unsigned long long)cCurr->red * cMax->blue * cMax->green) *
      +                           100 / total;
  2144   00121C  EE20 F004          	lfsr	2,4
  2145   001220  504C               	movf	convert_rgb2hue@cMax^0,w,c
  2146   001222  26D9               	addwf	fsr2l,f,c
  2147   001224  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2148   001226  22DA               	addwfc	fsr2h,f,c
  2149   001228  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  2150   00122C  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  2151   001230  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  2152   001234  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  2153   001238  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2154   00123A  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2155   00123C  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2156   00123E  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2157   001240  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2158   001242  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2159   001244  C04E  FFD9         	movff	convert_rgb2hue@cCurr,fsr2l
  2160   001248  C04F  FFDA         	movff	convert_rgb2hue@cCurr+1,fsr2h
  2161   00124C  CFDE F062          	movff	postinc2,??_convert_rgb2hue+2
  2162   001250  CFDD F063          	movff	postdec2,??_convert_rgb2hue+3
  2163   001254  C062  F001         	movff	??_convert_rgb2hue+2,___omul@multiplier
  2164   001258  C063  F002         	movff	??_convert_rgb2hue+3,___omul@multiplier+1
  2165   00125C  6A03               	clrf	(___omul@multiplier+2)^0,c
  2166   00125E  6A04               	clrf	(___omul@multiplier+3)^0,c
  2167   001260  6A05               	clrf	(___omul@multiplier+4)^0,c
  2168   001262  6A06               	clrf	(___omul@multiplier+5)^0,c
  2169   001264  6A07               	clrf	(___omul@multiplier+6)^0,c
  2170   001266  6A08               	clrf	(___omul@multiplier+7)^0,c
  2171   001268  ECC6  F01B         	call	___omul	;wreg free
  2172   00126C  C001  F0B6         	movff	?___omul,_convert_rgb2hue$2868
  2173   001270  C002  F0B7         	movff	?___omul+1,_convert_rgb2hue$2868+1
  2174   001274  C003  F0B8         	movff	?___omul+2,_convert_rgb2hue$2868+2
  2175   001278  C004  F0B9         	movff	?___omul+3,_convert_rgb2hue$2868+3
  2176   00127C  C005  F0BA         	movff	?___omul+4,_convert_rgb2hue$2868+4
  2177   001280  C006  F0BB         	movff	?___omul+5,_convert_rgb2hue$2868+5
  2178   001284  C007  F0BC         	movff	?___omul+6,_convert_rgb2hue$2868+6
  2179   001288  C008  F0BD         	movff	?___omul+7,_convert_rgb2hue$2868+7
  2180                           
  2181                           ;color.c: 106:         r = ((unsigned long long)cCurr->red * cMax->blue * cMax->green) *
      +                           100 / total;
  2182   00128C  EE20 F002          	lfsr	2,2
  2183   001290  504C               	movf	convert_rgb2hue@cMax^0,w,c
  2184   001292  26D9               	addwf	fsr2l,f,c
  2185   001294  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2186   001296  22DA               	addwfc	fsr2h,f,c
  2187   001298  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  2188   00129C  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  2189   0012A0  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  2190   0012A4  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  2191   0012A8  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2192   0012AA  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2193   0012AC  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2194   0012AE  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2195   0012B0  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2196   0012B2  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2197   0012B4  C0B6  F001         	movff	_convert_rgb2hue$2868,___omul@multiplier
  2198   0012B8  C0B7  F002         	movff	_convert_rgb2hue$2868+1,___omul@multiplier+1
  2199   0012BC  C0B8  F003         	movff	_convert_rgb2hue$2868+2,___omul@multiplier+2
  2200   0012C0  C0B9  F004         	movff	_convert_rgb2hue$2868+3,___omul@multiplier+3
  2201   0012C4  C0BA  F005         	movff	_convert_rgb2hue$2868+4,___omul@multiplier+4
  2202   0012C8  C0BB  F006         	movff	_convert_rgb2hue$2868+5,___omul@multiplier+5
  2203   0012CC  C0BC  F007         	movff	_convert_rgb2hue$2868+6,___omul@multiplier+6
  2204   0012D0  C0BD  F008         	movff	_convert_rgb2hue$2868+7,___omul@multiplier+7
  2205   0012D4  ECC6  F01B         	call	___omul	;wreg free
  2206   0012D8  C001  F0BE         	movff	?___omul,_convert_rgb2hue$2869
  2207   0012DC  C002  F0BF         	movff	?___omul+1,_convert_rgb2hue$2869+1
  2208   0012E0  C003  F0C0         	movff	?___omul+2,_convert_rgb2hue$2869+2
  2209   0012E4  C004  F0C1         	movff	?___omul+3,_convert_rgb2hue$2869+3
  2210   0012E8  C005  F0C2         	movff	?___omul+4,_convert_rgb2hue$2869+4
  2211   0012EC  C006  F0C3         	movff	?___omul+5,_convert_rgb2hue$2869+5
  2212   0012F0  C007  F0C4         	movff	?___omul+6,_convert_rgb2hue$2869+6
  2213   0012F4  C008  F0C5         	movff	?___omul+7,_convert_rgb2hue$2869+7
  2214                           
  2215                           ;color.c: 106:         r = ((unsigned long long)cCurr->red * cMax->blue * cMax->green) *
      +                           100 / total;
  2216   0012F8  C0AA  F021         	movff	convert_rgb2hue@total,___lodiv@divisor
  2217   0012FC  C0AB  F022         	movff	convert_rgb2hue@total+1,___lodiv@divisor+1
  2218   001300  C0AC  F023         	movff	convert_rgb2hue@total+2,___lodiv@divisor+2
  2219   001304  C0AD  F024         	movff	convert_rgb2hue@total+3,___lodiv@divisor+3
  2220   001308  C0AE  F025         	movff	convert_rgb2hue@total+4,___lodiv@divisor+4
  2221   00130C  C0AF  F026         	movff	convert_rgb2hue@total+5,___lodiv@divisor+5
  2222   001310  C0B0  F027         	movff	convert_rgb2hue@total+6,___lodiv@divisor+6
  2223   001314  C0B1  F028         	movff	convert_rgb2hue@total+7,___lodiv@divisor+7
  2224   001318  0E64               	movlw	100
  2225   00131A  6E09               	movwf	___omul@multiplicand^0,c
  2226   00131C  0E00               	movlw	0
  2227   00131E  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2228   001320  0E00               	movlw	0
  2229   001322  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2230   001324  0E00               	movlw	0
  2231   001326  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2232   001328  0E00               	movlw	0
  2233   00132A  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2234   00132C  0E00               	movlw	0
  2235   00132E  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2236   001330  0E00               	movlw	0
  2237   001332  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2238   001334  0E00               	movlw	0
  2239   001336  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2240   001338  C0BE  F001         	movff	_convert_rgb2hue$2869,___omul@multiplier
  2241   00133C  C0BF  F002         	movff	_convert_rgb2hue$2869+1,___omul@multiplier+1
  2242   001340  C0C0  F003         	movff	_convert_rgb2hue$2869+2,___omul@multiplier+2
  2243   001344  C0C1  F004         	movff	_convert_rgb2hue$2869+3,___omul@multiplier+3
  2244   001348  C0C2  F005         	movff	_convert_rgb2hue$2869+4,___omul@multiplier+4
  2245   00134C  C0C3  F006         	movff	_convert_rgb2hue$2869+5,___omul@multiplier+5
  2246   001350  C0C4  F007         	movff	_convert_rgb2hue$2869+6,___omul@multiplier+6
  2247   001354  C0C5  F008         	movff	_convert_rgb2hue$2869+7,___omul@multiplier+7
  2248   001358  ECC6  F01B         	call	___omul	;wreg free
  2249   00135C  C001  F019         	movff	?___omul,___lodiv@dividend
  2250   001360  C002  F01A         	movff	?___omul+1,___lodiv@dividend+1
  2251   001364  C003  F01B         	movff	?___omul+2,___lodiv@dividend+2
  2252   001368  C004  F01C         	movff	?___omul+3,___lodiv@dividend+3
  2253   00136C  C005  F01D         	movff	?___omul+4,___lodiv@dividend+4
  2254   001370  C006  F01E         	movff	?___omul+5,___lodiv@dividend+5
  2255   001374  C007  F01F         	movff	?___omul+6,___lodiv@dividend+6
  2256   001378  C008  F020         	movff	?___omul+7,___lodiv@dividend+7
  2257   00137C  EC2F  F019         	call	___lodiv	;wreg free
  2258   001380  C019  F032         	movff	?___lodiv,___xotofl@val
  2259   001384  C01A  F033         	movff	?___lodiv+1,___xotofl@val+1
  2260   001388  C01B  F034         	movff	?___lodiv+2,___xotofl@val+2
  2261   00138C  C01C  F035         	movff	?___lodiv+3,___xotofl@val+3
  2262   001390  C01D  F036         	movff	?___lodiv+4,___xotofl@val+4
  2263   001394  C01E  F037         	movff	?___lodiv+5,___xotofl@val+5
  2264   001398  C01F  F038         	movff	?___lodiv+6,___xotofl@val+6
  2265   00139C  C020  F039         	movff	?___lodiv+7,___xotofl@val+7
  2266   0013A0  0E00               	movlw	0
  2267   0013A2  ECB3  F013         	call	___xotofl
  2268   0013A6  C032  F0CA         	movff	?___xotofl,convert_rgb2hue@r
  2269   0013AA  C033  F0CB         	movff	?___xotofl+1,convert_rgb2hue@r+1
  2270   0013AE  C034  F0CC         	movff	?___xotofl+2,convert_rgb2hue@r+2
  2271   0013B2  C035  F0CD         	movff	?___xotofl+3,convert_rgb2hue@r+3
  2272                           
  2273                           ;color.c: 107:         g = ((unsigned long long)cCurr->green * cMax->blue * cMax->red) *
      +                           100 / total;
  2274   0013B6  EE20 F004          	lfsr	2,4
  2275   0013BA  504C               	movf	convert_rgb2hue@cMax^0,w,c
  2276   0013BC  26D9               	addwf	fsr2l,f,c
  2277   0013BE  504D               	movf	(convert_rgb2hue@cMax+1)^0,w,c
  2278   0013C0  22DA               	addwfc	fsr2h,f,c
  2279   0013C2  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  2280   0013C6  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  2281   0013CA  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  2282   0013CE  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  2283   0013D2  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2284   0013D4  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2285   0013D6  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2286   0013D8  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2287   0013DA  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2288   0013DC  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2289   0013DE  EE20 F002          	lfsr	2,2
  2290   0013E2  504E               	movf	convert_rgb2hue@cCurr^0,w,c
  2291   0013E4  26D9               	addwf	fsr2l,f,c
  2292   0013E6  504F               	movf	(convert_rgb2hue@cCurr+1)^0,w,c
  2293   0013E8  22DA               	addwfc	fsr2h,f,c
  2294   0013EA  CFDE F062          	movff	postinc2,??_convert_rgb2hue+2
  2295   0013EE  CFDD F063          	movff	postdec2,??_convert_rgb2hue+3
  2296   0013F2  C062  F001         	movff	??_convert_rgb2hue+2,___omul@multiplier
  2297   0013F6  C063  F002         	movff	??_convert_rgb2hue+3,___omul@multiplier+1
  2298   0013FA  6A03               	clrf	(___omul@multiplier+2)^0,c
  2299   0013FC  6A04               	clrf	(___omul@multiplier+3)^0,c
  2300   0013FE  6A05               	clrf	(___omul@multiplier+4)^0,c
  2301   001400  6A06               	clrf	(___omul@multiplier+5)^0,c
  2302   001402  6A07               	clrf	(___omul@multiplier+6)^0,c
  2303   001404  6A08               	clrf	(___omul@multiplier+7)^0,c
  2304   001406  ECC6  F01B         	call	___omul	;wreg free
  2305   00140A  C001  F0B6         	movff	?___omul,_convert_rgb2hue$2868
  2306   00140E  C002  F0B7         	movff	?___omul+1,_convert_rgb2hue$2868+1
  2307   001412  C003  F0B8         	movff	?___omul+2,_convert_rgb2hue$2868+2
  2308   001416  C004  F0B9         	movff	?___omul+3,_convert_rgb2hue$2868+3
  2309   00141A  C005  F0BA         	movff	?___omul+4,_convert_rgb2hue$2868+4
  2310   00141E  C006  F0BB         	movff	?___omul+5,_convert_rgb2hue$2868+5
  2311   001422  C007  F0BC         	movff	?___omul+6,_convert_rgb2hue$2868+6
  2312   001426  C008  F0BD         	movff	?___omul+7,_convert_rgb2hue$2868+7
  2313                           
  2314                           ;color.c: 107:         g = ((unsigned long long)cCurr->green * cMax->blue * cMax->red) *
      +                           100 / total;
  2315   00142A  C04C  FFD9         	movff	convert_rgb2hue@cMax,fsr2l
  2316   00142E  C04D  FFDA         	movff	convert_rgb2hue@cMax+1,fsr2h
  2317   001432  CFDE F060          	movff	postinc2,??_convert_rgb2hue
  2318   001436  CFDD F061          	movff	postdec2,??_convert_rgb2hue+1
  2319   00143A  C060  F009         	movff	??_convert_rgb2hue,___omul@multiplicand
  2320   00143E  C061  F00A         	movff	??_convert_rgb2hue+1,___omul@multiplicand+1
  2321   001442  6A0B               	clrf	(___omul@multiplicand+2)^0,c
  2322   001444  6A0C               	clrf	(___omul@multiplicand+3)^0,c
  2323   001446  6A0D               	clrf	(___omul@multiplicand+4)^0,c
  2324   001448  6A0E               	clrf	(___omul@multiplicand+5)^0,c
  2325   00144A  6A0F               	clrf	(___omul@multiplicand+6)^0,c
  2326   00144C  6A10               	clrf	(___omul@multiplicand+7)^0,c
  2327   00144E  C0B6  F001         	movff	_convert_rgb2hue$2868,___omul@multiplier
  2328   001452  C0B7  F002         	movff	_convert_rgb2hue$2868+1,___omul@multiplier+1
  2329   001456  C0B8  F003         	movff	_convert_rgb2hue$2868+2,___omul@multiplier+2
  2330   00145A  C0B9  F004         	movff	_convert_rgb2hue$2868+3,___omul@multiplier+3
  2331   00145E  C0BA  F005         	movff	_convert_rgb2hue$2868+4,___omul@multiplier+4
  2332   001462  C0BB  F006         	movff	_convert_rgb2hue$2868+5,___omul@multiplier+5
  2333   001466  C0BC  F007         	movff	_convert_rgb2hue$2868+6,___omul@multiplier+6
  2334   00146A  C0BD  F008         	movff	_convert_rgb2hue$2868+7,___omul@multiplier+7
  2335   00146E  ECC6  F01B         	call	___omul	;wreg free
  2336   001472  C001  F0BE         	movff	?___omul,_convert_rgb2hue$2869
  2337   001476  C002  F0BF         	movff	?___omul+1,_convert_rgb2hue$2869+1
  2338   00147A  C003  F0C0         	movff	?___omul+2,_convert_rgb2hue$2869+2
  2339   00147E  C004  F0C1         	movff	?___omul+3,_convert_rgb2hue$2869+3
  2340   001482  C005  F0C2         	movff	?___omul+4,_convert_rgb2hue$2869+4
  2341   001486  C006  F0C3         	movff	?___omul+5,_convert_rgb2hue$2869+5
  2342   00148A  C007  F0C4         	movff	?___omul+6,_convert_rgb2hue$2869+6
  2343   00148E  C008  F0C5         	movff	?___omul+7,_convert_rgb2hue$2869+7
  2344                           
  2345                           ;color.c: 107:         g = ((unsigned long long)cCurr->green * cMax->blue * cMax->red) *
      +                           100 / total;
  2346   001492  C0AA  F021         	movff	convert_rgb2hue@total,___lodiv@divisor
  2347   001496  C0AB  F022         	movff	convert_rgb2hue@total+1,___lodiv@divisor+1
  2348   00149A  C0AC  F023         	movff	convert_rgb2hue@total+2,___lodiv@divisor+2
  2349   00149E  C0AD  F024         	movff	convert_rgb2hue@total+3,___lodiv@divisor+3
  2350   0014A2  C0AE  F025         	movff	convert_rgb2hue@total+4,___lodiv@divisor+4
  2351   0014A6  C0AF  F026         	movff	convert_rgb2hue@total+5,___lodiv@divisor+5
  2352   0014AA  C0B0  F027         	movff	convert_rgb2hue@total+6,___lodiv@divisor+6
  2353   0014AE  C0B1  F028         	movff	convert_rgb2hue@total+7,___lodiv@divisor+7
  2354   0014B2  0E64               	movlw	100
  2355   0014B4  6E09               	movwf	___omul@multiplicand^0,c
  2356   0014B6  0E00               	movlw	0
  2357   0014B8  6E0A               	movwf	(___omul@multiplicand+1)^0,c
  2358   0014BA  0E00               	movlw	0
  2359   0014BC  6E0B               	movwf	(___omul@multiplicand+2)^0,c
  2360   0014BE  0E00               	movlw	0
  2361   0014C0  6E0C               	movwf	(___omul@multiplicand+3)^0,c
  2362   0014C2  0E00               	movlw	0
  2363   0014C4  6E0D               	movwf	(___omul@multiplicand+4)^0,c
  2364   0014C6  0E00               	movlw	0
  2365   0014C8  6E0E               	movwf	(___omul@multiplicand+5)^0,c
  2366   0014CA  0E00               	movlw	0
  2367   0014CC  6E0F               	movwf	(___omul@multiplicand+6)^0,c
  2368   0014CE  0E00               	movlw	0
  2369   0014D0  6E10               	movwf	(___omul@multiplicand+7)^0,c
  2370   0014D2  C0BE  F001         	movff	_convert_rgb2hue$2869,___omul@multiplier
  2371   0014D6  C0BF  F002         	movff	_convert_rgb2hue$2869+1,___omul@multiplier+1
  2372   0014DA  C0C0  F003         	movff	_convert_rgb2hue$2869+2,___omul@multiplier+2
  2373   0014DE  C0C1  F004         	movff	_convert_rgb2hue$2869+3,___omul@multiplier+3
  2374   0014E2  C0C2  F005         	movff	_convert_rgb2hue$2869+4,___omul@multiplier+4
  2375   0014E6  C0C3  F006         	movff	_convert_rgb2hue$2869+5,___omul@multiplier+5
  2376   0014EA  C0C4  F007         	movff	_convert_rgb2hue$2869+6,___omul@multiplier+6
  2377   0014EE  C0C5  F008         	movff	_convert_rgb2hue$2869+7,___omul@multiplier+7
  2378   0014F2  ECC6  F01B         	call	___omul	;wreg free
  2379   0014F6  C001  F019         	movff	?___omul,___lodiv@dividend
  2380   0014FA  C002  F01A         	movff	?___omul+1,___lodiv@dividend+1
  2381   0014FE  C003  F01B         	movff	?___omul+2,___lodiv@dividend+2
  2382   001502  C004  F01C         	movff	?___omul+3,___lodiv@dividend+3
  2383   001506  C005  F01D         	movff	?___omul+4,___lodiv@dividend+4
  2384   00150A  C006  F01E         	movff	?___omul+5,___lodiv@dividend+5
  2385   00150E  C007  F01F         	movff	?___omul+6,___lodiv@dividend+6
  2386   001512  C008  F020         	movff	?___omul+7,___lodiv@dividend+7
  2387   001516  EC2F  F019         	call	___lodiv	;wreg free
  2388   00151A  C019  F032         	movff	?___lodiv,___xotofl@val
  2389   00151E  C01A  F033         	movff	?___lodiv+1,___xotofl@val+1
  2390   001522  C01B  F034         	movff	?___lodiv+2,___xotofl@val+2
  2391   001526  C01C  F035         	movff	?___lodiv+3,___xotofl@val+3
  2392   00152A  C01D  F036         	movff	?___lodiv+4,___xotofl@val+4
  2393   00152E  C01E  F037         	movff	?___lodiv+5,___xotofl@val+5
  2394   001532  C01F  F038         	movff	?___lodiv+6,___xotofl@val+6
  2395   001536  C020  F039         	movff	?___lodiv+7,___xotofl@val+7
  2396   00153A  0E00               	movlw	0
  2397   00153C  ECB3  F013         	call	___xotofl
  2398   001540  C032  F0CE         	movff	?___xotofl,convert_rgb2hue@g
  2399   001544  C033  F0CF         	movff	?___xotofl+1,convert_rgb2hue@g+1
  2400   001548  C034  F0D0         	movff	?___xotofl+2,convert_rgb2hue@g+2
  2401   00154C  C035  F0D1         	movff	?___xotofl+3,convert_rgb2hue@g+3
  2402   001550                     
  2403                           ;color.c: 108:         b = 100 - r - g;
  2404   001550  C0CA  F015         	movff	convert_rgb2hue@r,___flsub@a
  2405   001554  C0CB  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2406   001558  C0CC  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2407   00155C  C0CD  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2408   001560  0E00               	movlw	0
  2409   001562  6E11               	movwf	___flsub@b^0,c
  2410   001564  0E00               	movlw	0
  2411   001566  6E12               	movwf	(___flsub@b+1)^0,c
  2412   001568  0EC8               	movlw	200
  2413   00156A  6E13               	movwf	(___flsub@b+2)^0,c
  2414   00156C  0E42               	movlw	66
  2415   00156E  6E14               	movwf	(___flsub@b+3)^0,c
  2416   001570  EC75  F01D         	call	___flsub	;wreg free
  2417   001574  C011  F08E         	movff	?___flsub,_convert_rgb2hue$2871
  2418   001578  C012  F08F         	movff	?___flsub+1,_convert_rgb2hue$2871+1
  2419   00157C  C013  F090         	movff	?___flsub+2,_convert_rgb2hue$2871+2
  2420   001580  C014  F091         	movff	?___flsub+3,_convert_rgb2hue$2871+3
  2421   001584                     
  2422                           ;color.c: 108:         b = 100 - r - g;
  2423   001584  C08E  F011         	movff	_convert_rgb2hue$2871,___flsub@b
  2424   001588  C08F  F012         	movff	_convert_rgb2hue$2871+1,___flsub@b+1
  2425   00158C  C090  F013         	movff	_convert_rgb2hue$2871+2,___flsub@b+2
  2426   001590  C091  F014         	movff	_convert_rgb2hue$2871+3,___flsub@b+3
  2427   001594  C0CE  F015         	movff	convert_rgb2hue@g,___flsub@a
  2428   001598  C0CF  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2429   00159C  C0D0  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2430   0015A0  C0D1  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2431   0015A4  EC75  F01D         	call	___flsub	;wreg free
  2432   0015A8  C011  F0D2         	movff	?___flsub,convert_rgb2hue@b
  2433   0015AC  C012  F0D3         	movff	?___flsub+1,convert_rgb2hue@b+1
  2434   0015B0  C013  F0D4         	movff	?___flsub+2,convert_rgb2hue@b+2
  2435   0015B4  C014  F0D5         	movff	?___flsub+3,convert_rgb2hue@b+3
  2436   0015B8                     l4752:
  2437                           
  2438                           ;color.c: 122:     min = r < g ? (r < b ? r : b) : (g < b ? g : b);
  2439   0015B8  C0CA  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2440   0015BC  C0CB  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2441   0015C0  C0CC  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2442   0015C4  C0CD  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2443   0015C8  C0CE  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2444   0015CC  C0CF  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2445   0015D0  C0D0  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2446   0015D4  C0D1  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2447   0015D8  ECAD  F018         	call	___flge	;wreg free
  2448   0015DC  A0D8               	btfss	status,0,c
  2449   0015DE  EFF3  F00A         	goto	u4651
  2450   0015E2  EFF5  F00A         	goto	u4650
  2451   0015E6                     u4651:
  2452   0015E6  EF2A  F00B         	goto	l4758
  2453   0015EA                     u4650:
  2454   0015EA  C0CE  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2455   0015EE  C0CF  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2456   0015F2  C0D0  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2457   0015F6  C0D1  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2458   0015FA  C0D2  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2459   0015FE  C0D3  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2460   001602  C0D4  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2461   001606  C0D5  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2462   00160A  ECAD  F018         	call	___flge	;wreg free
  2463   00160E  A0D8               	btfss	status,0,c
  2464   001610  EF0C  F00B         	goto	u4661
  2465   001614  EF0E  F00B         	goto	u4660
  2466   001618                     u4661:
  2467   001618  EF18  F00B         	goto	l83
  2468   00161C                     u4660:
  2469   00161C  C0D2  F096         	movff	convert_rgb2hue@b,_convert_rgb2hue$305
  2470   001620  C0D3  F097         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$305+1
  2471   001624  C0D4  F098         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$305+2
  2472   001628  C0D5  F099         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$305+3
  2473   00162C  EF20  F00B         	goto	l85
  2474   001630                     l83:
  2475   001630  C0CE  F096         	movff	convert_rgb2hue@g,_convert_rgb2hue$305
  2476   001634  C0CF  F097         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$305+1
  2477   001638  C0D0  F098         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$305+2
  2478   00163C  C0D1  F099         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$305+3
  2479   001640                     l85:
  2480   001640  C096  F0B2         	movff	_convert_rgb2hue$305,convert_rgb2hue@min
  2481   001644  C097  F0B3         	movff	_convert_rgb2hue$305+1,convert_rgb2hue@min+1
  2482   001648  C098  F0B4         	movff	_convert_rgb2hue$305+2,convert_rgb2hue@min+2
  2483   00164C  C099  F0B5         	movff	_convert_rgb2hue$305+3,convert_rgb2hue@min+3
  2484   001650  EF5D  F00B         	goto	l4762
  2485   001654                     l4758:
  2486   001654  C0CA  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2487   001658  C0CB  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2488   00165C  C0CC  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2489   001660  C0CD  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2490   001664  C0D2  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2491   001668  C0D3  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2492   00166C  C0D4  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2493   001670  C0D5  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2494   001674  ECAD  F018         	call	___flge	;wreg free
  2495   001678  A0D8               	btfss	status,0,c
  2496   00167A  EF41  F00B         	goto	u4671
  2497   00167E  EF43  F00B         	goto	u4670
  2498   001682                     u4671:
  2499   001682  EF4D  F00B         	goto	l87
  2500   001686                     u4670:
  2501   001686  C0D2  F09A         	movff	convert_rgb2hue@b,_convert_rgb2hue$306
  2502   00168A  C0D3  F09B         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$306+1
  2503   00168E  C0D4  F09C         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$306+2
  2504   001692  C0D5  F09D         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$306+3
  2505   001696  EF55  F00B         	goto	l89
  2506   00169A                     l87:
  2507   00169A  C0CA  F09A         	movff	convert_rgb2hue@r,_convert_rgb2hue$306
  2508   00169E  C0CB  F09B         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$306+1
  2509   0016A2  C0CC  F09C         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$306+2
  2510   0016A6  C0CD  F09D         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$306+3
  2511   0016AA                     l89:
  2512   0016AA  C09A  F0B2         	movff	_convert_rgb2hue$306,convert_rgb2hue@min
  2513   0016AE  C09B  F0B3         	movff	_convert_rgb2hue$306+1,convert_rgb2hue@min+1
  2514   0016B2  C09C  F0B4         	movff	_convert_rgb2hue$306+2,convert_rgb2hue@min+2
  2515   0016B6  C09D  F0B5         	movff	_convert_rgb2hue$306+3,convert_rgb2hue@min+3
  2516   0016BA                     l4762:
  2517                           
  2518                           ;color.c: 123:     max = r > g ? (r > b ? r : b) : (g > b ? g : b);
  2519   0016BA  C0CE  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2520   0016BE  C0CF  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2521   0016C2  C0D0  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2522   0016C6  C0D1  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2523   0016CA  C0CA  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2524   0016CE  C0CB  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2525   0016D2  C0CC  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2526   0016D6  C0CD  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2527   0016DA  ECAD  F018         	call	___flge	;wreg free
  2528   0016DE  A0D8               	btfss	status,0,c
  2529   0016E0  EF74  F00B         	goto	u4681
  2530   0016E4  EF76  F00B         	goto	u4680
  2531   0016E8                     u4681:
  2532   0016E8  EFAB  F00B         	goto	l4768
  2533   0016EC                     u4680:
  2534   0016EC  C0D2  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2535   0016F0  C0D3  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2536   0016F4  C0D4  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2537   0016F8  C0D5  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2538   0016FC  C0CE  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2539   001700  C0CF  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2540   001704  C0D0  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2541   001708  C0D1  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2542   00170C  ECAD  F018         	call	___flge	;wreg free
  2543   001710  A0D8               	btfss	status,0,c
  2544   001712  EF8D  F00B         	goto	u4691
  2545   001716  EF8F  F00B         	goto	u4690
  2546   00171A                     u4691:
  2547   00171A  EF99  F00B         	goto	l95
  2548   00171E                     u4690:
  2549   00171E  C0D2  F09E         	movff	convert_rgb2hue@b,_convert_rgb2hue$307
  2550   001722  C0D3  F09F         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$307+1
  2551   001726  C0D4  F0A0         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$307+2
  2552   00172A  C0D5  F0A1         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$307+3
  2553   00172E  EFA1  F00B         	goto	l97
  2554   001732                     l95:
  2555   001732  C0CE  F09E         	movff	convert_rgb2hue@g,_convert_rgb2hue$307
  2556   001736  C0CF  F09F         	movff	convert_rgb2hue@g+1,_convert_rgb2hue$307+1
  2557   00173A  C0D0  F0A0         	movff	convert_rgb2hue@g+2,_convert_rgb2hue$307+2
  2558   00173E  C0D1  F0A1         	movff	convert_rgb2hue@g+3,_convert_rgb2hue$307+3
  2559   001742                     l97:
  2560   001742  C09E  F092         	movff	_convert_rgb2hue$307,convert_rgb2hue@max
  2561   001746  C09F  F093         	movff	_convert_rgb2hue$307+1,convert_rgb2hue@max+1
  2562   00174A  C0A0  F094         	movff	_convert_rgb2hue$307+2,convert_rgb2hue@max+2
  2563   00174E  C0A1  F095         	movff	_convert_rgb2hue$307+3,convert_rgb2hue@max+3
  2564   001752  EFDE  F00B         	goto	l4772
  2565   001756                     l4768:
  2566   001756  C0D2  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2567   00175A  C0D3  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2568   00175E  C0D4  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2569   001762  C0D5  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2570   001766  C0CA  F005         	movff	convert_rgb2hue@r,___flge@ff2
  2571   00176A  C0CB  F006         	movff	convert_rgb2hue@r+1,___flge@ff2+1
  2572   00176E  C0CC  F007         	movff	convert_rgb2hue@r+2,___flge@ff2+2
  2573   001772  C0CD  F008         	movff	convert_rgb2hue@r+3,___flge@ff2+3
  2574   001776  ECAD  F018         	call	___flge	;wreg free
  2575   00177A  A0D8               	btfss	status,0,c
  2576   00177C  EFC2  F00B         	goto	u4701
  2577   001780  EFC4  F00B         	goto	u4700
  2578   001784                     u4701:
  2579   001784  EFCE  F00B         	goto	l99
  2580   001788                     u4700:
  2581   001788  C0D2  F0A2         	movff	convert_rgb2hue@b,_convert_rgb2hue$308
  2582   00178C  C0D3  F0A3         	movff	convert_rgb2hue@b+1,_convert_rgb2hue$308+1
  2583   001790  C0D4  F0A4         	movff	convert_rgb2hue@b+2,_convert_rgb2hue$308+2
  2584   001794  C0D5  F0A5         	movff	convert_rgb2hue@b+3,_convert_rgb2hue$308+3
  2585   001798  EFD6  F00B         	goto	l101
  2586   00179C                     l99:
  2587   00179C  C0CA  F0A2         	movff	convert_rgb2hue@r,_convert_rgb2hue$308
  2588   0017A0  C0CB  F0A3         	movff	convert_rgb2hue@r+1,_convert_rgb2hue$308+1
  2589   0017A4  C0CC  F0A4         	movff	convert_rgb2hue@r+2,_convert_rgb2hue$308+2
  2590   0017A8  C0CD  F0A5         	movff	convert_rgb2hue@r+3,_convert_rgb2hue$308+3
  2591   0017AC                     l101:
  2592   0017AC  C0A2  F092         	movff	_convert_rgb2hue$308,convert_rgb2hue@max
  2593   0017B0  C0A3  F093         	movff	_convert_rgb2hue$308+1,convert_rgb2hue@max+1
  2594   0017B4  C0A4  F094         	movff	_convert_rgb2hue$308+2,convert_rgb2hue@max+2
  2595   0017B8  C0A5  F095         	movff	_convert_rgb2hue$308+3,convert_rgb2hue@max+3
  2596   0017BC                     l4772:
  2597                           
  2598                           ;color.c: 125:     if (max == min) {
  2599   0017BC  C092  F001         	movff	convert_rgb2hue@max,___fleq@ff1
  2600   0017C0  C093  F002         	movff	convert_rgb2hue@max+1,___fleq@ff1+1
  2601   0017C4  C094  F003         	movff	convert_rgb2hue@max+2,___fleq@ff1+2
  2602   0017C8  C095  F004         	movff	convert_rgb2hue@max+3,___fleq@ff1+3
  2603   0017CC  C0B2  F005         	movff	convert_rgb2hue@min,___fleq@ff2
  2604   0017D0  C0B3  F006         	movff	convert_rgb2hue@min+1,___fleq@ff2+1
  2605   0017D4  C0B4  F007         	movff	convert_rgb2hue@min+2,___fleq@ff2+2
  2606   0017D8  C0B5  F008         	movff	convert_rgb2hue@min+3,___fleq@ff2+3
  2607   0017DC  EC71  F01B         	call	___fleq	;wreg free
  2608   0017E0  A0D8               	btfss	status,0,c
  2609   0017E2  EFF5  F00B         	goto	u4711
  2610   0017E6  EFF7  F00B         	goto	u4710
  2611   0017EA                     u4711:
  2612   0017EA  EF02  F00C         	goto	l4776
  2613   0017EE                     u4710:
  2614   0017EE                     
  2615                           ;color.c: 126:         hue = 0;
  2616   0017EE  0E00               	movlw	0
  2617   0017F0  0100               	movlb	0	; () banked
  2618   0017F2  6FC6               	movwf	convert_rgb2hue@hue& (0+255),b
  2619   0017F4  0E00               	movlw	0
  2620   0017F6  6FC7               	movwf	(convert_rgb2hue@hue+1)& (0+255),b
  2621   0017F8  0E00               	movlw	0
  2622   0017FA  6FC8               	movwf	(convert_rgb2hue@hue+2)& (0+255),b
  2623   0017FC  0E00               	movlw	0
  2624   0017FE  6FC9               	movwf	(convert_rgb2hue@hue+3)& (0+255),b
  2625                           
  2626                           ;color.c: 127:     } else {
  2627   001800  EF62  F00D         	goto	l103
  2628   001804                     l4776:
  2629                           
  2630                           ;color.c: 128:         if (g > r && g > b) {
  2631   001804  C0CA  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2632   001808  C0CB  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2633   00180C  C0CC  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2634   001810  C0CD  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2635   001814  C0CE  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2636   001818  C0CF  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2637   00181C  C0D0  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2638   001820  C0D1  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2639   001824  ECAD  F018         	call	___flge	;wreg free
  2640   001828  B0D8               	btfsc	status,0,c
  2641   00182A  EF19  F00C         	goto	u4721
  2642   00182E  EF1B  F00C         	goto	u4720
  2643   001832                     u4721:
  2644   001832  EF94  F00C         	goto	l104
  2645   001836                     u4720:
  2646   001836  C0D2  F001         	movff	convert_rgb2hue@b,___flge@ff1
  2647   00183A  C0D3  F002         	movff	convert_rgb2hue@b+1,___flge@ff1+1
  2648   00183E  C0D4  F003         	movff	convert_rgb2hue@b+2,___flge@ff1+2
  2649   001842  C0D5  F004         	movff	convert_rgb2hue@b+3,___flge@ff1+3
  2650   001846  C0CE  F005         	movff	convert_rgb2hue@g,___flge@ff2
  2651   00184A  C0CF  F006         	movff	convert_rgb2hue@g+1,___flge@ff2+1
  2652   00184E  C0D0  F007         	movff	convert_rgb2hue@g+2,___flge@ff2+2
  2653   001852  C0D1  F008         	movff	convert_rgb2hue@g+3,___flge@ff2+3
  2654   001856  ECAD  F018         	call	___flge	;wreg free
  2655   00185A  B0D8               	btfsc	status,0,c
  2656   00185C  EF32  F00C         	goto	u4731
  2657   001860  EF34  F00C         	goto	u4730
  2658   001864                     u4731:
  2659   001864  EF94  F00C         	goto	l104
  2660   001868                     u4730:
  2661   001868                     
  2662                           ;color.c: 129:             diff = (g - min);
  2663   001868  C0CE  F011         	movff	convert_rgb2hue@g,___flsub@b
  2664   00186C  C0CF  F012         	movff	convert_rgb2hue@g+1,___flsub@b+1
  2665   001870  C0D0  F013         	movff	convert_rgb2hue@g+2,___flsub@b+2
  2666   001874  C0D1  F014         	movff	convert_rgb2hue@g+3,___flsub@b+3
  2667   001878  C0B2  F015         	movff	convert_rgb2hue@min,___flsub@a
  2668   00187C  C0B3  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2669   001880  C0B4  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2670   001884  C0B5  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2671   001888  EC75  F01D         	call	___flsub	;wreg free
  2672   00188C  C011  F0A6         	movff	?___flsub,convert_rgb2hue@diff
  2673   001890  C012  F0A7         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2674   001894  C013  F0A8         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2675   001898  C014  F0A9         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2676                           
  2677                           ;color.c: 130:             hue = (b - r) / diff;
  2678   00189C  C0CA  F015         	movff	convert_rgb2hue@r,___flsub@a
  2679   0018A0  C0CB  F016         	movff	convert_rgb2hue@r+1,___flsub@a+1
  2680   0018A4  C0CC  F017         	movff	convert_rgb2hue@r+2,___flsub@a+2
  2681   0018A8  C0CD  F018         	movff	convert_rgb2hue@r+3,___flsub@a+3
  2682   0018AC  C0D2  F011         	movff	convert_rgb2hue@b,___flsub@b
  2683   0018B0  C0D3  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2684   0018B4  C0D4  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2685   0018B8  C0D5  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2686   0018BC  EC75  F01D         	call	___flsub	;wreg free
  2687   0018C0  C011  F019         	movff	?___flsub,___fldiv@b
  2688   0018C4  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2689   0018C8  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2690   0018CC  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2691   0018D0  C0A6  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2692   0018D4  C0A7  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2693   0018D8  C0A8  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2694   0018DC  C0A9  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2695   0018E0  ECE6  F011         	call	___fldiv	;wreg free
  2696   0018E4  C019  F0C6         	movff	?___fldiv,convert_rgb2hue@hue
  2697   0018E8  C01A  F0C7         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2698   0018EC  C01B  F0C8         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2699   0018F0  C01C  F0C9         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2700                           
  2701                           ;color.c: 131:             hue = hue + 2;
  2702   0018F4  C0C6  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2703   0018F8  C0C7  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2704   0018FC  C0C8  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2705   001900  C0C9  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2706   001904  0E00               	movlw	0
  2707   001906  6E05               	movwf	___fladd@a^0,c
  2708   001908  0E00               	movlw	0
  2709   00190A  6E06               	movwf	(___fladd@a+1)^0,c
  2710   00190C  0E00               	movlw	0
  2711   00190E  6E07               	movwf	(___fladd@a+2)^0,c
  2712   001910  0E40               	movlw	64
  2713   001912  6E08               	movwf	(___fladd@a+3)^0,c
  2714   001914  EC71  F00D         	call	___fladd	;wreg free
  2715   001918  C001  F0C6         	movff	?___fladd,convert_rgb2hue@hue
  2716   00191C  C002  F0C7         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2717   001920  C003  F0C8         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2718   001924  C004  F0C9         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2719   001928                     l104:
  2720                           
  2721                           ;color.c: 133:         if (b > r && b > g) {
  2722   001928  C0CA  F001         	movff	convert_rgb2hue@r,___flge@ff1
  2723   00192C  C0CB  F002         	movff	convert_rgb2hue@r+1,___flge@ff1+1
  2724   001930  C0CC  F003         	movff	convert_rgb2hue@r+2,___flge@ff1+2
  2725   001934  C0CD  F004         	movff	convert_rgb2hue@r+3,___flge@ff1+3
  2726   001938  C0D2  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2727   00193C  C0D3  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2728   001940  C0D4  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2729   001944  C0D5  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2730   001948  ECAD  F018         	call	___flge	;wreg free
  2731   00194C  B0D8               	btfsc	status,0,c
  2732   00194E  EFAB  F00C         	goto	u4741
  2733   001952  EFAD  F00C         	goto	u4740
  2734   001956                     u4741:
  2735   001956  EF26  F00D         	goto	l4786
  2736   00195A                     u4740:
  2737   00195A  C0CE  F001         	movff	convert_rgb2hue@g,___flge@ff1
  2738   00195E  C0CF  F002         	movff	convert_rgb2hue@g+1,___flge@ff1+1
  2739   001962  C0D0  F003         	movff	convert_rgb2hue@g+2,___flge@ff1+2
  2740   001966  C0D1  F004         	movff	convert_rgb2hue@g+3,___flge@ff1+3
  2741   00196A  C0D2  F005         	movff	convert_rgb2hue@b,___flge@ff2
  2742   00196E  C0D3  F006         	movff	convert_rgb2hue@b+1,___flge@ff2+1
  2743   001972  C0D4  F007         	movff	convert_rgb2hue@b+2,___flge@ff2+2
  2744   001976  C0D5  F008         	movff	convert_rgb2hue@b+3,___flge@ff2+3
  2745   00197A  ECAD  F018         	call	___flge	;wreg free
  2746   00197E  B0D8               	btfsc	status,0,c
  2747   001980  EFC4  F00C         	goto	u4751
  2748   001984  EFC6  F00C         	goto	u4750
  2749   001988                     u4751:
  2750   001988  EF26  F00D         	goto	l4786
  2751   00198C                     u4750:
  2752   00198C                     
  2753                           ;color.c: 134:             diff = b - min;
  2754   00198C  C0D2  F011         	movff	convert_rgb2hue@b,___flsub@b
  2755   001990  C0D3  F012         	movff	convert_rgb2hue@b+1,___flsub@b+1
  2756   001994  C0D4  F013         	movff	convert_rgb2hue@b+2,___flsub@b+2
  2757   001998  C0D5  F014         	movff	convert_rgb2hue@b+3,___flsub@b+3
  2758   00199C  C0B2  F015         	movff	convert_rgb2hue@min,___flsub@a
  2759   0019A0  C0B3  F016         	movff	convert_rgb2hue@min+1,___flsub@a+1
  2760   0019A4  C0B4  F017         	movff	convert_rgb2hue@min+2,___flsub@a+2
  2761   0019A8  C0B5  F018         	movff	convert_rgb2hue@min+3,___flsub@a+3
  2762   0019AC  EC75  F01D         	call	___flsub	;wreg free
  2763   0019B0  C011  F0A6         	movff	?___flsub,convert_rgb2hue@diff
  2764   0019B4  C012  F0A7         	movff	?___flsub+1,convert_rgb2hue@diff+1
  2765   0019B8  C013  F0A8         	movff	?___flsub+2,convert_rgb2hue@diff+2
  2766   0019BC  C014  F0A9         	movff	?___flsub+3,convert_rgb2hue@diff+3
  2767                           
  2768                           ;color.c: 135:             hue = (r - g) / diff;
  2769   0019C0  C0CE  F015         	movff	convert_rgb2hue@g,___flsub@a
  2770   0019C4  C0CF  F016         	movff	convert_rgb2hue@g+1,___flsub@a+1
  2771   0019C8  C0D0  F017         	movff	convert_rgb2hue@g+2,___flsub@a+2
  2772   0019CC  C0D1  F018         	movff	convert_rgb2hue@g+3,___flsub@a+3
  2773   0019D0  C0CA  F011         	movff	convert_rgb2hue@r,___flsub@b
  2774   0019D4  C0CB  F012         	movff	convert_rgb2hue@r+1,___flsub@b+1
  2775   0019D8  C0CC  F013         	movff	convert_rgb2hue@r+2,___flsub@b+2
  2776   0019DC  C0CD  F014         	movff	convert_rgb2hue@r+3,___flsub@b+3
  2777   0019E0  EC75  F01D         	call	___flsub	;wreg free
  2778   0019E4  C011  F019         	movff	?___flsub,___fldiv@b
  2779   0019E8  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  2780   0019EC  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  2781   0019F0  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  2782   0019F4  C0A6  F01D         	movff	convert_rgb2hue@diff,___fldiv@a
  2783   0019F8  C0A7  F01E         	movff	convert_rgb2hue@diff+1,___fldiv@a+1
  2784   0019FC  C0A8  F01F         	movff	convert_rgb2hue@diff+2,___fldiv@a+2
  2785   001A00  C0A9  F020         	movff	convert_rgb2hue@diff+3,___fldiv@a+3
  2786   001A04  ECE6  F011         	call	___fldiv	;wreg free
  2787   001A08  C019  F0C6         	movff	?___fldiv,convert_rgb2hue@hue
  2788   001A0C  C01A  F0C7         	movff	?___fldiv+1,convert_rgb2hue@hue+1
  2789   001A10  C01B  F0C8         	movff	?___fldiv+2,convert_rgb2hue@hue+2
  2790   001A14  C01C  F0C9         	movff	?___fldiv+3,convert_rgb2hue@hue+3
  2791                           
  2792                           ;color.c: 136:             hue = hue + 4;
  2793   001A18  C0C6  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2794   001A1C  C0C7  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2795   001A20  C0C8  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2796   001A24  C0C9  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2797   001A28  0E00               	movlw	0
  2798   001A2A  6E05               	movwf	___fladd@a^0,c
  2799   001A2C  0E00               	movlw	0
  2800   001A2E  6E06               	movwf	(___fladd@a+1)^0,c
  2801   001A30  0E80               	movlw	128
  2802   001A32  6E07               	movwf	(___fladd@a+2)^0,c
  2803   001A34  0E40               	movlw	64
  2804   001A36  6E08               	movwf	(___fladd@a+3)^0,c
  2805   001A38  EC71  F00D         	call	___fladd	;wreg free
  2806   001A3C  C001  F0C6         	movff	?___fladd,convert_rgb2hue@hue
  2807   001A40  C002  F0C7         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2808   001A44  C003  F0C8         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2809   001A48  C004  F0C9         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2810   001A4C                     l4786:
  2811                           
  2812                           ;color.c: 139:         hue = hue * 60;
  2813   001A4C  C0C6  F001         	movff	convert_rgb2hue@hue,___flmul@b
  2814   001A50  C0C7  F002         	movff	convert_rgb2hue@hue+1,___flmul@b+1
  2815   001A54  C0C8  F003         	movff	convert_rgb2hue@hue+2,___flmul@b+2
  2816   001A58  C0C9  F004         	movff	convert_rgb2hue@hue+3,___flmul@b+3
  2817   001A5C  0E00               	movlw	0
  2818   001A5E  6E05               	movwf	___flmul@a^0,c
  2819   001A60  0E00               	movlw	0
  2820   001A62  6E06               	movwf	(___flmul@a+1)^0,c
  2821   001A64  0E70               	movlw	112
  2822   001A66  6E07               	movwf	(___flmul@a+2)^0,c
  2823   001A68  0E42               	movlw	66
  2824   001A6A  6E08               	movwf	(___flmul@a+3)^0,c
  2825   001A6C  ECD1  F00F         	call	___flmul	;wreg free
  2826   001A70  C001  F0C6         	movff	?___flmul,convert_rgb2hue@hue
  2827   001A74  C002  F0C7         	movff	?___flmul+1,convert_rgb2hue@hue+1
  2828   001A78  C003  F0C8         	movff	?___flmul+2,convert_rgb2hue@hue+2
  2829   001A7C  C004  F0C9         	movff	?___flmul+3,convert_rgb2hue@hue+3
  2830   001A80                     
  2831                           ;color.c: 140:         if (hue < 0) {
  2832   001A80  0100               	movlb	0	; () banked
  2833   001A82  BFC9               	btfsc	(convert_rgb2hue@hue+3)& (0+255),7,b
  2834   001A84  EF48  F00D         	goto	u4760
  2835   001A88  EF46  F00D         	goto	u4761
  2836   001A8C                     u4761:
  2837   001A8C  EF62  F00D         	goto	l103
  2838   001A90                     u4760:
  2839   001A90                     
  2840                           ; BSR set to: 0
  2841                           ;color.c: 141:             hue = hue + 360;
  2842   001A90  C0C6  F001         	movff	convert_rgb2hue@hue,___fladd@b
  2843   001A94  C0C7  F002         	movff	convert_rgb2hue@hue+1,___fladd@b+1
  2844   001A98  C0C8  F003         	movff	convert_rgb2hue@hue+2,___fladd@b+2
  2845   001A9C  C0C9  F004         	movff	convert_rgb2hue@hue+3,___fladd@b+3
  2846   001AA0  0E00               	movlw	0
  2847   001AA2  6E05               	movwf	___fladd@a^0,c
  2848   001AA4  0E00               	movlw	0
  2849   001AA6  6E06               	movwf	(___fladd@a+1)^0,c
  2850   001AA8  0EB4               	movlw	180
  2851   001AAA  6E07               	movwf	(___fladd@a+2)^0,c
  2852   001AAC  0E43               	movlw	67
  2853   001AAE  6E08               	movwf	(___fladd@a+3)^0,c
  2854   001AB0  EC71  F00D         	call	___fladd	;wreg free
  2855   001AB4  C001  F0C6         	movff	?___fladd,convert_rgb2hue@hue
  2856   001AB8  C002  F0C7         	movff	?___fladd+1,convert_rgb2hue@hue+1
  2857   001ABC  C003  F0C8         	movff	?___fladd+2,convert_rgb2hue@hue+2
  2858   001AC0  C004  F0C9         	movff	?___fladd+3,convert_rgb2hue@hue+3
  2859   001AC4                     l103:
  2860                           
  2861                           ;color.c: 144:     return (unsigned int)hue;
  2862   001AC4  C0C6  F001         	movff	convert_rgb2hue@hue,___fltol@f1
  2863   001AC8  C0C7  F002         	movff	convert_rgb2hue@hue+1,___fltol@f1+1
  2864   001ACC  C0C8  F003         	movff	convert_rgb2hue@hue+2,___fltol@f1+2
  2865   001AD0  C0C9  F004         	movff	convert_rgb2hue@hue+3,___fltol@f1+3
  2866   001AD4  EC2A  F018         	call	___fltol	;wreg free
  2867   001AD8  C001  F04C         	movff	?___fltol,?_convert_rgb2hue
  2868   001ADC  C002  F04D         	movff	?___fltol+1,?_convert_rgb2hue+1
  2869   001AE0  0012               	return		;funcret
  2870   001AE2                     __end_of_convert_rgb2hue:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function ___xotofl *****************
  2874 ;; Defined at:
  2875 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xotofl.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  sign            1    wreg     unsigned char 
  2878 ;;  val             8   49[COMRAM] long long 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  sign            1   65[COMRAM] unsigned char 
  2881 ;;  arg             8   67[COMRAM] unsigned long long 
  2882 ;;  exp             1   66[COMRAM] unsigned char 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  4   49[COMRAM] unsigned char 
  2885 ;; Registers used:
  2886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2892 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2894 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2895 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2896 ;;Total ram usage:       26 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_convert_rgb2hue
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text5
  2906   002766                     __ptext5:
  2907                           	callstack 0
  2908   002766                     ___xotofl:
  2909                           	callstack 28
  2910                           
  2911                           ;incstack = 0
  2912                           ;___xotofl@sign stored from wreg
  2913   002766  6E42               	movwf	___xotofl@sign^0,c
  2914   002768  5042               	movf	___xotofl@sign^0,w,c
  2915   00276A  B4D8               	btfsc	status,2,c
  2916   00276C  EFBA  F013         	goto	u3591
  2917   002770  EFBC  F013         	goto	u3590
  2918   002774                     u3591:
  2919   002774  EFF6  F013         	goto	l1134
  2920   002778                     u3590:
  2921   002778  BE39               	btfsc	(___xotofl@val+7)^0,7,c
  2922   00277A  EFC3  F013         	goto	u3600
  2923   00277E  EFC1  F013         	goto	u3601
  2924   002782                     u3601:
  2925   002782  EFF6  F013         	goto	l1134
  2926   002786                     u3600:
  2927   002786  C032  F03A         	movff	___xotofl@val,??___xotofl
  2928   00278A  C033  F03B         	movff	___xotofl@val+1,??___xotofl+1
  2929   00278E  C034  F03C         	movff	___xotofl@val+2,??___xotofl+2
  2930   002792  C035  F03D         	movff	___xotofl@val+3,??___xotofl+3
  2931   002796  C036  F03E         	movff	___xotofl@val+4,??___xotofl+4
  2932   00279A  C037  F03F         	movff	___xotofl@val+5,??___xotofl+5
  2933   00279E  C038  F040         	movff	___xotofl@val+6,??___xotofl+6
  2934   0027A2  C039  F041         	movff	___xotofl@val+7,??___xotofl+7
  2935   0027A6  1E3A               	comf	??___xotofl^0,f,c
  2936   0027A8  1E3B               	comf	(??___xotofl+1)^0,f,c
  2937   0027AA  1E3C               	comf	(??___xotofl+2)^0,f,c
  2938   0027AC  1E3D               	comf	(??___xotofl+3)^0,f,c
  2939   0027AE  1E3E               	comf	(??___xotofl+4)^0,f,c
  2940   0027B0  1E3F               	comf	(??___xotofl+5)^0,f,c
  2941   0027B2  1E40               	comf	(??___xotofl+6)^0,f,c
  2942   0027B4  1E41               	comf	(??___xotofl+7)^0,f,c
  2943   0027B6  2A3A               	incf	??___xotofl^0,f,c
  2944   0027B8  0E00               	movlw	0
  2945   0027BA  223B               	addwfc	(??___xotofl+1)^0,f,c
  2946   0027BC  223C               	addwfc	(??___xotofl+2)^0,f,c
  2947   0027BE  223D               	addwfc	(??___xotofl+3)^0,f,c
  2948   0027C0  223E               	addwfc	(??___xotofl+4)^0,f,c
  2949   0027C2  223F               	addwfc	(??___xotofl+5)^0,f,c
  2950   0027C4  2240               	addwfc	(??___xotofl+6)^0,f,c
  2951   0027C6  2241               	addwfc	(??___xotofl+7)^0,f,c
  2952   0027C8  C03A  F044         	movff	??___xotofl,___xotofl@arg
  2953   0027CC  C03B  F045         	movff	??___xotofl+1,___xotofl@arg+1
  2954   0027D0  C03C  F046         	movff	??___xotofl+2,___xotofl@arg+2
  2955   0027D4  C03D  F047         	movff	??___xotofl+3,___xotofl@arg+3
  2956   0027D8  C03E  F048         	movff	??___xotofl+4,___xotofl@arg+4
  2957   0027DC  C03F  F049         	movff	??___xotofl+5,___xotofl@arg+5
  2958   0027E0  C040  F04A         	movff	??___xotofl+6,___xotofl@arg+6
  2959   0027E4  C041  F04B         	movff	??___xotofl+7,___xotofl@arg+7
  2960   0027E8  EF06  F014         	goto	l3776
  2961   0027EC                     l1134:
  2962   0027EC  C032  F044         	movff	___xotofl@val,___xotofl@arg
  2963   0027F0  C033  F045         	movff	___xotofl@val+1,___xotofl@arg+1
  2964   0027F4  C034  F046         	movff	___xotofl@val+2,___xotofl@arg+2
  2965   0027F8  C035  F047         	movff	___xotofl@val+3,___xotofl@arg+3
  2966   0027FC  C036  F048         	movff	___xotofl@val+4,___xotofl@arg+4
  2967   002800  C037  F049         	movff	___xotofl@val+5,___xotofl@arg+5
  2968   002804  C038  F04A         	movff	___xotofl@val+6,___xotofl@arg+6
  2969   002808  C039  F04B         	movff	___xotofl@val+7,___xotofl@arg+7
  2970   00280C                     l3776:
  2971   00280C  5032               	movf	___xotofl@val^0,w,c
  2972   00280E  1033               	iorwf	(___xotofl@val+1)^0,w,c
  2973   002810  1034               	iorwf	(___xotofl@val+2)^0,w,c
  2974   002812  1035               	iorwf	(___xotofl@val+3)^0,w,c
  2975   002814  1036               	iorwf	(___xotofl@val+4)^0,w,c
  2976   002816  1037               	iorwf	(___xotofl@val+5)^0,w,c
  2977   002818  1038               	iorwf	(___xotofl@val+6)^0,w,c
  2978   00281A  1039               	iorwf	(___xotofl@val+7)^0,w,c
  2979   00281C  A4D8               	btfss	status,2,c
  2980   00281E  EF13  F014         	goto	u3611
  2981   002822  EF15  F014         	goto	u3610
  2982   002826                     u3611:
  2983   002826  EF1F  F014         	goto	l3782
  2984   00282A                     u3610:
  2985   00282A  0E00               	movlw	0
  2986   00282C  6E32               	movwf	?___xotofl^0,c
  2987   00282E  0E00               	movlw	0
  2988   002830  6E33               	movwf	(?___xotofl+1)^0,c
  2989   002832  0E00               	movlw	0
  2990   002834  6E34               	movwf	(?___xotofl+2)^0,c
  2991   002836  0E00               	movlw	0
  2992   002838  6E35               	movwf	(?___xotofl+3)^0,c
  2993   00283A  EF07  F015         	goto	l1137
  2994   00283E                     l3782:
  2995   00283E  0E96               	movlw	150
  2996   002840  6E43               	movwf	___xotofl@exp^0,c
  2997   002842  EF2D  F014         	goto	l3786
  2998   002846                     l3784:
  2999   002846  2A43               	incf	___xotofl@exp^0,f,c
  3000   002848  90D8               	bcf	status,0,c
  3001   00284A  324B               	rrcf	(___xotofl@arg+7)^0,f,c
  3002   00284C  324A               	rrcf	(___xotofl@arg+6)^0,f,c
  3003   00284E  3249               	rrcf	(___xotofl@arg+5)^0,f,c
  3004   002850  3248               	rrcf	(___xotofl@arg+4)^0,f,c
  3005   002852  3247               	rrcf	(___xotofl@arg+3)^0,f,c
  3006   002854  3246               	rrcf	(___xotofl@arg+2)^0,f,c
  3007   002856  3245               	rrcf	(___xotofl@arg+1)^0,f,c
  3008   002858  3244               	rrcf	___xotofl@arg^0,f,c
  3009   00285A                     l3786:
  3010   00285A  EE20  F044         	lfsr	2,___xotofl@arg
  3011   00285E  0E00               	movlw	0
  3012   002860  14DE               	andwf	postinc2,w,c
  3013   002862  6E3A               	movwf	??___xotofl^0,c
  3014   002864  0E00               	movlw	0
  3015   002866  14DE               	andwf	postinc2,w,c
  3016   002868  6E3B               	movwf	(??___xotofl+1)^0,c
  3017   00286A  0E00               	movlw	0
  3018   00286C  14DE               	andwf	postinc2,w,c
  3019   00286E  6E3C               	movwf	(??___xotofl+2)^0,c
  3020   002870  0EFE               	movlw	254
  3021   002872  14DE               	andwf	postinc2,w,c
  3022   002874  6E3D               	movwf	(??___xotofl+3)^0,c
  3023   002876  0EFF               	movlw	255
  3024   002878  14DE               	andwf	postinc2,w,c
  3025   00287A  6E3E               	movwf	(??___xotofl+4)^0,c
  3026   00287C  0EFF               	movlw	255
  3027   00287E  14DE               	andwf	postinc2,w,c
  3028   002880  6E3F               	movwf	(??___xotofl+5)^0,c
  3029   002882  0EFF               	movlw	255
  3030   002884  14DE               	andwf	postinc2,w,c
  3031   002886  6E40               	movwf	(??___xotofl+6)^0,c
  3032   002888  0EFF               	movlw	255
  3033   00288A  14DE               	andwf	postinc2,w,c
  3034   00288C  6E41               	movwf	(??___xotofl+7)^0,c
  3035   00288E  503A               	movf	??___xotofl^0,w,c
  3036   002890  103B               	iorwf	(??___xotofl+1)^0,w,c
  3037   002892  103C               	iorwf	(??___xotofl+2)^0,w,c
  3038   002894  103D               	iorwf	(??___xotofl+3)^0,w,c
  3039   002896  103E               	iorwf	(??___xotofl+4)^0,w,c
  3040   002898  103F               	iorwf	(??___xotofl+5)^0,w,c
  3041   00289A  1040               	iorwf	(??___xotofl+6)^0,w,c
  3042   00289C  1041               	iorwf	(??___xotofl+7)^0,w,c
  3043   00289E  A4D8               	btfss	status,2,c
  3044   0028A0  EF54  F014         	goto	u3621
  3045   0028A4  EF56  F014         	goto	u3620
  3046   0028A8                     u3621:
  3047   0028A8  EF23  F014         	goto	l3784
  3048   0028AC                     u3620:
  3049   0028AC  EF6C  F014         	goto	l3794
  3050   0028B0                     l3788:
  3051   0028B0  2A43               	incf	___xotofl@exp^0,f,c
  3052   0028B2  0E01               	movlw	1
  3053   0028B4  2644               	addwf	___xotofl@arg^0,f,c
  3054   0028B6  0E00               	movlw	0
  3055   0028B8  2245               	addwfc	(___xotofl@arg+1)^0,f,c
  3056   0028BA  2246               	addwfc	(___xotofl@arg+2)^0,f,c
  3057   0028BC  2247               	addwfc	(___xotofl@arg+3)^0,f,c
  3058   0028BE  2248               	addwfc	(___xotofl@arg+4)^0,f,c
  3059   0028C0  2249               	addwfc	(___xotofl@arg+5)^0,f,c
  3060   0028C2  224A               	addwfc	(___xotofl@arg+6)^0,f,c
  3061   0028C4  224B               	addwfc	(___xotofl@arg+7)^0,f,c
  3062   0028C6  90D8               	bcf	status,0,c
  3063   0028C8  324B               	rrcf	(___xotofl@arg+7)^0,f,c
  3064   0028CA  324A               	rrcf	(___xotofl@arg+6)^0,f,c
  3065   0028CC  3249               	rrcf	(___xotofl@arg+5)^0,f,c
  3066   0028CE  3248               	rrcf	(___xotofl@arg+4)^0,f,c
  3067   0028D0  3247               	rrcf	(___xotofl@arg+3)^0,f,c
  3068   0028D2  3246               	rrcf	(___xotofl@arg+2)^0,f,c
  3069   0028D4  3245               	rrcf	(___xotofl@arg+1)^0,f,c
  3070   0028D6  3244               	rrcf	___xotofl@arg^0,f,c
  3071   0028D8                     l3794:
  3072   0028D8  EE20  F044         	lfsr	2,___xotofl@arg
  3073   0028DC  0E00               	movlw	0
  3074   0028DE  14DE               	andwf	postinc2,w,c
  3075   0028E0  6E3A               	movwf	??___xotofl^0,c
  3076   0028E2  0E00               	movlw	0
  3077   0028E4  14DE               	andwf	postinc2,w,c
  3078   0028E6  6E3B               	movwf	(??___xotofl+1)^0,c
  3079   0028E8  0E00               	movlw	0
  3080   0028EA  14DE               	andwf	postinc2,w,c
  3081   0028EC  6E3C               	movwf	(??___xotofl+2)^0,c
  3082   0028EE  0EFF               	movlw	255
  3083   0028F0  14DE               	andwf	postinc2,w,c
  3084   0028F2  6E3D               	movwf	(??___xotofl+3)^0,c
  3085   0028F4  0EFF               	movlw	255
  3086   0028F6  14DE               	andwf	postinc2,w,c
  3087   0028F8  6E3E               	movwf	(??___xotofl+4)^0,c
  3088   0028FA  0EFF               	movlw	255
  3089   0028FC  14DE               	andwf	postinc2,w,c
  3090   0028FE  6E3F               	movwf	(??___xotofl+5)^0,c
  3091   002900  0EFF               	movlw	255
  3092   002902  14DE               	andwf	postinc2,w,c
  3093   002904  6E40               	movwf	(??___xotofl+6)^0,c
  3094   002906  0EFF               	movlw	255
  3095   002908  14DE               	andwf	postinc2,w,c
  3096   00290A  6E41               	movwf	(??___xotofl+7)^0,c
  3097   00290C  503A               	movf	??___xotofl^0,w,c
  3098   00290E  103B               	iorwf	(??___xotofl+1)^0,w,c
  3099   002910  103C               	iorwf	(??___xotofl+2)^0,w,c
  3100   002912  103D               	iorwf	(??___xotofl+3)^0,w,c
  3101   002914  103E               	iorwf	(??___xotofl+4)^0,w,c
  3102   002916  103F               	iorwf	(??___xotofl+5)^0,w,c
  3103   002918  1040               	iorwf	(??___xotofl+6)^0,w,c
  3104   00291A  1041               	iorwf	(??___xotofl+7)^0,w,c
  3105   00291C  A4D8               	btfss	status,2,c
  3106   00291E  EF93  F014         	goto	u3631
  3107   002922  EF95  F014         	goto	u3630
  3108   002926                     u3631:
  3109   002926  EF58  F014         	goto	l3788
  3110   00292A                     u3630:
  3111   00292A  EFA1  F014         	goto	l3798
  3112   00292E                     l3796:
  3113   00292E  0643               	decf	___xotofl@exp^0,f,c
  3114   002930  90D8               	bcf	status,0,c
  3115   002932  3644               	rlcf	___xotofl@arg^0,f,c
  3116   002934  3645               	rlcf	(___xotofl@arg+1)^0,f,c
  3117   002936  3646               	rlcf	(___xotofl@arg+2)^0,f,c
  3118   002938  3647               	rlcf	(___xotofl@arg+3)^0,f,c
  3119   00293A  3648               	rlcf	(___xotofl@arg+4)^0,f,c
  3120   00293C  3649               	rlcf	(___xotofl@arg+5)^0,f,c
  3121   00293E  364A               	rlcf	(___xotofl@arg+6)^0,f,c
  3122   002940  364B               	rlcf	(___xotofl@arg+7)^0,f,c
  3123   002942                     l3798:
  3124   002942  BE46               	btfsc	(___xotofl@arg+2)^0,7,c
  3125   002944  EFA6  F014         	goto	u3641
  3126   002948  EFA8  F014         	goto	u3640
  3127   00294C                     u3641:
  3128   00294C  EFB0  F014         	goto	l1148
  3129   002950                     u3640:
  3130   002950  0E02               	movlw	2
  3131   002952  6043               	cpfslt	___xotofl@exp^0,c
  3132   002954  EFAE  F014         	goto	u3651
  3133   002958  EFB0  F014         	goto	u3650
  3134   00295C                     u3651:
  3135   00295C  EF97  F014         	goto	l3796
  3136   002960                     u3650:
  3137   002960                     l1148:
  3138   002960  B043               	btfsc	___xotofl@exp^0,0,c
  3139   002962  EFB5  F014         	goto	u3661
  3140   002966  EFB7  F014         	goto	u3660
  3141   00296A                     u3661:
  3142   00296A  EFC7  F014         	goto	l1149
  3143   00296E                     u3660:
  3144   00296E  0EFF               	movlw	255
  3145   002970  1644               	andwf	___xotofl@arg^0,f,c
  3146   002972  0EFF               	movlw	255
  3147   002974  1645               	andwf	(___xotofl@arg+1)^0,f,c
  3148   002976  0E7F               	movlw	127
  3149   002978  1646               	andwf	(___xotofl@arg+2)^0,f,c
  3150   00297A  0EFF               	movlw	255
  3151   00297C  1647               	andwf	(___xotofl@arg+3)^0,f,c
  3152   00297E  0EFF               	movlw	255
  3153   002980  1648               	andwf	(___xotofl@arg+4)^0,f,c
  3154   002982  0EFF               	movlw	255
  3155   002984  1649               	andwf	(___xotofl@arg+5)^0,f,c
  3156   002986  0EFF               	movlw	255
  3157   002988  164A               	andwf	(___xotofl@arg+6)^0,f,c
  3158   00298A  0EFF               	movlw	255
  3159   00298C  164B               	andwf	(___xotofl@arg+7)^0,f,c
  3160   00298E                     l1149:
  3161   00298E  90D8               	bcf	status,0,c
  3162   002990  3243               	rrcf	___xotofl@exp^0,f,c
  3163   002992  C043  F03A         	movff	___xotofl@exp,??___xotofl
  3164   002996  6A3B               	clrf	(??___xotofl+1)^0,c
  3165   002998  6A3C               	clrf	(??___xotofl+2)^0,c
  3166   00299A  6A3D               	clrf	(??___xotofl+3)^0,c
  3167   00299C  6A3E               	clrf	(??___xotofl+4)^0,c
  3168   00299E  6A3F               	clrf	(??___xotofl+5)^0,c
  3169   0029A0  6A40               	clrf	(??___xotofl+6)^0,c
  3170   0029A2  6A41               	clrf	(??___xotofl+7)^0,c
  3171   0029A4  C03E  F041         	movff	??___xotofl+4,??___xotofl+7
  3172   0029A8  C03D  F040         	movff	??___xotofl+3,??___xotofl+6
  3173   0029AC  C03C  F03F         	movff	??___xotofl+2,??___xotofl+5
  3174   0029B0  C03B  F03E         	movff	??___xotofl+1,??___xotofl+4
  3175   0029B4  C03A  F03D         	movff	??___xotofl,??___xotofl+3
  3176   0029B8  6A3C               	clrf	(??___xotofl+2)^0,c
  3177   0029BA  6A3B               	clrf	(??___xotofl+1)^0,c
  3178   0029BC  6A3A               	clrf	??___xotofl^0,c
  3179   0029BE  503A               	movf	??___xotofl^0,w,c
  3180   0029C0  1244               	iorwf	___xotofl@arg^0,f,c
  3181   0029C2  503B               	movf	(??___xotofl+1)^0,w,c
  3182   0029C4  1245               	iorwf	(___xotofl@arg+1)^0,f,c
  3183   0029C6  503C               	movf	(??___xotofl+2)^0,w,c
  3184   0029C8  1246               	iorwf	(___xotofl@arg+2)^0,f,c
  3185   0029CA  503D               	movf	(??___xotofl+3)^0,w,c
  3186   0029CC  1247               	iorwf	(___xotofl@arg+3)^0,f,c
  3187   0029CE  503E               	movf	(??___xotofl+4)^0,w,c
  3188   0029D0  1248               	iorwf	(___xotofl@arg+4)^0,f,c
  3189   0029D2  503F               	movf	(??___xotofl+5)^0,w,c
  3190   0029D4  1249               	iorwf	(___xotofl@arg+5)^0,f,c
  3191   0029D6  5040               	movf	(??___xotofl+6)^0,w,c
  3192   0029D8  124A               	iorwf	(___xotofl@arg+6)^0,f,c
  3193   0029DA  5041               	movf	(??___xotofl+7)^0,w,c
  3194   0029DC  124B               	iorwf	(___xotofl@arg+7)^0,f,c
  3195   0029DE  5042               	movf	___xotofl@sign^0,w,c
  3196   0029E0  B4D8               	btfsc	status,2,c
  3197   0029E2  EFF5  F014         	goto	u3671
  3198   0029E6  EFF7  F014         	goto	u3670
  3199   0029EA                     u3671:
  3200   0029EA  EFFF  F014         	goto	l3810
  3201   0029EE                     u3670:
  3202   0029EE  BE39               	btfsc	(___xotofl@val+7)^0,7,c
  3203   0029F0  EFFE  F014         	goto	u3680
  3204   0029F4  EFFC  F014         	goto	u3681
  3205   0029F8                     u3681:
  3206   0029F8  EFFF  F014         	goto	l3810
  3207   0029FC                     u3680:
  3208   0029FC  8E47               	bsf	(___xotofl@arg+3)^0,7,c
  3209   0029FE                     l3810:
  3210   0029FE  C044  F032         	movff	___xotofl@arg,?___xotofl
  3211   002A02  C045  F033         	movff	___xotofl@arg+1,?___xotofl+1
  3212   002A06  C046  F034         	movff	___xotofl@arg+2,?___xotofl+2
  3213   002A0A  C047  F035         	movff	___xotofl@arg+3,?___xotofl+3
  3214   002A0E                     l1137:
  3215   002A0E  0012               	return		;funcret
  3216   002A10                     __end_of___xotofl:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function ___omul *****************
  3220 ;; Defined at:
  3221 ;;		line 91 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul64.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  multiplier      8    0[COMRAM] unsigned long long 
  3224 ;;  multiplicand    8    8[COMRAM] unsigned long long 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  product         8   16[COMRAM] unsigned long long 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  8    0[COMRAM] unsigned long long 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3236 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;Total ram usage:       24 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; This function calls:
  3243 ;;		Nothing
  3244 ;; This function is called by:
  3245 ;;		_convert_rgb2hue
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text6
  3250   00378C                     __ptext6:
  3251                           	callstack 0
  3252   00378C                     ___omul:
  3253                           	callstack 28
  3254   00378C  EE20  F011         	lfsr	2,___omul@product
  3255   003790  0E07               	movlw	7
  3256   003792                     u2951:
  3257   003792  6ADE               	clrf	postinc2,c
  3258   003794  06E8               	decf	wreg,f,c
  3259   003796  E2FD               	bc	u2951
  3260   003798                     l3384:
  3261   003798  A001               	btfss	___omul@multiplier^0,0,c
  3262   00379A  EFD1  F01B         	goto	u2961
  3263   00379E  EFD3  F01B         	goto	u2960
  3264   0037A2                     u2961:
  3265   0037A2  EFE3  F01B         	goto	l3388
  3266   0037A6                     u2960:
  3267   0037A6  5009               	movf	___omul@multiplicand^0,w,c
  3268   0037A8  2611               	addwf	___omul@product^0,f,c
  3269   0037AA  500A               	movf	(___omul@multiplicand+1)^0,w,c
  3270   0037AC  2212               	addwfc	(___omul@product+1)^0,f,c
  3271   0037AE  500B               	movf	(___omul@multiplicand+2)^0,w,c
  3272   0037B0  2213               	addwfc	(___omul@product+2)^0,f,c
  3273   0037B2  500C               	movf	(___omul@multiplicand+3)^0,w,c
  3274   0037B4  2214               	addwfc	(___omul@product+3)^0,f,c
  3275   0037B6  500D               	movf	(___omul@multiplicand+4)^0,w,c
  3276   0037B8  2215               	addwfc	(___omul@product+4)^0,f,c
  3277   0037BA  500E               	movf	(___omul@multiplicand+5)^0,w,c
  3278   0037BC  2216               	addwfc	(___omul@product+5)^0,f,c
  3279   0037BE  500F               	movf	(___omul@multiplicand+6)^0,w,c
  3280   0037C0  2217               	addwfc	(___omul@product+6)^0,f,c
  3281   0037C2  5010               	movf	(___omul@multiplicand+7)^0,w,c
  3282   0037C4  2218               	addwfc	(___omul@product+7)^0,f,c
  3283   0037C6                     l3388:
  3284   0037C6  90D8               	bcf	status,0,c
  3285   0037C8  3609               	rlcf	___omul@multiplicand^0,f,c
  3286   0037CA  360A               	rlcf	(___omul@multiplicand+1)^0,f,c
  3287   0037CC  360B               	rlcf	(___omul@multiplicand+2)^0,f,c
  3288   0037CE  360C               	rlcf	(___omul@multiplicand+3)^0,f,c
  3289   0037D0  360D               	rlcf	(___omul@multiplicand+4)^0,f,c
  3290   0037D2  360E               	rlcf	(___omul@multiplicand+5)^0,f,c
  3291   0037D4  360F               	rlcf	(___omul@multiplicand+6)^0,f,c
  3292   0037D6  3610               	rlcf	(___omul@multiplicand+7)^0,f,c
  3293   0037D8  90D8               	bcf	status,0,c
  3294   0037DA  3208               	rrcf	(___omul@multiplier+7)^0,f,c
  3295   0037DC  3207               	rrcf	(___omul@multiplier+6)^0,f,c
  3296   0037DE  3206               	rrcf	(___omul@multiplier+5)^0,f,c
  3297   0037E0  3205               	rrcf	(___omul@multiplier+4)^0,f,c
  3298   0037E2  3204               	rrcf	(___omul@multiplier+3)^0,f,c
  3299   0037E4  3203               	rrcf	(___omul@multiplier+2)^0,f,c
  3300   0037E6  3202               	rrcf	(___omul@multiplier+1)^0,f,c
  3301   0037E8  3201               	rrcf	___omul@multiplier^0,f,c
  3302   0037EA  5001               	movf	___omul@multiplier^0,w,c
  3303   0037EC  1002               	iorwf	(___omul@multiplier+1)^0,w,c
  3304   0037EE  1003               	iorwf	(___omul@multiplier+2)^0,w,c
  3305   0037F0  1004               	iorwf	(___omul@multiplier+3)^0,w,c
  3306   0037F2  1005               	iorwf	(___omul@multiplier+4)^0,w,c
  3307   0037F4  1006               	iorwf	(___omul@multiplier+5)^0,w,c
  3308   0037F6  1007               	iorwf	(___omul@multiplier+6)^0,w,c
  3309   0037F8  1008               	iorwf	(___omul@multiplier+7)^0,w,c
  3310   0037FA  A4D8               	btfss	status,2,c
  3311   0037FC  EF02  F01C         	goto	u2971
  3312   003800  EF04  F01C         	goto	u2970
  3313   003804                     u2971:
  3314   003804  EFCC  F01B         	goto	l3384
  3315   003808                     u2970:
  3316   003808  C011  F001         	movff	___omul@product,?___omul
  3317   00380C  C012  F002         	movff	___omul@product+1,?___omul+1
  3318   003810  C013  F003         	movff	___omul@product+2,?___omul+2
  3319   003814  C014  F004         	movff	___omul@product+3,?___omul+3
  3320   003818  C015  F005         	movff	___omul@product+4,?___omul+4
  3321   00381C  C016  F006         	movff	___omul@product+5,?___omul+5
  3322   003820  C017  F007         	movff	___omul@product+6,?___omul+6
  3323   003824  C018  F008         	movff	___omul@product+7,?___omul+7
  3324   003828  0012               	return		;funcret
  3325   00382A                     __end_of___omul:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function ___lodiv *****************
  3329 ;; Defined at:
  3330 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lodiv.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  dividend        8   24[COMRAM] unsigned long long 
  3333 ;;  divisor         8   32[COMRAM] unsigned long long 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  quotient        8   40[COMRAM] unsigned long long 
  3336 ;;  counter         1   48[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  8   24[COMRAM] unsigned long long 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3346 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3350 ;;Total ram usage:       25 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; This function calls:
  3353 ;;		Nothing
  3354 ;; This function is called by:
  3355 ;;		_convert_rgb2hue
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text7
  3360   00325E                     __ptext7:
  3361                           	callstack 0
  3362   00325E                     ___lodiv:
  3363                           	callstack 28
  3364   00325E  EE20  F029         	lfsr	2,___lodiv@quotient
  3365   003262  0E07               	movlw	7
  3366   003264                     u3551:
  3367   003264  6ADE               	clrf	postinc2,c
  3368   003266  06E8               	decf	wreg,f,c
  3369   003268  E2FD               	bc	u3551
  3370   00326A  5021               	movf	___lodiv@divisor^0,w,c
  3371   00326C  1022               	iorwf	(___lodiv@divisor+1)^0,w,c
  3372   00326E  1023               	iorwf	(___lodiv@divisor+2)^0,w,c
  3373   003270  1024               	iorwf	(___lodiv@divisor+3)^0,w,c
  3374   003272  1025               	iorwf	(___lodiv@divisor+4)^0,w,c
  3375   003274  1026               	iorwf	(___lodiv@divisor+5)^0,w,c
  3376   003276  1027               	iorwf	(___lodiv@divisor+6)^0,w,c
  3377   003278  1028               	iorwf	(___lodiv@divisor+7)^0,w,c
  3378   00327A  B4D8               	btfsc	status,2,c
  3379   00327C  EF42  F019         	goto	u3561
  3380   003280  EF44  F019         	goto	u3560
  3381   003284                     u3561:
  3382   003284  EF96  F019         	goto	l936
  3383   003288                     u3560:
  3384   003288  0E01               	movlw	1
  3385   00328A  6E31               	movwf	___lodiv@counter^0,c
  3386   00328C  EF52  F019         	goto	l3756
  3387   003290                     l3754:
  3388   003290  90D8               	bcf	status,0,c
  3389   003292  3621               	rlcf	___lodiv@divisor^0,f,c
  3390   003294  3622               	rlcf	(___lodiv@divisor+1)^0,f,c
  3391   003296  3623               	rlcf	(___lodiv@divisor+2)^0,f,c
  3392   003298  3624               	rlcf	(___lodiv@divisor+3)^0,f,c
  3393   00329A  3625               	rlcf	(___lodiv@divisor+4)^0,f,c
  3394   00329C  3626               	rlcf	(___lodiv@divisor+5)^0,f,c
  3395   00329E  3627               	rlcf	(___lodiv@divisor+6)^0,f,c
  3396   0032A0  3628               	rlcf	(___lodiv@divisor+7)^0,f,c
  3397   0032A2  2A31               	incf	___lodiv@counter^0,f,c
  3398   0032A4                     l3756:
  3399   0032A4  AE28               	btfss	(___lodiv@divisor+7)^0,7,c
  3400   0032A6  EF57  F019         	goto	u3571
  3401   0032AA  EF59  F019         	goto	u3570
  3402   0032AE                     u3571:
  3403   0032AE  EF48  F019         	goto	l3754
  3404   0032B2                     u3570:
  3405   0032B2                     l3758:
  3406   0032B2  90D8               	bcf	status,0,c
  3407   0032B4  3629               	rlcf	___lodiv@quotient^0,f,c
  3408   0032B6  362A               	rlcf	(___lodiv@quotient+1)^0,f,c
  3409   0032B8  362B               	rlcf	(___lodiv@quotient+2)^0,f,c
  3410   0032BA  362C               	rlcf	(___lodiv@quotient+3)^0,f,c
  3411   0032BC  362D               	rlcf	(___lodiv@quotient+4)^0,f,c
  3412   0032BE  362E               	rlcf	(___lodiv@quotient+5)^0,f,c
  3413   0032C0  362F               	rlcf	(___lodiv@quotient+6)^0,f,c
  3414   0032C2  3630               	rlcf	(___lodiv@quotient+7)^0,f,c
  3415   0032C4  5021               	movf	___lodiv@divisor^0,w,c
  3416   0032C6  5C19               	subwf	___lodiv@dividend^0,w,c
  3417   0032C8  5022               	movf	(___lodiv@divisor+1)^0,w,c
  3418   0032CA  581A               	subwfb	(___lodiv@dividend+1)^0,w,c
  3419   0032CC  5023               	movf	(___lodiv@divisor+2)^0,w,c
  3420   0032CE  581B               	subwfb	(___lodiv@dividend+2)^0,w,c
  3421   0032D0  5024               	movf	(___lodiv@divisor+3)^0,w,c
  3422   0032D2  581C               	subwfb	(___lodiv@dividend+3)^0,w,c
  3423   0032D4  5025               	movf	(___lodiv@divisor+4)^0,w,c
  3424   0032D6  581D               	subwfb	(___lodiv@dividend+4)^0,w,c
  3425   0032D8  5026               	movf	(___lodiv@divisor+5)^0,w,c
  3426   0032DA  581E               	subwfb	(___lodiv@dividend+5)^0,w,c
  3427   0032DC  5027               	movf	(___lodiv@divisor+6)^0,w,c
  3428   0032DE  581F               	subwfb	(___lodiv@dividend+6)^0,w,c
  3429   0032E0  5028               	movf	(___lodiv@divisor+7)^0,w,c
  3430   0032E2  5820               	subwfb	(___lodiv@dividend+7)^0,w,c
  3431   0032E4  A0D8               	btfss	status,0,c
  3432   0032E6  EF77  F019         	goto	u3581
  3433   0032EA  EF79  F019         	goto	u3580
  3434   0032EE                     u3581:
  3435   0032EE  EF8A  F019         	goto	l3766
  3436   0032F2                     u3580:
  3437   0032F2  5021               	movf	___lodiv@divisor^0,w,c
  3438   0032F4  5E19               	subwf	___lodiv@dividend^0,f,c
  3439   0032F6  5022               	movf	(___lodiv@divisor+1)^0,w,c
  3440   0032F8  5A1A               	subwfb	(___lodiv@dividend+1)^0,f,c
  3441   0032FA  5023               	movf	(___lodiv@divisor+2)^0,w,c
  3442   0032FC  5A1B               	subwfb	(___lodiv@dividend+2)^0,f,c
  3443   0032FE  5024               	movf	(___lodiv@divisor+3)^0,w,c
  3444   003300  5A1C               	subwfb	(___lodiv@dividend+3)^0,f,c
  3445   003302  5025               	movf	(___lodiv@divisor+4)^0,w,c
  3446   003304  5A1D               	subwfb	(___lodiv@dividend+4)^0,f,c
  3447   003306  5026               	movf	(___lodiv@divisor+5)^0,w,c
  3448   003308  5A1E               	subwfb	(___lodiv@dividend+5)^0,f,c
  3449   00330A  5027               	movf	(___lodiv@divisor+6)^0,w,c
  3450   00330C  5A1F               	subwfb	(___lodiv@dividend+6)^0,f,c
  3451   00330E  5028               	movf	(___lodiv@divisor+7)^0,w,c
  3452   003310  5A20               	subwfb	(___lodiv@dividend+7)^0,f,c
  3453   003312  8029               	bsf	___lodiv@quotient^0,0,c
  3454   003314                     l3766:
  3455   003314  90D8               	bcf	status,0,c
  3456   003316  3228               	rrcf	(___lodiv@divisor+7)^0,f,c
  3457   003318  3227               	rrcf	(___lodiv@divisor+6)^0,f,c
  3458   00331A  3226               	rrcf	(___lodiv@divisor+5)^0,f,c
  3459   00331C  3225               	rrcf	(___lodiv@divisor+4)^0,f,c
  3460   00331E  3224               	rrcf	(___lodiv@divisor+3)^0,f,c
  3461   003320  3223               	rrcf	(___lodiv@divisor+2)^0,f,c
  3462   003322  3222               	rrcf	(___lodiv@divisor+1)^0,f,c
  3463   003324  3221               	rrcf	___lodiv@divisor^0,f,c
  3464   003326  2E31               	decfsz	___lodiv@counter^0,f,c
  3465   003328  EF59  F019         	goto	l3758
  3466   00332C                     l936:
  3467   00332C  C029  F019         	movff	___lodiv@quotient,?___lodiv
  3468   003330  C02A  F01A         	movff	___lodiv@quotient+1,?___lodiv+1
  3469   003334  C02B  F01B         	movff	___lodiv@quotient+2,?___lodiv+2
  3470   003338  C02C  F01C         	movff	___lodiv@quotient+3,?___lodiv+3
  3471   00333C  C02D  F01D         	movff	___lodiv@quotient+4,?___lodiv+4
  3472   003340  C02E  F01E         	movff	___lodiv@quotient+5,?___lodiv+5
  3473   003344  C02F  F01F         	movff	___lodiv@quotient+6,?___lodiv+6
  3474   003348  C030  F020         	movff	___lodiv@quotient+7,?___lodiv+7
  3475   00334C  0012               	return		;funcret
  3476   00334E                     __end_of___lodiv:
  3477                           	callstack 0
  3478                           
  3479 ;; *************** function ___fltol *****************
  3480 ;; Defined at:
  3481 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  f1              4    0[COMRAM] unsigned long long 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  exp1            1    9[COMRAM] unsigned char 
  3486 ;;  sign1           1    8[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  4    0[COMRAM] long 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3496 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3500 ;;Total ram usage:       10 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_convert_rgb2hue
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text8
  3510   003054                     __ptext8:
  3511                           	callstack 0
  3512   003054                     ___fltol:
  3513                           	callstack 28
  3514   003054  3403               	rlcf	(___fltol@f1+2)^0,w,c
  3515   003056  3404               	rlcf	(___fltol@f1+3)^0,w,c
  3516   003058  6E0A               	movwf	___fltol@exp1^0,c
  3517   00305A  500A               	movf	___fltol@exp1^0,w,c
  3518   00305C  A4D8               	btfss	status,2,c
  3519   00305E  EF33  F018         	goto	u3481
  3520   003062  EF35  F018         	goto	u3480
  3521   003066                     u3481:
  3522   003066  EF3F  F018         	goto	l3710
  3523   00306A                     u3480:
  3524   00306A                     l3706:
  3525   00306A  0E00               	movlw	0
  3526   00306C  6E01               	movwf	?___fltol^0,c
  3527   00306E  0E00               	movlw	0
  3528   003070  6E02               	movwf	(?___fltol+1)^0,c
  3529   003072  0E00               	movlw	0
  3530   003074  6E03               	movwf	(?___fltol+2)^0,c
  3531   003076  0E00               	movlw	0
  3532   003078  6E04               	movwf	(?___fltol+3)^0,c
  3533   00307A  EFAC  F018         	goto	l795
  3534   00307E                     l3710:
  3535   00307E  C001  F005         	movff	___fltol@f1,??___fltol
  3536   003082  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  3537   003086  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  3538   00308A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  3539   00308E  0E20               	movlw	32
  3540   003090  EF4F  F018         	goto	u3490
  3541   003094                     u3495:
  3542   003094  90D8               	bcf	status,0,c
  3543   003096  3208               	rrcf	(??___fltol+3)^0,f,c
  3544   003098  3207               	rrcf	(??___fltol+2)^0,f,c
  3545   00309A  3206               	rrcf	(??___fltol+1)^0,f,c
  3546   00309C  3205               	rrcf	??___fltol^0,f,c
  3547   00309E                     u3490:
  3548   00309E  2EE8               	decfsz	wreg,f,c
  3549   0030A0  EF4A  F018         	goto	u3495
  3550   0030A4  5005               	movf	??___fltol^0,w,c
  3551   0030A6  6E09               	movwf	___fltol@sign1^0,c
  3552   0030A8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  3553   0030AA  0EFF               	movlw	255
  3554   0030AC  1601               	andwf	___fltol@f1^0,f,c
  3555   0030AE  0EFF               	movlw	255
  3556   0030B0  1602               	andwf	(___fltol@f1+1)^0,f,c
  3557   0030B2  0EFF               	movlw	255
  3558   0030B4  1603               	andwf	(___fltol@f1+2)^0,f,c
  3559   0030B6  0E00               	movlw	0
  3560   0030B8  1604               	andwf	(___fltol@f1+3)^0,f,c
  3561   0030BA  0E96               	movlw	150
  3562   0030BC  5E0A               	subwf	___fltol@exp1^0,f,c
  3563   0030BE  BE0A               	btfsc	___fltol@exp1^0,7,c
  3564   0030C0  EF66  F018         	goto	u3500
  3565   0030C4  EF64  F018         	goto	u3501
  3566   0030C8                     u3501:
  3567   0030C8  EF7C  F018         	goto	l3730
  3568   0030CC                     u3500:
  3569   0030CC  500A               	movf	___fltol@exp1^0,w,c
  3570   0030CE  0A80               	xorlw	128
  3571   0030D0  0F97               	addlw	151
  3572   0030D2  B0D8               	btfsc	status,0,c
  3573   0030D4  EF6E  F018         	goto	u3511
  3574   0030D8  EF70  F018         	goto	u3510
  3575   0030DC                     u3511:
  3576   0030DC  EF72  F018         	goto	l3726
  3577   0030E0                     u3510:
  3578   0030E0  EF35  F018         	goto	l3706
  3579   0030E4                     l3726:
  3580   0030E4  90D8               	bcf	status,0,c
  3581   0030E6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  3582   0030E8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  3583   0030EA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  3584   0030EC  3201               	rrcf	___fltol@f1^0,f,c
  3585   0030EE  3E0A               	incfsz	___fltol@exp1^0,f,c
  3586   0030F0  EF72  F018         	goto	l3726
  3587   0030F4  EF94  F018         	goto	l3740
  3588   0030F8                     l3730:
  3589   0030F8  0E1F               	movlw	31
  3590   0030FA  640A               	cpfsgt	___fltol@exp1^0,c
  3591   0030FC  EF82  F018         	goto	u3521
  3592   003100  EF84  F018         	goto	u3520
  3593   003104                     u3521:
  3594   003104  EF8C  F018         	goto	l3738
  3595   003108                     u3520:
  3596   003108  EF35  F018         	goto	l3706
  3597   00310C                     l3736:
  3598   00310C  90D8               	bcf	status,0,c
  3599   00310E  3601               	rlcf	___fltol@f1^0,f,c
  3600   003110  3602               	rlcf	(___fltol@f1+1)^0,f,c
  3601   003112  3603               	rlcf	(___fltol@f1+2)^0,f,c
  3602   003114  3604               	rlcf	(___fltol@f1+3)^0,f,c
  3603   003116  060A               	decf	___fltol@exp1^0,f,c
  3604   003118                     l3738:
  3605   003118  500A               	movf	___fltol@exp1^0,w,c
  3606   00311A  A4D8               	btfss	status,2,c
  3607   00311C  EF92  F018         	goto	u3531
  3608   003120  EF94  F018         	goto	u3530
  3609   003124                     u3531:
  3610   003124  EF86  F018         	goto	l3736
  3611   003128                     u3530:
  3612   003128                     l3740:
  3613   003128  5009               	movf	___fltol@sign1^0,w,c
  3614   00312A  B4D8               	btfsc	status,2,c
  3615   00312C  EF9A  F018         	goto	u3541
  3616   003130  EF9C  F018         	goto	u3540
  3617   003134                     u3541:
  3618   003134  EFA4  F018         	goto	l3744
  3619   003138                     u3540:
  3620   003138  1E04               	comf	(___fltol@f1+3)^0,f,c
  3621   00313A  1E03               	comf	(___fltol@f1+2)^0,f,c
  3622   00313C  1E02               	comf	(___fltol@f1+1)^0,f,c
  3623   00313E  6C01               	negf	___fltol@f1^0,c
  3624   003140  0E00               	movlw	0
  3625   003142  2202               	addwfc	(___fltol@f1+1)^0,f,c
  3626   003144  2203               	addwfc	(___fltol@f1+2)^0,f,c
  3627   003146  2204               	addwfc	(___fltol@f1+3)^0,f,c
  3628   003148                     l3744:
  3629   003148  C001  F001         	movff	___fltol@f1,?___fltol
  3630   00314C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  3631   003150  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  3632   003154  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  3633   003158                     l795:
  3634   003158  0012               	return		;funcret
  3635   00315A                     __end_of___fltol:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function ___flsub *****************
  3639 ;; Defined at:
  3640 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;  b               4   16[COMRAM] long 
  3643 ;;  a               4   20[COMRAM] long 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;		None
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  4   16[COMRAM] long 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3655 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;Total ram usage:        8 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 1
  3662 ;; This function calls:
  3663 ;;		___fladd
  3664 ;; This function is called by:
  3665 ;;		_convert_rgb2hue
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text9
  3670   003AEA                     __ptext9:
  3671                           	callstack 0
  3672   003AEA                     ___flsub:
  3673                           	callstack 27
  3674   003AEA  0E00               	movlw	0
  3675   003AEC  1A15               	xorwf	___flsub@a^0,f,c
  3676   003AEE  0E00               	movlw	0
  3677   003AF0  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3678   003AF2  0E00               	movlw	0
  3679   003AF4  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3680   003AF6  0E80               	movlw	128
  3681   003AF8  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3682   003AFA  C011  F001         	movff	___flsub@b,___fladd@b
  3683   003AFE  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3684   003B02  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3685   003B06  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3686   003B0A  C015  F005         	movff	___flsub@a,___fladd@a
  3687   003B0E  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3688   003B12  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3689   003B16  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3690   003B1A  EC71  F00D         	call	___fladd	;wreg free
  3691   003B1E  C001  F011         	movff	?___fladd,?___flsub
  3692   003B22  C002  F012         	movff	?___fladd+1,?___flsub+1
  3693   003B26  C003  F013         	movff	?___fladd+2,?___flsub+2
  3694   003B2A  C004  F014         	movff	?___fladd+3,?___flsub+3
  3695   003B2E  0012               	return		;funcret
  3696   003B30                     __end_of___flsub:
  3697                           	callstack 0
  3698                           
  3699 ;; *************** function ___fladd *****************
  3700 ;; Defined at:
  3701 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  b               4    0[COMRAM] long 
  3704 ;;  a               4    4[COMRAM] long 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  grs             1   15[COMRAM] unsigned char 
  3707 ;;  bexp            1   14[COMRAM] unsigned char 
  3708 ;;  aexp            1   13[COMRAM] unsigned char 
  3709 ;;  signs           1   12[COMRAM] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  4    0[COMRAM] unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3722 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;Total ram usage:       16 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_convert_rgb2hue
  3729 ;;		___flsub
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text10
  3734   001AE2                     __ptext10:
  3735                           	callstack 0
  3736   001AE2                     ___fladd:
  3737                           	callstack 27
  3738   001AE2  5004               	movf	(___fladd@b+3)^0,w,c
  3739   001AE4  0B80               	andlw	128
  3740   001AE6  6E0D               	movwf	___fladd@signs^0,c
  3741   001AE8  5004               	movf	(___fladd@b+3)^0,w,c
  3742   001AEA  2404               	addwf	(___fladd@b+3)^0,w,c
  3743   001AEC  6E0F               	movwf	___fladd@bexp^0,c
  3744   001AEE  AE03               	btfss	(___fladd@b+2)^0,7,c
  3745   001AF0  EF7C  F00D         	goto	u2521
  3746   001AF4  EF7E  F00D         	goto	u2520
  3747   001AF8                     u2521:
  3748   001AF8  EF7F  F00D         	goto	l3114
  3749   001AFC                     u2520:
  3750   001AFC  800F               	bsf	___fladd@bexp^0,0,c
  3751   001AFE                     l3114:
  3752   001AFE  500F               	movf	___fladd@bexp^0,w,c
  3753   001B00  B4D8               	btfsc	status,2,c
  3754   001B02  EF85  F00D         	goto	u2531
  3755   001B06  EF87  F00D         	goto	u2530
  3756   001B0A                     u2531:
  3757   001B0A  EF9C  F00D         	goto	l3124
  3758   001B0E                     u2530:
  3759   001B0E  280F               	incf	___fladd@bexp^0,w,c
  3760   001B10  A4D8               	btfss	status,2,c
  3761   001B12  EF8D  F00D         	goto	u2541
  3762   001B16  EF8F  F00D         	goto	u2540
  3763   001B1A                     u2541:
  3764   001B1A  EF97  F00D         	goto	l3120
  3765   001B1E                     u2540:
  3766   001B1E  0E00               	movlw	0
  3767   001B20  6E01               	movwf	___fladd@b^0,c
  3768   001B22  0E00               	movlw	0
  3769   001B24  6E02               	movwf	(___fladd@b+1)^0,c
  3770   001B26  0E00               	movlw	0
  3771   001B28  6E03               	movwf	(___fladd@b+2)^0,c
  3772   001B2A  0E00               	movlw	0
  3773   001B2C  6E04               	movwf	(___fladd@b+3)^0,c
  3774   001B2E                     l3120:
  3775   001B2E  8E03               	bsf	(___fladd@b+2)^0,7,c
  3776   001B30  0E00               	movlw	0
  3777   001B32  6E04               	movwf	(___fladd@b+3)^0,c
  3778   001B34  EFA4  F00D         	goto	l3126
  3779   001B38                     l3124:
  3780   001B38  0E00               	movlw	0
  3781   001B3A  6E01               	movwf	___fladd@b^0,c
  3782   001B3C  0E00               	movlw	0
  3783   001B3E  6E02               	movwf	(___fladd@b+1)^0,c
  3784   001B40  0E00               	movlw	0
  3785   001B42  6E03               	movwf	(___fladd@b+2)^0,c
  3786   001B44  0E00               	movlw	0
  3787   001B46  6E04               	movwf	(___fladd@b+3)^0,c
  3788   001B48                     l3126:
  3789   001B48  5008               	movf	(___fladd@a+3)^0,w,c
  3790   001B4A  0B80               	andlw	128
  3791   001B4C  6E0E               	movwf	___fladd@aexp^0,c
  3792   001B4E  500D               	movf	___fladd@signs^0,w,c
  3793   001B50  180E               	xorwf	___fladd@aexp^0,w,c
  3794   001B52  B4D8               	btfsc	status,2,c
  3795   001B54  EFAE  F00D         	goto	u2551
  3796   001B58  EFB0  F00D         	goto	u2550
  3797   001B5C                     u2551:
  3798   001B5C  EFB1  F00D         	goto	l3132
  3799   001B60                     u2550:
  3800   001B60  8C0D               	bsf	___fladd@signs^0,6,c
  3801   001B62                     l3132:
  3802   001B62  5008               	movf	(___fladd@a+3)^0,w,c
  3803   001B64  2408               	addwf	(___fladd@a+3)^0,w,c
  3804   001B66  6E0E               	movwf	___fladd@aexp^0,c
  3805   001B68  AE07               	btfss	(___fladd@a+2)^0,7,c
  3806   001B6A  EFB9  F00D         	goto	u2561
  3807   001B6E  EFBB  F00D         	goto	u2560
  3808   001B72                     u2561:
  3809   001B72  EFBC  F00D         	goto	l3138
  3810   001B76                     u2560:
  3811   001B76  800E               	bsf	___fladd@aexp^0,0,c
  3812   001B78                     l3138:
  3813   001B78  500E               	movf	___fladd@aexp^0,w,c
  3814   001B7A  B4D8               	btfsc	status,2,c
  3815   001B7C  EFC2  F00D         	goto	u2571
  3816   001B80  EFC4  F00D         	goto	u2570
  3817   001B84                     u2571:
  3818   001B84  EFD9  F00D         	goto	l3148
  3819   001B88                     u2570:
  3820   001B88  280E               	incf	___fladd@aexp^0,w,c
  3821   001B8A  A4D8               	btfss	status,2,c
  3822   001B8C  EFCA  F00D         	goto	u2581
  3823   001B90  EFCC  F00D         	goto	u2580
  3824   001B94                     u2581:
  3825   001B94  EFD4  F00D         	goto	l3144
  3826   001B98                     u2580:
  3827   001B98  0E00               	movlw	0
  3828   001B9A  6E05               	movwf	___fladd@a^0,c
  3829   001B9C  0E00               	movlw	0
  3830   001B9E  6E06               	movwf	(___fladd@a+1)^0,c
  3831   001BA0  0E00               	movlw	0
  3832   001BA2  6E07               	movwf	(___fladd@a+2)^0,c
  3833   001BA4  0E00               	movlw	0
  3834   001BA6  6E08               	movwf	(___fladd@a+3)^0,c
  3835   001BA8                     l3144:
  3836   001BA8  8E07               	bsf	(___fladd@a+2)^0,7,c
  3837   001BAA  0E00               	movlw	0
  3838   001BAC  6E08               	movwf	(___fladd@a+3)^0,c
  3839   001BAE  EFE1  F00D         	goto	l3150
  3840   001BB2                     l3148:
  3841   001BB2  0E00               	movlw	0
  3842   001BB4  6E05               	movwf	___fladd@a^0,c
  3843   001BB6  0E00               	movlw	0
  3844   001BB8  6E06               	movwf	(___fladd@a+1)^0,c
  3845   001BBA  0E00               	movlw	0
  3846   001BBC  6E07               	movwf	(___fladd@a+2)^0,c
  3847   001BBE  0E00               	movlw	0
  3848   001BC0  6E08               	movwf	(___fladd@a+3)^0,c
  3849   001BC2                     l3150:
  3850   001BC2  500F               	movf	___fladd@bexp^0,w,c
  3851   001BC4  5C0E               	subwf	___fladd@aexp^0,w,c
  3852   001BC6  B0D8               	btfsc	status,0,c
  3853   001BC8  EFE8  F00D         	goto	u2591
  3854   001BCC  EFEA  F00D         	goto	u2590
  3855   001BD0                     u2591:
  3856   001BD0  EF11  F00E         	goto	l3186
  3857   001BD4                     u2590:
  3858   001BD4  AC0D               	btfss	___fladd@signs^0,6,c
  3859   001BD6  EFEF  F00D         	goto	u2601
  3860   001BDA  EFF1  F00D         	goto	u2600
  3861   001BDE                     u2601:
  3862   001BDE  EFF3  F00D         	goto	l3156
  3863   001BE2                     u2600:
  3864   001BE2  0E80               	movlw	128
  3865   001BE4  1A0D               	xorwf	___fladd@signs^0,f,c
  3866   001BE6                     l3156:
  3867   001BE6  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3868   001BEA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3869   001BEE  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3870   001BF2  C001  F010         	movff	___fladd@b,___fladd@grs
  3871   001BF6  C005  F001         	movff	___fladd@a,___fladd@b
  3872   001BFA  C010  F005         	movff	___fladd@grs,___fladd@a
  3873   001BFE  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3874   001C02  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3875   001C06  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3876   001C0A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3877   001C0E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3878   001C12  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3879   001C16  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3880   001C1A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3881   001C1E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3882   001C22                     l3186:
  3883   001C22  0E00               	movlw	0
  3884   001C24  6E10               	movwf	___fladd@grs^0,c
  3885   001C26  500F               	movf	___fladd@bexp^0,w,c
  3886   001C28  C00E  F009         	movff	___fladd@aexp,??___fladd
  3887   001C2C  6A0A               	clrf	(??___fladd+1)^0,c
  3888   001C2E  5E09               	subwf	??___fladd^0,f,c
  3889   001C30  0E00               	movlw	0
  3890   001C32  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3891   001C34  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3892   001C36  EF26  F00E         	goto	u2611
  3893   001C3A  500A               	movf	(??___fladd+1)^0,w,c
  3894   001C3C  E109               	bnz	u2610
  3895   001C3E  0E1A               	movlw	26
  3896   001C40  5C09               	subwf	??___fladd^0,w,c
  3897   001C42  A0D8               	btfss	status,0,c
  3898   001C44  EF26  F00E         	goto	u2611
  3899   001C48  EF28  F00E         	goto	u2610
  3900   001C4C                     u2611:
  3901   001C4C  EF5F  F00E         	goto	l1027
  3902   001C50                     u2610:
  3903   001C50  5001               	movf	___fladd@b^0,w,c
  3904   001C52  1002               	iorwf	(___fladd@b+1)^0,w,c
  3905   001C54  1003               	iorwf	(___fladd@b+2)^0,w,c
  3906   001C56  1004               	iorwf	(___fladd@b+3)^0,w,c
  3907   001C58  A4D8               	btfss	status,2,c
  3908   001C5A  EF31  F00E         	goto	u2621
  3909   001C5E  EF34  F00E         	goto	u2620
  3910   001C62                     u2621:
  3911   001C62  0E01               	movlw	1
  3912   001C64  EF35  F00E         	goto	u2630
  3913   001C68                     u2620:
  3914   001C68  0E00               	movlw	0
  3915   001C6A                     u2630:
  3916   001C6A  6E10               	movwf	___fladd@grs^0,c
  3917   001C6C  0E00               	movlw	0
  3918   001C6E  6E01               	movwf	___fladd@b^0,c
  3919   001C70  0E00               	movlw	0
  3920   001C72  6E02               	movwf	(___fladd@b+1)^0,c
  3921   001C74  0E00               	movlw	0
  3922   001C76  6E03               	movwf	(___fladd@b+2)^0,c
  3923   001C78  0E00               	movlw	0
  3924   001C7A  6E04               	movwf	(___fladd@b+3)^0,c
  3925   001C7C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3926   001C80  EF68  F00E         	goto	l1026
  3927   001C84                     l1028:
  3928   001C84  A010               	btfss	___fladd@grs^0,0,c
  3929   001C86  EF47  F00E         	goto	u2641
  3930   001C8A  EF49  F00E         	goto	u2640
  3931   001C8E                     u2641:
  3932   001C8E  EF4F  F00E         	goto	l3198
  3933   001C92                     u2640:
  3934   001C92  90D8               	bcf	status,0,c
  3935   001C94  3010               	rrcf	___fladd@grs^0,w,c
  3936   001C96  0901               	iorlw	1
  3937   001C98  6E10               	movwf	___fladd@grs^0,c
  3938   001C9A  EF51  F00E         	goto	l3200
  3939   001C9E                     l3198:
  3940   001C9E  90D8               	bcf	status,0,c
  3941   001CA0  3210               	rrcf	___fladd@grs^0,f,c
  3942   001CA2                     l3200:
  3943   001CA2  A001               	btfss	___fladd@b^0,0,c
  3944   001CA4  EF56  F00E         	goto	u2651
  3945   001CA8  EF58  F00E         	goto	u2650
  3946   001CAC                     u2651:
  3947   001CAC  EF59  F00E         	goto	l3204
  3948   001CB0                     u2650:
  3949   001CB0  8E10               	bsf	___fladd@grs^0,7,c
  3950   001CB2                     l3204:
  3951   001CB2  3404               	rlcf	(___fladd@b+3)^0,w,c
  3952   001CB4  3204               	rrcf	(___fladd@b+3)^0,f,c
  3953   001CB6  3203               	rrcf	(___fladd@b+2)^0,f,c
  3954   001CB8  3202               	rrcf	(___fladd@b+1)^0,f,c
  3955   001CBA  3201               	rrcf	___fladd@b^0,f,c
  3956   001CBC  2A0F               	incf	___fladd@bexp^0,f,c
  3957   001CBE                     l1027:
  3958   001CBE  500E               	movf	___fladd@aexp^0,w,c
  3959   001CC0  5C0F               	subwf	___fladd@bexp^0,w,c
  3960   001CC2  A0D8               	btfss	status,0,c
  3961   001CC4  EF66  F00E         	goto	u2661
  3962   001CC8  EF68  F00E         	goto	u2660
  3963   001CCC                     u2661:
  3964   001CCC  EF42  F00E         	goto	l1028
  3965   001CD0                     u2660:
  3966   001CD0                     l1026:
  3967   001CD0  BC0D               	btfsc	___fladd@signs^0,6,c
  3968   001CD2  EF6D  F00E         	goto	u2671
  3969   001CD6  EF6F  F00E         	goto	u2670
  3970   001CDA                     u2671:
  3971   001CDA  EFAF  F00E         	goto	l3232
  3972   001CDE                     u2670:
  3973   001CDE  500F               	movf	___fladd@bexp^0,w,c
  3974   001CE0  A4D8               	btfss	status,2,c
  3975   001CE2  EF75  F00E         	goto	u2681
  3976   001CE6  EF77  F00E         	goto	u2680
  3977   001CEA                     u2681:
  3978   001CEA  EF81  F00E         	goto	l3214
  3979   001CEE                     u2680:
  3980   001CEE  0E00               	movlw	0
  3981   001CF0  6E01               	movwf	?___fladd^0,c
  3982   001CF2  0E00               	movlw	0
  3983   001CF4  6E02               	movwf	(?___fladd+1)^0,c
  3984   001CF6  0E00               	movlw	0
  3985   001CF8  6E03               	movwf	(?___fladd+2)^0,c
  3986   001CFA  0E00               	movlw	0
  3987   001CFC  6E04               	movwf	(?___fladd+3)^0,c
  3988   001CFE  EFD0  F00F         	goto	l1035
  3989   001D02                     l3214:
  3990   001D02  5005               	movf	___fladd@a^0,w,c
  3991   001D04  2601               	addwf	___fladd@b^0,f,c
  3992   001D06  5006               	movf	(___fladd@a+1)^0,w,c
  3993   001D08  2202               	addwfc	(___fladd@b+1)^0,f,c
  3994   001D0A  5007               	movf	(___fladd@a+2)^0,w,c
  3995   001D0C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3996   001D0E  5008               	movf	(___fladd@a+3)^0,w,c
  3997   001D10  2204               	addwfc	(___fladd@b+3)^0,f,c
  3998   001D12  A004               	btfss	(___fladd@b+3)^0,0,c
  3999   001D14  EF8E  F00E         	goto	u2691
  4000   001D18  EF90  F00E         	goto	u2690
  4001   001D1C                     u2691:
  4002   001D1C  EF3C  F00F         	goto	l3268
  4003   001D20                     u2690:
  4004   001D20  A010               	btfss	___fladd@grs^0,0,c
  4005   001D22  EF95  F00E         	goto	u2701
  4006   001D26  EF97  F00E         	goto	u2700
  4007   001D2A                     u2701:
  4008   001D2A  EF9D  F00E         	goto	l3222
  4009   001D2E                     u2700:
  4010   001D2E  90D8               	bcf	status,0,c
  4011   001D30  3010               	rrcf	___fladd@grs^0,w,c
  4012   001D32  0901               	iorlw	1
  4013   001D34  6E10               	movwf	___fladd@grs^0,c
  4014   001D36  EF9F  F00E         	goto	l3224
  4015   001D3A                     l3222:
  4016   001D3A  90D8               	bcf	status,0,c
  4017   001D3C  3210               	rrcf	___fladd@grs^0,f,c
  4018   001D3E                     l3224:
  4019   001D3E  A001               	btfss	___fladd@b^0,0,c
  4020   001D40  EFA4  F00E         	goto	u2711
  4021   001D44  EFA6  F00E         	goto	u2710
  4022   001D48                     u2711:
  4023   001D48  EFA7  F00E         	goto	l3228
  4024   001D4C                     u2710:
  4025   001D4C  8E10               	bsf	___fladd@grs^0,7,c
  4026   001D4E                     l3228:
  4027   001D4E  3404               	rlcf	(___fladd@b+3)^0,w,c
  4028   001D50  3204               	rrcf	(___fladd@b+3)^0,f,c
  4029   001D52  3203               	rrcf	(___fladd@b+2)^0,f,c
  4030   001D54  3202               	rrcf	(___fladd@b+1)^0,f,c
  4031   001D56  3201               	rrcf	___fladd@b^0,f,c
  4032   001D58  2A0F               	incf	___fladd@bexp^0,f,c
  4033   001D5A  EF3C  F00F         	goto	l3268
  4034   001D5E                     l3232:
  4035   001D5E  5005               	movf	___fladd@a^0,w,c
  4036   001D60  5C01               	subwf	___fladd@b^0,w,c
  4037   001D62  5006               	movf	(___fladd@a+1)^0,w,c
  4038   001D64  5802               	subwfb	(___fladd@b+1)^0,w,c
  4039   001D66  5007               	movf	(___fladd@a+2)^0,w,c
  4040   001D68  5803               	subwfb	(___fladd@b+2)^0,w,c
  4041   001D6A  5004               	movf	(___fladd@b+3)^0,w,c
  4042   001D6C  0A80               	xorlw	128
  4043   001D6E  6E09               	movwf	??___fladd^0,c
  4044   001D70  5008               	movf	(___fladd@a+3)^0,w,c
  4045   001D72  0A80               	xorlw	128
  4046   001D74  5809               	subwfb	??___fladd^0,w,c
  4047   001D76  B0D8               	btfsc	status,0,c
  4048   001D78  EFC0  F00E         	goto	u2721
  4049   001D7C  EFC2  F00E         	goto	u2720
  4050   001D80                     u2721:
  4051   001D80  EFED  F00E         	goto	l3242
  4052   001D84                     u2720:
  4053   001D84  5001               	movf	___fladd@b^0,w,c
  4054   001D86  5C05               	subwf	___fladd@a^0,w,c
  4055   001D88  6E09               	movwf	??___fladd^0,c
  4056   001D8A  5002               	movf	(___fladd@b+1)^0,w,c
  4057   001D8C  5806               	subwfb	(___fladd@a+1)^0,w,c
  4058   001D8E  6E0A               	movwf	(??___fladd+1)^0,c
  4059   001D90  5003               	movf	(___fladd@b+2)^0,w,c
  4060   001D92  5807               	subwfb	(___fladd@a+2)^0,w,c
  4061   001D94  6E0B               	movwf	(??___fladd+2)^0,c
  4062   001D96  5004               	movf	(___fladd@b+3)^0,w,c
  4063   001D98  5808               	subwfb	(___fladd@a+3)^0,w,c
  4064   001D9A  6E0C               	movwf	(??___fladd+3)^0,c
  4065   001D9C  0EFF               	movlw	255
  4066   001D9E  2409               	addwf	??___fladd^0,w,c
  4067   001DA0  6E01               	movwf	___fladd@b^0,c
  4068   001DA2  0EFF               	movlw	255
  4069   001DA4  200A               	addwfc	(??___fladd+1)^0,w,c
  4070   001DA6  6E02               	movwf	(___fladd@b+1)^0,c
  4071   001DA8  0EFF               	movlw	255
  4072   001DAA  200B               	addwfc	(??___fladd+2)^0,w,c
  4073   001DAC  6E03               	movwf	(___fladd@b+2)^0,c
  4074   001DAE  0EFF               	movlw	255
  4075   001DB0  200C               	addwfc	(??___fladd+3)^0,w,c
  4076   001DB2  6E04               	movwf	(___fladd@b+3)^0,c
  4077   001DB4  0E80               	movlw	128
  4078   001DB6  1A0D               	xorwf	___fladd@signs^0,f,c
  4079   001DB8  6C10               	negf	___fladd@grs^0,c
  4080   001DBA  5010               	movf	___fladd@grs^0,w,c
  4081   001DBC  A4D8               	btfss	status,2,c
  4082   001DBE  EFE3  F00E         	goto	u2731
  4083   001DC2  EFE5  F00E         	goto	u2730
  4084   001DC6                     u2731:
  4085   001DC6  EFF5  F00E         	goto	l1043
  4086   001DCA                     u2730:
  4087   001DCA  0E01               	movlw	1
  4088   001DCC  2601               	addwf	___fladd@b^0,f,c
  4089   001DCE  0E00               	movlw	0
  4090   001DD0  2202               	addwfc	(___fladd@b+1)^0,f,c
  4091   001DD2  2203               	addwfc	(___fladd@b+2)^0,f,c
  4092   001DD4  2204               	addwfc	(___fladd@b+3)^0,f,c
  4093   001DD6  EFF5  F00E         	goto	l1043
  4094   001DDA                     l3242:
  4095   001DDA  5005               	movf	___fladd@a^0,w,c
  4096   001DDC  5E01               	subwf	___fladd@b^0,f,c
  4097   001DDE  5006               	movf	(___fladd@a+1)^0,w,c
  4098   001DE0  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4099   001DE2  5007               	movf	(___fladd@a+2)^0,w,c
  4100   001DE4  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4101   001DE6  5008               	movf	(___fladd@a+3)^0,w,c
  4102   001DE8  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4103   001DEA                     l1043:
  4104   001DEA  5001               	movf	___fladd@b^0,w,c
  4105   001DEC  1002               	iorwf	(___fladd@b+1)^0,w,c
  4106   001DEE  1003               	iorwf	(___fladd@b+2)^0,w,c
  4107   001DF0  1004               	iorwf	(___fladd@b+3)^0,w,c
  4108   001DF2  A4D8               	btfss	status,2,c
  4109   001DF4  EFFE  F00E         	goto	u2741
  4110   001DF8  EF00  F00F         	goto	u2740
  4111   001DFC                     u2741:
  4112   001DFC  EF35  F00F         	goto	l3266
  4113   001E00                     u2740:
  4114   001E00  5010               	movf	___fladd@grs^0,w,c
  4115   001E02  A4D8               	btfss	status,2,c
  4116   001E04  EF06  F00F         	goto	u2751
  4117   001E08  EF08  F00F         	goto	u2750
  4118   001E0C                     u2751:
  4119   001E0C  EF35  F00F         	goto	l3266
  4120   001E10                     u2750:
  4121   001E10  0E00               	movlw	0
  4122   001E12  6E01               	movwf	?___fladd^0,c
  4123   001E14  0E00               	movlw	0
  4124   001E16  6E02               	movwf	(?___fladd+1)^0,c
  4125   001E18  0E00               	movlw	0
  4126   001E1A  6E03               	movwf	(?___fladd+2)^0,c
  4127   001E1C  0E00               	movlw	0
  4128   001E1E  6E04               	movwf	(?___fladd+3)^0,c
  4129   001E20  EFD0  F00F         	goto	l1035
  4130   001E24                     l3250:
  4131   001E24  90D8               	bcf	status,0,c
  4132   001E26  3601               	rlcf	___fladd@b^0,f,c
  4133   001E28  3602               	rlcf	(___fladd@b+1)^0,f,c
  4134   001E2A  3603               	rlcf	(___fladd@b+2)^0,f,c
  4135   001E2C  3604               	rlcf	(___fladd@b+3)^0,f,c
  4136   001E2E  AE10               	btfss	___fladd@grs^0,7,c
  4137   001E30  EF1C  F00F         	goto	u2761
  4138   001E34  EF1E  F00F         	goto	u2760
  4139   001E38                     u2761:
  4140   001E38  EF1F  F00F         	goto	l3256
  4141   001E3C                     u2760:
  4142   001E3C  8001               	bsf	___fladd@b^0,0,c
  4143   001E3E                     l3256:
  4144   001E3E  A010               	btfss	___fladd@grs^0,0,c
  4145   001E40  EF24  F00F         	goto	u2771
  4146   001E44  EF26  F00F         	goto	u2770
  4147   001E48                     u2771:
  4148   001E48  EF2A  F00F         	goto	l3260
  4149   001E4C                     u2770:
  4150   001E4C  80D8               	bsf	status,0,c
  4151   001E4E  3610               	rlcf	___fladd@grs^0,f,c
  4152   001E50  EF2C  F00F         	goto	l3262
  4153   001E54                     l3260:
  4154   001E54  90D8               	bcf	status,0,c
  4155   001E56  3610               	rlcf	___fladd@grs^0,f,c
  4156   001E58                     l3262:
  4157   001E58  500F               	movf	___fladd@bexp^0,w,c
  4158   001E5A  B4D8               	btfsc	status,2,c
  4159   001E5C  EF32  F00F         	goto	u2781
  4160   001E60  EF34  F00F         	goto	u2780
  4161   001E64                     u2781:
  4162   001E64  EF35  F00F         	goto	l3266
  4163   001E68                     u2780:
  4164   001E68  060F               	decf	___fladd@bexp^0,f,c
  4165   001E6A                     l3266:
  4166   001E6A  AE03               	btfss	(___fladd@b+2)^0,7,c
  4167   001E6C  EF3A  F00F         	goto	u2791
  4168   001E70  EF3C  F00F         	goto	u2790
  4169   001E74                     u2791:
  4170   001E74  EF12  F00F         	goto	l3250
  4171   001E78                     u2790:
  4172   001E78                     l3268:
  4173   001E78  0E00               	movlw	0
  4174   001E7A  6E0E               	movwf	___fladd@aexp^0,c
  4175   001E7C  AE10               	btfss	___fladd@grs^0,7,c
  4176   001E7E  EF43  F00F         	goto	u2801
  4177   001E82  EF45  F00F         	goto	u2800
  4178   001E86                     u2801:
  4179   001E86  EF5D  F00F         	goto	l1052
  4180   001E8A                     u2800:
  4181   001E8A  C010  F009         	movff	___fladd@grs,??___fladd
  4182   001E8E  0E7F               	movlw	127
  4183   001E90  1609               	andwf	??___fladd^0,f,c
  4184   001E92  B4D8               	btfsc	status,2,c
  4185   001E94  EF4E  F00F         	goto	u2811
  4186   001E98  EF50  F00F         	goto	u2810
  4187   001E9C                     u2811:
  4188   001E9C  EF54  F00F         	goto	l1053
  4189   001EA0                     u2810:
  4190   001EA0                     l3274:
  4191   001EA0  0E01               	movlw	1
  4192   001EA2  6E0E               	movwf	___fladd@aexp^0,c
  4193   001EA4  EF5D  F00F         	goto	l1052
  4194   001EA8                     l1053:
  4195   001EA8  A001               	btfss	___fladd@b^0,0,c
  4196   001EAA  EF59  F00F         	goto	u2821
  4197   001EAE  EF5B  F00F         	goto	u2820
  4198   001EB2                     u2821:
  4199   001EB2  EF5D  F00F         	goto	l1052
  4200   001EB6                     u2820:
  4201   001EB6  EF50  F00F         	goto	l3274
  4202   001EBA                     l1052:
  4203   001EBA  500E               	movf	___fladd@aexp^0,w,c
  4204   001EBC  B4D8               	btfsc	status,2,c
  4205   001EBE  EF63  F00F         	goto	u2831
  4206   001EC2  EF65  F00F         	goto	u2830
  4207   001EC6                     u2831:
  4208   001EC6  EF90  F00F         	goto	l3286
  4209   001ECA                     u2830:
  4210   001ECA  0E01               	movlw	1
  4211   001ECC  2601               	addwf	___fladd@b^0,f,c
  4212   001ECE  0E00               	movlw	0
  4213   001ED0  2202               	addwfc	(___fladd@b+1)^0,f,c
  4214   001ED2  2203               	addwfc	(___fladd@b+2)^0,f,c
  4215   001ED4  2204               	addwfc	(___fladd@b+3)^0,f,c
  4216   001ED6  A004               	btfss	(___fladd@b+3)^0,0,c
  4217   001ED8  EF70  F00F         	goto	u2841
  4218   001EDC  EF72  F00F         	goto	u2840
  4219   001EE0                     u2841:
  4220   001EE0  EF90  F00F         	goto	l3286
  4221   001EE4                     u2840:
  4222   001EE4  C001  F009         	movff	___fladd@b,??___fladd
  4223   001EE8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4224   001EEC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4225   001EF0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4226   001EF4  340C               	rlcf	(??___fladd+3)^0,w,c
  4227   001EF6  320C               	rrcf	(??___fladd+3)^0,f,c
  4228   001EF8  320B               	rrcf	(??___fladd+2)^0,f,c
  4229   001EFA  320A               	rrcf	(??___fladd+1)^0,f,c
  4230   001EFC  3209               	rrcf	??___fladd^0,f,c
  4231   001EFE  C009  F001         	movff	??___fladd,___fladd@b
  4232   001F02  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4233   001F06  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4234   001F0A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4235   001F0E  280F               	incf	___fladd@bexp^0,w,c
  4236   001F10  B4D8               	btfsc	status,2,c
  4237   001F12  EF8D  F00F         	goto	u2851
  4238   001F16  EF8F  F00F         	goto	u2850
  4239   001F1A                     u2851:
  4240   001F1A  EF90  F00F         	goto	l3286
  4241   001F1E                     u2850:
  4242   001F1E  2A0F               	incf	___fladd@bexp^0,f,c
  4243   001F20                     l3286:
  4244   001F20  280F               	incf	___fladd@bexp^0,w,c
  4245   001F22  B4D8               	btfsc	status,2,c
  4246   001F24  EF96  F00F         	goto	u2861
  4247   001F28  EF98  F00F         	goto	u2860
  4248   001F2C                     u2861:
  4249   001F2C  EFA0  F00F         	goto	l3290
  4250   001F30                     u2860:
  4251   001F30  500F               	movf	___fladd@bexp^0,w,c
  4252   001F32  A4D8               	btfss	status,2,c
  4253   001F34  EF9E  F00F         	goto	u2871
  4254   001F38  EFA0  F00F         	goto	u2870
  4255   001F3C                     u2871:
  4256   001F3C  EFB2  F00F         	goto	l3294
  4257   001F40                     u2870:
  4258   001F40                     l3290:
  4259   001F40  0E00               	movlw	0
  4260   001F42  6E01               	movwf	___fladd@b^0,c
  4261   001F44  0E00               	movlw	0
  4262   001F46  6E02               	movwf	(___fladd@b+1)^0,c
  4263   001F48  0E00               	movlw	0
  4264   001F4A  6E03               	movwf	(___fladd@b+2)^0,c
  4265   001F4C  0E00               	movlw	0
  4266   001F4E  6E04               	movwf	(___fladd@b+3)^0,c
  4267   001F50  500F               	movf	___fladd@bexp^0,w,c
  4268   001F52  A4D8               	btfss	status,2,c
  4269   001F54  EFAE  F00F         	goto	u2881
  4270   001F58  EFB0  F00F         	goto	u2880
  4271   001F5C                     u2881:
  4272   001F5C  EFB2  F00F         	goto	l3294
  4273   001F60                     u2880:
  4274   001F60  0E00               	movlw	0
  4275   001F62  6E0D               	movwf	___fladd@signs^0,c
  4276   001F64                     l3294:
  4277   001F64  A00F               	btfss	___fladd@bexp^0,0,c
  4278   001F66  EFB7  F00F         	goto	u2891
  4279   001F6A  EFB9  F00F         	goto	u2890
  4280   001F6E                     u2891:
  4281   001F6E  EFBC  F00F         	goto	l3298
  4282   001F72                     u2890:
  4283   001F72  8E03               	bsf	(___fladd@b+2)^0,7,c
  4284   001F74  EFBD  F00F         	goto	l3300
  4285   001F78                     l3298:
  4286   001F78  9E03               	bcf	(___fladd@b+2)^0,7,c
  4287   001F7A                     l3300:
  4288   001F7A  90D8               	bcf	status,0,c
  4289   001F7C  300F               	rrcf	___fladd@bexp^0,w,c
  4290   001F7E  6E04               	movwf	(___fladd@b+3)^0,c
  4291   001F80  AE0D               	btfss	___fladd@signs^0,7,c
  4292   001F82  EFC5  F00F         	goto	u2901
  4293   001F86  EFC7  F00F         	goto	u2900
  4294   001F8A                     u2901:
  4295   001F8A  EFC8  F00F         	goto	l3306
  4296   001F8E                     u2900:
  4297   001F8E  8E04               	bsf	(___fladd@b+3)^0,7,c
  4298   001F90                     l3306:
  4299   001F90  C001  F001         	movff	___fladd@b,?___fladd
  4300   001F94  C002  F002         	movff	___fladd@b+1,?___fladd+1
  4301   001F98  C003  F003         	movff	___fladd@b+2,?___fladd+2
  4302   001F9C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  4303   001FA0                     l1035:
  4304   001FA0  0012               	return		;funcret
  4305   001FA2                     __end_of___fladd:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function ___flmul *****************
  4309 ;; Defined at:
  4310 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  b               4    0[COMRAM] unsigned char 
  4313 ;;  a               4    4[COMRAM] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  prod            4   19[COMRAM] struct .
  4316 ;;  grs             4   13[COMRAM] unsigned long 
  4317 ;;  temp            2   23[COMRAM] struct .
  4318 ;;  bexp            1   18[COMRAM] unsigned char 
  4319 ;;  aexp            1   17[COMRAM] unsigned char 
  4320 ;;  sign            1   12[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  4    0[COMRAM] unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, prodl, prodh
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:       25 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_convert_rgb2hue
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text11
  4344   001FA2                     __ptext11:
  4345                           	callstack 0
  4346   001FA2                     ___flmul:
  4347                           	callstack 28
  4348   001FA2  5004               	movf	(___flmul@b+3)^0,w,c
  4349   001FA4  0B80               	andlw	128
  4350   001FA6  6E0D               	movwf	___flmul@sign^0,c
  4351   001FA8  5004               	movf	(___flmul@b+3)^0,w,c
  4352   001FAA  2404               	addwf	(___flmul@b+3)^0,w,c
  4353   001FAC  6E13               	movwf	___flmul@bexp^0,c
  4354   001FAE  AE03               	btfss	(___flmul@b+2)^0,7,c
  4355   001FB0  EFDC  F00F         	goto	u3211
  4356   001FB4  EFDE  F00F         	goto	u3210
  4357   001FB8                     u3211:
  4358   001FB8  EFDF  F00F         	goto	l3536
  4359   001FBC                     u3210:
  4360   001FBC  8013               	bsf	___flmul@bexp^0,0,c
  4361   001FBE                     l3536:
  4362   001FBE  5013               	movf	___flmul@bexp^0,w,c
  4363   001FC0  B4D8               	btfsc	status,2,c
  4364   001FC2  EFE5  F00F         	goto	u3221
  4365   001FC6  EFE7  F00F         	goto	u3220
  4366   001FCA                     u3221:
  4367   001FCA  EFFA  F00F         	goto	l3544
  4368   001FCE                     u3220:
  4369   001FCE  2813               	incf	___flmul@bexp^0,w,c
  4370   001FD0  A4D8               	btfss	status,2,c
  4371   001FD2  EFED  F00F         	goto	u3231
  4372   001FD6  EFEF  F00F         	goto	u3230
  4373   001FDA                     u3231:
  4374   001FDA  EFF7  F00F         	goto	l3542
  4375   001FDE                     u3230:
  4376   001FDE  0E00               	movlw	0
  4377   001FE0  6E01               	movwf	___flmul@b^0,c
  4378   001FE2  0E00               	movlw	0
  4379   001FE4  6E02               	movwf	(___flmul@b+1)^0,c
  4380   001FE6  0E00               	movlw	0
  4381   001FE8  6E03               	movwf	(___flmul@b+2)^0,c
  4382   001FEA  0E00               	movlw	0
  4383   001FEC  6E04               	movwf	(___flmul@b+3)^0,c
  4384   001FEE                     l3542:
  4385   001FEE  8E03               	bsf	(___flmul@b+2)^0,7,c
  4386   001FF0  EF02  F010         	goto	l3546
  4387   001FF4                     l3544:
  4388   001FF4  0E00               	movlw	0
  4389   001FF6  6E01               	movwf	___flmul@b^0,c
  4390   001FF8  0E00               	movlw	0
  4391   001FFA  6E02               	movwf	(___flmul@b+1)^0,c
  4392   001FFC  0E00               	movlw	0
  4393   001FFE  6E03               	movwf	(___flmul@b+2)^0,c
  4394   002000  0E00               	movlw	0
  4395   002002  6E04               	movwf	(___flmul@b+3)^0,c
  4396   002004                     l3546:
  4397   002004  5008               	movf	(___flmul@a+3)^0,w,c
  4398   002006  0B80               	andlw	128
  4399   002008  1A0D               	xorwf	___flmul@sign^0,f,c
  4400   00200A  5008               	movf	(___flmul@a+3)^0,w,c
  4401   00200C  2408               	addwf	(___flmul@a+3)^0,w,c
  4402   00200E  6E12               	movwf	___flmul@aexp^0,c
  4403   002010  AE07               	btfss	(___flmul@a+2)^0,7,c
  4404   002012  EF0D  F010         	goto	u3241
  4405   002016  EF0F  F010         	goto	u3240
  4406   00201A                     u3241:
  4407   00201A  EF10  F010         	goto	l3554
  4408   00201E                     u3240:
  4409   00201E  8012               	bsf	___flmul@aexp^0,0,c
  4410   002020                     l3554:
  4411   002020  5012               	movf	___flmul@aexp^0,w,c
  4412   002022  B4D8               	btfsc	status,2,c
  4413   002024  EF16  F010         	goto	u3251
  4414   002028  EF18  F010         	goto	u3250
  4415   00202C                     u3251:
  4416   00202C  EF2B  F010         	goto	l3562
  4417   002030                     u3250:
  4418   002030  2812               	incf	___flmul@aexp^0,w,c
  4419   002032  A4D8               	btfss	status,2,c
  4420   002034  EF1E  F010         	goto	u3261
  4421   002038  EF20  F010         	goto	u3260
  4422   00203C                     u3261:
  4423   00203C  EF28  F010         	goto	l3560
  4424   002040                     u3260:
  4425   002040  0E00               	movlw	0
  4426   002042  6E05               	movwf	___flmul@a^0,c
  4427   002044  0E00               	movlw	0
  4428   002046  6E06               	movwf	(___flmul@a+1)^0,c
  4429   002048  0E00               	movlw	0
  4430   00204A  6E07               	movwf	(___flmul@a+2)^0,c
  4431   00204C  0E00               	movlw	0
  4432   00204E  6E08               	movwf	(___flmul@a+3)^0,c
  4433   002050                     l3560:
  4434   002050  8E07               	bsf	(___flmul@a+2)^0,7,c
  4435   002052  EF33  F010         	goto	l1112
  4436   002056                     l3562:
  4437   002056  0E00               	movlw	0
  4438   002058  6E05               	movwf	___flmul@a^0,c
  4439   00205A  0E00               	movlw	0
  4440   00205C  6E06               	movwf	(___flmul@a+1)^0,c
  4441   00205E  0E00               	movlw	0
  4442   002060  6E07               	movwf	(___flmul@a+2)^0,c
  4443   002062  0E00               	movlw	0
  4444   002064  6E08               	movwf	(___flmul@a+3)^0,c
  4445   002066                     l1112:
  4446   002066  5012               	movf	___flmul@aexp^0,w,c
  4447   002068  B4D8               	btfsc	status,2,c
  4448   00206A  EF39  F010         	goto	u3271
  4449   00206E  EF3B  F010         	goto	u3270
  4450   002072                     u3271:
  4451   002072  EF43  F010         	goto	l3566
  4452   002076                     u3270:
  4453   002076  5013               	movf	___flmul@bexp^0,w,c
  4454   002078  A4D8               	btfss	status,2,c
  4455   00207A  EF41  F010         	goto	u3281
  4456   00207E  EF43  F010         	goto	u3280
  4457   002082                     u3281:
  4458   002082  EF4D  F010         	goto	l3570
  4459   002086                     u3280:
  4460   002086                     l3566:
  4461   002086  0E00               	movlw	0
  4462   002088  6E01               	movwf	?___flmul^0,c
  4463   00208A  0E00               	movlw	0
  4464   00208C  6E02               	movwf	(?___flmul+1)^0,c
  4465   00208E  0E00               	movlw	0
  4466   002090  6E03               	movwf	(?___flmul+2)^0,c
  4467   002092  0E00               	movlw	0
  4468   002094  6E04               	movwf	(?___flmul+3)^0,c
  4469   002096  EFE5  F011         	goto	l1116
  4470   00209A                     l3570:
  4471   00209A  5007               	movf	(___flmul@a+2)^0,w,c
  4472   00209C  0201               	mulwf	___flmul@b^0,c
  4473   00209E  CFF3 F018          	movff	prodl,___flmul@temp
  4474   0020A2  CFF4 F019          	movff	prodh,___flmul@temp+1
  4475   0020A6  5018               	movf	___flmul@temp^0,w,c
  4476   0020A8  6E0E               	movwf	___flmul@grs^0,c
  4477   0020AA  6A0F               	clrf	(___flmul@grs+1)^0,c
  4478   0020AC  6A10               	clrf	(___flmul@grs+2)^0,c
  4479   0020AE  6A11               	clrf	(___flmul@grs+3)^0,c
  4480   0020B0  5019               	movf	(___flmul@temp+1)^0,w,c
  4481   0020B2  6E14               	movwf	___flmul@prod^0,c
  4482   0020B4  6A15               	clrf	(___flmul@prod+1)^0,c
  4483   0020B6  6A16               	clrf	(___flmul@prod+2)^0,c
  4484   0020B8  6A17               	clrf	(___flmul@prod+3)^0,c
  4485   0020BA  5006               	movf	(___flmul@a+1)^0,w,c
  4486   0020BC  0202               	mulwf	(___flmul@b+1)^0,c
  4487   0020BE  CFF3 F018          	movff	prodl,___flmul@temp
  4488   0020C2  CFF4 F019          	movff	prodh,___flmul@temp+1
  4489   0020C6  5018               	movf	___flmul@temp^0,w,c
  4490   0020C8  260E               	addwf	___flmul@grs^0,f,c
  4491   0020CA  0E00               	movlw	0
  4492   0020CC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4493   0020CE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4494   0020D0  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4495   0020D2  5019               	movf	(___flmul@temp+1)^0,w,c
  4496   0020D4  2614               	addwf	___flmul@prod^0,f,c
  4497   0020D6  0E00               	movlw	0
  4498   0020D8  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4499   0020DA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4500   0020DC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4501   0020DE  5005               	movf	___flmul@a^0,w,c
  4502   0020E0  0203               	mulwf	(___flmul@b+2)^0,c
  4503   0020E2  CFF3 F018          	movff	prodl,___flmul@temp
  4504   0020E6  CFF4 F019          	movff	prodh,___flmul@temp+1
  4505   0020EA  5018               	movf	___flmul@temp^0,w,c
  4506   0020EC  260E               	addwf	___flmul@grs^0,f,c
  4507   0020EE  0E00               	movlw	0
  4508   0020F0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4509   0020F2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4510   0020F4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4511   0020F6  5019               	movf	(___flmul@temp+1)^0,w,c
  4512   0020F8  2614               	addwf	___flmul@prod^0,f,c
  4513   0020FA  0E00               	movlw	0
  4514   0020FC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4515   0020FE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4516   002100  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4517   002102  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4518   002106  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4519   00210A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4520   00210E  6A0E               	clrf	___flmul@grs^0,c
  4521   002110  5005               	movf	___flmul@a^0,w,c
  4522   002112  0202               	mulwf	(___flmul@b+1)^0,c
  4523   002114  CFF3 F018          	movff	prodl,___flmul@temp
  4524   002118  CFF4 F019          	movff	prodh,___flmul@temp+1
  4525   00211C  5018               	movf	___flmul@temp^0,w,c
  4526   00211E  260E               	addwf	___flmul@grs^0,f,c
  4527   002120  5019               	movf	(___flmul@temp+1)^0,w,c
  4528   002122  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4529   002124  0E00               	movlw	0
  4530   002126  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4531   002128  0E00               	movlw	0
  4532   00212A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4533   00212C  5006               	movf	(___flmul@a+1)^0,w,c
  4534   00212E  0201               	mulwf	___flmul@b^0,c
  4535   002130  CFF3 F018          	movff	prodl,___flmul@temp
  4536   002134  CFF4 F019          	movff	prodh,___flmul@temp+1
  4537   002138  5018               	movf	___flmul@temp^0,w,c
  4538   00213A  260E               	addwf	___flmul@grs^0,f,c
  4539   00213C  5019               	movf	(___flmul@temp+1)^0,w,c
  4540   00213E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4541   002140  0E00               	movlw	0
  4542   002142  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4543   002144  0E00               	movlw	0
  4544   002146  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4545   002148  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4546   00214C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4547   002150  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4548   002154  6A0E               	clrf	___flmul@grs^0,c
  4549   002156  5005               	movf	___flmul@a^0,w,c
  4550   002158  0201               	mulwf	___flmul@b^0,c
  4551   00215A  CFF3 F018          	movff	prodl,___flmul@temp
  4552   00215E  CFF4 F019          	movff	prodh,___flmul@temp+1
  4553   002162  5018               	movf	___flmul@temp^0,w,c
  4554   002164  260E               	addwf	___flmul@grs^0,f,c
  4555   002166  5019               	movf	(___flmul@temp+1)^0,w,c
  4556   002168  220F               	addwfc	(___flmul@grs+1)^0,f,c
  4557   00216A  0E00               	movlw	0
  4558   00216C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  4559   00216E  0E00               	movlw	0
  4560   002170  2211               	addwfc	(___flmul@grs+3)^0,f,c
  4561   002172  5007               	movf	(___flmul@a+2)^0,w,c
  4562   002174  0202               	mulwf	(___flmul@b+1)^0,c
  4563   002176  CFF3 F018          	movff	prodl,___flmul@temp
  4564   00217A  CFF4 F019          	movff	prodh,___flmul@temp+1
  4565   00217E  5018               	movf	___flmul@temp^0,w,c
  4566   002180  2614               	addwf	___flmul@prod^0,f,c
  4567   002182  5019               	movf	(___flmul@temp+1)^0,w,c
  4568   002184  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4569   002186  0E00               	movlw	0
  4570   002188  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4571   00218A  0E00               	movlw	0
  4572   00218C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4573   00218E  5006               	movf	(___flmul@a+1)^0,w,c
  4574   002190  0203               	mulwf	(___flmul@b+2)^0,c
  4575   002192  CFF3 F018          	movff	prodl,___flmul@temp
  4576   002196  CFF4 F019          	movff	prodh,___flmul@temp+1
  4577   00219A  5018               	movf	___flmul@temp^0,w,c
  4578   00219C  2614               	addwf	___flmul@prod^0,f,c
  4579   00219E  5019               	movf	(___flmul@temp+1)^0,w,c
  4580   0021A0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4581   0021A2  0E00               	movlw	0
  4582   0021A4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4583   0021A6  0E00               	movlw	0
  4584   0021A8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4585   0021AA  5007               	movf	(___flmul@a+2)^0,w,c
  4586   0021AC  0203               	mulwf	(___flmul@b+2)^0,c
  4587   0021AE  CFF3 F018          	movff	prodl,___flmul@temp
  4588   0021B2  CFF4 F019          	movff	prodh,___flmul@temp+1
  4589   0021B6  5018               	movf	___flmul@temp^0,w,c
  4590   0021B8  6E09               	movwf	??___flmul^0,c
  4591   0021BA  5019               	movf	(___flmul@temp+1)^0,w,c
  4592   0021BC  6E0A               	movwf	(??___flmul+1)^0,c
  4593   0021BE  6A0B               	clrf	(??___flmul+2)^0,c
  4594   0021C0  6A0C               	clrf	(??___flmul+3)^0,c
  4595   0021C2  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  4596   0021C6  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  4597   0021CA  C009  F00A         	movff	??___flmul,??___flmul+1
  4598   0021CE  6A09               	clrf	??___flmul^0,c
  4599   0021D0  5009               	movf	??___flmul^0,w,c
  4600   0021D2  2614               	addwf	___flmul@prod^0,f,c
  4601   0021D4  500A               	movf	(??___flmul+1)^0,w,c
  4602   0021D6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4603   0021D8  500B               	movf	(??___flmul+2)^0,w,c
  4604   0021DA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4605   0021DC  500C               	movf	(??___flmul+3)^0,w,c
  4606   0021DE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4607   0021E0  C00E  F009         	movff	___flmul@grs,??___flmul
  4608   0021E4  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  4609   0021E8  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  4610   0021EC  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  4611   0021F0  0E19               	movlw	25
  4612   0021F2  EF00  F011         	goto	u3290
  4613   0021F6                     u3295:
  4614   0021F6  90D8               	bcf	status,0,c
  4615   0021F8  320C               	rrcf	(??___flmul+3)^0,f,c
  4616   0021FA  320B               	rrcf	(??___flmul+2)^0,f,c
  4617   0021FC  320A               	rrcf	(??___flmul+1)^0,f,c
  4618   0021FE  3209               	rrcf	??___flmul^0,f,c
  4619   002200                     u3290:
  4620   002200  2EE8               	decfsz	wreg,f,c
  4621   002202  EFFB  F010         	goto	u3295
  4622   002206  5009               	movf	??___flmul^0,w,c
  4623   002208  2614               	addwf	___flmul@prod^0,f,c
  4624   00220A  500A               	movf	(??___flmul+1)^0,w,c
  4625   00220C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4626   00220E  500B               	movf	(??___flmul+2)^0,w,c
  4627   002210  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4628   002212  500C               	movf	(??___flmul+3)^0,w,c
  4629   002214  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4630   002216  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  4631   00221A  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  4632   00221E  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  4633   002222  6A0E               	clrf	___flmul@grs^0,c
  4634   002224  5012               	movf	___flmul@aexp^0,w,c
  4635   002226  C013  F009         	movff	___flmul@bexp,??___flmul
  4636   00222A  6A0A               	clrf	(??___flmul+1)^0,c
  4637   00222C  2609               	addwf	??___flmul^0,f,c
  4638   00222E  0E00               	movlw	0
  4639   002230  220A               	addwfc	(??___flmul+1)^0,f,c
  4640   002232  0E82               	movlw	130
  4641   002234  2409               	addwf	??___flmul^0,w,c
  4642   002236  6E18               	movwf	___flmul@temp^0,c
  4643   002238  0EFF               	movlw	255
  4644   00223A  200A               	addwfc	(??___flmul+1)^0,w,c
  4645   00223C  6E19               	movwf	(___flmul@temp+1)^0,c
  4646   00223E  EF36  F011         	goto	l3618
  4647   002242                     l3612:
  4648   002242  90D8               	bcf	status,0,c
  4649   002244  3614               	rlcf	___flmul@prod^0,f,c
  4650   002246  3615               	rlcf	(___flmul@prod+1)^0,f,c
  4651   002248  3616               	rlcf	(___flmul@prod+2)^0,f,c
  4652   00224A  3617               	rlcf	(___flmul@prod+3)^0,f,c
  4653   00224C  AE11               	btfss	(___flmul@grs+3)^0,7,c
  4654   00224E  EF2B  F011         	goto	u3301
  4655   002252  EF2D  F011         	goto	u3300
  4656   002256                     u3301:
  4657   002256  EF2E  F011         	goto	l1119
  4658   00225A                     u3300:
  4659   00225A  8014               	bsf	___flmul@prod^0,0,c
  4660   00225C                     l1119:
  4661   00225C  90D8               	bcf	status,0,c
  4662   00225E  360E               	rlcf	___flmul@grs^0,f,c
  4663   002260  360F               	rlcf	(___flmul@grs+1)^0,f,c
  4664   002262  3610               	rlcf	(___flmul@grs+2)^0,f,c
  4665   002264  3611               	rlcf	(___flmul@grs+3)^0,f,c
  4666   002266  0618               	decf	___flmul@temp^0,f,c
  4667   002268  A0D8               	btfss	status,0,c
  4668   00226A  0619               	decf	(___flmul@temp+1)^0,f,c
  4669   00226C                     l3618:
  4670   00226C  AE16               	btfss	(___flmul@prod+2)^0,7,c
  4671   00226E  EF3B  F011         	goto	u3311
  4672   002272  EF3D  F011         	goto	u3310
  4673   002276                     u3311:
  4674   002276  EF21  F011         	goto	l3612
  4675   00227A                     u3310:
  4676   00227A  0E00               	movlw	0
  4677   00227C  6E12               	movwf	___flmul@aexp^0,c
  4678   00227E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  4679   002280  EF44  F011         	goto	u3321
  4680   002284  EF46  F011         	goto	u3320
  4681   002288                     u3321:
  4682   002288  EF6A  F011         	goto	l1121
  4683   00228C                     u3320:
  4684   00228C  0EFF               	movlw	255
  4685   00228E  140E               	andwf	___flmul@grs^0,w,c
  4686   002290  6E09               	movwf	??___flmul^0,c
  4687   002292  0EFF               	movlw	255
  4688   002294  140F               	andwf	(___flmul@grs+1)^0,w,c
  4689   002296  6E0A               	movwf	(??___flmul+1)^0,c
  4690   002298  0EFF               	movlw	255
  4691   00229A  1410               	andwf	(___flmul@grs+2)^0,w,c
  4692   00229C  6E0B               	movwf	(??___flmul+2)^0,c
  4693   00229E  0E7F               	movlw	127
  4694   0022A0  1411               	andwf	(___flmul@grs+3)^0,w,c
  4695   0022A2  6E0C               	movwf	(??___flmul+3)^0,c
  4696   0022A4  5009               	movf	??___flmul^0,w,c
  4697   0022A6  100A               	iorwf	(??___flmul+1)^0,w,c
  4698   0022A8  100B               	iorwf	(??___flmul+2)^0,w,c
  4699   0022AA  100C               	iorwf	(??___flmul+3)^0,w,c
  4700   0022AC  B4D8               	btfsc	status,2,c
  4701   0022AE  EF5B  F011         	goto	u3331
  4702   0022B2  EF5D  F011         	goto	u3330
  4703   0022B6                     u3331:
  4704   0022B6  EF61  F011         	goto	l1122
  4705   0022BA                     u3330:
  4706   0022BA                     l3626:
  4707   0022BA  0E01               	movlw	1
  4708   0022BC  6E12               	movwf	___flmul@aexp^0,c
  4709   0022BE  EF6A  F011         	goto	l1121
  4710   0022C2                     l1122:
  4711   0022C2  A014               	btfss	___flmul@prod^0,0,c
  4712   0022C4  EF66  F011         	goto	u3341
  4713   0022C8  EF68  F011         	goto	u3340
  4714   0022CC                     u3341:
  4715   0022CC  EF6A  F011         	goto	l1121
  4716   0022D0                     u3340:
  4717   0022D0  EF5D  F011         	goto	l3626
  4718   0022D4                     l1121:
  4719   0022D4  5012               	movf	___flmul@aexp^0,w,c
  4720   0022D6  B4D8               	btfsc	status,2,c
  4721   0022D8  EF70  F011         	goto	u3351
  4722   0022DC  EF72  F011         	goto	u3350
  4723   0022E0                     u3351:
  4724   0022E0  EF96  F011         	goto	l3638
  4725   0022E4                     u3350:
  4726   0022E4  0E01               	movlw	1
  4727   0022E6  2614               	addwf	___flmul@prod^0,f,c
  4728   0022E8  0E00               	movlw	0
  4729   0022EA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  4730   0022EC  2216               	addwfc	(___flmul@prod+2)^0,f,c
  4731   0022EE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  4732   0022F0  A017               	btfss	(___flmul@prod+3)^0,0,c
  4733   0022F2  EF7D  F011         	goto	u3361
  4734   0022F6  EF7F  F011         	goto	u3360
  4735   0022FA                     u3361:
  4736   0022FA  EF96  F011         	goto	l3638
  4737   0022FE                     u3360:
  4738   0022FE  C014  F009         	movff	___flmul@prod,??___flmul
  4739   002302  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  4740   002306  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  4741   00230A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  4742   00230E  340C               	rlcf	(??___flmul+3)^0,w,c
  4743   002310  320C               	rrcf	(??___flmul+3)^0,f,c
  4744   002312  320B               	rrcf	(??___flmul+2)^0,f,c
  4745   002314  320A               	rrcf	(??___flmul+1)^0,f,c
  4746   002316  3209               	rrcf	??___flmul^0,f,c
  4747   002318  C009  F014         	movff	??___flmul,___flmul@prod
  4748   00231C  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  4749   002320  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  4750   002324  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  4751   002328  4A18               	infsnz	___flmul@temp^0,f,c
  4752   00232A  2A19               	incf	(___flmul@temp+1)^0,f,c
  4753   00232C                     l3638:
  4754   00232C  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  4755   00232E  EFA1  F011         	goto	u3371
  4756   002332  5019               	movf	(___flmul@temp+1)^0,w,c
  4757   002334  E108               	bnz	u3370
  4758   002336  2818               	incf	___flmul@temp^0,w,c
  4759   002338  A0D8               	btfss	status,0,c
  4760   00233A  EFA1  F011         	goto	u3371
  4761   00233E  EFA3  F011         	goto	u3370
  4762   002342                     u3371:
  4763   002342  EFAD  F011         	goto	l3642
  4764   002346                     u3370:
  4765   002346  0E00               	movlw	0
  4766   002348  6E14               	movwf	___flmul@prod^0,c
  4767   00234A  0E00               	movlw	0
  4768   00234C  6E15               	movwf	(___flmul@prod+1)^0,c
  4769   00234E  0E80               	movlw	128
  4770   002350  6E16               	movwf	(___flmul@prod+2)^0,c
  4771   002352  0E7F               	movlw	127
  4772   002354  6E17               	movwf	(___flmul@prod+3)^0,c
  4773   002356  EFDB  F011         	goto	l3654
  4774   00235A                     l3642:
  4775   00235A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  4776   00235C  EFBA  F011         	goto	u3380
  4777   002360  5019               	movf	(___flmul@temp+1)^0,w,c
  4778   002362  E106               	bnz	u3381
  4779   002364  0418               	decf	___flmul@temp^0,w,c
  4780   002366  B0D8               	btfsc	status,0,c
  4781   002368  EFB8  F011         	goto	u3381
  4782   00236C  EFBA  F011         	goto	u3380
  4783   002370                     u3381:
  4784   002370  EFC6  F011         	goto	l1129
  4785   002374                     u3380:
  4786   002374  0E00               	movlw	0
  4787   002376  6E14               	movwf	___flmul@prod^0,c
  4788   002378  0E00               	movlw	0
  4789   00237A  6E15               	movwf	(___flmul@prod+1)^0,c
  4790   00237C  0E00               	movlw	0
  4791   00237E  6E16               	movwf	(___flmul@prod+2)^0,c
  4792   002380  0E00               	movlw	0
  4793   002382  6E17               	movwf	(___flmul@prod+3)^0,c
  4794   002384  0E00               	movlw	0
  4795   002386  6E0D               	movwf	___flmul@sign^0,c
  4796   002388  EFDB  F011         	goto	l3654
  4797   00238C                     l1129:
  4798   00238C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  4799   002390  0EFF               	movlw	255
  4800   002392  1614               	andwf	___flmul@prod^0,f,c
  4801   002394  0EFF               	movlw	255
  4802   002396  1615               	andwf	(___flmul@prod+1)^0,f,c
  4803   002398  0E7F               	movlw	127
  4804   00239A  1616               	andwf	(___flmul@prod+2)^0,f,c
  4805   00239C  0E00               	movlw	0
  4806   00239E  1617               	andwf	(___flmul@prod+3)^0,f,c
  4807   0023A0  A013               	btfss	___flmul@bexp^0,0,c
  4808   0023A2  EFD5  F011         	goto	u3391
  4809   0023A6  EFD7  F011         	goto	u3390
  4810   0023AA                     u3391:
  4811   0023AA  EFD8  F011         	goto	l3652
  4812   0023AE                     u3390:
  4813   0023AE  8E16               	bsf	(___flmul@prod+2)^0,7,c
  4814   0023B0                     l3652:
  4815   0023B0  90D8               	bcf	status,0,c
  4816   0023B2  3013               	rrcf	___flmul@bexp^0,w,c
  4817   0023B4  6E17               	movwf	(___flmul@prod+3)^0,c
  4818   0023B6                     l3654:
  4819   0023B6  500D               	movf	___flmul@sign^0,w,c
  4820   0023B8  1217               	iorwf	(___flmul@prod+3)^0,f,c
  4821   0023BA  C014  F001         	movff	___flmul@prod,?___flmul
  4822   0023BE  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  4823   0023C2  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  4824   0023C6  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  4825   0023CA                     l1116:
  4826   0023CA  0012               	return		;funcret
  4827   0023CC                     __end_of___flmul:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function ___flge *****************
  4831 ;; Defined at:
  4832 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  ff1             4    0[COMRAM] unsigned char 
  4835 ;;  ff2             4    4[COMRAM] unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;		None               void
  4840 ;; Registers used:
  4841 ;;		wreg, status,2, status,0
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;Total ram usage:       12 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_convert_rgb2hue
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text12
  4861   00315A                     __ptext12:
  4862                           	callstack 0
  4863   00315A                     ___flge:
  4864                           	callstack 28
  4865   00315A  0E00               	movlw	0
  4866   00315C  1401               	andwf	___flge@ff1^0,w,c
  4867   00315E  6E09               	movwf	??___flge^0,c
  4868   003160  0E00               	movlw	0
  4869   003162  1402               	andwf	(___flge@ff1+1)^0,w,c
  4870   003164  6E0A               	movwf	(??___flge+1)^0,c
  4871   003166  0E80               	movlw	128
  4872   003168  1403               	andwf	(___flge@ff1+2)^0,w,c
  4873   00316A  6E0B               	movwf	(??___flge+2)^0,c
  4874   00316C  0E7F               	movlw	127
  4875   00316E  1404               	andwf	(___flge@ff1+3)^0,w,c
  4876   003170  6E0C               	movwf	(??___flge+3)^0,c
  4877   003172  5009               	movf	??___flge^0,w,c
  4878   003174  100A               	iorwf	(??___flge+1)^0,w,c
  4879   003176  100B               	iorwf	(??___flge+2)^0,w,c
  4880   003178  100C               	iorwf	(??___flge+3)^0,w,c
  4881   00317A  A4D8               	btfss	status,2,c
  4882   00317C  EFC2  F018         	goto	u3431
  4883   003180  EFC4  F018         	goto	u3430
  4884   003184                     u3431:
  4885   003184  EFCC  F018         	goto	l3686
  4886   003188                     u3430:
  4887   003188  0E00               	movlw	0
  4888   00318A  6E01               	movwf	___flge@ff1^0,c
  4889   00318C  0E00               	movlw	0
  4890   00318E  6E02               	movwf	(___flge@ff1+1)^0,c
  4891   003190  0E00               	movlw	0
  4892   003192  6E03               	movwf	(___flge@ff1+2)^0,c
  4893   003194  0E00               	movlw	0
  4894   003196  6E04               	movwf	(___flge@ff1+3)^0,c
  4895   003198                     l3686:
  4896   003198  0E00               	movlw	0
  4897   00319A  1405               	andwf	___flge@ff2^0,w,c
  4898   00319C  6E09               	movwf	??___flge^0,c
  4899   00319E  0E00               	movlw	0
  4900   0031A0  1406               	andwf	(___flge@ff2+1)^0,w,c
  4901   0031A2  6E0A               	movwf	(??___flge+1)^0,c
  4902   0031A4  0E80               	movlw	128
  4903   0031A6  1407               	andwf	(___flge@ff2+2)^0,w,c
  4904   0031A8  6E0B               	movwf	(??___flge+2)^0,c
  4905   0031AA  0E7F               	movlw	127
  4906   0031AC  1408               	andwf	(___flge@ff2+3)^0,w,c
  4907   0031AE  6E0C               	movwf	(??___flge+3)^0,c
  4908   0031B0  5009               	movf	??___flge^0,w,c
  4909   0031B2  100A               	iorwf	(??___flge+1)^0,w,c
  4910   0031B4  100B               	iorwf	(??___flge+2)^0,w,c
  4911   0031B6  100C               	iorwf	(??___flge+3)^0,w,c
  4912   0031B8  A4D8               	btfss	status,2,c
  4913   0031BA  EFE1  F018         	goto	u3441
  4914   0031BE  EFE3  F018         	goto	u3440
  4915   0031C2                     u3441:
  4916   0031C2  EFEB  F018         	goto	l3690
  4917   0031C6                     u3440:
  4918   0031C6  0E00               	movlw	0
  4919   0031C8  6E05               	movwf	___flge@ff2^0,c
  4920   0031CA  0E00               	movlw	0
  4921   0031CC  6E06               	movwf	(___flge@ff2+1)^0,c
  4922   0031CE  0E00               	movlw	0
  4923   0031D0  6E07               	movwf	(___flge@ff2+2)^0,c
  4924   0031D2  0E00               	movlw	0
  4925   0031D4  6E08               	movwf	(___flge@ff2+3)^0,c
  4926   0031D6                     l3690:
  4927   0031D6  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4928   0031D8  EFF0  F018         	goto	u3451
  4929   0031DC  EFF2  F018         	goto	u3450
  4930   0031E0                     u3451:
  4931   0031E0  EFFB  F018         	goto	l3694
  4932   0031E4                     u3450:
  4933   0031E4  6C01               	negf	___flge@ff1^0,c
  4934   0031E6  1E02               	comf	(___flge@ff1+1)^0,f,c
  4935   0031E8  B0D8               	btfsc	status,0,c
  4936   0031EA  2A02               	incf	(___flge@ff1+1)^0,f,c
  4937   0031EC  1E03               	comf	(___flge@ff1+2)^0,f,c
  4938   0031EE  B0D8               	btfsc	status,0,c
  4939   0031F0  2A03               	incf	(___flge@ff1+2)^0,f,c
  4940   0031F2  0E80               	movlw	128
  4941   0031F4  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4942   0031F6                     l3694:
  4943   0031F6  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4944   0031F8  EF00  F019         	goto	u3461
  4945   0031FC  EF02  F019         	goto	u3460
  4946   003200                     u3461:
  4947   003200  EF0B  F019         	goto	l763
  4948   003204                     u3460:
  4949   003204  6C05               	negf	___flge@ff2^0,c
  4950   003206  1E06               	comf	(___flge@ff2+1)^0,f,c
  4951   003208  B0D8               	btfsc	status,0,c
  4952   00320A  2A06               	incf	(___flge@ff2+1)^0,f,c
  4953   00320C  1E07               	comf	(___flge@ff2+2)^0,f,c
  4954   00320E  B0D8               	btfsc	status,0,c
  4955   003210  2A07               	incf	(___flge@ff2+2)^0,f,c
  4956   003212  0E80               	movlw	128
  4957   003214  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4958   003216                     l763:
  4959   003216  0E00               	movlw	0
  4960   003218  1A01               	xorwf	___flge@ff1^0,f,c
  4961   00321A  0E00               	movlw	0
  4962   00321C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4963   00321E  0E00               	movlw	0
  4964   003220  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4965   003222  0E80               	movlw	128
  4966   003224  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4967   003226  0E00               	movlw	0
  4968   003228  1A05               	xorwf	___flge@ff2^0,f,c
  4969   00322A  0E00               	movlw	0
  4970   00322C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4971   00322E  0E00               	movlw	0
  4972   003230  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4973   003232  0E80               	movlw	128
  4974   003234  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4975   003236  5005               	movf	___flge@ff2^0,w,c
  4976   003238  5C01               	subwf	___flge@ff1^0,w,c
  4977   00323A  5006               	movf	(___flge@ff2+1)^0,w,c
  4978   00323C  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4979   00323E  5007               	movf	(___flge@ff2+2)^0,w,c
  4980   003240  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4981   003242  5008               	movf	(___flge@ff2+3)^0,w,c
  4982   003244  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4983   003246  B0D8               	btfsc	status,0,c
  4984   003248  EF28  F019         	goto	u3471
  4985   00324C  EF2A  F019         	goto	u3470
  4986   003250                     u3471:
  4987   003250  EF2D  F019         	goto	l3700
  4988   003254                     u3470:
  4989   003254  90D8               	bcf	status,0,c
  4990   003256  EF2E  F019         	goto	l768
  4991   00325A                     l3700:
  4992   00325A  80D8               	bsf	status,0,c
  4993   00325C                     l768:
  4994   00325C  0012               	return		;funcret
  4995   00325E                     __end_of___flge:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function ___fleq *****************
  4999 ;; Defined at:
  5000 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  ff1             4    0[COMRAM] unsigned char 
  5003 ;;  ff2             4    4[COMRAM] unsigned char 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;		None               void
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5015 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;Total ram usage:       12 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		_convert_rgb2hue
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text13
  5029   0036E2                     __ptext13:
  5030                           	callstack 0
  5031   0036E2                     ___fleq:
  5032                           	callstack 28
  5033   0036E2  0E00               	movlw	0
  5034   0036E4  1401               	andwf	___fleq@ff1^0,w,c
  5035   0036E6  6E09               	movwf	??___fleq^0,c
  5036   0036E8  0E00               	movlw	0
  5037   0036EA  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5038   0036EC  6E0A               	movwf	(??___fleq+1)^0,c
  5039   0036EE  0E80               	movlw	128
  5040   0036F0  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5041   0036F2  6E0B               	movwf	(??___fleq+2)^0,c
  5042   0036F4  0E7F               	movlw	127
  5043   0036F6  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5044   0036F8  6E0C               	movwf	(??___fleq+3)^0,c
  5045   0036FA  5009               	movf	??___fleq^0,w,c
  5046   0036FC  100A               	iorwf	(??___fleq+1)^0,w,c
  5047   0036FE  100B               	iorwf	(??___fleq+2)^0,w,c
  5048   003700  100C               	iorwf	(??___fleq+3)^0,w,c
  5049   003702  A4D8               	btfss	status,2,c
  5050   003704  EF86  F01B         	goto	u3401
  5051   003708  EF88  F01B         	goto	u3400
  5052   00370C                     u3401:
  5053   00370C  EF90  F01B         	goto	l3670
  5054   003710                     u3400:
  5055   003710  0E00               	movlw	0
  5056   003712  6E01               	movwf	___fleq@ff1^0,c
  5057   003714  0E00               	movlw	0
  5058   003716  6E02               	movwf	(___fleq@ff1+1)^0,c
  5059   003718  0E00               	movlw	0
  5060   00371A  6E03               	movwf	(___fleq@ff1+2)^0,c
  5061   00371C  0E00               	movlw	0
  5062   00371E  6E04               	movwf	(___fleq@ff1+3)^0,c
  5063   003720                     l3670:
  5064   003720  0E00               	movlw	0
  5065   003722  1405               	andwf	___fleq@ff2^0,w,c
  5066   003724  6E09               	movwf	??___fleq^0,c
  5067   003726  0E00               	movlw	0
  5068   003728  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5069   00372A  6E0A               	movwf	(??___fleq+1)^0,c
  5070   00372C  0E80               	movlw	128
  5071   00372E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5072   003730  6E0B               	movwf	(??___fleq+2)^0,c
  5073   003732  0E7F               	movlw	127
  5074   003734  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5075   003736  6E0C               	movwf	(??___fleq+3)^0,c
  5076   003738  5009               	movf	??___fleq^0,w,c
  5077   00373A  100A               	iorwf	(??___fleq+1)^0,w,c
  5078   00373C  100B               	iorwf	(??___fleq+2)^0,w,c
  5079   00373E  100C               	iorwf	(??___fleq+3)^0,w,c
  5080   003740  A4D8               	btfss	status,2,c
  5081   003742  EFA5  F01B         	goto	u3411
  5082   003746  EFA7  F01B         	goto	u3410
  5083   00374A                     u3411:
  5084   00374A  EFAF  F01B         	goto	l3674
  5085   00374E                     u3410:
  5086   00374E  0E00               	movlw	0
  5087   003750  6E05               	movwf	___fleq@ff2^0,c
  5088   003752  0E00               	movlw	0
  5089   003754  6E06               	movwf	(___fleq@ff2+1)^0,c
  5090   003756  0E00               	movlw	0
  5091   003758  6E07               	movwf	(___fleq@ff2+2)^0,c
  5092   00375A  0E00               	movlw	0
  5093   00375C  6E08               	movwf	(___fleq@ff2+3)^0,c
  5094   00375E                     l3674:
  5095   00375E  5005               	movf	___fleq@ff2^0,w,c
  5096   003760  1801               	xorwf	___fleq@ff1^0,w,c
  5097   003762  E10F               	bnz	u3420
  5098   003764  5006               	movf	(___fleq@ff2+1)^0,w,c
  5099   003766  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5100   003768  E10C               	bnz	u3420
  5101   00376A  5007               	movf	(___fleq@ff2+2)^0,w,c
  5102   00376C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5103   00376E  E109               	bnz	u3420
  5104   003770  5008               	movf	(___fleq@ff2+3)^0,w,c
  5105   003772  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5106   003774  B4D8               	btfsc	status,2,c
  5107   003776  EFBF  F01B         	goto	u3421
  5108   00377A  EFC1  F01B         	goto	u3420
  5109   00377E                     u3421:
  5110   00377E  EFC4  F01B         	goto	l3678
  5111   003782                     u3420:
  5112   003782  90D8               	bcf	status,0,c
  5113   003784  EFC5  F01B         	goto	l757
  5114   003788                     l3678:
  5115   003788  80D8               	bsf	status,0,c
  5116   00378A                     l757:
  5117   00378A  0012               	return		;funcret
  5118   00378C                     __end_of___fleq:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function ___fldiv *****************
  5122 ;; Defined at:
  5123 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  b               4   24[COMRAM] unsigned char 
  5126 ;;  a               4   28[COMRAM] unsigned char 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  grs             4   43[COMRAM] unsigned long 
  5129 ;;  rem             4   36[COMRAM] unsigned long 
  5130 ;;  new_exp         2   41[COMRAM] short 
  5131 ;;  aexp            1   48[COMRAM] unsigned char 
  5132 ;;  bexp            1   47[COMRAM] unsigned char 
  5133 ;;  sign            1   40[COMRAM] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  4   24[COMRAM] unsigned char 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5143 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5144 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5145 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;Total ram usage:       25 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_convert_rgb2hue
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text14
  5157   0023CC                     __ptext14:
  5158                           	callstack 0
  5159   0023CC                     ___fldiv:
  5160                           	callstack 28
  5161   0023CC  501C               	movf	(___fldiv@b+3)^0,w,c
  5162   0023CE  0B80               	andlw	128
  5163   0023D0  6E29               	movwf	___fldiv@sign^0,c
  5164   0023D2  501C               	movf	(___fldiv@b+3)^0,w,c
  5165   0023D4  241C               	addwf	(___fldiv@b+3)^0,w,c
  5166   0023D6  6E30               	movwf	___fldiv@bexp^0,c
  5167   0023D8  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  5168   0023DA  EFF1  F011         	goto	u2981
  5169   0023DE  EFF3  F011         	goto	u2980
  5170   0023E2                     u2981:
  5171   0023E2  EFF4  F011         	goto	l3398
  5172   0023E6                     u2980:
  5173   0023E6  8030               	bsf	___fldiv@bexp^0,0,c
  5174   0023E8                     l3398:
  5175   0023E8  5030               	movf	___fldiv@bexp^0,w,c
  5176   0023EA  B4D8               	btfsc	status,2,c
  5177   0023EC  EFFA  F011         	goto	u2991
  5178   0023F0  EFFC  F011         	goto	u2990
  5179   0023F4                     u2991:
  5180   0023F4  EF11  F012         	goto	l3408
  5181   0023F8                     u2990:
  5182   0023F8  2830               	incf	___fldiv@bexp^0,w,c
  5183   0023FA  A4D8               	btfss	status,2,c
  5184   0023FC  EF02  F012         	goto	u3001
  5185   002400  EF04  F012         	goto	u3000
  5186   002404                     u3001:
  5187   002404  EF0C  F012         	goto	l3404
  5188   002408                     u3000:
  5189   002408  0E00               	movlw	0
  5190   00240A  6E19               	movwf	___fldiv@b^0,c
  5191   00240C  0E00               	movlw	0
  5192   00240E  6E1A               	movwf	(___fldiv@b+1)^0,c
  5193   002410  0E00               	movlw	0
  5194   002412  6E1B               	movwf	(___fldiv@b+2)^0,c
  5195   002414  0E00               	movlw	0
  5196   002416  6E1C               	movwf	(___fldiv@b+3)^0,c
  5197   002418                     l3404:
  5198   002418  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  5199   00241A  0E00               	movlw	0
  5200   00241C  6E1C               	movwf	(___fldiv@b+3)^0,c
  5201   00241E  EF19  F012         	goto	l3410
  5202   002422                     l3408:
  5203   002422  0E00               	movlw	0
  5204   002424  6E19               	movwf	___fldiv@b^0,c
  5205   002426  0E00               	movlw	0
  5206   002428  6E1A               	movwf	(___fldiv@b+1)^0,c
  5207   00242A  0E00               	movlw	0
  5208   00242C  6E1B               	movwf	(___fldiv@b+2)^0,c
  5209   00242E  0E00               	movlw	0
  5210   002430  6E1C               	movwf	(___fldiv@b+3)^0,c
  5211   002432                     l3410:
  5212   002432  5020               	movf	(___fldiv@a+3)^0,w,c
  5213   002434  0B80               	andlw	128
  5214   002436  1A29               	xorwf	___fldiv@sign^0,f,c
  5215   002438  5020               	movf	(___fldiv@a+3)^0,w,c
  5216   00243A  2420               	addwf	(___fldiv@a+3)^0,w,c
  5217   00243C  6E31               	movwf	___fldiv@aexp^0,c
  5218   00243E  AE1F               	btfss	(___fldiv@a+2)^0,7,c
  5219   002440  EF24  F012         	goto	u3011
  5220   002444  EF26  F012         	goto	u3010
  5221   002448                     u3011:
  5222   002448  EF27  F012         	goto	l3418
  5223   00244C                     u3010:
  5224   00244C  8031               	bsf	___fldiv@aexp^0,0,c
  5225   00244E                     l3418:
  5226   00244E  5031               	movf	___fldiv@aexp^0,w,c
  5227   002450  B4D8               	btfsc	status,2,c
  5228   002452  EF2D  F012         	goto	u3021
  5229   002456  EF2F  F012         	goto	u3020
  5230   00245A                     u3021:
  5231   00245A  EF44  F012         	goto	l3428
  5232   00245E                     u3020:
  5233   00245E  2831               	incf	___fldiv@aexp^0,w,c
  5234   002460  A4D8               	btfss	status,2,c
  5235   002462  EF35  F012         	goto	u3031
  5236   002466  EF37  F012         	goto	u3030
  5237   00246A                     u3031:
  5238   00246A  EF3F  F012         	goto	l3424
  5239   00246E                     u3030:
  5240   00246E  0E00               	movlw	0
  5241   002470  6E1D               	movwf	___fldiv@a^0,c
  5242   002472  0E00               	movlw	0
  5243   002474  6E1E               	movwf	(___fldiv@a+1)^0,c
  5244   002476  0E00               	movlw	0
  5245   002478  6E1F               	movwf	(___fldiv@a+2)^0,c
  5246   00247A  0E00               	movlw	0
  5247   00247C  6E20               	movwf	(___fldiv@a+3)^0,c
  5248   00247E                     l3424:
  5249   00247E  8E1F               	bsf	(___fldiv@a+2)^0,7,c
  5250   002480  0E00               	movlw	0
  5251   002482  6E20               	movwf	(___fldiv@a+3)^0,c
  5252   002484  EF4C  F012         	goto	l3430
  5253   002488                     l3428:
  5254   002488  0E00               	movlw	0
  5255   00248A  6E1D               	movwf	___fldiv@a^0,c
  5256   00248C  0E00               	movlw	0
  5257   00248E  6E1E               	movwf	(___fldiv@a+1)^0,c
  5258   002490  0E00               	movlw	0
  5259   002492  6E1F               	movwf	(___fldiv@a+2)^0,c
  5260   002494  0E00               	movlw	0
  5261   002496  6E20               	movwf	(___fldiv@a+3)^0,c
  5262   002498                     l3430:
  5263   002498  501D               	movf	___fldiv@a^0,w,c
  5264   00249A  101E               	iorwf	(___fldiv@a+1)^0,w,c
  5265   00249C  101F               	iorwf	(___fldiv@a+2)^0,w,c
  5266   00249E  1020               	iorwf	(___fldiv@a+3)^0,w,c
  5267   0024A0  A4D8               	btfss	status,2,c
  5268   0024A2  EF55  F012         	goto	u3041
  5269   0024A6  EF57  F012         	goto	u3040
  5270   0024AA                     u3041:
  5271   0024AA  EF6F  F012         	goto	l3442
  5272   0024AE                     u3040:
  5273   0024AE  0E00               	movlw	0
  5274   0024B0  6E19               	movwf	___fldiv@b^0,c
  5275   0024B2  0E00               	movlw	0
  5276   0024B4  6E1A               	movwf	(___fldiv@b+1)^0,c
  5277   0024B6  0E00               	movlw	0
  5278   0024B8  6E1B               	movwf	(___fldiv@b+2)^0,c
  5279   0024BA  0E00               	movlw	0
  5280   0024BC  6E1C               	movwf	(___fldiv@b+3)^0,c
  5281   0024BE  0E80               	movlw	128
  5282   0024C0  121B               	iorwf	(___fldiv@b+2)^0,f,c
  5283   0024C2  0E7F               	movlw	127
  5284   0024C4  121C               	iorwf	(___fldiv@b+3)^0,f,c
  5285   0024C6                     l3436:
  5286   0024C6  5029               	movf	___fldiv@sign^0,w,c
  5287   0024C8  121C               	iorwf	(___fldiv@b+3)^0,f,c
  5288   0024CA  C019  F019         	movff	___fldiv@b,?___fldiv
  5289   0024CE  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
  5290   0024D2  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
  5291   0024D6  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
  5292   0024DA  EFB2  F013         	goto	l1080
  5293   0024DE                     l3442:
  5294   0024DE  5030               	movf	___fldiv@bexp^0,w,c
  5295   0024E0  A4D8               	btfss	status,2,c
  5296   0024E2  EF75  F012         	goto	u3051
  5297   0024E6  EF77  F012         	goto	u3050
  5298   0024EA                     u3051:
  5299   0024EA  EF81  F012         	goto	l3450
  5300   0024EE                     u3050:
  5301   0024EE  0E00               	movlw	0
  5302   0024F0  6E19               	movwf	?___fldiv^0,c
  5303   0024F2  0E00               	movlw	0
  5304   0024F4  6E1A               	movwf	(?___fldiv+1)^0,c
  5305   0024F6  0E00               	movlw	0
  5306   0024F8  6E1B               	movwf	(?___fldiv+2)^0,c
  5307   0024FA  0E00               	movlw	0
  5308   0024FC  6E1C               	movwf	(?___fldiv+3)^0,c
  5309   0024FE  EFB2  F013         	goto	l1080
  5310   002502                     l3450:
  5311   002502  5031               	movf	___fldiv@aexp^0,w,c
  5312   002504  C030  F021         	movff	___fldiv@bexp,??___fldiv
  5313   002508  6A22               	clrf	(??___fldiv+1)^0,c
  5314   00250A  5E21               	subwf	??___fldiv^0,f,c
  5315   00250C  0E00               	movlw	0
  5316   00250E  5A22               	subwfb	(??___fldiv+1)^0,f,c
  5317   002510  0E7F               	movlw	127
  5318   002512  2421               	addwf	??___fldiv^0,w,c
  5319   002514  6E2A               	movwf	___fldiv@new_exp^0,c
  5320   002516  0E00               	movlw	0
  5321   002518  2022               	addwfc	(??___fldiv+1)^0,w,c
  5322   00251A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  5323   00251C  C019  F025         	movff	___fldiv@b,___fldiv@rem
  5324   002520  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
  5325   002524  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
  5326   002528  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
  5327   00252C  0E00               	movlw	0
  5328   00252E  6E19               	movwf	___fldiv@b^0,c
  5329   002530  0E00               	movlw	0
  5330   002532  6E1A               	movwf	(___fldiv@b+1)^0,c
  5331   002534  0E00               	movlw	0
  5332   002536  6E1B               	movwf	(___fldiv@b+2)^0,c
  5333   002538  0E00               	movlw	0
  5334   00253A  6E1C               	movwf	(___fldiv@b+3)^0,c
  5335   00253C  0E00               	movlw	0
  5336   00253E  6E2C               	movwf	___fldiv@grs^0,c
  5337   002540  0E00               	movlw	0
  5338   002542  6E2D               	movwf	(___fldiv@grs+1)^0,c
  5339   002544  0E00               	movlw	0
  5340   002546  6E2E               	movwf	(___fldiv@grs+2)^0,c
  5341   002548  0E00               	movlw	0
  5342   00254A  6E2F               	movwf	(___fldiv@grs+3)^0,c
  5343   00254C  0E00               	movlw	0
  5344   00254E  6E31               	movwf	___fldiv@aexp^0,c
  5345   002550  EFE2  F012         	goto	l1082
  5346   002554                     l3460:
  5347   002554  5031               	movf	___fldiv@aexp^0,w,c
  5348   002556  B4D8               	btfsc	status,2,c
  5349   002558  EFB0  F012         	goto	u3061
  5350   00255C  EFB2  F012         	goto	u3060
  5351   002560                     u3061:
  5352   002560  EFC9  F012         	goto	l3468
  5353   002564                     u3060:
  5354   002564  90D8               	bcf	status,0,c
  5355   002566  3625               	rlcf	___fldiv@rem^0,f,c
  5356   002568  3626               	rlcf	(___fldiv@rem+1)^0,f,c
  5357   00256A  3627               	rlcf	(___fldiv@rem+2)^0,f,c
  5358   00256C  3628               	rlcf	(___fldiv@rem+3)^0,f,c
  5359   00256E  90D8               	bcf	status,0,c
  5360   002570  3619               	rlcf	___fldiv@b^0,f,c
  5361   002572  361A               	rlcf	(___fldiv@b+1)^0,f,c
  5362   002574  361B               	rlcf	(___fldiv@b+2)^0,f,c
  5363   002576  361C               	rlcf	(___fldiv@b+3)^0,f,c
  5364   002578  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  5365   00257A  EFC1  F012         	goto	u3071
  5366   00257E  EFC3  F012         	goto	u3070
  5367   002582                     u3071:
  5368   002582  EFC4  F012         	goto	l1085
  5369   002586                     u3070:
  5370   002586  8019               	bsf	___fldiv@b^0,0,c
  5371   002588                     l1085:
  5372   002588  90D8               	bcf	status,0,c
  5373   00258A  362C               	rlcf	___fldiv@grs^0,f,c
  5374   00258C  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  5375   00258E  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  5376   002590  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  5377   002592                     l3468:
  5378   002592  501D               	movf	___fldiv@a^0,w,c
  5379   002594  5C25               	subwf	___fldiv@rem^0,w,c
  5380   002596  501E               	movf	(___fldiv@a+1)^0,w,c
  5381   002598  5826               	subwfb	(___fldiv@rem+1)^0,w,c
  5382   00259A  501F               	movf	(___fldiv@a+2)^0,w,c
  5383   00259C  5827               	subwfb	(___fldiv@rem+2)^0,w,c
  5384   00259E  5020               	movf	(___fldiv@a+3)^0,w,c
  5385   0025A0  5828               	subwfb	(___fldiv@rem+3)^0,w,c
  5386   0025A2  A0D8               	btfss	status,0,c
  5387   0025A4  EFD6  F012         	goto	u3081
  5388   0025A8  EFD8  F012         	goto	u3080
  5389   0025AC                     u3081:
  5390   0025AC  EFE1  F012         	goto	l3474
  5391   0025B0                     u3080:
  5392   0025B0  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
  5393   0025B2  501D               	movf	___fldiv@a^0,w,c
  5394   0025B4  5E25               	subwf	___fldiv@rem^0,f,c
  5395   0025B6  501E               	movf	(___fldiv@a+1)^0,w,c
  5396   0025B8  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
  5397   0025BA  501F               	movf	(___fldiv@a+2)^0,w,c
  5398   0025BC  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
  5399   0025BE  5020               	movf	(___fldiv@a+3)^0,w,c
  5400   0025C0  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
  5401   0025C2                     l3474:
  5402   0025C2  2A31               	incf	___fldiv@aexp^0,f,c
  5403   0025C4                     l1082:
  5404   0025C4  0E19               	movlw	25
  5405   0025C6  6431               	cpfsgt	___fldiv@aexp^0,c
  5406   0025C8  EFE8  F012         	goto	u3091
  5407   0025CC  EFEA  F012         	goto	u3090
  5408   0025D0                     u3091:
  5409   0025D0  EFAA  F012         	goto	l3460
  5410   0025D4                     u3090:
  5411   0025D4  5025               	movf	___fldiv@rem^0,w,c
  5412   0025D6  1026               	iorwf	(___fldiv@rem+1)^0,w,c
  5413   0025D8  1027               	iorwf	(___fldiv@rem+2)^0,w,c
  5414   0025DA  1028               	iorwf	(___fldiv@rem+3)^0,w,c
  5415   0025DC  B4D8               	btfsc	status,2,c
  5416   0025DE  EFF3  F012         	goto	u3101
  5417   0025E2  EFF5  F012         	goto	u3100
  5418   0025E6                     u3101:
  5419   0025E6  EF0D  F013         	goto	l3486
  5420   0025EA                     u3100:
  5421   0025EA  802C               	bsf	___fldiv@grs^0,0,c
  5422   0025EC  EF0D  F013         	goto	l3486
  5423   0025F0                     l3480:
  5424   0025F0  90D8               	bcf	status,0,c
  5425   0025F2  3619               	rlcf	___fldiv@b^0,f,c
  5426   0025F4  361A               	rlcf	(___fldiv@b+1)^0,f,c
  5427   0025F6  361B               	rlcf	(___fldiv@b+2)^0,f,c
  5428   0025F8  361C               	rlcf	(___fldiv@b+3)^0,f,c
  5429   0025FA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  5430   0025FC  EF02  F013         	goto	u3111
  5431   002600  EF04  F013         	goto	u3110
  5432   002604                     u3111:
  5433   002604  EF05  F013         	goto	l1091
  5434   002608                     u3110:
  5435   002608  8019               	bsf	___fldiv@b^0,0,c
  5436   00260A                     l1091:
  5437   00260A  90D8               	bcf	status,0,c
  5438   00260C  362C               	rlcf	___fldiv@grs^0,f,c
  5439   00260E  362D               	rlcf	(___fldiv@grs+1)^0,f,c
  5440   002610  362E               	rlcf	(___fldiv@grs+2)^0,f,c
  5441   002612  362F               	rlcf	(___fldiv@grs+3)^0,f,c
  5442   002614  062A               	decf	___fldiv@new_exp^0,f,c
  5443   002616  A0D8               	btfss	status,0,c
  5444   002618  062B               	decf	(___fldiv@new_exp+1)^0,f,c
  5445   00261A                     l3486:
  5446   00261A  AE1B               	btfss	(___fldiv@b+2)^0,7,c
  5447   00261C  EF12  F013         	goto	u3121
  5448   002620  EF14  F013         	goto	u3120
  5449   002624                     u3121:
  5450   002624  EFF8  F012         	goto	l3480
  5451   002628                     u3120:
  5452   002628  0E00               	movlw	0
  5453   00262A  6E31               	movwf	___fldiv@aexp^0,c
  5454   00262C  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
  5455   00262E  EF1B  F013         	goto	u3131
  5456   002632  EF1D  F013         	goto	u3130
  5457   002636                     u3131:
  5458   002636  EF41  F013         	goto	l1093
  5459   00263A                     u3130:
  5460   00263A  0EFF               	movlw	255
  5461   00263C  142C               	andwf	___fldiv@grs^0,w,c
  5462   00263E  6E21               	movwf	??___fldiv^0,c
  5463   002640  0EFF               	movlw	255
  5464   002642  142D               	andwf	(___fldiv@grs+1)^0,w,c
  5465   002644  6E22               	movwf	(??___fldiv+1)^0,c
  5466   002646  0EFF               	movlw	255
  5467   002648  142E               	andwf	(___fldiv@grs+2)^0,w,c
  5468   00264A  6E23               	movwf	(??___fldiv+2)^0,c
  5469   00264C  0E7F               	movlw	127
  5470   00264E  142F               	andwf	(___fldiv@grs+3)^0,w,c
  5471   002650  6E24               	movwf	(??___fldiv+3)^0,c
  5472   002652  5021               	movf	??___fldiv^0,w,c
  5473   002654  1022               	iorwf	(??___fldiv+1)^0,w,c
  5474   002656  1023               	iorwf	(??___fldiv+2)^0,w,c
  5475   002658  1024               	iorwf	(??___fldiv+3)^0,w,c
  5476   00265A  B4D8               	btfsc	status,2,c
  5477   00265C  EF32  F013         	goto	u3141
  5478   002660  EF34  F013         	goto	u3140
  5479   002664                     u3141:
  5480   002664  EF38  F013         	goto	l1094
  5481   002668                     u3140:
  5482   002668                     l3494:
  5483   002668  0E01               	movlw	1
  5484   00266A  6E31               	movwf	___fldiv@aexp^0,c
  5485   00266C  EF41  F013         	goto	l1093
  5486   002670                     l1094:
  5487   002670  A019               	btfss	___fldiv@b^0,0,c
  5488   002672  EF3D  F013         	goto	u3151
  5489   002676  EF3F  F013         	goto	u3150
  5490   00267A                     u3151:
  5491   00267A  EF41  F013         	goto	l1093
  5492   00267E                     u3150:
  5493   00267E  EF34  F013         	goto	l3494
  5494   002682                     l1093:
  5495   002682  5031               	movf	___fldiv@aexp^0,w,c
  5496   002684  B4D8               	btfsc	status,2,c
  5497   002686  EF47  F013         	goto	u3161
  5498   00268A  EF49  F013         	goto	u3160
  5499   00268E                     u3161:
  5500   00268E  EF6D  F013         	goto	l3506
  5501   002692                     u3160:
  5502   002692  0E01               	movlw	1
  5503   002694  2619               	addwf	___fldiv@b^0,f,c
  5504   002696  0E00               	movlw	0
  5505   002698  221A               	addwfc	(___fldiv@b+1)^0,f,c
  5506   00269A  221B               	addwfc	(___fldiv@b+2)^0,f,c
  5507   00269C  221C               	addwfc	(___fldiv@b+3)^0,f,c
  5508   00269E  A01C               	btfss	(___fldiv@b+3)^0,0,c
  5509   0026A0  EF54  F013         	goto	u3171
  5510   0026A4  EF56  F013         	goto	u3170
  5511   0026A8                     u3171:
  5512   0026A8  EF6D  F013         	goto	l3506
  5513   0026AC                     u3170:
  5514   0026AC  C019  F021         	movff	___fldiv@b,??___fldiv
  5515   0026B0  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
  5516   0026B4  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
  5517   0026B8  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
  5518   0026BC  3424               	rlcf	(??___fldiv+3)^0,w,c
  5519   0026BE  3224               	rrcf	(??___fldiv+3)^0,f,c
  5520   0026C0  3223               	rrcf	(??___fldiv+2)^0,f,c
  5521   0026C2  3222               	rrcf	(??___fldiv+1)^0,f,c
  5522   0026C4  3221               	rrcf	??___fldiv^0,f,c
  5523   0026C6  C021  F019         	movff	??___fldiv,___fldiv@b
  5524   0026CA  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
  5525   0026CE  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
  5526   0026D2  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
  5527   0026D6  4A2A               	infsnz	___fldiv@new_exp^0,f,c
  5528   0026D8  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
  5529   0026DA                     l3506:
  5530   0026DA  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5531   0026DC  EF78  F013         	goto	u3181
  5532   0026E0  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  5533   0026E2  E108               	bnz	u3180
  5534   0026E4  282A               	incf	___fldiv@new_exp^0,w,c
  5535   0026E6  A0D8               	btfss	status,0,c
  5536   0026E8  EF78  F013         	goto	u3181
  5537   0026EC  EF7A  F013         	goto	u3180
  5538   0026F0                     u3181:
  5539   0026F0  EF85  F013         	goto	l3510
  5540   0026F4                     u3180:
  5541   0026F4  0E00               	movlw	0
  5542   0026F6  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  5543   0026F8  682A               	setf	___fldiv@new_exp^0,c
  5544   0026FA  0E00               	movlw	0
  5545   0026FC  6E19               	movwf	___fldiv@b^0,c
  5546   0026FE  0E00               	movlw	0
  5547   002700  6E1A               	movwf	(___fldiv@b+1)^0,c
  5548   002702  0E00               	movlw	0
  5549   002704  6E1B               	movwf	(___fldiv@b+2)^0,c
  5550   002706  0E00               	movlw	0
  5551   002708  6E1C               	movwf	(___fldiv@b+3)^0,c
  5552   00270A                     l3510:
  5553   00270A  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5554   00270C  EF92  F013         	goto	u3190
  5555   002710  502B               	movf	(___fldiv@new_exp+1)^0,w,c
  5556   002712  E106               	bnz	u3191
  5557   002714  042A               	decf	___fldiv@new_exp^0,w,c
  5558   002716  B0D8               	btfsc	status,0,c
  5559   002718  EF90  F013         	goto	u3191
  5560   00271C  EF92  F013         	goto	u3190
  5561   002720                     u3191:
  5562   002720  EFA0  F013         	goto	l3514
  5563   002724                     u3190:
  5564   002724  0E00               	movlw	0
  5565   002726  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
  5566   002728  0E00               	movlw	0
  5567   00272A  6E2A               	movwf	___fldiv@new_exp^0,c
  5568   00272C  0E00               	movlw	0
  5569   00272E  6E19               	movwf	___fldiv@b^0,c
  5570   002730  0E00               	movlw	0
  5571   002732  6E1A               	movwf	(___fldiv@b+1)^0,c
  5572   002734  0E00               	movlw	0
  5573   002736  6E1B               	movwf	(___fldiv@b+2)^0,c
  5574   002738  0E00               	movlw	0
  5575   00273A  6E1C               	movwf	(___fldiv@b+3)^0,c
  5576   00273C  0E00               	movlw	0
  5577   00273E  6E29               	movwf	___fldiv@sign^0,c
  5578   002740                     l3514:
  5579   002740  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
  5580   002744  A030               	btfss	___fldiv@bexp^0,0,c
  5581   002746  EFA7  F013         	goto	u3201
  5582   00274A  EFA9  F013         	goto	u3200
  5583   00274E                     u3201:
  5584   00274E  EFAC  F013         	goto	l3520
  5585   002752                     u3200:
  5586   002752  8E1B               	bsf	(___fldiv@b+2)^0,7,c
  5587   002754  EFAD  F013         	goto	l3522
  5588   002758                     l3520:
  5589   002758  9E1B               	bcf	(___fldiv@b+2)^0,7,c
  5590   00275A                     l3522:
  5591   00275A  90D8               	bcf	status,0,c
  5592   00275C  3030               	rrcf	___fldiv@bexp^0,w,c
  5593   00275E  6E1C               	movwf	(___fldiv@b+3)^0,c
  5594   002760  EF63  F012         	goto	l3436
  5595   002764                     l1080:
  5596   002764  0012               	return		;funcret
  5597   002766                     __end_of___fldiv:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _initUSART4 *****************
  5601 ;; Defined at:
  5602 ;;		line 14 in file "serial.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;Total ram usage:        0 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text15
  5630   003DC4                     __ptext15:
  5631                           	callstack 0
  5632   003DC4                     _initUSART4:
  5633                           	callstack 30
  5634   003DC4                     
  5635                           ;serial.c: 15:     RC0PPS = 0x12;
  5636   003DC4  0E12               	movlw	18
  5637   003DC6  010E               	movlb	14	; () banked
  5638   003DC8  6F62               	movwf	98,b	;volatile
  5639                           
  5640                           ;serial.c: 16:     RX4PPS = 0x11;
  5641   003DCA  0E11               	movlw	17
  5642   003DCC  6F15               	movwf	21,b	;volatile
  5643   003DCE                     
  5644                           ; BSR set to: 14
  5645                           ;serial.c: 17:     BAUD4CONbits.BRG16 = 0;
  5646   003DCE  97E9               	bcf	233,3,b	;volatile
  5647   003DD0                     
  5648                           ; BSR set to: 14
  5649                           ;serial.c: 18:     TX4STAbits.BRGH = 0;
  5650   003DD0  95E8               	bcf	232,2,b	;volatile
  5651                           
  5652                           ;serial.c: 19:     SP4BRGL = 51;
  5653   003DD2  0E33               	movlw	51
  5654   003DD4  6FE5               	movwf	229,b	;volatile
  5655                           
  5656                           ;serial.c: 20:     SP4BRGH = 0;
  5657   003DD6  0E00               	movlw	0
  5658   003DD8  6FE6               	movwf	230,b	;volatile
  5659   003DDA                     
  5660                           ; BSR set to: 14
  5661                           ;serial.c: 22:     RC4STAbits.CREN = 1;
  5662   003DDA  89E7               	bsf	231,4,b	;volatile
  5663   003DDC                     
  5664                           ; BSR set to: 14
  5665                           ;serial.c: 23:     TX4STAbits.TXEN = 1;
  5666   003DDC  8BE8               	bsf	232,5,b	;volatile
  5667   003DDE                     
  5668                           ; BSR set to: 14
  5669                           ;serial.c: 24:     RC4STAbits.SPEN = 1;
  5670   003DDE  8FE7               	bsf	231,7,b	;volatile
  5671   003DE0                     
  5672                           ; BSR set to: 14
  5673   003DE0  0012               	return		;funcret
  5674   003DE2                     __end_of_initUSART4:
  5675                           	callstack 0
  5676                           
  5677 ;; *************** function _initDCmotorsPWM *****************
  5678 ;; Defined at:
  5679 ;;		line 5 in file "dc_motor.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, status,2
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;Total ram usage:        2 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_main
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text16
  5707   0038BC                     __ptext16:
  5708                           	callstack 0
  5709   0038BC                     _initDCmotorsPWM:
  5710                           	callstack 30
  5711   0038BC                     
  5712                           ;dc_motor.c: 7:     TRISEbits.TRISE2=0;
  5713   0038BC  9485               	bcf	133,2,c	;volatile
  5714                           
  5715                           ;dc_motor.c: 8:     TRISCbits.TRISC7=0;
  5716   0038BE  9E83               	bcf	131,7,c	;volatile
  5717                           
  5718                           ;dc_motor.c: 9:     TRISEbits.TRISE4=0;
  5719   0038C0  9885               	bcf	133,4,c	;volatile
  5720                           
  5721                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
  5722   0038C2  9C87               	bcf	135,6,c	;volatile
  5723                           
  5724                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
  5725   0038C4  947D               	bcf	125,2,c	;volatile
  5726                           
  5727                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
  5728   0038C6  9E7B               	bcf	123,7,c	;volatile
  5729                           
  5730                           ;dc_motor.c: 14:     LATEbits.LATE4=0;
  5731   0038C8  987D               	bcf	125,4,c	;volatile
  5732                           
  5733                           ;dc_motor.c: 15:     LATGbits.LATG6=0;
  5734   0038CA  9C7F               	bcf	127,6,c	;volatile
  5735   0038CC                     
  5736                           ;dc_motor.c: 18:     RE2PPS=0x05;
  5737   0038CC  0E05               	movlw	5
  5738   0038CE  010E               	movlb	14	; () banked
  5739   0038D0  6F74               	movwf	116,b	;volatile
  5740                           
  5741                           ;dc_motor.c: 19:     RE4PPS=0x06;
  5742   0038D2  0E06               	movlw	6
  5743   0038D4  6F76               	movwf	118,b	;volatile
  5744                           
  5745                           ;dc_motor.c: 20:     RC7PPS=0x07;
  5746   0038D6  0E07               	movlw	7
  5747   0038D8  6F69               	movwf	105,b	;volatile
  5748                           
  5749                           ;dc_motor.c: 21:     RG6PPS=0x08;
  5750   0038DA  0E08               	movlw	8
  5751   0038DC  6F88               	movwf	136,b	;volatile
  5752                           
  5753                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b100;
  5754   0038DE  50BD               	movf	189,w,c	;volatile
  5755   0038E0  0B8F               	andlw	-113
  5756   0038E2  0940               	iorlw	64
  5757   0038E4  6EBD               	movwf	189,c	;volatile
  5758                           
  5759                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  5760   0038E6  0EE0               	movlw	-32
  5761   0038E8  16BE               	andwf	190,f,c	;volatile
  5762                           
  5763                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  5764   0038EA  50BF               	movf	191,w,c	;volatile
  5765   0038EC  0BF0               	andlw	-16
  5766   0038EE  0901               	iorlw	1
  5767   0038F0  6EBF               	movwf	191,c	;volatile
  5768   0038F2                     
  5769                           ; BSR set to: 14
  5770                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  5771   0038F2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  5772   0038F6                     
  5773                           ; BSR set to: 14
  5774                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  5775   0038F6  8EBD               	bsf	189,7,c	;volatile
  5776                           
  5777                           ;dc_motor.c: 35:     CCPR1H=0;
  5778   0038F8  0E00               	movlw	0
  5779   0038FA  6EAA               	movwf	170,c	;volatile
  5780                           
  5781                           ;dc_motor.c: 36:     CCPR2H=0;
  5782   0038FC  0E00               	movlw	0
  5783   0038FE  6EA6               	movwf	166,c	;volatile
  5784                           
  5785                           ;dc_motor.c: 37:     CCPR3H=0;
  5786   003900  0E00               	movlw	0
  5787   003902  010F               	movlb	15	; () banked
  5788   003904  6F25               	movwf	37,b	;volatile
  5789                           
  5790                           ;dc_motor.c: 38:     CCPR4H=0;
  5791   003906  0E00               	movlw	0
  5792   003908  6F21               	movwf	33,b	;volatile
  5793                           
  5794                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  5795   00390A  0EFC               	movlw	-4
  5796   00390C  16AD               	andwf	173,f,c	;volatile
  5797                           
  5798                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  5799   00390E  0EF3               	movlw	-13
  5800   003910  16AD               	andwf	173,f,c	;volatile
  5801                           
  5802                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  5803   003912  0ECF               	movlw	-49
  5804   003914  16AD               	andwf	173,f,c	;volatile
  5805                           
  5806                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  5807   003916  0E3F               	movlw	-193
  5808   003918  16AD               	andwf	173,f,c	;volatile
  5809   00391A                     
  5810                           ; BSR set to: 15
  5811                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  5812   00391A  88AB               	bsf	171,4,c	;volatile
  5813                           
  5814                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  5815   00391C  50AB               	movf	171,w,c	;volatile
  5816   00391E  0BF0               	andlw	-16
  5817   003920  090C               	iorlw	12
  5818   003922  6EAB               	movwf	171,c	;volatile
  5819   003924                     
  5820                           ; BSR set to: 15
  5821                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  5822   003924  8EAB               	bsf	171,7,c	;volatile
  5823   003926                     
  5824                           ; BSR set to: 15
  5825                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  5826   003926  88A7               	bsf	167,4,c	;volatile
  5827                           
  5828                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  5829   003928  50A7               	movf	167,w,c	;volatile
  5830   00392A  0BF0               	andlw	-16
  5831   00392C  090C               	iorlw	12
  5832   00392E  6EA7               	movwf	167,c	;volatile
  5833   003930                     
  5834                           ; BSR set to: 15
  5835                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  5836   003930  8EA7               	bsf	167,7,c	;volatile
  5837   003932                     
  5838                           ; BSR set to: 15
  5839                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  5840   003932  8926               	bsf	38,4,b	;volatile
  5841                           
  5842                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  5843   003934  5126               	movf	38,w,b	;volatile
  5844   003936  0BF0               	andlw	-16
  5845   003938  090C               	iorlw	12
  5846   00393A  6F26               	movwf	38,b	;volatile
  5847   00393C                     
  5848                           ; BSR set to: 15
  5849                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  5850   00393C  8F26               	bsf	38,7,b	;volatile
  5851   00393E                     
  5852                           ; BSR set to: 15
  5853                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  5854   00393E  8922               	bsf	34,4,b	;volatile
  5855                           
  5856                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  5857   003940  5122               	movf	34,w,b	;volatile
  5858   003942  0BF0               	andlw	-16
  5859   003944  090C               	iorlw	12
  5860   003946  6F22               	movwf	34,b	;volatile
  5861   003948                     
  5862                           ; BSR set to: 15
  5863                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  5864   003948  8F22               	bsf	34,7,b	;volatile
  5865   00394A                     
  5866                           ; BSR set to: 15
  5867   00394A  0012               	return		;funcret
  5868   00394C                     __end_of_initDCmotorsPWM:
  5869                           	callstack 0
  5870                           
  5871 ;; *************** function _color_click_init *****************
  5872 ;; Defined at:
  5873 ;;		line 7 in file "color.c"
  5874 ;; Parameters:    Size  Location     Type
  5875 ;;		None
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;		None
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;Total ram usage:        1 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; Hardware stack levels required when called: 3
  5894 ;; This function calls:
  5895 ;;		_I2C_2_Master_Init
  5896 ;;		_color_writetoaddr
  5897 ;; This function is called by:
  5898 ;;		_main
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text17
  5903   003CA2                     __ptext17:
  5904                           	callstack 0
  5905   003CA2                     _color_click_init:
  5906                           	callstack 27
  5907   003CA2                     
  5908                           ;color.c: 10:     I2C_2_Master_Init();
  5909   003CA2  EC85  F01E         	call	_I2C_2_Master_Init	;wreg free
  5910   003CA6                     
  5911                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  5912   003CA6  0E01               	movlw	1
  5913   003CA8  6E03               	movwf	color_writetoaddr@value^0,c
  5914   003CAA  0E00               	movlw	0
  5915   003CAC  ECD2  F01E         	call	_color_writetoaddr
  5916   003CB0                     
  5917                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5918   003CB0  0E3F               	movlw	63
  5919   003CB2  6E05               	movwf	??_color_click_init^0,c
  5920   003CB4  0E55               	movlw	85
  5921   003CB6                     u5027:
  5922   003CB6  2EE8               	decfsz	wreg,f,c
  5923   003CB8  D7FE               	bra	u5027
  5924   003CBA  2E05               	decfsz	??_color_click_init^0,f,c
  5925   003CBC  D7FC               	bra	u5027
  5926   003CBE  0000               	nop	
  5927   003CC0                     
  5928                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  5929   003CC0  0E03               	movlw	3
  5930   003CC2  6E03               	movwf	color_writetoaddr@value^0,c
  5931   003CC4  0E00               	movlw	0
  5932   003CC6  ECD2  F01E         	call	_color_writetoaddr
  5933   003CCA                     
  5934                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  5935   003CCA  0ED5               	movlw	213
  5936   003CCC  6E03               	movwf	color_writetoaddr@value^0,c
  5937   003CCE  0E01               	movlw	1
  5938   003CD0  ECD2  F01E         	call	_color_writetoaddr
  5939   003CD4  0012               	return		;funcret
  5940   003CD6                     __end_of_color_click_init:
  5941                           	callstack 0
  5942                           
  5943 ;; *************** function _color_writetoaddr *****************
  5944 ;; Defined at:
  5945 ;;		line 23 in file "color.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  address         1    wreg     unsigned char 
  5948 ;;  value           1    2[COMRAM] unsigned char 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  address         1    3[COMRAM] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;Total ram usage:        2 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 2
  5967 ;; This function calls:
  5968 ;;		_I2C_2_Master_Start
  5969 ;;		_I2C_2_Master_Stop
  5970 ;;		_I2C_2_Master_Write
  5971 ;; This function is called by:
  5972 ;;		_color_click_init
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text18
  5977   003DA4                     __ptext18:
  5978                           	callstack 0
  5979   003DA4                     _color_writetoaddr:
  5980                           	callstack 27
  5981                           
  5982                           ;incstack = 0
  5983                           ;color_writetoaddr@address stored from wreg
  5984   003DA4  6E04               	movwf	color_writetoaddr@address^0,c
  5985   003DA6                     
  5986                           ;color.c: 24:     I2C_2_Master_Start();
  5987   003DA6  EC15  F01F         	call	_I2C_2_Master_Start	;wreg free
  5988                           
  5989                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  5990   003DAA  0E52               	movlw	82
  5991   003DAC  EC0A  F01F         	call	_I2C_2_Master_Write
  5992                           
  5993                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  5994   003DB0  5004               	movf	color_writetoaddr@address^0,w,c
  5995   003DB2  0980               	iorlw	128
  5996   003DB4  EC0A  F01F         	call	_I2C_2_Master_Write
  5997                           
  5998                           ;color.c: 27:     I2C_2_Master_Write(value);
  5999   003DB8  5003               	movf	color_writetoaddr@value^0,w,c
  6000   003DBA  EC0A  F01F         	call	_I2C_2_Master_Write
  6001                           
  6002                           ;color.c: 28:     I2C_2_Master_Stop();
  6003   003DBE  EC10  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6004   003DC2  0012               	return		;funcret
  6005   003DC4                     __end_of_color_writetoaddr:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _I2C_2_Master_Init *****************
  6009 ;; Defined at:
  6010 ;;		line 4 in file "i2c.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;Total ram usage:        0 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_color_click_init
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text19
  6038   003D0A                     __ptext19:
  6039                           	callstack 0
  6040   003D0A                     _I2C_2_Master_Init:
  6041                           	callstack 29
  6042   003D0A                     
  6043                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6044   003D0A  010E               	movlb	14	; () banked
  6045   003D0C  51D9               	movf	217,w,b	;volatile
  6046   003D0E  0BF0               	andlw	-16
  6047   003D10  0908               	iorlw	8
  6048   003D12  6FD9               	movwf	217,b	;volatile
  6049   003D14                     
  6050                           ; BSR set to: 14
  6051                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6052   003D14  8BD9               	bsf	217,5,b	;volatile
  6053                           
  6054                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6055   003D16  0E9F               	movlw	159
  6056   003D18  6FD6               	movwf	214,b	;volatile
  6057   003D1A                     
  6058                           ; BSR set to: 14
  6059                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6060   003D1A  8A84               	bsf	132,5,c	;volatile
  6061   003D1C                     
  6062                           ; BSR set to: 14
  6063                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6064   003D1C  8C84               	bsf	132,6,c	;volatile
  6065   003D1E                     
  6066                           ; BSR set to: 14
  6067                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6068   003D1E  9BA7               	bcf	167,5,b	;volatile
  6069   003D20                     
  6070                           ; BSR set to: 14
  6071                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6072   003D20  9DA7               	bcf	167,6,b	;volatile
  6073                           
  6074                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6075   003D22  0E1D               	movlw	29
  6076   003D24  6F1D               	movwf	29,b	;volatile
  6077                           
  6078                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6079   003D26  0E1E               	movlw	30
  6080   003D28  6F1C               	movwf	28,b	;volatile
  6081                           
  6082                           ;i2c.c: 18:   RD5PPS=0x1C;
  6083   003D2A  0E1C               	movlw	28
  6084   003D2C  6F6F               	movwf	111,b	;volatile
  6085                           
  6086                           ;i2c.c: 19:   RD6PPS=0x1B;
  6087   003D2E  0E1B               	movlw	27
  6088   003D30  6F70               	movwf	112,b	;volatile
  6089   003D32                     
  6090                           ; BSR set to: 14
  6091   003D32  0012               	return		;funcret
  6092   003D34                     __end_of_I2C_2_Master_Init:
  6093                           	callstack 0
  6094                           
  6095 ;; *************** function _calibration_routine *****************
  6096 ;; Defined at:
  6097 ;;		line 212 in file "color.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  cCal            2   68[COMRAM] PTR struct colors
  6100 ;;		 -> colorCalibration(8), 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  cal_state      20    0[BANK0 ] unsigned char [20]
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6112 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6114 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6115 ;;      Totals:         4      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6116 ;;Total ram usage:       24 bytes
  6117 ;; Hardware stack levels used: 1
  6118 ;; Hardware stack levels required when called: 8
  6119 ;; This function calls:
  6120 ;;		_color_read_Blue
  6121 ;;		_color_read_Clear
  6122 ;;		_color_read_Green
  6123 ;;		_color_read_Red
  6124 ;;		_sendStringSerial4
  6125 ;;		_sprintf
  6126 ;; This function is called by:
  6127 ;;		_main
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text20
  6132   002A10                     __ptext20:
  6133                           	callstack 0
  6134   002A10                     _calibration_routine:
  6135                           	callstack 22
  6136   002A10                     
  6137                           ;color.c: 212: void calibration_routine(colors *cCal);color.c: 213: {;color.c: 215:     
      +                          LATGbits.LATG0 = 0;
  6138   002A10  907F               	bcf	127,0,c	;volatile
  6139                           
  6140                           ;color.c: 216:     LATEbits.LATE7 = 0;
  6141   002A12  9E7D               	bcf	125,7,c	;volatile
  6142                           
  6143                           ;color.c: 217:     LATAbits.LATA3 = 0;
  6144   002A14  9679               	bcf	121,3,c	;volatile
  6145   002A16                     
  6146                           ;color.c: 219:     char cal_state[20];;color.c: 223:     sprintf(cal_state,"Calibration 
      +                          state = red", ".");
  6147   002A16  0E60               	movlw	low calibration_routine@cal_state
  6148   002A18  6E31               	movwf	sprintf@s^0,c
  6149   002A1A  6A32               	clrf	(sprintf@s+1)^0,c
  6150   002A1C  0E74               	movlw	low STR_5
  6151   002A1E  6E33               	movwf	sprintf@fmt^0,c
  6152   002A20  0EF3               	movlw	low STR_6
  6153   002A22  6E34               	movwf	(?_sprintf+3)^0,c
  6154   002A24  5034               	movf	(?_sprintf+3)^0,w,c
  6155   002A26  A4D8               	btfss	status,2,c
  6156   002A28  0E0E               	movlw	high __smallconst
  6157   002A2A  6E35               	movwf	(?_sprintf+4)^0,c
  6158   002A2C  ECFA  F01D         	call	_sprintf	;wreg free
  6159   002A30                     
  6160                           ;color.c: 224:     sendStringSerial4(cal_state);
  6161   002A30  0E60               	movlw	low calibration_routine@cal_state
  6162   002A32  6E02               	movwf	sendStringSerial4@string^0,c
  6163   002A34  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  6164   002A36  EC35  F01E         	call	_sendStringSerial4	;wreg free
  6165   002A3A                     l119:
  6166                           
  6167                           ;color.c: 227:     while(PORTFbits.RF2 == 1){
  6168   002A3A  B48E               	btfsc	142,2,c	;volatile
  6169   002A3C  EF22  F015         	goto	u4901
  6170   002A40  EF24  F015         	goto	u4900
  6171   002A44                     u4901:
  6172   002A44  EF1D  F015         	goto	l119
  6173   002A48                     u4900:
  6174   002A48                     
  6175                           ;color.c: 231:     LATGbits.LATG0 = 1;
  6176   002A48  807F               	bsf	127,0,c	;volatile
  6177   002A4A                     
  6178                           ;color.c: 232:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6179   002A4A  0E29               	movlw	41
  6180   002A4C  6E48               	movwf	(??_calibration_routine+1)^0,c
  6181   002A4E  0E96               	movlw	150
  6182   002A50  6E47               	movwf	??_calibration_routine^0,c
  6183   002A52  0E7F               	movlw	127
  6184   002A54                     u5037:
  6185   002A54  2EE8               	decfsz	wreg,f,c
  6186   002A56  D7FE               	bra	u5037
  6187   002A58  2E47               	decfsz	??_calibration_routine^0,f,c
  6188   002A5A  D7FC               	bra	u5037
  6189   002A5C  2E48               	decfsz	(??_calibration_routine+1)^0,f,c
  6190   002A5E  D7FA               	bra	u5037
  6191   002A60  0000               	nop	
  6192   002A62                     
  6193                           ;color.c: 233:     (cCal->red) = color_read_Red();
  6194   002A62  ECD5  F01C         	call	_color_read_Red	;wreg free
  6195   002A66  C045  FFD9         	movff	calibration_routine@cCal,fsr2l
  6196   002A6A  C046  FFDA         	movff	calibration_routine@cCal+1,fsr2h
  6197   002A6E  C005  FFDE         	movff	?_color_read_Red,postinc2
  6198   002A72  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6199   002A76                     
  6200                           ;color.c: 234:     LATGbits.LATG0 = 0;
  6201   002A76  907F               	bcf	127,0,c	;volatile
  6202   002A78                     
  6203                           ;color.c: 237:     sprintf(cal_state,"Calibration state = green \n\r", ".");
  6204   002A78  0E60               	movlw	low calibration_routine@cal_state
  6205   002A7A  6E31               	movwf	sprintf@s^0,c
  6206   002A7C  6A32               	clrf	(sprintf@s+1)^0,c
  6207   002A7E  0E23               	movlw	low STR_7
  6208   002A80  6E33               	movwf	sprintf@fmt^0,c
  6209   002A82  0EF3               	movlw	low STR_6
  6210   002A84  6E34               	movwf	(?_sprintf+3)^0,c
  6211   002A86  5034               	movf	(?_sprintf+3)^0,w,c
  6212   002A88  A4D8               	btfss	status,2,c
  6213   002A8A  0E0E               	movlw	high __smallconst
  6214   002A8C  6E35               	movwf	(?_sprintf+4)^0,c
  6215   002A8E  ECFA  F01D         	call	_sprintf	;wreg free
  6216   002A92                     
  6217                           ;color.c: 238:     sendStringSerial4(&cal_state);
  6218   002A92  0E60               	movlw	low calibration_routine@cal_state
  6219   002A94  6E02               	movwf	sendStringSerial4@string^0,c
  6220   002A96  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  6221   002A98  EC35  F01E         	call	_sendStringSerial4	;wreg free
  6222   002A9C                     l122:
  6223                           
  6224                           ;color.c: 240:     while(PORTFbits.RF2 == 1){
  6225   002A9C  B48E               	btfsc	142,2,c	;volatile
  6226   002A9E  EF53  F015         	goto	u4911
  6227   002AA2  EF55  F015         	goto	u4910
  6228   002AA6                     u4911:
  6229   002AA6  EF4E  F015         	goto	l122
  6230   002AAA                     u4910:
  6231   002AAA                     
  6232                           ;color.c: 244:     LATEbits.LATE7 = 1;
  6233   002AAA  8E7D               	bsf	125,7,c	;volatile
  6234   002AAC                     
  6235                           ;color.c: 245:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6236   002AAC  0E29               	movlw	41
  6237   002AAE  6E48               	movwf	(??_calibration_routine+1)^0,c
  6238   002AB0  0E96               	movlw	150
  6239   002AB2  6E47               	movwf	??_calibration_routine^0,c
  6240   002AB4  0E7F               	movlw	127
  6241   002AB6                     u5047:
  6242   002AB6  2EE8               	decfsz	wreg,f,c
  6243   002AB8  D7FE               	bra	u5047
  6244   002ABA  2E47               	decfsz	??_calibration_routine^0,f,c
  6245   002ABC  D7FC               	bra	u5047
  6246   002ABE  2E48               	decfsz	(??_calibration_routine+1)^0,f,c
  6247   002AC0  D7FA               	bra	u5047
  6248   002AC2  0000               	nop	
  6249   002AC4                     
  6250                           ;color.c: 246:     (cCal->green) = color_read_Green();
  6251   002AC4  ECFD  F01C         	call	_color_read_Green	;wreg free
  6252   002AC8  EE20 F002          	lfsr	2,2
  6253   002ACC  5045               	movf	calibration_routine@cCal^0,w,c
  6254   002ACE  26D9               	addwf	fsr2l,f,c
  6255   002AD0  5046               	movf	(calibration_routine@cCal+1)^0,w,c
  6256   002AD2  22DA               	addwfc	fsr2h,f,c
  6257   002AD4  C005  FFDE         	movff	?_color_read_Green,postinc2
  6258   002AD8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6259   002ADC                     
  6260                           ;color.c: 247:     LATEbits.LATE7 = 0;
  6261   002ADC  9E7D               	bcf	125,7,c	;volatile
  6262   002ADE                     
  6263                           ;color.c: 250:     sprintf(cal_state,"Calibration state= blue \n\r", ".");
  6264   002ADE  0E60               	movlw	low calibration_routine@cal_state
  6265   002AE0  6E31               	movwf	sprintf@s^0,c
  6266   002AE2  6A32               	clrf	(sprintf@s+1)^0,c
  6267   002AE4  0E40               	movlw	low STR_9
  6268   002AE6  6E33               	movwf	sprintf@fmt^0,c
  6269   002AE8  0EF3               	movlw	low STR_6
  6270   002AEA  6E34               	movwf	(?_sprintf+3)^0,c
  6271   002AEC  5034               	movf	(?_sprintf+3)^0,w,c
  6272   002AEE  A4D8               	btfss	status,2,c
  6273   002AF0  0E0E               	movlw	high __smallconst
  6274   002AF2  6E35               	movwf	(?_sprintf+4)^0,c
  6275   002AF4  ECFA  F01D         	call	_sprintf	;wreg free
  6276   002AF8                     
  6277                           ;color.c: 251:     sendStringSerial4(&cal_state);
  6278   002AF8  0E60               	movlw	low calibration_routine@cal_state
  6279   002AFA  6E02               	movwf	sendStringSerial4@string^0,c
  6280   002AFC  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  6281   002AFE  EC35  F01E         	call	_sendStringSerial4	;wreg free
  6282   002B02                     l125:
  6283                           
  6284                           ;color.c: 253:     while(PORTFbits.RF2 == 1){
  6285   002B02  B48E               	btfsc	142,2,c	;volatile
  6286   002B04  EF86  F015         	goto	u4921
  6287   002B08  EF88  F015         	goto	u4920
  6288   002B0C                     u4921:
  6289   002B0C  EF81  F015         	goto	l125
  6290   002B10                     u4920:
  6291   002B10                     
  6292                           ;color.c: 257:     LATAbits.LATA3 = 1;
  6293   002B10  8679               	bsf	121,3,c	;volatile
  6294   002B12                     
  6295                           ;color.c: 258:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6296   002B12  0E29               	movlw	41
  6297   002B14  6E48               	movwf	(??_calibration_routine+1)^0,c
  6298   002B16  0E96               	movlw	150
  6299   002B18  6E47               	movwf	??_calibration_routine^0,c
  6300   002B1A  0E7F               	movlw	127
  6301   002B1C                     u5057:
  6302   002B1C  2EE8               	decfsz	wreg,f,c
  6303   002B1E  D7FE               	bra	u5057
  6304   002B20  2E47               	decfsz	??_calibration_routine^0,f,c
  6305   002B22  D7FC               	bra	u5057
  6306   002B24  2E48               	decfsz	(??_calibration_routine+1)^0,f,c
  6307   002B26  D7FA               	bra	u5057
  6308   002B28  0000               	nop	
  6309   002B2A                     
  6310                           ;color.c: 259:     (cCal->blue) = color_read_Blue();
  6311   002B2A  EC4D  F01D         	call	_color_read_Blue	;wreg free
  6312   002B2E  EE20 F004          	lfsr	2,4
  6313   002B32  5045               	movf	calibration_routine@cCal^0,w,c
  6314   002B34  26D9               	addwf	fsr2l,f,c
  6315   002B36  5046               	movf	(calibration_routine@cCal+1)^0,w,c
  6316   002B38  22DA               	addwfc	fsr2h,f,c
  6317   002B3A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6318   002B3E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6319   002B42                     
  6320                           ;color.c: 260:     LATAbits.LATA3 = 0;
  6321   002B42  9679               	bcf	121,3,c	;volatile
  6322   002B44                     
  6323                           ;color.c: 263:     sprintf(cal_state,"Calibration state = ambient light", ".");
  6324   002B44  0E60               	movlw	low calibration_routine@cal_state
  6325   002B46  6E31               	movwf	sprintf@s^0,c
  6326   002B48  6A32               	clrf	(sprintf@s+1)^0,c
  6327   002B4A  0E01               	movlw	low STR_11
  6328   002B4C  6E33               	movwf	sprintf@fmt^0,c
  6329   002B4E  0EF3               	movlw	low STR_6
  6330   002B50  6E34               	movwf	(?_sprintf+3)^0,c
  6331   002B52  5034               	movf	(?_sprintf+3)^0,w,c
  6332   002B54  A4D8               	btfss	status,2,c
  6333   002B56  0E0E               	movlw	high __smallconst
  6334   002B58  6E35               	movwf	(?_sprintf+4)^0,c
  6335   002B5A  ECFA  F01D         	call	_sprintf	;wreg free
  6336   002B5E                     
  6337                           ;color.c: 264:     sendStringSerial4(&cal_state);
  6338   002B5E  0E60               	movlw	low calibration_routine@cal_state
  6339   002B60  6E02               	movwf	sendStringSerial4@string^0,c
  6340   002B62  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  6341   002B64  EC35  F01E         	call	_sendStringSerial4	;wreg free
  6342   002B68                     l128:
  6343                           
  6344                           ;color.c: 266:     while(PORTFbits.RF2 == 1){
  6345   002B68  B48E               	btfsc	142,2,c	;volatile
  6346   002B6A  EFB9  F015         	goto	u4931
  6347   002B6E  EFBB  F015         	goto	u4930
  6348   002B72                     u4931:
  6349   002B72  EFB4  F015         	goto	l128
  6350   002B76                     u4930:
  6351   002B76                     
  6352                           ;color.c: 269:     LATGbits.LATG0 = 1;
  6353   002B76  807F               	bsf	127,0,c	;volatile
  6354                           
  6355                           ;color.c: 270:     LATEbits.LATE7 = 1;
  6356   002B78  8E7D               	bsf	125,7,c	;volatile
  6357                           
  6358                           ;color.c: 271:     LATAbits.LATA3 = 1;
  6359   002B7A  8679               	bsf	121,3,c	;volatile
  6360   002B7C                     
  6361                           ;color.c: 272:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6362   002B7C  0E29               	movlw	41
  6363   002B7E  6E48               	movwf	(??_calibration_routine+1)^0,c
  6364   002B80  0E96               	movlw	150
  6365   002B82  6E47               	movwf	??_calibration_routine^0,c
  6366   002B84  0E7F               	movlw	127
  6367   002B86                     u5067:
  6368   002B86  2EE8               	decfsz	wreg,f,c
  6369   002B88  D7FE               	bra	u5067
  6370   002B8A  2E47               	decfsz	??_calibration_routine^0,f,c
  6371   002B8C  D7FC               	bra	u5067
  6372   002B8E  2E48               	decfsz	(??_calibration_routine+1)^0,f,c
  6373   002B90  D7FA               	bra	u5067
  6374   002B92  0000               	nop	
  6375   002B94                     
  6376                           ;color.c: 273:     (cCal->clear) = color_read_Clear();
  6377   002B94  EC25  F01D         	call	_color_read_Clear	;wreg free
  6378   002B98  EE20 F006          	lfsr	2,6
  6379   002B9C  5045               	movf	calibration_routine@cCal^0,w,c
  6380   002B9E  26D9               	addwf	fsr2l,f,c
  6381   002BA0  5046               	movf	(calibration_routine@cCal+1)^0,w,c
  6382   002BA2  22DA               	addwfc	fsr2h,f,c
  6383   002BA4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6384   002BA8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6385   002BAC                     
  6386                           ;color.c: 274:     LATGbits.LATG0 = 0;
  6387   002BAC  907F               	bcf	127,0,c	;volatile
  6388   002BAE                     
  6389                           ;color.c: 275:     LATEbits.LATE7 = 0;
  6390   002BAE  9E7D               	bcf	125,7,c	;volatile
  6391   002BB0                     
  6392                           ;color.c: 276:     LATAbits.LATA3 = 0;
  6393   002BB0  9679               	bcf	121,3,c	;volatile
  6394   002BB2                     
  6395                           ;color.c: 279:     sprintf(cal_state,"CALIBRATION COMPLETED \n\r", ".");
  6396   002BB2  0E60               	movlw	low calibration_routine@cal_state
  6397   002BB4  6E31               	movwf	sprintf@s^0,c
  6398   002BB6  6A32               	clrf	(sprintf@s+1)^0,c
  6399   002BB8  0E5B               	movlw	low STR_13
  6400   002BBA  6E33               	movwf	sprintf@fmt^0,c
  6401   002BBC  0EF3               	movlw	low STR_6
  6402   002BBE  6E34               	movwf	(?_sprintf+3)^0,c
  6403   002BC0  5034               	movf	(?_sprintf+3)^0,w,c
  6404   002BC2  A4D8               	btfss	status,2,c
  6405   002BC4  0E0E               	movlw	high __smallconst
  6406   002BC6  6E35               	movwf	(?_sprintf+4)^0,c
  6407   002BC8  ECFA  F01D         	call	_sprintf	;wreg free
  6408   002BCC                     
  6409                           ;color.c: 280:     sendStringSerial4(&cal_state);
  6410   002BCC  0E60               	movlw	low calibration_routine@cal_state
  6411   002BCE  6E02               	movwf	sendStringSerial4@string^0,c
  6412   002BD0  6A03               	clrf	(sendStringSerial4@string+1)^0,c
  6413   002BD2  EC35  F01E         	call	_sendStringSerial4	;wreg free
  6414   002BD6  0012               	return		;funcret
  6415   002BD8                     __end_of_calibration_routine:
  6416                           	callstack 0
  6417                           
  6418 ;; *************** function _sprintf *****************
  6419 ;; Defined at:
  6420 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  s               2   48[COMRAM] PTR unsigned char 
  6423 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), test@led_state(50), 
  6424 ;;  fmt             1   50[COMRAM] PTR const unsigned char 
  6425 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  6426 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  6427 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  f              12   56[COMRAM] struct _IO_FILE
  6430 ;;  ret             2    0        int 
  6431 ;;  ap              1   55[COMRAM] PTR void [1]
  6432 ;;		 -> ?_sprintf(2), 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  2   48[COMRAM] int 
  6435 ;; Registers used:
  6436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6442 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;Total ram usage:       20 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 7
  6449 ;; This function calls:
  6450 ;;		_vfprintf
  6451 ;; This function is called by:
  6452 ;;		_test
  6453 ;;		_calibration_routine
  6454 ;;		_send2USART
  6455 ;;		_ADC2String
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           	psect	text21
  6460   003BF4                     __ptext21:
  6461                           	callstack 0
  6462   003BF4                     _sprintf:
  6463                           	callstack 22
  6464   003BF4  0E34               	movlw	low (?_sprintf+3)
  6465   003BF6  6E38               	movwf	sprintf@ap^0,c
  6466   003BF8  C031  F039         	movff	sprintf@s,sprintf@f
  6467   003BFC  C032  F03A         	movff	sprintf@s+1,sprintf@f+1
  6468   003C00  0E00               	movlw	0
  6469   003C02  6E3D               	movwf	(sprintf@f+4)^0,c
  6470   003C04  0E00               	movlw	0
  6471   003C06  6E3C               	movwf	(sprintf@f+3)^0,c
  6472   003C08  0E00               	movlw	0
  6473   003C0A  6E44               	movwf	(sprintf@f+11)^0,c
  6474   003C0C  0E00               	movlw	0
  6475   003C0E  6E43               	movwf	(sprintf@f+10)^0,c
  6476   003C10  0E39               	movlw	low sprintf@f
  6477   003C12  6E2D               	movwf	vfprintf@fp^0,c
  6478   003C14  C033  F02E         	movff	sprintf@fmt,vfprintf@fmt
  6479   003C18  0E38               	movlw	low sprintf@ap
  6480   003C1A  6E2F               	movwf	vfprintf@ap^0,c
  6481   003C1C  EC98  F01D         	call	_vfprintf	;wreg free
  6482   003C20  503C               	movf	(sprintf@f+3)^0,w,c
  6483   003C22  2431               	addwf	sprintf@s^0,w,c
  6484   003C24  6ED9               	movwf	fsr2l,c
  6485   003C26  503D               	movf	(sprintf@f+4)^0,w,c
  6486   003C28  2032               	addwfc	(sprintf@s+1)^0,w,c
  6487   003C2A  6EDA               	movwf	fsr2h,c
  6488   003C2C  6ADF               	clrf	indf2,c
  6489   003C2E  0012               	return		;funcret
  6490   003C30                     __end_of_sprintf:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function _vfprintf *****************
  6494 ;; Defined at:
  6495 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  6498 ;;		 -> sprintf@f(12), 
  6499 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  6500 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  6501 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  6502 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  6503 ;;  ap              1   46[COMRAM] PTR PTR void 
  6504 ;;		 -> sprintf@ap(1), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  6507 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  6508 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  6509 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  2   44[COMRAM] int 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6522 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6523 ;;Total ram usage:        4 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 6
  6526 ;; This function calls:
  6527 ;;		_vfpfcnvrt
  6528 ;; This function is called by:
  6529 ;;		_sprintf
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text22
  6534   003B30                     __ptext22:
  6535                           	callstack 0
  6536   003B30                     _vfprintf:
  6537                           	callstack 22
  6538   003B30                     
  6539                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6540   003B30  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  6541                           
  6542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6543   003B34  EFA4  F01D         	goto	l4664
  6544   003B38                     l4662:
  6545                           
  6546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6547   003B38  C02D  F022         	movff	vfprintf@fp,vfpfcnvrt@fp
  6548   003B3C  0E30               	movlw	low vfprintf@cfmt
  6549   003B3E  6E23               	movwf	vfpfcnvrt@fmt^0,c
  6550   003B40  C02F  F024         	movff	vfprintf@ap,vfpfcnvrt@ap
  6551   003B44  ECEC  F015         	call	_vfpfcnvrt	;wreg free
  6552   003B48                     l4664:
  6553                           
  6554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6555   003B48  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  6556   003B4C                     	if	1	;There is more than 1 active tblptr byte
  6557   003B4C  0E0E               	movlw	high __smallconst
  6558   003B4E  6EF7               	movwf	tblptrh,c
  6559   003B50                     	endif
  6560   003B50                     	if	0	;tblptru may be non-zero
  6561   003B50                     	endif
  6562   003B50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6563   003B50  0E00               	movlw	low (__smallconst shr (0+16))
  6564   003B52  6EF8               	movwf	tblptru,c
  6565   003B54                     	endif
  6566   003B54  0008               	tblrd		*
  6567   003B56  50F5               	movf	tablat,w,c
  6568   003B58  0900               	iorlw	0
  6569   003B5A  A4D8               	btfss	status,2,c
  6570   003B5C  EFB2  F01D         	goto	u4601
  6571   003B60  EFB4  F01D         	goto	u4600
  6572   003B64                     u4601:
  6573   003B64  EF9C  F01D         	goto	l4662
  6574   003B68                     u4600:
  6575   003B68                     
  6576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6577   003B68  0E00               	movlw	0
  6578   003B6A  6E2E               	movwf	(?_vfprintf+1)^0,c
  6579   003B6C  0E00               	movlw	0
  6580   003B6E  6E2D               	movwf	?_vfprintf^0,c
  6581   003B70  0012               	return		;funcret
  6582   003B72                     __end_of_vfprintf:
  6583                           	callstack 0
  6584                           
  6585 ;; *************** function _vfpfcnvrt *****************
  6586 ;; Defined at:
  6587 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  fp              1   33[COMRAM] PTR struct _IO_FILE
  6590 ;;		 -> sprintf@f(12), 
  6591 ;;  fmt             1   34[COMRAM] PTR PTR unsigned char 
  6592 ;;		 -> vfprintf@cfmt(1), 
  6593 ;;  ap              1   35[COMRAM] PTR PTR void 
  6594 ;;		 -> sprintf@ap(1), 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  convarg         4   38[COMRAM] struct .
  6597 ;;  cp              1   43[COMRAM] PTR unsigned char 
  6598 ;;		 -> STR_16(12), STR_15(21), STR_13(25), STR_11(34), 
  6599 ;;		 -> STR_9(27), STR_7(29), STR_5(24), STR_4(17), 
  6600 ;;		 -> STR_3(17), STR_2(19), STR_1(17), 
  6601 ;;  done            1   42[COMRAM] _Bool 
  6602 ;;  c               1    0        unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6612 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6615 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;Total ram usage:       11 bytes
  6617 ;; Hardware stack levels used: 1
  6618 ;; Hardware stack levels required when called: 5
  6619 ;; This function calls:
  6620 ;;		_dtoa
  6621 ;;		_fputc
  6622 ;;		_read_prec_or_width
  6623 ;; This function is called by:
  6624 ;;		_vfprintf
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text23
  6629   002BD8                     __ptext23:
  6630                           	callstack 0
  6631   002BD8                     _vfpfcnvrt:
  6632                           	callstack 22
  6633   002BD8                     
  6634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6635   002BD8  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6636   002BDA  6ED9               	movwf	fsr2l,c
  6637   002BDC  6ADA               	clrf	fsr2h,c
  6638   002BDE  CFDF FFF6          	movff	indf2,tblptrl
  6639   002BE2                     	if	1	;There is more than 1 active tblptr byte
  6640   002BE2  0E0E               	movlw	high __smallconst
  6641   002BE4  6EF7               	movwf	tblptrh,c
  6642   002BE6                     	endif
  6643   002BE6                     	if	0	;tblptru may be non-zero
  6644   002BE6                     	endif
  6645   002BE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6646   002BE6  0E00               	movlw	low (__smallconst shr (0+16))
  6647   002BE8  6EF8               	movwf	tblptru,c
  6648   002BEA                     	endif
  6649   002BEA  0008               	tblrd		*
  6650   002BEC  50F5               	movf	tablat,w,c
  6651   002BEE  0A25               	xorlw	37
  6652   002BF0  A4D8               	btfss	status,2,c
  6653   002BF2  EFFD  F015         	goto	u4521
  6654   002BF6  EFFF  F015         	goto	u4520
  6655   002BFA                     u4521:
  6656   002BFA  EF9B  F016         	goto	l4616
  6657   002BFE                     u4520:
  6658   002BFE                     
  6659                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6660   002BFE  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6661   002C00  6ED9               	movwf	fsr2l,c
  6662   002C02  6ADA               	clrf	fsr2h,c
  6663   002C04  2ADF               	incf	indf2,f,c
  6664   002C06                     
  6665                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6666   002C06  0E00               	movlw	0
  6667   002C08  0100               	movlb	0	; () banked
  6668   002C0A  6FEB               	movwf	(_width+1)& (0+255),b
  6669   002C0C  0E00               	movlw	0
  6670   002C0E  6FEA               	movwf	_width& (0+255),b
  6671   002C10  C0EA  F054         	movff	_width,_flags
  6672   002C14                     
  6673                           ; BSR set to: 0
  6674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6675   002C14  69EC               	setf	_prec& (0+255),b
  6676   002C16  69ED               	setf	(_prec+1)& (0+255),b
  6677   002C18                     
  6678                           ; BSR set to: 0
  6679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6680   002C18  0E00               	movlw	0
  6681   002C1A  6E2B               	movwf	vfpfcnvrt@done^0,c
  6682                           
  6683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6684   002C1C  EF36  F016         	goto	l4590
  6685   002C20                     l4580:
  6686                           
  6687                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  6688   002C20  8254               	bsf	_flags^0,1,c
  6689   002C22                     
  6690                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  6691   002C22  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6692   002C24  6ED9               	movwf	fsr2l,c
  6693   002C26  6ADA               	clrf	fsr2h,c
  6694   002C28  2ADF               	incf	indf2,f,c
  6695                           
  6696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  6697   002C2A  EF36  F016         	goto	l4590
  6698   002C2E                     l4584:
  6699                           
  6700                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6701   002C2E  0E01               	movlw	1
  6702   002C30  6E2B               	movwf	vfpfcnvrt@done^0,c
  6703                           
  6704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6705   002C32  EF36  F016         	goto	l4590
  6706   002C36                     l4588:
  6707   002C36  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6708   002C38  6ED9               	movwf	fsr2l,c
  6709   002C3A  6ADA               	clrf	fsr2h,c
  6710   002C3C  CFDF FFF6          	movff	indf2,tblptrl
  6711   002C40                     	if	1	;There is more than 1 active tblptr byte
  6712   002C40  0E0E               	movlw	high __smallconst
  6713   002C42  6EF7               	movwf	tblptrh,c
  6714   002C44                     	endif
  6715   002C44                     	if	0	;tblptru may be non-zero
  6716   002C44                     	endif
  6717   002C44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6718   002C44  0E00               	movlw	low (__smallconst shr (0+16))
  6719   002C46  6EF8               	movwf	tblptru,c
  6720   002C48                     	endif
  6721   002C48  0008               	tblrd		*
  6722   002C4A  50F5               	movf	tablat,w,c
  6723   002C4C  6E25               	movwf	??_vfpfcnvrt^0,c
  6724   002C4E  6A26               	clrf	(??_vfpfcnvrt+1)^0,c
  6725                           
  6726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6727                           ; Switch size 1, requested type "simple"
  6728                           ; Number of cases is 1, Range of values is 0 to 0
  6729                           ; switch strategies available:
  6730                           ; Name         Instructions Cycles
  6731                           ; simple_byte            4     3 (average)
  6732                           ;	Chosen strategy is simple_byte
  6733   002C50  5026               	movf	(??_vfpfcnvrt+1)^0,w,c
  6734   002C52  0A00               	xorlw	0	; case 0
  6735   002C54  B4D8               	btfsc	status,2,c
  6736   002C56  EF2F  F016         	goto	l5158
  6737   002C5A  EF17  F016         	goto	l4584
  6738   002C5E                     l5158:
  6739                           
  6740                           ; Switch size 1, requested type "simple"
  6741                           ; Number of cases is 1, Range of values is 48 to 48
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte            4     3 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746   002C5E  5025               	movf	??_vfpfcnvrt^0,w,c
  6747   002C60  0A30               	xorlw	48	; case 48
  6748   002C62  B4D8               	btfsc	status,2,c
  6749   002C64  EF10  F016         	goto	l4580
  6750   002C68  EF17  F016         	goto	l4584
  6751   002C6C                     l4590:
  6752                           
  6753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6754   002C6C  502B               	movf	vfpfcnvrt@done^0,w,c
  6755   002C6E  B4D8               	btfsc	status,2,c
  6756   002C70  EF3C  F016         	goto	u4531
  6757   002C74  EF3E  F016         	goto	u4530
  6758   002C78                     u4531:
  6759   002C78  EF1B  F016         	goto	l4588
  6760   002C7C                     u4530:
  6761   002C7C                     
  6762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6763   002C7C  C023  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6764   002C80  C024  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6765   002C84  EC1A  F01B         	call	_read_prec_or_width	;wreg free
  6766   002C88  C007  F0EA         	movff	?_read_prec_or_width,_width
  6767   002C8C  C008  F0EB         	movff	?_read_prec_or_width+1,_width+1
  6768   002C90                     
  6769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6770   002C90  0100               	movlb	0	; () banked
  6771   002C92  BFEB               	btfsc	(_width+1)& (0+255),7,b
  6772   002C94  EF50  F016         	goto	u4540
  6773   002C98  EF4E  F016         	goto	u4541
  6774   002C9C                     u4541:
  6775   002C9C  EF55  F016         	goto	l4598
  6776   002CA0                     u4540:
  6777   002CA0                     
  6778                           ; BSR set to: 0
  6779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6780   002CA0  8054               	bsf	_flags^0,0,c
  6781                           
  6782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6783   002CA2  6DEA               	negf	_width& (0+255),b
  6784   002CA4  1FEB               	comf	(_width+1)& (0+255),f,b
  6785   002CA6  B0D8               	btfsc	status,0,c
  6786   002CA8  2BEB               	incf	(_width+1)& (0+255),f,b
  6787   002CAA                     l4598:
  6788                           
  6789                           ; BSR set to: 0
  6790                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6791   002CAA  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6792   002CAC  6ED9               	movwf	fsr2l,c
  6793   002CAE  6ADA               	clrf	fsr2h,c
  6794   002CB0  50DF               	movf	indf2,w,c
  6795   002CB2  6E2C               	movwf	vfpfcnvrt@cp^0,c
  6796   002CB4                     
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6799   002CB4  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6800   002CB8                     	if	1	;There is more than 1 active tblptr byte
  6801   002CB8  0E0E               	movlw	high __smallconst
  6802   002CBA  6EF7               	movwf	tblptrh,c
  6803   002CBC                     	endif
  6804   002CBC                     	if	0	;tblptru may be non-zero
  6805   002CBC                     	endif
  6806   002CBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6807   002CBC  0E00               	movlw	low (__smallconst shr (0+16))
  6808   002CBE  6EF8               	movwf	tblptru,c
  6809   002CC0                     	endif
  6810   002CC0  0008               	tblrd		*
  6811   002CC2  50F5               	movf	tablat,w,c
  6812   002CC4  0A64               	xorlw	100
  6813   002CC6  B4D8               	btfsc	status,2,c
  6814   002CC8  EF68  F016         	goto	u4551
  6815   002CCC  EF6A  F016         	goto	u4550
  6816   002CD0                     u4551:
  6817   002CD0  EF7A  F016         	goto	l4604
  6818   002CD4                     u4550:
  6819   002CD4                     
  6820                           ; BSR set to: 0
  6821   002CD4  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6822   002CD8                     	if	1	;There is more than 1 active tblptr byte
  6823   002CD8  0E0E               	movlw	high __smallconst
  6824   002CDA  6EF7               	movwf	tblptrh,c
  6825   002CDC                     	endif
  6826   002CDC                     	if	0	;tblptru may be non-zero
  6827   002CDC                     	endif
  6828   002CDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6829   002CDC  0E00               	movlw	low (__smallconst shr (0+16))
  6830   002CDE  6EF8               	movwf	tblptru,c
  6831   002CE0                     	endif
  6832   002CE0  0008               	tblrd		*
  6833   002CE2  50F5               	movf	tablat,w,c
  6834   002CE4  0A69               	xorlw	105
  6835   002CE6  A4D8               	btfss	status,2,c
  6836   002CE8  EF78  F016         	goto	u4561
  6837   002CEC  EF7A  F016         	goto	u4560
  6838   002CF0                     u4561:
  6839   002CF0  EF95  F016         	goto	l4612
  6840   002CF4                     u4560:
  6841   002CF4                     l4604:
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6845   002CF4  5024               	movf	vfpfcnvrt@ap^0,w,c
  6846   002CF6  6ED9               	movwf	fsr2l,c
  6847   002CF8  6ADA               	clrf	fsr2h,c
  6848   002CFA  0E02               	movlw	2
  6849   002CFC  26DF               	addwf	indf2,f,c
  6850   002CFE  5CDF               	subwf	indf2,w,c
  6851   002D00  6ED9               	movwf	fsr2l,c
  6852   002D02  6ADA               	clrf	fsr2h,c
  6853   002D04  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  6854   002D08  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  6855   002D0C                     
  6856                           ; BSR set to: 0
  6857                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6858   002D0C  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6859   002D0E  6ED9               	movwf	fsr2l,c
  6860   002D10  6ADA               	clrf	fsr2h,c
  6861   002D12  282C               	incf	vfpfcnvrt@cp^0,w,c
  6862   002D14  6EDF               	movwf	indf2,c
  6863   002D16                     
  6864                           ; BSR set to: 0
  6865                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6866   002D16  C022  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  6867   002D1A  C027  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  6868   002D1E  C028  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6869   002D22  EC6F  F017         	call	_dtoa	;wreg free
  6870   002D26  EFAE  F016         	goto	l1240
  6871   002D2A                     l4612:
  6872                           
  6873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6874   002D2A  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6875   002D2C  6ED9               	movwf	fsr2l,c
  6876   002D2E  6ADA               	clrf	fsr2h,c
  6877   002D30  2ADF               	incf	indf2,f,c
  6878   002D32  EFAE  F016         	goto	l1240
  6879   002D36                     l4616:
  6880                           
  6881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6882   002D36  5023               	movf	vfpfcnvrt@fmt^0,w,c
  6883   002D38  6ED9               	movwf	fsr2l,c
  6884   002D3A  6ADA               	clrf	fsr2h,c
  6885   002D3C  CFDF FFF6          	movff	indf2,tblptrl
  6886   002D40                     	if	1	;There is more than 1 active tblptr byte
  6887   002D40  0E0E               	movlw	high __smallconst
  6888   002D42  6EF7               	movwf	tblptrh,c
  6889   002D44                     	endif
  6890   002D44                     	if	0	;tblptru may be non-zero
  6891   002D44                     	endif
  6892   002D44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6893   002D44  0E00               	movlw	low (__smallconst shr (0+16))
  6894   002D46  6EF8               	movwf	tblptru,c
  6895   002D48                     	endif
  6896   002D48  0008               	tblrd		*
  6897   002D4A  50F5               	movf	tablat,w,c
  6898   002D4C  6E01               	movwf	fputc@c^0,c
  6899   002D4E  6A02               	clrf	(fputc@c+1)^0,c
  6900   002D50  C022  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6901   002D54  EC09  F01A         	call	_fputc	;wreg free
  6902   002D58  EF95  F016         	goto	l4612
  6903   002D5C                     l1240:
  6904   002D5C  0012               	return		;funcret
  6905   002D5E                     __end_of_vfpfcnvrt:
  6906                           	callstack 0
  6907                           
  6908 ;; *************** function _read_prec_or_width *****************
  6909 ;; Defined at:
  6910 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  6913 ;;		 -> vfprintf@cfmt(1), 
  6914 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  6915 ;;		 -> sprintf@ap(1), 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  c               1    8[COMRAM] unsigned char 
  6918 ;;  n               2    9[COMRAM] int 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  2    6[COMRAM] int 
  6921 ;; Registers used:
  6922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;Total ram usage:        5 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 1
  6935 ;; This function calls:
  6936 ;;		___wmul
  6937 ;; This function is called by:
  6938 ;;		_vfpfcnvrt
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text24
  6943   003634                     __ptext24:
  6944                           	callstack 0
  6945   003634                     _read_prec_or_width:
  6946                           	callstack 25
  6947   003634                     
  6948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6949   003634  0E00               	movlw	0
  6950   003636  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  6951   003638  0E00               	movlw	0
  6952   00363A  6E0A               	movwf	read_prec_or_width@n^0,c
  6953   00363C                     
  6954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6955   00363C  5007               	movf	read_prec_or_width@fmt^0,w,c
  6956   00363E  6ED9               	movwf	fsr2l,c
  6957   003640  6ADA               	clrf	fsr2h,c
  6958   003642  CFDF FFF6          	movff	indf2,tblptrl
  6959   003646                     	if	1	;There is more than 1 active tblptr byte
  6960   003646  0E0E               	movlw	high __smallconst
  6961   003648  6EF7               	movwf	tblptrh,c
  6962   00364A                     	endif
  6963   00364A                     	if	0	;tblptru may be non-zero
  6964   00364A                     	endif
  6965   00364A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6966   00364A  0E00               	movlw	low (__smallconst shr (0+16))
  6967   00364C  6EF8               	movwf	tblptru,c
  6968   00364E                     	endif
  6969   00364E  0008               	tblrd		*
  6970   003650  50F5               	movf	tablat,w,c
  6971   003652  0A2A               	xorlw	42
  6972   003654  A4D8               	btfss	status,2,c
  6973   003656  EF2F  F01B         	goto	u4481
  6974   00365A  EF31  F01B         	goto	u4480
  6975   00365E                     u4481:
  6976   00365E  EF57  F01B         	goto	l4564
  6977   003662                     u4480:
  6978   003662                     
  6979                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6980   003662  5007               	movf	read_prec_or_width@fmt^0,w,c
  6981   003664  6ED9               	movwf	fsr2l,c
  6982   003666  6ADA               	clrf	fsr2h,c
  6983   003668  2ADF               	incf	indf2,f,c
  6984   00366A                     
  6985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6986   00366A  5008               	movf	read_prec_or_width@ap^0,w,c
  6987   00366C  6ED9               	movwf	fsr2l,c
  6988   00366E  6ADA               	clrf	fsr2h,c
  6989   003670  0E02               	movlw	2
  6990   003672  26DF               	addwf	indf2,f,c
  6991   003674  5CDF               	subwf	indf2,w,c
  6992   003676  6ED9               	movwf	fsr2l,c
  6993   003678  6ADA               	clrf	fsr2h,c
  6994   00367A  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  6995   00367E  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  6996                           
  6997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6998   003682  EF6C  F01B         	goto	l1221
  6999   003686                     l4560:
  7000                           
  7001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  7002   003686  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  7003   00368A  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  7004   00368E  0E00               	movlw	0
  7005   003690  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7006   003692  0E0A               	movlw	10
  7007   003694  6E03               	movwf	___wmul@multiplicand^0,c
  7008   003696  ECAE  F01E         	call	___wmul	;wreg free
  7009   00369A  5009               	movf	read_prec_or_width@c^0,w,c
  7010   00369C  2401               	addwf	?___wmul^0,w,c
  7011   00369E  6E0A               	movwf	read_prec_or_width@n^0,c
  7012   0036A0  0E00               	movlw	0
  7013   0036A2  2002               	addwfc	(?___wmul+1)^0,w,c
  7014   0036A4  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  7015   0036A6                     
  7016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  7017   0036A6  5007               	movf	read_prec_or_width@fmt^0,w,c
  7018   0036A8  6ED9               	movwf	fsr2l,c
  7019   0036AA  6ADA               	clrf	fsr2h,c
  7020   0036AC  2ADF               	incf	indf2,f,c
  7021   0036AE                     l4564:
  7022                           
  7023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  7024   0036AE  5007               	movf	read_prec_or_width@fmt^0,w,c
  7025   0036B0  6ED9               	movwf	fsr2l,c
  7026   0036B2  6ADA               	clrf	fsr2h,c
  7027   0036B4  CFDF FFF6          	movff	indf2,tblptrl
  7028   0036B8                     	if	1	;There is more than 1 active tblptr byte
  7029   0036B8  0E0E               	movlw	high __smallconst
  7030   0036BA  6EF7               	movwf	tblptrh,c
  7031   0036BC                     	endif
  7032   0036BC                     	if	0	;tblptru may be non-zero
  7033   0036BC                     	endif
  7034   0036BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7035   0036BC  0E00               	movlw	low (__smallconst shr (0+16))
  7036   0036BE  6EF8               	movwf	tblptru,c
  7037   0036C0                     	endif
  7038   0036C0  0008               	tblrd		*
  7039   0036C2  50F5               	movf	tablat,w,c
  7040   0036C4  0FD0               	addlw	208
  7041   0036C6  6E09               	movwf	read_prec_or_width@c^0,c
  7042   0036C8  0E09               	movlw	9
  7043   0036CA  6409               	cpfsgt	read_prec_or_width@c^0,c
  7044   0036CC  EF6A  F01B         	goto	u4491
  7045   0036D0  EF6C  F01B         	goto	u4490
  7046   0036D4                     u4491:
  7047   0036D4  EF43  F01B         	goto	l4560
  7048   0036D8                     u4490:
  7049   0036D8                     l1221:
  7050                           
  7051                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  7052   0036D8  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  7053   0036DC  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  7054   0036E0  0012               	return		;funcret
  7055   0036E2                     __end_of_read_prec_or_width:
  7056                           	callstack 0
  7057                           
  7058 ;; *************** function ___wmul *****************
  7059 ;; Defined at:
  7060 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  multiplier      2    0[COMRAM] unsigned int 
  7063 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  product         2    4[COMRAM] unsigned int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  2    0[COMRAM] unsigned int 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, prodl, prodh
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;Total ram usage:        6 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_read_prec_or_width
  7085 ;;		_setMotorPWM
  7086 ;;		_ADC2String
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text25
  7091   003D5C                     __ptext25:
  7092                           	callstack 0
  7093   003D5C                     ___wmul:
  7094                           	callstack 25
  7095   003D5C  5001               	movf	___wmul@multiplier^0,w,c
  7096   003D5E  0203               	mulwf	___wmul@multiplicand^0,c
  7097   003D60  CFF3 F005          	movff	prodl,___wmul@product
  7098   003D64  CFF4 F006          	movff	prodh,___wmul@product+1
  7099   003D68  5001               	movf	___wmul@multiplier^0,w,c
  7100   003D6A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7101   003D6C  50F3               	movf	243,w,c
  7102   003D6E  2606               	addwf	(___wmul@product+1)^0,f,c
  7103   003D70  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7104   003D72  0203               	mulwf	___wmul@multiplicand^0,c
  7105   003D74  50F3               	movf	243,w,c
  7106   003D76  2606               	addwf	(___wmul@product+1)^0,f,c
  7107   003D78  C005  F001         	movff	___wmul@product,?___wmul
  7108   003D7C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7109   003D80  0012               	return		;funcret
  7110   003D82                     __end_of___wmul:
  7111                           	callstack 0
  7112                           
  7113 ;; *************** function _dtoa *****************
  7114 ;; Defined at:
  7115 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  7118 ;;		 -> sprintf@f(12), 
  7119 ;;  d               2   23[COMRAM] int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  i               2   31[COMRAM] int 
  7122 ;;  w               2   28[COMRAM] int 
  7123 ;;  s               1   30[COMRAM] unsigned char 
  7124 ;;  p               1   27[COMRAM] _Bool 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7134 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;Total ram usage:       11 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 4
  7141 ;; This function calls:
  7142 ;;		___awdiv
  7143 ;;		___awmod
  7144 ;;		_abs
  7145 ;;		_pad
  7146 ;; This function is called by:
  7147 ;;		_vfpfcnvrt
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text26
  7152   002EDE                     __ptext26:
  7153                           	callstack 0
  7154   002EDE                     _dtoa:
  7155                           	callstack 22
  7156   002EDE                     
  7157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  7158   002EDE  0E01               	movlw	1
  7159   002EE0  6E1C               	movwf	dtoa@p^0,c
  7160   002EE2                     
  7161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  7162   002EE2  BE19               	btfsc	(dtoa@d+1)^0,7,c
  7163   002EE4  EF76  F017         	goto	u4381
  7164   002EE8  EF79  F017         	goto	u4380
  7165   002EEC                     u4381:
  7166   002EEC  0E01               	movlw	1
  7167   002EEE  EF7A  F017         	goto	u4390
  7168   002EF2                     u4380:
  7169   002EF2  0E00               	movlw	0
  7170   002EF4                     u4390:
  7171   002EF4  6E1F               	movwf	dtoa@s^0,c
  7172   002EF6                     
  7173                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7174   002EF6  C0EA  F01D         	movff	_width,dtoa@w
  7175   002EFA  C0EB  F01E         	movff	_width+1,dtoa@w+1
  7176   002EFE                     
  7177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  7178   002EFE  501F               	movf	dtoa@s^0,w,c
  7179   002F00  B4D8               	btfsc	status,2,c
  7180   002F02  EF85  F017         	goto	u4401
  7181   002F06  EF87  F017         	goto	u4400
  7182   002F0A                     u4401:
  7183   002F0A  EF9E  F017         	goto	l1204
  7184   002F0E                     u4400:
  7185   002F0E                     
  7186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  7187   002F0E  061D               	decf	dtoa@w^0,f,c
  7188   002F10  A0D8               	btfss	status,0,c
  7189   002F12  061E               	decf	(dtoa@w+1)^0,f,c
  7190   002F14                     
  7191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7192   002F14  501F               	movf	dtoa@s^0,w,c
  7193   002F16  A4D8               	btfss	status,2,c
  7194   002F18  EF90  F017         	goto	u4411
  7195   002F1C  EF92  F017         	goto	u4410
  7196   002F20                     u4411:
  7197   002F20  EF98  F017         	goto	l4516
  7198   002F24                     u4410:
  7199   002F24  0E00               	movlw	0
  7200   002F26  6E1B               	movwf	(_dtoa$2547+1)^0,c
  7201   002F28  0E2B               	movlw	43
  7202   002F2A  6E1A               	movwf	_dtoa$2547^0,c
  7203   002F2C  EF9C  F017         	goto	l4518
  7204   002F30                     l4516:
  7205   002F30  0E00               	movlw	0
  7206   002F32  6E1B               	movwf	(_dtoa$2547+1)^0,c
  7207   002F34  0E2D               	movlw	45
  7208   002F36  6E1A               	movwf	_dtoa$2547^0,c
  7209   002F38                     l4518:
  7210   002F38  C01A  F01F         	movff	_dtoa$2547,dtoa@s
  7211   002F3C                     l1204:
  7212                           
  7213                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7214   002F3C  0E00               	movlw	0
  7215   002F3E  6E21               	movwf	(dtoa@i+1)^0,c
  7216   002F40  0E1F               	movlw	31
  7217   002F42  6E20               	movwf	dtoa@i^0,c
  7218   002F44                     
  7219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7220   002F44  0E00               	movlw	0
  7221   002F46  0101               	movlb	1	; () banked
  7222   002F48  6F6F               	movwf	(_dbuf+31)& (0+255),b
  7223                           
  7224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7225   002F4A  EFD6  F017         	goto	l4532
  7226   002F4E                     l4522:
  7227                           
  7228                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  7229   002F4E  0620               	decf	dtoa@i^0,f,c
  7230   002F50  A0D8               	btfss	status,0,c
  7231   002F52  0621               	decf	(dtoa@i+1)^0,f,c
  7232   002F54                     
  7233                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7234   002F54  0E50               	movlw	low _dbuf
  7235   002F56  2420               	addwf	dtoa@i^0,w,c
  7236   002F58  6ED9               	movwf	fsr2l,c
  7237   002F5A  0E01               	movlw	high _dbuf
  7238   002F5C  2021               	addwfc	(dtoa@i+1)^0,w,c
  7239   002F5E  6EDA               	movwf	fsr2h,c
  7240   002F60  C018  F001         	movff	dtoa@d,___awmod@dividend
  7241   002F64  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7242   002F68  0E00               	movlw	0
  7243   002F6A  6E04               	movwf	(___awmod@divisor+1)^0,c
  7244   002F6C  0E0A               	movlw	10
  7245   002F6E  6E03               	movwf	___awmod@divisor^0,c
  7246   002F70  ECC2  F01A         	call	___awmod	;wreg free
  7247   002F74  C001  F007         	movff	?___awmod,abs@a
  7248   002F78  C002  F008         	movff	?___awmod+1,abs@a+1
  7249   002F7C  EC6B  F01E         	call	_abs	;wreg free
  7250   002F80  5007               	movf	?_abs^0,w,c
  7251   002F82  0F30               	addlw	48
  7252   002F84  6EDF               	movwf	indf2,c
  7253   002F86                     
  7254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7255   002F86  0E00               	movlw	0
  7256   002F88  6E1C               	movwf	dtoa@p^0,c
  7257   002F8A                     
  7258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  7259   002F8A  061D               	decf	dtoa@w^0,f,c
  7260   002F8C  A0D8               	btfss	status,0,c
  7261   002F8E  061E               	decf	(dtoa@w+1)^0,f,c
  7262   002F90                     
  7263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7264   002F90  C018  F001         	movff	dtoa@d,___awdiv@dividend
  7265   002F94  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7266   002F98  0E00               	movlw	0
  7267   002F9A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7268   002F9C  0E0A               	movlw	10
  7269   002F9E  6E03               	movwf	___awdiv@divisor^0,c
  7270   002FA0  ECA7  F019         	call	___awdiv	;wreg free
  7271   002FA4  C001  F018         	movff	?___awdiv,dtoa@d
  7272   002FA8  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  7273   002FAC                     l4532:
  7274                           
  7275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7276   002FAC  BE21               	btfsc	(dtoa@i+1)^0,7,c
  7277   002FAE  EFE1  F017         	goto	u4421
  7278   002FB2  5021               	movf	(dtoa@i+1)^0,w,c
  7279   002FB4  E108               	bnz	u4420
  7280   002FB6  0420               	decf	dtoa@i^0,w,c
  7281   002FB8  A0D8               	btfss	status,0,c
  7282   002FBA  EFE1  F017         	goto	u4421
  7283   002FBE  EFE3  F017         	goto	u4420
  7284   002FC2                     u4421:
  7285   002FC2  EF08  F018         	goto	l4542
  7286   002FC6                     u4420:
  7287   002FC6  5018               	movf	dtoa@d^0,w,c
  7288   002FC8  1019               	iorwf	(dtoa@d+1)^0,w,c
  7289   002FCA  A4D8               	btfss	status,2,c
  7290   002FCC  EFEA  F017         	goto	u4431
  7291   002FD0  EFEC  F017         	goto	u4430
  7292   002FD4                     u4431:
  7293   002FD4  EFA7  F017         	goto	l4522
  7294   002FD8                     u4430:
  7295   002FD8  501C               	movf	dtoa@p^0,w,c
  7296   002FDA  A4D8               	btfss	status,2,c
  7297   002FDC  EFF2  F017         	goto	u4441
  7298   002FE0  EFF4  F017         	goto	u4440
  7299   002FE4                     u4441:
  7300   002FE4  EFA7  F017         	goto	l4522
  7301   002FE8                     u4440:
  7302   002FE8  BE1E               	btfsc	(dtoa@w+1)^0,7,c
  7303   002FEA  EFFF  F017         	goto	u4451
  7304   002FEE  501E               	movf	(dtoa@w+1)^0,w,c
  7305   002FF0  E108               	bnz	u4450
  7306   002FF2  041D               	decf	dtoa@w^0,w,c
  7307   002FF4  A0D8               	btfss	status,0,c
  7308   002FF6  EFFF  F017         	goto	u4451
  7309   002FFA  EF01  F018         	goto	u4450
  7310   002FFE                     u4451:
  7311   002FFE  EF08  F018         	goto	l4542
  7312   003002                     u4450:
  7313   003002  B254               	btfsc	_flags^0,1,c
  7314   003004  EF06  F018         	goto	u4461
  7315   003008  EF08  F018         	goto	u4460
  7316   00300C                     u4461:
  7317   00300C  EFA7  F017         	goto	l4522
  7318   003010                     u4460:
  7319   003010                     l4542:
  7320                           
  7321                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7322   003010  501F               	movf	dtoa@s^0,w,c
  7323   003012  B4D8               	btfsc	status,2,c
  7324   003014  EF0E  F018         	goto	u4471
  7325   003018  EF10  F018         	goto	u4470
  7326   00301C                     u4471:
  7327   00301C  EF1B  F018         	goto	l4548
  7328   003020                     u4470:
  7329   003020                     
  7330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  7331   003020  0620               	decf	dtoa@i^0,f,c
  7332   003022  A0D8               	btfss	status,0,c
  7333   003024  0621               	decf	(dtoa@i+1)^0,f,c
  7334   003026                     
  7335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7336   003026  0E50               	movlw	low _dbuf
  7337   003028  2420               	addwf	dtoa@i^0,w,c
  7338   00302A  6ED9               	movwf	fsr2l,c
  7339   00302C  0E01               	movlw	high _dbuf
  7340   00302E  2021               	addwfc	(dtoa@i+1)^0,w,c
  7341   003030  6EDA               	movwf	fsr2h,c
  7342   003032  C01F  FFDF         	movff	dtoa@s,indf2
  7343   003036                     l4548:
  7344                           
  7345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7346   003036  C017  F00F         	movff	dtoa@fp,pad@fp
  7347   00303A  0E50               	movlw	low _dbuf
  7348   00303C  2420               	addwf	dtoa@i^0,w,c
  7349   00303E  6E10               	movwf	pad@buf^0,c
  7350   003040  0E01               	movlw	high _dbuf
  7351   003042  2021               	addwfc	(dtoa@i+1)^0,w,c
  7352   003044  6E11               	movwf	(pad@buf+1)^0,c
  7353   003046  C01D  F012         	movff	dtoa@w,pad@p
  7354   00304A  C01E  F013         	movff	dtoa@w+1,pad@p+1
  7355   00304E  EC15  F01C         	call	_pad	;wreg free
  7356   003052  0012               	return		;funcret
  7357   003054                     __end_of_dtoa:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _pad *****************
  7361 ;; Defined at:
  7362 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7365 ;;		 -> sprintf@f(12), 
  7366 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7367 ;;		 -> dbuf(32), 
  7368 ;;  p               2   17[COMRAM] int 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;  i               2   20[COMRAM] int 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7380 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;Total ram usage:        8 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 3
  7387 ;; This function calls:
  7388 ;;		_fputc
  7389 ;;		_fputs
  7390 ;; This function is called by:
  7391 ;;		_dtoa
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text27
  7396   00382A                     __ptext27:
  7397                           	callstack 0
  7398   00382A                     _pad:
  7399                           	callstack 22
  7400   00382A                     
  7401                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7402   00382A  A054               	btfss	_flags^0,0,c
  7403   00382C  EF1A  F01C         	goto	u4331
  7404   003830  EF1C  F01C         	goto	u4330
  7405   003834                     u4331:
  7406   003834  EF24  F01C         	goto	l4486
  7407   003838                     u4330:
  7408   003838                     
  7409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7410   003838  C010  F009         	movff	pad@buf,fputs@s
  7411   00383C  C011  F00A         	movff	pad@buf+1,fputs@s+1
  7412   003840  C00F  F00B         	movff	pad@fp,fputs@fp
  7413   003844  ECDA  F01D         	call	_fputs	;wreg free
  7414   003848                     l4486:
  7415                           
  7416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7417   003848  BE13               	btfsc	(pad@p+1)^0,7,c
  7418   00384A  EF2B  F01C         	goto	u4340
  7419   00384E  EF29  F01C         	goto	u4341
  7420   003852                     u4341:
  7421   003852  EF2F  F01C         	goto	l1196
  7422   003856                     u4340:
  7423   003856                     
  7424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7425   003856  0E00               	movlw	0
  7426   003858  6E13               	movwf	(pad@p+1)^0,c
  7427   00385A  0E00               	movlw	0
  7428   00385C  6E12               	movwf	pad@p^0,c
  7429   00385E                     l1196:
  7430                           
  7431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7432   00385E  0E00               	movlw	0
  7433   003860  6E16               	movwf	(pad@i+1)^0,c
  7434   003862  0E00               	movlw	0
  7435   003864  6E15               	movwf	pad@i^0,c
  7436                           
  7437                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7438   003866  EF3F  F01C         	goto	l4494
  7439   00386A                     l4490:
  7440                           
  7441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7442   00386A  0E00               	movlw	0
  7443   00386C  6E02               	movwf	(fputc@c+1)^0,c
  7444   00386E  0E20               	movlw	32
  7445   003870  6E01               	movwf	fputc@c^0,c
  7446   003872  C00F  F003         	movff	pad@fp,fputc@fp
  7447   003876  EC09  F01A         	call	_fputc	;wreg free
  7448   00387A                     
  7449                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7450   00387A  4A15               	infsnz	pad@i^0,f,c
  7451   00387C  2A16               	incf	(pad@i+1)^0,f,c
  7452   00387E                     l4494:
  7453                           
  7454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7455   00387E  5012               	movf	pad@p^0,w,c
  7456   003880  5C15               	subwf	pad@i^0,w,c
  7457   003882  5016               	movf	(pad@i+1)^0,w,c
  7458   003884  0A80               	xorlw	128
  7459   003886  6E14               	movwf	??_pad^0,c
  7460   003888  5013               	movf	(pad@p+1)^0,w,c
  7461   00388A  0A80               	xorlw	128
  7462   00388C  5814               	subwfb	??_pad^0,w,c
  7463   00388E  A0D8               	btfss	status,0,c
  7464   003890  EF4C  F01C         	goto	u4351
  7465   003894  EF4E  F01C         	goto	u4350
  7466   003898                     u4351:
  7467   003898  EF35  F01C         	goto	l4490
  7468   00389C                     u4350:
  7469   00389C                     
  7470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7471   00389C  B054               	btfsc	_flags^0,0,c
  7472   00389E  EF53  F01C         	goto	u4361
  7473   0038A2  EF55  F01C         	goto	u4360
  7474   0038A6                     u4361:
  7475   0038A6  EF5D  F01C         	goto	l1201
  7476   0038AA                     u4360:
  7477   0038AA                     
  7478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7479   0038AA  C010  F009         	movff	pad@buf,fputs@s
  7480   0038AE  C011  F00A         	movff	pad@buf+1,fputs@s+1
  7481   0038B2  C00F  F00B         	movff	pad@fp,fputs@fp
  7482   0038B6  ECDA  F01D         	call	_fputs	;wreg free
  7483   0038BA                     l1201:
  7484   0038BA  0012               	return		;funcret
  7485   0038BC                     __end_of_pad:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _fputs *****************
  7489 ;; Defined at:
  7490 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7493 ;;		 -> dbuf(32), 
  7494 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7495 ;;		 -> sprintf@f(12), 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  i               2   12[COMRAM] int 
  7498 ;;  c               1   11[COMRAM] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2    8[COMRAM] int 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7508 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7509 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;Total ram usage:        6 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 2
  7515 ;; This function calls:
  7516 ;;		_fputc
  7517 ;; This function is called by:
  7518 ;;		_pad
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text28
  7523   003BB4                     __ptext28:
  7524                           	callstack 0
  7525   003BB4                     _fputs:
  7526                           	callstack 22
  7527   003BB4  0E00               	movlw	0
  7528   003BB6  6E0E               	movwf	(fputs@i+1)^0,c
  7529   003BB8  0E00               	movlw	0
  7530   003BBA  6E0D               	movwf	fputs@i^0,c
  7531   003BBC  EFE9  F01D         	goto	l4394
  7532   003BC0                     l4390:
  7533   003BC0  C00C  F001         	movff	fputs@c,fputc@c
  7534   003BC4  6A02               	clrf	(fputc@c+1)^0,c
  7535   003BC6  C00B  F003         	movff	fputs@fp,fputc@fp
  7536   003BCA  EC09  F01A         	call	_fputc	;wreg free
  7537   003BCE  4A0D               	infsnz	fputs@i^0,f,c
  7538   003BD0  2A0E               	incf	(fputs@i+1)^0,f,c
  7539   003BD2                     l4394:
  7540   003BD2  500D               	movf	fputs@i^0,w,c
  7541   003BD4  2409               	addwf	fputs@s^0,w,c
  7542   003BD6  6ED9               	movwf	fsr2l,c
  7543   003BD8  500E               	movf	(fputs@i+1)^0,w,c
  7544   003BDA  200A               	addwfc	(fputs@s+1)^0,w,c
  7545   003BDC  6EDA               	movwf	fsr2h,c
  7546   003BDE  50DF               	movf	indf2,w,c
  7547   003BE0  6E0C               	movwf	fputs@c^0,c
  7548   003BE2  500C               	movf	fputs@c^0,w,c
  7549   003BE4  A4D8               	btfss	status,2,c
  7550   003BE6  EFF7  F01D         	goto	u4201
  7551   003BEA  EFF9  F01D         	goto	u4200
  7552   003BEE                     u4201:
  7553   003BEE  EFE0  F01D         	goto	l4390
  7554   003BF2                     u4200:
  7555   003BF2  0012               	return		;funcret
  7556   003BF4                     __end_of_fputs:
  7557                           	callstack 0
  7558                           
  7559 ;; *************** function _fputc *****************
  7560 ;; Defined at:
  7561 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  c               2    0[COMRAM] int 
  7564 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7565 ;;		 -> sprintf@f(12), 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2    0[COMRAM] int 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7577 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;Total ram usage:        8 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 1
  7584 ;; This function calls:
  7585 ;;		_putch
  7586 ;; This function is called by:
  7587 ;;		_pad
  7588 ;;		_vfpfcnvrt
  7589 ;;		_fputs
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text29
  7594   003412                     __ptext29:
  7595                           	callstack 0
  7596   003412                     _fputc:
  7597                           	callstack 25
  7598   003412  5003               	movf	fputc@fp^0,w,c
  7599   003414  B4D8               	btfsc	status,2,c
  7600   003416  EF0F  F01A         	goto	u4161
  7601   00341A  EF11  F01A         	goto	u4160
  7602   00341E                     u4161:
  7603   00341E  EF19  F01A         	goto	l4378
  7604   003422                     u4160:
  7605   003422  5003               	movf	fputc@fp^0,w,c
  7606   003424  A4D8               	btfss	status,2,c
  7607   003426  EF17  F01A         	goto	u4171
  7608   00342A  EF19  F01A         	goto	u4170
  7609   00342E                     u4171:
  7610   00342E  EF1E  F01A         	goto	l4380
  7611   003432                     u4170:
  7612   003432                     l4378:
  7613   003432  5001               	movf	fputc@c^0,w,c
  7614   003434  EC1F  F01F         	call	_putch
  7615   003438  EF65  F01A         	goto	l1265
  7616   00343C                     l4380:
  7617   00343C  5003               	movf	fputc@fp^0,w,c
  7618   00343E  6ED9               	movwf	fsr2l,c
  7619   003440  6ADA               	clrf	fsr2h,c
  7620   003442  0E0A               	movlw	10
  7621   003444  26D9               	addwf	fsr2l,f,c
  7622   003446  50DE               	movf	postinc2,w,c
  7623   003448  10DE               	iorwf	postinc2,w,c
  7624   00344A  B4D8               	btfsc	status,2,c
  7625   00344C  EF2A  F01A         	goto	u4181
  7626   003450  EF2C  F01A         	goto	u4180
  7627   003454                     u4181:
  7628   003454  EF45  F01A         	goto	l4384
  7629   003458                     u4180:
  7630   003458  5003               	movf	fputc@fp^0,w,c
  7631   00345A  6ED9               	movwf	fsr2l,c
  7632   00345C  6ADA               	clrf	fsr2h,c
  7633   00345E  0E0A               	movlw	10
  7634   003460  26D9               	addwf	fsr2l,f,c
  7635   003462  5003               	movf	fputc@fp^0,w,c
  7636   003464  6EE1               	movwf	fsr1l,c
  7637   003466  6AE2               	clrf	fsr1h,c
  7638   003468  0E03               	movlw	3
  7639   00346A  26E1               	addwf	fsr1l,f,c
  7640   00346C  50DE               	movf	postinc2,w,c
  7641   00346E  5CE6               	subwf	postinc1,w,c
  7642   003470  50E6               	movf	postinc1,w,c
  7643   003472  0A80               	xorlw	128
  7644   003474  6E08               	movwf	(??_fputc+4)^0,c
  7645   003476  50DE               	movf	postinc2,w,c
  7646   003478  0A80               	xorlw	128
  7647   00347A  5808               	subwfb	(??_fputc+4)^0,w,c
  7648   00347C  B0D8               	btfsc	status,0,c
  7649   00347E  EF43  F01A         	goto	u4191
  7650   003482  EF45  F01A         	goto	u4190
  7651   003486                     u4191:
  7652   003486  EF65  F01A         	goto	l1265
  7653   00348A                     u4190:
  7654   00348A                     l4384:
  7655   00348A  5003               	movf	fputc@fp^0,w,c
  7656   00348C  6ED9               	movwf	fsr2l,c
  7657   00348E  6ADA               	clrf	fsr2h,c
  7658   003490  0E03               	movlw	3
  7659   003492  26D9               	addwf	fsr2l,f,c
  7660   003494  CFDE F004          	movff	postinc2,??_fputc
  7661   003498  CFDD F005          	movff	postdec2,??_fputc+1
  7662   00349C  5003               	movf	fputc@fp^0,w,c
  7663   00349E  6ED9               	movwf	fsr2l,c
  7664   0034A0  6ADA               	clrf	fsr2h,c
  7665   0034A2  CFDE F006          	movff	postinc2,??_fputc+2
  7666   0034A6  CFDD F007          	movff	postdec2,??_fputc+3
  7667   0034AA  5004               	movf	??_fputc^0,w,c
  7668   0034AC  2406               	addwf	(??_fputc+2)^0,w,c
  7669   0034AE  6ED9               	movwf	fsr2l,c
  7670   0034B0  5005               	movf	(??_fputc+1)^0,w,c
  7671   0034B2  2007               	addwfc	(??_fputc+3)^0,w,c
  7672   0034B4  6EDA               	movwf	fsr2h,c
  7673   0034B6  C001  FFDF         	movff	fputc@c,indf2
  7674   0034BA  5003               	movf	fputc@fp^0,w,c
  7675   0034BC  6ED9               	movwf	fsr2l,c
  7676   0034BE  6ADA               	clrf	fsr2h,c
  7677   0034C0  0E03               	movlw	3
  7678   0034C2  26D9               	addwf	fsr2l,f,c
  7679   0034C4  2ADE               	incf	postinc2,f,c
  7680   0034C6  0E00               	movlw	0
  7681   0034C8  22DD               	addwfc	postdec2,f,c
  7682   0034CA                     l1265:
  7683   0034CA  0012               	return		;funcret
  7684   0034CC                     __end_of_fputc:
  7685                           	callstack 0
  7686                           
  7687 ;; *************** function _putch *****************
  7688 ;; Defined at:
  7689 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  7690 ;; Parameters:    Size  Location     Type
  7691 ;;  c               1    wreg     unsigned char 
  7692 ;; Auto vars:     Size  Location     Type
  7693 ;;  c               1    0[COMRAM] unsigned char 
  7694 ;; Return value:  Size  Location     Type
  7695 ;;                  1    wreg      void 
  7696 ;; Registers used:
  7697 ;;		wreg
  7698 ;; Tracked objects:
  7699 ;;		On entry : 0/0
  7700 ;;		On exit  : 0/0
  7701 ;;		Unchanged: 0/0
  7702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;Total ram usage:        0 bytes
  7708 ;; Hardware stack levels used: 1
  7709 ;; This function calls:
  7710 ;;		Nothing
  7711 ;; This function is called by:
  7712 ;;		_fputc
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text30
  7717   003E3E                     __ptext30:
  7718                           	callstack 0
  7719   003E3E                     _putch:
  7720                           	callstack 25
  7721   003E3E  0012               	return		;funcret
  7722   003E40                     __end_of_putch:
  7723                           	callstack 0
  7724                           
  7725 ;; *************** function _abs *****************
  7726 ;; Defined at:
  7727 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  a               2    6[COMRAM] int 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  2    6[COMRAM] int 
  7734 ;; Registers used:
  7735 ;;		wreg, status,2, status,0
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;Total ram usage:        4 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_dtoa
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text31
  7755   003CD6                     __ptext31:
  7756                           	callstack 0
  7757   003CD6                     _abs:
  7758                           	callstack 25
  7759   003CD6  BE08               	btfsc	(abs@a+1)^0,7,c
  7760   003CD8  EF70  F01E         	goto	u4371
  7761   003CDC  EF72  F01E         	goto	u4370
  7762   003CE0                     u4371:
  7763   003CE0  EF78  F01E         	goto	l1250
  7764   003CE4                     u4370:
  7765   003CE4  C007  F007         	movff	abs@a,?_abs
  7766   003CE8  C008  F008         	movff	abs@a+1,?_abs+1
  7767   003CEC  EF84  F01E         	goto	l1253
  7768   003CF0                     l1250:
  7769   003CF0  C007  F009         	movff	abs@a,??_abs
  7770   003CF4  C008  F00A         	movff	abs@a+1,??_abs+1
  7771   003CF8  1E09               	comf	??_abs^0,f,c
  7772   003CFA  1E0A               	comf	(??_abs+1)^0,f,c
  7773   003CFC  4A09               	infsnz	??_abs^0,f,c
  7774   003CFE  2A0A               	incf	(??_abs+1)^0,f,c
  7775   003D00  C009  F007         	movff	??_abs,?_abs
  7776   003D04  C00A  F008         	movff	??_abs+1,?_abs+1
  7777   003D08                     l1253:
  7778   003D08  0012               	return		;funcret
  7779   003D0A                     __end_of_abs:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function ___awmod *****************
  7783 ;; Defined at:
  7784 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  dividend        2    0[COMRAM] int 
  7787 ;;  divisor         2    2[COMRAM] int 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  sign            1    5[COMRAM] unsigned char 
  7790 ;;  counter         1    4[COMRAM] unsigned char 
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  2    0[COMRAM] int 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7803 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7804 ;;Total ram usage:        6 bytes
  7805 ;; Hardware stack levels used: 1
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_dtoa
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text32
  7814   003584                     __ptext32:
  7815                           	callstack 0
  7816   003584                     ___awmod:
  7817                           	callstack 25
  7818   003584  0E00               	movlw	0
  7819   003586  6E06               	movwf	___awmod@sign^0,c
  7820   003588  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7821   00358A  EFCB  F01A         	goto	u4270
  7822   00358E  EFC9  F01A         	goto	u4271
  7823   003592                     u4271:
  7824   003592  EFD1  F01A         	goto	l4454
  7825   003596                     u4270:
  7826   003596  6C01               	negf	___awmod@dividend^0,c
  7827   003598  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7828   00359A  B0D8               	btfsc	status,0,c
  7829   00359C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7830   00359E  0E01               	movlw	1
  7831   0035A0  6E06               	movwf	___awmod@sign^0,c
  7832   0035A2                     l4454:
  7833   0035A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7834   0035A4  EFD8  F01A         	goto	u4280
  7835   0035A8  EFD6  F01A         	goto	u4281
  7836   0035AC                     u4281:
  7837   0035AC  EFDC  F01A         	goto	l4458
  7838   0035B0                     u4280:
  7839   0035B0  6C03               	negf	___awmod@divisor^0,c
  7840   0035B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7841   0035B4  B0D8               	btfsc	status,0,c
  7842   0035B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7843   0035B8                     l4458:
  7844   0035B8  5003               	movf	___awmod@divisor^0,w,c
  7845   0035BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7846   0035BC  B4D8               	btfsc	status,2,c
  7847   0035BE  EFE3  F01A         	goto	u4291
  7848   0035C2  EFE5  F01A         	goto	u4290
  7849   0035C6                     u4291:
  7850   0035C6  EF09  F01B         	goto	l4474
  7851   0035CA                     u4290:
  7852   0035CA  0E01               	movlw	1
  7853   0035CC  6E05               	movwf	___awmod@counter^0,c
  7854   0035CE  EFED  F01A         	goto	l4464
  7855   0035D2                     l4462:
  7856   0035D2  90D8               	bcf	status,0,c
  7857   0035D4  3603               	rlcf	___awmod@divisor^0,f,c
  7858   0035D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7859   0035D8  2A05               	incf	___awmod@counter^0,f,c
  7860   0035DA                     l4464:
  7861   0035DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7862   0035DC  EFF2  F01A         	goto	u4301
  7863   0035E0  EFF4  F01A         	goto	u4300
  7864   0035E4                     u4301:
  7865   0035E4  EFE9  F01A         	goto	l4462
  7866   0035E8                     u4300:
  7867   0035E8                     l4466:
  7868   0035E8  5003               	movf	___awmod@divisor^0,w,c
  7869   0035EA  5C01               	subwf	___awmod@dividend^0,w,c
  7870   0035EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7871   0035EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7872   0035F0  A0D8               	btfss	status,0,c
  7873   0035F2  EFFD  F01A         	goto	u4311
  7874   0035F6  EFFF  F01A         	goto	u4310
  7875   0035FA                     u4311:
  7876   0035FA  EF03  F01B         	goto	l4470
  7877   0035FE                     u4310:
  7878   0035FE  5003               	movf	___awmod@divisor^0,w,c
  7879   003600  5E01               	subwf	___awmod@dividend^0,f,c
  7880   003602  5004               	movf	(___awmod@divisor+1)^0,w,c
  7881   003604  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7882   003606                     l4470:
  7883   003606  90D8               	bcf	status,0,c
  7884   003608  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7885   00360A  3203               	rrcf	___awmod@divisor^0,f,c
  7886   00360C  2E05               	decfsz	___awmod@counter^0,f,c
  7887   00360E  EFF4  F01A         	goto	l4466
  7888   003612                     l4474:
  7889   003612  5006               	movf	___awmod@sign^0,w,c
  7890   003614  B4D8               	btfsc	status,2,c
  7891   003616  EF0F  F01B         	goto	u4321
  7892   00361A  EF11  F01B         	goto	u4320
  7893   00361E                     u4321:
  7894   00361E  EF15  F01B         	goto	l4478
  7895   003622                     u4320:
  7896   003622  6C01               	negf	___awmod@dividend^0,c
  7897   003624  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7898   003626  B0D8               	btfsc	status,0,c
  7899   003628  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7900   00362A                     l4478:
  7901   00362A  C001  F001         	movff	___awmod@dividend,?___awmod
  7902   00362E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7903   003632  0012               	return		;funcret
  7904   003634                     __end_of___awmod:
  7905                           	callstack 0
  7906                           
  7907 ;; *************** function ___awdiv *****************
  7908 ;; Defined at:
  7909 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  7910 ;; Parameters:    Size  Location     Type
  7911 ;;  dividend        2    0[COMRAM] int 
  7912 ;;  divisor         2    2[COMRAM] int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  quotient        2    6[COMRAM] int 
  7915 ;;  sign            1    5[COMRAM] unsigned char 
  7916 ;;  counter         1    4[COMRAM] unsigned char 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2    0[COMRAM] int 
  7919 ;; Registers used:
  7920 ;;		wreg, status,2, status,0
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;Total ram usage:        8 bytes
  7931 ;; Hardware stack levels used: 1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_dtoa
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text33
  7940   00334E                     __ptext33:
  7941                           	callstack 0
  7942   00334E                     ___awdiv:
  7943                           	callstack 25
  7944   00334E  0E00               	movlw	0
  7945   003350  6E06               	movwf	___awdiv@sign^0,c
  7946   003352  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7947   003354  EFB0  F019         	goto	u4210
  7948   003358  EFAE  F019         	goto	u4211
  7949   00335C                     u4211:
  7950   00335C  EFB6  F019         	goto	l4410
  7951   003360                     u4210:
  7952   003360  6C03               	negf	___awdiv@divisor^0,c
  7953   003362  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7954   003364  B0D8               	btfsc	status,0,c
  7955   003366  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7956   003368  0E01               	movlw	1
  7957   00336A  6E06               	movwf	___awdiv@sign^0,c
  7958   00336C                     l4410:
  7959   00336C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7960   00336E  EFBD  F019         	goto	u4220
  7961   003372  EFBB  F019         	goto	u4221
  7962   003376                     u4221:
  7963   003376  EFC3  F019         	goto	l4416
  7964   00337A                     u4220:
  7965   00337A  6C01               	negf	___awdiv@dividend^0,c
  7966   00337C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7967   00337E  B0D8               	btfsc	status,0,c
  7968   003380  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7969   003382  0E01               	movlw	1
  7970   003384  1A06               	xorwf	___awdiv@sign^0,f,c
  7971   003386                     l4416:
  7972   003386  0E00               	movlw	0
  7973   003388  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7974   00338A  0E00               	movlw	0
  7975   00338C  6E07               	movwf	___awdiv@quotient^0,c
  7976   00338E  5003               	movf	___awdiv@divisor^0,w,c
  7977   003390  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7978   003392  B4D8               	btfsc	status,2,c
  7979   003394  EFCE  F019         	goto	u4231
  7980   003398  EFD0  F019         	goto	u4230
  7981   00339C                     u4231:
  7982   00339C  EFF8  F019         	goto	l4438
  7983   0033A0                     u4230:
  7984   0033A0  0E01               	movlw	1
  7985   0033A2  6E05               	movwf	___awdiv@counter^0,c
  7986   0033A4  EFD8  F019         	goto	l4424
  7987   0033A8                     l4422:
  7988   0033A8  90D8               	bcf	status,0,c
  7989   0033AA  3603               	rlcf	___awdiv@divisor^0,f,c
  7990   0033AC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7991   0033AE  2A05               	incf	___awdiv@counter^0,f,c
  7992   0033B0                     l4424:
  7993   0033B0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7994   0033B2  EFDD  F019         	goto	u4241
  7995   0033B6  EFDF  F019         	goto	u4240
  7996   0033BA                     u4241:
  7997   0033BA  EFD4  F019         	goto	l4422
  7998   0033BE                     u4240:
  7999   0033BE                     l4426:
  8000   0033BE  90D8               	bcf	status,0,c
  8001   0033C0  3607               	rlcf	___awdiv@quotient^0,f,c
  8002   0033C2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8003   0033C4  5003               	movf	___awdiv@divisor^0,w,c
  8004   0033C6  5C01               	subwf	___awdiv@dividend^0,w,c
  8005   0033C8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8006   0033CA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8007   0033CC  A0D8               	btfss	status,0,c
  8008   0033CE  EFEB  F019         	goto	u4251
  8009   0033D2  EFED  F019         	goto	u4250
  8010   0033D6                     u4251:
  8011   0033D6  EFF2  F019         	goto	l4434
  8012   0033DA                     u4250:
  8013   0033DA  5003               	movf	___awdiv@divisor^0,w,c
  8014   0033DC  5E01               	subwf	___awdiv@dividend^0,f,c
  8015   0033DE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8016   0033E0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8017   0033E2  8007               	bsf	___awdiv@quotient^0,0,c
  8018   0033E4                     l4434:
  8019   0033E4  90D8               	bcf	status,0,c
  8020   0033E6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8021   0033E8  3203               	rrcf	___awdiv@divisor^0,f,c
  8022   0033EA  2E05               	decfsz	___awdiv@counter^0,f,c
  8023   0033EC  EFDF  F019         	goto	l4426
  8024   0033F0                     l4438:
  8025   0033F0  5006               	movf	___awdiv@sign^0,w,c
  8026   0033F2  B4D8               	btfsc	status,2,c
  8027   0033F4  EFFE  F019         	goto	u4261
  8028   0033F8  EF00  F01A         	goto	u4260
  8029   0033FC                     u4261:
  8030   0033FC  EF04  F01A         	goto	l4442
  8031   003400                     u4260:
  8032   003400  6C07               	negf	___awdiv@quotient^0,c
  8033   003402  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8034   003404  B0D8               	btfsc	status,0,c
  8035   003406  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8036   003408                     l4442:
  8037   003408  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8038   00340C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8039   003410  0012               	return		;funcret
  8040   003412                     __end_of___awdiv:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _sendStringSerial4 *****************
  8044 ;; Defined at:
  8045 ;;		line 41 in file "serial.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  string          2    1[COMRAM] PTR unsigned char 
  8048 ;;		 -> send2USART@hue_char(50), sendAllReadings@buffer(10), calibration_routine@cal_state(20), test@led_state(50), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8060 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;Total ram usage:        2 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; Hardware stack levels required when called: 1
  8067 ;; This function calls:
  8068 ;;		_sendCharSerial4
  8069 ;; This function is called by:
  8070 ;;		_test
  8071 ;;		_calibration_routine
  8072 ;;		_send2USART
  8073 ;;		_sendAllReadings
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text34
  8078   003C6A                     __ptext34:
  8079                           	callstack 0
  8080   003C6A                     _sendStringSerial4:
  8081                           	callstack 28
  8082   003C6A                     
  8083                           ;serial.c: 44:     while(*string != 0){
  8084   003C6A  EF44  F01E         	goto	l4714
  8085   003C6E                     l4708:
  8086                           
  8087                           ;serial.c: 46:   sendCharSerial4(*string++);
  8088   003C6E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8089   003C72  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8090   003C76  50DF               	movf	indf2,w,c
  8091   003C78  ECFE  F01E         	call	_sendCharSerial4
  8092   003C7C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8093   003C7E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8094   003C80                     
  8095                           ;serial.c: 47:         _delay((unsigned long)((20)*(64000000/4000000.0)));
  8096   003C80  0E6A               	movlw	106
  8097   003C82                     u5077:
  8098   003C82  2EE8               	decfsz	wreg,f,c
  8099   003C84  D7FE               	bra	u5077
  8100   003C86  D000               	nop2	
  8101   003C88                     l4714:
  8102                           
  8103                           ;serial.c: 44:     while(*string != 0){
  8104   003C88  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8105   003C8C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8106   003C90  50DF               	movf	indf2,w,c
  8107   003C92  A4D8               	btfss	status,2,c
  8108   003C94  EF4E  F01E         	goto	u4611
  8109   003C98  EF50  F01E         	goto	u4610
  8110   003C9C                     u4611:
  8111   003C9C  EF37  F01E         	goto	l4708
  8112   003CA0                     u4610:
  8113   003CA0  0012               	return		;funcret
  8114   003CA2                     __end_of_sendStringSerial4:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function _sendCharSerial4 *****************
  8118 ;; Defined at:
  8119 ;;		line 35 in file "serial.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  charToSend      1    wreg     unsigned char 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  charToSend      1    0[COMRAM] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8137 ;;Total ram usage:        1 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_sendStringSerial4
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text35
  8147   003DFC                     __ptext35:
  8148                           	callstack 0
  8149   003DFC                     _sendCharSerial4:
  8150                           	callstack 28
  8151                           
  8152                           ;incstack = 0
  8153                           ;sendCharSerial4@charToSend stored from wreg
  8154   003DFC  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8155   003DFE                     l441:
  8156   003DFE  010E               	movlb	14	; () banked
  8157   003E00  A537               	btfss	55,2,b	;volatile
  8158   003E02  EF05  F01F         	goto	u4591
  8159   003E06  EF07  F01F         	goto	u4590
  8160   003E0A                     u4591:
  8161   003E0A  EFFF  F01E         	goto	l441
  8162   003E0E                     u4590:
  8163   003E0E                     
  8164                           ; BSR set to: 14
  8165                           ;serial.c: 37:     TX4REG = charToSend;
  8166   003E0E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8167   003E12                     
  8168                           ; BSR set to: 14
  8169   003E12  0012               	return		;funcret
  8170   003E14                     __end_of_sendCharSerial4:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _color_read_Red *****************
  8174 ;; Defined at:
  8175 ;;		line 31 in file "color.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  tmp             2    9[COMRAM] unsigned int 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  2    4[COMRAM] unsigned int 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8191 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;Total ram usage:        7 bytes
  8194 ;; Hardware stack levels used: 1
  8195 ;; Hardware stack levels required when called: 2
  8196 ;; This function calls:
  8197 ;;		_I2C_2_Master_Read
  8198 ;;		_I2C_2_Master_RepStart
  8199 ;;		_I2C_2_Master_Start
  8200 ;;		_I2C_2_Master_Stop
  8201 ;;		_I2C_2_Master_Write
  8202 ;; This function is called by:
  8203 ;;		_calibration_routine
  8204 ;;		_reading_values
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text36
  8209   0039AA                     __ptext36:
  8210                           	callstack 0
  8211   0039AA                     _color_read_Red:
  8212                           	callstack 26
  8213   0039AA                     
  8214                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  8215   0039AA  EC15  F01F         	call	_I2C_2_Master_Start	;wreg free
  8216                           
  8217                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  8218   0039AE  0E52               	movlw	82
  8219   0039B0  EC0A  F01F         	call	_I2C_2_Master_Write
  8220                           
  8221                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
  8222   0039B4  0EB6               	movlw	182
  8223   0039B6  EC0A  F01F         	call	_I2C_2_Master_Write
  8224                           
  8225                           ;color.c: 37:  I2C_2_Master_RepStart();
  8226   0039BA  EC1A  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  8227                           
  8228                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  8229   0039BE  0E53               	movlw	83
  8230   0039C0  EC0A  F01F         	call	_I2C_2_Master_Write
  8231                           
  8232                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  8233   0039C4  0E01               	movlw	1
  8234   0039C6  ECB9  F01D         	call	_I2C_2_Master_Read
  8235   0039CA  6E07               	movwf	??_color_read_Red^0,c
  8236   0039CC  5007               	movf	??_color_read_Red^0,w,c
  8237   0039CE  6E0A               	movwf	color_read_Red@tmp^0,c
  8238   0039D0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8239                           
  8240                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8241   0039D2  0E00               	movlw	0
  8242   0039D4  ECB9  F01D         	call	_I2C_2_Master_Read
  8243   0039D8  6E07               	movwf	??_color_read_Red^0,c
  8244   0039DA  5007               	movf	??_color_read_Red^0,w,c
  8245   0039DC  6E09               	movwf	(??_color_read_Red+2)^0,c
  8246   0039DE  6A08               	clrf	(??_color_read_Red+1)^0,c
  8247   0039E0  500A               	movf	color_read_Red@tmp^0,w,c
  8248   0039E2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8249   0039E4  6E0A               	movwf	color_read_Red@tmp^0,c
  8250   0039E6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8251   0039E8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8252   0039EA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8253                           
  8254                           ;color.c: 41:  I2C_2_Master_Stop();
  8255   0039EC  EC10  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8256   0039F0                     
  8257                           ;color.c: 42:  return tmp;
  8258   0039F0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8259   0039F4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8260   0039F8  0012               	return		;funcret
  8261   0039FA                     __end_of_color_read_Red:
  8262                           	callstack 0
  8263                           
  8264 ;; *************** function _color_read_Green *****************
  8265 ;; Defined at:
  8266 ;;		line 45 in file "color.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;		None
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  tmp             2    9[COMRAM] unsigned int 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  2    4[COMRAM] unsigned int 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2, status,0, cstack
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;Total ram usage:        7 bytes
  8285 ;; Hardware stack levels used: 1
  8286 ;; Hardware stack levels required when called: 2
  8287 ;; This function calls:
  8288 ;;		_I2C_2_Master_Read
  8289 ;;		_I2C_2_Master_RepStart
  8290 ;;		_I2C_2_Master_Start
  8291 ;;		_I2C_2_Master_Stop
  8292 ;;		_I2C_2_Master_Write
  8293 ;; This function is called by:
  8294 ;;		_calibration_routine
  8295 ;;		_reading_values
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text37
  8300   0039FA                     __ptext37:
  8301                           	callstack 0
  8302   0039FA                     _color_read_Green:
  8303                           	callstack 26
  8304   0039FA                     
  8305                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  8306   0039FA  EC15  F01F         	call	_I2C_2_Master_Start	;wreg free
  8307                           
  8308                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  8309   0039FE  0E52               	movlw	82
  8310   003A00  EC0A  F01F         	call	_I2C_2_Master_Write
  8311                           
  8312                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  8313   003A04  0EB8               	movlw	184
  8314   003A06  EC0A  F01F         	call	_I2C_2_Master_Write
  8315                           
  8316                           ;color.c: 51:  I2C_2_Master_RepStart();
  8317   003A0A  EC1A  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  8318                           
  8319                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  8320   003A0E  0E53               	movlw	83
  8321   003A10  EC0A  F01F         	call	_I2C_2_Master_Write
  8322                           
  8323                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  8324   003A14  0E01               	movlw	1
  8325   003A16  ECB9  F01D         	call	_I2C_2_Master_Read
  8326   003A1A  6E07               	movwf	??_color_read_Green^0,c
  8327   003A1C  5007               	movf	??_color_read_Green^0,w,c
  8328   003A1E  6E0A               	movwf	color_read_Green@tmp^0,c
  8329   003A20  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8330                           
  8331                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8332   003A22  0E00               	movlw	0
  8333   003A24  ECB9  F01D         	call	_I2C_2_Master_Read
  8334   003A28  6E07               	movwf	??_color_read_Green^0,c
  8335   003A2A  5007               	movf	??_color_read_Green^0,w,c
  8336   003A2C  6E09               	movwf	(??_color_read_Green+2)^0,c
  8337   003A2E  6A08               	clrf	(??_color_read_Green+1)^0,c
  8338   003A30  500A               	movf	color_read_Green@tmp^0,w,c
  8339   003A32  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  8340   003A34  6E0A               	movwf	color_read_Green@tmp^0,c
  8341   003A36  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  8342   003A38  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  8343   003A3A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  8344                           
  8345                           ;color.c: 55:  I2C_2_Master_Stop();
  8346   003A3C  EC10  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8347   003A40                     
  8348                           ;color.c: 56:  return tmp;
  8349   003A40  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  8350   003A44  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8351   003A48  0012               	return		;funcret
  8352   003A4A                     __end_of_color_read_Green:
  8353                           	callstack 0
  8354                           
  8355 ;; *************** function _color_read_Clear *****************
  8356 ;; Defined at:
  8357 ;;		line 74 in file "color.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;		None
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  tmp             2    9[COMRAM] unsigned int 
  8362 ;; Return value:  Size  Location     Type
  8363 ;;                  2    4[COMRAM] unsigned int 
  8364 ;; Registers used:
  8365 ;;		wreg, status,2, status,0, cstack
  8366 ;; Tracked objects:
  8367 ;;		On entry : 0/0
  8368 ;;		On exit  : 0/0
  8369 ;;		Unchanged: 0/0
  8370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8375 ;;Total ram usage:        7 bytes
  8376 ;; Hardware stack levels used: 1
  8377 ;; Hardware stack levels required when called: 2
  8378 ;; This function calls:
  8379 ;;		_I2C_2_Master_Read
  8380 ;;		_I2C_2_Master_RepStart
  8381 ;;		_I2C_2_Master_Start
  8382 ;;		_I2C_2_Master_Stop
  8383 ;;		_I2C_2_Master_Write
  8384 ;; This function is called by:
  8385 ;;		_calibration_routine
  8386 ;;		_reading_values
  8387 ;; This function uses a non-reentrant model
  8388 ;;
  8389                           
  8390                           	psect	text38
  8391   003A4A                     __ptext38:
  8392                           	callstack 0
  8393   003A4A                     _color_read_Clear:
  8394                           	callstack 26
  8395   003A4A                     
  8396                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  8397   003A4A  EC15  F01F         	call	_I2C_2_Master_Start	;wreg free
  8398                           
  8399                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  8400   003A4E  0E52               	movlw	82
  8401   003A50  EC0A  F01F         	call	_I2C_2_Master_Write
  8402                           
  8403                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  8404   003A54  0EB4               	movlw	180
  8405   003A56  EC0A  F01F         	call	_I2C_2_Master_Write
  8406                           
  8407                           ;color.c: 80:  I2C_2_Master_RepStart();
  8408   003A5A  EC1A  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  8409                           
  8410                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  8411   003A5E  0E53               	movlw	83
  8412   003A60  EC0A  F01F         	call	_I2C_2_Master_Write
  8413                           
  8414                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  8415   003A64  0E01               	movlw	1
  8416   003A66  ECB9  F01D         	call	_I2C_2_Master_Read
  8417   003A6A  6E07               	movwf	??_color_read_Clear^0,c
  8418   003A6C  5007               	movf	??_color_read_Clear^0,w,c
  8419   003A6E  6E0A               	movwf	color_read_Clear@tmp^0,c
  8420   003A70  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  8421                           
  8422                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8423   003A72  0E00               	movlw	0
  8424   003A74  ECB9  F01D         	call	_I2C_2_Master_Read
  8425   003A78  6E07               	movwf	??_color_read_Clear^0,c
  8426   003A7A  5007               	movf	??_color_read_Clear^0,w,c
  8427   003A7C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  8428   003A7E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  8429   003A80  500A               	movf	color_read_Clear@tmp^0,w,c
  8430   003A82  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  8431   003A84  6E0A               	movwf	color_read_Clear@tmp^0,c
  8432   003A86  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  8433   003A88  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  8434   003A8A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  8435                           
  8436                           ;color.c: 84:  I2C_2_Master_Stop();
  8437   003A8C  EC10  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8438   003A90                     
  8439                           ;color.c: 85:  return tmp;
  8440   003A90  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  8441   003A94  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  8442   003A98  0012               	return		;funcret
  8443   003A9A                     __end_of_color_read_Clear:
  8444                           	callstack 0
  8445                           
  8446 ;; *************** function _color_read_Blue *****************
  8447 ;; Defined at:
  8448 ;;		line 59 in file "color.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  tmp             2    9[COMRAM] unsigned int 
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  2    4[COMRAM] unsigned int 
  8455 ;; Registers used:
  8456 ;;		wreg, status,2, status,0, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8464 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;Total ram usage:        7 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 2
  8469 ;; This function calls:
  8470 ;;		_I2C_2_Master_Read
  8471 ;;		_I2C_2_Master_RepStart
  8472 ;;		_I2C_2_Master_Start
  8473 ;;		_I2C_2_Master_Stop
  8474 ;;		_I2C_2_Master_Write
  8475 ;; This function is called by:
  8476 ;;		_calibration_routine
  8477 ;;		_reading_values
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text39
  8482   003A9A                     __ptext39:
  8483                           	callstack 0
  8484   003A9A                     _color_read_Blue:
  8485                           	callstack 26
  8486   003A9A                     
  8487                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  8488   003A9A  EC15  F01F         	call	_I2C_2_Master_Start	;wreg free
  8489                           
  8490                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  8491   003A9E  0E52               	movlw	82
  8492   003AA0  EC0A  F01F         	call	_I2C_2_Master_Write
  8493                           
  8494                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x1A);
  8495   003AA4  0EBA               	movlw	186
  8496   003AA6  EC0A  F01F         	call	_I2C_2_Master_Write
  8497                           
  8498                           ;color.c: 65:  I2C_2_Master_RepStart();
  8499   003AAA  EC1A  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  8500                           
  8501                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  8502   003AAE  0E53               	movlw	83
  8503   003AB0  EC0A  F01F         	call	_I2C_2_Master_Write
  8504                           
  8505                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  8506   003AB4  0E01               	movlw	1
  8507   003AB6  ECB9  F01D         	call	_I2C_2_Master_Read
  8508   003ABA  6E07               	movwf	??_color_read_Blue^0,c
  8509   003ABC  5007               	movf	??_color_read_Blue^0,w,c
  8510   003ABE  6E0A               	movwf	color_read_Blue@tmp^0,c
  8511   003AC0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  8512                           
  8513                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8514   003AC2  0E00               	movlw	0
  8515   003AC4  ECB9  F01D         	call	_I2C_2_Master_Read
  8516   003AC8  6E07               	movwf	??_color_read_Blue^0,c
  8517   003ACA  5007               	movf	??_color_read_Blue^0,w,c
  8518   003ACC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  8519   003ACE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  8520   003AD0  500A               	movf	color_read_Blue@tmp^0,w,c
  8521   003AD2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  8522   003AD4  6E0A               	movwf	color_read_Blue@tmp^0,c
  8523   003AD6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  8524   003AD8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  8525   003ADA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  8526                           
  8527                           ;color.c: 69:  I2C_2_Master_Stop();
  8528   003ADC  EC10  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8529   003AE0                     
  8530                           ;color.c: 70:  return tmp;
  8531   003AE0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  8532   003AE4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8533   003AE8  0012               	return		;funcret
  8534   003AEA                     __end_of_color_read_Blue:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _I2C_2_Master_Write *****************
  8538 ;; Defined at:
  8539 ;;		line 45 in file "i2c.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  data_byte       1    wreg     unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  data_byte       1    1[COMRAM] unsigned char 
  8544 ;; Return value:  Size  Location     Type
  8545 ;;                  1    wreg      void 
  8546 ;; Registers used:
  8547 ;;		wreg, status,2, status,0, cstack
  8548 ;; Tracked objects:
  8549 ;;		On entry : 0/0
  8550 ;;		On exit  : 0/0
  8551 ;;		Unchanged: 0/0
  8552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;Total ram usage:        1 bytes
  8558 ;; Hardware stack levels used: 1
  8559 ;; Hardware stack levels required when called: 1
  8560 ;; This function calls:
  8561 ;;		_I2C_2_Master_Idle
  8562 ;; This function is called by:
  8563 ;;		_color_writetoaddr
  8564 ;;		_color_read_Red
  8565 ;;		_color_read_Green
  8566 ;;		_color_read_Blue
  8567 ;;		_color_read_Clear
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text40
  8572   003E14                     __ptext40:
  8573                           	callstack 0
  8574   003E14                     _I2C_2_Master_Write:
  8575                           	callstack 26
  8576                           
  8577                           ;incstack = 0
  8578                           ;I2C_2_Master_Write@data_byte stored from wreg
  8579   003E14  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8580   003E16                     
  8581                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8582   003E16  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8583   003E1A                     
  8584                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8585   003E1A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8586   003E1E  0012               	return		;funcret
  8587   003E20                     __end_of_I2C_2_Master_Write:
  8588                           	callstack 0
  8589                           
  8590 ;; *************** function _I2C_2_Master_Stop *****************
  8591 ;; Defined at:
  8592 ;;		line 39 in file "i2c.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;		None
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      void 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8610 ;;Total ram usage:        0 bytes
  8611 ;; Hardware stack levels used: 1
  8612 ;; Hardware stack levels required when called: 1
  8613 ;; This function calls:
  8614 ;;		_I2C_2_Master_Idle
  8615 ;; This function is called by:
  8616 ;;		_color_writetoaddr
  8617 ;;		_color_read_Red
  8618 ;;		_color_read_Green
  8619 ;;		_color_read_Blue
  8620 ;;		_color_read_Clear
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text41
  8625   003E20                     __ptext41:
  8626                           	callstack 0
  8627   003E20                     _I2C_2_Master_Stop:
  8628                           	callstack 26
  8629   003E20                     
  8630                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8631   003E20  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8632   003E24                     
  8633                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8634   003E24  010E               	movlb	14	; () banked
  8635   003E26  85DA               	bsf	218,2,b	;volatile
  8636   003E28                     
  8637                           ; BSR set to: 14
  8638   003E28  0012               	return		;funcret
  8639   003E2A                     __end_of_I2C_2_Master_Stop:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _I2C_2_Master_Start *****************
  8643 ;; Defined at:
  8644 ;;		line 27 in file "i2c.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0, cstack
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;Total ram usage:        0 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 1
  8665 ;; This function calls:
  8666 ;;		_I2C_2_Master_Idle
  8667 ;; This function is called by:
  8668 ;;		_color_writetoaddr
  8669 ;;		_color_read_Red
  8670 ;;		_color_read_Green
  8671 ;;		_color_read_Blue
  8672 ;;		_color_read_Clear
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text42
  8677   003E2A                     __ptext42:
  8678                           	callstack 0
  8679   003E2A                     _I2C_2_Master_Start:
  8680                           	callstack 26
  8681   003E2A                     
  8682                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8683   003E2A  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8684   003E2E                     
  8685                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8686   003E2E  010E               	movlb	14	; () banked
  8687   003E30  81DA               	bsf	218,0,b	;volatile
  8688   003E32                     
  8689                           ; BSR set to: 14
  8690   003E32  0012               	return		;funcret
  8691   003E34                     __end_of_I2C_2_Master_Start:
  8692                           	callstack 0
  8693                           
  8694 ;; *************** function _I2C_2_Master_RepStart *****************
  8695 ;; Defined at:
  8696 ;;		line 33 in file "i2c.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;		None
  8699 ;; Auto vars:     Size  Location     Type
  8700 ;;		None
  8701 ;; Return value:  Size  Location     Type
  8702 ;;                  1    wreg      void 
  8703 ;; Registers used:
  8704 ;;		wreg, status,2, status,0, cstack
  8705 ;; Tracked objects:
  8706 ;;		On entry : 0/0
  8707 ;;		On exit  : 0/0
  8708 ;;		Unchanged: 0/0
  8709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8714 ;;Total ram usage:        0 bytes
  8715 ;; Hardware stack levels used: 1
  8716 ;; Hardware stack levels required when called: 1
  8717 ;; This function calls:
  8718 ;;		_I2C_2_Master_Idle
  8719 ;; This function is called by:
  8720 ;;		_color_read_Red
  8721 ;;		_color_read_Green
  8722 ;;		_color_read_Blue
  8723 ;;		_color_read_Clear
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text43
  8728   003E34                     __ptext43:
  8729                           	callstack 0
  8730   003E34                     _I2C_2_Master_RepStart:
  8731                           	callstack 26
  8732   003E34                     
  8733                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8734   003E34  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8735   003E38                     
  8736                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8737   003E38  010E               	movlb	14	; () banked
  8738   003E3A  83DA               	bsf	218,1,b	;volatile
  8739   003E3C                     
  8740                           ; BSR set to: 14
  8741   003E3C  0012               	return		;funcret
  8742   003E3E                     __end_of_I2C_2_Master_RepStart:
  8743                           	callstack 0
  8744                           
  8745 ;; *************** function _I2C_2_Master_Read *****************
  8746 ;; Defined at:
  8747 ;;		line 51 in file "i2c.c"
  8748 ;; Parameters:    Size  Location     Type
  8749 ;;  ack             1    wreg     unsigned char 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  ack             1    2[COMRAM] unsigned char 
  8752 ;;  tmp             1    3[COMRAM] unsigned char 
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      unsigned char 
  8755 ;; Registers used:
  8756 ;;		wreg, status,2, status,0, cstack
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8763 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8764 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8766 ;;Total ram usage:        3 bytes
  8767 ;; Hardware stack levels used: 1
  8768 ;; Hardware stack levels required when called: 1
  8769 ;; This function calls:
  8770 ;;		_I2C_2_Master_Idle
  8771 ;; This function is called by:
  8772 ;;		_color_read_Red
  8773 ;;		_color_read_Green
  8774 ;;		_color_read_Blue
  8775 ;;		_color_read_Clear
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text44
  8780   003B72                     __ptext44:
  8781                           	callstack 0
  8782   003B72                     _I2C_2_Master_Read:
  8783                           	callstack 26
  8784                           
  8785                           ; BSR set to: 14
  8786                           ;incstack = 0
  8787                           ;I2C_2_Master_Read@ack stored from wreg
  8788   003B72  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  8789   003B74                     
  8790                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8791   003B74  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8792   003B78                     
  8793                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8794   003B78  010E               	movlb	14	; () banked
  8795   003B7A  87DA               	bsf	218,3,b	;volatile
  8796                           
  8797                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8798   003B7C  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8799   003B80                     
  8800                           ;i2c.c: 57:   tmp = SSP2BUF;
  8801   003B80  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8802                           
  8803                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8804   003B84  EC9A  F01E         	call	_I2C_2_Master_Idle	;wreg free
  8805   003B88                     
  8806                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8807   003B88  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8808   003B8A  B4D8               	btfsc	status,2,c
  8809   003B8C  EFCA  F01D         	goto	u4571
  8810   003B90  EFCE  F01D         	goto	u4570
  8811   003B94                     u4571:
  8812   003B94  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8813   003B96  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8814   003B98  EFCF  F01D         	goto	u4588
  8815   003B9C                     u4570:
  8816   003B9C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8817   003B9E                     u4588:
  8818   003B9E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8819   003BA0  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8820   003BA2  010E               	movlb	14	; () banked
  8821   003BA4  51DA               	movf	218,w,b	;volatile
  8822   003BA6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8823   003BA8  0BDF               	andlw	-33
  8824   003BAA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8825   003BAC  6FDA               	movwf	218,b	;volatile
  8826   003BAE                     
  8827                           ; BSR set to: 14
  8828                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8829   003BAE  89DA               	bsf	218,4,b	;volatile
  8830   003BB0                     
  8831                           ; BSR set to: 14
  8832                           ;i2c.c: 61:   return tmp;
  8833   003BB0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8834   003BB2                     
  8835                           ; BSR set to: 14
  8836   003BB2  0012               	return		;funcret
  8837   003BB4                     __end_of_I2C_2_Master_Read:
  8838                           	callstack 0
  8839                           
  8840 ;; *************** function _I2C_2_Master_Idle *****************
  8841 ;; Defined at:
  8842 ;;		line 22 in file "i2c.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;		None
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;		None
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;Total ram usage:        1 bytes
  8861 ;; Hardware stack levels used: 1
  8862 ;; This function calls:
  8863 ;;		Nothing
  8864 ;; This function is called by:
  8865 ;;		_I2C_2_Master_Start
  8866 ;;		_I2C_2_Master_RepStart
  8867 ;;		_I2C_2_Master_Stop
  8868 ;;		_I2C_2_Master_Write
  8869 ;;		_I2C_2_Master_Read
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text45
  8874   003D34                     __ptext45:
  8875                           	callstack 0
  8876   003D34                     _I2C_2_Master_Idle:
  8877                           	callstack 26
  8878   003D34                     l168:
  8879   003D34  010E               	movlb	14	; () banked
  8880   003D36  B5D8               	btfsc	216,2,b	;volatile
  8881   003D38  EFA0  F01E         	goto	u4501
  8882   003D3C  EFA2  F01E         	goto	u4500
  8883   003D40                     u4501:
  8884   003D40  EF9A  F01E         	goto	l168
  8885   003D44                     u4500:
  8886   003D44                     
  8887                           ; BSR set to: 14
  8888   003D44  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8889   003D48  0E1F               	movlw	31
  8890   003D4A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8891   003D4C  A4D8               	btfss	status,2,c
  8892   003D4E  EFAB  F01E         	goto	u4511
  8893   003D52  EFAD  F01E         	goto	u4510
  8894   003D56                     u4511:
  8895   003D56  EF9A  F01E         	goto	l168
  8896   003D5A                     u4510:
  8897   003D5A                     
  8898                           ; BSR set to: 14
  8899   003D5A  0012               	return		;funcret
  8900   003D5C                     __end_of_I2C_2_Master_Idle:
  8901                           	callstack 0
  8902                           
  8903 ;; *************** function _ADC_init *****************
  8904 ;; Defined at:
  8905 ;;		line 9 in file "ADC.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;		None
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8923 ;;Total ram usage:        0 bytes
  8924 ;; Hardware stack levels used: 1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text46
  8933   003DE2                     __ptext46:
  8934                           	callstack 0
  8935   003DE2                     _ADC_init:
  8936                           	callstack 30
  8937   003DE2                     
  8938                           ;ADC.c: 11:     TRISFbits.TRISF6=1;
  8939   003DE2  8C86               	bsf	134,6,c	;volatile
  8940                           
  8941                           ;ADC.c: 12:     ANSELFbits.ANSELF6=1;
  8942   003DE4  010E               	movlb	14	; () banked
  8943   003DE6  8DB4               	bsf	180,6,b	;volatile
  8944                           
  8945                           ;ADC.c: 15:     ADREFbits.ADNREF = 0;
  8946   003DE8  010F               	movlb	15	; () banked
  8947   003DEA  9958               	bcf	88,4,b	;volatile
  8948   003DEC                     
  8949                           ; BSR set to: 15
  8950                           ;ADC.c: 16:     ADREFbits.ADPREF = 0b00;
  8951   003DEC  0EFC               	movlw	-4
  8952   003DEE  1758               	andwf	88,f,b	;volatile
  8953                           
  8954                           ;ADC.c: 17:     ADPCH=0b101110;
  8955   003DF0  0E2E               	movlw	46
  8956   003DF2  6F5F               	movwf	95,b	;volatile
  8957   003DF4                     
  8958                           ; BSR set to: 15
  8959                           ;ADC.c: 18:     ADCON0bits.ADFM = 0;
  8960   003DF4  9460               	bcf	96,2,c	;volatile
  8961   003DF6                     
  8962                           ; BSR set to: 15
  8963                           ;ADC.c: 19:     ADCON0bits.ADCS = 1;
  8964   003DF6  8860               	bsf	96,4,c	;volatile
  8965   003DF8                     
  8966                           ; BSR set to: 15
  8967                           ;ADC.c: 20:     ADCON0bits.ADON = 1;
  8968   003DF8  8E60               	bsf	96,7,c	;volatile
  8969   003DFA                     
  8970                           ; BSR set to: 15
  8971   003DFA  0012               	return		;funcret
  8972   003DFC                     __end_of_ADC_init:
  8973                           	callstack 0
  8974                           
  8975                           	psect	rparam
  8976   000000                     
  8977                           	psect	config
  8978                           
  8979                           ;Config register CONFIG1L @ 0x300000
  8980                           ;	External Oscillator mode Selection bits
  8981                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8982                           ;	Power-up default value for COSC bits
  8983                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8984   300000                     	org	3145728
  8985   300000  AA                 	db	170
  8986                           
  8987                           ;Config register CONFIG1H @ 0x300001
  8988                           ;	unspecified, using default values
  8989                           ;	Clock Out Enable bit
  8990                           ;	CLKOUTEN = 0x1, unprogrammed default
  8991                           ;	Clock Switch Enable bit
  8992                           ;	CSWEN = 0x1, unprogrammed default
  8993                           ;	Fail-Safe Clock Monitor Enable bit
  8994                           ;	FCMEN = 0x1, unprogrammed default
  8995   300001                     	org	3145729
  8996   300001  FF                 	db	255
  8997                           
  8998                           ;Config register CONFIG3L @ 0x300004
  8999                           ;	WDT Period Select bits
  9000                           ;	WDTCPS = 0x1F, unprogrammed default
  9001                           ;	WDT operating mode
  9002                           ;	WDTE = OFF, WDT Disabled
  9003   300004                     	org	3145732
  9004   300004  9F                 	db	159
  9005                           
  9006                           ;Config register CONFIG3H @ 0x300005
  9007                           ;	unspecified, using default values
  9008                           ;	WDT Window Select bits
  9009                           ;	WDTCWS = 0x7, unprogrammed default
  9010                           ;	WDT input clock selector
  9011                           ;	WDTCCS = 0x7, unprogrammed default
  9012   300005                     	org	3145733
  9013   300005  FF                 	db	255
  9014                           tosu	equ	0xFFF
  9015                           tosh	equ	0xFFE
  9016                           tosl	equ	0xFFD
  9017                           stkptr	equ	0xFFC
  9018                           pclatu	equ	0xFFB
  9019                           pclath	equ	0xFFA
  9020                           pcl	equ	0xFF9
  9021                           tblptru	equ	0xFF8
  9022                           tblptrh	equ	0xFF7
  9023                           tblptrl	equ	0xFF6
  9024                           tablat	equ	0xFF5
  9025                           prodh	equ	0xFF4
  9026                           prodl	equ	0xFF3
  9027                           indf0	equ	0xFEF
  9028                           postinc0	equ	0xFEE
  9029                           postdec0	equ	0xFED
  9030                           preinc0	equ	0xFEC
  9031                           plusw0	equ	0xFEB
  9032                           fsr0h	equ	0xFEA
  9033                           fsr0l	equ	0xFE9
  9034                           wreg	equ	0xFE8
  9035                           indf1	equ	0xFE7
  9036                           postinc1	equ	0xFE6
  9037                           postdec1	equ	0xFE5
  9038                           preinc1	equ	0xFE4
  9039                           plusw1	equ	0xFE3
  9040                           fsr1h	equ	0xFE2
  9041                           fsr1l	equ	0xFE1
  9042                           bsr	equ	0xFE0
  9043                           indf2	equ	0xFDF
  9044                           postinc2	equ	0xFDE
  9045                           postdec2	equ	0xFDD
  9046                           preinc2	equ	0xFDC
  9047                           plusw2	equ	0xFDB
  9048                           fsr2h	equ	0xFDA
  9049                           fsr2l	equ	0xFD9
  9050                           status	equ	0xFD8

Data Sizes:
    Strings     244
    Constant    0
    Data        1
    BSS         176
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      88
    BANK0           160    118     144
    BANK1           256     54     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    calibration_routine@cCal	PTR struct colors size(2) Largest target is 8
		 -> colorCalibration(BANK1[8]), 

    convert_rgb2hue@cCurr	PTR struct colors size(2) Largest target is 8
		 -> colorCurrent(BANK1[8]), 

    convert_rgb2hue@cMax	PTR struct colors size(2) Largest target is 8
		 -> colorCalibration(BANK1[8]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fullSpeedAhead@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    fullSpeedAhead@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    motorR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    motorR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    moveRed$0	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    moveRed$1	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    reading_values@cCurr	PTR struct colors size(2) Largest target is 8
		 -> colorCurrent(BANK1[8]), 

    S2468$buffer	PTR unsigned char  size(2) Largest target is 0

    S2468$source	PTR const unsigned char  size(2) Largest target is 0

    S29DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    S29DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 50
		 -> calibration_routine@cal_state(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK1[50]), 

    setMotorPWM@m$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    setMotorPWM@m$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> calibration_routine@cal_state(BANK0[20]), send2USART@hue_char(BANK0[50]), sendAllReadings@buffer(COMRAM[10]), test@led_state(BANK1[50]), 

    stop@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    stop@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    stop@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnLeft@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mL$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR2H(BITBIGSFRhhll[1]), CCPR4H(BITBIGSFRlllhlllll[1]), 

    turnRight@mR$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR1H(BITBIGSFRhhll[1]), CCPR3H(BITBIGSFRlllhlllll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[17]), STR_11(CODE[34]), STR_13(CODE[25]), STR_15(CODE[21]), 
		 -> STR_16(CODE[12]), STR_2(CODE[19]), STR_3(CODE[17]), STR_4(CODE[17]), 
		 -> STR_5(CODE[24]), STR_7(CODE[29]), STR_9(CODE[27]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_test
    _test->_convert_rgb2hue
    _send2USART->_sprintf
    _reading_values->_color_read_Blue
    _reading_values->_color_read_Clear
    _reading_values->_color_read_Green
    _reading_values->_color_read_Red
    _convert_rgb2hue->___xotofl
    ___xotofl->___lodiv
    ___lodiv->___omul
    ___flsub->___fladd
    ___fldiv->___flsub
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_routine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _read_prec_or_width->___wmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _sendStringSerial4->_sendCharSerial4
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _test->_convert_rgb2hue

Critical Paths under _main in BANK1

    _main->_test

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   55557
                                             81 COMRAM     2     2      0
                           _ADC_init
                _calibration_routine
                   _color_click_init
                    _initDCmotorsPWM
                         _initUSART4
                               _test
 ---------------------------------------------------------------------------------
 (1) _test                                                56    56      0   42087
                                             79 COMRAM     2     2      0
                                              0 BANK1     54    54      0
                    _convert_rgb2hue
                     _reading_values
                         _send2USART
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send2USART                                          52    50      2   11916
                                             68 COMRAM     2     0      2
                                              0 BANK0     50    50      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _reading_values                                       2     0      2     870
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _convert_rgb2hue                                    122   118      4   17187
                                             75 COMRAM     4     0      4
                                              0 BANK0    118   118      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lodiv
                             ___omul
                           ___xotofl
 ---------------------------------------------------------------------------------
 (3) ___xotofl                                            26    18      8     420
                                             49 COMRAM    26    18      8
                            ___lodiv (ARG)
                             ___omul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___omul                                              24     8     16    1394
                                              0 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (3) ___lodiv                                             25     9     16     358
                                             24 COMRAM    25     9     16
                             ___omul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3801
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2718
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    1744
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1702
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     494
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1551
                                             24 COMRAM    25    17      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_routine                                 24    22      2   12913
                                             68 COMRAM     4     2      2
                                              0 BANK0     20    20      0
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    15      7   10899
                                             48 COMRAM    20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    8607
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     9      3    8119
                                             33 COMRAM    11     8      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2    1452
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1012
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    4939
                                             22 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    2741
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     857
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     613
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     816
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _calibration_routine
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
             ___wmul
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _test
     _convert_rgb2hue
       ___fladd
       ___fldiv
         ___flsub (ARG)
           ___fladd
       ___fleq
       ___flge
       ___flmul
       ___flsub
       ___fltol
       ___lodiv
         ___omul (ARG)
       ___omul
       ___xotofl
         ___lodiv (ARG)
         ___omul (ARG)
     _reading_values
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _send2USART
       _sendStringSerial4
       _sprintf
     _sendStringSerial4
     _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     36      C8       7       78.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     76      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     53      58       1       92.6%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllhll     37      0       0      45        0.0%
BITBIGSFRlllhhl     31      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRlllllh     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhhll       17      0       0      36        0.0%
BITBIGSFRlllhhh     14      0       0      40        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhhlh       E      0       0      33        0.0%
BITBIGSFRlllllh      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllhhh      6      0       0      42        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlhh        5      0       0      37        0.0%
BITBIGSFRlllhhh      3      0       0      41        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRlllhlh      2      0       0      44        0.0%
BITBIGSFRhhlh        2      0       0      35        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllh        1      0       0      38        0.0%
BITBIGSFRhhhll       1      0       0      34        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0      61        0.0%
DATA                 0      0     1B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Mar 12 15:28:21 2024

               _color_read_Red 39AA                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
                 ___fldiv@sign 0029                _color_read_Blue 3A9A                             l62 3DC2  
                           l71 3AE8                             l65 39F8                             l74 3A98  
                           l59 3CD4                             l83 1630                             l68 3A48  
                           l85 1640                             l95 1732                             l87 169A  
                           l97 1742                             l89 16AA                             l99 179C  
                 ___awdiv@sign 0006            ___wmul@multiplicand 0003             convert_rgb2hue@max 0092  
           convert_rgb2hue@hue 00C6             convert_rgb2hue@min 00B2               _color_read_Clear 3A4A  
             _color_read_Green 39FA                            l101 17AC                            l103 1AC4  
                          l104 1928                            l121 2A48                            l130 2B76  
                          l122 2A9C                            l131 2BD6                            l107 1AE0  
                          l124 2AAA                            l116 2EDC                            l125 2B02  
                          l134 39A8                            l127 2B10                            l119 2A3A  
                          l128 2B68                            l171 3D5A                            l180 3E28  
                          l340 394A                            l165 3D32                            l174 3E32  
                          l183 3E1E                            l168 3D34                            l432 3DE0  
                          l177 3E3C                            l441 3DFE                            l186 3BB2  
                          l450 3CA0                            l515 3808                            l444 3E12  
                          l516 3828                            l279 3DFA                            l742 3632  
                          l495 3DA2                            l729 3410                            l498 3D80  
                          l763 3216                            l757 378A                            l943 334C  
                          l768 325C                            l936 332C                            l795 3158  
                          _abs 3CD6                            _pad 382A            convert_rgb2hue@cMax 004C  
                 ___awmod@sign 0006            convert_rgb2hue@diff 00A6                            wreg 0FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                   ___fltol@exp1 000A  
                         l1112 2066                           l1201 38BA                           l1121 22D4  
                         l1122 22C2                           l1026 1CD0                           l1043 1DEA  
                         l1035 1FA0                           l1027 1CBE                           ?_abs 0007  
                         l1204 2F3C                           l1116 23CA                           l1052 1EBA  
                         l1028 1C84                           l1221 36D8                           l1053 1EA8  
                         l1134 27EC                           l1119 225C                           l1240 2D5C  
                         l1080 2764                           l1217 3052                           l1225 36E0  
                         l1129 238C                           l1137 2A0E                           l1250 3CF0  
                         l1082 25C4                           l1091 260A                           l1068 3B2E  
                         l1148 2960                           l1253 3D08                           l1093 2682  
                         l1085 2588                           l1149 298E                           l1246 3B70  
                         l1094 2670                           l3110 1AEE                           l1176 3C2E  
                         l3200 1CA2                           l3120 1B2E                           l3112 1AFC  
                         l1265 34CA                           l1273 3BF2                           l3210 1CEE  
                         l3202 1CB0                           l3130 1B60                           l3122 1B30  
                         l3114 1AFE                           l1276 3E3E                           l1196 385E  
                         l3300 1F7A                           l3220 1D2E                           l3204 1CB2  
                         l3140 1B88                           l3132 1B62                           l3116 1B0E  
                         l3124 1B38                           l3108 1AE2                           l3302 1F80  
                         l3230 1D58                           l3222 1D3A                           l3214 1D02  
                         l3206 1CBC                           l3150 1BC2                           l3142 1B98  
                         l3134 1B68                           l3126 1B48                           l3118 1B1E  
                         l1199 389C                           l3400 23F8                           l3304 1F8E  
                         l3240 1DCA                           l3224 1D3E                           l3216 1D12  
                         l3208 1CDE                           l3232 1D5E                           l3160 1BEE  
                         l3152 1BD4                           l3144 1BA8                           l3136 1B76  
                         l3128 1B4E                           l4050 3DF8                           l4042 3DE2  
                         l3410 2432                           l3402 2408                           l3306 1F90  
                         l3250 1E24                           l3234 1D84                           l3242 1DDA  
                         l3226 1D4C                           l3218 1D20                           l3170 1C02  
                         l3162 1BF2                           l3154 1BE2                           l3146 1BAA  
                         l3138 1B78                           l5010 34D8                           l4044 3DEC  
                         l4060 3DDC                           l4052 3DC4                           l3500 269E  
                         l3420 245E                           l3412 2438                           l3404 2418  
                         l3260 1E54                           l3252 1E2E                           l3244 1E00  
                         l3236 1DB8                           l3228 1D4E                           l3180 1C16  
                         l3172 1C06                           l3164 1BF6                           l3156 1BE6  
                         l3148 1BB2                           l5020 34F2                           l5012 34D8  
                         l5004 34CC                           l4046 3DF4                           l4070 38F6  
                         l4062 3DDE                           l4054 3DCE                           l3510 270A  
                         l3502 26AC                           l3430 2498                           l3422 246E  
                         l3414 243E                           l3406 241A                           l3270 1E7C  
                         l3262 1E58                           l3254 1E3C                           l3246 1E10  
                         l3238 1DBA                           l3190 1C50                           l3182 1C1A  
                         l3174 1C0A                           l3166 1BFA                           l3158 1BEA  
                         l5030 3512                           l5022 34FA                           l5014 34E4  
                         l5006 34D0                           l4048 3DF6                           l4080 3932  
                         l4072 391A                           l4064 38BC                           l4056 3DD0  
                         l3520 2758                           l3512 2724                           l3504 26D6  
                         l3432 24AE                           l3424 247E                           l3416 244C  
                         l3408 2422                           l3600 218E                           l3280 1ED6  
                         l3272 1E8A                           l3264 1E68                           l3256 1E3E  
                         l3192 1C6C                           l3184 1C1E                           l3176 1C0E  
                         l3168 1BFE                           l5040 3534                           l5032 3516  
                         l5024 3502                           l5016 34EA                           l5008 34D4  
                         l4410 336C                           l4402 334E                           l4082 393C  
                         l4074 3924                           l4066 38CC                           l4058 3DDA  
                         l3522 275A                           l3514 2740                           l3506 26DA  
                         l3450 2502                           l3434 24BE                           l3442 24DE  
                         l3426 2480                           l3418 244E                           l3610 2224  
                         l3602 219A                           l3530 1FA2                           l3290 1F40  
                         l3282 1EE4                           l3274 1EA0                           l3258 1E4C  
                         l3266 1E6A                           l3194 1C7C                           l3178 1C12  
                         l3186 1C22                           l5050 353E                           l5042 3536  
                         l5034 352E                           l5026 350A                           l5018 34EE  
                         l4420 33A0                           l4412 337A                           l4404 3352  
                         l4500 3CE4                           l4084 393E                           l4076 3926  
                         l4068 38F2                           l3516 2744                           l3508 26F4  
                         l3460 2554                           l3452 251C                           l3444 24EE  
                         l3436 24C6                           l3428 2488                           l3700 325A  
                         l3620 227A                           l3612 2242                           l3604 21B6  
                         l3540 1FDE                           l3532 1FAE                           l3292 1F60  
                         l3284 1F1E                           l3268 1E78                           l3196 1C92  
                         l3188 1C26                           l5060 354A                           l5052 3540  
                         l5044 3538                           l5036 3530                           l5028 350E  
                         l4430 33DA                           l4422 33A8                           l4414 3382  
                         l4406 3360                           l4510 2F0E                           l4502 2EDE  
                         l4086 3948                           l4078 3930                           l3518 2752  
                         l3470 25B0                           l3462 2564                           l3454 252C  
                         l3446 24EE                           l3438 24CA                           l3630 22E4  
                         l3622 227E                           l3614 224C                           l3606 21E0  
                         l3550 2010                           l3542 1FEE                           l3534 1FBC  
                         l3294 1F64                           l3278 1ECA                           l3286 1F20  
                         l3198 1C9E                           l3710 307E                           l3390 37D8  
                         l3382 378C                           l5070 3568                           l5062 354C  
                         l5054 3542                           l5046 353A                           l5038 3532  
                         l4440 3400                           l4432 33E2                           l4424 33B0  
                         l4416 3386                           l4408 3368                           l4520 2F44  
                         l4512 2F14                           l4504 2EE2                           l4600 2CB4  
                         l3480 25F0                           l3472 25B2                           l3464 2578  
                         l3456 253C                           l3392 23CC                           l3640 2346  
                         l3632 22F0                           l3624 228C                           l3616 225A  
                         l3608 2216                           l3560 2050                           l3552 201E  
                         l3544 1FF4                           l3536 1FBE                           l3296 1F72  
                         l3288 1F30                           l3720 30CC                           l3712 30A8  
                         l3704 3054                           l3384 3798                           l3800 2950  
                         l5072 356C                           l5064 3562                           l5056 3544  
                         l5048 353C                           l4442 3408                           l4434 33E4  
                         l4426 33BE                           l4418 338E                           l4450 3596  
                         l4530 2F90                           l4522 2F4E                           l4514 2F24  
                         l4506 2EF6                           l4602 2CD4                           l3490 262C  
                         l3482 25FA                           l3474 25C2                           l3466 2586  
                         l3458 254C                           l3394 23D8                           l3650 23AE  
                         l3642 235A                           l3634 22FE                           l3626 22BA  
                         l3618 226C                           l3570 209A                           l3562 2056  
                         l3554 2020                           l3546 2004                           l3538 1FCE  
                         l3298 1F78                           l3730 30F8                           l3714 30AA  
                         l3706 306A                           l3386 37A6                           l3810 29FE  
                         l3802 296E                           l5074 3578                           l5066 3564  
                         l5058 3548                           l4436 33EA                           l4428 33C4  
                         l4460 35CA                           l4452 359E                           l4380 343C  
                         l4540 3002                           l4524 2F54                           l4532 2FAC  
                         l4516 2F30                           l4508 2EFE                           l4612 2D2A  
                         l4604 2CF4                           l4700 3C10                           l3820 3D1C  
                         l3492 263A                           l3484 2608                           l3476 25D4  
                         l3468 2592                           l3396 23E6                           l3652 23B0  
                         l3644 2374                           l3636 2328                           l3580 20EA  
                         l3572 20A6                           l3564 2076                           l3556 2030  
                         l3548 200A                           l3660 3AEA                           l3740 3128  
                         l3716 30BA                           l3388 37C6                           l3804 29DE  
                         l5068 3566                           l4630 3E16                           l4710 3C7C  
                         l4438 33F0                           l4470 3606                           l4462 35D2  
                         l4454 35A2                           l4446 3584                           l4382 3458  
                         l4374 3412                           l4390 3BC0                           l4534 2FC6  
                         l4542 3010                           l4526 2F86                           l4518 2F38  
                         l4606 2D0C                           l5158 2C5E                           l4702 3C20  
                         l3822 3D1E                           l3814 3D0A                           l3494 2668  
                         l3478 25EA                           l3486 261A                           l3398 23E8  
                         l3670 3720                           l3646 2390                           l3654 23B6  
                         l3638 232C                           l3590 212C                           l3582 20F6  
                         l3574 20B0                           l3566 2086                           l3558 2040  
                         l3662 3AFA                           l3742 3138                           l3726 30E4  
                         l3718 30BE                           l3750 326A                           l3806 29EE  
                         ?_pad 000F                           l4640 3E38                           l4632 3E1A  
                         l4712 3C80                           l4472 360C                           l4464 35DA  
                         l4456 35B0                           l4448 3588                           l4384 348A  
                         l4376 3422                           l4392 3BCE                           l4544 3020  
                         l4536 2FD8                           l4528 2F8A                           l4560 3686  
                         l4552 3634                           l4608 2D16                           l4616 2D36  
                         l3824 3D20                           l3816 3D14                           l3488 2628  
                         l3672 374E                           l3656 23BA                           l3648 23A0  
                         l3592 2138                           l3584 2102                           l3576 20C6  
                         l3744 3148                           l3736 310C                           l3728 30EE  
                         l3760 32C4                           l3752 3288                           l3808 29FC  
                         l4650 3BAE                           l4642 3B74                           l4626 3E2A  
                         l4634 3E20                           l4714 3C88                           l4706 3C6A  
                         l4466 35E8                           l4474 3612                           l4458 35B8  
                         l4378 3432                           l4394 3BD2                           l4490 386A  
                         l4482 382A                           l4546 3026                           l4538 2FE8  
                         l4562 36A6                           l4554 363C                           l4570 2BD8  
                         l3818 3D1A                           l3498 2692                           l3674 375E  
                         l3666 36E2                           l3690 31D6                           l3682 315A  
                         l3594 2148                           l3586 2110                           l3578 20D2  
                         l3738 3118                           l3762 32F2                           l3754 3290  
                         l3770 2768                           l4652 3BB0                           l4644 3B78  
                         l4628 3E2E                           l4636 3E24                           l4708 3C6E  
                         l4476 3622                           l4468 35FE                           l4388 3BB4  
                         l4492 387A                           l4484 3838                           l4548 3036  
                         l4396 3D5C                           l4556 3662                           l4564 36AE  
                         l4580 2C20                           l4572 2BFE                           l4660 3B30  
                         l4900 2A16                           l4732 3DA6                           l3676 3782  
                         l3668 3710                           l3692 31E4                           l3684 3188  
                         l3596 2162                           l3588 211C                           l3764 3312  
                         l3756 32A4                           l3748 325E                           l3772 2778  
                         l4740 0FEC                           l4566 3D34                           l4646 3B80  
                         l4638 3E34                           l4670 39AA                           l4478 362A  
                         l4494 387E                           l4486 3848                           l4398 3D78  
                         l4558 366A                           l4582 2C22                           l4590 2C6C  
                         l4574 2C06                           l4662 3B38                           l4910 2A78  
                         l4902 2A30                           l3678 3788                           l3694 31F6  
                         l3686 3198                           l3598 2172                           l3766 3314  
                         l3758 32B2                           l3790 28B2                           l3782 283E  
                         l3774 2786                           l4750 1584                           l4742 105C  
                         l4734 0EF6                           l4568 3D44                           l4648 3B88  
                         l4672 39F0                           l4656 3DFE                           l4496 38AA  
                         l4488 3856                           l4592 2C7C                           l4584 2C2E  
                         l4576 2C14                           l4664 3B48                           l4920 2ADE  
                         l4912 2A92                           l4904 2A4A                           l3696 3204  
                         l3688 31C6                           l3768 3326                           l3792 28C6  
                         l3784 2846                           l3776 280C                           l4760 1686  
                         l4752 15B8                           l4744 11FE                           l4736 0F08  
                         l4682 3A9A                           l4690 3A90                           l4658 3E0E  
                         l4498 3CD6                           l4594 2C90                           l4578 2C18  
                         l4666 3B68                           l4930 2B44                           l4922 2AF8  
                         l4914 2AAC                           l4906 2A62                           l4850 3CC0  
                         l3698 3254                           l3794 28D8                           l3786 285A  
                         l3778 282A                           l4770 1788                           l4762 16BA  
                         l4754 15EA                           l4746 121C                           l4738 0F7C  
                         l4684 3AE0                           l4676 39FA                           l4596 2CA0  
                         l4588 2C36                           l4940 2BAE                           l4932 2B5E  
                         l4924 2B12                           l4916 2AC4                           l4908 2A76  
                         l4852 3CCA                           l4844 3CA2                           l3796 292E  
                         l3788 28B0                           l4780 1868                           l4772 17BC  
                         l4764 16EC                           l4756 161C                           l4748 1550  
                         l4860 2D68                           l4678 3A40                           l4598 2CAA  
                         l4694 3BF4                           l4942 2BB0                           l4934 2B7C  
                         l4926 2B2A                           l4918 2ADC                           l4846 3CA6  
                         l3798 2942                           l4790 1A90                           l4782 195A  
                         l4774 17EE                           l4766 171E                           l4758 1654  
                         l4870 2DC4                           l4862 2D7A                           l4854 2D5E  
                         l4688 3A4A                           l4696 3C00                           l4944 2BB2  
                         l4936 2B94                           l4928 2B42                           l4848 3CB0  
                         l4784 198C                           l4776 1804                           l4768 1756  
                         l4880 2E4A                           l4872 2DEE                           l4864 2D80  
                         l4698 3C08                           l4946 2BCC                           l4938 2BAC  
                         l4786 1A4C                           l4778 1836                           l4794 394C  
                         l4890 2E9C                           l4882 2E50                           l4874 2E04  
                         l4866 2DAA                           l4788 1A80                           l4796 3D82  
                         l4892 2EA8                           l4884 2E68                           l4876 2E0A  
                         l4868 2DBE                           l4798 3D98                           l4894 2EC0  
                         l4886 2E74                           l4878 2E34                           l4896 2EC6  
                         l4888 2E80                           l4898 2A10                           STR_1 0EB4  
                         STR_2 0EA1                           STR_3 0ED6                           STR_4 0EC5  
                         STR_5 0E74                           STR_6 0EF3                           STR_7 0E23  
                         STR_8 0EF3                           STR_9 0E40                           u3000 2408  
                         u3001 2404                           u3010 244C                           u3011 2448  
                         u3100 25EA                           u3020 245E                           u3101 25E6  
                         u3021 245A                           u3110 2608                           u3030 246E  
                         u3111 2604                           u3031 246A                           u3200 2752  
                         u3120 2628                           u3040 24AE                   _BAUD4CONbits 0EE9  
                         u3201 274E                           u3121 2624                           u3041 24AA  
                         u3130 263A                           u3050 24EE                           u3210 1FBC  
                         u3131 2636                           u3051 24EA                           u3211 1FB8  
                         u3140 2668                           u3060 2564                           u3300 225A  
                         u3220 1FCE                           u3141 2664                           u3061 2560  
                         u3301 2256                           u3221 1FCA                           u3150 267E  
                         u3070 2586                           u3310 227A                           u3230 1FDE  
                         u3151 267A                           u3071 2582                           u3311 2276  
                         u3231 1FDA                           u4200 3BF2                           u3160 2692  
                         u3080 25B0                           u3400 3710                           u3320 228C  
                         u3240 201E                           u2600 1BE2                           u2520 1AFC  
                         u4201 3BEE                           u3161 268E                           u3081 25AC  
                         u3401 370C                           u3321 2288                           u3241 201A  
                         u2601 1BDE                           u2521 1AF8                           u4210 3360  
                         u3170 26AC                           u3090 25D4                           u3410 374E  
                         u3330 22BA                           u3250 2030                           u2610 1C50  
                         u2530 1B0E                           _T2PR 0FBC                           u4211 335C  
                         u3171 26A8                           u3091 25D0                           u3411 374A  
                         u3331 22B6                           u3251 202C                           u2611 1C4C  
                         u2531 1B0A                           u4220 337A                           u4300 35E8  
                         u3180 26F4                           u3420 3782                           u3340 22D0  
                         u3260 2040                           u2700 1D2E                           u2620 1C68  
                         u2540 1B1E                           u3500 30CC                           u4221 3376  
                         u4301 35E4                           u3181 26F0                           u3421 377E  
                         u3341 22CC                           u3261 203C                           u2701 1D2A  
                         u2621 1C62                           u2541 1B1A                           u3501 30C8  
                         u4230 33A0                           u4310 35FE                           u3190 2724  
                         u3430 3188                           u3350 22E4                           u3270 2076  
                         u2710 1D4C                           u2630 1C6A                           u2550 1B60  
                         u3510 30E0                           u4231 339C                           u4311 35FA  
                         u3191 2720                           u3431 3184                           u3351 22E0  
                         u3271 2072                           u2711 1D48                           u2551 1B5C  
                         u3511 30DC                           u5007 3556                           u4240 33BE  
                         u4320 3622                           u4160 3422                           u4400 2F0E  
                         u3440 31C6                           u3360 22FE                           u3280 2086  
                         u2800 1E8A                           u2720 1D84                           u2640 1C92  
                         u2560 1B76                           u3520 3108                           u3600 2786  
                         u4241 33BA                           u4321 361E                           u4161 341E  
                         u4401 2F0A                           u3441 31C2                           u3361 22FA  
                         u3281 2082                           u2801 1E86                           u2721 1D80  
                         u2641 1C8E                           u2561 1B72                           u3521 3104  
                         u3601 2782                           u5017 2EB2                           u4250 33DA  
                         u4170 3432                           u4330 3838                           u4410 2F24  
                         u3450 31E4                           u3370 2346                           u3290 2200  
                         u2810 1EA0                           u2730 1DCA                           u2650 1CB0  
                         u2570 1B88                           u3530 3128                           u3610 282A  
                         u4251 33D6                           u4171 342E                           u4331 3834  
                         u4411 2F20                           u5027 3CB6                           u3451 31E0  
                         u3371 2342                           u2811 1E9C                           u2731 1DC6  
                         u2651 1CAC                           u2571 1B84                           u3531 3124  
                         u3611 2826                           u4500 3D44                           u4260 3400  
                         u4180 3458                           u4340 3856                           u4420 2FC6  
                         u3460 3204                           u3380 2374                           u2900 1F8E  
                         u2820 1EB6                           u2740 1E00                           u2660 1CD0  
                         u2580 1B98                           u3540 3138                           u3620 28AC  
                         u4501 3D40                           u4261 33FC                           u4181 3454  
                         u4341 3852                           u4421 2FC2                           u5037 2A54  
                         u3461 3200                           u3381 2370                           u2901 1F8A  
                         u2821 1EB2                           u2741 1DFC                           u2661 1CCC  
                         u2581 1B94                           u3541 3134                           u3621 28A8  
                         u4510 3D5A                           u4270 3596                           u4190 348A  
                         u4350 389C                           u4430 2FD8                           u3470 3254  
                         u3390 23AE                           u2830 1ECA                           u2750 1E10  
                         u2670 1CDE                           u2590 1BD4                           u3630 292A  
                         u4511 3D56                           u4271 3592                           u4191 3486  
                         u4351 3898                           u4431 2FD4                           u5047 2AB6  
                         u3471 3250                           u3391 23AA                           u3295 21F6  
                         u2831 1EC6                           u2751 1E0C                           u2671 1CDA  
                         u2591 1BD0                           u3551 3264                           u3631 2926  
                         u4280 35B0                           u4360 38AA                           u4440 2FE8  
                         u4520 2BFE                           u4600 3B68                           u2840 1EE4  
                         u2760 1E3C                           u2680 1CEE                           u3480 306A  
                         u3560 3288                           u3640 2950                           u4281 35AC  
                         u4361 38A6                           u4441 2FE4                           u4521 2BFA  
                         u4601 3B64                           u5057 2B1C                           u2841 1EE0  
                         u2761 1E38                           u2681 1CEA                           u3481 3066  
                         u3561 3284                           u3641 294C                           u4610 3CA0  
                         u4290 35CA                           u4370 3CE4                           u4450 3002  
                         u4530 2C7C                           u2850 1F1E                           u2770 1E4C  
                         u2690 1D20                           u3490 309E                           u3570 32B2  
                         u3650 2960                           u4611 3C9C                           u4291 35C6  
                         u4371 3CE0                           u4451 2FFE                           u4531 2C78  
                         u5067 2B86                           u2851 1F1A                           u2771 1E48  
                         u2691 1D1C                           u3571 32AE                           u3651 295C  
                         u4460 3010                           u4380 2EF2                           u4540 2CA0  
                         u2860 1F30                           u2780 1E68                           u3580 32F2  
                         u3660 296E                           u4700 1788                           u5077 3C82  
                         u4461 300C                           u4381 2EEC                           u4541 2C9C  
                         u2861 1F2C                           u2781 1E64                           u3581 32EE  
                         u3661 296A                           u4701 1784                           u4470 3020  
                         u4390 2EF4                           u4550 2CD4                           u2870 1F40  
                         u2790 1E78                           u3670 29EE                           u3590 2778  
                         u4710 17EE                           u4471 301C                           u4551 2CD0  
                         u2871 1F3C                           u2791 1E74                           u3495 3094  
                         u2951 3792                           u3671 29EA                           u3591 2774  
                         u4711 17EA                           u4480 3662                           u4560 2CF4  
                         u2880 1F60                           u2960 37A6                           u3680 29FC  
                         u4720 1836                           u4640 121C                           u4481 365E  
                         u4561 2CF0                           u2881 1F5C                           u2961 37A2  
                         u3681 29F8                           u4721 1832                           u4641 1218  
                         u4570 3B9C                           u4490 36D8                           u2890 1F72  
                         u2970 3808                           u4730 1868                           u4650 15EA  
                         u4571 3B94                           u4491 36D4                           u2891 1F6E  
                         u2971 3804                           u4731 1864                           u4651 15E6  
                         u4900 2A48                           u2980 23E6                           u4740 195A  
                         u4660 161C                           u4820 2D7A                           u4901 2A44  
                         u2981 23E2                           u4741 1956                           u4661 1618  
                         u4821 2D76                           u4590 3E0E                           u4910 2AAA  
                         u2990 23F8                           u4750 198C                           u4670 1686  
                         u4830 2D9E                           u4591 3E0A                           u4911 2AA6  
                         u2991 23F4                           u4751 1988                           u4671 1682  
                         u4831 2D96                           u4920 2B10                           u4760 1A90  
                         u4680 16EC                           u4840 2DBE                           u4921 2B0C  
                         u4761 1A8C                           u4681 16E8                           u4841 2DBA  
                         u4930 2B76                           u4690 171E                           u4850 2DE2  
                         u4931 2B72                           u4691 171A                           u4851 2DDA  
                         u4588 3B9E                           u4860 2E04                           u4861 2E00  
                         u4870 2E28                           u4838 2DA0                           u4871 2E20  
                         u4880 2E4A                           u4881 2E46                           u4890 2EDC  
                         u4858 2DE4                           u4891 2ED8                           u4878 2E2A  
                         abs@a 0007                           _dbuf 0150                           _main 34CC  
                         _dtoa 2EDE           convert_rgb2hue@cCurr 004E                           _prec 00EC  
                         _test 2D5E                           pad@i 0015                           pad@p 0012  
                         fsr1h 0FE2                           fsr2h 0FDA                           indf2 0FDF  
                         fsr1l 0FE1                           fsr2l 0FD9                           prodh 0FF4  
                         prodl 0FF3                           start 0000               __end_of_ADC_init 3DFC  
              ___fldiv@new_exp 002A           convert_rgb2hue@total 00AA         __end_of_color_read_Red 39FA  
                 ___param_bank 0000                          ??_abs 0009                          ??_pad 0014  
                ___fltol@sign1 0009                __end_of___fladd 1FA2                          ?_main 0001  
                        ?_dtoa 0017                          _ADPCH 0F5F                __end_of___fldiv 2766  
              __end_of___awdiv 3412                          STR_10 0EF3                          STR_11 0E01  
                        STR_12 0EF3                          STR_13 0E5B                          STR_14 0EF3  
                        STR_15 0E8C                          STR_16 0EE7                __end_of___awmod 3634  
              __end_of___flmul 23CC                          ?_test 0001                __end_of___flsub 3B30  
              __end_of___fltol 315A                __end_of___lodiv 334E                ___awdiv@divisor 0003  
              ___awdiv@counter 0005              ??_convert_rgb2hue 0060                   vfpfcnvrt@fmt 0023  
      __end_of_sendCharSerial4 3E14     __end_of_I2C_2_Master_Start 3E34     __end_of_I2C_2_Master_Write 3E20  
                        _flags 0054            read_prec_or_width@c 0009            read_prec_or_width@n 000A  
                        _fputc 3412                          _fputs 3BB4                          pad@fp 000F  
                        _width 00EA                          _putch 3E3E                          dtoa@d 0018  
                        dtoa@i 0020                          dtoa@p 001C                          dtoa@s 001F  
                        dtoa@w 001D                          tablat 0FF5                          status 0FD8  
              __end_of_sprintf 3C30               ___lodiv@dividend 0019        __end_of_color_read_Blue 3AEA  
        _I2C_2_Master_RepStart 3E34                ?_color_read_Red 0005                __initialization 3C30  
                 __end_of_main 3584                   __end_of_dtoa 3054                   __end_of_test 2EDE  
             ??_reading_values 000E                         ??_main 0052                         ??_dtoa 001A  
                       ??_test 0050                  __activetblptr 0003     __end_of_read_prec_or_width 36E2  
             ___lodiv@quotient 0029                         ?_fputc 0001                         ?_fputs 0009  
                       _ADRESH 0F64                         _CCPR1H 0FAA                         _CCPR2H 0FA6  
                       _CCPR3H 0F25                         _CCPR4H 0F21               ___awdiv@dividend 0001  
                       ?_putch 0001                         _RC0PPS 0E62                         _RC4REG 0EE3  
                       _RE2PPS 0E74                         _RD5PPS 0E6F                         _RC7PPS 0E69  
                       _RE4PPS 0E76                         _RD6PPS 0E70                         _RG6PPS 0E88  
                vfpfcnvrt@done 002B       __end_of_color_click_init 3CD6                         _RX4PPS 0E15  
                       _TX4REG 0EE4               __end_of___xotofl 2A10                   _CCPTMRS0bits 0FAD  
                 vfprintf@cfmt 0030                         ___flge 315A                         ___fleq 36E2  
                       ___omul 378C                      ??___fladd 0009                         ___wmul 3D5C  
                    ??___fldiv 0021                      ??___awdiv 0005                      ??___awmod 0005  
                    ??___flmul 0009                      ??___flsub 0019                      ??___fltol 0005  
                    ??___lodiv 0029                   ___xotofl@arg 0044                   ___xotofl@exp 0043  
                 ___xotofl@val 0032           read_prec_or_width@ap 0008                         clear_0 3C48  
                       clear_1 3C54               ___awdiv@quotient 0007                ___awmod@divisor 0003  
                       _motorL 0179                         _motorR 0170                         isa$std 0001  
              ___awmod@counter 0005             send2USART@hue_char 0060                         pad@buf 0010  
                       dtoa@fp 0017                         fputc@c 0001                         fputs@c 000C  
                       fputs@i 000D                         fputs@s 0009                   __mediumconst 0000  
      calibration_routine@cCal 0045                         tblptrh 0FF7                         tblptrl 0FF6  
                       tblptru 0FF8                      ?_ADC_init 0001               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 3B72              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0038                     ___flge@ff1 0001                     ___flge@ff2 0005  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005                     __accesstop 0060  
      __end_of__initialization 3C64       __end_of_color_read_Clear 3A9A       __end_of_color_read_Green 3A4A  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 0001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                 __pcstackCOMRAM 0001                   __pidataBANK0 3E40  
                __end_of_fputc 34CC                  __end_of_fputs 3BF4                  __end_of_putch 3E40  
                   ??_ADC_init 0001                        ??_fputc 0004                        ??_fputs 000C  
                      ??_putch 0001                     __pbssBANK0 00D6                     __pbssBANK1 0100  
            _color_writetoaddr 3DA4                   _T2CLKCONbits 0FBF                _convert_rgb2hue 0EF6  
                      ?___flge 0001                        ?___fleq 0001             ?_color_writetoaddr 0003  
                      ?___omul 0001                        ?___wmul 0001            ___omul@multiplicand 0009  
          ??_color_writetoaddr 0004                      ?___xotofl 0032            _convert_rgb2hue$305 0096  
          _convert_rgb2hue$306 009A            _convert_rgb2hue$307 009E            _convert_rgb2hue$308 00A2  
                      _SP4BRGH 0EE6                        _SP4BRGL 0EE5                        _SSP2ADD 0ED6  
                      _SSP2BUF 0ED5         color_writetoaddr@value 0003               ??_color_read_Red 0007  
    __end_of_color_writetoaddr 3DC4                      _ADREFbits 0F58             _I2C_2_Master_Start 3E2A  
                   _initUSART4 3DC4             _I2C_2_Master_Write 3E14                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A        sendStringSerial4@string 0002  
                      ___fladd 1AE2                        ___fldiv 23CC                        ___awdiv 334E  
                      ___awmod 3584                        ___flmul 1FA2                        ___flsub 3AEA  
                      ___fltol 3054                        ___lodiv 325E            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 002D                   __psmallconst 0E00  
                      __pcinit 3C30                        __ramtop 0E00                     _send2USART 3D82  
                      __ptext0 34CC                        __ptext1 2D5E                        __ptext2 3D82  
                      __ptext3 394C                        __ptext4 0EF6                        __ptext5 2766  
                      __ptext6 378C                        __ptext7 325E                        __ptext8 3054  
                      __ptext9 3AEA                  ___xotofl@sign 0042                     ??___xotofl 003A  
                    _T2CONbits 0FBD          read_prec_or_width@fmt 0007               ___awmod@dividend 0001  
                    _T2HLTbits 0FBE                  _RxBufWriteCnt 0058                        _sprintf 3BF4  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 3C64  
               ___omul@product 0011                        fputc@fp 0003        __end_of_convert_rgb2hue 1AE2  
                      fputs@fp 000B              ?_color_click_init 0001             _read_prec_or_width 3634  
           ??_color_click_init 0005               _colorCalibration 018A                        test@hue 01C4  
            __end_of_vfpfcnvrt 2D5E                        postdec2 0FDD            ?_read_prec_or_width 0007  
                      postinc0 0FEE                        postinc1 0FE6                        postinc2 0FDE  
             vfpfcnvrt@convarg 0027                     ??_vfprintf 0030                   _colorCurrent 0182  
              _initDCmotorsPWM 38BC                      _PORTFbits 0F8E                    ___fladd@grs 0010  
                    _TRISAbits 0F81                      _TRISCbits 0F83                      _TRISDbits 0F84  
                    _TRISEbits 0F85                      _TRISFbits 0F86                      _TRISGbits 0F87  
                    _TRISHbits 0F88               convert_rgb2hue@b 00D2           ??_read_prec_or_width 0009  
             convert_rgb2hue@g 00CE                    ___fldiv@grs 002C               convert_rgb2hue@r 00CA  
                  ___fldiv@rem 0025       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ___flmul@grs 000E                    _CCP1CONbits 0FAB            _calibration_routine 2A10  
            ?_color_read_Clear 0005                   _EUSART4RXbuf 00D6                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 0FA7              ?_color_read_Green 0005                    _CCP3CONbits 0F26  
                  ?_initUSART4 0001                    _CCP4CONbits 0F22      sendCharSerial4@charToSend 0001  
           ??_color_read_Clear 0007             ??_color_read_Green 0007                 __end_of___flge 325E  
               __end_of___fleq 378C                 __end_of___omul 382A                    vfpfcnvrt@ap 0024  
                  vfpfcnvrt@cp 002C                    vfpfcnvrt@fp 0022                 __end_of___wmul 3D82  
                  ?_send2USART 0045           ?_calibration_routine 0045            color_read_Clear@tmp 000A  
          start_initialization 3C30                ___lodiv@divisor 0021                ___lodiv@counter 0031  
 calibration_routine@cal_state 0060                    __end_of_abs 3D0A                    __end_of_pad 38BC  
                _TxBufWriteCnt 0056              ___omul@multiplier 0001               ?_convert_rgb2hue 004C  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 394C                    vfprintf@fmt 002E  
                     ??___flge 0009                       ??___fleq 0009                       ??___omul 0011  
                     ??___wmul 0005                    __pdataBANK0 00EF          ??_calibration_routine 0047  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 001D  
                    ___fldiv@b 0019                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 0054                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 0060                  __pcstackBANK1 0192                      _dtoa$2547 001A  
                     ?___fladd 0001                       ?___fldiv 0019                       ?___awdiv 0001  
                     ?___awmod 0001                       ?___flmul 0001                       ?___flsub 0011  
                     ?___fltol 0001                       ?___lodiv 0019                   _readingIndex 00EE  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 3D34              _I2C_2_Master_Init 3D0A              _I2C_2_Master_Read 3B72  
            _I2C_2_Master_Stop 3E20                   _RxBufReadCnt 0057                       _ADC_init 3DE2  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0031  
            _sendStringSerial4 3C6A            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 0F79  
          ??_I2C_2_Master_Stop 0002                       _LATCbits 0F7B                       _LATDbits 0F7C  
                     _LATEbits 0F7D                       _LATFbits 0F7E                       _LATGbits 0F7F  
                     _LATHbits 0F80           _convert_rgb2hue$2870 0086           _convert_rgb2hue$2871 008E  
         _convert_rgb2hue$2868 00B6           _convert_rgb2hue$2869 00BE             ?_sendStringSerial4 0002  
                     _PIE4bits 0E2D                       _PIR4bits 0E37            reading_values@cCurr 000C  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 0EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 0ED8                      _vfpfcnvrt 2BD8  
                   _ADCON0bits 0F60      __end_of_I2C_2_Master_Idle 3D5C      __end_of_I2C_2_Master_Init 3D34  
    __end_of_I2C_2_Master_Read 3BB4              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 3E2A  
  I2C_2_Master_Write@data_byte 0002                    _ldrReadings 013C              ??_color_read_Blue 0007  
                 _TxBufReadCnt 0055                 _reading_values 394C      __end_of_sendStringSerial4 3CA2  
__end_of_I2C_2_Master_RepStart 3E3E             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 002F                       __Lrparam 0000  
                   vfprintf@fp 002D                     ?_vfpfcnvrt 0022                   ??_send2USART 0047  
                   _ANSELDbits 0EA7                     _ANSELFbits 0EB4                       ___xotofl 2766  
                     _dataFlag 00EF                     sprintf@fmt 0033         __end_of_reading_values 39AA  
                test@led_state 0192             __end_of_initUSART4 3DE2                       __ptext10 1AE2  
                     __ptext11 1FA2                       __ptext20 2A10                       __ptext12 315A  
                     __ptext21 3BF4                       __ptext13 36E2                       __ptext30 3E3E  
                     __ptext22 3B30                       __ptext14 23CC                       __ptext31 3CD6  
                     __ptext23 2BD8                       __ptext15 3DC4                       __ptext40 3E14  
                     __ptext32 3584                       __ptext24 3634                       __ptext16 38BC  
                     __ptext41 3E20                       __ptext33 334E                       __ptext25 3D5C  
                     __ptext17 3CA2                       __ptext42 3E2A                       __ptext34 3C6A  
                     __ptext26 2EDE                       __ptext18 3DA4                       __ptext43 3E34  
                     __ptext35 3DFC                       __ptext27 382A                       __ptext19 3D0A  
                     __ptext44 3B72                       __ptext36 39AA                       __ptext28 3BB4  
                     __ptext45 3D34                       __ptext37 39FA                       __ptext29 3412  
                     __ptext46 3DE2                       __ptext38 3A4A                       __ptext39 3A9A  
                 _SSP2CON1bits 0ED9                   _SSP2CON2bits 0EDA             __end_of_send2USART 3DA4  
                    test@combo 01C6                       isa$xinst 0000                     _RC4STAbits 0EE7  
                     _vfprintf 3B30                ?_reading_values 000C                      sprintf@ap 0038  
  __end_of_calibration_routine 2BD8                  send2USART@hue 0045                    ??_vfpfcnvrt 0025  
             _color_click_init 3CA2                       sprintf@f 0039                       sprintf@s 0031  
                   _SSP2DATPPS 0E1D                     _SSP2CLKPPS 0E1C                  ___fladd@signs 000D  
                   _TX4STAbits 0EE8                _sendCharSerial4 3DFC                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F  
